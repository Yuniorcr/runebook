<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="d">
    <body>
      <group id="d">
        <trans-unit id="1e53a1afb30c58bcf33a0cc873629ef3c538336d" translate="yes" xml:space="preserve">
          <source>nothrow immutable(char)* &lt;strong id=&quot;sqlite3_sourceid&quot;&gt;sqlite3_sourceid&lt;/strong&gt;();</source>
          <target state="translated">nothrow неизменяемый (char) * &lt;strong id=&quot;sqlite3_sourceid&quot;&gt;sqlite3_sourceid&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="57fcba55bef87b370e512601b6f48d330b2dc5b4" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;rt_hasFinalizerInSegment&quot;&gt;rt_hasFinalizerInSegment&lt;/strong&gt;(void* p, size_t size, uint attr, in void[] segment);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;rt_hasFinalizerInSegment&quot;&gt;rt_hasFinalizerInSegment&lt;/strong&gt; (void * p, размер size_t, атрибут uint, в сегменте void []);</target>
        </trans-unit>
        <trans-unit id="6d7eea0ffbd3770ccdbfec0e2077c4d8520678c2" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_auto_extension&quot;&gt;sqlite3_auto_extension&lt;/strong&gt;(void function() xEntryPoint);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_auto_extension&quot;&gt;sqlite3_auto_extension&lt;/strong&gt; (void function () xEntryPoint);</target>
        </trans-unit>
        <trans-unit id="3eb49d438967631a0dbef3e09d300cc3501c4f22" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_backup_finish&quot;&gt;sqlite3_backup_finish&lt;/strong&gt;(sqlite3_backup* p);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_backup_finish&quot;&gt;sqlite3_backup_finish&lt;/strong&gt; (sqlite3_backup * p);</target>
        </trans-unit>
        <trans-unit id="c5b8390c8fa115fe78b8fbb69725bda38023cf20" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_backup_pagecount&quot;&gt;sqlite3_backup_pagecount&lt;/strong&gt;(sqlite3_backup* p);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_backup_pagecount&quot;&gt;sqlite3_backup_pagecount&lt;/strong&gt; (sqlite3_backup * p);</target>
        </trans-unit>
        <trans-unit id="94f2c6470308c7c1620e98a28e458aa455f6ab93" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_backup_remaining&quot;&gt;sqlite3_backup_remaining&lt;/strong&gt;(sqlite3_backup* p);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_backup_remaining&quot;&gt;sqlite3_backup_remaining&lt;/strong&gt; (sqlite3_backup * p);</target>
        </trans-unit>
        <trans-unit id="a80644a6de1c30b0d638d935a3bf4207b2916722" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_backup_step&quot;&gt;sqlite3_backup_step&lt;/strong&gt;(sqlite3_backup* p, int nPage);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_backup_step&quot;&gt;sqlite3_backup_step&lt;/strong&gt; (sqlite3_backup * p, int nPage);</target>
        </trans-unit>
        <trans-unit id="c991900b43584b381f9e554b09cc86d9d12b4fee" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_blob&quot;&gt;sqlite3_bind_blob&lt;/strong&gt;(sqlite3_stmt*, int, const void*, int n, void function(void*));</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_blob&quot;&gt;sqlite3_bind_blob&lt;/strong&gt; (sqlite3_stmt *, int, const void *, int n, void function (void *));</target>
        </trans-unit>
        <trans-unit id="4b630d9e1a3cee0ef5e849426562e1a72eb48185" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_blob64&quot;&gt;sqlite3_bind_blob64&lt;/strong&gt;(sqlite3_stmt*, int, const void*, sqlite3_uint64, void function(void*));</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_blob64&quot;&gt;sqlite3_bind_blob64&lt;/strong&gt; (sqlite3_stmt *, int, const void *, sqlite3_uint64, void function (void *));</target>
        </trans-unit>
        <trans-unit id="1f45ae46598699e442a59f7f2749550b3fdcebb8" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_double&quot;&gt;sqlite3_bind_double&lt;/strong&gt;(sqlite3_stmt*, int, double);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_double&quot;&gt;sqlite3_bind_double&lt;/strong&gt; (sqlite3_stmt *, int, double);</target>
        </trans-unit>
        <trans-unit id="613b6f7d43bfae0ceca9203f4b76f90df19f7154" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_int&quot;&gt;sqlite3_bind_int&lt;/strong&gt;(sqlite3_stmt*, int, int);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_int&quot;&gt;sqlite3_bind_int&lt;/strong&gt; (sqlite3_stmt *, int, int);</target>
        </trans-unit>
        <trans-unit id="e5d7eb3d972c1f7e534fdc477a3a85b19c990295" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_int64&quot;&gt;sqlite3_bind_int64&lt;/strong&gt;(sqlite3_stmt*, int, sqlite3_int64);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_int64&quot;&gt;sqlite3_bind_int64&lt;/strong&gt; (sqlite3_stmt *, int, sqlite3_int64);</target>
        </trans-unit>
        <trans-unit id="a18095eed96f4cb8320062d63fb6b0acd7580fe3" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_null&quot;&gt;sqlite3_bind_null&lt;/strong&gt;(sqlite3_stmt*, int);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_null&quot;&gt;sqlite3_bind_null&lt;/strong&gt; (sqlite3_stmt *, int);</target>
        </trans-unit>
        <trans-unit id="ca58e73a8d22da96fd7529f6203f0476d1c4cebf" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count&lt;/strong&gt;(sqlite3_stmt*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_parameter_count&quot;&gt;sqlite3_bind_parameter_count&lt;/strong&gt; (sqlite3_stmt *);</target>
        </trans-unit>
        <trans-unit id="7ea213204c37bb3388d3356d372870ead6b20a5d" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index&lt;/strong&gt;(sqlite3_stmt*, const char* zName);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_parameter_index&quot;&gt;sqlite3_bind_parameter_index&lt;/strong&gt; (sqlite3_stmt *, const char * zName);</target>
        </trans-unit>
        <trans-unit id="faf7275ad91162db9dfef94f13c30f9e2fb4f541" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_text&quot;&gt;sqlite3_bind_text&lt;/strong&gt;(sqlite3_stmt*, int, const char*, int n, void function(void*));</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_text&quot;&gt;sqlite3_bind_text&lt;/strong&gt; (sqlite3_stmt *, int, const char *, int n, void function (void *));</target>
        </trans-unit>
        <trans-unit id="f358270b215c82f9186fe74ece401da9e7e4b9ab" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_text16&quot;&gt;sqlite3_bind_text16&lt;/strong&gt;(sqlite3_stmt*, int, const void*, int, void function(void*));</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_text16&quot;&gt;sqlite3_bind_text16&lt;/strong&gt; (sqlite3_stmt *, int, const void *, int, void function (void *));</target>
        </trans-unit>
        <trans-unit id="4edbaccaf083c71d26f3b9cda3ee69c877587376" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_text64&quot;&gt;sqlite3_bind_text64&lt;/strong&gt;(sqlite3_stmt*, int, const char*, sqlite3_uint64, void function(void*), ubyte encoding);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_text64&quot;&gt;sqlite3_bind_text64&lt;/strong&gt; (sqlite3_stmt *, int, const char *, sqlite3_uint64, функция void (void *), кодирование убайта);</target>
        </trans-unit>
        <trans-unit id="bf31c254597b19564a38c77f4405479d36f53a12" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_value&quot;&gt;sqlite3_bind_value&lt;/strong&gt;(sqlite3_stmt*, int, const sqlite3_value*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_value&quot;&gt;sqlite3_bind_value&lt;/strong&gt; (sqlite3_stmt *, int, const sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="4188c00d40ce468a23f027f646b53e86298674a9" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_zeroblob&quot;&gt;sqlite3_bind_zeroblob&lt;/strong&gt;(sqlite3_stmt*, int, int n);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_zeroblob&quot;&gt;sqlite3_bind_zeroblob&lt;/strong&gt; (sqlite3_stmt *, int, int n);</target>
        </trans-unit>
        <trans-unit id="6561460621ea639cb52ad2bb4140ad79f8e82068" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_bind_zeroblob64&quot;&gt;sqlite3_bind_zeroblob64&lt;/strong&gt;(sqlite3_stmt*, int, sqlite3_uint64 n);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_bind_zeroblob64&quot;&gt;sqlite3_bind_zeroblob64&lt;/strong&gt; (sqlite3_stmt *, int, sqlite3_uint64 n);</target>
        </trans-unit>
        <trans-unit id="b91c3d64ad639d0b0cdb279f6f3a08dc58a352a7" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes&lt;/strong&gt;(sqlite3_blob*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_blob_bytes&quot;&gt;sqlite3_blob_bytes&lt;/strong&gt; (sqlite3_blob *);</target>
        </trans-unit>
        <trans-unit id="ca48924ba9afdb0f11fa7245ad0f2a4eb31bc487" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_blob_close&quot;&gt;sqlite3_blob_close&lt;/strong&gt;(sqlite3_blob*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_blob_close&quot;&gt;sqlite3_blob_close&lt;/strong&gt; (sqlite3_blob *);</target>
        </trans-unit>
        <trans-unit id="8d82d5d6d8350e1d294f881ff74ff330800cbcfa" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_blob_open&quot;&gt;sqlite3_blob_open&lt;/strong&gt;(sqlite3*, const(char)* zDb, const(char)* zTable, const(char)* zColumn, sqlite3_int64 iRow, int flags, sqlite3_blob** ppBlob);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_blob_open&quot;&gt;sqlite3_blob_open&lt;/strong&gt; (sqlite3 *, const (char) * zDb, const (char) * zTable, const (char) * zColumn, sqlite3_int64 iRow, int flags, sqlite3_blob ** ppBlob);</target>
        </trans-unit>
        <trans-unit id="7846bca42cabd9e377fdf0810d70c72bb0366acd" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_blob_read&quot;&gt;sqlite3_blob_read&lt;/strong&gt;(sqlite3_blob*, void* Z, int N, int iOffset);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_blob_read&quot;&gt;sqlite3_blob_read&lt;/strong&gt; (sqlite3_blob *, void * Z, int N, int iOffset);</target>
        </trans-unit>
        <trans-unit id="a56dde1361efa6cbe43480ac0171d2f5236ae0ad" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_blob_reopen&quot;&gt;sqlite3_blob_reopen&lt;/strong&gt;(sqlite3_blob*, sqlite3_int64);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_blob_reopen&quot;&gt;sqlite3_blob_reopen&lt;/strong&gt; (sqlite3_blob *, sqlite3_int64);</target>
        </trans-unit>
        <trans-unit id="c0030fa46b5dba881993d8f5981d4d426dda1d61" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_blob_write&quot;&gt;sqlite3_blob_write&lt;/strong&gt;(sqlite3_blob*, const void* z, int n, int iOffset);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_blob_write&quot;&gt;sqlite3_blob_write&lt;/strong&gt; (sqlite3_blob *, const void * z, int n, int iOffset);</target>
        </trans-unit>
        <trans-unit id="06ac8f10c40859e3eaa76be44c371aeaca5cc9aa" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_busy_handler&quot;&gt;sqlite3_busy_handler&lt;/strong&gt;(sqlite3*, int function(void*, int), void*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_busy_handler&quot;&gt;sqlite3_busy_handler&lt;/strong&gt; (sqlite3 *, int function (void *, int), void *);</target>
        </trans-unit>
        <trans-unit id="6804067f19fee83e203cee884dc14b495c98e7d0" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_busy_timeout&quot;&gt;sqlite3_busy_timeout&lt;/strong&gt;(sqlite3*, int ms);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_busy_timeout&quot;&gt;sqlite3_busy_timeout&lt;/strong&gt; (sqlite3 *, int ms);</target>
        </trans-unit>
        <trans-unit id="ef99e29415774d8519e9b5dfed7d6d0acf6bd0ca" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension&lt;/strong&gt;(void function() xEntryPoint);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_cancel_auto_extension&quot;&gt;sqlite3_cancel_auto_extension&lt;/strong&gt; (void function () xEntryPoint);</target>
        </trans-unit>
        <trans-unit id="511559cb718e1fc946619b6dfb5b67de030b1606" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_changes&quot;&gt;sqlite3_changes&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_changes&quot;&gt;sqlite3_changes&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="7074bfdebd656406aeb1db92817de1477c91e7a3" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_clear_bindings&quot;&gt;sqlite3_clear_bindings&lt;/strong&gt;(sqlite3_stmt*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_clear_bindings&quot;&gt;sqlite3_clear_bindings&lt;/strong&gt; (sqlite3_stmt *);</target>
        </trans-unit>
        <trans-unit id="41de189a6e410a8e9ec68f2910c64b593e4ab143" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_close&quot;&gt;sqlite3_close&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_close&quot;&gt;sqlite3_close&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="1b94ce412e2a6ebc0b3b32f2431aa577aa80d10e" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_collation_needed&quot;&gt;sqlite3_collation_needed&lt;/strong&gt;(sqlite3*, void*, void function(void*, sqlite3*, int eTextRep, const char*));</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_collation_needed&quot;&gt;sqlite3_collation_needed&lt;/strong&gt; (sqlite3 *, void *, void function (void *, sqlite3 *, int eTextRep, const char *));</target>
        </trans-unit>
        <trans-unit id="8933a657b5abdf4571debbf41b3047656f767474" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_collation_needed16&quot;&gt;sqlite3_collation_needed16&lt;/strong&gt;(sqlite3*, void*, void function(void*, sqlite3*, int eTextRep, const void*));</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_collation_needed16&quot;&gt;sqlite3_collation_needed16&lt;/strong&gt; (sqlite3 *, void *, void function (void *, sqlite3 *, int eTextRep, const void *));</target>
        </trans-unit>
        <trans-unit id="0cb6e3e415104ae948892f79d7fc83fdd8f45313" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_column_bytes&quot;&gt;sqlite3_column_bytes&lt;/strong&gt;(sqlite3_stmt*, int iCol);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_column_bytes&quot;&gt;sqlite3_column_bytes&lt;/strong&gt; (sqlite3_stmt *, int iCol);</target>
        </trans-unit>
        <trans-unit id="80bdebacdd3145caa90e4fc993a6d2e424a21600" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_column_bytes16&quot;&gt;sqlite3_column_bytes16&lt;/strong&gt;(sqlite3_stmt*, int iCol);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_column_bytes16&quot;&gt;sqlite3_column_bytes16&lt;/strong&gt; (sqlite3_stmt *, int iCol);</target>
        </trans-unit>
        <trans-unit id="ccf1351b8e45cea627d06c79c89f224bcea85cd6" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_column_count&quot;&gt;sqlite3_column_count&lt;/strong&gt;(sqlite3_stmt* pStmt);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_column_count&quot;&gt;sqlite3_column_count&lt;/strong&gt; (sqlite3_stmt * pStmt);</target>
        </trans-unit>
        <trans-unit id="e4b12d656b7acd8f7a26129f609362efb2c94012" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_column_int&quot;&gt;sqlite3_column_int&lt;/strong&gt;(sqlite3_stmt*, int iCol);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_column_int&quot;&gt;sqlite3_column_int&lt;/strong&gt; (sqlite3_stmt *, int iCol);</target>
        </trans-unit>
        <trans-unit id="beec785164ab768db195fce9e8d83bdfaf72e201" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_column_type&quot;&gt;sqlite3_column_type&lt;/strong&gt;(sqlite3_stmt*, int iCol);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_column_type&quot;&gt;sqlite3_column_type&lt;/strong&gt; (sqlite3_stmt *, int iCol);</target>
        </trans-unit>
        <trans-unit id="6cb786d562729c8abc1c9dd699f9018d8a062872" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_compileoption_used&quot;&gt;sqlite3_compileoption_used&lt;/strong&gt;(const char* zOptName);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_compileoption_used&quot;&gt;sqlite3_compileoption_used&lt;/strong&gt; (const char * zOptName);</target>
        </trans-unit>
        <trans-unit id="ec286d0f493747cd2340a00903d13ddc885b5e2a" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_complete&quot;&gt;sqlite3_complete&lt;/strong&gt;(const char* sql);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_complete&quot;&gt;sqlite3_complete&lt;/strong&gt; (const char * sql);</target>
        </trans-unit>
        <trans-unit id="a19d5fd92717e6cfe9043f80516453b56fbdef5a" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_complete16&quot;&gt;sqlite3_complete16&lt;/strong&gt;(const void* sql);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_complete16&quot;&gt;sqlite3_complete16&lt;/strong&gt; (const void * sql);</target>
        </trans-unit>
        <trans-unit id="7e2b2aa1150ec4c34a89d13f5c10a0d3764e5c9a" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_config&quot;&gt;sqlite3_config&lt;/strong&gt;(int, ...);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_config&quot;&gt;sqlite3_config&lt;/strong&gt; (int, ...);</target>
        </trans-unit>
        <trans-unit id="c524725d60242f808c5c78b9c6983f06d3c138f1" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_collation&quot;&gt;sqlite3_create_collation&lt;/strong&gt;(sqlite3*, const(char)* zName, int eTextRep, void* pArg, int function(void*, int, const void*, int, const void*) xCompare);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_collation&quot;&gt;sqlite3_create_collation&lt;/strong&gt; (sqlite3 *, const (char) * zName, int eTextRep, void * pArg, int функция (void *, int, const void *, int, const void *) xCompare);</target>
        </trans-unit>
        <trans-unit id="2f9473204744dfd4ae13b45f282e776a09a01c79" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_collation16&quot;&gt;sqlite3_create_collation16&lt;/strong&gt;(sqlite3*, const(void)* zName, int eTextRep, void* pArg, int function(void*, int, const void*, int, const void*) xCompare);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_collation16&quot;&gt;sqlite3_create_collation16&lt;/strong&gt; (sqlite3 *, const (void) * zName, int eTextRep, void * pArg, int функция (void *, int, const void *, int, const void *) xCompare);</target>
        </trans-unit>
        <trans-unit id="244f081b229084aaa5f09bbec39bc0192b92097f" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_collation_v2&quot;&gt;sqlite3_create_collation_v2&lt;/strong&gt;(sqlite3*, const(char)* zName, int eTextRep, void* pArg, int function(void*, int, const void*, int, const void*) xCompare, void function(void*) xDestroy);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_collation_v2&quot;&gt;sqlite3_create_collation_v2&lt;/strong&gt; (sqlite3 *, const (char) * zName, int eTextRep, void * pArg, int функция (void *, int, const void *, int, const void *) xCompare, void функция (void *) xDestroy);</target>
        </trans-unit>
        <trans-unit id="be69c75b04f572242ad59555254510e5dd681f62" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_function&quot;&gt;sqlite3_create_function&lt;/strong&gt;(sqlite3* db, const(char)* zFunctionName, int nArg, int eTextRep, void* pApp, void function(sqlite3_context*, int, sqlite3_value**) xFunc, void function(sqlite3_context*, int, sqlite3_value**) xStep, void function(sqlite3_context*) xFinal);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_function&quot;&gt;sqlite3_create_function&lt;/strong&gt; (sqlite3 * db, const (char) * zFunctionName, int nArg, int eTextRep, void * pApp, функция void (sqlite3_context *, int, sqlite3_value **) xFunc, void функция (sqlite3value sqt ) xStep, void function (sqlite3_context *) xFinal);</target>
        </trans-unit>
        <trans-unit id="f1a3948901d08a113c807c42c17bfecd8e1895d2" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_function16&quot;&gt;sqlite3_create_function16&lt;/strong&gt;(sqlite3* db, const(void)* zFunctionName, int nArg, int eTextRep, void* pApp, void function(sqlite3_context*, int, sqlite3_value**) xFunc, void function(sqlite3_context*, int, sqlite3_value**) xStep, void function(sqlite3_context*) xFinal);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_function16&quot;&gt;sqlite3_create_function16&lt;/strong&gt; (sqlite3 * db, const (void) * zFunctionName, int nArg, int eTextRep, void * pApp, void функция (sqlite3_context *, int, sqlite3_value **) xFunc, void функция (sqlite_value sql_value__conject_valte_val_3) ) xStep, void function (sqlite3_context *) xFinal);</target>
        </trans-unit>
        <trans-unit id="33a3593184be703606dfc6ae6799c4be3330639b" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_function_v2&quot;&gt;sqlite3_create_function_v2&lt;/strong&gt;(sqlite3* db, const(char)* zFunctionName, int nArg, int eTextRep, void* pApp, void function(sqlite3_context*, int, sqlite3_value**) xFunc, void function(sqlite3_context*, int, sqlite3_value**) xStep, void function(sqlite3_context*) xFinal, void function(void*) xDestroy);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_function_v2&quot;&gt;sqlite3_create_function_v2&lt;/strong&gt; (sqlite3 * db, const (char) * zFunctionName, int nArg, int eTextRep, void * pApp, функция void (sqlite3_context *, int, sqlite3_value **) xFunc, void function, sqlite___tl___t3 ) xStep, void function (sqlite3_context *) xFinal, void function (void *) xDestroy);</target>
        </trans-unit>
        <trans-unit id="2773d11497da8057b04f4dde13aa056743a07e41" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_module&quot;&gt;sqlite3_create_module&lt;/strong&gt;(sqlite3* db, const(char)* zName, const(sqlite3_module)* p, void* pClientData);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_module&quot;&gt;sqlite3_create_module&lt;/strong&gt; (sqlite3 * db, const (char) * zName, const (sqlite3_module) * p, void * pClientData);</target>
        </trans-unit>
        <trans-unit id="3bb8cc8416db53757632b7ef43453f7d6d4e2217" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_module_v2&quot;&gt;sqlite3_create_module_v2&lt;/strong&gt;(sqlite3* db, const(char)* zName, const(sqlite3_module)* p, void* pClientData, void function(void*) xDestroy);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_module_v2&quot;&gt;sqlite3_create_module_v2&lt;/strong&gt; (sqlite3 * db, const (char) * zName, const (sqlite3_module) * p, void * pClientData, функция void (void *) xDestroy);</target>
        </trans-unit>
        <trans-unit id="6f27f25a363de656665c0ad3b14b87f944bc9ab6" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_create_window_function&quot;&gt;sqlite3_create_window_function&lt;/strong&gt;(sqlite3* db, const(char)* zFunctionName, int nArg, int eTextRep, void* pApp, void function(sqlite3_context*, int, sqlite3_value**) xStep, void function(sqlite3_context*) xFinal, void function(sqlite3_context*) xValue, void function(sqlite3_context*, int, sqlite3_value**) xInverse, void function(void*) xDestroy);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_create_window_function&quot;&gt;sqlite3_create_window_function&lt;/strong&gt; (sqlite3 * db, const (char) * zFunctionName, int nArg, int eTextRep, void * pApp, пустая функция (sqlite3_context *, int, sqlite3_value **) xStep, пустая функция (sql * x3) sqlite3_context *) xValue, функция void (sqlite3_context *, int, sqlite3_value **) xInverse, функция void (void *) xDestroy);</target>
        </trans-unit>
        <trans-unit id="997e12510a59c1799b33eb0d26598b5b8a18e43c" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_data_count&quot;&gt;sqlite3_data_count&lt;/strong&gt;(sqlite3_stmt* pStmt);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_data_count&quot;&gt;sqlite3_data_count&lt;/strong&gt; (sqlite3_stmt * pStmt);</target>
        </trans-unit>
        <trans-unit id="6b6b42515bf360afaacb91510bbe00f10a605a8d" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_db_config&quot;&gt;sqlite3_db_config&lt;/strong&gt;(sqlite3*, int op, ...);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_db_config&quot;&gt;sqlite3_db_config&lt;/strong&gt; (sqlite3 *, int op, ...);</target>
        </trans-unit>
        <trans-unit id="35f6e87eca510a9d58961723be8ded1b1726fcbc" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_db_readonly&quot;&gt;sqlite3_db_readonly&lt;/strong&gt;(sqlite3* db, const char* zDbName);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_db_readonly&quot;&gt;sqlite3_db_readonly&lt;/strong&gt; (sqlite3 * db, const char * zDbName);</target>
        </trans-unit>
        <trans-unit id="7a7a1e920fb524d030138315c56fc5dc036cd5cd" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_db_release_memory&quot;&gt;sqlite3_db_release_memory&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_db_release_memory&quot;&gt;sqlite3_db_release_memory&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="bab07d2b33e99a59d2f1494f8bc2e99ed659e71e" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_db_status&quot;&gt;sqlite3_db_status&lt;/strong&gt;(sqlite3*, int op, int* pCur, int* pHiwtr, int resetFlg);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_db_status&quot;&gt;sqlite3_db_status&lt;/strong&gt; (sqlite3 *, int op, int * pCur, int * pHiwtr, int resetFlg);</target>
        </trans-unit>
        <trans-unit id="89d377b37b4aaacba2abdd4dd7bb5c97f9755d45" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_declare_vtab&quot;&gt;sqlite3_declare_vtab&lt;/strong&gt;(sqlite3*, const char* zSQL);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_declare_vtab&quot;&gt;sqlite3_declare_vtab&lt;/strong&gt; (sqlite3 *, const char * zSQL);</target>
        </trans-unit>
        <trans-unit id="3d0fe3669b4df8336191a186ec006ad1452319d6" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_drop_modules&quot;&gt;sqlite3_drop_modules&lt;/strong&gt;(sqlite3* db, const(char*)* azKeep);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c48299f344ecb1f482dae038870d9dabb206c93" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_enable_load_extension&quot;&gt;sqlite3_enable_load_extension&lt;/strong&gt;(sqlite3* db, int onoff);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_enable_load_extension&quot;&gt;sqlite3_enable_load_extension&lt;/strong&gt; (sqlite3 * db, int onoff);</target>
        </trans-unit>
        <trans-unit id="d277dbd045865c3ce357e61c1877292ef697acf7" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_enable_shared_cache&quot;&gt;sqlite3_enable_shared_cache&lt;/strong&gt;(int);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_enable_shared_cache&quot;&gt;sqlite3_enable_shared_cache&lt;/strong&gt; (int);</target>
        </trans-unit>
        <trans-unit id="e81be556cb9898f6778ccdada4a0f749272a017f" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_errcode&quot;&gt;sqlite3_errcode&lt;/strong&gt;(sqlite3* db);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_errcode&quot;&gt;sqlite3_errcode&lt;/strong&gt; (sqlite3 * db);</target>
        </trans-unit>
        <trans-unit id="7d48d1b369626047c2800a3d525664dae9b967e2" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_exec&quot;&gt;sqlite3_exec&lt;/strong&gt;(sqlite3*, const(char)* sql, int function(void*, int, char**, char**) callback, void*, char** errmsg);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_exec&quot;&gt;sqlite3_exec&lt;/strong&gt; (sqlite3 *, const (char) * sql, int функция обратного вызова (void *, int, char **, char **), void *, char ** errmsg);</target>
        </trans-unit>
        <trans-unit id="9620d7642925b3b37be13fa37e6806e7ee17a247" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_extended_errcode&quot;&gt;sqlite3_extended_errcode&lt;/strong&gt;(sqlite3* db);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_extended_errcode&quot;&gt;sqlite3_extended_errcode&lt;/strong&gt; (sqlite3 * db);</target>
        </trans-unit>
        <trans-unit id="f06628c5d33355e2efa2959b9d67aa60f8a57853" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_extended_result_codes&quot;&gt;sqlite3_extended_result_codes&lt;/strong&gt;(sqlite3*, int onoff);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_extended_result_codes&quot;&gt;sqlite3_extended_result_codes&lt;/strong&gt; (sqlite3 *, int onoff);</target>
        </trans-unit>
        <trans-unit id="cc2dd600b3a39ee7c732b9539710eaae21977673" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_file_control&quot;&gt;sqlite3_file_control&lt;/strong&gt;(sqlite3*, const char* zDbName, int op, void*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_file_control&quot;&gt;sqlite3_file_control&lt;/strong&gt; (sqlite3 *, const char * zDbName, int op, void *);</target>
        </trans-unit>
        <trans-unit id="3b66694174ad53f0fa5f0d2e958705b1243717ef" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_finalize&quot;&gt;sqlite3_finalize&lt;/strong&gt;(sqlite3_stmt* pStmt);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_finalize&quot;&gt;sqlite3_finalize&lt;/strong&gt; (sqlite3_stmt * pStmt);</target>
        </trans-unit>
        <trans-unit id="ed7c175e17935e38cb83cfe96cc0915bb49c52c2" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_get_autocommit&quot;&gt;sqlite3_get_autocommit&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_get_autocommit&quot;&gt;sqlite3_get_autocommit&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="3b33649ec324c288e1eedfd330439968a6430be0" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_get_table&quot;&gt;sqlite3_get_table&lt;/strong&gt;(sqlite3* db, const(char)* zSql, char*** pazResult, int* pnRow, int* pnColumn, char** pzErrmsg);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_get_table&quot;&gt;sqlite3_get_table&lt;/strong&gt; (sqlite3 * db, const (char) * zSql, char *** pazResult, int * pnRow, int * pnColumn, char ** pzErrmsg);</target>
        </trans-unit>
        <trans-unit id="5644331d6c0a1aa7bf3b9fffc210c60c40f3c310" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_initialize&quot;&gt;sqlite3_initialize&lt;/strong&gt;();</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_initialize&quot;&gt;sqlite3_initialize&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9996d3844fdb806d93e4c23a97c83ca99dfc682c" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_key&quot;&gt;sqlite3_key&lt;/strong&gt;(sqlite3* db, const(void)* pKey, int nKey);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_key&quot;&gt;sqlite3_key&lt;/strong&gt; (sqlite3 * db, const (void) * pKey, int nKey);</target>
        </trans-unit>
        <trans-unit id="5f1f9feaae039232a5f4605856dc3dad18840434" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_key_v2&quot;&gt;sqlite3_key_v2&lt;/strong&gt;(sqlite3* db, const(char)* zDbName, const(void)* pKey, int nKey);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_key_v2&quot;&gt;sqlite3_key_v2&lt;/strong&gt; (sqlite3 * db, const (char) * zDbName, const (void) * pKey, int nKey);</target>
        </trans-unit>
        <trans-unit id="f146bfe08ab09e9cedb39a93df54d2b3b474a3ad" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_keyword_check&quot;&gt;sqlite3_keyword_check&lt;/strong&gt;(const(char)*, int);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_keyword_check&quot;&gt;sqlite3_keyword_check&lt;/strong&gt; (const (char) *, int);</target>
        </trans-unit>
        <trans-unit id="fe42cd1b0459bfb39223150200fcfed4bfa51956" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_keyword_count&quot;&gt;sqlite3_keyword_count&lt;/strong&gt;();</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_keyword_count&quot;&gt;sqlite3_keyword_count&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="29a1936cf6c1c66c1a99c3ed8b48c2b8c78cb9fb" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_keyword_name&quot;&gt;sqlite3_keyword_name&lt;/strong&gt;(int, const(char*)*, int*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_keyword_name&quot;&gt;sqlite3_keyword_name&lt;/strong&gt; (int, const (char *) *, int *);</target>
        </trans-unit>
        <trans-unit id="f39dab24c510cefbf14f9a4625aa777041b3389d" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_libversion_number&quot;&gt;sqlite3_libversion_number&lt;/strong&gt;();</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_libversion_number&quot;&gt;sqlite3_libversion_number&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="143be95952837058499706d293f71f7c8e1a0c63" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_limit&quot;&gt;sqlite3_limit&lt;/strong&gt;(sqlite3*, int id, int newVal);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_limit&quot;&gt;sqlite3_limit&lt;/strong&gt; (sqlite3 *, int id, int newVal);</target>
        </trans-unit>
        <trans-unit id="87cfbed7049ffff3aeb8c6b9c78291a94c7d41d2" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_load_extension&quot;&gt;sqlite3_load_extension&lt;/strong&gt;(sqlite3* db, const(char)* zFile, const(char)* zProc, char** pzErrMsg);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_load_extension&quot;&gt;sqlite3_load_extension&lt;/strong&gt; (sqlite3 * db, const (char) * zFile, const (char) * zProc, char ** pzErrMsg);</target>
        </trans-unit>
        <trans-unit id="bf50a1c98ca2da1f38b600a8dbc1e25add292fb9" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_mutex_held&quot;&gt;sqlite3_mutex_held&lt;/strong&gt;(sqlite3_mutex*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_mutex_held&quot;&gt;sqlite3_mutex_held&lt;/strong&gt; (sqlite3_mutex *);</target>
        </trans-unit>
        <trans-unit id="8fa3f38509f0883433288d2f903a8f3bc973b8e8" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_mutex_notheld&quot;&gt;sqlite3_mutex_notheld&lt;/strong&gt;(sqlite3_mutex*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_mutex_notheld&quot;&gt;sqlite3_mutex_notheld&lt;/strong&gt; (sqlite3_mutex *);</target>
        </trans-unit>
        <trans-unit id="2dae0b68f134f97286d142594bfb8669cb35ae1d" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_mutex_try&quot;&gt;sqlite3_mutex_try&lt;/strong&gt;(sqlite3_mutex*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_mutex_try&quot;&gt;sqlite3_mutex_try&lt;/strong&gt; (sqlite3_mutex *);</target>
        </trans-unit>
        <trans-unit id="25a0872f0d70ddbbc2a386d5fb79bdba645e6d54" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_open&quot;&gt;sqlite3_open&lt;/strong&gt;(const(char)* filename, sqlite3** ppDb);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_open&quot;&gt;sqlite3_open&lt;/strong&gt; (const (char) * имя файла, sqlite3 ** ppDb);</target>
        </trans-unit>
        <trans-unit id="93f85f2fdda7159524bf554593dd0c4dc3f4d0ac" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_open16&quot;&gt;sqlite3_open16&lt;/strong&gt;(const(void)* filename, sqlite3** ppDb);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_open16&quot;&gt;sqlite3_open16&lt;/strong&gt; (const (void) * имя файла, sqlite3 ** ppDb);</target>
        </trans-unit>
        <trans-unit id="efff63874361f3bfc9b4ab30da4efd535eda3f02" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_open_v2&quot;&gt;sqlite3_open_v2&lt;/strong&gt;(const(char)* filename, sqlite3** ppDb, int flags, const(char)* zVfs);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_open_v2&quot;&gt;sqlite3_open_v2&lt;/strong&gt; (const (char) * имя файла, sqlite3 ** ppDb, int flags, const (char) * zVfs);</target>
        </trans-unit>
        <trans-unit id="3efe6731ace7353a28f83df43f0751b68687f0bc" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_os_end&quot;&gt;sqlite3_os_end&lt;/strong&gt;();</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_os_end&quot;&gt;sqlite3_os_end&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9166594990059dfa5b2347a6ae7b213f232df330" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_os_init&quot;&gt;sqlite3_os_init&lt;/strong&gt;();</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_os_init&quot;&gt;sqlite3_os_init&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6d71fc68cd4e38aa6cb1d8613bc57c6b28524dae" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_overload_function&quot;&gt;sqlite3_overload_function&lt;/strong&gt;(sqlite3*, const char* zFuncName, int nArg);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_overload_function&quot;&gt;sqlite3_overload_function&lt;/strong&gt; (sqlite3 *, const char * zFuncName, int nArg);</target>
        </trans-unit>
        <trans-unit id="eff2ff1f2cdf3d1b20099bf58c3dba05f729ed15" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_prepare&quot;&gt;sqlite3_prepare&lt;/strong&gt;(sqlite3* db, const(char)* zSql, int nByte, sqlite3_stmt** ppStmt, const(char*)* pzTail);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_prepare&quot;&gt;sqlite3_prepare&lt;/strong&gt; (sqlite3 * db, const (char) * zSql, int nByte, sqlite3_stmt ** ppStmt, const (char *) * pzTail);</target>
        </trans-unit>
        <trans-unit id="ae3c565f5cd6906debeac8fb5bc20d6f4d0a933e" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_prepare16&quot;&gt;sqlite3_prepare16&lt;/strong&gt;(sqlite3* db, const(void)* zSql, int nByte, sqlite3_stmt** ppStmt, const(void*)* pzTail);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_prepare16&quot;&gt;sqlite3_prepare16&lt;/strong&gt; (sqlite3 * db, const (void) * zSql, int nByte, sqlite3_stmt ** ppStmt, const (void *) * pzTail);</target>
        </trans-unit>
        <trans-unit id="e48d4f64245cc723f3b4964b072581b8141d5786" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_prepare16_v2&quot;&gt;sqlite3_prepare16_v2&lt;/strong&gt;(sqlite3* db, const(void)* zSql, int nByte, sqlite3_stmt** ppStmt, const(void*)* pzTail);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_prepare16_v2&quot;&gt;sqlite3_prepare16_v2&lt;/strong&gt; (sqlite3 * db, const (void) * zSql, int nByte, sqlite3_stmt ** ppStmt, const (void *) * pzTail);</target>
        </trans-unit>
        <trans-unit id="35483649c9ff4693e2b60114fbf9150a90bcddb4" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_prepare16_v3&quot;&gt;sqlite3_prepare16_v3&lt;/strong&gt;(sqlite3* db, const(void)* zSql, int nByte, uint prepFlags, sqlite3_stmt** ppStmt, const(void*)* pzTail);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_prepare16_v3&quot;&gt;sqlite3_prepare16_v3&lt;/strong&gt; (sqlite3 * db, const (void) * zSql, int nByte, uint prepFlags, sqlite3_stmt ** ppStmt, const (void *) * pzTail);</target>
        </trans-unit>
        <trans-unit id="2e72261b122ba8217704969f6c9793aff941502e" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_prepare_v2&quot;&gt;sqlite3_prepare_v2&lt;/strong&gt;(sqlite3* db, const(char)* zSql, int nByte, sqlite3_stmt** ppStmt, const(char*)* pzTail);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_prepare_v2&quot;&gt;sqlite3_prepare_v2&lt;/strong&gt; (sqlite3 * db, const (char) * zSql, int nByte, sqlite3_stmt ** ppStmt, const (char *) * pzTail);</target>
        </trans-unit>
        <trans-unit id="7a6270b066821a3596031ee509eaf8947e2af9d5" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_prepare_v3&quot;&gt;sqlite3_prepare_v3&lt;/strong&gt;(sqlite3* db, const(char)* zSql, int nByte, uint prepFlags, sqlite3_stmt** ppStmt, const(char*)* pzTail);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_prepare_v3&quot;&gt;sqlite3_prepare_v3&lt;/strong&gt; (sqlite3 * db, const (char) * zSql, int nByte, uint prepFlags, sqlite3_stmt ** ppStmt, const (char *) * pzTail);</target>
        </trans-unit>
        <trans-unit id="3e3d4dfef6ca40fd492d2c2531a5acce0dd76ba0" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_preupdate_count&quot;&gt;sqlite3_preupdate_count&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_preupdate_count&quot;&gt;sqlite3_preupdate_count&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="283ad6b9c7b608f4a64af5f41f74ce548c0fd63c" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_preupdate_depth&quot;&gt;sqlite3_preupdate_depth&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_preupdate_depth&quot;&gt;sqlite3_preupdate_depth&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="ade1143ffd791041f5aa8606769ae13218e460d2" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_preupdate_new&quot;&gt;sqlite3_preupdate_new&lt;/strong&gt;(sqlite3*, int, sqlite3_value**);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_preupdate_new&quot;&gt;sqlite3_preupdate_new&lt;/strong&gt; (sqlite3 *, int, sqlite3_value **);</target>
        </trans-unit>
        <trans-unit id="48974b215de1b653e6fd1d0a45e61191d6672e04" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_preupdate_old&quot;&gt;sqlite3_preupdate_old&lt;/strong&gt;(sqlite3*, int, sqlite3_value**);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_preupdate_old&quot;&gt;sqlite3_preupdate_old&lt;/strong&gt; (sqlite3 *, int, sqlite3_value **);</target>
        </trans-unit>
        <trans-unit id="09a39d7eab12ca33a94f33688d4075847cf71458" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_rekey&quot;&gt;sqlite3_rekey&lt;/strong&gt;(sqlite3* db, const(void)* pKey, int nKey);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_rekey&quot;&gt;sqlite3_rekey&lt;/strong&gt; (sqlite3 * db, const (void) * pKey, int nKey);</target>
        </trans-unit>
        <trans-unit id="b4434359dbf4cf12d6669de3c9fe99ee7def26da" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_release_memory&quot;&gt;sqlite3_release_memory&lt;/strong&gt;(int);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_release_memory&quot;&gt;sqlite3_release_memory&lt;/strong&gt; (int);</target>
        </trans-unit>
        <trans-unit id="237898a28f426a9a6616f670daca21223b7961b2" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_reset&quot;&gt;sqlite3_reset&lt;/strong&gt;(sqlite3_stmt* pStmt);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_reset&quot;&gt;sqlite3_reset&lt;/strong&gt; (sqlite3_stmt * pStmt);</target>
        </trans-unit>
        <trans-unit id="42c78b84f98e6b44452c50c57100986452c45f27" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_result_zeroblob64&quot;&gt;sqlite3_result_zeroblob64&lt;/strong&gt;(sqlite3_context*, sqlite3_uint64 n);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_result_zeroblob64&quot;&gt;sqlite3_result_zeroblob64&lt;/strong&gt; (sqlite3_context *, sqlite3_uint64 n);</target>
        </trans-unit>
        <trans-unit id="1f0b4962f37b7571a20d3dce0b59fc981872722d" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_rtree_geometry_callback&quot;&gt;sqlite3_rtree_geometry_callback&lt;/strong&gt;(sqlite3* db, const(char)* zGeom, int function(sqlite3_rtree_geometry*, int nCoord, double* aCoord, int* pRes) xGeom, void* pContext);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_rtree_geometry_callback&quot;&gt;sqlite3_rtree_geometry_callback&lt;/strong&gt; (sqlite3 * db, const (char) * zGeom, функция int (sqlite3_rtree_geometry *, int nCoord, двойной * aCoord, int * pRes) xGeom, void * pContext);</target>
        </trans-unit>
        <trans-unit id="e1aab91491d3c40c533f5130ef9e2911e41da9ef" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_set_authorizer&quot;&gt;sqlite3_set_authorizer&lt;/strong&gt;(sqlite3*, int function(void*, int, const char*, const char*, const char*, const char*) xAuth, void* pUserData);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_set_authorizer&quot;&gt;sqlite3_set_authorizer&lt;/strong&gt; (sqlite3 *, int функция (void *, int, const char *, const char *, const char *, const char *) xAuth, void * pUserData);</target>
        </trans-unit>
        <trans-unit id="17ca6b9e0fe7ccf99987838d7238cea5ab6e267d" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_shutdown&quot;&gt;sqlite3_shutdown&lt;/strong&gt;();</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_shutdown&quot;&gt;sqlite3_shutdown&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ff668c3d8b1e00ea551c381aa17c2afeb88dfd5d" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_sleep&quot;&gt;sqlite3_sleep&lt;/strong&gt;(int);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_sleep&quot;&gt;sqlite3_sleep&lt;/strong&gt; (int);</target>
        </trans-unit>
        <trans-unit id="67a2d61d9f7883baa2c656faf7a1061dde54812f" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_status&quot;&gt;sqlite3_status&lt;/strong&gt;(int op, int* pCurrent, int* pHighwater, int resetFlag);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_status&quot;&gt;sqlite3_status&lt;/strong&gt; (int op, int * pCurrent, int * pHighwater, int resetFlag);</target>
        </trans-unit>
        <trans-unit id="bd31f23606ac337d1993f12649e00bae25716225" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_status64&quot;&gt;sqlite3_status64&lt;/strong&gt;(int op, long* pCurrent, long* pHighwater, int resetFlag);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_status64&quot;&gt;sqlite3_status64&lt;/strong&gt; (int op, long * pCurrent, long * pHighwater, int resetFlag);</target>
        </trans-unit>
        <trans-unit id="533ab703a710eab58db357f369d9fe00b7e001cb" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_step&quot;&gt;sqlite3_step&lt;/strong&gt;(sqlite3_stmt*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_step&quot;&gt;sqlite3_step&lt;/strong&gt; (sqlite3_stmt *);</target>
        </trans-unit>
        <trans-unit id="8408e4e1afede7a851d05b4aea11e0d80def5a42" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_stmt_busy&quot;&gt;sqlite3_stmt_busy&lt;/strong&gt;(sqlite3_stmt*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_stmt_busy&quot;&gt;sqlite3_stmt_busy&lt;/strong&gt; (sqlite3_stmt *);</target>
        </trans-unit>
        <trans-unit id="8f7e9a9dbedb299f7671c3f0b8d532db0cbfc4ae" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_stmt_status&quot;&gt;sqlite3_stmt_status&lt;/strong&gt;(sqlite3_stmt*, int op, int resetFlg);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_stmt_status&quot;&gt;sqlite3_stmt_status&lt;/strong&gt; (sqlite3_stmt *, int op, int resetFlg);</target>
        </trans-unit>
        <trans-unit id="0c34213b68e7724fb3bd6febfe7be58e7cd80972" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_str_errcode&quot;&gt;sqlite3_str_errcode&lt;/strong&gt;(sqlite3_str*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_str_errcode&quot;&gt;sqlite3_str_errcode&lt;/strong&gt; (sqlite3_str *);</target>
        </trans-unit>
        <trans-unit id="95a1ad1935a91937581b6f4b1afcaed00dc659e6" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_stricmp&quot;&gt;sqlite3_stricmp&lt;/strong&gt;(const char*, const char*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_stricmp&quot;&gt;sqlite3_stricmp&lt;/strong&gt; (const char *, const char *);</target>
        </trans-unit>
        <trans-unit id="7a7aa61a61aaa5c7a393a72e2585826b70a80448" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_table_column_metadata&quot;&gt;sqlite3_table_column_metadata&lt;/strong&gt;(sqlite3* db, const(char)* zDbName, const(char)* zTableName, const(char)* zColumnName, char** pzDataType, char** pzCollSeq, int* pNotNull, int* pPrimaryKey, int* pAutoinc);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_table_column_metadata&quot;&gt;sqlite3_table_column_metadata&lt;/strong&gt; (sqlite3 * db, const (char) * zDbName, const (char) * zTableName, const (char) * zColumnName, char ** pzDataType, char ** pzCollSeq, int * pNotNull, int * puni, int * pumary );</target>
        </trans-unit>
        <trans-unit id="b43ced7df55f66a0919366cc9886876be6260d4b" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_test_control&quot;&gt;sqlite3_test_control&lt;/strong&gt;(int op, ...);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_test_control&quot;&gt;sqlite3_test_control&lt;/strong&gt; (int op, ...);</target>
        </trans-unit>
        <trans-unit id="4528bef4d5e226363b10b118293fe9d49ed3f1f2" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_threadsafe&quot;&gt;sqlite3_threadsafe&lt;/strong&gt;();</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_threadsafe&quot;&gt;sqlite3_threadsafe&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0db72bd888558b1f41b46c74068c134ce65a7c54" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_total_changes&quot;&gt;sqlite3_total_changes&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_total_changes&quot;&gt;sqlite3_total_changes&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="c96ceb11a16275e623421aec60af3e673f90c225" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_trace_v2&quot;&gt;sqlite3_trace_v2&lt;/strong&gt;(sqlite3*, uint uMask, int function(uint, void*, void*, void*) xCallback, void* pCtx);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_trace_v2&quot;&gt;sqlite3_trace_v2&lt;/strong&gt; (sqlite3 *, uint uMask, int функция (uint, void *, void *, void *) xCallback, void * pCtx);</target>
        </trans-unit>
        <trans-unit id="d8bb8546acc72e4d3c0d2f704af71f00a6ac036f" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_unlock_notify&quot;&gt;sqlite3_unlock_notify&lt;/strong&gt;(sqlite3* pBlocked, void function(void** apArg, int nArg) xNotify, void* pNotifyArg);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_unlock_notify&quot;&gt;sqlite3_unlock_notify&lt;/strong&gt; (sqlite3 * pBlocked, функция void (void ** apArg, int nArg) xNotify, void * pNotifyArg);</target>
        </trans-unit>
        <trans-unit id="5ee7ee81c45c4c65bfcf79795aceb7643cd56252" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_uri_boolean&quot;&gt;sqlite3_uri_boolean&lt;/strong&gt;(const(char)* zFile, const(char)* zParam, int bDefault);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_uri_boolean&quot;&gt;sqlite3_uri_boolean&lt;/strong&gt; (const (char) * zFile, const (char) * zParam, int bDefault);</target>
        </trans-unit>
        <trans-unit id="1748d65bb61cc093b1753afd3d77e1e4cbfa3ebd" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_value_bytes&quot;&gt;sqlite3_value_bytes&lt;/strong&gt;(sqlite3_value*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_value_bytes&quot;&gt;sqlite3_value_bytes&lt;/strong&gt; (sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="bf2271b612d55d345574b8fbcfc7e2d51cf00d7e" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_value_bytes16&quot;&gt;sqlite3_value_bytes16&lt;/strong&gt;(sqlite3_value*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_value_bytes16&quot;&gt;sqlite3_value_bytes16&lt;/strong&gt; (sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="f58de5f63e07749d7a915a596a7c0e1fb709a895" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_value_frombind&quot;&gt;sqlite3_value_frombind&lt;/strong&gt;(sqlite3_value*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_value_frombind&quot;&gt;sqlite3_value_frombind&lt;/strong&gt; (sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="8cc2a22584cdc823e808a486c857f1fccb7df854" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_value_int&quot;&gt;sqlite3_value_int&lt;/strong&gt;(sqlite3_value*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_value_int&quot;&gt;sqlite3_value_int&lt;/strong&gt; (sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="dbb30da7524bd68bbb9d1388d782052a3e774fd4" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_value_nochange&quot;&gt;sqlite3_value_nochange&lt;/strong&gt;(sqlite3_value*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_value_nochange&quot;&gt;sqlite3_value_nochange&lt;/strong&gt; (sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="c5f728e64c377e3a7426053b4cd049a3e9247945" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_value_numeric_type&quot;&gt;sqlite3_value_numeric_type&lt;/strong&gt;(sqlite3_value*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_value_numeric_type&quot;&gt;sqlite3_value_numeric_type&lt;/strong&gt; (sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="fa95ce6e4f7de33da99792fe78fb367a36111a32" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_value_type&quot;&gt;sqlite3_value_type&lt;/strong&gt;(sqlite3_value*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_value_type&quot;&gt;sqlite3_value_type&lt;/strong&gt; (sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="597906322b760c71f4657d12f83b80b2eac2fc2b" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_vfs_register&quot;&gt;sqlite3_vfs_register&lt;/strong&gt;(sqlite3_vfs*, int makeDflt);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_vfs_register&quot;&gt;sqlite3_vfs_register&lt;/strong&gt; (sqlite3_vfs *, int makeDflt);</target>
        </trans-unit>
        <trans-unit id="c1f598bfcee9368eba6a68dfa77cbe7deadb0423" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_vfs_unregister&quot;&gt;sqlite3_vfs_unregister&lt;/strong&gt;(sqlite3_vfs*);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_vfs_unregister&quot;&gt;sqlite3_vfs_unregister&lt;/strong&gt; (sqlite3_vfs *);</target>
        </trans-unit>
        <trans-unit id="a27498d87bfb6a5cab74830ee24195718cd6fe13" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_wal_autocheckpoint&quot;&gt;sqlite3_wal_autocheckpoint&lt;/strong&gt;(sqlite3* db, int N);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_wal_autocheckpoint&quot;&gt;sqlite3_wal_autocheckpoint&lt;/strong&gt; (sqlite3 * db, int N);</target>
        </trans-unit>
        <trans-unit id="6750bd8ba108cebcf4f030bdf5086e55b9edf60e" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint&lt;/strong&gt;(sqlite3* db, const char* zDb);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_wal_checkpoint&quot;&gt;sqlite3_wal_checkpoint&lt;/strong&gt; (sqlite3 * db, const char * zDb);</target>
        </trans-unit>
        <trans-unit id="33b4f3be10f2260bf9d98eeda7a59c43cf31d277" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2&lt;/strong&gt;(sqlite3* db, const(char)* zDb, int eMode, int* pnLog, int* pnCkpt);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_wal_checkpoint_v2&quot;&gt;sqlite3_wal_checkpoint_v2&lt;/strong&gt; (sqlite3 * db, const (char) * zDb, int eMode, int * pnLog, int * pnCkpt);</target>
        </trans-unit>
        <trans-unit id="326d4581b194659b3e48d4687e781dddbf32df9d" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_win32_set_directory&quot;&gt;sqlite3_win32_set_directory&lt;/strong&gt;(c_ulong type, void* zValue);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_win32_set_directory&quot;&gt;sqlite3_win32_set_directory&lt;/strong&gt; (тип c_ulong, void * zValue);</target>
        </trans-unit>
        <trans-unit id="df811faca4b4ec34be1a37afe974d4a54cc03d0f" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_win32_set_directory16&quot;&gt;sqlite3_win32_set_directory16&lt;/strong&gt;(c_ulong type, void* zValue);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_win32_set_directory16&quot;&gt;sqlite3_win32_set_directory16&lt;/strong&gt; (тип c_ulong, void * zValue);</target>
        </trans-unit>
        <trans-unit id="f0841e38b7f36912cda4a4e88cf091818e7961c0" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3_win32_set_directory8&quot;&gt;sqlite3_win32_set_directory8&lt;/strong&gt;(c_ulong type, void* zValue);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3_win32_set_directory8&quot;&gt;sqlite3_win32_set_directory8&lt;/strong&gt; (тип c_ulong, void * zValue);</target>
        </trans-unit>
        <trans-unit id="087e1d794c77c25ca2ebfa3335d0dd4a245adb6c" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changegroup_add_strm&quot;&gt;sqlite3changegroup_add_strm&lt;/strong&gt;(sqlite3_changegroup*, int function(void* pIn, void* pData, int* pnData) xInput, void* pIn);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changegroup_add_strm&quot;&gt;sqlite3changegroup_add_strm&lt;/strong&gt; (sqlite3_changegroup *, int функция (void * pIn, void * pData, int * pnData) xInput, void * pIn);</target>
        </trans-unit>
        <trans-unit id="3703b1de0174e4b7644996da0fe8e3b56607cb10" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changegroup_output_strm&quot;&gt;sqlite3changegroup_output_strm&lt;/strong&gt;(sqlite3_changegroup*, int function(void* pOut, const(void)* pData, int nData) xOutput, void* pOut);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changegroup_output_strm&quot;&gt;sqlite3changegroup_output_strm&lt;/strong&gt; (sqlite3_changegroup *, int функция (void * pOut, const (void) * pData, int nData) xOutput, void * pOut);</target>
        </trans-unit>
        <trans-unit id="370bd7a0cc072bcc0e6aefd09952391e11c0f037" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changeset_apply_v2&quot;&gt;sqlite3changeset_apply_v2&lt;/strong&gt;(sqlite3* db, int nChangeset, void* pChangeset, int function(void* pCtx, const(char)* zTab) xFilter, int function(void* pCtx, int eConflict, sqlite3_changeset_iter* p) xConflict, void* pCtx, void** ppRebase, int* pnRebase, int flags);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changeset_apply_v2&quot;&gt;sqlite3changeset_apply_v2&lt;/strong&gt; ( &lt;strong id=&quot;sqlite3changeset_apply_v2&quot;&gt;sqlite3&lt;/strong&gt; * db, int nChangeset, void * pChangeset, функция int (void * pCtx, const (char) * zTab) xFilter, функция int (void * pCtx, int eConflict, sqlite3_changeset_ft * pt) * , void ** ppRebase, int * pnRebase, int flags);</target>
        </trans-unit>
        <trans-unit id="97bb973222902aeea32b8c43215eca0384f85f44" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changeset_apply_v2_strm&quot;&gt;sqlite3changeset_apply_v2_strm&lt;/strong&gt;(sqlite3* db, int function(void* pIn, void* pData, int* pnData) xInput, void* pIn, int function(void* pCtx, const(char)* zTab) xFilter, int function(void* pCtx, int eConflict, sqlite3_changeset_iter* p) xConflict, void* pCtx, void** ppRebase, int* pnRebase, int flags);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changeset_apply_v2_strm&quot;&gt;sqlite3changeset_apply_v2_strm&lt;/strong&gt; ( &lt;strong id=&quot;sqlite3changeset_apply_v2_strm&quot;&gt;sqlite3&lt;/strong&gt; * db, int функция (void * pIn, void * pData, int * pnData) xInput, void * pIn, int функция (void * pCtx, const (char) * zTab) xFilter, int function (void *) pCtx, int eConflict, sqlite3_changeset_iter * p) xConflict, void * pCtx, void ** ppRebase, int * pnRebase, int flags);</target>
        </trans-unit>
        <trans-unit id="638d4b38a0a4cc6e2360dfd05904771765d479fa" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changeset_concat_strm&quot;&gt;sqlite3changeset_concat_strm&lt;/strong&gt;(int function(void* pIn, void* pData, int* pnData) xInputA, void* pInA, int function(void* pIn, void* pData, int* pnData) xInputB, void* pInB, int function(void* pOut, const(void)* pData, int nData) xOutput, void* pOut);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changeset_concat_strm&quot;&gt;sqlite3changeset_concat_strm&lt;/strong&gt; (int-функция (void * pIn, void * pData, int * pnData) xInputA, void * pInA, int-функция (void * pIn, void * pData, int * pnData) xInputB, void * pInB, int-функция (void * pOut, const (void) * pData, int nData) xOutput, void * pOut);</target>
        </trans-unit>
        <trans-unit id="60e16a93a879c152ec289b4ed9f717980dfaf792" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changeset_invert_strm&quot;&gt;sqlite3changeset_invert_strm&lt;/strong&gt;(int function(void* pIn, void* pData, int* pnData) xInput, void* pIn, int function(void* pOut, const(void)* pData, int nData) xOutput, void* pOut);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changeset_invert_strm&quot;&gt;sqlite3changeset_invert_strm&lt;/strong&gt; (функция int (void * pIn, void * pData, int * pnData) xInput, void * pIn, функция int (void * pOut, const (void) * pData, int nData) xOutput, void * pOut);</target>
        </trans-unit>
        <trans-unit id="e27938692c4feb748d5f947f2f4ed8bb6b5edaf5" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changeset_start_strm&quot;&gt;sqlite3changeset_start_strm&lt;/strong&gt;(sqlite3_changeset_iter** pp, int function(void* pIn, void* pData, int* pnData) xInput, void* pIn);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changeset_start_strm&quot;&gt;sqlite3changeset_start_strm&lt;/strong&gt; (sqlite3_changeset_iter ** pp, int-функция (void * pIn, void * pData, int * pnData) xInput, void * pIn);</target>
        </trans-unit>
        <trans-unit id="e0e049da5a6e310efc85c407ea0f3b5484fbf7db" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changeset_start_v2&quot;&gt;sqlite3changeset_start_v2&lt;/strong&gt;(sqlite3_changeset_iter** pp, int nChangeset, void* pChangeset, int flags);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changeset_start_v2&quot;&gt;sqlite3changeset_start_v2&lt;/strong&gt; (sqlite3_changeset_iter ** pp, int nChangeset, void * pChangeset, int flags);</target>
        </trans-unit>
        <trans-unit id="7a15a127d83cb6822f9493b4aedfc550dd68613c" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3changeset_start_v2_strm&quot;&gt;sqlite3changeset_start_v2_strm&lt;/strong&gt;(sqlite3_changeset_iter** pp, int function(void* pIn, void* pData, int* pnData) xInput, void* pIn, int flags);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3changeset_start_v2_strm&quot;&gt;sqlite3changeset_start_v2_strm&lt;/strong&gt; (sqlite3_changeset_iter ** pp, int function (void * pIn, void * pData, int * pnData) xInput, void * pIn, int flags);</target>
        </trans-unit>
        <trans-unit id="08fe6ffc94d845f418200da629e160bfb89a8eea" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3rebaser_rebase_strm&quot;&gt;sqlite3rebaser_rebase_strm&lt;/strong&gt;(sqlite3_rebaser* pRebaser, int function(void* pIn, void* pData, int* pnData) xInput, void* pIn, int function(void* pOut, const(void)* pData, int nData) xOutput, void* pOut);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3rebaser_rebase_strm&quot;&gt;sqlite3rebaser_rebase_strm&lt;/strong&gt; (sqlite3_rebaser * pRebaser, int function (void * pIn, void * pData, int * pnData) xInput, void * pIn, int-функция (void * pOut, const (void) * pData, int nData vut vut, xut) xO Pout);</target>
        </trans-unit>
        <trans-unit id="0cdd0199368e43ad79596ef2d6e777c622108de4" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3session_changeset_strm&quot;&gt;sqlite3session_changeset_strm&lt;/strong&gt;(sqlite3_session* pSession, int function(void* pOut, const(void)* pData, int nData) xOutput, void* pOut);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3session_changeset_strm&quot;&gt;sqlite3session_changeset_strm&lt;/strong&gt; (sqlite3_session * pSession, функция int (void * pOut, const (void) * pData, int nData) xOutput, void * pOut);</target>
        </trans-unit>
        <trans-unit id="edc9d5f92301df1294340afb8be452ee37d5fca5" translate="yes" xml:space="preserve">
          <source>nothrow int &lt;strong id=&quot;sqlite3session_patchset_strm&quot;&gt;sqlite3session_patchset_strm&lt;/strong&gt;(sqlite3_session* pSession, int function(void* pOut, const(void)* pData, int nData) xOutput, void* pOut);</source>
          <target state="translated">nothrow int &lt;strong id=&quot;sqlite3session_patchset_strm&quot;&gt;sqlite3session_patchset_strm&lt;/strong&gt; (sqlite3_session * pSession, функция int (void * pOut, const (void) * pData, int nData) xOutput, void * pOut);</target>
        </trans-unit>
        <trans-unit id="5a4fac45f07a00e077db59403d8ce709828d2f3d" translate="yes" xml:space="preserve">
          <source>nothrow list_t &lt;strong id=&quot;list_build&quot;&gt;list_build&lt;/strong&gt;(void* p, ...);</source>
          <target state="translated">nothrow list_t &lt;strong id=&quot;list_build&quot;&gt;list_build&lt;/strong&gt; (void * p, ...);</target>
        </trans-unit>
        <trans-unit id="69f2ebe437edf3f249f63c96eae8cb4632c5e238" translate="yes" xml:space="preserve">
          <source>nothrow ref @system inout(T[]) &lt;strong id=&quot;assumeSafeAppend&quot;&gt;assumeSafeAppend&lt;/strong&gt;(T)(auto ref inout(T[]) arr);</source>
          <target state="translated">nothrow ref @system inout (T []) &lt;strong id=&quot;assumeSafeAppend&quot;&gt;acceptSafeAppend&lt;/strong&gt; (T) (автоматическая ссылка inout (T []) arr);</target>
        </trans-unit>
        <trans-unit id="1f7fa96fbe3dd0c3873a022e82308640e429b5c8" translate="yes" xml:space="preserve">
          <source>nothrow ref scope @safe SysTime &lt;strong id=&quot;add&quot;&gt;add&lt;/strong&gt;(string units)(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)</source>
          <target state="translated">nothrow ref scope @safe SysTime &lt;strong id=&quot;add&quot;&gt;add&lt;/strong&gt; (строковые единицы) (длинное значение, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)</target>
        </trans-unit>
        <trans-unit id="3551c4bd2bae40239cd359a67a54321d5322f6ed" translate="yes" xml:space="preserve">
          <source>nothrow ref scope @safe SysTime &lt;strong id=&quot;roll&quot;&gt;roll&lt;/strong&gt;(string units)(long value)</source>
          <target state="translated">nothrow ref scope @safe SysTime &lt;strong id=&quot;roll&quot;&gt;roll&lt;/strong&gt; (строковые единицы) (длинное значение)</target>
        </trans-unit>
        <trans-unit id="2d2c9c9d32c9be6717254643836c6dc4dbb11f02" translate="yes" xml:space="preserve">
          <source>nothrow ref scope @safe SysTime &lt;strong id=&quot;roll&quot;&gt;roll&lt;/strong&gt;(string units)(long value, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)</source>
          <target state="translated">nothrow ref scope @safe SysTime &lt;strong id=&quot;roll&quot;&gt;roll&lt;/strong&gt; (строковые единицы) (длинное значение, AllowDayOverflow allowOverflow = AllowDayOverflow.yes)</target>
        </trans-unit>
        <trans-unit id="1d876f2223ef5dd7173d04fb59dde1770b4a5e92" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3* &lt;strong id=&quot;sqlite3_context_db_handle&quot;&gt;sqlite3_context_db_handle&lt;/strong&gt;(sqlite3_context*);</source>
          <target state="translated">nothrow sqlite3 * &lt;strong id=&quot;sqlite3_context_db_handle&quot;&gt;sqlite3_context_db_handle&lt;/strong&gt; (sqlite3_context *);</target>
        </trans-unit>
        <trans-unit id="a4e48eda30cde3b45b282712bb9cc29fc921ef17" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3* &lt;strong id=&quot;sqlite3_db_handle&quot;&gt;sqlite3_db_handle&lt;/strong&gt;(sqlite3_stmt*);</source>
          <target state="translated">nothrow sqlite3 * &lt;strong id=&quot;sqlite3_db_handle&quot;&gt;sqlite3_db_handle&lt;/strong&gt; (sqlite3_stmt *);</target>
        </trans-unit>
        <trans-unit id="be26ce3ef3b6cb45fb27e1a25c853a6e14300507" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_backup* &lt;strong id=&quot;sqlite3_backup_init&quot;&gt;sqlite3_backup_init&lt;/strong&gt;(sqlite3* pDest, const(char)* zDestName, sqlite3* pSource, const(char)* zSourceName);</source>
          <target state="translated">nothrow sqlite3_backup * &lt;strong id=&quot;sqlite3_backup_init&quot;&gt;sqlite3_backup_init&lt;/strong&gt; (sqlite3 * pDest, const (char) * zDestName, sqlite3 * pSource, const (char) * zSourceName);</target>
        </trans-unit>
        <trans-unit id="5dd4283072edd2a519b788ce442cab0f67ccfb42" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_column_int64&quot;&gt;sqlite3_column_int64&lt;/strong&gt;(sqlite3_stmt*, int iCol);</source>
          <target state="translated">nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_column_int64&quot;&gt;sqlite3_column_int64&lt;/strong&gt; (sqlite3_stmt *, int iCol);</target>
        </trans-unit>
        <trans-unit id="443dd02ed9c082f35df83998d8bf306602f7e105" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_last_insert_rowid&quot;&gt;sqlite3_last_insert_rowid&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="7d6c90a13f4cf4dbe87a15b7c18c1b09680923f0" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_memory_used&quot;&gt;sqlite3_memory_used&lt;/strong&gt;();</source>
          <target state="translated">nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_memory_used&quot;&gt;sqlite3_memory_used&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="935ac9475bac8435d9ecc45cdbf045cd40675475" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_uri_int64&quot;&gt;sqlite3_uri_int64&lt;/strong&gt;(const char*, const char*, sqlite3_int64);</source>
          <target state="translated">nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_uri_int64&quot;&gt;sqlite3_uri_int64&lt;/strong&gt; (const char *, const char *, sqlite3_int64);</target>
        </trans-unit>
        <trans-unit id="6758112eefcb0f383c653ec1d1203de6693bab5f" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_value_int64&quot;&gt;sqlite3_value_int64&lt;/strong&gt;(sqlite3_value*);</source>
          <target state="translated">nothrow sqlite3_int64 &lt;strong id=&quot;sqlite3_value_int64&quot;&gt;sqlite3_value_int64&lt;/strong&gt; (sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="6653fc0eae1fb34c83ead4288bd10454179ca7eb" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_mutex* &lt;strong id=&quot;sqlite3_db_mutex&quot;&gt;sqlite3_db_mutex&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow sqlite3_mutex * &lt;strong id=&quot;sqlite3_db_mutex&quot;&gt;sqlite3_db_mutex&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="8e3722ed4c542703e7694785b66d5b18490d1329" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_mutex* &lt;strong id=&quot;sqlite3_mutex_alloc&quot;&gt;sqlite3_mutex_alloc&lt;/strong&gt;(int);</source>
          <target state="translated">nothrow sqlite3_mutex * &lt;strong id=&quot;sqlite3_mutex_alloc&quot;&gt;sqlite3_mutex_alloc&lt;/strong&gt; (int);</target>
        </trans-unit>
        <trans-unit id="c9ea168b7a275a3337cc32331f83989bc878d7df" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_str* &lt;strong id=&quot;sqlite3_str_new&quot;&gt;sqlite3_str_new&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow sqlite3_str * &lt;strong id=&quot;sqlite3_str_new&quot;&gt;sqlite3_str_new&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="ea3b8d4412b818d611769ebabd5d8672050819c1" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_uint64 &lt;strong id=&quot;sqlite3_msize&quot;&gt;sqlite3_msize&lt;/strong&gt;(void*);</source>
          <target state="translated">nothrow sqlite3_uint64 &lt;strong id=&quot;sqlite3_msize&quot;&gt;sqlite3_msize&lt;/strong&gt; (void *);</target>
        </trans-unit>
        <trans-unit id="97caa8c938f4dc276f4ccf2055fbb84223f1fe14" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_value* &lt;strong id=&quot;sqlite3_column_value&quot;&gt;sqlite3_column_value&lt;/strong&gt;(sqlite3_stmt*, int iCol);</source>
          <target state="translated">nothrow sqlite3_value * &lt;strong id=&quot;sqlite3_column_value&quot;&gt;sqlite3_column_value&lt;/strong&gt; (sqlite3_stmt *, int iCol);</target>
        </trans-unit>
        <trans-unit id="978977c101c3be9715d6d6b1e8c1ca3b58a1666e" translate="yes" xml:space="preserve">
          <source>nothrow sqlite3_vfs* &lt;strong id=&quot;sqlite3_vfs_find&quot;&gt;sqlite3_vfs_find&lt;/strong&gt;(const char* zVfsName);</source>
          <target state="translated">nothrow sqlite3_vfs * &lt;strong id=&quot;sqlite3_vfs_find&quot;&gt;sqlite3_vfs_find&lt;/strong&gt; (const char * zVfsName);</target>
        </trans-unit>
        <trans-unit id="e137a50d93c60e6975da313fd5b2dacc644a4986" translate="yes" xml:space="preserve">
          <source>nothrow string &lt;strong id=&quot;allocNameValue&quot;&gt;allocNameValue&lt;/strong&gt;(const(char)[] name, const(char)[] value);</source>
          <target state="translated">строка &lt;strong id=&quot;allocNameValue&quot;&gt;nothrow allocNameValue&lt;/strong&gt; (имя const (char) [], значение const (char) []);</target>
        </trans-unit>
        <trans-unit id="2cb8a29f6770177ef77976bcedb44e13493b0197" translate="yes" xml:space="preserve">
          <source>nothrow this(DiagnosticReporting useDeprecated);</source>
          <target state="translated">не выводите это(DiagnosticReporting useDeprecated);</target>
        </trans-unit>
        <trans-unit id="0782c0237eb4ed289523139a2dd1c1ae8075c4d7" translate="yes" xml:space="preserve">
          <source>nothrow this(const(char)* name, size_t length, int value);</source>
          <target state="translated">nothrow this(const(char)*name,size_t length,int value);</target>
        </trans-unit>
        <trans-unit id="2b8fbd46535c747528d69da6ab640c2a1688006c" translate="yes" xml:space="preserve">
          <source>nothrow this(const(char)[] filename);</source>
          <target state="translated">не выбрасывать это(const(char)[]имя файла);</target>
        </trans-unit>
        <trans-unit id="f97779965dbc2e9692ed51f0c959c95c296a95b5" translate="yes" xml:space="preserve">
          <source>nothrow this(void delegate() dg, size_t sz = PAGESIZE * defaultStackPages, size_t guardPageSize = PAGESIZE);</source>
          <target state="translated">nothrow this(void delegate()dg,size_t sz=PAGESIZE*defaultStackPages,size_t guardPageSize=PAGESIZE);</target>
        </trans-unit>
        <trans-unit id="508d99763b164c16a0b3fefc73ee10a1ce565c67" translate="yes" xml:space="preserve">
          <source>nothrow this(void function() fn, size_t sz = PAGESIZE * defaultStackPages, size_t guardPageSize = PAGESIZE);</source>
          <target state="translated">nothrow this(void function()fn,size_t sz=PAGESIZE*по умолчаниюStackPages,size_t guardPageSize=PAGESIZE);</target>
        </trans-unit>
        <trans-unit id="96aa6d9acfee3c5d6ba6109e9b52b7a1c499b977" translate="yes" xml:space="preserve">
          <source>nothrow ubyte &lt;strong id=&quot;modregrm&quot;&gt;modregrm&lt;/strong&gt;(uint m, uint r, uint rm);</source>
          <target state="translated">nothrow ubyte &lt;strong id=&quot;modregrm&quot;&gt;modregrm&lt;/strong&gt; (uint m, uint r, uint rm);</target>
        </trans-unit>
        <trans-unit id="74cf6d9c2471633880c0ac557012198bdd81e210" translate="yes" xml:space="preserve">
          <source>nothrow ubyte[] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt;(ubyte[] buf);</source>
          <target state="translated">nothrow ubyte [] &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt; (ubyte [] buf);</target>
        </trans-unit>
        <trans-unit id="ac20000eeb67be2ad7b4a55791190559c8c33655" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;MODtoBuffer&quot;&gt;MODtoBuffer&lt;/strong&gt;(OutBuffer* buf, MOD mod);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;MODtoBuffer&quot;&gt;MODtoBuffer&lt;/strong&gt; (OutBuffer * buf, MOD мод);</target>
        </trans-unit>
        <trans-unit id="31511bf4fd33abeba0dc269a73aa59aff9e82be9" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;__move_post_blt&quot;&gt;__move_post_blt&lt;/strong&gt;(S)(ref S newLocation, ref S oldLocation)</source>
          <target state="translated">nothrow void &lt;strong id=&quot;__move_post_blt&quot;&gt;__move_post_blt&lt;/strong&gt; (S) (ссылка S newLocation, ссылка S oldLocation)</target>
        </trans-unit>
        <trans-unit id="e24fd809a15c929c59f61e86353626ef665024c3" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;_d_delThrowable&quot;&gt;_d_delThrowable&lt;/strong&gt;(Throwable t);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;_d_delThrowable&quot;&gt;_d_delThrowable&lt;/strong&gt; (Throwable t);</target>
        </trans-unit>
        <trans-unit id="b94ff1368b5c5657ec28d59f6c486dc222a18552" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;deprecation&quot;&gt;deprecation&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;deprecation&quot;&gt;deprecation&lt;/strong&gt; (ref const Loc loc, const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="02c4bc56e26da7796979dbb3f2fbdf06c0a4ec19" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;deprecationSupplemental&quot;&gt;deprecationSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;deprecationSupplemental&quot;&gt;deprecationSupplemental&lt;/strong&gt; (ref const Loc loc, const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="dcf1487bd37b03b8d85b233c0996cc8da1c7b456" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt;(Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt; (Loc loc, const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="e82bbec038a3b14696f89dd1150f384d10fc0138" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt;(const(char)* filename, uint linnum, uint charnum, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt; (const (char) * имя файла, uint linnum, uint charnum, const (char) * формат, ...);</target>
        </trans-unit>
        <trans-unit id="ad51d0f6bb4c0d5bbfc16255a3fd52fc4d46851a" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;error&quot;&gt;error&lt;/strong&gt; (ref const Loc loc, const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="927fe47b5c9cf373ef49e97ac7f70cf94bff74a0" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;errorSupplemental&quot;&gt;errorSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;errorSupplemental&quot;&gt;errorSupplemental&lt;/strong&gt; (ref const Loc loc, const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="5e5090fd9dccc021250cf0594252f7e3be7e4c42" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;fatal&quot;&gt;fatal&lt;/strong&gt;();</source>
          <target state="translated">nothrow void &lt;strong id=&quot;fatal&quot;&gt;роковым&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="60f303f83c0c1c530773eb2c368138e613d05cfe" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;getlvalue&quot;&gt;getlvalue&lt;/strong&gt;(ref CodeBuilder cdb, code* pcs, elem* e, regm_t keepmsk);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;getlvalue&quot;&gt;getlvalue&lt;/strong&gt; (ссылка cdb CodeBuilder, код * pcs, elem * e, regm_t keepmsk);</target>
        </trans-unit>
        <trans-unit id="ce324263371fe1880a69cb561de2fc0167576402" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;getlvalue_lsw&quot;&gt;getlvalue_lsw&lt;/strong&gt;(code*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;getlvalue_lsw&quot;&gt;getlvalue_lsw&lt;/strong&gt; (код *);</target>
        </trans-unit>
        <trans-unit id="ada4dddf552271a319d1de5f9a142b7eca58431e" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;getlvalue_msw&quot;&gt;getlvalue_msw&lt;/strong&gt;(code*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;getlvalue_msw&quot;&gt;getlvalue_msw&lt;/strong&gt; (код *);</target>
        </trans-unit>
        <trans-unit id="d98a4ac5795040d2c0687454a4217484b127e549" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;halt&quot;&gt;halt&lt;/strong&gt;();</source>
          <target state="translated">nothrow void &lt;strong id=&quot;halt&quot;&gt;halt&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="856a28b6032cc37935d54ab9b97af9220138dc50" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;loadea&quot;&gt;loadea&lt;/strong&gt;(ref CodeBuilder cdb, elem* e, code* cs, uint op, uint reg, targ_size_t offset, regm_t keepmsk, regm_t desmsk);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;loadea&quot;&gt;loadea&lt;/strong&gt; (ref cdb CodeBuilder, elem * e, code * cs, op uint, reg uint, смещение targ_size_t, regm_t keepmsk, regm_t desmsk);</target>
        </trans-unit>
        <trans-unit id="faa482c04926326633a020bdf26eba4cedb0b24f" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;message&quot;&gt;message&lt;/strong&gt;(const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;message&quot;&gt;message&lt;/strong&gt; (const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="cb040aba82db9708ecf5a0ffbe87d03fe84b440d" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;message&quot;&gt;message&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;message&quot;&gt;message&lt;/strong&gt; (ref const Loc loc, const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="df5f6a14a529b66376073523ab24ea46187b2a8d" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;onAssertError&quot;&gt;onAssertError&lt;/strong&gt;(string file = __FILE__, size_t line = __LINE__);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;onAssertError&quot;&gt;onAssertError&lt;/strong&gt; (строковый файл = __FILE__, size_t line = __LINE__);</target>
        </trans-unit>
        <trans-unit id="ed188f2381b307f066a67ecfe5482541f1bd29c7" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;onAssertErrorMsg&quot;&gt;onAssertErrorMsg&lt;/strong&gt;(string file, size_t line, string msg);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;onAssertErrorMsg&quot;&gt;onAssertErrorMsg&lt;/strong&gt; (строковый файл, строка size_t, строковое сообщение);</target>
        </trans-unit>
        <trans-unit id="174b57fc9c2f6feb03a07f07f6aa8567a74c5d18" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;onUnittestErrorMsg&quot;&gt;onUnittestErrorMsg&lt;/strong&gt;(string file, size_t line, string msg);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;onUnittestErrorMsg&quot;&gt;onUnittestErrorMsg&lt;/strong&gt; (строковый файл, строка size_t, строка msg);</target>
        </trans-unit>
        <trans-unit id="be957096e83dffcca1aaef3017dfe208fd9f3bf4" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;processGCMarks&quot;&gt;processGCMarks&lt;/strong&gt;(void* data, scope IsMarkedDg dg);</source>
          <target state="translated">nothrow недействительного &lt;strong id=&quot;processGCMarks&quot;&gt;processGCMarks&lt;/strong&gt; (недействительные * данные, сфера IsMarkedDg дг);</target>
        </trans-unit>
        <trans-unit id="0dc7b3cfd9585e9576f2a711feb3983df2f7ee2e" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;regimmed_set&quot;&gt;regimmed_set&lt;/strong&gt;(int reg, targ_size_t e);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;regimmed_set&quot;&gt;regimmed_set&lt;/strong&gt; (int reg, targ_size_t e);</target>
        </trans-unit>
        <trans-unit id="c6e6cd1d828a687d8d1c80f6a547d1d05170399a" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;rt_finalize2&quot;&gt;rt_finalize2&lt;/strong&gt;(void* p, bool det = true, bool resetMemory = true);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;rt_finalize2&quot;&gt;rt_finalize2&lt;/strong&gt; (void * p, bool det = true, bool resetMemory = true);</target>
        </trans-unit>
        <trans-unit id="3db44b445010f430cdd44e0383caef105bbd8932" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;saveEnvVar&quot;&gt;saveEnvVar&lt;/strong&gt;(const(char)[] name);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;saveEnvVar&quot;&gt;saveEnvVar&lt;/strong&gt; (const (char) [] name);</target>
        </trans-unit>
        <trans-unit id="41106d1a3730613baf26cab79b0605f95c0d5361" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;scan&quot;&gt;scan&lt;/strong&gt;(void* data, scope ScanDg dg);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;scan&quot;&gt;scan&lt;/strong&gt; (void * data, область действия ScanDg dg);</target>
        </trans-unit>
        <trans-unit id="c3154009533e6b36d86b71f7e1e6ab4171310283" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;setString&quot;&gt;setString&lt;/strong&gt;();</source>
          <target state="translated">nothrow void &lt;strong id=&quot;setString&quot;&gt;setString&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="887549d81eaded33208964d80b539e7d5966d775" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;setString&quot;&gt;setString&lt;/strong&gt;(const(char)* ptr, size_t length);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;setString&quot;&gt;setString&lt;/strong&gt; (const (char) * ptr, size_t length);</target>
        </trans-unit>
        <trans-unit id="9f2c5ed5c73e8529cdefed3c6a5e93265400ed79" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;setString&quot;&gt;setString&lt;/strong&gt;(ref const OutBuffer buf);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;setString&quot;&gt;setString&lt;/strong&gt; (ref const OutBuffer buf);</target>
        </trans-unit>
        <trans-unit id="ffa7de8a6b10088230bad7b207ed3d026f71f06f" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;spawn&quot;&gt;spawn&lt;/strong&gt;(void delegate() op);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;spawn&quot;&gt;spawn&lt;/strong&gt; (void Delegate () op);</target>
        </trans-unit>
        <trans-unit id="61c81da40fc32d2484da4a461ca7de935a7d0715" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_activate_cerod&quot;&gt;sqlite3_activate_cerod&lt;/strong&gt;(const(char)* zPassPhrase);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_activate_cerod&quot;&gt;sqlite3_activate_cerod&lt;/strong&gt; (const (char) * zPassPhrase);</target>
        </trans-unit>
        <trans-unit id="12368531591acde8acad53a63137b87e6004d064" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_activate_see&quot;&gt;sqlite3_activate_see&lt;/strong&gt;(const(char)* zPassPhrase);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_activate_see&quot;&gt;sqlite3_activate_see&lt;/strong&gt; (const (char) * zPassPhrase);</target>
        </trans-unit>
        <trans-unit id="2d06fb0f2abec3d03bb818fa4ce85efdff0ee998" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_free&quot;&gt;sqlite3_free&lt;/strong&gt;(void*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_free&quot;&gt;sqlite3_free&lt;/strong&gt; (void *);</target>
        </trans-unit>
        <trans-unit id="0e653d72528ce935ef0025b9d6c157587226829d" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_free_table&quot;&gt;sqlite3_free_table&lt;/strong&gt;(char** result);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_free_table&quot;&gt;sqlite3_free_table&lt;/strong&gt; (char ** result);</target>
        </trans-unit>
        <trans-unit id="56593b734c9818ec4d1476d44dbdcba4fe251c08" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_interrupt&quot;&gt;sqlite3_interrupt&lt;/strong&gt;(sqlite3*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_interrupt&quot;&gt;sqlite3_interrupt&lt;/strong&gt; (sqlite3 *);</target>
        </trans-unit>
        <trans-unit id="7d8de4dfee81198d91335fb2d50cb4c5008b1a48" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_log&quot;&gt;sqlite3_log&lt;/strong&gt;(int iErrCode, const char* zFormat, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_log&quot;&gt;sqlite3_log&lt;/strong&gt; (int iErrCode, const char * zFormat, ...);</target>
        </trans-unit>
        <trans-unit id="b04a55330c219a7976154de94bda2b7c61cebb6f" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_mutex_enter&quot;&gt;sqlite3_mutex_enter&lt;/strong&gt;(sqlite3_mutex*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_mutex_enter&quot;&gt;sqlite3_mutex_enter&lt;/strong&gt; (sqlite3_mutex *);</target>
        </trans-unit>
        <trans-unit id="8fe7f09db44db1dd885d34c552047195495670e5" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_mutex_free&quot;&gt;sqlite3_mutex_free&lt;/strong&gt;(sqlite3_mutex*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_mutex_free&quot;&gt;sqlite3_mutex_free&lt;/strong&gt; (sqlite3_mutex *);</target>
        </trans-unit>
        <trans-unit id="f82735c36737eba569a603fa7cc78ffe28f4d330" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_mutex_leave&quot;&gt;sqlite3_mutex_leave&lt;/strong&gt;(sqlite3_mutex*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_mutex_leave&quot;&gt;sqlite3_mutex_leave&lt;/strong&gt; (sqlite3_mutex *);</target>
        </trans-unit>
        <trans-unit id="8378591f52e5cab83eb02272d2e0a81882431a00" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_progress_handler&quot;&gt;sqlite3_progress_handler&lt;/strong&gt;(sqlite3*, int, int function(void*), void*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_progress_handler&quot;&gt;sqlite3_progress_handler&lt;/strong&gt; (sqlite3 *, int, int function (void *), void *);</target>
        </trans-unit>
        <trans-unit id="d8de0ed91264606bbc799526d1c72a9167815fca" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_randomness&quot;&gt;sqlite3_randomness&lt;/strong&gt;(int N, void* P);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_randomness&quot;&gt;sqlite3_randomness&lt;/strong&gt; (int N, void * P);</target>
        </trans-unit>
        <trans-unit id="2a3cd0e63952a17616eb90ba71eea0ca0be886a3" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension&lt;/strong&gt;();</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_reset_auto_extension&quot;&gt;sqlite3_reset_auto_extension&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2bd149997b02a7cf2e325ca24f6d26748ef254bb" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_blob&quot;&gt;sqlite3_result_blob&lt;/strong&gt;(sqlite3_context*, const void*, int, void function(void*));</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_blob&quot;&gt;sqlite3_result_blob&lt;/strong&gt; (sqlite3_context *, const void *, int, void function (void *));</target>
        </trans-unit>
        <trans-unit id="30adfee1258dcbbe232fcfa96b11791894ec6651" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_blob64&quot;&gt;sqlite3_result_blob64&lt;/strong&gt;(sqlite3_context*, const void*, sqlite3_uint64, void function(void*));</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_blob64&quot;&gt;sqlite3_result_blob64&lt;/strong&gt; (sqlite3_context *, const void *, sqlite3_uint64, void function (void *));</target>
        </trans-unit>
        <trans-unit id="7247133a8c17cc69a4d0dec734fe9004bd6ffa41" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_double&quot;&gt;sqlite3_result_double&lt;/strong&gt;(sqlite3_context*, double);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_double&quot;&gt;sqlite3_result_double&lt;/strong&gt; (sqlite3_context *, double);</target>
        </trans-unit>
        <trans-unit id="9e9d22c0e041297b4f9bc73b020db24bde7e0827" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_error&quot;&gt;sqlite3_result_error&lt;/strong&gt;(sqlite3_context*, const char*, int);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_error&quot;&gt;sqlite3_result_error&lt;/strong&gt; (sqlite3_context *, const char *, int);</target>
        </trans-unit>
        <trans-unit id="ac6d24629e952e32ea923f9fef13cfd73d0932a5" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_error16&quot;&gt;sqlite3_result_error16&lt;/strong&gt;(sqlite3_context*, const void*, int);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_error16&quot;&gt;sqlite3_result_error16&lt;/strong&gt; (sqlite3_context *, const void *, int);</target>
        </trans-unit>
        <trans-unit id="de7e9b6e7485a0200c075301de105972294b9533" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_error_code&quot;&gt;sqlite3_result_error_code&lt;/strong&gt;(sqlite3_context*, int);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_error_code&quot;&gt;sqlite3_result_error_code&lt;/strong&gt; (sqlite3_context *, int);</target>
        </trans-unit>
        <trans-unit id="6e2f2c0328cfa83692b731a0dd47f06cfe89f711" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_error_nomem&quot;&gt;sqlite3_result_error_nomem&lt;/strong&gt;(sqlite3_context*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_error_nomem&quot;&gt;sqlite3_result_error_nomem&lt;/strong&gt; (sqlite3_context *);</target>
        </trans-unit>
        <trans-unit id="0d8bb4745c8de7f8ffceb05dc1e14b474c2bbd96" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_error_toobig&quot;&gt;sqlite3_result_error_toobig&lt;/strong&gt;(sqlite3_context*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_error_toobig&quot;&gt;sqlite3_result_error_toobig&lt;/strong&gt; (sqlite3_context *);</target>
        </trans-unit>
        <trans-unit id="6a417a1f0b2b2b0057bd7bf87584c9f66d7b99f5" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_int&quot;&gt;sqlite3_result_int&lt;/strong&gt;(sqlite3_context*, int);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_int&quot;&gt;sqlite3_result_int&lt;/strong&gt; (sqlite3_context *, int);</target>
        </trans-unit>
        <trans-unit id="f8bc9af60450813632199618028e04838517d394" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_int64&quot;&gt;sqlite3_result_int64&lt;/strong&gt;(sqlite3_context*, sqlite3_int64);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_int64&quot;&gt;sqlite3_result_int64&lt;/strong&gt; (sqlite3_context *, sqlite3_int64);</target>
        </trans-unit>
        <trans-unit id="646b46437809b0be9cdd7d4ae15ff07dbbcd8c83" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_null&quot;&gt;sqlite3_result_null&lt;/strong&gt;(sqlite3_context*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_null&quot;&gt;sqlite3_result_null&lt;/strong&gt; (sqlite3_context *);</target>
        </trans-unit>
        <trans-unit id="ca7325f039c8522a82c954b41a21482b113dae1d" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_text&quot;&gt;sqlite3_result_text&lt;/strong&gt;(sqlite3_context*, const char*, int, void function(void*));</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_text&quot;&gt;sqlite3_result_text&lt;/strong&gt; (sqlite3_context *, const char *, int, void function (void *));</target>
        </trans-unit>
        <trans-unit id="819f6609c8b2e620d8509c9277de0b1a8187498e" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_text16&quot;&gt;sqlite3_result_text16&lt;/strong&gt;(sqlite3_context*, const void*, int, void function(void*));</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_text16&quot;&gt;sqlite3_result_text16&lt;/strong&gt; (sqlite3_context *, const void *, int, void function (void *));</target>
        </trans-unit>
        <trans-unit id="4f164304b6e8855a0a14ce8da3c60c4b522bad9f" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_text16be&quot;&gt;sqlite3_result_text16be&lt;/strong&gt;(sqlite3_context*, const void*, int, void function(void*));</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_text16be&quot;&gt;sqlite3_result_text16be&lt;/strong&gt; (sqlite3_context *, const void *, int, void function (void *));</target>
        </trans-unit>
        <trans-unit id="efb2f06825fce017c2df0616a0a3db7f49ba97d4" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_text16le&quot;&gt;sqlite3_result_text16le&lt;/strong&gt;(sqlite3_context*, const void*, int, void function(void*));</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_text16le&quot;&gt;sqlite3_result_text16le&lt;/strong&gt; (sqlite3_context *, const void *, int, void function (void *));</target>
        </trans-unit>
        <trans-unit id="10f2e8ebc9b996c410a1394f891d199c2dae8d32" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_text64&quot;&gt;sqlite3_result_text64&lt;/strong&gt;(sqlite3_context*, const char*, sqlite3_uint64, void function(void*), ubyte encoding);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_text64&quot;&gt;sqlite3_result_text64&lt;/strong&gt; (sqlite3_context *, const char *, sqlite3_uint64, функция void (void *), кодирование убайта);</target>
        </trans-unit>
        <trans-unit id="76240ea3e4f93b4c2aa9cc896237330e782171b4" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_value&quot;&gt;sqlite3_result_value&lt;/strong&gt;(sqlite3_context*, sqlite3_value*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_value&quot;&gt;sqlite3_result_value&lt;/strong&gt; (sqlite3_context *, sqlite3_value *);</target>
        </trans-unit>
        <trans-unit id="1f7e7dc7b68b897acd2267df9fcdc3199443d6f2" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_result_zeroblob&quot;&gt;sqlite3_result_zeroblob&lt;/strong&gt;(sqlite3_context*, int n);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_result_zeroblob&quot;&gt;sqlite3_result_zeroblob&lt;/strong&gt; (sqlite3_context *, int n);</target>
        </trans-unit>
        <trans-unit id="8486cbe704fd06df5ead28096871b22dbc4cf2a5" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_set_auxdata&quot;&gt;sqlite3_set_auxdata&lt;/strong&gt;(sqlite3_context*, int N, void*, void function(void*));</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_set_auxdata&quot;&gt;sqlite3_set_auxdata&lt;/strong&gt; (sqlite3_context *, int N, void *, void function (void *));</target>
        </trans-unit>
        <trans-unit id="c3c76b73fa6a3db146df855333bb0bed281ab43b" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid&lt;/strong&gt;(sqlite3*, sqlite3_int64);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_set_last_insert_rowid&quot;&gt;sqlite3_set_last_insert_rowid&lt;/strong&gt; (sqlite3 *, sqlite3_int64);</target>
        </trans-unit>
        <trans-unit id="1ae6c5263444dee04b6571771221a0d6df5843c1" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_str_append&quot;&gt;sqlite3_str_append&lt;/strong&gt;(sqlite3_str*, const(char)* zIn, int N);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_str_append&quot;&gt;sqlite3_str_append&lt;/strong&gt; (sqlite3_str *, const (char) * zIn, int N);</target>
        </trans-unit>
        <trans-unit id="3b8915c391fd8eb7e4f0fa94f9eb9d51997490a9" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_str_appendall&quot;&gt;sqlite3_str_appendall&lt;/strong&gt;(sqlite3_str*, const(char)* zIn);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_str_appendall&quot;&gt;sqlite3_str_appendall&lt;/strong&gt; (sqlite3_str *, const (char) * zIn);</target>
        </trans-unit>
        <trans-unit id="7d11c0f6a6f6fa89e76e982f331946c5c5704e9b" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_str_appendchar&quot;&gt;sqlite3_str_appendchar&lt;/strong&gt;(sqlite3_str*, int N, char C);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_str_appendchar&quot;&gt;sqlite3_str_appendchar&lt;/strong&gt; (sqlite3_str *, int N, char C);</target>
        </trans-unit>
        <trans-unit id="e0e5f2f0439bfbda97ce8f6296d01ed19f647fa2" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_str_appendf&quot;&gt;sqlite3_str_appendf&lt;/strong&gt;(sqlite3_str*, const(char)* zFormat, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_str_appendf&quot;&gt;sqlite3_str_appendf&lt;/strong&gt; (sqlite3_str *, const (char) * zFormat, ...);</target>
        </trans-unit>
        <trans-unit id="8cdbe47e3cbac7e874317dd7b415a720b067b284" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_str_reset&quot;&gt;sqlite3_str_reset&lt;/strong&gt;(sqlite3_str*);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_str_reset&quot;&gt;sqlite3_str_reset&lt;/strong&gt; (sqlite3_str *);</target>
        </trans-unit>
        <trans-unit id="054aca6e01e62a592c63613d7961ad2b939102e0" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;sqlite3_str_vappendf&quot;&gt;sqlite3_str_vappendf&lt;/strong&gt;(sqlite3_str*, const(char)* zFormat, va_list);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;sqlite3_str_vappendf&quot;&gt;sqlite3_str_vappendf&lt;/strong&gt; (sqlite3_str *, const (char) * zFormat, va_list);</target>
        </trans-unit>
        <trans-unit id="88d15244ed6b8ff2129507939c303deeec2ff512" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;thread_processGCMarks&quot;&gt;thread_processGCMarks&lt;/strong&gt;(scope IsMarkedDg isMarked);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;thread_processGCMarks&quot;&gt;thread_processGCMarks&lt;/strong&gt; (область действия IsMarkedDg isMarked);</target>
        </trans-unit>
        <trans-unit id="0ec109a937baba9d30f38d183300eca59fe0c2bb" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;thread_resumeAll&quot;&gt;thread_resumeAll&lt;/strong&gt;();</source>
          <target state="translated">nothrow void &lt;strong id=&quot;thread_resumeAll&quot;&gt;thread_resumeAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f8fb65071fd09b8037a77e77d874e41a16cbc532" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;thread_scanAll&quot;&gt;thread_scanAll&lt;/strong&gt;(scope ScanAllThreadsFn scan);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;thread_scanAll&quot;&gt;thread_scanAll&lt;/strong&gt; (область сканирования ScanAllThreadsFn);</target>
        </trans-unit>
        <trans-unit id="f9c0931dd9d4b14525a2aefd4815e6801a51580b" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;thread_scanAllType&quot;&gt;thread_scanAllType&lt;/strong&gt;(scope ScanAllThreadsTypeFn scan);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;thread_scanAllType&quot;&gt;thread_scanAllType&lt;/strong&gt; (область сканирования ScanAllThreadsTypeFn);</target>
        </trans-unit>
        <trans-unit id="13a671ee3492215d89df75754b9cd63b17b62272" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;thread_suspendAll&quot;&gt;thread_suspendAll&lt;/strong&gt;();</source>
          <target state="translated">nothrow void &lt;strong id=&quot;thread_suspendAll&quot;&gt;thread_suspendAll&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ecab13ba9ca1f305893961672a476a672df2e12e" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;tip&quot;&gt;tip&lt;/strong&gt;(const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;tip&quot;&gt;tip&lt;/strong&gt; (const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="1559f01cb095893ad90a06dfefec6861691cc832" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;vdeprecation&quot;&gt;vdeprecation&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list ap, const(char)* p1 = null, const(char)* p2 = null);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;vdeprecation&quot;&gt;vdeprecation&lt;/strong&gt; (ref const Loc loc, const (char) * формат, va_list ap, const (char) * p1 = null, const (char) * p2 = null);</target>
        </trans-unit>
        <trans-unit id="6982240b70085bb5b28b0c9a089c34be7b08e74f" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;vdeprecationSupplemental&quot;&gt;vdeprecationSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list ap);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;vdeprecationSupplemental&quot;&gt;vdeprecationSupplemental&lt;/strong&gt; (ref const Loc loc, const (char) * format, va_list ap);</target>
        </trans-unit>
        <trans-unit id="09be9de4790575a4c317884ff2990c08cc0710dd" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;verror&quot;&gt;verror&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list ap, const(char)* p1 = null, const(char)* p2 = null, const(char)* header = &quot;Error: &quot;);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;verror&quot;&gt;verror&lt;/strong&gt; (ref const Loc loc, const (char) * формат, va_list ap, const (char) * p1 = null, const (char) * p2 = null, const (char) * header = &quot;Ошибка:&quot;);</target>
        </trans-unit>
        <trans-unit id="972e1c4ca0f234c2a0bb9687ec607d404825f45b" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;verrorSupplemental&quot;&gt;verrorSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list ap);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;verrorSupplemental&quot;&gt;verrorSupplemental&lt;/strong&gt; (ref const Loc loc, const (char) * формат, va_list ap);</target>
        </trans-unit>
        <trans-unit id="bf3776f6a883c8a03b8a0f9d23e17a39b9084f96" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;vmessage&quot;&gt;vmessage&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list ap);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;vmessage&quot;&gt;vmessage&lt;/strong&gt; (ref const Loc loc, const (char) * формат, va_list ap);</target>
        </trans-unit>
        <trans-unit id="b88c333444aba264d27ace3cedde9d5d08a1c24d" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;vtip&quot;&gt;vtip&lt;/strong&gt;(const(char)* format, va_list ap);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;vtip&quot;&gt;vtip&lt;/strong&gt; (const (char) * format, va_list ap);</target>
        </trans-unit>
        <trans-unit id="57470b9977ec8a828c2df31c588e1dcbe519c134" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;vwarning&quot;&gt;vwarning&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list ap);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;vwarning&quot;&gt;vwarning&lt;/strong&gt; (ref const Loc loc, const (char) * формат, va_list ap);</target>
        </trans-unit>
        <trans-unit id="c12b2fece3567db3dc6a23ea30b19df0da53df46" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;vwarningSupplemental&quot;&gt;vwarningSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, va_list ap);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;vwarningSupplemental&quot;&gt;vwarningSupplemental&lt;/strong&gt; (ref const Loc loc, const (char) * формат, va_list ap);</target>
        </trans-unit>
        <trans-unit id="b1c4dd4ff151f61bad251ec3231b8b86ef0b2841" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;warning&quot;&gt;warning&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;warning&quot;&gt;warning&lt;/strong&gt; (ref const Loc loc, const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="0487db381c899ec59a7364827d6738cc20c4e9dc" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;warningSupplemental&quot;&gt;warningSupplemental&lt;/strong&gt;(ref const Loc loc, const(char)* format, ...);</source>
          <target state="translated">nothrow void &lt;strong id=&quot;warningSupplemental&quot;&gt;warningSupplemental&lt;/strong&gt; (ref const Loc loc, const (char) * format, ...);</target>
        </trans-unit>
        <trans-unit id="e8ff6d3ca47a61381cfbbaf738868b1b8c4b5257" translate="yes" xml:space="preserve">
          <source>nothrow void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt;();</source>
          <target state="translated">nothrow void &lt;strong id=&quot;yield&quot;&gt;yield&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="eb631de249efa3adb3ed3549024fe69be8ed2363" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_aggregate_context&quot;&gt;sqlite3_aggregate_context&lt;/strong&gt;(sqlite3_context*, int nBytes);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_aggregate_context&quot;&gt;sqlite3_aggregate_context&lt;/strong&gt; (sqlite3_context *, int nBytes);</target>
        </trans-unit>
        <trans-unit id="aede9f5b2b41ed4a3471ef86a33df08bb5b31dcc" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_commit_hook&quot;&gt;sqlite3_commit_hook&lt;/strong&gt;(sqlite3*, int function(void*), void*);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_commit_hook&quot;&gt;sqlite3_commit_hook&lt;/strong&gt; (sqlite3 *, int function (void *), void *);</target>
        </trans-unit>
        <trans-unit id="e8d2e0c9fea55b42979e3cddff8b70fc1f8d2625" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_get_auxdata&quot;&gt;sqlite3_get_auxdata&lt;/strong&gt;(sqlite3_context*, int N);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_get_auxdata&quot;&gt;sqlite3_get_auxdata&lt;/strong&gt; (sqlite3_context *, int N);</target>
        </trans-unit>
        <trans-unit id="dc0582ef81e6f12eea24ff0ba11605053f2bf9e2" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_malloc&quot;&gt;sqlite3_malloc&lt;/strong&gt;(int);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_malloc&quot;&gt;sqlite3_malloc&lt;/strong&gt; (int);</target>
        </trans-unit>
        <trans-unit id="a06e07c2919829c2363915999dbae3e342202ccf" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_malloc64&quot;&gt;sqlite3_malloc64&lt;/strong&gt;(sqlite3_uint64);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_malloc64&quot;&gt;sqlite3_malloc64&lt;/strong&gt; (sqlite3_uint64);</target>
        </trans-unit>
        <trans-unit id="626e51ab027248fc285e17f3be514ca231b89b21" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_realloc&quot;&gt;sqlite3_realloc&lt;/strong&gt;(void*, int);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_realloc&quot;&gt;sqlite3_realloc&lt;/strong&gt; (void *, int);</target>
        </trans-unit>
        <trans-unit id="95e8e7be9c061d2b3a67ce0e92068ec82ad0c0f2" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_realloc64&quot;&gt;sqlite3_realloc64&lt;/strong&gt;(void*, sqlite3_uint64);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_realloc64&quot;&gt;sqlite3_realloc64&lt;/strong&gt; (void *, sqlite3_uint64);</target>
        </trans-unit>
        <trans-unit id="78122914ba06d660f0ced0ad4d437e1acc374327" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_rollback_hook&quot;&gt;sqlite3_rollback_hook&lt;/strong&gt;(sqlite3*, void function(void*), void*);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_rollback_hook&quot;&gt;sqlite3_rollback_hook&lt;/strong&gt; (sqlite3 *, функция void (void *), void *);</target>
        </trans-unit>
        <trans-unit id="0ffc9835cd136af2b2c93c002513109e2f00ad96" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_update_hook&quot;&gt;sqlite3_update_hook&lt;/strong&gt;(sqlite3*, void function(void*, int, char*, char*, sqlite3_int64), void*);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_update_hook&quot;&gt;sqlite3_update_hook&lt;/strong&gt; (sqlite3 *, функция void (void *, int, char *, char *, sqlite3_int64), void *);</target>
        </trans-unit>
        <trans-unit id="49d768a802537619ed590141cb505396210a60c1" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_user_data&quot;&gt;sqlite3_user_data&lt;/strong&gt;(sqlite3_context*);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_user_data&quot;&gt;sqlite3_user_data&lt;/strong&gt; (sqlite3_context *);</target>
        </trans-unit>
        <trans-unit id="1c08d78a03cc9ccc1865baa7c83f38a561cf03dc" translate="yes" xml:space="preserve">
          <source>nothrow void* &lt;strong id=&quot;sqlite3_wal_hook&quot;&gt;sqlite3_wal_hook&lt;/strong&gt;(sqlite3*, int function(void*, sqlite3*, const char*, int), void*);</source>
          <target state="translated">nothrow void * &lt;strong id=&quot;sqlite3_wal_hook&quot;&gt;sqlite3_wal_hook&lt;/strong&gt; (sqlite3 *, функция int (void *, sqlite3 *, const char *, int), void *);</target>
        </trans-unit>
        <trans-unit id="6dbda842c91c37113763310d3a623d9352c6e9d6" translate="yes" xml:space="preserve">
          <source>nspace.d</source>
          <target state="translated">nspace.d</target>
        </trans-unit>
        <trans-unit id="868000edfe927f608301ec5f1215818436b0d007" translate="yes" xml:space="preserve">
          <source>nth list entry in list.</source>
          <target state="translated">n-я запись в списке.</target>
        </trans-unit>
        <trans-unit id="2be88ca4242c76e8253ac62474851065032d6833" translate="yes" xml:space="preserve">
          <source>null</source>
          <target state="translated">null</target>
        </trans-unit>
        <trans-unit id="81ece092591326c0942a8e7cd3e1ba917add3dce" translate="yes" xml:space="preserve">
          <source>null = no correct spellings found, otherwise the value returned by dg() for first possible correct spelling</source>
          <target state="translated">null=правильное написание не найдено,в противном случае значение,возвращаемое функцией dg()для первого возможного правильного написания</target>
        </trans-unit>
        <trans-unit id="be5416a67d1f145b3694f614a9ddef90558f3642" translate="yes" xml:space="preserve">
          <source>null if *plist is null otherwise ptr</source>
          <target state="translated">null if *plist is null иначе ptr</target>
        </trans-unit>
        <trans-unit id="3880138f771865bfffcca16fb56edab19f162773" translate="yes" xml:space="preserve">
          <source>null if error, else type AST as parsed</source>
          <target state="translated">null if error,else type AST as parsed</target>
        </trans-unit>
        <trans-unit id="731af4c1ef1723adb1af12c6b76ac348e1486731" translate="yes" xml:space="preserve">
          <source>null if failed</source>
          <target state="translated">нулевой в случае неудачи</target>
        </trans-unit>
        <trans-unit id="ee9b98329b98aacc669ceafd189e4ab325571be9" translate="yes" xml:space="preserve">
          <source>null if not caught, pointer to thrown object if caught</source>
          <target state="translated">нулевой,если не пойман,указатель на брошенный объект,если пойман</target>
        </trans-unit>
        <trans-unit id="9e08c07341048c6fb9184e465c4b2577854c46c7" translate="yes" xml:space="preserve">
          <source>null if not found</source>
          <target state="translated">нулевой,если не найден</target>
        </trans-unit>
        <trans-unit id="5031e81fb029705fd5515a4ada36b6ee72745496" translate="yes" xml:space="preserve">
          <source>null on success, ErrorExp if error occurs</source>
          <target state="translated">null on success,ErrorExp if error occurs</target>
        </trans-unit>
        <trans-unit id="18ec3d7cc61a74b070269f1bfaa131835504535b" translate="yes" xml:space="preserve">
          <source>null on success, otherwise error message string</source>
          <target state="translated">null on success,в противном случае строка сообщения об ошибке</target>
        </trans-unit>
        <trans-unit id="fd995b4a62f62db2982c91255e00fc0da6654ca1" translate="yes" xml:space="preserve">
          <source>null or opApply or delegate</source>
          <target state="translated">нулевой или opApply или делегат</target>
        </trans-unit>
        <trans-unit id="5c63b1db6dd11e2a16d9334c393f56f5339205bc" translate="yes" xml:space="preserve">
          <source>null otherwise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f0586b3660b7a562306120fa899541d8b063c5f" translate="yes" xml:space="preserve">
          <source>nullValue</source>
          <target state="translated">nullValue</target>
        </trans-unit>
        <trans-unit id="726656e2038291974669e4a686a768c778542974" translate="yes" xml:space="preserve">
          <source>number of bits in mantissa</source>
          <target state="translated">количество бит в мантиссе</target>
        </trans-unit>
        <trans-unit id="200c9b8b58d514c8ae9626e875236e753b943b18" translate="yes" xml:space="preserve">
          <source>number of bytes allocated for current thread since program start</source>
          <target state="translated">количество байт,выделенных для текущего потока с момента запуска программы</target>
        </trans-unit>
        <trans-unit id="bbcee30eaa2f7eabc592d979526188db1ce3c360" translate="yes" xml:space="preserve">
          <source>number of bytes per code unit</source>
          <target state="translated">количество байт на единицу кода</target>
        </trans-unit>
        <trans-unit id="f3decac98a65148bc8a86d53ac44a2a77858dc88" translate="yes" xml:space="preserve">
          <source>number of bytes to allocate</source>
          <target state="translated">количество байтов для распределения</target>
        </trans-unit>
        <trans-unit id="ff783e3e053d3f75f403cb33f2eb84a53d2fce17" translate="yes" xml:space="preserve">
          <source>number of certificates with information</source>
          <target state="translated">количество сертификатов с информацией</target>
        </trans-unit>
        <trans-unit id="c184bb7176c15cd05177e2d9f8907e22bb6bea6c" translate="yes" xml:space="preserve">
          <source>number of code units</source>
          <target state="translated">количество кодовых единиц</target>
        </trans-unit>
        <trans-unit id="b02afcfe99bf13fd8df1813d4bfe310fff33e137" translate="yes" xml:space="preserve">
          <source>number of code units in s[]</source>
          <target state="translated">количество единиц кода в s[]</target>
        </trans-unit>
        <trans-unit id="6f45fe09789841b65061b899d613e6acbc0f3980" translate="yes" xml:space="preserve">
          <source>number of code units in string</source>
          <target state="translated">количество единиц кода в строке</target>
        </trans-unit>
        <trans-unit id="1716a481da79d936148858581fae4fcd6ece50e3" translate="yes" xml:space="preserve">
          <source>number of columns a tab character represents</source>
          <target state="translated">количество столбцов символ табуляции</target>
        </trans-unit>
        <trans-unit id="6aed06858509d97855943cc4cb6b432e04e3987b" translate="yes" xml:space="preserve">
          <source>number of decimal digits of precision</source>
          <target state="translated">количество десятичных цифр точности</target>
        </trans-unit>
        <trans-unit id="d74b00e5a8ebeade208bc452f2f09614af1b36bc" translate="yes" xml:space="preserve">
          <source>number of dimensions</source>
          <target state="translated">количество размеров</target>
        </trans-unit>
        <trans-unit id="0413438e6493df95941849ac52ea007d0f457d39" translate="yes" xml:space="preserve">
          <source>number of elements of &lt;code&gt;r&lt;/code&gt; to shuffle (counting from the beginning); must be less than &lt;code&gt;r.length&lt;/code&gt;</source>
          <target state="translated">количество элементов от &lt;code&gt;r&lt;/code&gt; до shuffle (считая с начала); должно быть меньше &lt;code&gt;r.length&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="87eb3d422d68e0ea0a088daad71d39db7a926a21" translate="yes" xml:space="preserve">
          <source>number of elements to add (upon success the new length of &lt;code&gt;array&lt;/code&gt; is &lt;code&gt;array.length + delta&lt;/code&gt;)</source>
          <target state="translated">количество добавляемых элементов (в случае успеха новая длина &lt;code&gt;array&lt;/code&gt; - &lt;code&gt;array.length + delta&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="851874ec44221382b02cf2d4f040a426505c716a" translate="yes" xml:space="preserve">
          <source>number of elements to include in the sample; must be less than or equal to the total number of elements in &lt;code&gt;r&lt;/code&gt; and/or the parameter &lt;code&gt;total&lt;/code&gt; (if provided)</source>
          <target state="translated">количество элементов для включения в образец; должно быть меньше или равно общему количеству элементов в &lt;code&gt;r&lt;/code&gt; и / или параметру &lt;code&gt;total&lt;/code&gt; (если есть)</target>
        </trans-unit>
        <trans-unit id="c46764d9efa80a9cfdb5b10adb58afcf7fb43dbb" translate="yes" xml:space="preserve">
          <source>number of elements to remove (upon success the new length of &lt;code&gt;arr&lt;/code&gt; is &lt;code&gt;arr.length - delta&lt;/code&gt;)</source>
          <target state="translated">количество элементов для удаления (в случае успеха новая длина &lt;code&gt;arr&lt;/code&gt; равна &lt;code&gt;arr.length - delta&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="dec5888a8e657b3c1face1efe9f7d28b2bc3f9a8" translate="yes" xml:space="preserve">
          <source>number of elements to remove (upon success the new length of &lt;code&gt;array&lt;/code&gt; is &lt;code&gt;array.length - delta&lt;/code&gt;)</source>
          <target state="translated">количество &lt;code&gt;array.length - delta&lt;/code&gt; элементов (в случае успеха новая длина &lt;code&gt;array&lt;/code&gt; - array.length - delta )</target>
        </trans-unit>
        <trans-unit id="b2b7d6a0314fa1330fae1f34ffc945ce203cf30c" translate="yes" xml:space="preserve">
          <source>number of elements, uint.max on overflow</source>
          <target state="translated">количество элементов,uint.max при переполнении</target>
        </trans-unit>
        <trans-unit id="f7fc001ff6a5570830a6737ee6984943bec300b0" translate="yes" xml:space="preserve">
          <source>number of entries in &lt;code&gt;DCatchBlock[]&lt;/code&gt;</source>
          <target state="translated">количество записей в &lt;code&gt;DCatchBlock[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b87a6f367be812f518b01c014147ec4b16c16aa" translate="yes" xml:space="preserve">
          <source>number of entries in &lt;code&gt;DHandlerInfo[]&lt;/code&gt;</source>
          <target state="translated">количество записей в &lt;code&gt;DHandlerInfo[]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3be78203f28160f8ce8c4dc636221f403676323a" translate="yes" xml:space="preserve">
          <source>number of free bytes on the GC heap (might only get updated after a collection)</source>
          <target state="translated">количество свободных байт в куче GC (может обновляться только после коллекции)</target>
        </trans-unit>
        <trans-unit id="279c028b11ba5747c8f2a4e78d5feb862f948ff1" translate="yes" xml:space="preserve">
          <source>number of spaces by which to indent child elements</source>
          <target state="translated">количество пробелов для отступов детских элементов</target>
        </trans-unit>
        <trans-unit id="776663595992b4a81d1be8522ce065527dae2fdd" translate="yes" xml:space="preserve">
          <source>number of symbols in symbol table</source>
          <target state="translated">количество символов в таблице символов</target>
        </trans-unit>
        <trans-unit id="ba80951487590069f6f1f45eebcfed15f272adef" translate="yes" xml:space="preserve">
          <source>number of times to repeat &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">количество раз повторить &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea16fc6aeb29c134d456124bcd123b785fc02027" translate="yes" xml:space="preserve">
          <source>number of used bytes on the GC heap (might only get updated after a collection)</source>
          <target state="translated">количество использованных байтов в куче GC (может обновляться только после сбора)</target>
        </trans-unit>
        <trans-unit id="cd3975cf19285a9174cd900ee54239ac019476fc" translate="yes" xml:space="preserve">
          <source>numeric</source>
          <target state="translated">numeric</target>
        </trans-unit>
        <trans-unit id="f7bf7682cf68e763026e4525cf07adc718c50000" translate="yes" xml:space="preserve">
          <source>numeric, bool, null, char, string, enum, pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8a56a3cba004f050054c834827ad6e46d6605e" translate="yes" xml:space="preserve">
          <source>objc.d</source>
          <target state="translated">objc.d</target>
        </trans-unit>
        <trans-unit id="7e43b10c150147a17c8ba00d6d7104dae6034fe7" translate="yes" xml:space="preserve">
          <source>objc_glue.d</source>
          <target state="translated">objc_glue.d</target>
        </trans-unit>
        <trans-unit id="1615307cc4523f183e777df67f168c86908e8007" translate="yes" xml:space="preserve">
          <source>object</source>
          <target state="translated">object</target>
        </trans-unit>
        <trans-unit id="6a83b421aa503e6bc6010ccb948996e11b511156" translate="yes" xml:space="preserve">
          <source>object for the class, which means that one monitor is used for all static member functions for that synchronized class. For non-static functions of a synchronized class, the monitor used is part of the class object. For example:</source>
          <target state="translated">объект для класса,что означает,что для этого синхронизированного класса используется один монитор для всех статических функций-членов.Для нестатических функций синхронизированного класса используется монитор,являющийся частью объекта класса.Например:</target>
        </trans-unit>
        <trans-unit id="85453c0f507a358010d41f6a83b9ad8450737218" translate="yes" xml:space="preserve">
          <source>object resulting from running &lt;code&gt;semantic&lt;/code&gt; on &lt;code&gt;o&lt;/code&gt;</source>
          <target state="translated">объект, полученный в результате выполнения &lt;code&gt;semantic&lt;/code&gt; на &lt;code&gt;o&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64ec601096168039bced627693212c34155669e5" translate="yes" xml:space="preserve">
          <source>object that was caught</source>
          <target state="translated">попавшийся объект</target>
        </trans-unit>
        <trans-unit id="c8c5da65ba138fda91c3cd3a8336e3ddede94971" translate="yes" xml:space="preserve">
          <source>object to run semantic() on, the &lt;code&gt;TemplateAliasParameter&lt;/code&gt;s &lt;code&gt;specAlias&lt;/code&gt; or &lt;code&gt;defaultAlias&lt;/code&gt;</source>
          <target state="translated">объект для запуска семантического () на, в &lt;code&gt;TemplateAliasParameter&lt;/code&gt; сек &lt;code&gt;specAlias&lt;/code&gt; или &lt;code&gt;defaultAlias&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="49a0d55911d580f8de619dfd1caa8119f274264f" translate="yes" xml:space="preserve">
          <source>object type to be invoked on</source>
          <target state="translated">тип объекта для вызова</target>
        </trans-unit>
        <trans-unit id="f238a501170efa2524cadc7d4d387aaead58ffa1" translate="yes" xml:space="preserve">
          <source>object.dup</source>
          <target state="translated">object.dup</target>
        </trans-unit>
        <trans-unit id="cfa601d48cd392225de5b5a26d9e1b3ae354b946" translate="yes" xml:space="preserve">
          <source>object.get</source>
          <target state="translated">object.get</target>
        </trans-unit>
        <trans-unit id="778de0dab171f73dde1ca87ac43762bc2ca7fd2a" translate="yes" xml:space="preserve">
          <source>object.idup</source>
          <target state="translated">object.idup</target>
        </trans-unit>
        <trans-unit id="1d7dc897cf64271ebf6e391eb084c490e982297f" translate="yes" xml:space="preserve">
          <source>object.keys</source>
          <target state="translated">object.keys</target>
        </trans-unit>
        <trans-unit id="0426c65f9613a523407c71497c3795ae931bf5cc" translate="yes" xml:space="preserve">
          <source>object:</source>
          <target state="translated">object:</target>
        </trans-unit>
        <trans-unit id="60f7a51208a50e4639fc53af2d60b808f4429a1e" translate="yes" xml:space="preserve">
          <source>odd</source>
          <target state="translated">odd</target>
        </trans-unit>
        <trans-unit id="13388b3a1b16c7b440289c5e58414550f470d665" translate="yes" xml:space="preserve">
          <source>odd integer &amp;gt; 0.0</source>
          <target state="translated">нечетное целое число&amp;gt; 0,0</target>
        </trans-unit>
        <trans-unit id="c064e0a8c4fb00d7c69c2b073833906a2b470f1f" translate="yes" xml:space="preserve">
          <source>odd integer &amp;lt; 0.0</source>
          <target state="translated">нечетное целое число &amp;lt;0.0</target>
        </trans-unit>
        <trans-unit id="de04fa0e29f9b35e24905d2e512bedc9bb6e09e4" translate="yes" xml:space="preserve">
          <source>of</source>
          <target state="translated">of</target>
        </trans-unit>
        <trans-unit id="ea422fa955fdb88302b743b7a961e8ed7a2eba4e" translate="yes" xml:space="preserve">
          <source>of all the memory objects in that graph.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca57079d5851d5790862f0f30884058c2f58597" translate="yes" xml:space="preserve">
          <source>of an enum is the type it is based on:</source>
          <target state="translated">перечисления-это тип,на котором оно основано:</target>
        </trans-unit>
        <trans-unit id="e4321a961d56e7d2c37464a705a53e4e37d1815f" translate="yes" xml:space="preserve">
          <source>of another symbol. For example:</source>
          <target state="translated">другого символа.Например:</target>
        </trans-unit>
        <trans-unit id="440c7190b4ae17229e2627ae66f319cfb2d2aa12" translate="yes" xml:space="preserve">
          <source>of base classes and interfaces</source>
          <target state="translated">базовых классов и интерфейсов</target>
        </trans-unit>
        <trans-unit id="2cc43355c5fd1ed2ccb8087775bfcc39065961f4" translate="yes" xml:space="preserve">
          <source>of data. Other aliases to that same data may change it at any time.</source>
          <target state="translated">данных.Другие псевдонимы к этим же данным могут быть изменены в любое время.</target>
        </trans-unit>
        <trans-unit id="df864f477911152992ec3077c2980f665c8f3e74" translate="yes" xml:space="preserve">
          <source>of each element in the sequence in turn.</source>
          <target state="translated">каждого элемента в последовательности по очереди.</target>
        </trans-unit>
        <trans-unit id="dc049b29fada6fff06f51944d8a172053cd012c8" translate="yes" xml:space="preserve">
          <source>of equivalent sequences.</source>
          <target state="translated">эквивалентных последовательностей.</target>
        </trans-unit>
        <trans-unit id="d2263e6a77aa654ea8937e310e4e58af7cbbc1cc" translate="yes" xml:space="preserve">
          <source>of the</source>
          <target state="translated">от</target>
        </trans-unit>
        <trans-unit id="e28352a0d03271189cd5c387112dbcc9c876bcd2" translate="yes" xml:space="preserve">
          <source>of the allocated memory.</source>
          <target state="translated">выделенной памяти.</target>
        </trans-unit>
        <trans-unit id="f52c35d3e0733466a380e682707fe70607b0af79" translate="yes" xml:space="preserve">
          <source>of the dates.</source>
          <target state="translated">дат.</target>
        </trans-unit>
        <trans-unit id="259b384a747245e5f25850ca90ba5368e9b38ac7" translate="yes" xml:space="preserve">
          <source>of the elements of a range are true.</source>
          <target state="translated">элементы диапазона верны.</target>
        </trans-unit>
        <trans-unit id="f4d3af40cd728c5ecdd70073f0c2d20f97feafa0" translate="yes" xml:space="preserve">
          <source>of the elements of a range evaluate to true.</source>
          <target state="translated">элементов диапазона оценить до истины.</target>
        </trans-unit>
        <trans-unit id="9b9c32a83ae5ea06e7bfd4abcfc3897b38145305" translate="yes" xml:space="preserve">
          <source>of the elements verifies &lt;code&gt;pred&lt;/code&gt;. &lt;code&gt;!any&lt;/code&gt; can be used to verify that</source>
          <target state="translated">из элементов проверяет &lt;code&gt;pred&lt;/code&gt; . &lt;code&gt;!any&lt;/code&gt; может быть использован для проверки того, что</target>
        </trans-unit>
        <trans-unit id="f8cbe2fc2954e8df52bc7870a6acd8938511e95e" translate="yes" xml:space="preserve">
          <source>of the elements verify &lt;code&gt;pred&lt;/code&gt;.</source>
          <target state="translated">из элементов проверить &lt;code&gt;pred&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5574052c97959bf97903c529eb811e0a93d0f11" translate="yes" xml:space="preserve">
          <source>of the elements verify &lt;code&gt;pred&lt;/code&gt;. This is sometimes called &lt;code&gt;exists&lt;/code&gt; in other languages.</source>
          <target state="translated">из элементов проверить &lt;code&gt;pred&lt;/code&gt; . Это иногда называется &lt;code&gt;exists&lt;/code&gt; на других языках.</target>
        </trans-unit>
        <trans-unit id="96c1102e28147904b1364c9af1533a1167847c60" translate="yes" xml:space="preserve">
          <source>of the first elements from the given range.</source>
          <target state="translated">первых элементов из данного диапазона.</target>
        </trans-unit>
        <trans-unit id="550c16eb045fadf96a00681b4df40f45f8bd48bb" translate="yes" xml:space="preserve">
          <source>of the function parameter types. For C- and D-style variadic functions, only the non-variadic parameters are included. For typesafe variadic functions, the &lt;code&gt;...&lt;/code&gt; is ignored.</source>
          <target state="translated">типов параметров функции. Для функций с переменным числом C и D включены только не-переменные параметры. Для типов безопасных функций с переменным числом &lt;code&gt;...&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="77789db04e45321faa7ecb75439785da7a2e3946" translate="yes" xml:space="preserve">
          <source>of the heap.</source>
          <target state="translated">из кучи.</target>
        </trans-unit>
        <trans-unit id="6aa1295cc5730783da5ddb3f8b41f6df8af20c44" translate="yes" xml:space="preserve">
          <source>of the last elements from the given range.</source>
          <target state="translated">последних элементов из данного диапазона.</target>
        </trans-unit>
        <trans-unit id="4b8fdba08ee4700a71177b7beb362ce120446439" translate="yes" xml:space="preserve">
          <source>of the memory object. With the single owner, it becomes straightforward to manage the memory for the object. It also becomes trivial to synchronize access to that memory object among multiple threads, because it can only be accessed by the thread that controls that single pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b08264f79d9966156ab643daa5dfe8650a71e0d" translate="yes" xml:space="preserve">
          <source>of the time that it was running and not just the time since it was started last.</source>
          <target state="translated">времени,когда она работала,а не только времени,когда она была запущена в последний раз.</target>
        </trans-unit>
        <trans-unit id="0b729fa5b4aff68e18a6d03634eb4ca4899112d1" translate="yes" xml:space="preserve">
          <source>of the time units from weeks through hnsecs will be provided (but no nsecs, since it would always be &lt;code&gt;0&lt;/code&gt;).</source>
          <target state="translated">единиц времени от недель до hnsecs будут предоставлены (но не nsecs, так как это всегда будет &lt;code&gt;0&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="da7a68734367828e30b94927f4c2b43ed2c0f652" translate="yes" xml:space="preserve">
          <source>off</source>
          <target state="translated">off</target>
        </trans-unit>
        <trans-unit id="e4199089fb6096b7fa81537eea92b495aae7550d" translate="yes" xml:space="preserve">
          <source>offset from CUT in seconds</source>
          <target state="translated">смещение от CUT за считанные секунды</target>
        </trans-unit>
        <trans-unit id="0c348d1f1fd03cf033622d30e7039782aca31279" translate="yes" xml:space="preserve">
          <source>offset from EBP/RBP to catch variable</source>
          <target state="translated">смещение от EBP/RBP к переменной catch</target>
        </trans-unit>
        <trans-unit id="4622d32fd9c7f0dccfbbcc0eaacddf40f2f276bb" translate="yes" xml:space="preserve">
          <source>offset from function address to start of guarded section</source>
          <target state="translated">смещение от адреса функции к началу защищенной секции</target>
        </trans-unit>
        <trans-unit id="a7dd3b3efa0fda1f17b5e87ef1d7d70d1d628ea8" translate="yes" xml:space="preserve">
          <source>offset from start of function at which exception happened</source>
          <target state="translated">смещение от начала функции,при котором произошло исключение</target>
        </trans-unit>
        <trans-unit id="f532f61f912ddfcd77f737a0b3b7811afdfe0ab3" translate="yes" xml:space="preserve">
          <source>offset from start of function to return code</source>
          <target state="translated">смещение от старта функции к коду возврата</target>
        </trans-unit>
        <trans-unit id="9abd9de362f8b31dfbb30c0df56eee5668f02472" translate="yes" xml:space="preserve">
          <source>offset of ESP/RSP from EBP/RBP</source>
          <target state="translated">смещение ESP/RSP от EBP/RBP</target>
        </trans-unit>
        <trans-unit id="4c293e8d87c8fb687198c46cedb41e6812b03694" translate="yes" xml:space="preserve">
          <source>offset of end of guarded section</source>
          <target state="translated">смещение конца защищаемой секции</target>
        </trans-unit>
        <trans-unit id="ded14f82bcb371bdbdbbefcb2fc92c0e34211f15" translate="yes" xml:space="preserve">
          <source>offset of the data inside the Symbol's memory</source>
          <target state="translated">смещение данных в памяти символа</target>
        </trans-unit>
        <trans-unit id="e424e810d84c8830ac939be7cc4b2388a6e7d801" translate="yes" xml:space="preserve">
          <source>offset to Interface 'this' from Object 'this'</source>
          <target state="translated">смещение на интерфейс &quot;this&quot; от объекта &quot;this&quot;.</target>
        </trans-unit>
        <trans-unit id="7b682d3227d5459bb3ce8e3c197030c0cbd21982" translate="yes" xml:space="preserve">
          <source>offset to place field at  nextoffset: next location in aggregate memsize: size of member memalignsize: natural alignment of member alignment: alignment in effect for this member paggsize: size of aggregate (updated) paggalignsize: alignment of aggregate (updated) isunion: the aggregate is a union</source>
          <target state="translated">смещение для размещения поля в следующем смещении:следующее местоположение в совокупном размере:размер члена в совокупном размере:естественное выравнивание выравнивания члена:выравнивание,действующее для этого члена в пагали:размер совокупного (обновленного)пагалинизированного размера:выравнивание совокупного (обновленного)isunion:совокупность-это союз</target>
        </trans-unit>
        <trans-unit id="586f13ed9b71f5193d439b4c26bab2816c4287a6" translate="yes" xml:space="preserve">
          <source>on Windows, it must be a directory; on POSIX it can be a file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6a31fea54d10b834118501b8aad1a037324e99" translate="yes" xml:space="preserve">
          <source>on Windows, it must be a directory; on Posix it can be a file or directory</source>
          <target state="translated">в Windows это должен быть каталог;в Posix это может быть файл или каталог.</target>
        </trans-unit>
        <trans-unit id="8dbd6bbb89d8fd3500db013ed1933405c9fd29e9" translate="yes" xml:space="preserve">
          <source>on the result</source>
          <target state="translated">на результат</target>
        </trans-unit>
        <trans-unit id="0c81dcc0e32249b7123ce2f50c2b208a01b7d925" translate="yes" xml:space="preserve">
          <source>one CWD to full dir, then work on file</source>
          <target state="translated">один CWD на полную грязь,а потом работать над файлом.</target>
        </trans-unit>
        <trans-unit id="bfc291ec6a0059278f6de5484f2a455de56ed335" translate="yes" xml:space="preserve">
          <source>one match of length 3, namely (&lt;code&gt;&quot;Hello&quot;, &quot;new&quot;, &quot;world&quot;&lt;/code&gt;).</source>
          <target state="translated">одно совпадение длины 3, а именно ( &lt;code&gt;&quot;Hello&quot;, &quot;new&quot;, &quot;world&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1bf40fec35f6a0f1a999f41b66937e4d1fd9a5a7" translate="yes" xml:space="preserve">
          <source>one of the following:</source>
          <target state="translated">один из следующих:</target>
        </trans-unit>
        <trans-unit id="553be169c0aaba5ff44cd3cf0ec6330ae5688d1d" translate="yes" xml:space="preserve">
          <source>one of the standard input/output/error streams of the parent process, that stream will by default be</source>
          <target state="translated">один из стандартных потоков ввода/вывода/ошибки родительского процесса,который по умолчанию будет</target>
        </trans-unit>
        <trans-unit id="d569a1e8cba497742d4ea62706813c1a027c5917" translate="yes" xml:space="preserve">
          <source>one of the strings &quot;D&quot;, &quot;C&quot;, &quot;C++&quot;, &quot;Windows&quot;, &quot;Objective-C&quot;, or &quot;System&quot;.</source>
          <target state="translated">одна из строк &quot;D&quot;,&quot;C&quot;,&quot;C++&quot;,&quot;Windows&quot;,&quot;Objective-C&quot; или &quot;System&quot;.</target>
        </trans-unit>
        <trans-unit id="cdb6789e40daf4119545153adc34a2f1bdfb87ec" translate="yes" xml:space="preserve">
          <source>one of the timings defined in &lt;a href=&quot;etc_c_curl#CurlInfo&quot;&gt;&lt;code&gt;etc.c.curl.CurlInfo&lt;/code&gt;&lt;/a&gt;. The values are: &lt;code&gt;etc.c.curl.CurlInfo.namelookup_time&lt;/code&gt;, &lt;code&gt;etc.c.curl.CurlInfo.connect_time&lt;/code&gt;, &lt;code&gt;etc.c.curl.CurlInfo.pretransfer_time&lt;/code&gt;, &lt;code&gt;etc.c.curl.CurlInfo.starttransfer_time&lt;/code&gt;, &lt;code&gt;etc.c.curl.CurlInfo.redirect_time&lt;/code&gt;, &lt;code&gt;etc.c.curl.CurlInfo.appconnect_time&lt;/code&gt;, &lt;code&gt;etc.c.curl.CurlInfo.total_time&lt;/code&gt;.</source>
          <target state="translated">один из &lt;a href=&quot;etc_c_curl#CurlInfo&quot;&gt; &lt;code&gt;etc.c.curl.CurlInfo&lt;/code&gt; &lt;/a&gt; времени, определенных в etc.curl.CurlInfo . Значения: &lt;code&gt;etc.c.curl.CurlInfo.namelookup_time&lt;/code&gt; , &lt;code&gt;etc.c.curl.CurlInfo.connect_time&lt;/code&gt; , &lt;code&gt;etc.c.curl.CurlInfo.pretransfer_time&lt;/code&gt; , &lt;code&gt;etc.c.curl.CurlInfo.starttransfer_time&lt;/code&gt; , &lt;code&gt;etc.c.curl.CurlInfo.redirect_time&lt;/code&gt; , &lt;code&gt;etc.c.curl.CurlInfo.appconnect_time&lt;/code&gt; , &lt;code&gt;etc.c.curl.CurlInfo.total_time&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bad2137fe35060382591003ebfbb66f71346caa" translate="yes" xml:space="preserve">
          <source>one of the types is a static array type with length zero; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a2a8c09f45a01037486ebd9f42a2afbf58d91b" translate="yes" xml:space="preserve">
          <source>one of the types is a static array type with non-zero length, and aliasing of the array's element type and the other type is safe; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e050058024564d2509e6c5a985e4dc9dbd52701f" translate="yes" xml:space="preserve">
          <source>one of the types is mutable while the other is a &lt;code&gt;const&lt;/code&gt;-qualified &lt;a href=&quot;type#basic-data-types&quot;&gt;basic data type&lt;/a&gt;; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989e159fcabb605a6b12a73fdc192566057c553f" translate="yes" xml:space="preserve">
          <source>one or more arrays of any type</source>
          <target state="translated">один или несколько массивов любого типа</target>
        </trans-unit>
        <trans-unit id="ec1cabf6c7e31f2327a56e7868ec7fe545e6e0e2" translate="yes" xml:space="preserve">
          <source>one or more functions</source>
          <target state="translated">одна или несколько функций</target>
        </trans-unit>
        <trans-unit id="5c1589a82202f1ba807b0c6c950671a5e44c71d2" translate="yes" xml:space="preserve">
          <source>one or more functions to use as fold operation</source>
          <target state="translated">одна или несколько функций для использования в качестве операции складывания</target>
        </trans-unit>
        <trans-unit id="d47544f0526c5c831a1ce5e7215b81e94defdeb5" translate="yes" xml:space="preserve">
          <source>one or more transformation functions</source>
          <target state="translated">одна или несколько трансформационных функций</target>
        </trans-unit>
        <trans-unit id="f8969a18a0daab6f59b42990613def0b8b6d48eb" translate="yes" xml:space="preserve">
          <source>only</source>
          <target state="translated">only</target>
        </trans-unit>
        <trans-unit id="6d1974f966a2ac2134d7817d2cd46355e7063f2b" translate="yes" xml:space="preserve">
          <source>only look for cleanups</source>
          <target state="translated">ищут только чистки</target>
        </trans-unit>
        <trans-unit id="2e202ed79e9ec8406c2ce70571d99b284e6a71f1" translate="yes" xml:space="preserve">
          <source>only numeric, &lt;code&gt;bool&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;JSONValue[string]&lt;/code&gt; and &lt;code&gt;JSONValue[]&lt;/code&gt; types are accepted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e3c45e2b96d213991cbaaf2e14de48c38c8ff7" translate="yes" xml:space="preserve">
          <source>only resolve overloads.</source>
          <target state="translated">только разрешать перегрузки.</target>
        </trans-unit>
        <trans-unit id="824f601c2a81ee6bab79ccd4792304c738d17630" translate="yes" xml:space="preserve">
          <source>op</source>
          <target state="translated">op</target>
        </trans-unit>
        <trans-unit id="5a5820fc0e28774b0dd9b2e552f15175e3759c27" translate="yes" xml:space="preserve">
          <source>op2 These cannot be marked as pure, as semantic() doesn't check them.</source>
          <target state="translated">op2 Они не могут быть помечены как чистые,так как semantic()их не проверяет.</target>
        </trans-unit>
        <trans-unit id="5a809f9e63d5d9d201e9cf17d8be8e48ebd679e3" translate="yes" xml:space="preserve">
          <source>opApply</source>
          <target state="translated">opApply</target>
        </trans-unit>
        <trans-unit id="d8a5a4e0ea4ccf39dd69236b851399e8c7f1e648" translate="yes" xml:space="preserve">
          <source>opAssign Example.</source>
          <target state="translated">opAssign Пример.</target>
        </trans-unit>
        <trans-unit id="56d0771a6c6b5753344ad4b090ad03155a95effb" translate="yes" xml:space="preserve">
          <source>opaque type of unwinder state information</source>
          <target state="translated">непрозрачный тип размоточного устройства</target>
        </trans-unit>
        <trans-unit id="0b9fd5b1f2049356d05fdb8ebbced2752f86f2a2" translate="yes" xml:space="preserve">
          <source>opcode = any of the XMM opcodes; it must be a compile time constant op1 = first operand imm8 = second operand; must be a compile time constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8840c489c46f5f6169057d7bd1d1e9ead9d5bd29" translate="yes" xml:space="preserve">
          <source>opcode = any of the XMM opcodes; it must be a compile time constant op1 = first operand op2 = second operand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42626ece6e0f8759cf84374346caaf46a49039ab" translate="yes" xml:space="preserve">
          <source>opcode = any of the above XMM opcodes; it must be a compile time constant op1 = first operand op2 = second operand imm8 = third operand; must be a compile time constant</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136ad01096a6e5786a53ef45685c2e1ac34f9870" translate="yes" xml:space="preserve">
          <source>opcode any of the XMM opcodes; it must be a compile time constant op1 first operand imm8 second operand; must be a compile time constant</source>
          <target state="translated">опкод любого из опкодов XMM;это должна быть константа времени компиляции op1 первый операнд imm8 второй операнд;это должна быть константа времени компиляции</target>
        </trans-unit>
        <trans-unit id="7561e845680de944dd71b979122a6763de92f4e2" translate="yes" xml:space="preserve">
          <source>opcode any of the XMM opcodes; it must be a compile time constant op1 first operand op2 second operand</source>
          <target state="translated">опкод любого из опкодов XMM;это должен быть константа времени компиляции op1 первый операнд op2 второй операнд</target>
        </trans-unit>
        <trans-unit id="ab6b6204b3b6ff274f35db80eee5658be622dd46" translate="yes" xml:space="preserve">
          <source>opcode any of the above XMM opcodes; it must be a compile time constant op1 first operand op2 second operand imm8 third operand; must be a compile time constant</source>
          <target state="translated">опкод любого из вышеперечисленных опкодов XMM;он должен быть константой времени компиляции op1 первый операнд op2 второй операнд imm8 третий операнд;он должен быть константой времени компиляции</target>
        </trans-unit>
        <trans-unit id="05c7d4b3b497b05a8825b84dad79d6c568f9ea29" translate="yes" xml:space="preserve">
          <source>opcode xmm1,xmm2/mem</source>
          <target state="translated">код операции xmm1,xmm2/mem</target>
        </trans-unit>
        <trans-unit id="fe4bd618ca8f27e9d43aaaa47161ef4782031898" translate="yes" xml:space="preserve">
          <source>operand</source>
          <target state="translated">operand</target>
        </trans-unit>
        <trans-unit id="a1c4a912d58181c3ee090020b197b6c2f8b0cc12" translate="yes" xml:space="preserve">
          <source>operand &lt;code&gt;a&lt;/code&gt; is only evaluated once,</source>
          <target state="translated">операнд &lt;code&gt;a&lt;/code&gt; оценивается только один раз,</target>
        </trans-unit>
        <trans-unit id="5deae5e1a215073742dcc02f91a0b313bae642f8" translate="yes" xml:space="preserve">
          <source>operands, where</source>
          <target state="translated">операнды,где</target>
        </trans-unit>
        <trans-unit id="3eb07ab339ffd10a7dafafe5d6b0db4cbb5f1670" translate="yes" xml:space="preserve">
          <source>operation on a &lt;code&gt;RefRange&lt;/code&gt; is the same is if it occurred to the original range. The one exception is when a &lt;code&gt;RefRange&lt;/code&gt; is assigned &lt;code&gt;null&lt;/code&gt; either directly or because &lt;code&gt;rhs&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. In that case, &lt;code&gt;RefRange&lt;/code&gt; no longer refers to the original range but is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">операция с &lt;code&gt;RefRange&lt;/code&gt; такая же, как если бы она произошла в исходном диапазоне. Единственным исключением является ситуация, когда &lt;code&gt;RefRange&lt;/code&gt; присваивается &lt;code&gt;null&lt;/code&gt; либо непосредственно , либо из - за &lt;code&gt;rhs&lt;/code&gt; является &lt;code&gt;null&lt;/code&gt; . В этом случае &lt;code&gt;RefRange&lt;/code&gt; больше не ссылается на исходный диапазон, но имеет значение &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a8efa1a8489e3afd784052c405378d0f2c4647b" translate="yes" xml:space="preserve">
          <source>operator overloading &quot;&amp;lt;, &amp;gt;, &amp;lt;=, &amp;gt;=&quot;</source>
          <target state="translated">перегрузка оператора &quot;&amp;lt;,&amp;gt;, &amp;lt;=,&amp;gt; =&quot;</target>
        </trans-unit>
        <trans-unit id="6f2cad79eaba970669ea2257884356329debe120" translate="yes" xml:space="preserve">
          <source>operator. It is used to concatenate arrays:</source>
          <target state="translated">Оператор.Он используется для конкатенирования массивов:</target>
        </trans-unit>
        <trans-unit id="8c7d3113a66f7026f070b76894407ba35a2148eb" translate="yes" xml:space="preserve">
          <source>opover.d</source>
          <target state="translated">opover.d</target>
        </trans-unit>
        <trans-unit id="102210fe594ee9b33d82058545b1ed14f4c8206e" translate="yes" xml:space="preserve">
          <source>opt</source>
          <target state="translated">opt</target>
        </trans-unit>
        <trans-unit id="fb94401facfe99b9104dc9ececb6fc915b67803d" translate="yes" xml:space="preserve">
          <source>optimize is running</source>
          <target state="translated">оптимизация запущена</target>
        </trans-unit>
        <trans-unit id="91d3dafcace78311c62e4b03410a4017e166f576" translate="yes" xml:space="preserve">
          <source>optimize.d</source>
          <target state="translated">optimize.d</target>
        </trans-unit>
        <trans-unit id="7c6e42115fd95cea8f073c0175557b7bd5323361" translate="yes" xml:space="preserve">
          <source>optional &lt;code&gt;seed&lt;/code&gt; value (may be used for hash chaining)</source>
          <target state="translated">необязательное &lt;code&gt;seed&lt;/code&gt; значение (может использоваться для цепочки хэшей)</target>
        </trans-unit>
        <trans-unit id="5d6616cdb4e8f80d5006367b6509132b66970371" translate="yes" xml:space="preserve">
          <source>optional additional parameters, identified by type:</source>
          <target state="translated">опциональные дополнительные параметры,идентифицируемые по типу:</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">options</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="be0f522719899cc3c09565ce71527c51d4a8ee32" translate="yes" xml:space="preserve">
          <source>or &lt;a href=&quot;#BlockStatement&quot;&gt;&lt;i&gt;BlockStatement&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">или &lt;a href=&quot;#BlockStatement&quot;&gt;&lt;i&gt;BlockStatement&lt;/i&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7e8dbe85805210e449579ff531e41d5559ec0ce" translate="yes" xml:space="preserve">
          <source>or implicitly, where the</source>
          <target state="translated">или косвенно,где</target>
        </trans-unit>
        <trans-unit id="fafe85cdf424552a276dea0fb46bdac97734c2cd" translate="yes" xml:space="preserve">
          <source>or in multiple files, by organizing them in a package consisting of several modules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb9fecd61b43c81c068572d646b92f064fd81fe" translate="yes" xml:space="preserve">
          <source>or to use a wrapper (such as a stop watch type) which does that.</source>
          <target state="translated">или использовать обертку (например,тип стоп-часов),которая делает это.</target>
        </trans-unit>
        <trans-unit id="44724eb3293edc9b10674f1d2c5ef619677bdaf8" translate="yes" xml:space="preserve">
          <source>or use RAII objects or call only &lt;code&gt;nothrow&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9119b1f3836ba41e102d1b412d92235382d59ea4" translate="yes" xml:space="preserve">
          <source>or use the function &lt;code&gt;std.string.toStringz&lt;/code&gt;.</source>
          <target state="translated">или используйте функцию &lt;code&gt;std.string.toStringz&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66e960e0ed736469d4b08a93cf2424a7177294dd" translate="yes" xml:space="preserve">
          <source>or, if</source>
          <target state="translated">или,если</target>
        </trans-unit>
        <trans-unit id="1d9ad0addee82809659247e9008e6f9e82aa9000" translate="yes" xml:space="preserve">
          <source>or:</source>
          <target state="translated">or:</target>
        </trans-unit>
        <trans-unit id="cce55e4309a753985bdd21919395fdc17daa11e4" translate="yes" xml:space="preserve">
          <source>order</source>
          <target state="translated">order</target>
        </trans-unit>
        <trans-unit id="d73ef92426f2b11dfc4aed4d4bfc41c49ee1087c" translate="yes" xml:space="preserve">
          <source>original</source>
          <target state="translated">original</target>
        </trans-unit>
        <trans-unit id="d45adefa7b14fc3a2e9954cfb4efd4bb6309e070" translate="yes" xml:space="preserve">
          <source>original expression</source>
          <target state="translated">оригинальное выражение</target>
        </trans-unit>
        <trans-unit id="73cd5e7d8b611cbed0c88138c8f5f9dfac606c4b" translate="yes" xml:space="preserve">
          <source>original expression, for error messages</source>
          <target state="translated">оригинальное выражение,для сообщений об ошибках</target>
        </trans-unit>
        <trans-unit id="2ede764689b9572f151596e7520287bc46b7f2a0" translate="yes" xml:space="preserve">
          <source>other type</source>
          <target state="translated">другой вид</target>
        </trans-unit>
        <trans-unit id="acbe8027484c59772741ff91f0519d0f5b3f9e38" translate="yes" xml:space="preserve">
          <source>our copy of the environment</source>
          <target state="translated">наша копия окружения</target>
        </trans-unit>
        <trans-unit id="4ca3100296d2a55019b75c512a41096a15f95426" translate="yes" xml:space="preserve">
          <source>our own cache of the program environment</source>
          <target state="translated">наш собственный кэш программного окружения</target>
        </trans-unit>
        <trans-unit id="6ef82f880d23bf95d08c8f6afecfc8b5b162a4d6" translate="yes" xml:space="preserve">
          <source>out contracts</source>
          <target state="translated">наши договоры</target>
        </trans-unit>
        <trans-unit id="6bf5c220c04fbbf2adba4d13933704bd0cb40020" translate="yes" xml:space="preserve">
          <source>out of memory</source>
          <target state="translated">незабываемый</target>
        </trans-unit>
        <trans-unit id="2ca595f621e5140415877f0c6e29c5dd0e4fb55c" translate="yes" xml:space="preserve">
          <source>out-of-band stream data</source>
          <target state="translated">внеполосные данные</target>
        </trans-unit>
        <trans-unit id="25ef663d68cbd034b40d6c55de62ecc374447403" translate="yes" xml:space="preserve">
          <source>outdented string</source>
          <target state="translated">изогнутая струна</target>
        </trans-unit>
        <trans-unit id="507a62f97fee61b41759fa4ac5cd2b8760fbba5c" translate="yes" xml:space="preserve">
          <source>outer context</source>
          <target state="translated">внешний контекст</target>
        </trans-unit>
        <trans-unit id="0b4593cde48693aed76f699ceb670d3dfac96e0e" translate="yes" xml:space="preserve">
          <source>output buffer to write to</source>
          <target state="translated">выходной буфер для записи в</target>
        </trans-unit>
        <trans-unit id="ff574635734d427c87c544913ccb91140d8a60bc" translate="yes" xml:space="preserve">
          <source>output range</source>
          <target state="translated">диапазон производительности</target>
        </trans-unit>
        <trans-unit id="60c7ad4f528f277fea3dbff2b973ad171982309e" translate="yes" xml:space="preserve">
          <source>output stream to print the information on</source>
          <target state="translated">выходной поток для печати информации на</target>
        </trans-unit>
        <trans-unit id="5ae236c819413bdd15d8c247faf618c0c53b5f39" translate="yes" xml:space="preserve">
          <source>outputs the number of elements used from &lt;code&gt;a&lt;/code&gt; to it. Optional.</source>
          <target state="translated">выводит количество элементов, используемых от &lt;code&gt;a&lt;/code&gt; к нему. По желанию.</target>
        </trans-unit>
        <trans-unit id="ad198eb72c028adbee77c22ac42ce49d39432aaa" translate="yes" xml:space="preserve">
          <source>overall template for output</source>
          <target state="translated">общий шаблон для вывода</target>
        </trans-unit>
        <trans-unit id="10e80591d92f76de99d040a135745da09e965721" translate="yes" xml:space="preserve">
          <source>overflow</source>
          <target state="translated">overflow</target>
        </trans-unit>
        <trans-unit id="ffc7d95ed3f8818ea24d3047b4afbed02c663efe" translate="yes" xml:space="preserve">
          <source>overload of &lt;a href=&quot;#translate&quot;&gt;&lt;code&gt;translate&lt;/code&gt;&lt;/a&gt;. It will</source>
          <target state="translated">перегрузка &lt;a href=&quot;#translate&quot;&gt; &lt;code&gt;translate&lt;/code&gt; &lt;/a&gt; . Так и будет</target>
        </trans-unit>
        <trans-unit id="036d8dad6cbf1d5c9cfe68bb77d5481a6b8f05ca" translate="yes" xml:space="preserve">
          <source>overload of &lt;code&gt;translate&lt;/code&gt; which takes an existing buffer to write the contents to.</source>
          <target state="translated">перегрузка &lt;code&gt;translate&lt;/code&gt; , которая принимает существующий буфер для записи содержимого.</target>
        </trans-unit>
        <trans-unit id="f22cb1d46654c6b741b7eafe9fb24dd26a0c672a" translate="yes" xml:space="preserve">
          <source>overloading</source>
          <target state="translated">overloading</target>
        </trans-unit>
        <trans-unit id="579233b2c479241523cba5e3af55d0f50f2d6414" translate="yes" xml:space="preserve">
          <source>owner</source>
          <target state="translated">owner</target>
        </trans-unit>
        <trans-unit id="2eac87f5b91a65f25eba8c4556a83576f8cc779e" translate="yes" xml:space="preserve">
          <source>ownership of a pointer from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="b78f576611ec06f96af3ca654c22172a5d746c40" translate="yes" xml:space="preserve">
          <source>p1</source>
          <target state="translated">p1</target>
        </trans-unit>
        <trans-unit id="c5fd961c9f737a955a308050062e7a2c34ee67c3" translate="yes" xml:space="preserve">
          <source>p2</source>
          <target state="translated">p2</target>
        </trans-unit>
        <trans-unit id="9ac9e17fbb106be9d5a10c07136c41642ac7b39b" translate="yes" xml:space="preserve">
          <source>pEndloc if { ... statements ... }, store location of closing brace, otherwise loc of last token of statement</source>
          <target state="translated">pEndloc,если{...заявления...},место хранения закрывающего скобки,в противном случае место последнего слова утверждения</target>
        </trans-unit>
        <trans-unit id="07d9c24a719c0db1ec3c7596eb78617d2cc20248" translate="yes" xml:space="preserve">
          <source>package nothrow bool &lt;strong id=&quot;isValidMangling&quot;&gt;isValidMangling&lt;/strong&gt;(dchar c);</source>
          <target state="translated">пакет nothrow bool &lt;strong id=&quot;isValidMangling&quot;&gt;isValidMangling&lt;/strong&gt; (dchar c);</target>
        </trans-unit>
        <trans-unit id="ec9fa3ac4e0de4ff07cea7acc6c1f83509774974" translate="yes" xml:space="preserve">
          <source>package(rt) nothrow @nogc @safe void &lt;strong id=&quot;safeAssert&quot;&gt;safeAssert&lt;/strong&gt;(bool condition, scope string msg, scope string file = __FILE__, size_t line = __LINE__);</source>
          <target state="translated">package (rt) nothrow @nogc @safe void &lt;strong id=&quot;safeAssert&quot;&gt;safeAssert&lt;/strong&gt; (условие bool, строка сообщения msg, файл строки объема = __FILE__, строка размера_t = __LINE__);</target>
        </trans-unit>
        <trans-unit id="d8ae088aee969371bf4ed994e9106b5d3e799c35" translate="yes" xml:space="preserve">
          <source>packages</source>
          <target state="translated">packages</target>
        </trans-unit>
        <trans-unit id="c4a8c9c0c08175f7b53a5a7c21a8e0ee23893290" translate="yes" xml:space="preserve">
          <source>packages[] the pkg1.pkg2 of pkg1.pkg2.mod</source>
          <target state="translated">пакеты[]пкг1.пкг2 пкг1.пкг2.мода</target>
        </trans-unit>
        <trans-unit id="b0185afc54c98eff24e100d27896e8e045b4f11a" translate="yes" xml:space="preserve">
          <source>padding added to the CPU real size to bring it up to realsize</source>
          <target state="translated">Набивка добавлена в реальный размер процессора,чтобы довести его до реальных размеров</target>
        </trans-unit>
        <trans-unit id="52055391768ba89200bb2c43130f0bffb40a32d2" translate="yes" xml:space="preserve">
          <source>pairs between square brackets &lt;code&gt;[&lt;/code&gt; and &lt;code&gt;]&lt;/code&gt;. The list cannot be empty. The common type of the all keys is taken to be the key type of the associative array, and all keys are implicitly converted to that type. The common type of the all values is taken to be the value type of the associative array, and all values are implicitly converted to that type. An</source>
          <target state="translated">пары в квадратных скобках &lt;code&gt;[&lt;/code&gt; и &lt;code&gt;]&lt;/code&gt; . Список не может быть пустым. Общий тип всех ключей считается типом ключа ассоциативного массива, и все ключи неявно преобразуются в этот тип. Общий тип всех значений принимается за тип значения ассоциативного массива, и все значения неявно преобразуются в этот тип.</target>
        </trans-unit>
        <trans-unit id="1d27f2ae81d44dd40b3c6c257b1c77df70d2c481" translate="yes" xml:space="preserve">
          <source>pairs. The</source>
          <target state="translated">пары.</target>
        </trans-unit>
        <trans-unit id="86b52d6b869bf859528bbcff75ca35388a11a449" translate="yes" xml:space="preserve">
          <source>parallel:N - number of additional threads for marking</source>
          <target state="translated">параллельный:N-количество дополнительных нитей для разметки</target>
        </trans-unit>
        <trans-unit id="9105e0c1986008a0f3f2e5ac20c3b8e410341eff" translate="yes" xml:space="preserve">
          <source>parallels sd.fields[] with null entries for fields to skip</source>
          <target state="translated">параллельно sd.fields[]с нулевыми записями для пропуска полей</target>
        </trans-unit>
        <trans-unit id="b75381f00486e5b8409bb3475762882a8ac61715" translate="yes" xml:space="preserve">
          <source>parameter</source>
          <target state="translated">parameter</target>
        </trans-unit>
        <trans-unit id="d08c7f7a090d0b89708cb45e3ce7db1a0843d309" translate="yes" xml:space="preserve">
          <source>parameter becomes a mutable copy of its argument</source>
          <target state="translated">параметр становится мутируемой копией своего аргумента</target>
        </trans-unit>
        <trans-unit id="7962834ac20554a6840d30fac47e3b4c00b66502" translate="yes" xml:space="preserve">
          <source>parameter for the CURLOPT_FTPSSLAUTH option</source>
          <target state="translated">параметр для опции CURLOPT_FTPSSLAUTH</target>
        </trans-unit>
        <trans-unit id="049e3048810da15ec255ede9a1dedf3f751e3582" translate="yes" xml:space="preserve">
          <source>parameter for the CURLOPT_FTP_CREATE_MISSING_DIRS option</source>
          <target state="translated">параметр для опции CURLOPT_FTP_CREATE_MISSING_DIRS</target>
        </trans-unit>
        <trans-unit id="23efd9dbb0e3f2d2924b33f54a266109ccb5b903" translate="yes" xml:space="preserve">
          <source>parameter for the CURLOPT_FTP_FILEMETHOD option</source>
          <target state="translated">параметр для опции CURLOPT_FTP_FILEMETHOD</target>
        </trans-unit>
        <trans-unit id="946696238badac81693f7ed462392e275cc89368" translate="yes" xml:space="preserve">
          <source>parameter for the CURLOPT_FTP_SSL_CCC option</source>
          <target state="translated">параметр для опции CURLOPT_FTP_SSL_CCC</target>
        </trans-unit>
        <trans-unit id="74f92cad98a6f496c129f804285366e2253d57df" translate="yes" xml:space="preserve">
          <source>parameter for the CURLOPT_USE_SSL option</source>
          <target state="translated">параметр для опции CURLOPT_USE_SSL</target>
        </trans-unit>
        <trans-unit id="6208b387b2ce4c94a0a213bfe009b47d5de71b14" translate="yes" xml:space="preserve">
          <source>parameter is &lt;code&gt;ref&lt;/code&gt; or &lt;code&gt;out&lt;/code&gt;</source>
          <target state="translated">параметр &lt;code&gt;ref&lt;/code&gt; или &lt;code&gt;out&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="516d4239be2c7ad7007e1d86905f5accb027443b" translate="yes" xml:space="preserve">
          <source>parameter is initialized upon function entry with the default value for its type</source>
          <target state="translated">параметр инициализируется при вводе функции значением по умолчанию для ее типа</target>
        </trans-unit>
        <trans-unit id="e46e7dddcb35335dd847ddd792df78a66046253c" translate="yes" xml:space="preserve">
          <source>parameter is passed by reference</source>
          <target state="translated">параметр передаётся по ссылке</target>
        </trans-unit>
        <trans-unit id="e849081072cbafad26c14a404cff15b5d0da9599" translate="yes" xml:space="preserve">
          <source>parameter list to print</source>
          <target state="translated">список параметров для печати</target>
        </trans-unit>
        <trans-unit id="fb3af109196ba3794b88dc9cd6ee0dbab110b73d" translate="yes" xml:space="preserve">
          <source>parameter means that the parameter's value does not escape the scope of the</source>
          <target state="translated">параметр означает,что значение параметра не выходит за рамки параметра</target>
        </trans-unit>
        <trans-unit id="6eef9d88ef5f56aec2da38d7a301b9985e38754e" translate="yes" xml:space="preserve">
          <source>parameter to be passed.</source>
          <target state="translated">передаваемый параметр.</target>
        </trans-unit>
        <trans-unit id="f28ab2036bce145717926ee0912d3a714fe00865" translate="yes" xml:space="preserve">
          <source>parameter to print.</source>
          <target state="translated">параметр для печати.</target>
        </trans-unit>
        <trans-unit id="2f76648be320658cd8332ece2e35bf50c2db0750" translate="yes" xml:space="preserve">
          <source>parameter to this function</source>
          <target state="translated">параметр к этой функции</target>
        </trans-unit>
        <trans-unit id="8e63b5f1e972a6a3f756665a57e3bff7731e7ad1" translate="yes" xml:space="preserve">
          <source>parameter, passed by reference. It is expected that the function will both read and write to this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648d85d4deed6cb9dfdf5959665ccd0d4101b6d1" translate="yes" xml:space="preserve">
          <source>parameter.</source>
          <target state="translated">parameter.</target>
        </trans-unit>
        <trans-unit id="f1f1425b65e5770c87be308dd6bfee4b3fa1b113" translate="yes" xml:space="preserve">
          <source>parameters</source>
          <target state="translated">parameters</target>
        </trans-unit>
        <trans-unit id="d8fd39d0bbdd2dcf322d8b11390a4c5825b11495" translate="yes" xml:space="preserve">
          <source>parent</source>
          <target state="translated">parent</target>
        </trans-unit>
        <trans-unit id="9e0476c22c4211e55e9fab4c77ce355d755be0fb" translate="yes" xml:space="preserve">
          <source>parm1Name</source>
          <target state="translated">parm1Name</target>
        </trans-unit>
        <trans-unit id="1c948a86ae502415394e1a8fbc8deac1432d60cd" translate="yes" xml:space="preserve">
          <source>parm2Name</source>
          <target state="translated">parm2Name</target>
        </trans-unit>
        <trans-unit id="5b6eb21768f9cd194333677b72945a818d0742e9" translate="yes" xml:space="preserve">
          <source>parmName</source>
          <target state="translated">parmName</target>
        </trans-unit>
        <trans-unit id="a76e1c7ef2734a0d90066c7b4604506bb5c35d92" translate="yes" xml:space="preserve">
          <source>parse.d</source>
          <target state="translated">parse.d</target>
        </trans-unit>
        <trans-unit id="a8e912d549e0c6722ca8b6c329b330fae037c868" translate="yes" xml:space="preserve">
          <source>parses as a subexpression of another expression</source>
          <target state="translated">синтаксический анализ как подвыражение другого выражения</target>
        </trans-unit>
        <trans-unit id="f35ac5964ff07ecb36fa89199dfbed380c9e11a9" translate="yes" xml:space="preserve">
          <source>part of input</source>
          <target state="translated">часть входа</target>
        </trans-unit>
        <trans-unit id="355705cf62a56669303d2561f29e0620a676c36e" translate="yes" xml:space="preserve">
          <source>partial</source>
          <target state="translated">partial</target>
        </trans-unit>
        <trans-unit id="c35cdd7cb429f704d24985b2e1e46bcc8decb195" translate="yes" xml:space="preserve">
          <source>partial ordering</source>
          <target state="translated">частичный заказ</target>
        </trans-unit>
        <trans-unit id="692cc2bd146a9dfff279567a5629222c375d4982" translate="yes" xml:space="preserve">
          <source>pass in a 'curl_lock_function' pointer</source>
          <target state="translated">передать в указателе 'curl_lock_function'</target>
        </trans-unit>
        <trans-unit id="407d78f26567a9dd3973c6792477190dbff12ecc" translate="yes" xml:space="preserve">
          <source>pass in a 'curl_unlock_function' pointer</source>
          <target state="translated">передать в указателе 'curl_unlock_function'</target>
        </trans-unit>
        <trans-unit id="cd8eaefc5e965abf6034d4e6c26d0b62e8e45bf5" translate="yes" xml:space="preserve">
          <source>pass in a user data pointer used in the lock/unlock callback functions</source>
          <target state="translated">передать указатель данных пользователя,используемый в функциях блокировки/разблокировки обратного вызова.</target>
        </trans-unit>
        <trans-unit id="949cab1086e96ee0402e46ba431e2875b5bada02" translate="yes" xml:space="preserve">
          <source>passed by &lt;code&gt;ref&lt;/code&gt; to a function parameter, treated as an assignment to a Borrow or a Readonly depending on the storage class and type of the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a09d086af8c0c8add1a1e3f7358a3a68c2a2d7" translate="yes" xml:space="preserve">
          <source>passed to an &lt;code&gt;out&lt;/code&gt; function parameter (changes state after the function returns), treated the same as initialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5baa61e4c9b93f3f0682250b6cf8331b7ee68fd8" translate="yes" xml:space="preserve">
          <source>password</source>
          <target state="translated">password</target>
        </trans-unit>
        <trans-unit id="dd95ead955c13a41eb4fba5ce5a066fa340a4b79" translate="yes" xml:space="preserve">
          <source>password for the SSL or SSH private key</source>
          <target state="translated">пароль к закрытому ключу SSL или SSH</target>
        </trans-unit>
        <trans-unit id="3150ecd5e0294534a81ae047ddac559de481d774" translate="yes" xml:space="preserve">
          <source>path</source>
          <target state="translated">path</target>
        </trans-unit>
        <trans-unit id="bdcbe8ca9a254b5c1ad346949e6e7e973386efeb" translate="yes" xml:space="preserve">
          <source>path load data from local disk.</source>
          <target state="translated">путь загрузки данных с локального диска.</target>
        </trans-unit>
        <trans-unit id="208949e268456e0c6957a86e6cb029461e81f430" translate="yes" xml:space="preserve">
          <source>path to store the downloaded content on local disk</source>
          <target state="translated">путь хранения загруженного содержимого на локальном диске</target>
        </trans-unit>
        <trans-unit id="a02f727c5bed0afa2be9c5b4eb7dfe0fcad36a40" translate="yes" xml:space="preserve">
          <source>path to the current DMD executable</source>
          <target state="translated">путь к текущему исполняемому файлу DMD</target>
        </trans-unit>
        <trans-unit id="9f50affc9f0b32ce01af4f6c48065688aea69704" translate="yes" xml:space="preserve">
          <source>path to the current LDC executable</source>
          <target state="translated">путь к текущему исполнительному модулю LDC</target>
        </trans-unit>
        <trans-unit id="96fb558bbbc8c1679dc0bc7638508ab32ab23dc0" translate="yes" xml:space="preserve">
          <source>path to transform</source>
          <target state="translated">путь преобразований</target>
        </trans-unit>
        <trans-unit id="91cc2e927b3bfb1d4477b744f7c70221ddb86ef1" translate="yes" xml:space="preserve">
          <source>pattern</source>
          <target state="translated">pattern</target>
        </trans-unit>
        <trans-unit id="6be314ba5cd8bc27f52d7cd8b44a9ea310eb65cf" translate="yes" xml:space="preserve">
          <source>peek at incoming data without removing it from the queue, only for receiving</source>
          <target state="translated">подглядывать за входящими данными,не удаляя их из очереди,только для получения</target>
        </trans-unit>
        <trans-unit id="7c03ee19fe32f4481221bac7da47979400f92ff0" translate="yes" xml:space="preserve">
          <source>perform impure operations in statements that are in a &lt;a href=&quot;version#ConditionalStatement&quot;&gt;&lt;i&gt;ConditionalStatement&lt;/i&gt;&lt;/a&gt; controlled by a &lt;a href=&quot;version#DebugCondition&quot;&gt;&lt;i&gt;DebugCondition&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">выполнять нечистые операции в операторах, которые находятся в &lt;a href=&quot;version#ConditionalStatement&quot;&gt;&lt;i&gt;ConditionalStatement,&lt;/i&gt;&lt;/a&gt; контролируемом &lt;a href=&quot;version#DebugCondition&quot;&gt;&lt;i&gt;DebugCondition&lt;/i&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8be48e0a03dbc78aa6e9b4a0fde49b55fa2b04cd" translate="yes" xml:space="preserve">
          <source>perform the curl request by doing the HTTP,FTP etc. as it has been setup beforehand.</source>
          <target state="translated">выполнить скрученный запрос,выполнив HTTP,FTP и т.д.,как это было предварительно настроено.</target>
        </trans-unit>
        <trans-unit id="61b6934eff89d4e0b7be2b18d546bca34dae08e0" translate="yes" xml:space="preserve">
          <source>period must be non-negative.</source>
          <target state="translated">период должен быть неотрицательным.</target>
        </trans-unit>
        <trans-unit id="9091a2bef1e1cb46eccdbba29ad7a208623ae43c" translate="yes" xml:space="preserve">
          <source>permutation.</source>
          <target state="translated">permutation.</target>
        </trans-unit>
        <trans-unit id="7f4a973bb94050e7484fa2301c6bfe0a9252c6f1" translate="yes" xml:space="preserve">
          <source>permutations is distinct from the set of</source>
          <target state="translated">перестановки отличаются от набора</target>
        </trans-unit>
        <trans-unit id="058118842cb28b0353c5422c0e933ba369db7b15" translate="yes" xml:space="preserve">
          <source>permutations of a range by noting that permutations obey the rule that even + even = even, and odd + even = odd. Thus, by swapping the last two elements of a lexicographically least range, it is turned into the first odd permutation. Then calling nextEvenPermutation on this first odd permutation will generate the next even permutation relative to this odd permutation, which is actually the next odd permutation of the original range. Thus, by repeatedly calling nextEvenPermutation until it returns false, one enumerates the odd permutations of the original range.</source>
          <target state="translated">перестановки диапазона,отмечая,что перестановки подчиняются правилу even+even=even,и odd+even=odd.Таким образом,меняя последние два элемента лексикографически наименьшего диапазона,она превращается в первую нечетную перестановку.Затем вызов nextEvenPermutation на этой первой нечетной перестановке сгенерирует следующую четную перестановку относительно этой нечетной перестановки,которая на самом деле является следующей нечетной перестановкой исходного диапазона.Таким образом,повторяя вызов nextEvenPermutation до тех пор,пока она не вернет false,одна перестановка перечислит нечетные перестановки исходного диапазона.</target>
        </trans-unit>
        <trans-unit id="ad2b9430ea194b58eb380c63e4e07b10b8923046" translate="yes" xml:space="preserve">
          <source>permutations only when there are no duplicate elements in the range. If the range has</source>
          <target state="translated">перестановки только при отсутствии дублирующих элементов в диапазоне.Если диапазон имеет</target>
        </trans-unit>
        <trans-unit id="d45af520a71cb8b6c29b54ec6c2be815a8e32fc2" translate="yes" xml:space="preserve">
          <source>pipeOnPop</source>
          <target state="translated">pipeOnPop</target>
        </trans-unit>
        <trans-unit id="b56b6c0ff4fc534a379a56e05531df2650e4a2f2" translate="yes" xml:space="preserve">
          <source>please call curl_multi_perform() or curl_multi_socket*() soon</source>
          <target state="translated">пожалуйста,вызовите curl_multi_perform()или curl_multi_socket*()в ближайшее время.</target>
        </trans-unit>
        <trans-unit id="c46f10187c0c58e560f0c12074daff09db820637" translate="yes" xml:space="preserve">
          <source>please use HTTP 1.0 in the request</source>
          <target state="translated">пожалуйста,используйте HTTP 1.0 в запросе</target>
        </trans-unit>
        <trans-unit id="468b8abc1b914e95e505331a1e7d79189b0e94dd" translate="yes" xml:space="preserve">
          <source>please use HTTP 1.1 in the request</source>
          <target state="translated">пожалуйста,используйте HTTP 1.1 в запросе</target>
        </trans-unit>
        <trans-unit id="2cdbf73d2cd162a2a3a31c8e3ddba9065080ca09" translate="yes" xml:space="preserve">
          <source>point to a file to read the initial cookies from, also enables &quot;cookie awareness&quot;</source>
          <target state="translated">указывать на файл для чтения исходных куки-файлов,а также обеспечивает &quot;информированность о куки-файлах&quot;.</target>
        </trans-unit>
        <trans-unit id="b35bb38df9605e4c5858316b7853a16e42ea6997" translate="yes" xml:space="preserve">
          <source>pointer</source>
          <target state="translated">pointer</target>
        </trans-unit>
        <trans-unit id="5f8ad84c9e9071b2499fdfc2a8af57e0603404c6" translate="yes" xml:space="preserve">
          <source>pointer and the address of the member function. Both forms of delegates are interchangeable, and are actually the same type:</source>
          <target state="translated">указатель и адрес функции члена.Обе формы делегатов взаимозаменяемы и фактически относятся к одному типу:</target>
        </trans-unit>
        <trans-unit id="966316dffdc4cdb4c40a06a635d00e4bcbcb6ffb" translate="yes" xml:space="preserve">
          <source>pointer is dereferenced. Typically the program will be aborted.</source>
          <target state="translated">указатель разыменован.Обычно программа прерывается.</target>
        </trans-unit>
        <trans-unit id="1e99afeb19bc46edd90b1d61f8e72614dfe59d83" translate="yes" xml:space="preserve">
          <source>pointer past end of Type Table</source>
          <target state="translated">указатель мимо конца таблицы типов</target>
        </trans-unit>
        <trans-unit id="c8178a586e5d93a019f23b34b82d31105d78e8c7" translate="yes" xml:space="preserve">
          <source>pointer to CppExceptionHeader that eo points into.</source>
          <target state="translated">указатель на CppExceptionHeader,в который указывает эо.</target>
        </trans-unit>
        <trans-unit id="73d630bb523ada4063bb18e3776fe0e219135266" translate="yes" xml:space="preserve">
          <source>pointer to ExceptionHeader that eo points into.</source>
          <target state="translated">указатель на ExceptionHeader,в который указывает eo.</target>
        </trans-unit>
        <trans-unit id="0e0c3ccea19f972d2a4dd997fa49ee028995d55a" translate="yes" xml:space="preserve">
          <source>pointer to LSDA table</source>
          <target state="translated">указатель на таблицу LSDA</target>
        </trans-unit>
        <trans-unit id="f205cb4306fc549f21f4f0e0a932d79b2a97b8d3" translate="yes" xml:space="preserve">
          <source>pointer to T</source>
          <target state="translated">указатель на Т</target>
        </trans-unit>
        <trans-unit id="ba221d716e15b2260eeaaca90f88a76b80b7af75" translate="yes" xml:space="preserve">
          <source>pointer to allocated buffer contents</source>
          <target state="translated">указатель на выделенное содержимое буфера</target>
        </trans-unit>
        <trans-unit id="097e7b10e1af77eda6cb78edc9312eb65faf991c" translate="yes" xml:space="preserve">
          <source>pointer to allocated data contents</source>
          <target state="translated">указатель на выделенное содержимое данных</target>
        </trans-unit>
        <trans-unit id="cef86869400d0093c23e09b460e9d8e721fd8742" translate="yes" xml:space="preserve">
          <source>pointer to allocated name</source>
          <target state="translated">указатель на выделенное имя</target>
        </trans-unit>
        <trans-unit id="cb644d499e96962366a6976eebc049c1d1ce1917" translate="yes" xml:space="preserve">
          <source>pointer to array data</source>
          <target state="translated">указатель на данные массива</target>
        </trans-unit>
        <trans-unit id="02e0e489bb167497626212f217d3ea0b96b78ce0" translate="yes" xml:space="preserve">
          <source>pointer to corresponding EH data</source>
          <target state="translated">указатель на соответствующие данные EH</target>
        </trans-unit>
        <trans-unit id="811e6ffad0e3b1290d798183e226347a821d7927" translate="yes" xml:space="preserve">
          <source>pointer to data pointer, *p is updated to point past decoded value</source>
          <target state="translated">указатель на указатель на данные,*p обновляется до точки прошлого декодированного значения</target>
        </trans-unit>
        <trans-unit id="314829629b8c7d018488469f94f06e62fb0f8371" translate="yes" xml:space="preserve">
          <source>pointer to exception_object field</source>
          <target state="translated">указатель на поле exception_object</target>
        </trans-unit>
        <trans-unit id="722e34c92df177d99646fe937e1c97570dd0e42a" translate="yes" xml:space="preserve">
          <source>pointer to function</source>
          <target state="translated">указатель на функцию</target>
        </trans-unit>
        <trans-unit id="2b09eb7f5d0cfc28ea0380e31ab82c57849552d7" translate="yes" xml:space="preserve">
          <source>pointer to instance of TypeInfo</source>
          <target state="translated">указатель на экземпляр TypeInfo</target>
        </trans-unit>
        <trans-unit id="72cb18a889027d3e387d9aa737c8a330e4b9f2a1" translate="yes" xml:space="preserve">
          <source>pointer to list item created (which is also the start of the list). null if out of memory</source>
          <target state="translated">указатель на созданный элемент списка (который также является началом списка).null если из памяти</target>
        </trans-unit>
        <trans-unit id="ffe494bb9b0df00ea8fdc5ae7e003c03d989ffde" translate="yes" xml:space="preserve">
          <source>pointer to list item created. null if out of memory</source>
          <target state="translated">указатель на созданный элемент списка.ноль,если из памяти.</target>
        </trans-unit>
        <trans-unit id="43bf6edc0f26846233fb2b24a431860b541ae382" translate="yes" xml:space="preserve">
          <source>pointer to next entry in list.</source>
          <target state="translated">указатель на следующую запись в списке.</target>
        </trans-unit>
        <trans-unit id="5a9217dd4c35b6671be923de50159ce9ab08919a" translate="yes" xml:space="preserve">
          <source>pointer to offset to be aligned</source>
          <target state="translated">указатель на смещение для выравнивания</target>
        </trans-unit>
        <trans-unit id="3d10810c7ed8cb1129fa004e64b3052a9ad9122e" translate="yes" xml:space="preserve">
          <source>pointer to previous item in list.</source>
          <target state="translated">указатель на предыдущий пункт в списке.</target>
        </trans-unit>
        <trans-unit id="f59c54fc928e9215c42d3790075f7795f50a6a91" translate="yes" xml:space="preserve">
          <source>pointer to start of Action Table</source>
          <target state="translated">указатель на начало таблицы действий</target>
        </trans-unit>
        <trans-unit id="bc742661cde66a7301a4b140c4183d86ce0d8c2b" translate="yes" xml:space="preserve">
          <source>pointer to start of function</source>
          <target state="translated">указатель на запуск функции</target>
        </trans-unit>
        <trans-unit id="796a3958939d492d919d4ea30ab68b1386c040b0" translate="yes" xml:space="preserve">
          <source>pointer to start of instance of the type</source>
          <target state="translated">указатель на запуск экземпляра типа</target>
        </trans-unit>
        <trans-unit id="39be943a1e602065febd7c0b858264c5d192918b" translate="yes" xml:space="preserve">
          <source>pointer to string</source>
          <target state="translated">указатель на строку</target>
        </trans-unit>
        <trans-unit id="e7696530bd072fce61a1a0e2a1f6228b902f281e" translate="yes" xml:space="preserve">
          <source>pointer to string data if possible, null if not</source>
          <target state="translated">указатель на строковые данные,если возможно,нулевой если нет</target>
        </trans-unit>
        <trans-unit id="e7f1b3c4cfe1148a6e7b05f349ef0a483f55ab07" translate="yes" xml:space="preserve">
          <source>pointer to that list entry.</source>
          <target state="translated">указатель на эту запись в списке.</target>
        </trans-unit>
        <trans-unit id="291b7aaf937aa89fc53ee7c4e1e9c9a2224702f3" translate="yes" xml:space="preserve">
          <source>pointer to the key value</source>
          <target state="translated">указатель на ключевое значение</target>
        </trans-unit>
        <trans-unit id="f9ddf0fce4ac4cddba3edaef5596116907965cb3" translate="yes" xml:space="preserve">
          <source>pointer to the origin instance of the expression. once a new expression is created, origin is set to 'this'. anytime when an expression copy is created, 'origin' pointer is set to 'origin' pointer value of the original expression.</source>
          <target state="translated">Всякий раз,когда создается копия выражения,указатель &quot;origin&quot; (происхождение)устанавливается в значение указателя &quot;origin&quot; (происхождение)исходного выражения.</target>
        </trans-unit>
        <trans-unit id="799c7d5bccc01e6df7696bdfe6a02bea3903036a" translate="yes" xml:space="preserve">
          <source>pointer to the target filename of a symlink</source>
          <target state="translated">указатель на имя файла-мишени симлинка</target>
        </trans-unit>
        <trans-unit id="d3ce2a7a75c989b856c8cc00f70c53eda6f5cf58" translate="yes" xml:space="preserve">
          <source>pointer to value if it's there, null if not</source>
          <target state="translated">указатель на значение,если оно есть,ноль,если нет.</target>
        </trans-unit>
        <trans-unit id="dd8fc9cb3c2f0f6698f32412e53d788157521dd0" translate="yes" xml:space="preserve">
          <source>pointer to value if present, null otherwise</source>
          <target state="translated">указатель на значение,если оно есть,ноль в противном случае</target>
        </trans-unit>
        <trans-unit id="a1420da3f75e4828f2fc01b9a73fd3753cc57482" translate="yes" xml:space="preserve">
          <source>pointer to vector</source>
          <target state="translated">указатель на вектор</target>
        </trans-unit>
        <trans-unit id="5ca3d2fc2b20e99d2c5f9b7c4ded7d29f372083e" translate="yes" xml:space="preserve">
          <source>pointer to vtable</source>
          <target state="translated">указатель на столик</target>
        </trans-unit>
        <trans-unit id="9ec6c40c10b1254eefda2cdb147ff573b2c67816" translate="yes" xml:space="preserve">
          <source>pointer, a pointer to a closure (nested functions) or a pointer to an enclosing function's stack frame (nested functions).</source>
          <target state="translated">указатель,указатель на закрытие (вложенные функции)или указатель на рамку стека закрывающей функции (вложенные функции).</target>
        </trans-unit>
        <trans-unit id="9e11159fceb1b958a66b5d53f9b41a1e6c6feaa3" translate="yes" xml:space="preserve">
          <source>pointers can simultaneously exist if all of them are pointers to read only (&lt;code&gt;const&lt;/code&gt; or &lt;code&gt;immutable&lt;/code&gt;) data, i.e. none of them can modify the memory object(s) pointed to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cf37aca3dde2b6f90351649715679331ca2890" translate="yes" xml:space="preserve">
          <source>pointers to virtual member functions</source>
          <target state="translated">указатели на виртуальные функции участника</target>
        </trans-unit>
        <trans-unit id="c6f7249e4b9e547ae31d506211983cae9a36af21" translate="yes" xml:space="preserve">
          <source>points to a zero-terminated string encoded with base64 if len is zero, otherwise to the &quot;raw&quot; data</source>
          <target state="translated">указывает на нулевую строку,закодированную в base64,если len равен нулю,в противном случае на &quot;сырые&quot; данные</target>
        </trans-unit>
        <trans-unit id="892733940c44bdc26f491a5beb8a557ad1a772b9" translate="yes" xml:space="preserve">
          <source>port number, may be &lt;code&gt;PORT_ANY&lt;/code&gt;.</source>
          <target state="translated">номер порта, может быть &lt;code&gt;PORT_ANY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f8203ca7f427a29f8943df92bea3ab12a087db2c" translate="yes" xml:space="preserve">
          <source>possible subpackage</source>
          <target state="translated">возможный субпакет</target>
        </trans-unit>
        <trans-unit id="f4745595e33a1c83800086751a4035863508caa6" translate="yes" xml:space="preserve">
          <source>postblit</source>
          <target state="translated">postblit</target>
        </trans-unit>
        <trans-unit id="08305c493c96bbb589657067e009e3ba8160e7e0" translate="yes" xml:space="preserve">
          <source>postconditions</source>
          <target state="translated">postconditions</target>
        </trans-unit>
        <trans-unit id="9039cb52d37c2f48db3948e3d95cd440caeb877d" translate="yes" xml:space="preserve">
          <source>pow(x, y)</source>
          <target state="translated">порошок(х,у)</target>
        </trans-unit>
        <trans-unit id="7fa98a3e690232c2e706f18a97069749ef0f6234" translate="yes" xml:space="preserve">
          <source>pragma crt_constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fe617175ffe4bf4b1b394972833740f68d5786" translate="yes" xml:space="preserve">
          <source>pragma crt_destructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104ee337101408582b5fd6df7de54e0f837e240c" translate="yes" xml:space="preserve">
          <source>pragma inline</source>
          <target state="translated">линия прагматизма</target>
        </trans-unit>
        <trans-unit id="0430f80c17fe6832f97db2eef3843000c1ad8cbf" translate="yes" xml:space="preserve">
          <source>pragma lib</source>
          <target state="translated">прагматическая свобода</target>
        </trans-unit>
        <trans-unit id="e47a6c876996664ad9fbe34701b23ca6aedb10e8" translate="yes" xml:space="preserve">
          <source>pragma linkerDirective</source>
          <target state="translated">прагматический линкерДокументальный</target>
        </trans-unit>
        <trans-unit id="6e2685db6bdec96837ef0ada81842b4c26f1cdcb" translate="yes" xml:space="preserve">
          <source>pragma mangle</source>
          <target state="translated">прагматические каландры</target>
        </trans-unit>
        <trans-unit id="62011f1d38a356df63367ce847882be06b5f81f2" translate="yes" xml:space="preserve">
          <source>pragma msg</source>
          <target state="translated">прагма мсг</target>
        </trans-unit>
        <trans-unit id="6ed561bf1ddd82b2047d81aa93a47054d6789d17" translate="yes" xml:space="preserve">
          <source>pragma printf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ff4e27d1bc7c915ec47aef3b5fdbbeef6e3754" translate="yes" xml:space="preserve">
          <source>pragma scanf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef857c549331d04dafbd875138f9043eadb9f3e" translate="yes" xml:space="preserve">
          <source>pragma startaddress</source>
          <target state="translated">звёздная звезда прагмы</target>
        </trans-unit>
        <trans-unit id="38279fef281e1048424b696b1b58e79759b6c7d3" translate="yes" xml:space="preserve">
          <source>preceding</source>
          <target state="translated">preceding</target>
        </trans-unit>
        <trans-unit id="f9404c464c68943b095e3f5b2ae9acebf00a99ea" translate="yes" xml:space="preserve">
          <source>precision type to round to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0200aafe991a458ebed3c5c0dd6a0e14dcd870" translate="yes" xml:space="preserve">
          <source>preconditions</source>
          <target state="translated">preconditions</target>
        </trans-unit>
        <trans-unit id="170e9cb67ad88d200f3f33537bf44fd5dbbbf398" translate="yes" xml:space="preserve">
          <source>pred</source>
          <target state="translated">pred</target>
        </trans-unit>
        <trans-unit id="04444310b8c9d216a6bc1d1cc9542ecc75bc02df" translate="yes" xml:space="preserve">
          <source>predicate</source>
          <target state="translated">predicate</target>
        </trans-unit>
        <trans-unit id="bf4fdaf0780484d9ef76f9a69011201059e9ee0e" translate="yes" xml:space="preserve">
          <source>predicate to sort by (optional)</source>
          <target state="translated">предикат к сортировке по (необязательно)</target>
        </trans-unit>
        <trans-unit id="418bc5c6ef3c00bff26470245495918c6ee67456" translate="yes" xml:space="preserve">
          <source>preferred block size of the amount of data to map at one time with 0 meaning map the entire file. The window size must be a multiple of the memory allocation page size.</source>
          <target state="translated">предпочитаемый размер блока данных для одновременного отображения,при этом 0 означает отображение всего файла.Размер окна должен быть кратен размеру страницы выделения памяти.</target>
        </trans-unit>
        <trans-unit id="d53f828df7b08628ff6d85a2e12c3586b00e04c6" translate="yes" xml:space="preserve">
          <source>prefetch0</source>
          <target state="translated">prefetch0</target>
        </trans-unit>
        <trans-unit id="46f6c045a8f083feecb50748ca05a59679c524bc" translate="yes" xml:space="preserve">
          <source>prefetch1</source>
          <target state="translated">prefetch1</target>
        </trans-unit>
        <trans-unit id="9453cd6d7916254f05a948a16c8ef05b4787c758" translate="yes" xml:space="preserve">
          <source>prefetch2</source>
          <target state="translated">prefetch2</target>
        </trans-unit>
        <trans-unit id="a605d09cb9365d066d8986ecbfef8d39e26d2b4f" translate="yes" xml:space="preserve">
          <source>prefetchnta</source>
          <target state="translated">prefetchnta</target>
        </trans-unit>
        <trans-unit id="2c1583f1c12e7b39e408cc779f5642eeeb5c67bf" translate="yes" xml:space="preserve">
          <source>prefetchw</source>
          <target state="translated">prefetchw</target>
        </trans-unit>
        <trans-unit id="74da3611a73f17b2b2b3f0744017bf6bf487304b" translate="yes" xml:space="preserve">
          <source>prefix operators:</source>
          <target state="translated">операторы префиксов:</target>
        </trans-unit>
        <trans-unit id="241cdd917099b1b05d92512e7cac0aa960cd7050" translate="yes" xml:space="preserve">
          <source>present, and &lt;code&gt;to&lt;/code&gt; is empty, then &lt;code&gt;to&lt;/code&gt; is taken to be the same as &lt;code&gt;from&lt;/code&gt;.  If the modifier &lt;code&gt;'d'&lt;/code&gt; is</source>
          <target state="translated">присутствует, и &lt;code&gt;to&lt;/code&gt; пустой, то &lt;code&gt;to&lt;/code&gt; берется такой же , как &lt;code&gt;from&lt;/code&gt; . Если модификатор &lt;code&gt;'d'&lt;/code&gt; есть</target>
        </trans-unit>
        <trans-unit id="ec1cb8e65cc0d6b0ffa14733886926b810e89960" translate="yes" xml:space="preserve">
          <source>present, and &lt;code&gt;to&lt;/code&gt; is shorter than &lt;code&gt;from&lt;/code&gt;, then &lt;code&gt;to&lt;/code&gt; is extended by replicating the last character in &lt;code&gt;to&lt;/code&gt;.  Both &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; may contain ranges using the &lt;code&gt;'-'&lt;/code&gt; character (e.g. &lt;code&gt;&quot;a-d&quot;&lt;/code&gt; is synonymous with &lt;code&gt;&quot;abcd&quot;&lt;/code&gt;.) Neither accept a leading &lt;code&gt;'^'&lt;/code&gt; as meaning the complement of the string (use the &lt;code&gt;'c'&lt;/code&gt; modifier for that).</source>
          <target state="translated">настоящее, и &lt;code&gt;to&lt;/code&gt; короче, чем &lt;code&gt;from&lt;/code&gt; , затем &lt;code&gt;to&lt;/code&gt; расширяется путем репликации последнего символа в &lt;code&gt;to&lt;/code&gt; . И &lt;code&gt;from&lt;/code&gt; и &lt;code&gt;to&lt;/code&gt; могут содержать диапазоны с использованием символа &lt;code&gt;'-'&lt;/code&gt; (например, &lt;code&gt;&quot;a-d&quot;&lt;/code&gt; является синонимом &lt;code&gt;&quot;abcd&quot;&lt;/code&gt; .) Ни один из них не должен начинаться с &lt;code&gt;'^'&lt;/code&gt; качестве значения дополнения строки (для этого используйте модификатор &lt;code&gt;'c'&lt;/code&gt; ) ,</target>
        </trans-unit>
        <trans-unit id="162fd259d9c6c8f2c948b632bc2b8ead0a321282" translate="yes" xml:space="preserve">
          <source>pretty</source>
          <target state="translated">pretty</target>
        </trans-unit>
        <trans-unit id="61ff86d62d7a2e2ee76a674cce99518391870c44" translate="yes" xml:space="preserve">
          <source>previous table index</source>
          <target state="translated">индекс предыдущей таблицы</target>
        </trans-unit>
        <trans-unit id="8bf46c2cf1ef4eb8fb4f99311ff689385e10fb95" translate="yes" xml:space="preserve">
          <source>previous value of stack</source>
          <target state="translated">предыдущее значение стека</target>
        </trans-unit>
        <trans-unit id="49e771e963864a7d1fd341e98261719ae76cc105" translate="yes" xml:space="preserve">
          <source>primitivesToHandle</source>
          <target state="translated">primitivesToHandle</target>
        </trans-unit>
        <trans-unit id="722c22cd7c961e4b8ab8c8ef8584ccc4d32a6f4e" translate="yes" xml:space="preserve">
          <source>print error message if true</source>
          <target state="translated">сообщение об ошибке печати,если оно верно</target>
        </trans-unit>
        <trans-unit id="56efe5e348c8ccaa2143f1f669aead448506d175" translate="yes" xml:space="preserve">
          <source>printast.d</source>
          <target state="translated">printast.d</target>
        </trans-unit>
        <trans-unit id="49c0ed94bb30fdc42ab0b6f0e8f95cf6bbf4a0de" translate="yes" xml:space="preserve">
          <source>printf-style format specification</source>
          <target state="translated">спецификация формата PDF</target>
        </trans-unit>
        <trans-unit id="a862d68a86987bbb5417962fa47d6d7c1fa71547" translate="yes" xml:space="preserve">
          <source>printf-style variadic arguments</source>
          <target state="translated">вариадические аргументы в стиле printf</target>
        </trans-unit>
        <trans-unit id="103a5cf6d8830dee61d39d10a04ca9efbd971168" translate="yes" xml:space="preserve">
          <source>prints 2.98023e-09.</source>
          <target state="translated">отпечатки 2.98023e-09.</target>
        </trans-unit>
        <trans-unit id="d31743545539ed2cf31e4f7c63b3932c72729114" translate="yes" xml:space="preserve">
          <source>prints error message if more than one match</source>
          <target state="translated">выводит на печать сообщение об ошибке,если несколько совпадений</target>
        </trans-unit>
        <trans-unit id="70c68e6fcc4cdd79003deec591fed8b9e5988e6b" translate="yes" xml:space="preserve">
          <source>prints incorrect operations to &lt;a href=&quot;std_stdio#stderr&quot;&gt;&lt;code&gt;std.stdio.stderr&lt;/code&gt;&lt;/a&gt; but otherwise preserves the built-in behavior.</source>
          <target state="translated">печатает некорректные операции в &lt;a href=&quot;std_stdio#stderr&quot;&gt; &lt;code&gt;std.stdio.stderr&lt;/code&gt; ,&lt;/a&gt; но в противном случае сохраняет встроенное поведение.</target>
        </trans-unit>
        <trans-unit id="0881e7c062744a1794abe8319361dae5072d125e" translate="yes" xml:space="preserve">
          <source>prints to the console:</source>
          <target state="translated">отпечатки на консоли:</target>
        </trans-unit>
        <trans-unit id="11f399fa1c6023339b03a0228c091ba95d898bbf" translate="yes" xml:space="preserve">
          <source>prints:</source>
          <target state="translated">prints:</target>
        </trans-unit>
        <trans-unit id="e80721793c24ae14edfca9b26ad406a9815cd3ff" translate="yes" xml:space="preserve">
          <source>private</source>
          <target state="translated">private</target>
        </trans-unit>
        <trans-unit id="b9a6b6afe392fb655649ff87bdaccc60290dbad6" translate="yes" xml:space="preserve">
          <source>private callback pointer</source>
          <target state="translated">личный указатель обратного вызова</target>
        </trans-unit>
        <trans-unit id="51a3bf09a9cfad5b2ed903fa3ac7962ab3bc5064" translate="yes" xml:space="preserve">
          <source>private socket pointer</source>
          <target state="translated">личный указатель розетки</target>
        </trans-unit>
        <trans-unit id="8d197768848c1625529740c9a8cc85d494b080be" translate="yes" xml:space="preserve">
          <source>produce the number 17, the string &quot;1034&quot; or the string &quot;107&quot; as the result? It isn't obvious, and the language designers wind up carefully writing rules to disambiguate it - rules that get incorrectly implemented, overlooked, forgotten, and ignored. It's much better to have + mean addition, and a separate operator to be array concatenation.</source>
          <target state="translated">произвести число 17,строку &quot;1034&quot; или строку &quot;107&quot; в результате? Это не очевидно,и дизайнеры языка тщательно пишут правила,чтобы разобраться в этом-правила,которые неправильно реализуются,пропускаются,забываются и игнорируются.Гораздо лучше иметь+среднее сложение и отдельный оператор для конкатенирования массивов.</target>
        </trans-unit>
        <trans-unit id="21da60aac48a329fb42a343a992a2e802b16f965" translate="yes" xml:space="preserve">
          <source>producing the usual CRC32 string output.</source>
          <target state="translated">производя обычный вывод CRC32-строки.</target>
        </trans-unit>
        <trans-unit id="2cb1e7c7fa13dc4f6f98e07efaabecbecbb54bd7" translate="yes" xml:space="preserve">
          <source>profile:0|1 - enable profiling with summary when terminating program</source>
          <target state="translated">профиль:0|1-включение профилирования с обобщением при завершении программы.</target>
        </trans-unit>
        <trans-unit id="e1fcfbc0316e1595278feb32bb3aa8f7b6ac9765" translate="yes" xml:space="preserve">
          <source>program name (argv[0])</source>
          <target state="translated">название программы (argv[0])</target>
        </trans-unit>
        <trans-unit id="61a94017616f71200a95c742eb6114252df49445" translate="yes" xml:space="preserve">
          <source>protected @safe void &lt;strong id=&quot;finishLogMsg&quot;&gt;finishLogMsg&lt;/strong&gt;();</source>
          <target state="translated">защищенный @safe void &lt;strong id=&quot;finishLogMsg&quot;&gt;finishLogMsg&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ccde290e3f197eb324727436638eaccd04807b1a" translate="yes" xml:space="preserve">
          <source>protected @safe void &lt;strong id=&quot;logMsgPart&quot;&gt;logMsgPart&lt;/strong&gt;(scope const(char)[] msg);</source>
          <target state="translated">protected @safe void &lt;strong id=&quot;logMsgPart&quot;&gt;logMsgPart&lt;/strong&gt; (scope const (char) [] msg);</target>
        </trans-unit>
        <trans-unit id="50f587663e0d8102c2940979fee24a47f7306462" translate="yes" xml:space="preserve">
          <source>protected File &lt;strong id=&quot;file_&quot;&gt;file_&lt;/strong&gt;;</source>
          <target state="translated">защищенный файл &lt;strong id=&quot;file_&quot;&gt;file_&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="03e726ba9cd0056518115567ab5c11d0097bd195" translate="yes" xml:space="preserve">
          <source>protected Handle &lt;strong id=&quot;m_hndl&quot;&gt;m_hndl&lt;/strong&gt;;</source>
          <target state="translated">защищенная ручка &lt;strong id=&quot;m_hndl&quot;&gt;m_hndl&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1c5328f45af8606eaf2d069003e5d70c9cf65fc4" translate="yes" xml:space="preserve">
          <source>protected MultiLoggerEntry[] &lt;strong id=&quot;logger&quot;&gt;logger&lt;/strong&gt;;</source>
          <target state="translated">защищенный MultiLoggerEntry [] &lt;strong id=&quot;logger&quot;&gt;лесоруба&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7f5ea94928068d0ddb886e7cc2e5e508da9a1ec6" translate="yes" xml:space="preserve">
          <source>protected abstract @safe void &lt;strong id=&quot;writeLogMsg&quot;&gt;writeLogMsg&lt;/strong&gt;(ref LogEntry payload);</source>
          <target state="translated">защищенный абстрактный @safe void &lt;strong id=&quot;writeLogMsg&quot;&gt;writeLogMsg&lt;/strong&gt; (ref LogEntry payload);</target>
        </trans-unit>
        <trans-unit id="8a43e3e6fd79054776f234e8d4cdab0684791e77" translate="yes" xml:space="preserve">
          <source>protected alias &lt;strong id=&quot;Handle&quot;&gt;Handle&lt;/strong&gt; = core.sys.posix.semaphore.sem_t;</source>
          <target state="translated">защищенный псевдоним &lt;strong id=&quot;Handle&quot;&gt;Handle&lt;/strong&gt; = core.sys.posix.semaphore.sem_t;</target>
        </trans-unit>
        <trans-unit id="7a675f12ff8fa79820b0ce3182b5e1e25969ea9d" translate="yes" xml:space="preserve">
          <source>protected immutable pure @safe this(string name, string stdName, string dstName);</source>
          <target state="translated">защищена неизменяемой чистой @safe this(имя строки,stdName строки,dstName строки);</target>
        </trans-unit>
        <trans-unit id="c9b8984fb928eef2f13c4500fd6206a09978d507" translate="yes" xml:space="preserve">
          <source>protected nothrow void &lt;strong id=&quot;create&quot;&gt;create&lt;/strong&gt;(void delegate() op);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1490bacaf4dca17c90e51fb183cba314b24eea62" translate="yes" xml:space="preserve">
          <source>protected pure nothrow @safe Address &lt;strong id=&quot;createAddress&quot;&gt;createAddress&lt;/strong&gt;();</source>
          <target state="translated">защищенный чистый nothrow @safe Address &lt;strong id=&quot;createAddress&quot;&gt;createAddress&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f8b44c0d79d6888839afde2279abf03bc86d4517" translate="yes" xml:space="preserve">
          <source>protected pure nothrow @safe Socket &lt;strong id=&quot;accepting&quot;&gt;accepting&lt;/strong&gt;();</source>
          <target state="translated">защищенный чистый nothrow @safe гнездо &lt;strong id=&quot;accepting&quot;&gt;принятия&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a30c0d5308f8aaa3b1a8bf3d0d2de99daaaebebe" translate="yes" xml:space="preserve">
          <source>protected string &lt;strong id=&quot;filename&quot;&gt;filename&lt;/strong&gt;;</source>
          <target state="translated">защищенная строка &lt;strong id=&quot;filename&quot;&gt;имени файла&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ff5f22fffb0b73681ae8787e6a0e7eeec8e8ff44" translate="yes" xml:space="preserve">
          <source>protection attribute data</source>
          <target state="translated">защитный атрибут данных</target>
        </trans-unit>
        <trans-unit id="83cdd1819a599d2be55f06fd433f913528d52838" translate="yes" xml:space="preserve">
          <source>protocols is terminated by an entry with a NULL protoname</source>
          <target state="translated">протоколы завершаются записью с NULL протоном</target>
        </trans-unit>
        <trans-unit id="d799bae6088a90139b415fccb011d540531df83b" translate="yes" xml:space="preserve">
          <source>proxy</source>
          <target state="translated">proxy</target>
        </trans-unit>
        <trans-unit id="1ee48dcab652846da84eca12c39ca840449d6ad4" translate="yes" xml:space="preserve">
          <source>proxy_port</source>
          <target state="translated">proxy_port</target>
        </trans-unit>
        <trans-unit id="8b1cd5b5ff94455a409f8755d5f3886514aaa826" translate="yes" xml:space="preserve">
          <source>proxy_type</source>
          <target state="translated">proxy_type</target>
        </trans-unit>
        <trans-unit id="8309bf379a858f46d557c0443065a7d7103f8cc4" translate="yes" xml:space="preserve">
          <source>ptr from list entry.</source>
          <target state="translated">ptr из списка.</target>
        </trans-unit>
        <trans-unit id="112515caf33a5ca02554d372b86ca88b72dd4fd9" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;countUntil&quot;&gt;countUntil&lt;/strong&gt;(alias pred = &quot;a == b&quot;, R, N)(R haystack, N needle)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;countUntil&quot;&gt;countUntil&lt;/strong&gt; (псевдоним &lt;strong id=&quot;countUntil&quot;&gt;pred&lt;/strong&gt; = &quot;a == b&quot;, R, N) (стог сена R, игла N)</target>
        </trans-unit>
        <trans-unit id="60895bf3550f724f99eb98bb0334e085e41b412f" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;countUntil&quot;&gt;countUntil&lt;/strong&gt;(alias pred = &quot;a == b&quot;, R, Rs...)(R haystack, Rs needles)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;countUntil&quot;&gt;countUntil&lt;/strong&gt; (псевдоним &lt;strong id=&quot;countUntil&quot;&gt;pred&lt;/strong&gt; = &quot;a == b&quot;, R, Rs ...) (стог сена R, Rs иглы)</target>
        </trans-unit>
        <trans-unit id="b29427c2366880ae80a75c0d84f2d470c970584b" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;countUntil&quot;&gt;countUntil&lt;/strong&gt;(alias pred, R)(R haystack)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;countUntil&quot;&gt;countUntil&lt;/strong&gt; (псевдоним &lt;strong id=&quot;countUntil&quot;&gt;pred&lt;/strong&gt; , R) (стог сена R)</target>
        </trans-unit>
        <trans-unit id="fd1cf78f028a53dcb789e0e445ef32bb1532499c" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;emailLength&quot;&gt;emailLength&lt;/strong&gt;(Char)(scope const(Char)[] s)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;emailLength&quot;&gt;emailLength&lt;/strong&gt; (Char) (область действия const (Char) [] s)</target>
        </trans-unit>
        <trans-unit id="5ae0b837570085505f544d16f7acdb4e5fa80ec3" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;index&quot;&gt;index&lt;/strong&gt;()(const(ubyte)[] s, size_t n);</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;index&quot;&gt;index&lt;/strong&gt; () (const (ubyte) [] s, size_t n);</target>
        </trans-unit>
        <trans-unit id="dba3352bdaa33ed70a474ce1a58b8d17b9eb8889" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;index&quot;&gt;index&lt;/strong&gt;(E)(const(E)[] s, int n);</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;index&quot;&gt;index&lt;/strong&gt; (E) (const (E) [] s, int n);</target>
        </trans-unit>
        <trans-unit id="a3fdef62d2b21ef61ea62715b8450cbb77d9e354" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt;(C)(scope const(C)[] s, dchar c, CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt; (C) (область действия const (C) [] s, dchar c, CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="5e1baeec167349c856c87801635b5e7ebff8ada7" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt;(C)(scope const(C)[] s, dchar c, size_t startIdx, CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt; (C) (область действия const (C) [] s, dchar c, size_t startIdx, CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="39d880cded69f59d013a8af611aaf9e7e40dd2c9" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt;(Range)(Range s, dchar c, CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt; (Range) (Range s, dchar c, CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="5c3cf47360d97749ecbc8f9486cbf724a31aee9d" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt;(Range)(Range s, dchar c, size_t startIdx, CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt; (Range) (Range s, dchar c, size_t startIdx, CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="5d574548be8cd7161df8c1a34dc3218fd5a884ac" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt;(Range, Char)(Range s, const(Char)[] sub)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt; (Range, Char) (Range s, const (Char) [] sub)</target>
        </trans-unit>
        <trans-unit id="4d3391b3039eb5239e063644cb468503bc63f61c" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt;(Range, Char)(Range s, const(Char)[] sub, in CaseSensitive cs)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;indexOf&quot;&gt;indexOf&lt;/strong&gt; (Range, Char) (Range s, const (Char) [] sub, в CaseSensitive cs)</target>
        </trans-unit>
        <trans-unit id="0d087e488c3a1a25ab2e77aab4a435fa385a7a6b" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;maxIndex&quot;&gt;maxIndex&lt;/strong&gt;(alias pred = &quot;a &amp;lt; b&quot;, Range)(Range range)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a511fccaa6b7d44fce40c235e8134757ab198e21" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;minIndex&quot;&gt;minIndex&lt;/strong&gt;(alias pred = &quot;a &amp;lt; b&quot;, Range)(Range range)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a02768ec3ae59c3d2cdd7470e5b2c882c7dc83" translate="yes" xml:space="preserve">
          <source>ptrdiff_t &lt;strong id=&quot;uriLength&quot;&gt;uriLength&lt;/strong&gt;(Char)(scope const(Char)[] s)</source>
          <target state="translated">ptrdiff_t &lt;strong id=&quot;uriLength&quot;&gt;uriLength&lt;/strong&gt; (Char) (область действия const (Char) [] s)</target>
        </trans-unit>
        <trans-unit id="d85ebba6672785370f0723f9f08d92eb2572c9be" translate="yes" xml:space="preserve">
          <source>ptrsize</source>
          <target state="translated">ptrsize</target>
        </trans-unit>
        <trans-unit id="61c9b2b17db77a27841bbeeabff923448b0f6388" translate="yes" xml:space="preserve">
          <source>public</source>
          <target state="translated">public</target>
        </trans-unit>
        <trans-unit id="a8afc5c6dbf2996171d6f264b25e614f5ee9af97" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.stdc.stdarg&quot;&gt;core.stdc.stdarg&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.stdc.stdarg&quot;&gt;core.stdc.stdarg&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="04e5b883fd9169bcba9e5390410a200384636529" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.stdc.stddef&quot;&gt;core.stdc.stddef&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.stdc.stddef&quot;&gt;core.stdc.stddef&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0db652d7070113c55af94962cda43fbaed0d1ac9" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.stdc.stdint&quot;&gt;core.stdc.stdint&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.stdc.stdint&quot;&gt;core.stdc.stdint&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="988861eeb6fce35eb41636e4fe1a500de2da010e" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.stdc.stdio&quot;&gt;core.stdc.stdio&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.stdc.stdio&quot;&gt;core.stdc.stdio&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="180479682834d6a459b79059fedcd391bef4e048" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.stdc.time&quot;&gt;core.stdc.time&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.stdc.time&quot;&gt;core.stdc.time&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6111b715919459a84275ada2e9f82e4ef0de9fed" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.stdc.wchar_&quot;&gt;core.stdc.wchar_&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.stdc.wchar_&quot;&gt;core.stdc.wchar_&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cd31ed69a022a5f024ac4320147e31c3e1f04f8c" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.sync.exception&quot;&gt;core.sync.exception&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.sync.exception&quot;&gt;core.sync.exception&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="76f5e9dae8bcd04a7e55d692ee41d901f992183b" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.sync.mutex&quot;&gt;core.sync.mutex&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.sync.mutex&quot;&gt;core.sync.mutex&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9a90aa4ad6df763dbcb3268101901d6403b40694" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.sys.posix.netinet.in_&quot;&gt;core.sys.posix.netinet.in_&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.sys.posix.netinet.in_&quot;&gt;core.sys.posix.netinet.in_&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c8bc45d25c25987e2b7b9dcab937a357bc2961ed" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;core.time&quot;&gt;core.time&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;core.time&quot;&gt;core.time&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="11373b21cf80d7197d59f05b8ca8340682f96925" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.aggregate&quot;&gt;dmd.aggregate&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.aggregate&quot;&gt;dmd.aggregate&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4964dd2fe86ef07d6c74481c5065c80a2745ad0a" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.aliasthis&quot;&gt;dmd.aliasthis&lt;/strong&gt;;</source>
          <target state="translated">общественный импорт &lt;strong id=&quot;dmd.aliasthis&quot;&gt;dmd.aliasthis&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="60edf0f63d04eba2b3798ecb26fde0847cb0e26f" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.arraytypes&quot;&gt;dmd.arraytypes&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.arraytypes&quot;&gt;dmd.arraytypes&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="32e3dd1b39b9cb70f0f5892d887c12fd0f553bc3" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.attrib&quot;&gt;dmd.attrib&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.attrib&quot;&gt;dmd.attrib&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c6e5a3868698512c7e3b5f7d0ff4d4db6924a248" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.cond&quot;&gt;dmd.cond&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.cond&quot;&gt;dmd.cond&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d06ba67be1eb50ae894206fde4ebe773a5c13f37" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.ctfeexpr&quot;&gt;dmd.ctfeexpr&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.ctfeexpr&quot;&gt;dmd.ctfeexpr&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="62d7e81c816a7cad071a231ec9db3b63e21d9757" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.dclass&quot;&gt;dmd.dclass&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.dclass&quot;&gt;dmd.dclass&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="56ab93f043da55839533b5682a2f84796b4c99ec" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.declaration&quot;&gt;dmd.declaration&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.declaration&quot;&gt;dmd.declaration&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="78688eea9886182f6331f58f446f3de5e2dd2b4a" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.denum&quot;&gt;dmd.denum&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.denum&quot;&gt;dmd.denum&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c52f4d162808d24147d8d6367be7fb241470b4c8" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.dimport&quot;&gt;dmd.dimport&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.dimport&quot;&gt;dmd.dimport&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="94732c57f0a41cf2faa62a494133cc4661b3ca38" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.dmodule&quot;&gt;dmd.dmodule&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.dmodule&quot;&gt;dmd.dmodule&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="af203a07406fe90294307baf5353271ba7695dac" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.dstruct&quot;&gt;dmd.dstruct&lt;/strong&gt;;</source>
          <target state="translated">общественный импорт &lt;strong id=&quot;dmd.dstruct&quot;&gt;dmd.dstruct&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a5c85c97eda0e1b9cf516e91c2bdd3bb9774db34" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.dsymbol&quot;&gt;dmd.dsymbol&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.dsymbol&quot;&gt;dmd.dsymbol&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fa174261fe5c027c3b73f494a49c6397ba6b05b1" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.dtemplate&quot;&gt;dmd.dtemplate&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.dtemplate&quot;&gt;dmd.dtemplate&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1eb45b243ca9ac18cd7c1637fa301c32b51fd828" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.dversion&quot;&gt;dmd.dversion&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.dversion&quot;&gt;dmd.dversion&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="304d4d6d9228b1dc1075ee16211317d5e8b8173c" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.expression&quot;&gt;dmd.expression&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.expression&quot;&gt;dmd.expression&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="43ab8c6293079d47272ec218fc3302dd45166a8f" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.func&quot;&gt;dmd.func&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.func&quot;&gt;dmd.func&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="29bdaa8dcc60d9e5c1323ee83cf2e6a9e38887cd" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.hdrgen&quot;&gt;dmd.hdrgen&lt;/strong&gt;;</source>
          <target state="translated">общественный импорт &lt;strong id=&quot;dmd.hdrgen&quot;&gt;dmd.hdrgen&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="32cb9d7d93db222c848acb2ee9d25c86a463ab5b" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.init&quot;&gt;dmd.init&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.init&quot;&gt;dmd.init&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0962778450e3833638b4eee63020f9424a3fb7f1" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.initsem&quot;&gt;dmd.initsem&lt;/strong&gt;;</source>
          <target state="translated">общественный импорт &lt;strong id=&quot;dmd.initsem&quot;&gt;дмд.иницем&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1bd36a466046244029e4f78f19af610d8f4c2b8e" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.mtype&quot;&gt;dmd.mtype&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.mtype&quot;&gt;dmd.mtype&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="54ccc74428d660dc8526e7fb00ac66181093920c" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.nspace&quot;&gt;dmd.nspace&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.nspace&quot;&gt;dmd.nspace&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a3ac1d8cae2df31b06f7aa904e783efdb4ba1457" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.statement&quot;&gt;dmd.statement&lt;/strong&gt;;</source>
          <target state="translated">государственный импорт &lt;strong id=&quot;dmd.statement&quot;&gt;dmd.statement&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c50a73ebbda0fb48fd356d6867460704c3aee0b3" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.staticassert&quot;&gt;dmd.staticassert&lt;/strong&gt;;</source>
          <target state="translated">общественный импорт &lt;strong id=&quot;dmd.staticassert&quot;&gt;dmd.staticassert&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="7a13a5c57700ce4053e000dc781b9e3e122bc133" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;dmd.typesem&quot;&gt;dmd.typesem&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;dmd.typesem&quot;&gt;dmd.typesem&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="02d3b52a322a673e0a2c8db8011066add20366b3" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;etc.c.odbc.sqltypes&quot;&gt;etc.c.odbc.sqltypes&lt;/strong&gt;;</source>
          <target state="translated">общественный импорт и &lt;strong id=&quot;etc.c.odbc.sqltypes&quot;&gt;т.д.c.odbc.sqltypes&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="39e25bb7398551600393ae149cde6bd0488261b4" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;rt.deh_win64_posix&quot;&gt;rt.deh_win64_posix&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;rt.deh_win64_posix&quot;&gt;rt.deh_win64_posix&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="241b916ab754236fc2dbe6b9d1077e5ed000ca8b" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;rt.sections_elf_shared&quot;&gt;rt.sections_elf_shared&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;rt.sections_elf_shared&quot;&gt;rt.sections_elf_shared&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="4382c35e131e31551751a0eabad482b4d9bc0d73" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.algorithm.comparison&quot;&gt;std.algorithm.comparison&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.algorithm.comparison&quot;&gt;std.algorithm.comparison&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3b6285c4758e949d41f6f2c12d632123d452f32a" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.algorithm.iteration&quot;&gt;std.algorithm.iteration&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.algorithm.iteration&quot;&gt;std.algorithm.iteration&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="961262b9b832d46c9048b8a4957d5e995c0f6f49" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.algorithm.mutation&quot;&gt;std.algorithm.mutation&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.algorithm.mutation&quot;&gt;std.algorithm.mutation&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0df89740e8134919bc64fd955108cc07db7e597f" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.algorithm.searching&quot;&gt;std.algorithm.searching&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.algorithm.searching&quot;&gt;std.algorithm.searching&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6b9383443df7a9ee517d8351fbf88ffa9a8ce72f" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.algorithm.setops&quot;&gt;std.algorithm.setops&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.algorithm.setops&quot;&gt;std.algorithm.setops&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6378b84d1f4bb2ce68bda402d275d46096defb0c" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.algorithm.sorting&quot;&gt;std.algorithm.sorting&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.algorithm.sorting&quot;&gt;std.algorithm.sorting&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f4aeb9cebda2eca7a6ea524064e7d8f80dfa2194" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.array&quot;&gt;std.array&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.array&quot;&gt;std.array&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="29bb0dfcff10a34e75f7d952921bba792ddea023" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.container.array&quot;&gt;std.container.array&lt;/strong&gt;;</source>
          <target state="translated">public import &lt;strong id=&quot;std.container.array&quot;&gt;std.container.array&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b749dc83721f6eb43fa6fc143a00837861003ab9" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.container.binaryheap&quot;&gt;std.container.binaryheap&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.container.binaryheap&quot;&gt;std.container.binaryheap&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="72e54c6ee8e4c60552880a35d81d3cb172ceb70b" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.container.dlist&quot;&gt;std.container.dlist&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.container.dlist&quot;&gt;std.container.dlist&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="6c6f04eb69dc804cb71ec1091973849a3d9799e7" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.container.rbtree&quot;&gt;std.container.rbtree&lt;/strong&gt;;</source>
          <target state="translated">public import &lt;strong id=&quot;std.container.rbtree&quot;&gt;std.container.rbtree&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f531e55adc96981b9e73818def62768c62562566" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.container.slist&quot;&gt;std.container.slist&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.container.slist&quot;&gt;std.container.slist&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f72e6048602e14fe2239017f2c42dd60cadaa577" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.container.util&quot;&gt;std.container.util&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.container.util&quot;&gt;std.container.util&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="ac2e26ea58c9bac2e826af6aa70959ef78de97ab" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.datetime.date&quot;&gt;std.datetime.date&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.datetime.date&quot;&gt;std.datetime.date&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d6a94dc31a0235577df48ecb84e13e39372e9ef9" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.datetime.interval&quot;&gt;std.datetime.interval&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.datetime.interval&quot;&gt;std.datetime.interval&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f98526dd564607784b25f30e8b4a923c3c487b70" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.datetime.systime&quot;&gt;std.datetime.systime&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.datetime.systime&quot;&gt;std.datetime.systime&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e48fe58b006225287a015a597f1170d32a827042" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.datetime.timezone&quot;&gt;std.datetime.timezone&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.datetime.timezone&quot;&gt;std.datetime.timezone&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="de53a3a69fe2c6825239a3ab206d82ad42387d6a" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.digest&quot;&gt;std.digest&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.digest&quot;&gt;std.digest&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5c2f23267448c9b318a556416c935e90cafec80b" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.affix_allocator&quot;&gt;std.experimental.allocator.building_blocks.affix_allocator&lt;/strong&gt;;</source>
          <target state="translated">открытый импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.affix_allocator&quot;&gt;std.experimental.allocator.building_blocks.affix_allocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9ef4282fb8f92a4baaedea039eea23791b180f9e" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.aligned_block_list&quot;&gt;std.experimental.allocator.building_blocks.aligned_block_list&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.aligned_block_list&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.aligned_block_list&quot;&gt;std.experimental.allocator.building_blocks.aligned_block_list&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="375beb1927f273c1fcf038f168ce89a7e62ad51a" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.allocator_list&quot;&gt;std.experimental.allocator.building_blocks.allocator_list&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.allocator_list&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.allocator_list&quot;&gt;std.experimental.allocator.building_blocks.allocator_list&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="073d1e7809fba5dba2363831db825b1712bb7ee9" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.ascending_page_allocator&quot;&gt;std.experimental.allocator.building_blocks.ascending_page_allocator&lt;/strong&gt;;</source>
          <target state="translated">public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.ascending_page_allocator&quot;&gt;std.experimental.allocator.building_blocks.ascending_page_allocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="24e0e309c9b0b500842e70db1d2db051fb2dd1ae" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.bitmapped_block&quot;&gt;std.experimental.allocator.building_blocks.bitmapped_block&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.bitmapped_block&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.bitmapped_block&quot;&gt;std.experimental.allocator.building_blocks.bitmapped_block&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="0700fbc311c2826697820da272c000f75c2eaa5b" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.bucketizer&quot;&gt;std.experimental.allocator.building_blocks.bucketizer&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.bucketizer&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.bucketizer&quot;&gt;std.experimental.allocator.building_blocks.bucketizer&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d8fc3ce3041ad85ffd00005d158e07a5643d11d6" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.fallback_allocator&quot;&gt;std.experimental.allocator.building_blocks.fallback_allocator&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.fallback_allocator&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.fallback_allocator&quot;&gt;std.experimental.allocator.building_blocks.fallback_allocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="40d7d253029ac3b39d5172457afd250d47dc7bc7" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.free_list&quot;&gt;std.experimental.allocator.building_blocks.free_list&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.free_list&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.free_list&quot;&gt;std.experimental.allocator.building_blocks.free_list&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="72ddbd2da86e45f60b84479c3b8ef2267e7e1f25" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.free_tree&quot;&gt;std.experimental.allocator.building_blocks.free_tree&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.free_tree&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.free_tree&quot;&gt;std.experimental.allocator.building_blocks.free_tree&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="e8cf20d7308c1e091d06b84240d0fc3a4d810a69" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.kernighan_ritchie&quot;&gt;std.experimental.allocator.building_blocks.kernighan_ritchie&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.kernighan_ritchie&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.kernighan_ritchie&quot;&gt;std.experimental.allocator.building_blocks.kernighan_ritchie&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f9248605e4bd1c4dcc593ac9d31dc76cc9f17b98" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.null_allocator&quot;&gt;std.experimental.allocator.building_blocks.null_allocator&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.null_allocator&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.null_allocator&quot;&gt;std.experimental.allocator.building_blocks.null_allocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="be23e3f2a4c67d42bd50612d235fff9924075249" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.quantizer&quot;&gt;std.experimental.allocator.building_blocks.quantizer&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.quantizer&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.quantizer&quot;&gt;std.experimental.allocator.building_blocks.quantizer&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f7611448905a6ae1c0b24823eef55885fa78b7b4" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.region&quot;&gt;std.experimental.allocator.building_blocks.region&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.region&quot;&gt;std.experimental.allocator.building_blocks.region&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3766100b6da600d879ae7cd020aebcee7d8ef555" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.segregator&quot;&gt;std.experimental.allocator.building_blocks.segregator&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.segregator&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.segregator&quot;&gt;std.experimental.allocator.building_blocks.segregator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c0cb52342f106f55159d6cb725650d1b0d88a81d" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.building_blocks.stats_collector&quot;&gt;std.experimental.allocator.building_blocks.stats_collector&lt;/strong&gt;;</source>
          <target state="translated">&lt;strong id=&quot;std.experimental.allocator.building_blocks.stats_collector&quot;&gt;общий&lt;/strong&gt; импорт &lt;strong id=&quot;std.experimental.allocator.building_blocks.stats_collector&quot;&gt;std.experimental.allocator.building_blocks.stats_collector&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="05abf702b107908b058c4a1c5c4a2a90159f4063" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.common&quot;&gt;std.experimental.allocator.common&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.allocator.common&quot;&gt;std.experimental.allocator.common&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="51734b21eb23622a6518a65b9198a1ef0dbc7047" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.gc_allocator&quot;&gt;std.experimental.allocator.gc_allocator&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.allocator.gc_allocator&quot;&gt;std.experimental.allocator.gc_allocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="1591c256689f60e12f4b4df8470f07dede15becd" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.mallocator&quot;&gt;std.experimental.allocator.mallocator&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.allocator.mallocator&quot;&gt;std.experimental.allocator.mallocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="a572e1c24fa3e37679ec55f96efa7331e226e3b0" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.mmap_allocator&quot;&gt;std.experimental.allocator.mmap_allocator&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.allocator.mmap_allocator&quot;&gt;std.experimental.allocator.mmap_allocator&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3d89403daf11a58ea8cd03cc033aee7e66030b86" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.allocator.typed&quot;&gt;std.experimental.allocator.typed&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.allocator.typed&quot;&gt;std.experimental.allocator.typed&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f216f7e10763f7acbde7052274b7f3c020a284c4" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.logger.core&quot;&gt;std.experimental.logger.core&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.logger.core&quot;&gt;std.experimental.logger.core&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c55aedba367f7e50cc1f5eba38a94654c62002ea" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.logger.filelogger&quot;&gt;std.experimental.logger.filelogger&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.logger.filelogger&quot;&gt;std.experimental.logger.filelogger&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="30a88c41d1cd45eaa8a0790f9782bdbc2ad5bfd7" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.logger.multilogger&quot;&gt;std.experimental.logger.multilogger&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.logger.multilogger&quot;&gt;std.experimental.logger.multilogger&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d7051f99aab69a672dc9097c8e2e170a23e8d007" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.experimental.logger.nulllogger&quot;&gt;std.experimental.logger.nulllogger&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.experimental.logger.nulllogger&quot;&gt;std.experimental.logger.nulllogger&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="066f2aa39a9296ee92e72ea3eec87b23336e84ac" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.math&quot;&gt;std.math&lt;/strong&gt;;</source>
          <target state="translated">общественный импорт &lt;strong id=&quot;std.math&quot;&gt;std.math&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="08dc342c121efe257199b00724ce3f4f2b42b8b2" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.range.interfaces&quot;&gt;std.range.interfaces&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.range.interfaces&quot;&gt;std.range.interfaces&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="969119544da308ac3bbbf1bfd538e240892a0932" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.range.primitives&quot;&gt;std.range.primitives&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.range.primitives&quot;&gt;std.range.primitives&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="55a658215335beb7207e5e43a3a4fd2c20cb3886" translate="yes" xml:space="preserve">
          <source>public import &lt;strong id=&quot;std.variant&quot;&gt;std.variant&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт &lt;strong id=&quot;std.variant&quot;&gt;std.variant&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="f4eb083e93a44d7da66869889ff000c401317600" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.&lt;strong id=&quot;capacity&quot;&gt;capacity&lt;/strong&gt; : &lt;strong id=&quot;capacity&quot;&gt;capacity&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.internal.array. &lt;strong id=&quot;capacity&quot;&gt;емкость&lt;/strong&gt; : &lt;strong id=&quot;capacity&quot;&gt;емкость&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5e6b1feb2629802938db3aa8c173a329070e2e2a" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.appending : &lt;strong id=&quot;_d_arrayappendTImpl&quot;&gt;_d_arrayappendTImpl&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.internal.array.appending: &lt;strong id=&quot;_d_arrayappendTImpl&quot;&gt;_d_arrayappendTImpl&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="c9e1b7c6dcf75fec3ebca2789aabfb5c6d71757c" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.appending : &lt;strong id=&quot;_d_arrayappendcTXImpl&quot;&gt;_d_arrayappendcTXImpl&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.internal.array.appending: &lt;strong id=&quot;_d_arrayappendcTXImpl&quot;&gt;_d_arrayappendcTXImpl&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d81d3c4a8e2b78b24b3dcbfe09b6d20c67543f45" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.capacity : &lt;strong id=&quot;_d_arraysetlengthTImpl&quot;&gt;_d_arraysetlengthTImpl&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.internal.array.capacity: &lt;strong id=&quot;_d_arraysetlengthTImpl&quot;&gt;_d_arraysetlengthTImpl&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="07bc73d883b9910cb9b5e74d327448f8da68ffe3" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.capacity : &lt;strong id=&quot;assumeSafeAppend&quot;&gt;assumeSafeAppend&lt;/strong&gt;;</source>
          <target state="translated">открытый импорт core.internal.array.capacity: &lt;strong id=&quot;assumeSafeAppend&quot;&gt;acceptSafeAppend&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="3df87eabde371d967f89a4d74eb79ef6b02f7d1e" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.capacity : &lt;strong id=&quot;reserve&quot;&gt;reserve&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.internal.array.capacity: &lt;strong id=&quot;reserve&quot;&gt;резерв&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="73376bf32afe8702f7fcd9b9241be3f6c2120bfd" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.casting : &lt;strong id=&quot;__ArrayCast&quot;&gt;__ArrayCast&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.internal.array.casting: &lt;strong id=&quot;__ArrayCast&quot;&gt;__ArrayCast&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="04e95bad3d4a454e8c32e2ced5e224647d661fdc" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.comparison : &lt;strong id=&quot;__cmp&quot;&gt;__cmp&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.internal.array.comparison: &lt;strong id=&quot;__cmp&quot;&gt;__cmp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="585a727ec97e8d3a289f28bf9636610a40ac7bad" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.concatenation : &lt;strong id=&quot;_d_arraycatnTXImpl&quot;&gt;_d_arraycatnTXImpl&lt;/strong&gt;;</source>
          <target state="translated">общий импорт core.internal.array.concatenation: &lt;strong id=&quot;_d_arraycatnTXImpl&quot;&gt;_d_arraycatnTXImpl&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="81d9d1be2894c5b9e2a308bd50f8c85af201c89a" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.construction : &lt;strong id=&quot;_d_arrayctor&quot;&gt;_d_arrayctor&lt;/strong&gt;;</source>
          <target state="translated">открытый импорт core.internal.array.construction: &lt;strong id=&quot;_d_arrayctor&quot;&gt;_d_arrayctor&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="66623d87bd3e9a6621f0ac93b5321eaf9f84b1a9" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.construction : &lt;strong id=&quot;_d_arraysetctor&quot;&gt;_d_arraysetctor&lt;/strong&gt;;</source>
          <target state="translated">открытый импорт core.internal.array.construction: &lt;strong id=&quot;_d_arraysetctor&quot;&gt;_d_arraysetctor&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="cc3e15baf4bd300ce2882b09bf9257ca04f84800" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.equality : &lt;strong id=&quot;__ArrayEq&quot;&gt;__ArrayEq&lt;/strong&gt;;</source>
          <target state="translated">открытый импорт core.internal.array.equality: &lt;strong id=&quot;__ArrayEq&quot;&gt;__ArrayEq&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5d9d309282e5484631e1a2802a11c681e1ac9307" translate="yes" xml:space="preserve">
          <source>public import core.internal.array.equality : &lt;strong id=&quot;__equals&quot;&gt;__equals&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.internal.array.equality: &lt;strong id=&quot;__equals&quot;&gt;__equals&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="dcdcf61ed471ab929963f849363867cb8f3cae80" translate="yes" xml:space="preserve">
          <source>public import core.internal.vararg.sysv_x64 : &lt;strong id=&quot;__va_list&quot;&gt;__va_list&lt;/strong&gt;, &lt;strong id=&quot;__va_list_tag&quot;&gt;__va_list_tag&lt;/strong&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cc02f833364fb28a8a579d34bbf80b0b462b5f" translate="yes" xml:space="preserve">
          <source>public import core.stdc.stdlib : &lt;strong id=&quot;free&quot;&gt;free&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.stdc.stdlib: &lt;strong id=&quot;free&quot;&gt;бесплатно&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b888c3ad46ff33cc8a878e1babbe9a272f6e2a5f" translate="yes" xml:space="preserve">
          <source>public import core.sys.posix.sys.types : &lt;strong id=&quot;time_t&quot;&gt;time_t&lt;/strong&gt;, &lt;strong id=&quot;clock_t&quot;&gt;clock_t&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.sys.posix.sys.types: &lt;strong id=&quot;time_t&quot;&gt;time_t&lt;/strong&gt; , &lt;strong id=&quot;clock_t&quot;&gt;clock_t&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="8f71ee2dcf1fb991bcce8acbeea2ea138f727bd6" translate="yes" xml:space="preserve">
          <source>public import core.time : &lt;strong id=&quot;Duration&quot;&gt;Duration&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт core.time: &lt;strong id=&quot;Duration&quot;&gt;продолжительность&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9849896e0bbd24224cdcf6baa4e32cdfd16d298e" translate="yes" xml:space="preserve">
          <source>public import dmd.backend.&lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt; : &lt;strong id=&quot;type&quot;&gt;type&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт dmd.backend. &lt;strong id=&quot;type&quot;&gt;тип&lt;/strong&gt; : &lt;strong id=&quot;type&quot;&gt;тип&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="842adf477b8870a613ea0acd2939664f175b51eb" translate="yes" xml:space="preserve">
          <source>public import dmd.backend.cc : &lt;strong id=&quot;block&quot;&gt;block&lt;/strong&gt;, &lt;strong id=&quot;Blockx&quot;&gt;Blockx&lt;/strong&gt;, &lt;strong id=&quot;Symbol&quot;&gt;Symbol&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт dmd.backend.cc: &lt;strong id=&quot;block&quot;&gt;block&lt;/strong&gt; , &lt;strong id=&quot;Blockx&quot;&gt;Blockx&lt;/strong&gt; , &lt;strong id=&quot;Symbol&quot;&gt;Symbol&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="82cb4959ba4a876594130f23d1c6552036b0a1bb" translate="yes" xml:space="preserve">
          <source>public import dmd.backend.code_x86 : &lt;strong id=&quot;code&quot;&gt;code&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт dmd.backend.code_x86: &lt;strong id=&quot;code&quot;&gt;code&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="64df0c61cfecae2f37dbcd9cddc16a3d6368fec3" translate="yes" xml:space="preserve">
          <source>public import dmd.backend.el : &lt;strong id=&quot;elem&quot;&gt;elem&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт dmd.backend.el: &lt;strong id=&quot;elem&quot;&gt;elem&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="9ca558e3e6f531aea048fd6b7c7dd4c87fae1e00" translate="yes" xml:space="preserve">
          <source>public import dmd.root.longdouble : &lt;strong id=&quot;real_t&quot;&gt;real_t&lt;/strong&gt; = longdouble;</source>
          <target state="translated">публичный импорт dmd.root.longdouble: &lt;strong id=&quot;real_t&quot;&gt;real_t&lt;/strong&gt; = longdouble;</target>
        </trans-unit>
        <trans-unit id="deac4e4a3aa1914e3377554fff6bfca17a40a0f2" translate="yes" xml:space="preserve">
          <source>public import dmd.root.longdouble : &lt;strong id=&quot;targ_ldouble&quot;&gt;targ_ldouble&lt;/strong&gt; = longdouble;</source>
          <target state="translated">публичный импорт dmd.root.longdouble: &lt;strong id=&quot;targ_ldouble&quot;&gt;targ_ldouble&lt;/strong&gt; = longdouble;</target>
        </trans-unit>
        <trans-unit id="fe7bc6d7ef02fbf5ee2f4cb847e98ec3bc688895" translate="yes" xml:space="preserve">
          <source>public import etc.c.curl : &lt;strong id=&quot;CurlOption&quot;&gt;CurlOption&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт и т. д. .curl: &lt;strong id=&quot;CurlOption&quot;&gt;CurlOption&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b988ce8c98385e8e47beb7fb029c615d52f30f2b" translate="yes" xml:space="preserve">
          <source>public import std.&lt;strong id=&quot;format&quot;&gt;format&lt;/strong&gt; : &lt;strong id=&quot;format&quot;&gt;format&lt;/strong&gt;, &lt;strong id=&quot;sformat&quot;&gt;sformat&lt;/strong&gt;;</source>
          <target state="translated">общественный импорт &lt;strong id=&quot;format&quot;&gt;формат&lt;/strong&gt; : &lt;strong id=&quot;format&quot;&gt;формат&lt;/strong&gt; , &lt;strong id=&quot;sformat&quot;&gt;формат&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="66f35c54775c8b60e2333671060437ced9741861" translate="yes" xml:space="preserve">
          <source>public import std.algorithm.comparison : &lt;strong id=&quot;cmp&quot;&gt;cmp&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт std.algorithm.comparison: &lt;strong id=&quot;cmp&quot;&gt;cmp&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d48d187309c491917b8838ff984e2f5e60762b8c" translate="yes" xml:space="preserve">
          <source>public import std.algorithm.searching : &lt;strong id=&quot;startsWith&quot;&gt;startsWith&lt;/strong&gt;, &lt;strong id=&quot;endsWith&quot;&gt;endsWith&lt;/strong&gt;, &lt;strong id=&quot;count&quot;&gt;count&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт std.algorithm.searching: &lt;strong id=&quot;startsWith&quot;&gt;начинается с&lt;/strong&gt; , &lt;strong id=&quot;endsWith&quot;&gt;заканчивается с&lt;/strong&gt; , &lt;strong id=&quot;count&quot;&gt;считать&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="914ecccef4aa3b7c51d7f19f6b94f803eee8eab6" translate="yes" xml:space="preserve">
          <source>public import std.array : &lt;strong id=&quot;join&quot;&gt;join&lt;/strong&gt;, &lt;strong id=&quot;replace&quot;&gt;replace&lt;/strong&gt;, &lt;strong id=&quot;replaceInPlace&quot;&gt;replaceInPlace&lt;/strong&gt;, &lt;strong id=&quot;split&quot;&gt;split&lt;/strong&gt;, &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;;</source>
          <target state="translated">public import std.array: &lt;strong id=&quot;join&quot;&gt;объединить&lt;/strong&gt; , &lt;strong id=&quot;replace&quot;&gt;заменить&lt;/strong&gt; , &lt;strong id=&quot;replaceInPlace&quot;&gt;replaceInPlace&lt;/strong&gt; , &lt;strong id=&quot;split&quot;&gt;split&lt;/strong&gt; , &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="08c612e7f5658215ed056252276949630563b244" translate="yes" xml:space="preserve">
          <source>public import std.ascii : &lt;strong id=&quot;LetterCase&quot;&gt;LetterCase&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт std.ascii: &lt;strong id=&quot;LetterCase&quot;&gt;LetterCase&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="b59e6f4d9596f35791cc46f698b0c5feebd5baa9" translate="yes" xml:space="preserve">
          <source>public import std.meta : &lt;strong id=&quot;AliasSeq&quot;&gt;AliasSeq&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт std.meta: &lt;strong id=&quot;AliasSeq&quot;&gt;AliasSeq&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="fef4578dfba206210f4726aced5b2355b9a25028" translate="yes" xml:space="preserve">
          <source>public import std.range.primitives : &lt;strong id=&quot;save&quot;&gt;save&lt;/strong&gt;, &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;, &lt;strong id=&quot;popFront&quot;&gt;popFront&lt;/strong&gt;, &lt;strong id=&quot;popBack&quot;&gt;popBack&lt;/strong&gt;, &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;, &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt;;</source>
          <target state="translated">открытый импорт std.range.primitives: &lt;strong id=&quot;save&quot;&gt;сохранить&lt;/strong&gt; , &lt;strong id=&quot;empty&quot;&gt;пусто&lt;/strong&gt; , &lt;strong id=&quot;popFront&quot;&gt;popFront&lt;/strong&gt; , &lt;strong id=&quot;popBack&quot;&gt;popBack&lt;/strong&gt; , &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt; , &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="5fb799fe4e0e90612e8404a991adfc4951eed4b1" translate="yes" xml:space="preserve">
          <source>public import std.system : &lt;strong id=&quot;Endian&quot;&gt;Endian&lt;/strong&gt;;</source>
          <target state="translated">публичный импорт std.system: &lt;strong id=&quot;Endian&quot;&gt;Endian&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="23c826fd50e3fa47a4c31831dac817254f405da9" translate="yes" xml:space="preserve">
          <source>public import std.typecons : &lt;strong id=&quot;Flag&quot;&gt;Flag&lt;/strong&gt;, &lt;strong id=&quot;Yes&quot;&gt;Yes&lt;/strong&gt;, &lt;strong id=&quot;No&quot;&gt;No&lt;/strong&gt;;</source>
          <target state="translated">публичные импортные std.typecons: &lt;strong id=&quot;Flag&quot;&gt;флаг&lt;/strong&gt; , &lt;strong id=&quot;Yes&quot;&gt;да&lt;/strong&gt; , &lt;strong id=&quot;No&quot;&gt;нет&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="140d7323d8288ff947f576ffdf2af284c1a14af1" translate="yes" xml:space="preserve">
          <source>public import std.uni : &lt;strong id=&quot;icmp&quot;&gt;icmp&lt;/strong&gt;, &lt;strong id=&quot;toLower&quot;&gt;toLower&lt;/strong&gt;, &lt;strong id=&quot;toLowerInPlace&quot;&gt;toLowerInPlace&lt;/strong&gt;, &lt;strong id=&quot;toUpper&quot;&gt;toUpper&lt;/strong&gt;, &lt;strong id=&quot;toUpperInPlace&quot;&gt;toUpperInPlace&lt;/strong&gt;;</source>
          <target state="translated">открытый импорт std.uni: &lt;strong id=&quot;icmp&quot;&gt;icmp&lt;/strong&gt; , &lt;strong id=&quot;toLower&quot;&gt;toLower&lt;/strong&gt; , &lt;strong id=&quot;toLowerInPlace&quot;&gt;toLowerInPlace&lt;/strong&gt; , &lt;strong id=&quot;toUpper&quot;&gt;toUpper&lt;/strong&gt; , &lt;strong id=&quot;toUpperInPlace&quot;&gt;toUpperInPlace&lt;/strong&gt; ;</target>
        </trans-unit>
        <trans-unit id="d6a2c9762ce9d4d0d2fa0b6816c961c74206c558" translate="yes" xml:space="preserve">
          <source>public/private key files</source>
          <target state="translated">публичные/частные ключевые файлы</target>
        </trans-unit>
        <trans-unit id="7acca69b4fa119d8ae8d34fc95597bfbc8508531" translate="yes" xml:space="preserve">
          <source>publicly</source>
          <target state="translated">publicly</target>
        </trans-unit>
        <trans-unit id="53079c28b9574c151df61911db1fd5d6926816ae" translate="yes" xml:space="preserve">
          <source>pure @nogc @safe BigInt &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(T : BigInt)(T x);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510c110a4426c3f804ac37fbc40ce89dd51149e0" translate="yes" xml:space="preserve">
          <source>pure @nogc @safe this(Allocator* pa);</source>
          <target state="translated">чисто @nogc @safe this(Allocator*pa);</target>
        </trans-unit>
        <trans-unit id="3cb122c03bec3ac0156ebf7f44f3f832636f9590" translate="yes" xml:space="preserve">
          <source>pure @nogc @trusted TTo[] &lt;strong id=&quot;__ArrayCast&quot;&gt;__ArrayCast&lt;/strong&gt;(TFrom, TTo)(TFrom[] from);</source>
          <target state="translated">pure @nogc @ trusted TTo [] &lt;strong id=&quot;__ArrayCast&quot;&gt;__ArrayCast&lt;/strong&gt; (TFrom, TTo) (TFrom [] from);</target>
        </trans-unit>
        <trans-unit id="b1856b2052014ba02e1dabdc4e61cd6e1239fe32" translate="yes" xml:space="preserve">
          <source>pure @nogc BigInt &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(T : BigInt)(T x);</source>
          <target state="translated">pure @nogc BigInt &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; (T: BigInt) (T x);</target>
        </trans-unit>
        <trans-unit id="4ce49d3146c23f37bdb1d0eafb3b88f3f9caf2b5" translate="yes" xml:space="preserve">
          <source>pure @nogc ref @safe Allocator &lt;strong id=&quot;impl&quot;&gt;impl&lt;/strong&gt;();</source>
          <target state="translated">pure @nogc ref @safe Allocator &lt;strong id=&quot;impl&quot;&gt;impl&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2b6cfb25111659cabcb15102d4bdaebb6b430470" translate="yes" xml:space="preserve">
          <source>pure @property @safe dchar &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt;(T)(scope const(T)[] a)</source>
          <target state="translated">pure @property @safe dchar &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt; (T) (область действия const (T) [] a)</target>
        </trans-unit>
        <trans-unit id="2273369fd6a9571f4cc48f71e5c06f15faf4e8fb" translate="yes" xml:space="preserve">
          <source>pure @property @safe dchar &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;(T)(scope const(T)[] a)</source>
          <target state="translated">pure @property @safe dchar &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt; (T) (область действия const (T) [] a)</target>
        </trans-unit>
        <trans-unit id="ae1dc72834a21d2f5fe1211e6ea7291631fad9f2" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;compressionMethod&quot;&gt;compressionMethod&lt;/strong&gt;(CompressionMethod cm);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;compressionMethod&quot;&gt;compressMethod&lt;/strong&gt; (CompressionMethod cm);</target>
        </trans-unit>
        <trans-unit id="b5f3e937b7e50b7db8bbe8de2e47265cf9ab9f56" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;day&quot;&gt;day&lt;/strong&gt;(int &lt;strong id=&quot;day&quot;&gt;day&lt;/strong&gt;);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;day&quot;&gt;day&lt;/strong&gt; (int &lt;strong id=&quot;day&quot;&gt;day&lt;/strong&gt; );</target>
        </trans-unit>
        <trans-unit id="ed00fb2c590b85ba621529e13aeed6b7b7067694" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;dayOfYear&quot;&gt;dayOfYear&lt;/strong&gt;(int day);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;dayOfYear&quot;&gt;dayOfYear&lt;/strong&gt; (int day);</target>
        </trans-unit>
        <trans-unit id="9fd4ff5ab52ae7cb65ea9d8529dd134cb6410b01" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;hour&quot;&gt;hour&lt;/strong&gt;(int &lt;strong id=&quot;hour&quot;&gt;hour&lt;/strong&gt;);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;hour&quot;&gt;hour&lt;/strong&gt; (int &lt;strong id=&quot;hour&quot;&gt;hour&lt;/strong&gt; );</target>
        </trans-unit>
        <trans-unit id="36d06629ee8dc3e7c4b8c87d7835b7145762859b" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;minute&quot;&gt;minute&lt;/strong&gt;(int &lt;strong id=&quot;minute&quot;&gt;minute&lt;/strong&gt;);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;minute&quot;&gt;minute&lt;/strong&gt; (int &lt;strong id=&quot;minute&quot;&gt;minute&lt;/strong&gt; );</target>
        </trans-unit>
        <trans-unit id="a8362288861ca596823ae701646debb706f369c2" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;month&quot;&gt;month&lt;/strong&gt;(Month &lt;strong id=&quot;month&quot;&gt;month&lt;/strong&gt;);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;month&quot;&gt;month&lt;/strong&gt; (Месяц &lt;strong id=&quot;month&quot;&gt;месяц&lt;/strong&gt; );</target>
        </trans-unit>
        <trans-unit id="a3f1501cb3f989dfd673d597816b6ca1149b7df2" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;second&quot;&gt;second&lt;/strong&gt;(int &lt;strong id=&quot;second&quot;&gt;second&lt;/strong&gt;);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;second&quot;&gt;second&lt;/strong&gt; (int &lt;strong id=&quot;second&quot;&gt;second&lt;/strong&gt; );</target>
        </trans-unit>
        <trans-unit id="da9d8e1b22d2884435b663149becc629b8b10ebf" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;year&quot;&gt;year&lt;/strong&gt;(int &lt;strong id=&quot;year&quot;&gt;year&lt;/strong&gt;);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;year&quot;&gt;year&lt;/strong&gt; (int &lt;strong id=&quot;year&quot;&gt;year&lt;/strong&gt; );</target>
        </trans-unit>
        <trans-unit id="8e9cc4a5a928a41493fd88e0a1f5217eff9d9236" translate="yes" xml:space="preserve">
          <source>pure @property @safe void &lt;strong id=&quot;yearBC&quot;&gt;yearBC&lt;/strong&gt;(int year);</source>
          <target state="translated">pure @property @safe void &lt;strong id=&quot;yearBC&quot;&gt;yearBC&lt;/strong&gt; (int year);</target>
        </trans-unit>
        <trans-unit id="978c67135c9bc50ab39c2c25214489244a3f5a5f" translate="yes" xml:space="preserve">
          <source>pure @property auto &lt;strong id=&quot;opDispatch&quot;&gt;opDispatch&lt;/strong&gt;(string name)();</source>
          <target state="translated">pure @property auto &lt;strong id=&quot;opDispatch&quot;&gt;opDispatch&lt;/strong&gt; (имя строки) ();</target>
        </trans-unit>
        <trans-unit id="e9857fa3f07adb3fe2db6d58d7c3b3011d3dd962" translate="yes" xml:space="preserve">
          <source>pure @property void &lt;strong id=&quot;begin&quot;&gt;begin&lt;/strong&gt;(TP timePoint);</source>
          <target state="translated">pure @property void &lt;strong id=&quot;begin&quot;&gt;begin&lt;/strong&gt; (TP timePoint);</target>
        </trans-unit>
        <trans-unit id="389f8d2e9467888471fb15df2fca2a30d73b9cd6" translate="yes" xml:space="preserve">
          <source>pure @property void &lt;strong id=&quot;end&quot;&gt;end&lt;/strong&gt;(TP timePoint);</source>
          <target state="translated">pure @property void &lt;strong id=&quot;end&quot;&gt;end&lt;/strong&gt; (TP timePoint);</target>
        </trans-unit>
        <trans-unit id="f1f85ea13b806899d478d3805dfdb0cefac2beee" translate="yes" xml:space="preserve">
          <source>pure @safe C1[] &lt;strong id=&quot;translate&quot;&gt;translate&lt;/strong&gt;(C1, C2 = immutable(char))(C1[] str, in dchar[dchar] transTable, const(C2)[] toRemove = null)</source>
          <target state="translated">чистый @safe C1 [] &lt;strong id=&quot;translate&quot;&gt;translate&lt;/strong&gt; (C1, C2 = неизменяемый (char)) (C1 [] str, в dchar [dchar] transTable, const (C2) [] toRemove = null)</target>
        </trans-unit>
        <trans-unit id="151fe2db2b972fd9425f40e914b71d995b2a24db" translate="yes" xml:space="preserve">
          <source>pure @safe C1[] &lt;strong id=&quot;translate&quot;&gt;translate&lt;/strong&gt;(C1, S, C2 = immutable(char))(C1[] str, in S[dchar] transTable, const(C2)[] toRemove = null)</source>
          <target state="translated">чистый @safe C1 [] &lt;strong id=&quot;translate&quot;&gt;translate&lt;/strong&gt; (C1, S, C2 = неизменяемый (символ)) (C1 [] str, в S [dchar] transTable, const (C2) [] toRemove = null)</target>
        </trans-unit>
        <trans-unit id="68c661dc4a0129c935b24ffbe94b94eeec06b1d4" translate="yes" xml:space="preserve">
          <source>pure @safe C[][] &lt;strong id=&quot;splitLines&quot;&gt;splitLines&lt;/strong&gt;(C)(C[] s, KeepTerminator keepTerm = No.keepTerminator)</source>
          <target state="translated">pure @safe C [] [] &lt;strong id=&quot;splitLines&quot;&gt;splitLines&lt;/strong&gt; (C) (C [] s, KeepTerminator keepTerm = No.keepTerminator)</target>
        </trans-unit>
        <trans-unit id="68387cdfa148798e022fb063aba9137889d6022e" translate="yes" xml:space="preserve">
          <source>pure @safe Date &lt;strong id=&quot;fromISOExtString&quot;&gt;fromISOExtString&lt;/strong&gt;(S)(scope const S isoExtString)</source>
          <target state="translated">pure @safe Date &lt;strong id=&quot;fromISOExtString&quot;&gt;fromISOExtString&lt;/strong&gt; (S) (область действия const S isoExtString)</target>
        </trans-unit>
        <trans-unit id="f8b29ed1e6b8b28f2fc1269749de6317dade97d1" translate="yes" xml:space="preserve">
          <source>pure @safe Date &lt;strong id=&quot;fromISOString&quot;&gt;fromISOString&lt;/strong&gt;(S)(scope const S isoString)</source>
          <target state="translated">pure @safe Date &lt;strong id=&quot;fromISOString&quot;&gt;fromISOString&lt;/strong&gt; (S) (область действия cons S isoString)</target>
        </trans-unit>
        <trans-unit id="710a90401616071bc9fe4f38db0e12f71c80b793" translate="yes" xml:space="preserve">
          <source>pure @safe Date &lt;strong id=&quot;fromSimpleString&quot;&gt;fromSimpleString&lt;/strong&gt;(S)(scope const S simpleString)</source>
          <target state="translated">pure @safe Date &lt;strong id=&quot;fromSimpleString&quot;&gt;fromSimpleString&lt;/strong&gt; (S) (область действия const S simpleString)</target>
        </trans-unit>
        <trans-unit id="8551b848aae9ad10bfab51a60fc20fb205e01f7e" translate="yes" xml:space="preserve">
          <source>pure @safe DateTime &lt;strong id=&quot;fromISOExtString&quot;&gt;fromISOExtString&lt;/strong&gt;(S)(scope const S isoExtString)</source>
          <target state="translated">pure @safe DateTime от &lt;strong id=&quot;fromISOExtString&quot;&gt;ISOExtString&lt;/strong&gt; (S) (область действия const S isoExtString)</target>
        </trans-unit>
        <trans-unit id="9f6be5f990f12b6dd43891eb60ebd8a6bd3b2c45" translate="yes" xml:space="preserve">
          <source>pure @safe DateTime &lt;strong id=&quot;fromISOString&quot;&gt;fromISOString&lt;/strong&gt;(S)(scope const S isoString)</source>
          <target state="translated">чистый @safe DateTime от &lt;strong id=&quot;fromISOString&quot;&gt;ISOString&lt;/strong&gt; (S) (область действия const S isoString)</target>
        </trans-unit>
        <trans-unit id="a0c3cda6c3898101f10bb1f67865b6b6f728c205" translate="yes" xml:space="preserve">
          <source>pure @safe DateTime &lt;strong id=&quot;fromSimpleString&quot;&gt;fromSimpleString&lt;/strong&gt;(S)(scope const S simpleString)</source>
          <target state="translated">pure @safe DateTime &lt;strong id=&quot;fromSimpleString&quot;&gt;fromSimpleString&lt;/strong&gt; (S) (область действия const S simpleString)</target>
        </trans-unit>
        <trans-unit id="32989b5a5d91ad489113e47384ce074742505905" translate="yes" xml:space="preserve">
          <source>pure @safe FILE* &lt;strong id=&quot;getFP&quot;&gt;getFP&lt;/strong&gt;();</source>
          <target state="translated">чистый @safe FILE * &lt;strong id=&quot;getFP&quot;&gt;getFP&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="337d55558a345dbbbaf3d1b8e850048ac1b48aa4" translate="yes" xml:space="preserve">
          <source>pure @safe S &lt;strong id=&quot;outdent&quot;&gt;outdent&lt;/strong&gt;(S)(S str)</source>
          <target state="translated">чистый @safe S &lt;strong id=&quot;outdent&quot;&gt;outdent&lt;/strong&gt; (S) (S ул)</target>
        </trans-unit>
        <trans-unit id="594bee8701d21bda9990bc1906e3a14925496797" translate="yes" xml:space="preserve">
          <source>pure @safe S &lt;strong id=&quot;succ&quot;&gt;succ&lt;/strong&gt;(S)(S s)</source>
          <target state="translated">чистый @ безопасный S &lt;strong id=&quot;succ&quot;&gt;succ&lt;/strong&gt; (S) (S s)</target>
        </trans-unit>
        <trans-unit id="ca64c717829701ed1ce065330e9656938982a37a" translate="yes" xml:space="preserve">
          <source>pure @safe S[] &lt;strong id=&quot;outdent&quot;&gt;outdent&lt;/strong&gt;(S)(S[] lines)</source>
          <target state="translated">чистый @safe S [] &lt;strong id=&quot;outdent&quot;&gt;outdent&lt;/strong&gt; (S) (S [] строк)</target>
        </trans-unit>
        <trans-unit id="dbbbe026016bde9d2f784d494526936fd5a919a7" translate="yes" xml:space="preserve">
          <source>pure @safe S[] &lt;strong id=&quot;split&quot;&gt;split&lt;/strong&gt;(S)(S s)</source>
          <target state="translated">чистый @safe S [] &lt;strong id=&quot;split&quot;&gt;split&lt;/strong&gt; (S) (S s)</target>
        </trans-unit>
        <trans-unit id="9200813e73019c60af3943b1fc970c7d75df2612" translate="yes" xml:space="preserve">
          <source>pure @safe TZConversions &lt;strong id=&quot;parseTZConversions&quot;&gt;parseTZConversions&lt;/strong&gt;(string windowsZonesXMLText);</source>
          <target state="translated">pure @safe TZConversions &lt;strong id=&quot;parseTZConversions&quot;&gt;parseTZConversions&lt;/strong&gt; (строка windowsZonesXMLText);</target>
        </trans-unit>
        <trans-unit id="090bdafb427a91daf95e6dffbf64b450a2f4b464" translate="yes" xml:space="preserve">
          <source>pure @safe TimeOfDay &lt;strong id=&quot;fromISOExtString&quot;&gt;fromISOExtString&lt;/strong&gt;(S)(scope const S isoExtString)</source>
          <target state="translated">pure @safe TimeOfDay &lt;strong id=&quot;fromISOExtString&quot;&gt;fromISOExtString&lt;/strong&gt; (S) (область действия const S isoExtString)</target>
        </trans-unit>
        <trans-unit id="80be9a8a8a35a9a90a8b29e69dac370421750067" translate="yes" xml:space="preserve">
          <source>pure @safe TimeOfDay &lt;strong id=&quot;fromISOString&quot;&gt;fromISOString&lt;/strong&gt;(S)(scope const S isoString)</source>
          <target state="translated">чистый @safe TimeOfDay от &lt;strong id=&quot;fromISOString&quot;&gt;ISOString&lt;/strong&gt; (S) (область действия cons S isoString)</target>
        </trans-unit>
        <trans-unit id="cc25cea3d08d4db5a628ff5924a9cc701246ee47" translate="yes" xml:space="preserve">
          <source>pure @safe V1 &lt;strong id=&quot;simd&quot;&gt;simd&lt;/strong&gt;(XMM opcode, V1)(V1 op1)</source>
          <target state="translated">чистый @safe V1 &lt;strong id=&quot;simd&quot;&gt;SIMD&lt;/strong&gt; (ДРП опкод, V1) (V1 OP1)</target>
        </trans-unit>
        <trans-unit id="54b731e1db62ee44fd3932527750ba6425d5e157" translate="yes" xml:space="preserve">
          <source>pure @safe V1 &lt;strong id=&quot;simd&quot;&gt;simd&lt;/strong&gt;(XMM opcode, V1)(double d)</source>
          <target state="translated">чистого @safe V1 &lt;strong id=&quot;simd&quot;&gt;SIMD&lt;/strong&gt; (ДРП опкод, V1) (двойной д)</target>
        </trans-unit>
        <trans-unit id="d55ca3a47310d4e1c0e5888f091ea85b12202cac" translate="yes" xml:space="preserve">
          <source>pure @safe V1 &lt;strong id=&quot;simd&quot;&gt;simd&lt;/strong&gt;(XMM opcode, V1)(float f)</source>
          <target state="translated">чистого @safe V1 &lt;strong id=&quot;simd&quot;&gt;SIMD&lt;/strong&gt; (ДРП опкод, V1) (флоат - е)</target>
        </trans-unit>
        <trans-unit id="b4feaac78bd293546eb714d9308a9c3cbe9e1300" translate="yes" xml:space="preserve">
          <source>pure @safe V1 &lt;strong id=&quot;simd&quot;&gt;simd&lt;/strong&gt;(XMM opcode, V1, V2)(V1 op1, V2 op2)</source>
          <target state="translated">чистый @safe V1 &lt;strong id=&quot;simd&quot;&gt;SIMD&lt;/strong&gt; (ДРП опкод, V1, V2) (V1 ОР1, ОР2 V2)</target>
        </trans-unit>
        <trans-unit id="11856c728d73d00918a5fec53a935771805155b8" translate="yes" xml:space="preserve">
          <source>pure @safe V1 &lt;strong id=&quot;simd&quot;&gt;simd&lt;/strong&gt;(XMM opcode, ubyte imm8, V1)(V1 op1)</source>
          <target state="translated">чистый @safe V1 &lt;strong id=&quot;simd&quot;&gt;SIMD&lt;/strong&gt; (ДРП опкод, UBYTE IMM8, V1) (V1 OP1)</target>
        </trans-unit>
        <trans-unit id="e088e4ea085a950dfd3eff8644b0072d896f279b" translate="yes" xml:space="preserve">
          <source>pure @safe V1 &lt;strong id=&quot;simd&quot;&gt;simd&lt;/strong&gt;(XMM opcode, ubyte imm8, V1, V2)(V1 op1, V2 op2)</source>
          <target state="translated">чистый @safe V1 &lt;strong id=&quot;simd&quot;&gt;SIMD&lt;/strong&gt; (ДРП опкод, UBYTE IMM8, V1, V2) (V1 ОР1, ОР2 V2)</target>
        </trans-unit>
        <trans-unit id="0c7329f6b8059134c27708f7ffd9a6b87389250e" translate="yes" xml:space="preserve">
          <source>pure @safe char[] &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(Range)(Range source)</source>
          <target state="translated">pure @safe char [] &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt; (Range) (Источник диапазона)</target>
        </trans-unit>
        <trans-unit id="59530bf503f559b48048f96e2b2aa7a343605251" translate="yes" xml:space="preserve">
          <source>pure @safe const(wchar)* &lt;strong id=&quot;toUTF16z&quot;&gt;toUTF16z&lt;/strong&gt;(C)(const(C)[] str)</source>
          <target state="translated">чистый @safe const (wchar) * &lt;strong id=&quot;toUTF16z&quot;&gt;toUTF16z&lt;/strong&gt; (C) (const (C) [] стр.)</target>
        </trans-unit>
        <trans-unit id="9a7c1ae112f3f1d16cde3b2bbdf13d3c425c4918" translate="yes" xml:space="preserve">
          <source>pure @safe inout(C)[] &lt;strong id=&quot;baseName&quot;&gt;baseName&lt;/strong&gt;(CaseSensitive cs = CaseSensitive.osDefault, C, C1)(inout(C)[] path, in C1[] suffix)</source>
          <target state="translated">чисто @safe inout (C) [] &lt;strong id=&quot;baseName&quot;&gt;baseName&lt;/strong&gt; (CaseSensitive cs = CaseSensitive.osDefault, C, C1) (путь inout (C) [], с суффиксом C1 [])</target>
        </trans-unit>
        <trans-unit id="dbd27c518f81614302a69d310dbe93365adebb20" translate="yes" xml:space="preserve">
          <source>pure @safe int &lt;strong id=&quot;cmpTimeUnits&quot;&gt;cmpTimeUnits&lt;/strong&gt;(string lhs, string rhs);</source>
          <target state="translated">pure @safe int &lt;strong id=&quot;cmpTimeUnits&quot;&gt;cmpTimeUnits&lt;/strong&gt; (строка lhs, строка rhs);</target>
        </trans-unit>
        <trans-unit id="7434e5dfa33dbac6bfdd48a8bda88fa46d7b6664" translate="yes" xml:space="preserve">
          <source>pure @safe int &lt;strong id=&quot;monthsToMonth&quot;&gt;monthsToMonth&lt;/strong&gt;(int currMonth, int month);</source>
          <target state="translated">pure @safe int &lt;strong id=&quot;monthsToMonth&quot;&gt;monthsToMonth&lt;/strong&gt; (int currMonth, int month);</target>
        </trans-unit>
        <trans-unit id="2fb3c1e480116f92127b3a1653057505da64e406" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;indexOfAny&quot;&gt;indexOfAny&lt;/strong&gt;(Char, Char2)(const(Char)[] haystack, const(Char2)[] needles, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">чистый @safe ptrdiff_t &lt;strong id=&quot;indexOfAny&quot;&gt;indexOfAny&lt;/strong&gt; (Char, Char2) (стог сена const (Char) [], иглы const (Char2) [], в случае CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="2c520c6fcb2badca783887fc1bdb1d81e35d5e2f" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;indexOfAny&quot;&gt;indexOfAny&lt;/strong&gt;(Char, Char2)(const(Char)[] haystack, const(Char2)[] needles, in size_t startIdx, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">чистый @safe ptrdiff_t &lt;strong id=&quot;indexOfAny&quot;&gt;indexOfAny&lt;/strong&gt; (Char, Char2) (стог сена const (Char) [], иглы const (Char2) [], в size_t startIdx, в CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="bbafcfa4439d57e3475dfe46200420b57450fbcd" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;indexOfNeither&quot;&gt;indexOfNeither&lt;/strong&gt;(Char, Char2)(const(Char)[] haystack, const(Char2)[] needles, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">чистый @safe ptrdiff_t &lt;strong id=&quot;indexOfNeither&quot;&gt;indexOfNeither&lt;/strong&gt; (Char, Char2) (стог сена const (Char) [], иглы const (Char2) [], в случае CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="32831cd964618056262496ecfdcda0877199fbda" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;indexOfNeither&quot;&gt;indexOfNeither&lt;/strong&gt;(Char, Char2)(const(Char)[] haystack, const(Char2)[] needles, in size_t startIdx, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">чистый @safe ptrdiff_t &lt;strong id=&quot;indexOfNeither&quot;&gt;indexOfNeither&lt;/strong&gt; (Char, Char2) (стог сена const (Char) [], иглы const (Char2) [], в size_t startIdx, в CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="c35239f30a274d3da0cb88b4dd673d7f768ec0f6" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOf&quot;&gt;lastIndexOf&lt;/strong&gt;(Char)(const(Char)[] s, in dchar c, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOf&quot;&gt;lastIndexOf&lt;/strong&gt; (Char) (const (Char) [] s, в dchar c, в CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="9a9812431275ad6f94eb38fea8d489c856e3c2c0" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOf&quot;&gt;lastIndexOf&lt;/strong&gt;(Char)(const(Char)[] s, in dchar c, in size_t startIdx, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOf&quot;&gt;lastIndexOf&lt;/strong&gt; (Char) (const (Char) [] s, в dchar c, в size_t startIdx, в CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="3505c125110ddfd798aab45e6b697c50a30494e8" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOf&quot;&gt;lastIndexOf&lt;/strong&gt;(Char1, Char2)(const(Char1)[] s, const(Char2)[] sub, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOf&quot;&gt;lastIndexOf&lt;/strong&gt; (Char1, Char2) (const (Char1) [] s, const (Char2) [] sub, в CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="79c464dda1669afbd6ed17496fa4d085e4bbb9b8" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOf&quot;&gt;lastIndexOf&lt;/strong&gt;(Char1, Char2)(const(Char1)[] s, const(Char2)[] sub, in size_t startIdx, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOf&quot;&gt;lastIndexOf&lt;/strong&gt; (Char1, Char2) (const (Char1) [] s, const (Char2) [] sub, в size_t startIdx, в CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="2318b279fff890e8d6c0502eca05e303dca5e574" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOfAny&quot;&gt;lastIndexOfAny&lt;/strong&gt;(Char, Char2)(const(Char)[] haystack, const(Char2)[] needles, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">чистый @safe ptrdiff_t &lt;strong id=&quot;lastIndexOfAny&quot;&gt;lastIndexOfAny&lt;/strong&gt; (Char, Char2) (стог сена const (Char) [], иглы const (Char2) [], в случае CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="b0bed9db6d44b4defaedb19336abdb755f87d368" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOfAny&quot;&gt;lastIndexOfAny&lt;/strong&gt;(Char, Char2)(const(Char)[] haystack, const(Char2)[] needles, in size_t stopIdx, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">чистый @safe ptrdiff_t &lt;strong id=&quot;lastIndexOfAny&quot;&gt;lastIndexOfAny&lt;/strong&gt; (Char, Char2) (стог сена const (Char) [], иглы const (Char2) [], в size_t stopIdx, в CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="92f35f71dc2b0cc8f417d5128d8f3e730dffe768" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOfNeither&quot;&gt;lastIndexOfNeither&lt;/strong&gt;(Char, Char2)(const(Char)[] haystack, const(Char2)[] needles, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">чистый @safe ptrdiff_t &lt;strong id=&quot;lastIndexOfNeither&quot;&gt;lastIndexOfNeither&lt;/strong&gt; (Char, Char2) (стог сена const (Char) [], иглы const (Char2) [], в случае CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="0a1897408c22b1ae52fd4f3d023271891a075beb" translate="yes" xml:space="preserve">
          <source>pure @safe ptrdiff_t &lt;strong id=&quot;lastIndexOfNeither&quot;&gt;lastIndexOfNeither&lt;/strong&gt;(Char, Char2)(const(Char)[] haystack, const(Char2)[] needles, in size_t stopIdx, in CaseSensitive cs = Yes.caseSensitive)</source>
          <target state="translated">чистый @safe ptrdiff_t &lt;strong id=&quot;lastIndexOfNeither&quot;&gt;lastIndexOfNeither&lt;/strong&gt; (Char, Char2) (стог сена const (Char) [], иглы const (Char2) [], в size_t stopIdx, в CaseSensitive cs = Yes.caseSensitive)</target>
        </trans-unit>
        <trans-unit id="5b0bdcf67dc8289feba34943e4a54bfc1e416e40" translate="yes" xml:space="preserve">
          <source>pure @safe size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(out char[4] buf, dchar c);</source>
          <target state="translated">чисто @safe size_t &lt;strong id=&quot;encode&quot;&gt;кодировать&lt;/strong&gt; (UseReplacementDchar useReplacementDchar = No.useReplacementDchar) (out char [4] buf, dchar c);</target>
        </trans-unit>
        <trans-unit id="9ef9ac5b6e16aab52d1609cbe558a2e920aa28a7" translate="yes" xml:space="preserve">
          <source>pure @safe size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(out dchar[1] buf, dchar c);</source>
          <target state="translated">чисто @safe size_t &lt;strong id=&quot;encode&quot;&gt;кодировать&lt;/strong&gt; (UseReplacementDchar useReplacementDchar = No.useReplacementDchar) (out dchar [1] buf, dchar c);</target>
        </trans-unit>
        <trans-unit id="44bfdcb41ed691b0a73eda1786aec4f7e6b50fd8" translate="yes" xml:space="preserve">
          <source>pure @safe size_t &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(out wchar[2] buf, dchar c);</source>
          <target state="translated">чисто @safe size_t &lt;strong id=&quot;encode&quot;&gt;кодировать&lt;/strong&gt; (UseReplacementDchar useReplacementDchar = No.useReplacementDchar) (out wchar [2] buf, dchar c);</target>
        </trans-unit>
        <trans-unit id="b3f4f355feaa6f8376b8ae44792f4680d1133f28" translate="yes" xml:space="preserve">
          <source>pure @safe size_t &lt;strong id=&quot;graphemeStride&quot;&gt;graphemeStride&lt;/strong&gt;(C)(scope const C[] input, size_t index)</source>
          <target state="translated">чистый @safe size_t &lt;strong id=&quot;graphemeStride&quot;&gt;graphemeStride&lt;/strong&gt; (C) (сфера Const С [] вход, size_t индекс)</target>
        </trans-unit>
        <trans-unit id="fe55710a2840cdead5084b1ad4025d929322e901" translate="yes" xml:space="preserve">
          <source>pure @safe size_t &lt;strong id=&quot;toUCSindex&quot;&gt;toUCSindex&lt;/strong&gt;(C)(const(C)[] str, size_t index)</source>
          <target state="translated">чистый @safe size_t &lt;strong id=&quot;toUCSindex&quot;&gt;toUCSindex&lt;/strong&gt; (C) (const (C) [] str, size_t index)</target>
        </trans-unit>
        <trans-unit id="f389dd125085146dcbfadf5f81351908ee1dc778" translate="yes" xml:space="preserve">
          <source>pure @safe size_t &lt;strong id=&quot;toUTFindex&quot;&gt;toUTFindex&lt;/strong&gt;(C)(const(C)[] str, size_t n)</source>
          <target state="translated">чистый @safe size_t &lt;strong id=&quot;toUTFindex&quot;&gt;toUTFindex&lt;/strong&gt; (C) (const (C) [] str, size_t n)</target>
        </trans-unit>
        <trans-unit id="d723cf0b5f6fdab0d3538a402f2e1be93cbe9d1f" translate="yes" xml:space="preserve">
          <source>pure @safe string &lt;strong id=&quot;absolutePath&quot;&gt;absolutePath&lt;/strong&gt;(string path, lazy string base = getcwd());</source>
          <target state="translated">чистая строка @safe &lt;strong id=&quot;absolutePath&quot;&gt;absolutePath&lt;/strong&gt; (путь строки, ленивая строка base = getcwd ());</target>
        </trans-unit>
        <trans-unit id="1a9846f14ab63f1e9f557e4eeb1d4ad5e10b76ee" translate="yes" xml:space="preserve">
          <source>pure @safe string &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(string s, DecodeMode mode = DecodeMode.LOOSE);</source>
          <target state="translated">&lt;strong id=&quot;decode&quot;&gt;декодирование&lt;/strong&gt; чистой строки @safe (string s, режим DecodeMode = DecodeMode.LOOSE);</target>
        </trans-unit>
        <trans-unit id="6300f53f1ae778c9ea2dda81700919a6b679644e" translate="yes" xml:space="preserve">
          <source>pure @safe string &lt;strong id=&quot;escapeShellCommand&quot;&gt;escapeShellCommand&lt;/strong&gt;(scope const(char[])[] args...);</source>
          <target state="translated">чистая @safe строка &lt;strong id=&quot;escapeShellCommand&quot;&gt;escapeShellCommand&lt;/strong&gt; (scope const (char []) [] args ...);</target>
        </trans-unit>
        <trans-unit id="f322124638050cb8db92f455a85b726646e0a06b" translate="yes" xml:space="preserve">
          <source>pure @safe string[string] &lt;strong id=&quot;abbrev&quot;&gt;abbrev&lt;/strong&gt;(string[] values);</source>
          <target state="translated">pure @safe string [string] &lt;strong id=&quot;abbrev&quot;&gt;abbrev&lt;/strong&gt; (string [] values);</target>
        </trans-unit>
        <trans-unit id="4f6b4abc8e3673bc44677ed5113202f463b41938" translate="yes" xml:space="preserve">
          <source>pure @safe this(T...)(T uuidData)</source>
          <target state="translated">чисто @безопасно это(T...)(T uuidData)</target>
        </trans-unit>
        <trans-unit id="d8fcbfed08b4b9e1c7814bf4a1cf3ba5bcd14615" translate="yes" xml:space="preserve">
          <source>pure @safe this(const(Tag) tag_);</source>
          <target state="translated">чисто @safe this(const(Tag)tag_);</target>
        </trans-unit>
        <trans-unit id="2df7a69115d667e5d5534d2798c16299ad67f115" translate="yes" xml:space="preserve">
          <source>pure @safe this(in Char[] fmt);</source>
          <target state="translated">чисто @безопасно это(в Char[]fmt);</target>
        </trans-unit>
        <trans-unit id="e743d39df742b8773673aef5987ee72662578991" translate="yes" xml:space="preserve">
          <source>pure @safe this(int hour, int minute, int second = 0);</source>
          <target state="translated">чисто @безопасно это(int hour,int minute,int second=0);</target>
        </trans-unit>
        <trans-unit id="cc20f1ad39157aa0f063579ba8105c8f1ccfb65c" translate="yes" xml:space="preserve">
          <source>pure @safe this(int year, int month, int day);</source>
          <target state="translated">чистый @безопасный this(int year,int month,int day);</target>
        </trans-unit>
        <trans-unit id="e04b5cf4727ff1586cc581d460986c0ef801b539" translate="yes" xml:space="preserve">
          <source>pure @safe this(int year, int month, int day, int hour = 0, int minute = 0, int second = 0);</source>
          <target state="translated">чистый @безопасный this(int год,int месяц,int день,int час=0,int минута=0,int секунда=0);</target>
        </trans-unit>
        <trans-unit id="c1c7c982b0f997c2687d50990e22843e72324817" translate="yes" xml:space="preserve">
          <source>pure @safe this(scope const(char)[] name, scope const(char)[] msg, string file = __FILE__, size_t line = __LINE__);</source>
          <target state="translated">чисто @безопасно this(scope const(char)[]name,scope const(char)[]msg,string file=__FILE__,size_t line=__LINE__);</target>
        </trans-unit>
        <trans-unit id="23b8cc95c785a0975b3d976ce9452e311fa2466e" translate="yes" xml:space="preserve">
          <source>pure @safe this(string content);</source>
          <target state="translated">чисто @safe this(string content);</target>
        </trans-unit>
        <trans-unit id="558d3240811810fc0768c925e88dc1ee50213756" translate="yes" xml:space="preserve">
          <source>pure @safe this(string name, TagType type = TagType.START);</source>
          <target state="translated">чисто @safe this(имя строки,TagType type=TagType.START);</target>
        </trans-unit>
        <trans-unit id="60862277895d1eff577d6ec6389c66766b4926a1" translate="yes" xml:space="preserve">
          <source>pure @safe this(string name, string interior = null);</source>
          <target state="translated">чисто @safe this(string name,string interior=null);</target>
        </trans-unit>
        <trans-unit id="5b27dd06101e9ae1dcce95bf5a70a1db644e484c" translate="yes" xml:space="preserve">
          <source>pure @safe ubyte[] &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(Range)(Range source)</source>
          <target state="translated">чистый @safe UBYTE [] &lt;strong id=&quot;decode&quot;&gt;декодирования&lt;/strong&gt; (диапазон) (источник Диапазон)</target>
        </trans-unit>
        <trans-unit id="45db4868631a9ee1248dd163c131d07d4f7dba17" translate="yes" xml:space="preserve">
          <source>pure @safe uint &lt;strong id=&quot;stride&quot;&gt;stride&lt;/strong&gt;(S)(auto ref S str)</source>
          <target state="translated">чистый @safe UINT &lt;strong id=&quot;stride&quot;&gt;шаг&lt;/strong&gt; (S) (авто исх ул S)</target>
        </trans-unit>
        <trans-unit id="fde4de1ddb4988bd7ca3e95a40a1e482e581d654" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;check&quot;&gt;check&lt;/strong&gt;(string s);</source>
          <target state="translated">чистый @safe недействительного &lt;strong id=&quot;check&quot;&gt;чек&lt;/strong&gt; (строка с);</target>
        </trans-unit>
        <trans-unit id="bb77ddbee37abc6d82ae1bb189ace2d05874ec15" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(ref char[] str, dchar c);</source>
          <target state="translated">чистый @safe void &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt; (UseReplacementDchar useReplacementDchar = No.useReplacementDchar) (ref char [] str, dchar c);</target>
        </trans-unit>
        <trans-unit id="421409892fed2f922b19f032b2f2b11330ba5f27" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(ref dchar[] str, dchar c);</source>
          <target state="translated">чисто @safe void &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt; (UseReplacementDchar useReplacementDchar = No.useReplacementDchar) (ref dchar [] str, dchar c);</target>
        </trans-unit>
        <trans-unit id="318addc349037d508065a01356f333581887fdec" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(UseReplacementDchar useReplacementDchar = No.useReplacementDchar)(ref wchar[] str, dchar c);</source>
          <target state="translated">чистый @safe void &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt; (UseReplacementDchar useReplacementDchar = No.useReplacementDchar) (ref wchar [] str, dchar c);</target>
        </trans-unit>
        <trans-unit id="1b87c426a2b4a1e37fe10d92a05e4a5093a178e1" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;enforceValid&quot;&gt;enforceValid&lt;/strong&gt;(string units)(int value, string file = __FILE__, size_t line = __LINE__)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;enforceValid&quot;&gt;emporceValid&lt;/strong&gt; (строковые единицы) (значение int, строковый файл = __FILE__, size_t line = __LINE__)</target>
        </trans-unit>
        <trans-unit id="1d7ba5dcaac610b8054d51648626b3529c25b700" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;enforceValid&quot;&gt;enforceValid&lt;/strong&gt;(string units)(int year, Month month, int day, string file = __FILE__, size_t line = __LINE__)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;enforceValid&quot;&gt;inspeceValid&lt;/strong&gt; (строковые единицы) (int-год, месяц-месяц, int-день, строковый файл = __FILE__, size_t line = __LINE__)</target>
        </trans-unit>
        <trans-unit id="ea764b8c5e9c55f2613d1226c8faeedf820ab9a1" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;onUnicodeError&quot;&gt;onUnicodeError&lt;/strong&gt;(string msg, size_t idx, string file = __FILE__, size_t line = __LINE__);</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;onUnicodeError&quot;&gt;onUnicodeError&lt;/strong&gt; (строка msg, size_t idx, строковый файл = __FILE__, size_t line = __LINE__);</target>
        </trans-unit>
        <trans-unit id="9a7d54a7aac0eed82c66665507dff4b2c49f6de7" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op)(CData item)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (строка op) (элемент CData)</target>
        </trans-unit>
        <trans-unit id="6be542827f914957b466c2a30b798d32e5aa8218" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op)(Comment item)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (строка op) (Элемент комментария)</target>
        </trans-unit>
        <trans-unit id="e5a19dec650bf9172f122e09072f389da386fe49" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op)(Element item)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (string op) (Элемент элемента)</target>
        </trans-unit>
        <trans-unit id="d1cffba7f80603682fb2a4d7679bac713650c3f5" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op)(ProcessingInstruction item)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (строка op) (элемент ProcessingInstruction)</target>
        </trans-unit>
        <trans-unit id="70d9ebdf1b7dccf1c27d399ebb319d7f9f2665aa" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op)(Text item)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (строка op) (Текстовый элемент)</target>
        </trans-unit>
        <trans-unit id="327816439881b43cb7dbe24f6cdbd9aaaeb5f1a2" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt;(string op, T)(T value)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;opOpAssign&quot;&gt;opOpAssign&lt;/strong&gt; (строка op, T) (значение T)</target>
        </trans-unit>
        <trans-unit id="2d7db7a669877309a5ed942629dd169e51c4da7d" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;popBack&quot;&gt;popBack&lt;/strong&gt;(T)(ref scope inout(T)[] a)</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;popBack&quot;&gt;popBack&lt;/strong&gt; (T) (ссылка на область действия (T) [] a)</target>
        </trans-unit>
        <trans-unit id="386b785092452e48e699f7d59cf384114eb9af09" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;setMaxMailboxSize&quot;&gt;setMaxMailboxSize&lt;/strong&gt;(Tid tid, size_t messages, OnCrowding doThis);</source>
          <target state="translated">pure @safe void &lt;strong id=&quot;setMaxMailboxSize&quot;&gt;setMaxMailboxSize&lt;/strong&gt; (Tid tid, size_t messages, OnCrowding doThis);</target>
        </trans-unit>
        <trans-unit id="899cc81ac068c7e3c3e23b49c51179d10bbfe006" translate="yes" xml:space="preserve">
          <source>pure @safe void &lt;strong id=&quot;validate&quot;&gt;validate&lt;/strong&gt;(S)(in S str)</source>
          <target state="translated">чистый @safe void &lt;strong id=&quot;validate&quot;&gt;validate&lt;/strong&gt; (S) (в S str)</target>
        </trans-unit>
        <trans-unit id="aeaa8cb00dc2745529595eb0c1c57bf44b608db6" translate="yes" xml:space="preserve">
          <source>pure @safe void[] &lt;strong id=&quot;build&quot;&gt;build&lt;/strong&gt;();</source>
          <target state="translated">pure @safe void [] &lt;strong id=&quot;build&quot;&gt;build&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cff512f07cb225a466c5128062faf2a219e97e7a" translate="yes" xml:space="preserve">
          <source>pure @system void &lt;strong id=&quot;moveEmplace&quot;&gt;moveEmplace&lt;/strong&gt;(T)(ref T source, ref T target);</source>
          <target state="translated">pure @system void &lt;strong id=&quot;moveEmplace&quot;&gt;moveEmplace&lt;/strong&gt; (T) (ссылка на источник T, ссылка T цель);</target>
        </trans-unit>
        <trans-unit id="b2914facdafebc6af5bbf882895ba60fb284e207" translate="yes" xml:space="preserve">
          <source>pure @trusted S &lt;strong id=&quot;capitalize&quot;&gt;capitalize&lt;/strong&gt;(S)(S input)</source>
          <target state="translated">чистый @ Trusted S с большой &lt;strong id=&quot;capitalize&quot;&gt;буквы&lt;/strong&gt; (S) (S вход)</target>
        </trans-unit>
        <trans-unit id="4cd334c52463d1bee4a99cb4be04bb8a65b50d23" translate="yes" xml:space="preserve">
          <source>pure @trusted auto &lt;strong id=&quot;_d_HookTraceImpl&quot;&gt;_d_HookTraceImpl&lt;/strong&gt;(T, alias Hook, string errorMessage)(string file, int line, string funcname, Parameters!Hook parameters);</source>
          <target state="translated">pure @trusted auto &lt;strong id=&quot;_d_HookTraceImpl&quot;&gt;_d_HookTraceImpl&lt;/strong&gt; (T, псевдоним Hook, строка errorMessage) (строковый файл, int line, string funcname, Parameters! Hook parameters);</target>
        </trans-unit>
        <trans-unit id="422ad4619848e9aade3c1257c4f06528852701a2" translate="yes" xml:space="preserve">
          <source>pure @trusted char[] &lt;strong id=&quot;encode&quot;&gt;encode&lt;/strong&gt;(R1, R2)(in R1 source, R2 buffer)</source>
          <target state="translated">чистый @trusted символ [] &lt;strong id=&quot;encode&quot;&gt;кодируют&lt;/strong&gt; (R1, R2) (в источнике R1, R2 , буфер)</target>
        </trans-unit>
        <trans-unit id="6a5d95e0a1c3d68907590aa9fd8328b5b4789b2b" translate="yes" xml:space="preserve">
          <source>pure @trusted dchar &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(UseReplacementDchar useReplacementDchar = No.useReplacementDchar, S)(auto ref S str, ref size_t index)</source>
          <target state="translated">чисто @trusted dchar &lt;strong id=&quot;decode&quot;&gt;декодирование&lt;/strong&gt; (UseReplacementDchar useReplacementDchar = No.useReplacementDchar, S) (автоматическая ссылка S str, ссылка size_t index)</target>
        </trans-unit>
        <trans-unit id="dfe5c53596268f87cf3af1bfba68c4ffefa63413" translate="yes" xml:space="preserve">
          <source>pure @trusted dchar &lt;strong id=&quot;decodeFront&quot;&gt;decodeFront&lt;/strong&gt;(UseReplacementDchar useReplacementDchar = No.useReplacementDchar, S)(ref S str, out size_t numCodeUnits)</source>
          <target state="translated">pure @trusted dchar &lt;strong id=&quot;decodeFront&quot;&gt;decodeFront&lt;/strong&gt; (UseReplacementDchar useReplacementDchar = No.useReplacementDchar, S) (ref S str, out size_t numCodeUnits)</target>
        </trans-unit>
        <trans-unit id="a6404ab6e137478fa33c29ac53578d7f9f8ecf70" translate="yes" xml:space="preserve">
          <source>pure @trusted ubyte[] &lt;strong id=&quot;decode&quot;&gt;decode&lt;/strong&gt;(R1, R2)(in R1 source, R2 buffer)</source>
          <target state="translated">чистый @trusted UBYTE [] &lt;strong id=&quot;decode&quot;&gt;декодирования&lt;/strong&gt; (R1, R2) (в источнике R1, R2 , буфер)</target>
        </trans-unit>
        <trans-unit id="89113bac2713c6603fa24469e3d5b58e5e11a0cc" translate="yes" xml:space="preserve">
          <source>pure @trusted void &lt;strong id=&quot;shrinkTo&quot;&gt;shrinkTo&lt;/strong&gt;(size_t newlength);</source>
          <target state="translated">pure @trusted void &lt;strong id=&quot;shrinkTo&quot;&gt;shrinkTo&lt;/strong&gt; (size_t newlength);</target>
        </trans-unit>
        <trans-unit id="b8783cd0291f79a11f52269a38601de793589055" translate="yes" xml:space="preserve">
          <source>pure @trusted void &lt;strong id=&quot;toLowerInPlace&quot;&gt;toLowerInPlace&lt;/strong&gt;(C)(ref C[] s)</source>
          <target state="translated">чисто @trusted void &lt;strong id=&quot;toLowerInPlace&quot;&gt;toLowerInPlace&lt;/strong&gt; (C) (ссылка C [] s)</target>
        </trans-unit>
        <trans-unit id="38195c142db81aa2ba8e69c46cddab6dfbeb63af" translate="yes" xml:space="preserve">
          <source>pure @trusted void &lt;strong id=&quot;toUpperInPlace&quot;&gt;toUpperInPlace&lt;/strong&gt;(C)(ref C[] s)</source>
          <target state="translated">чисто @trusted void &lt;strong id=&quot;toUpperInPlace&quot;&gt;toUpperInPlace&lt;/strong&gt; (C) (ссылка C [] s)</target>
        </trans-unit>
        <trans-unit id="0732bd42aca792a80426c0ecb7adb44743b4c6ad" translate="yes" xml:space="preserve">
          <source>pure @trusted void &lt;strong id=&quot;translate&quot;&gt;translate&lt;/strong&gt;(C = immutable(char), Buffer)(scope const(char)[] str, scope const(char)[] transTable, scope const(char)[] toRemove, Buffer buffer)</source>
          <target state="translated">чистый @trusted void &lt;strong id=&quot;translate&quot;&gt;translate&lt;/strong&gt; (C = неизменяемый (char), буфер) (scope const (char) [] str, scope const (char) [] transTable, область действия const (char) [] toRemove, буферный буфер)</target>
        </trans-unit>
        <trans-unit id="2929bbfcd330f4e47511356d42728146cdc14d2f" translate="yes" xml:space="preserve">
          <source>pure StorageClass &lt;strong id=&quot;mergeFuncAttrs&quot;&gt;mergeFuncAttrs&lt;/strong&gt;(StorageClass s1, const FuncDeclaration f);</source>
          <target state="translated">чистый &lt;strong id=&quot;mergeFuncAttrs&quot;&gt;StorageClass mergeFuncAttrs&lt;/strong&gt; ( &lt;strong id=&quot;mergeFuncAttrs&quot;&gt;StorageClass&lt;/strong&gt; s1, const FuncDeclaration f);</target>
        </trans-unit>
        <trans-unit id="c445fe4ef42e69950afebe2bea3e6a1125c35fff" translate="yes" xml:space="preserve">
          <source>pure T &lt;strong id=&quot;rol&quot;&gt;rol&lt;/strong&gt;(T)(const T value, const uint count)</source>
          <target state="translated">чистый T &lt;strong id=&quot;rol&quot;&gt;rol&lt;/strong&gt; (T) (постоянное значение T, постоянное число)</target>
        </trans-unit>
        <trans-unit id="8417949aa7ea7042fed0c261a2fa19c2acb24a8b" translate="yes" xml:space="preserve">
          <source>pure T &lt;strong id=&quot;rol&quot;&gt;rol&lt;/strong&gt;(uint count, T)(const T value)</source>
          <target state="translated">чистый T &lt;strong id=&quot;rol&quot;&gt;rol&lt;/strong&gt; (число uint, T) (постоянное значение T)</target>
        </trans-unit>
        <trans-unit id="362627afda7312efc64e58c1b4a4e2da76e9a863" translate="yes" xml:space="preserve">
          <source>pure T &lt;strong id=&quot;ror&quot;&gt;ror&lt;/strong&gt;(T)(const T value, const uint count)</source>
          <target state="translated">чистый T &lt;strong id=&quot;ror&quot;&gt;ror&lt;/strong&gt; (T) (постоянное значение T, постоянное число)</target>
        </trans-unit>
        <trans-unit id="ae9bb6d09d015700ccf3b389837fb906f4c00984" translate="yes" xml:space="preserve">
          <source>pure T &lt;strong id=&quot;ror&quot;&gt;ror&lt;/strong&gt;(uint count, T)(const T value)</source>
          <target state="translated">чистый T &lt;strong id=&quot;ror&quot;&gt;ror&lt;/strong&gt; (количество uint, T) (значение const T)</target>
        </trans-unit>
        <trans-unit id="ae4a24b07d934f96d059935d011c14652552c18a" translate="yes" xml:space="preserve">
          <source>pure auto &lt;strong id=&quot;assumeUTF&quot;&gt;assumeUTF&lt;/strong&gt;(T)(T[] arr)</source>
          <target state="translated">чисто автоматическое &lt;strong id=&quot;assumeUTF&quot;&gt;предположение UTF&lt;/strong&gt; (T) (T [] обр)</target>
        </trans-unit>
        <trans-unit id="9e2cb30fc19b8707d5a006a827a6f6579dbfcce9" translate="yes" xml:space="preserve">
          <source>pure auto &lt;strong id=&quot;detab&quot;&gt;detab&lt;/strong&gt;(Range)(auto ref Range s, size_t tabSize = 8)</source>
          <target state="translated">чисто автоматическое &lt;strong id=&quot;detab&quot;&gt;отсоединение&lt;/strong&gt; (Range) (авторефер Range s, size_t tabSize = 8)</target>
        </trans-unit>
        <trans-unit id="f88a4ef88c188db588d8cae4a529f18d70499d00" translate="yes" xml:space="preserve">
          <source>pure factory function</source>
          <target state="translated">чистая заводская функция</target>
        </trans-unit>
        <trans-unit id="1197859b365bbee2a82b384ab3332d8c4385efad" translate="yes" xml:space="preserve">
          <source>pure int &lt;strong id=&quot;findFieldIndexByName&quot;&gt;findFieldIndexByName&lt;/strong&gt;(const StructDeclaration sd, const VarDeclaration v);</source>
          <target state="translated">pure int &lt;strong id=&quot;findFieldIndexByName&quot;&gt;findFieldIndexByName&lt;/strong&gt; (const StructDeclaration sd, const VarDeclaration v);</target>
        </trans-unit>
        <trans-unit id="bf6a776b370b26c44ed00149769600adafcda321" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe ArchiveMember[string] &lt;strong id=&quot;directory&quot;&gt;directory&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @safe ArchiveMember [string] &lt;strong id=&quot;directory&quot;&gt;directory&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c56799494135ea0afa122dcc528e27c341f4c9d6" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe JSONValue[] &lt;strong id=&quot;array&quot;&gt;array&lt;/strong&gt;(JSONValue[] v);</source>
          <target state="translated">чистый nothrow @nogc @property @safe JSONValue [] &lt;strong id=&quot;array&quot;&gt;Массив&lt;/strong&gt; (JSONValue [] v);</target>
        </trans-unit>
        <trans-unit id="d8758c649ac6d5afc148504c913aef482977f851" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe JSONValue[string] &lt;strong id=&quot;object&quot;&gt;object&lt;/strong&gt;(JSONValue[string] v);</source>
          <target state="translated">чистый nothrow @nogc @property @safe JSONValue [строка] &lt;strong id=&quot;object&quot;&gt;объект&lt;/strong&gt; (JSONValue [строка] v);</target>
        </trans-unit>
        <trans-unit id="94033137bfacb20d7a64930c755e493424688772" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe bool &lt;strong id=&quot;boolean&quot;&gt;boolean&lt;/strong&gt;(bool v);</source>
          <target state="translated">чистый nothrow @nogc @property @safe bool &lt;strong id=&quot;boolean&quot;&gt;boolean&lt;/strong&gt; (bool v);</target>
        </trans-unit>
        <trans-unit id="7f3efcbb15cb717308b0d8f923fa37c4054e0568" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe double &lt;strong id=&quot;floating&quot;&gt;floating&lt;/strong&gt;(double v);</source>
          <target state="translated">чистый nothrow @nogc @property @safe double &lt;strong id=&quot;floating&quot;&gt;floating&lt;/strong&gt; (double v);</target>
        </trans-unit>
        <trans-unit id="db3f0f41c7ed4d8d0ce2f7bc1312a929a531b86b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe inout(T)[] &lt;strong id=&quot;save&quot;&gt;save&lt;/strong&gt;(T)(return scope inout(T)[] a);</source>
          <target state="translated">чистый nothrow @nogc @property @safe inout (T) [] &lt;strong id=&quot;save&quot;&gt;save&lt;/strong&gt; (T) (вернуть область действия inout (T) [] a);</target>
        </trans-unit>
        <trans-unit id="95ed1f13c0a4fc05c1cc9f702cd30eb9486dc336" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe long &lt;strong id=&quot;integer&quot;&gt;integer&lt;/strong&gt;(long v);</source>
          <target state="translated">чистый nothrow @nogc @property @safe длинное &lt;strong id=&quot;integer&quot;&gt;целое&lt;/strong&gt; (long v);</target>
        </trans-unit>
        <trans-unit id="b7b74f5dddb35d2845833695cfb769ff30af29d3" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe pid_t &lt;strong id=&quot;osHandle&quot;&gt;osHandle&lt;/strong&gt;();</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee66056170cec7132a352f475dbba2de7bd8472" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe string &lt;strong id=&quot;nativeShell&quot;&gt;nativeShell&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @safe string &lt;strong id=&quot;nativeShell&quot;&gt;nativeShell&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b780d2968ed4e88b4adff6c96cd639ae6119973a" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe string &lt;strong id=&quot;str&quot;&gt;str&lt;/strong&gt;(string v);</source>
          <target state="translated">чистый nothrow @nogc @property @safe строка &lt;strong id=&quot;str&quot;&gt;str&lt;/strong&gt; (строка v);</target>
        </trans-unit>
        <trans-unit id="eefa91ade57fa8f50c1d73f0f24e5a4f4df20a9d" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe ubyte[] &lt;strong id=&quot;compressedData&quot;&gt;compressedData&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @safe ubyte [] &lt;strong id=&quot;compressedData&quot;&gt;сжатых данных&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="17fa39f3d470875188278711b830e9580efbac73" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe ubyte[] &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @safe ubyte [] &lt;strong id=&quot;data&quot;&gt;data&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="91ffdd610f53055eb170189b00a46d4cb687b1e3" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe ubyte[] &lt;strong id=&quot;expandedData&quot;&gt;expandedData&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @safe UBYTE [] &lt;strong id=&quot;expandedData&quot;&gt;expandedData&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="82e0493c77836594ecfceb85d658411c02023988" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe uint &lt;strong id=&quot;index&quot;&gt;index&lt;/strong&gt;(uint value);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035dd61e056f7384c23456212cd4eb521b8e4a77" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe ulong &lt;strong id=&quot;uinteger&quot;&gt;uinteger&lt;/strong&gt;(ulong v);</source>
          <target state="translated">чистый nothrow @nogc @property @safe ulong &lt;strong id=&quot;uinteger&quot;&gt;uinteger&lt;/strong&gt; (ulong v);</target>
        </trans-unit>
        <trans-unit id="05bd0a62821ea56887610b232a8ce2b1a0d9862e" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;date&quot;&gt;date&lt;/strong&gt;(Date &lt;strong id=&quot;date&quot;&gt;date&lt;/strong&gt;);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;date&quot;&gt;date&lt;/strong&gt; (Дата &lt;strong id=&quot;date&quot;&gt;дата&lt;/strong&gt; );</target>
        </trans-unit>
        <trans-unit id="25bf1f1233a28c50a819f55b0f19094cd350755f" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;dayOfGregorianCal&quot;&gt;dayOfGregorianCal&lt;/strong&gt;(int day);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;dayOfGregorianCal&quot;&gt;dayOfGregorianCal&lt;/strong&gt; (int day);</target>
        </trans-unit>
        <trans-unit id="da22fd6276597ed25cba451be99ffad5c8a804f9" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;dayOfGregorianCal&quot;&gt;dayOfGregorianCal&lt;/strong&gt;(int days);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;dayOfGregorianCal&quot;&gt;dayOfGregorianCal&lt;/strong&gt; (int days);</target>
        </trans-unit>
        <trans-unit id="ddf116a665978b805737b4ed93515550dded3b53" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;isZip64&quot;&gt;isZip64&lt;/strong&gt;(bool value);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;isZip64&quot;&gt;isZip64&lt;/strong&gt; (значение bool);</target>
        </trans-unit>
        <trans-unit id="bdd439e51980ccbe001bd10966e46cc0e242d7d8" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;onCData&quot;&gt;onCData&lt;/strong&gt;(Handler handler);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;onCData&quot;&gt;onCData&lt;/strong&gt; (обработчик обработчика);</target>
        </trans-unit>
        <trans-unit id="6620353f945df526bde76456b66bac455c294264" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;onComment&quot;&gt;onComment&lt;/strong&gt;(Handler handler);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;onComment&quot;&gt;onComment&lt;/strong&gt; (обработчик обработчика);</target>
        </trans-unit>
        <trans-unit id="7487265a12925fa0c1556fcb153ad71dd6ea664f" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;onPI&quot;&gt;onPI&lt;/strong&gt;(Handler handler);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;onPI&quot;&gt;onPI&lt;/strong&gt; (обработчик обработчика);</target>
        </trans-unit>
        <trans-unit id="340e82ba3bf9e8c3df9eb0000ad40113fde07710" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;onText&quot;&gt;onText&lt;/strong&gt;(Handler handler);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;onText&quot;&gt;onText&lt;/strong&gt; (обработчик обработчика);</target>
        </trans-unit>
        <trans-unit id="a0239bbcec96d6b32bf07b24786988e5ff75e8ba" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;onXI&quot;&gt;onXI&lt;/strong&gt;(Handler handler);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;onXI&quot;&gt;onXI&lt;/strong&gt; (обработчик обработчика);</target>
        </trans-unit>
        <trans-unit id="66b2d9ea190a18a34dbe34446ffb80ead4416d4b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;time&quot;&gt;time&lt;/strong&gt;(DosFileTime &lt;strong id=&quot;time&quot;&gt;time&lt;/strong&gt;);</source>
          <target state="translated">чистое nothrow @nogc @property @safe void &lt;strong id=&quot;time&quot;&gt;time&lt;/strong&gt; ( &lt;strong id=&quot;time&quot;&gt;время&lt;/strong&gt; DosFileTime );</target>
        </trans-unit>
        <trans-unit id="f9ddfedd7f247d21c4f175a36820a8e417dc02c9" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @safe void &lt;strong id=&quot;timeOfDay&quot;&gt;timeOfDay&lt;/strong&gt;(TimeOfDay tod);</source>
          <target state="translated">чистый nothrow @nogc @property @safe void &lt;strong id=&quot;timeOfDay&quot;&gt;timeOfDay&lt;/strong&gt; (TimeOfDay tod);</target>
        </trans-unit>
        <trans-unit id="da513473010c387796a7731d08ff1854cc68791c" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted IeeeFlags &lt;strong id=&quot;ieeeFlags&quot;&gt;ieeeFlags&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted IeeeFlags &lt;strong id=&quot;ieeeFlags&quot;&gt;ieeeFlags&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="91f5a8db74176b0785c22a7896f4a1f99e897531" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;aes&quot;&gt;aes&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ trusted bool &lt;strong id=&quot;aes&quot;&gt;aes&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="47ce7b7c8b3cec9036e966996ac1100ba1497367" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;amd3dnow&quot;&gt;amd3dnow&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;amd3dnow&quot;&gt;amd3dnow&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="28a38f0325c04359c2cd06de2b2eecac7c0cc8a4" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;amd3dnowExt&quot;&gt;amd3dnowExt&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;amd3dnowExt&quot;&gt;amd3dnowExt&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="454c7152122825c7c45507b22e38423c693c73ba" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;amdMmx&quot;&gt;amdMmx&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;amdMmx&quot;&gt;amdMmx&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="67f039a19b36f910522952157da56a4adc86508e" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;avx&quot;&gt;avx&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;avx&quot;&gt;avx&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="49d93ad560da22d78cf23f5bb8b5fa5b6560f97d" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;avx2&quot;&gt;avx2&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;avx2&quot;&gt;avx2&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d1b4884176f749aeee46f9a44b78e03a5879da87" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;fma&quot;&gt;fma&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="9d4eb7fc358b6c3f3255434e7cc8f61abde376b2" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;fp16c&quot;&gt;fp16c&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;fp16c&quot;&gt;fp16c&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="caff97d3f5426bdfec6d25cadb9eec7005f6e6bf" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;has3dnowPrefetch&quot;&gt;has3dnowPrefetch&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;has3dnowPrefetch&quot;&gt;has3dnowPrefetch&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f43cdbb812a1135a600f5368e2248291040b47e9" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasCmov&quot;&gt;hasCmov&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ доверенный bool &lt;strong id=&quot;hasCmov&quot;&gt;hasCmov&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="7eb51ce41c42ff2563916240bcd72b638b396ecc" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasCmpxchg16b&quot;&gt;hasCmpxchg16b&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasCmpxchg16b&quot;&gt;hasCmpxchg16b&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="4e6ccccde327cd4459842fae2d2f8997ed2daefe" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasCmpxchg8b&quot;&gt;hasCmpxchg8b&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasCmpxchg8b&quot;&gt;hasCmpxchg8b&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a9af05e16c71d7910728d09804d8060e8ec0d648" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasFxsr&quot;&gt;hasFxsr&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ доверенный bool &lt;strong id=&quot;hasFxsr&quot;&gt;hasFxsr&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="bd333e83e9701dc2256434bea519c5252fe6b79b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasLahfSahf&quot;&gt;hasLahfSahf&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ доверенный bool &lt;strong id=&quot;hasLahfSahf&quot;&gt;hasLahfSahf&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b9e68a2f5765e5630e8b6de4d700b64d9ebededf" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasLzcnt&quot;&gt;hasLzcnt&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasLzcnt&quot;&gt;hasLzcnt&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cdd7768afe936a2d67ceee6c6cae18aa9ca6db2b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasPclmulqdq&quot;&gt;hasPclmulqdq&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ доверенный bool &lt;strong id=&quot;hasPclmulqdq&quot;&gt;hasPclmulqdq&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="95453e453d1ecba145bd1b25147433d845fcc4b1" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasPopcnt&quot;&gt;hasPopcnt&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasPopcnt&quot;&gt;hasPopcnt&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="28dcb4d2bc9b176d2a34e4baeb4d99e0c8e66267" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasRdrand&quot;&gt;hasRdrand&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ доверенный bool &lt;strong id=&quot;hasRdrand&quot;&gt;hasRdrand&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="2584b35a2886148c2a653953dc360c4405760c7e" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasRdseed&quot;&gt;hasRdseed&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasRdseed&quot;&gt;hasRdseed&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6a90d498e4b5559b9650d3fcbd93ee0451f04bbf" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasRdtsc&quot;&gt;hasRdtsc&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasRdtsc&quot;&gt;hasRdtsc&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f4cec0c0050611214e4f21f33f514c6810275a79" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasSha&quot;&gt;hasSha&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ доверенный bool &lt;strong id=&quot;hasSha&quot;&gt;hasSha&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="1d2dc4e3d3b496d7e1a22305f434fc678ce5e4f5" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasSysEnterSysExit&quot;&gt;hasSysEnterSysExit&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasSysEnterSysExit&quot;&gt;hasSysEnterSysExit&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a9c4dbcd73f9f81ae2798911f028893cc99d5221" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasVpclmulqdq&quot;&gt;hasVpclmulqdq&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hasVpclmulqdq&quot;&gt;hasVpclmulqdq&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d823d77571386b4d1a33e7ab03c5bbd8db26c5f5" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hle&quot;&gt;hle&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted BOOL &lt;strong id=&quot;hle&quot;&gt;HLE&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="d3dce71b97c52a4727bea0eb68ed4598b40ddeb0" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;hyperThreading&quot;&gt;hyperThreading&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;hyperThreading&quot;&gt;hyperThreading&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cb751747632212ef83816e03ec133abd2a2f2797" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;isItanium&quot;&gt;isItanium&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ доверенный бул &lt;strong id=&quot;isItanium&quot;&gt;isItanium&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="5dba54153079c55ccf87bffbd53d209108ab59c1" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;isX86_64&quot;&gt;isX86_64&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;isX86_64&quot;&gt;isX86_64&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f4ca460e5d84433d4887dbf67d5bb7e4b70fc350" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;mmx&quot;&gt;mmx&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;mmx&quot;&gt;mmx&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8675da1d30276561ce0a3e7b44de3198fba2cd91" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;preferAthlon&quot;&gt;preferAthlon&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ доверенный бул предпочитает &lt;strong id=&quot;preferAthlon&quot;&gt;Athlon&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="6ea8ed9eb4acea2bafbe2688b677f7ab9e8255c4" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;preferPentium1&quot;&gt;preferPentium1&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;preferPentium1&quot;&gt;предпочитатьPentium1&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="725ca951e29410da6559255b66ed53fd8383f849" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;preferPentium4&quot;&gt;preferPentium4&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;preferPentium4&quot;&gt;предпочитатьPentium4&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="e7a8ffe8b8707ae8809a55fa55694b3497d8bdbd" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;rtm&quot;&gt;rtm&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;rtm&quot;&gt;rtm&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="f64f33063bc3e2e3ec68809b5c2b4d3e92dd28a9" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse&quot;&gt;sse&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse&quot;&gt;sse&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="c8820ab89c29833e01ad3dcd0530159f75b2049b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse2&quot;&gt;sse2&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse2&quot;&gt;sse2&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="514620cd18ee3404e5fb4ee671e34c049a5efd55" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse3&quot;&gt;sse3&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse3&quot;&gt;sse3&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="a1897d727c24704d2a36bc82c15dbe956416828f" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse41&quot;&gt;sse41&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse41&quot;&gt;sse41&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="0ba8ebcfa5929445dbfbb469e9853412200d401d" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse42&quot;&gt;sse42&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse42&quot;&gt;sse42&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="7259b837fe1ea3bb40bee61fdb464f7910718851" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse4a&quot;&gt;sse4a&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;sse4a&quot;&gt;sse4a&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ffb3cb1afe9b3d0a148565415ab55b78f1e8ec2f" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;ssse3&quot;&gt;ssse3&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;ssse3&quot;&gt;ssse3&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b4893dd4ca021ca968935b70b3db13b573e2d0f8" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;vaes&quot;&gt;vaes&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ trusted bool &lt;strong id=&quot;vaes&quot;&gt;vaes&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="da0cf333dad1a402bd5370dc56ef78e5645f772d" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted bool &lt;strong id=&quot;x87onChip&quot;&gt;x87onChip&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted bool &lt;strong id=&quot;x87onChip&quot;&gt;x87onChip&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="05625284e4d10747686656fa391eb32e16d6127b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted const(CacheInfo)[5] &lt;strong id=&quot;dataCaches&quot;&gt;dataCaches&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted const (CacheInfo) [5] &lt;strong id=&quot;dataCaches&quot;&gt;dataCaches&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="8bd5f16ac9e367973daf36d20b356ce0fe7042f8" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted string &lt;strong id=&quot;processor&quot;&gt;processor&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ &lt;strong id=&quot;processor&quot;&gt;процессор&lt;/strong&gt; доверенных строк ();</target>
        </trans-unit>
        <trans-unit id="a72f19b1d39a4477a5747ba973b8c7a815d4706b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted string &lt;strong id=&quot;vendor&quot;&gt;vendor&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ &lt;strong id=&quot;vendor&quot;&gt;поставщик&lt;/strong&gt; доверенных строк ();</target>
        </trans-unit>
        <trans-unit id="97686ba68edecb2a1f87ce6d63327c94ae263ade" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted uint &lt;strong id=&quot;coresPerCPU&quot;&gt;coresPerCPU&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @trusted uint &lt;strong id=&quot;coresPerCPU&quot;&gt;coresPerCPU&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="7f58d8ad04fcd26921b8f6fdb1c5db417364b1b6" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property @trusted uint &lt;strong id=&quot;threadsPerCPU&quot;&gt;threadsPerCPU&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property @ trusted uint &lt;strong id=&quot;threadsPerCPU&quot;&gt;threadsPerCPU&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="11b3324919cc0f0357ab2eb9a2b52ca81169ed1f" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property BitArray &lt;strong id=&quot;reverse&quot;&gt;reverse&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property BitArray &lt;strong id=&quot;reverse&quot;&gt;reverse&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="15e8164502e267e95de7245c661a65783af64e73" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property BitArray &lt;strong id=&quot;sort&quot;&gt;sort&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @property BitArray &lt;strong id=&quot;sort&quot;&gt;sort&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="b048852a64204afaf8114be0d616697ca5cb9413" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property auto &lt;strong id=&quot;asRange&quot;&gt;asRange&lt;/strong&gt;(AA* aa);</source>
          <target state="translated">чистый nothrow @nogc @property auto &lt;strong id=&quot;asRange&quot;&gt;asRange&lt;/strong&gt; (AA * aa);</target>
        </trans-unit>
        <trans-unit id="a0a64e0e1027060807dc79f028b048293be17c8e" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property inout(T)[] &lt;strong id=&quot;peekSlice&quot;&gt;peekSlice&lt;/strong&gt;(T)(inout(Array!T)* array);</source>
          <target state="translated">чистый nothrow @nogc @property inout (T) [] &lt;strong id=&quot;peekSlice&quot;&gt;peekSlice&lt;/strong&gt; (T) (массив inout (Array! T) *);</target>
        </trans-unit>
        <trans-unit id="611bb601ffac3df51895bfc3a32d66a65d92eadd" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property ref @safe inout(T) &lt;strong id=&quot;back&quot;&gt;back&lt;/strong&gt;(T)(return scope inout(T)[] a)</source>
          <target state="translated">чистый nothrow @nogc @property ref @safe inout (T) &lt;strong id=&quot;back&quot;&gt;назад&lt;/strong&gt; (T) (вернуть область действия inout (T) [] a)</target>
        </trans-unit>
        <trans-unit id="4181b20cc10541389aba1cf3678134fe90a7706c" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property ref @safe inout(T) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt;(T)(return scope inout(T)[] a)</source>
          <target state="translated">чистый nothrow @nogc @property ref @ безопасный inout (T) &lt;strong id=&quot;front&quot;&gt;front&lt;/strong&gt; (T) (вернуть область действия inout (T) [] a)</target>
        </trans-unit>
        <trans-unit id="f198428368c2c9f2a7ab0b2392769ac8364798f9" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @property scope @safe void &lt;strong id=&quot;next&quot;&gt;next&lt;/strong&gt;(Throwable tail);</source>
          <target state="translated">чистая nothrow @nogc @property scope @safe void &lt;strong id=&quot;next&quot;&gt;next&lt;/strong&gt; (метательный хвост);</target>
        </trans-unit>
        <trans-unit id="f860151819850abeec9ce95c3e0c00a695184744" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Allocator &lt;strong id=&quot;parent&quot;&gt;parent&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @safe Allocator &lt;strong id=&quot;parent&quot;&gt;parent&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="cb8789356c34801006b56dec8c2e2a9ed8356dd6" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!(CommonType!(T, U)) &lt;strong id=&quot;fromPolar&quot;&gt;fromPolar&lt;/strong&gt;(T, U)(const T modulus, const U argument);</source>
          <target state="translated">чистый nothrow @nogc @safe Complex! (CommonType! (T, U)) &lt;strong id=&quot;fromPolar&quot;&gt;fromPolar&lt;/strong&gt; (T, U) (модуль const T, аргумент const U);</target>
        </trans-unit>
        <trans-unit id="74019d1d8a3a9245d96206edf2617b08ee58c785" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!T &lt;strong id=&quot;conj&quot;&gt;conj&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="translated">чистый nothrow @nogc @safe Complex! T &lt;strong id=&quot;conj&quot;&gt;con&lt;/strong&gt; (T) (Complex! T z);</target>
        </trans-unit>
        <trans-unit id="187f5b8d4d484477a9231d2c6535e981c1c6ab24" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!T &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="translated">чистый nothrow @nogc @safe Complex! T &lt;strong id=&quot;cos&quot;&gt;cos&lt;/strong&gt; (T) (Complex! T z);</target>
        </trans-unit>
        <trans-unit id="d5e9e7f0e7bc4030605a48d120ea6b1dce7a69a8" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!T &lt;strong id=&quot;log&quot;&gt;log&lt;/strong&gt;(T)(Complex!T x);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fdc604132b53de871b068dd676e9c2a8360236" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!T &lt;strong id=&quot;log10&quot;&gt;log10&lt;/strong&gt;(T)(Complex!T x);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5904014357e0ad53f2a9be4844545dd3003fa0" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!T &lt;strong id=&quot;pow&quot;&gt;pow&lt;/strong&gt;(T, Int)(Complex!T x, const Int n)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e203c0b1f51415b46ef909c118c7cf59c6c485f" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!T &lt;strong id=&quot;sin&quot;&gt;sin&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="translated">чистый nothrow @nogc @safe Complex! T &lt;strong id=&quot;sin&quot;&gt;sin&lt;/strong&gt; (T) (Complex! T z);</target>
        </trans-unit>
        <trans-unit id="c5d354d2f9169ebc95dea0ea131950cec2a4e8dc" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!T &lt;strong id=&quot;sqrt&quot;&gt;sqrt&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="translated">чистый nothrow @nogc @safe Complex! T &lt;strong id=&quot;sqrt&quot;&gt;sqrt&lt;/strong&gt; (T) (Complex! T z);</target>
        </trans-unit>
        <trans-unit id="ff996163adc4ff596c7f1ef9fedfa4ed1cdc2118" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!T &lt;strong id=&quot;tan&quot;&gt;tan&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5a9e2ed82f3e8b9c9475cdecc7ff55271b58c5" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Complex!real &lt;strong id=&quot;coshisinh&quot;&gt;coshisinh&lt;/strong&gt;(real y);</source>
          <target state="translated">чистый nothrow @nogc @safe Complex! real &lt;strong id=&quot;coshisinh&quot;&gt;coshisinh&lt;/strong&gt; (real y);</target>
        </trans-unit>
        <trans-unit id="e2c20fd07300394e07286fa3e4323f25e7027d7b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Duration &lt;strong id=&quot;abs&quot;&gt;abs&lt;/strong&gt;(Duration duration);</source>
          <target state="translated">pure nothrow @nogc @safe Duration &lt;strong id=&quot;abs&quot;&gt;abs&lt;/strong&gt; (Продолжительность продолжительности);</target>
        </trans-unit>
        <trans-unit id="7febea1faf417f6c522d53b7aca819d63abfeab0" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Duration &lt;strong id=&quot;dur&quot;&gt;dur&lt;/strong&gt;(string units)(long length)</source>
          <target state="translated">pure nothrow @nogc @safe Продолжительность &lt;strong id=&quot;dur&quot;&gt;dur&lt;/strong&gt; (строковые единицы) (длинная длина)</target>
        </trans-unit>
        <trans-unit id="53df06a785b5e6d352b547055889d5a333bd25e4" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe F &lt;strong id=&quot;fmax&quot;&gt;fmax&lt;/strong&gt;(F)(const F x, const F y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10ca63e269703b9ccbd803dad400ea574e46a83" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe F &lt;strong id=&quot;fmin&quot;&gt;fmin&lt;/strong&gt;(F)(const F x, const F y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31614d7da2dd084f322fc59cd0087bc6dc4fdda" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe F &lt;strong id=&quot;sgn&quot;&gt;sgn&lt;/strong&gt;(F)(F x)</source>
          <target state="translated">чистый nothrow @nogc @safe F &lt;strong id=&quot;sgn&quot;&gt;sgn&lt;/strong&gt; (F) (F x)</target>
        </trans-unit>
        <trans-unit id="132fe219c6a560d05d235068c6e3cd48a76931b3" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe MATCH &lt;strong id=&quot;MODmethodConv&quot;&gt;MODmethodConv&lt;/strong&gt;(MOD modfrom, MOD modto);</source>
          <target state="translated">чистый nothrow @nogc @safe MATCH &lt;strong id=&quot;MODmethodConv&quot;&gt;MODmethodConv&lt;/strong&gt; (MOD-мод MOD, MOD-мод MOD);</target>
        </trans-unit>
        <trans-unit id="d3949d04237fcad5013447d612725726b5f51a65" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe MOD &lt;strong id=&quot;MODmerge&quot;&gt;MODmerge&lt;/strong&gt;(MOD mod1, MOD mod2);</source>
          <target state="translated">чистый nothrow @nogc @safe MOD &lt;strong id=&quot;MODmerge&quot;&gt;MODmerge&lt;/strong&gt; (MOD мод1, MOD мод2);</target>
        </trans-unit>
        <trans-unit id="4af79c6b3ae02c99fe9e4587c931bb2f71f9d93c" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Prot &lt;strong id=&quot;prot&quot;&gt;prot&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @safe Prot &lt;strong id=&quot;prot&quot;&gt;prot&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ea75d98d1ca210e4df35a1f3963568b7aafdd89c" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe R &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @safe R &lt;strong id=&quot;finish&quot;&gt;finish&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="ff49c11943f89f92d90c4218fbc7cb3a42013ad3" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe SliceOverIndexed!Grapheme &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;() return;</source>
          <target state="translated">чистый nothrow @nogc @safe SliceOverIndexed! Grapheme &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt; () return;</target>
        </trans-unit>
        <trans-unit id="f12b607a966072a7950af2d6e37bb2b8dd24bc7b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe SliceOverIndexed!Grapheme &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt;(size_t a, size_t b) return;</source>
          <target state="translated">чистый nothrow @nogc @safe SliceOverIndexed! Grapheme &lt;strong id=&quot;opSlice&quot;&gt;opSlice&lt;/strong&gt; (size_t a, size_t b) return;</target>
        </trans-unit>
        <trans-unit id="cafc1d075709233f8ed1d33bb7afb1002ab1dad2" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe StorageClass &lt;strong id=&quot;ModToStc&quot;&gt;ModToStc&lt;/strong&gt;(uint mod);</source>
          <target state="translated">чистый nothrow @nogc @safe StorageClass &lt;strong id=&quot;ModToStc&quot;&gt;ModToStc&lt;/strong&gt; (мод uint);</target>
        </trans-unit>
        <trans-unit id="f170be06bf0d3419756a51be2bca2aa196b495cf" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;abs&quot;&gt;abs&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;abs&quot;&gt;abs&lt;/strong&gt; (T) (сложный! T z);</target>
        </trans-unit>
        <trans-unit id="b6d9c305575baf98971d624ac0b101fcf3fe7330" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;arg&quot;&gt;arg&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;arg&quot;&gt;arg&lt;/strong&gt; (T) (сложный! T z);</target>
        </trans-unit>
        <trans-unit id="35bb2dbc4817be566846de96f4ba1de6f3b70c58" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;bigEndianToNative&quot;&gt;bigEndianToNative&lt;/strong&gt;(T, size_t n)(ubyte[n] val)</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;bigEndianToNative&quot;&gt;bigEndianToNative&lt;/strong&gt; (T, size_t n) (ubyte [n] val)</target>
        </trans-unit>
        <trans-unit id="3373b13c36170313ce33f520544f1029848c16ec" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;littleEndianToNative&quot;&gt;littleEndianToNative&lt;/strong&gt;(T, size_t n)(ubyte[n] val)</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;littleEndianToNative&quot;&gt;littleEndianToNative&lt;/strong&gt; (T, size_t n) (ubyte [n] val)</target>
        </trans-unit>
        <trans-unit id="df0e2a093cff2000b5704d7c28211e933eed11d1" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;nextafter&quot;&gt;nextafter&lt;/strong&gt;(T)(const T x, const T y);</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;nextafter&quot;&gt;nextafter&lt;/strong&gt; (T) (const T x, const T y);</target>
        </trans-unit>
        <trans-unit id="98fc4bd5115c1ae07c604e80d927bdc65c057344" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;norm&quot;&gt;norm&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d11bfb437e0fdfec6ce2449c7e23cd5f71e18f" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;sqAbs&quot;&gt;sqAbs&lt;/strong&gt;(T)(Complex!T z);</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;sqAbs&quot;&gt;sqAbs&lt;/strong&gt; (T) (сложный! T z);</target>
        </trans-unit>
        <trans-unit id="8458964d79bb4feb0431f53922212f9b2aa18e43" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;sqAbs&quot;&gt;sqAbs&lt;/strong&gt;(T)(const T x)</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;sqAbs&quot;&gt;sqAbs&lt;/strong&gt; (T) (постоянная T x)</target>
        </trans-unit>
        <trans-unit id="4b6c649cbda0f39e7e227878214c86aa658b57ea" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;swapEndian&quot;&gt;swapEndian&lt;/strong&gt;(T)(const T val)</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;swapEndian&quot;&gt;swapEndian&lt;/strong&gt; (T) (постоянный T val)</target>
        </trans-unit>
        <trans-unit id="b8aed63dccb46b94257d5bc8f1e65eb73ccc9913" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T &lt;strong id=&quot;to&quot;&gt;to&lt;/strong&gt;(string units, T, D)(D td)</source>
          <target state="translated">чистый nothrow @nogc @safe T &lt;strong id=&quot;to&quot;&gt;to&lt;/strong&gt; (строковые единицы, T, D) (D td)</target>
        </trans-unit>
        <trans-unit id="2d886a03db511c2f03ac0531f0f30d266897c309" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe T[] &lt;strong id=&quot;reverse&quot;&gt;reverse&lt;/strong&gt;(T)(T[] a);</source>
          <target state="translated">чистый nothrow @nogc @safe T [] &lt;strong id=&quot;reverse&quot;&gt;реверс&lt;/strong&gt; (T) (T [] a);</target>
        </trans-unit>
        <trans-unit id="5bf58862fcbb45558742f01261383b01739c08fc" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe TailShared!T &lt;strong id=&quot;atomicLoad&quot;&gt;atomicLoad&lt;/strong&gt;(MemoryOrder ms = MemoryOrder.seq, T)(ref const shared T val);</source>
          <target state="translated">чистый nothrow @nogc @safe TailShared! T &lt;strong id=&quot;atomicLoad&quot;&gt;atomicLoad&lt;/strong&gt; (MemoryOrder ms = MemoryOrder.seq, T) (ref const shared T val);</target>
        </trans-unit>
        <trans-unit id="81a58b4aa065ecc80f66e19b635f44d4cacac9f2" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe TailShared!T &lt;strong id=&quot;atomicOp&quot;&gt;atomicOp&lt;/strong&gt;(string op, T, V1)(ref shared T val, V1 mod)</source>
          <target state="translated">чистый nothrow @nogc @safe TailShared! T &lt;strong id=&quot;atomicOp&quot;&gt;atomicOp&lt;/strong&gt; (строка op, T, V1) (ссылка общая T val, V1 mod)</target>
        </trans-unit>
        <trans-unit id="a655e31d5f30a11236c80662ad74f9ad5c94540f" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Ternary &lt;strong id=&quot;empty&quot;&gt;empty&lt;/strong&gt;();</source>
          <target state="translated">чистый nothrow @nogc @safe троичный &lt;strong id=&quot;empty&quot;&gt;пустой&lt;/strong&gt; ();</target>
        </trans-unit>
        <trans-unit id="badb42b1e3f31e8ca6f122fc0b2c4c7495f61d95" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Ternary &lt;strong id=&quot;owns&quot;&gt;owns&lt;/strong&gt;(const void[] b);</source>
          <target state="translated">чистый nothrow @nogc @safe, которым &lt;strong id=&quot;owns&quot;&gt;владеет&lt;/strong&gt; троичный (const void [] b);</target>
        </trans-unit>
        <trans-unit id="a412411f959351c88af53ec58377f930cfa2f167" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe TickDuration &lt;strong id=&quot;abs&quot;&gt;abs&lt;/strong&gt;(TickDuration duration);</source>
          <target state="translated">чистый nothrow @nogc @safe TickDuration &lt;strong id=&quot;abs&quot;&gt;abs&lt;/strong&gt; (длительность TickDuration);</target>
        </trans-unit>
        <trans-unit id="1ea0a87245abc5640162f50a346d7d3983641af7" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe TickDuration &lt;strong id=&quot;from&quot;&gt;from&lt;/strong&gt;(string units)(long length)</source>
          <target state="translated">pure nothrow @nogc @safe TickDuration &lt;strong id=&quot;from&quot;&gt;from&lt;/strong&gt; (строковые единицы) (длинная длина)</target>
        </trans-unit>
        <trans-unit id="a391751b9ba8bf65e6733409b7c3689bad8bf226" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe UUID &lt;strong id=&quot;md5UUID&quot;&gt;md5UUID&lt;/strong&gt;(const(char[]) name, const UUID namespace = UUID.init);</source>
          <target state="translated">чистый nothrow @nogc @safe UUID &lt;strong id=&quot;md5UUID&quot;&gt;md5UUID&lt;/strong&gt; (имя const (char []), пространство имен const UUID = UUID.init);</target>
        </trans-unit>
        <trans-unit id="2e3c8478b6f4ba4b18a21c760fdf478c0f542f18" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe UUID &lt;strong id=&quot;md5UUID&quot;&gt;md5UUID&lt;/strong&gt;(const(ubyte[]) data, const UUID namespace = UUID.init);</source>
          <target state="translated">чистый nothrow @nogc @safe UUID &lt;strong id=&quot;md5UUID&quot;&gt;md5UUID&lt;/strong&gt; (данные const (ubyte []), пространство имен const UUID = UUID.init);</target>
        </trans-unit>
        <trans-unit id="cc2d7203c05a3e8af5351317ce7f111103634c15" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe UUID &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(const UUID s);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6295a1f3a0e45f4e18338074225ee397bb64a89" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe UUID &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(in UUID s);</source>
          <target state="translated">чистый nothrow @nogc @safe UUID &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; (в UUID);</target>
        </trans-unit>
        <trans-unit id="fb22cac0f5233e79fc7c3d9d748b121ec566d706" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe UUID &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(ref UUID s);</source>
          <target state="translated">чистый nothrow @nogc @safe UUID &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt; (ref UUID s);</target>
        </trans-unit>
        <trans-unit id="33be2ad56a7387e9e8abecad68f17506c19bfa9b" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe UUID &lt;strong id=&quot;opAssign&quot;&gt;opAssign&lt;/strong&gt;(ref scope const UUID s);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40afadd157161456719113bd8925efd043b7c4d1" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe UUID &lt;strong id=&quot;sha1UUID&quot;&gt;sha1UUID&lt;/strong&gt;(scope const(char)[] name, scope const UUID namespace = UUID.init);</source>
          <target state="translated">pure nothrow @nogc @safe UUID &lt;strong id=&quot;sha1UUID&quot;&gt;sha1UUID&lt;/strong&gt; (имя области действия const (char) [], пространство имен области действия UUID = UUID.init);</target>
        </trans-unit>
        <trans-unit id="1f10ce07f51b77f32e16fe95e982611d91629df1" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe UUID &lt;strong id=&quot;sha1UUID&quot;&gt;sha1UUID&lt;/strong&gt;(scope const(ubyte)[] data, scope const UUID namespace = UUID.init);</source>
          <target state="translated">чистый nothrow @nogc @safe UUID &lt;strong id=&quot;sha1UUID&quot;&gt;sha1UUID&lt;/strong&gt; (данные области действия const (ubyte) [], пространство имен области действия UUID = UUID.init);</target>
        </trans-unit>
        <trans-unit id="0f0015b7d016b33bafb956517548e22ef0f80b67" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe Unqual!(CommonType!(T1, T2)) &lt;strong id=&quot;poly&quot;&gt;poly&lt;/strong&gt;(T1, T2, int N)(T1 x, ref const T2[N] A)</source>
          <target state="translated">чистый nothrow @nogc @safe Unqual! (CommonType! (T1, T2)) &lt;strong id=&quot;poly&quot;&gt;poly&lt;/strong&gt; (T1, T2, int N) (T1 x, ref const T2 [N] A)</target>
        </trans-unit>
        <trans-unit id="337bd2b7f3207bbbd1b1ee144b7aaadf1a810365" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe auto &lt;strong id=&quot;byKey&quot;&gt;byKey&lt;/strong&gt;(T : V[K], K, V)(T aa);</source>
          <target state="translated">чистый nothrow @nogc @safe auto &lt;strong id=&quot;byKey&quot;&gt;byKey&lt;/strong&gt; (T: V [K], K, V) (T aa);</target>
        </trans-unit>
        <trans-unit id="c3134edae035d1dc5fa63c624eec1d693c29a8d6" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe auto &lt;strong id=&quot;byKeyValue&quot;&gt;byKeyValue&lt;/strong&gt;(T : V[K], K, V)(T aa);</source>
          <target state="translated">чистый nothrow @nogc @safe auto &lt;strong id=&quot;byKeyValue&quot;&gt;byKeyValue&lt;/strong&gt; (T: V [K], K, V) (T aa);</target>
        </trans-unit>
        <trans-unit id="eae9d56236bd2b63eb47ecd542070aea3a7e90a4" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe auto &lt;strong id=&quot;byValue&quot;&gt;byValue&lt;/strong&gt;(T : V[K], K, V)(T aa);</source>
          <target state="translated">чистый nothrow @nogc @safe auto &lt;strong id=&quot;byValue&quot;&gt;byValue&lt;/strong&gt; (T: V [K], K, V) (T aa);</target>
        </trans-unit>
        <trans-unit id="2f40c6974f9bed6f2d525d1bc45ffa92d6dd790e" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe auto &lt;strong id=&quot;complex&quot;&gt;complex&lt;/strong&gt;(R)(const R re)</source>
          <target state="translated">чистый nothrow @nogc @safe автоматического &lt;strong id=&quot;complex&quot;&gt;комплекса&lt;/strong&gt; (R) (R Const вос)</target>
        </trans-unit>
        <trans-unit id="5f51b0633681282f43ee189d629c8005a837ae74" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe auto &lt;strong id=&quot;complex&quot;&gt;complex&lt;/strong&gt;(R, I)(const R re, const I im)</source>
          <target state="translated">чистый nothrow @nogc @safe автоматического &lt;strong id=&quot;complex&quot;&gt;комплекса&lt;/strong&gt; (R, I) (сопзЬ R ре, сопзЬ я им)</target>
        </trans-unit>
        <trans-unit id="654d5281de9d5d82d83aed19c002d542c75461a0" translate="yes" xml:space="preserve">
          <source>pure nothrow @nogc @safe auto &lt;strong id=&quot;nativeToBigEndian&quot;&gt;nativeToBigEndian&lt;/strong&gt;(T)(const T val)</source>
          <target state="translated">чистый nothrow @nogc @safe auto &lt;strong id=&quot;nativeToBigEndian&quot;&gt;nativeToBigEndian&lt;/strong&gt; (T) (const T val)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
