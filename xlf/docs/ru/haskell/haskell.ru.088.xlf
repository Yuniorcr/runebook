<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="27f2f23bcde10c66a5f5e9d8aafa47b4840854e9" translate="yes" xml:space="preserve">
          <source>Which will produce the following compile-time error,</source>
          <target state="translated">Что приведет к следующей ошибке во время компиляции,</target>
        </trans-unit>
        <trans-unit id="7c1db43b33397020a8ed5957fa5d9d38875398ba" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; will force evaluation of all the list elements:</source>
          <target state="translated">В то время как &lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; принудительно оценивает все элементы списка:</target>
        </trans-unit>
        <trans-unit id="8c332ca7e19d20c8fa57c56fd1a11cc1b3adb5fc" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;&lt;a href=&quot;ghc-responsefile#v:unescapeArgs&quot;&gt;unescapeArgs&lt;/a&gt;&lt;/code&gt; allows using quoting (i.e., convenient escaping of many characters) by having matching sets of single- or double-quotes,&lt;code&gt;&lt;a href=&quot;ghc-responsefile#v:escapeArgs&quot;&gt;escapeArgs&lt;/a&gt;&lt;/code&gt; does not use the quoting mechasnism, and thus will always escape any whitespace, quotes, and backslashes.</source>
          <target state="translated">В то время как &lt;code&gt;&lt;a href=&quot;ghc-responsefile#v:unescapeArgs&quot;&gt;unescapeArgs&lt;/a&gt;&lt;/code&gt; позволяет использовать кавычки (т. &lt;code&gt;&lt;a href=&quot;ghc-responsefile#v:escapeArgs&quot;&gt;escapeArgs&lt;/a&gt;&lt;/code&gt; Удобное экранирование многих символов) с помощью соответствующих наборов одинарных или двойных кавычек, escapeArgs не использует механизм цитирования и, таким образом, всегда избегает любых пробелов, кавычек и обратной косой черты.</target>
        </trans-unit>
        <trans-unit id="81b625ad3235f180ec5913cc634ab52ecae12b67" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;INLINE&lt;/code&gt; says &amp;ldquo;please inline me&amp;rdquo;, the &lt;code&gt;INLINABLE&lt;/code&gt; says &amp;ldquo;feel free to inline me; use your discretion&amp;rdquo;. In other words the choice is left to GHC, which uses the same rules as for pragma-free functions. Unlike &lt;code&gt;INLINE&lt;/code&gt;, that decision is made at the &lt;em&gt;call site&lt;/em&gt;, and will therefore be affected by the inlining threshold, optimisation level etc.</source>
          <target state="translated">В то время как &lt;code&gt;INLINE&lt;/code&gt; говорит &amp;laquo;пожалуйста, &lt;code&gt;INLINABLE&lt;/code&gt; меня&amp;raquo;, INLINABLE говорит: &amp;laquo;Не стесняйтесь вставлять меня; используйте свое усмотрение &amp;raquo;. Другими словами, выбор остается за GHC, который использует те же правила, что и для функций без прагм. В отличие от &lt;code&gt;INLINE&lt;/code&gt; , это решение принимается на сайте &lt;em&gt;вызова&lt;/em&gt; и, следовательно, будет зависеть от порога встраивания, уровня оптимизации и т. Д.</target>
        </trans-unit>
        <trans-unit id="c6ee9afc23b83e42b01663a5ce2d75b90b1d7053" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;a + b&lt;/code&gt; is parsed as &lt;code&gt;(+) a b&lt;/code&gt; and becomes a binding position for the &lt;code&gt;(+)&lt;/code&gt; type operator, &lt;code&gt;a * b&lt;/code&gt; is parsed as &lt;code&gt;a (*) b&lt;/code&gt; and is rejected.</source>
          <target state="translated">В то время как &lt;code&gt;a + b&lt;/code&gt; анализируется как &lt;code&gt;(+) a b&lt;/code&gt; и становится положением привязки для оператора типа &lt;code&gt;(+)&lt;/code&gt; , &lt;code&gt;a * b&lt;/code&gt; разбирается как &lt;code&gt;a (*) b&lt;/code&gt; и отклоняется.</target>
        </trans-unit>
        <trans-unit id="dca826ec4b4920b6625508b06645e0892b105a31" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;n&lt;/code&gt; uses &lt;code&gt;k&lt;/code&gt; without introducing it and thus violates the rule, it is currently accepted. This is because &lt;code&gt;k&lt;/code&gt; in &lt;code&gt;n&lt;/code&gt; is considered a kind variable, as it occurs in a kind signature. In reality, the line between type variables and kind variables is blurry, as the following example demonstrates:</source>
          <target state="translated">Хотя &lt;code&gt;n&lt;/code&gt; использует &lt;code&gt;k&lt;/code&gt; без его введения и, таким образом, нарушает правило, в настоящее время это принято. Это потому, что &lt;code&gt;k&lt;/code&gt; в &lt;code&gt;n&lt;/code&gt; считается переменной типа, как это происходит в сигнатуре вида. На самом деле грань между переменными типа и переменными типа размыта, как показывает следующий пример:</target>
        </trans-unit>
        <trans-unit id="89d044abb31d0358bb574168c9340e2f2b315fbc" translate="yes" xml:space="preserve">
          <source>While GHC is keen to inline the function, it does not do so blindly. For example, if you write</source>
          <target state="translated">Несмотря на то,что GHC очень хочет встроить функцию,он не делает этого вслепую.Например,если вы пишете</target>
        </trans-unit>
        <trans-unit id="3add16df5fe36ab800dc2ff2e76070f38ee83e1d" translate="yes" xml:space="preserve">
          <source>While Safe Haskell is an extension, it actually runs in the background for every compilation with GHC. It does this to track the type violations of modules to infer their safety, even when they aren&amp;rsquo;t explicitly using Safe Haskell. Please refer to section &lt;a href=&quot;#safe-inference&quot;&gt;Safe Haskell Inference&lt;/a&gt; for more details of this.</source>
          <target state="translated">Хотя Safe Haskell является расширением, на самом деле он работает в фоновом режиме при каждой компиляции с GHC. Это делается для того, чтобы отслеживать нарушения типов модулей и делать выводы об их безопасности, даже если они явно не используют Safe Haskell. Пожалуйста, обратитесь к разделу &lt;a href=&quot;#safe-inference&quot;&gt;Safe Haskell Inference&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="35b0013a13db3b6fdc98ef77d44fddaaca3cc7cb" translate="yes" xml:space="preserve">
          <source>While a primary use case of Safe Haskell is running untrusted code, Safe Haskell doesn&amp;rsquo;t provide this directly. Instead, Safe Haskell provides strict type safety. Without Safe Haskell, GHC allows many exceptions to the type system which can subvert any abstractions. By providing strict type safety, Safe Haskell enables developers to build their own library level sandbox mechanisms to run untrusted code.</source>
          <target state="translated">В то время как основной вариант использования Safe Haskell - это запуск ненадежного кода, Safe Haskell не предоставляет этого напрямую. Вместо этого Safe Haskell обеспечивает строгую безопасность типов. Без Safe Haskell GHC допускает множество исключений из системы типов, которые могут разрушить любые абстракции. Обеспечивая строгую безопасность типов, Safe Haskell позволяет разработчикам создавать собственные механизмы песочницы на уровне библиотеки для запуска ненадежного кода.</target>
        </trans-unit>
        <trans-unit id="def095ee0284bcac4322f43e6852c970ad41b290" translate="yes" xml:space="preserve">
          <source>While a standalone kind signature determines the kind of a type constructor, it does not determine its arity. This is of particular importance for type families and type synonyms, as they cannot be partially applied. See &lt;a href=&quot;#type-family-declarations&quot;&gt;Type family declarations&lt;/a&gt; for more information about arity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc21bcd88342a5bb609c83c4f4a251417917aeff" translate="yes" xml:space="preserve">
          <source>While developing, sometimes it is desirable to allow compilation to succeed even if there are type errors in the code. Consider the following case:</source>
          <target state="translated">В процессе разработки иногда желательно,чтобы компиляция была успешной,даже если в коде присутствуют типовые ошибки.Рассмотрим следующий случай:</target>
        </trans-unit>
        <trans-unit id="91465cfe2041d24f0183967b4edb1cd4e56225f7" translate="yes" xml:space="preserve">
          <source>While modules loaded in GHCi with the &lt;a href=&quot;ghci#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; command may use &lt;a href=&quot;#extension-StaticPointers&quot;&gt;&lt;code&gt;StaticPointers&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;static&lt;/code&gt; expressions, statements entered on the REPL may not. This is a limitation of GHCi; see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/12356&quot;&gt;#12356&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d4576ffb50b0fa9daa17cbe0afb23508da41b7" translate="yes" xml:space="preserve">
          <source>While modules loaded in GHCi with the &lt;a href=&quot;ghci#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; command may use &lt;a href=&quot;#extension-StaticPointers&quot;&gt;&lt;code&gt;StaticPointers&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;static&lt;/code&gt; expressions, statements entered on the REPL may not. This is a limitation of GHCi; see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/12356&quot;&gt;Issue #12356&lt;/a&gt; for details.</source>
          <target state="translated">Хотя модули, загруженные в GHCi с помощью команды &lt;a href=&quot;ghci#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; ,&lt;/a&gt; могут использовать &lt;a href=&quot;#extension-StaticPointers&quot;&gt; &lt;code&gt;StaticPointers&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;static&lt;/code&gt; выражения, операторы, введенные в REPL, не могут. Это ограничение GHCi; подробности см. в &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/12356&quot;&gt;выпуске № 12356&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="97f98250e481ccf0975daf7dab8b3fe176183423" translate="yes" xml:space="preserve">
          <source>While running a program with profiling turned on, GHC maintains a cost-centre stack behind the scenes, and attributes any costs (memory allocation and time) to whatever the current cost-centre stack is at the time the cost is incurred.</source>
          <target state="translated">При запуске программы с включенным профилированием GHC поддерживает за кулисами стеки по центру затрат и приписывает любые затраты (выделение памяти и времени)какому бы то ни было текущему стеку по центру затрат на момент возникновения затрат.</target>
        </trans-unit>
        <trans-unit id="976e206b9026791ffd0e6fb58a4293cf7ea81bb6" translate="yes" xml:space="preserve">
          <source>While stopped at the breakpoint on line 2 that we set earlier, we started a new evaluation with &lt;code&gt;:step qsort [1,3]&lt;/code&gt;. This new evaluation stopped after one step (at the definition of &lt;code&gt;qsort&lt;/code&gt;). The prompt has changed, now prefixed with &lt;code&gt;...&lt;/code&gt;, to indicate that there are saved breakpoints beyond the current one. To see the stack of contexts, use &lt;a href=&quot;#ghci-cmd-:show%20context&quot;&gt;&lt;code&gt;:show context&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Остановившись на установленной ранее точке останова в строке 2, мы начали новую оценку с помощью &lt;code&gt;:step qsort [1,3]&lt;/code&gt; . Эта новая оценка остановилась после одного шага (при определении &lt;code&gt;qsort&lt;/code&gt; ). Приглашение изменилось, теперь оно имеет префикс &lt;code&gt;...&lt;/code&gt; , чтобы указать, что есть сохраненные точки останова помимо текущей. Чтобы увидеть стек контекстов, используйте &lt;a href=&quot;#ghci-cmd-:show%20context&quot;&gt; &lt;code&gt;:show context&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b98a4c50da2ca10fa0d38e9a101fe3f3e6126a79" translate="yes" xml:space="preserve">
          <source>While the following definitions are rejected:</source>
          <target state="translated">В то время как следующие определения отвергаются:</target>
        </trans-unit>
        <trans-unit id="b1966b6c5939a4035f3d998424b60e02fda159f6" translate="yes" xml:space="preserve">
          <source>While these are flags, they also correspond to Safe Haskell module types that a module can have. You can think of using these as declaring an explicit contract (or type) that a module must have. If it is invalid, then compilation will fail. GHC will also infer the correct type for Safe Haskell, please refer to section &lt;a href=&quot;#safe-inference&quot;&gt;Safe Haskell Inference&lt;/a&gt; for more details.</source>
          <target state="translated">Хотя это флаги, они также соответствуют типам модулей Safe Haskell, которые может иметь модуль. Вы можете думать об их использовании как об объявлении явного контракта (или типа), который должен иметь модуль. Если он недействителен, компиляция завершится неудачно. GHC также определит правильный тип для Safe Haskell, пожалуйста, обратитесь к разделу &lt;a href=&quot;#safe-inference&quot;&gt;Safe Haskell Inference&lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="022ab35cfa47002a4ebdaca07f6e366ba8988d90" translate="yes" xml:space="preserve">
          <source>While these examples look similar, none of them would successfully compile. This is because all occurrences of the last type parameter &lt;code&gt;a&lt;/code&gt; occur in &lt;em&gt;contravariant&lt;/em&gt; positions, not covariant ones.</source>
          <target state="translated">Хотя эти примеры похожи, ни один из них не может быть успешно скомпилирован. Это связано с тем, что все вхождения последнего параметра типа &lt;code&gt;a&lt;/code&gt; происходят в &lt;em&gt;контравариантных&lt;/em&gt; , а не ковариантных позициях.</target>
        </trans-unit>
        <trans-unit id="75a5eda6c195abd9046975cac318fe63ebb5499d" translate="yes" xml:space="preserve">
          <source>While these functions have a stable API and you may use these functions in applications, do carefully consider the documented pre-conditions; incorrect use can break referential transparency or worse.</source>
          <target state="translated">Несмотря на то,что эти функции имеют стабильное API и вы можете использовать их в приложениях,внимательно рассмотрите задокументированные предварительные условия;неправильное использование может нарушить прозрачность ссылок или еще хуже.</target>
        </trans-unit>
        <trans-unit id="b0aa0a8b0c40d44fe32076b2dde1270dea9d839c" translate="yes" xml:space="preserve">
          <source>While this is rather low level, it provides you with full flexibility in how the data is written out.</source>
          <target state="translated">Несмотря на то,что это довольно низкий уровень,он предоставляет вам полную гибкость в том,как данные будут выписываться.</target>
        </trans-unit>
        <trans-unit id="9187e41f7f9137050f5d28dffbf78dde7c993814" translate="yes" xml:space="preserve">
          <source>Whilst a normal pattern synonym can be used in two ways, there are then seven ways in which to use &lt;code&gt;Point&lt;/code&gt;. Precisely the ways in which a normal record constructor can be used.</source>
          <target state="translated">В то время как обычный синоним шаблона можно использовать двумя способами, есть семь способов использования &lt;code&gt;Point&lt;/code&gt; . Именно так, как можно использовать обычный конструктор записи.</target>
        </trans-unit>
        <trans-unit id="37619fc13053f82b7cb7da3d24ceb1598ab6d05c" translate="yes" xml:space="preserve">
          <source>White</source>
          <target state="translated">White</target>
        </trans-unit>
        <trans-unit id="83eb1c09c969cd3e57a811f38dd6447b18c3ead5" translate="yes" xml:space="preserve">
          <source>Why did I get a link error?</source>
          <target state="translated">Почему я получил ошибку в ссылке?</target>
        </trans-unit>
        <trans-unit id="440e86b8976c4e4796fbf85e0f090b3bc6b09cbc" translate="yes" xml:space="preserve">
          <source>Why do both &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; exist, and why does GHC opt to implement &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; in derived &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances instead of &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt;? The reason is that &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; is based on the &lt;code&gt;&lt;a href=&quot;ghc-read#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; type, and although &lt;code&gt;&lt;a href=&quot;ghc-read#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; is mentioned in the Haskell 2010 Report, it is not a very efficient parser data structure.</source>
          <target state="translated">Почему существуют и &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; , и почему GHC предпочитает реализовывать &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; в производных экземплярах &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; ? Причина в том, что &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; основан на типе &lt;code&gt;&lt;a href=&quot;ghc-read#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; , и хотя &lt;code&gt;&lt;a href=&quot;ghc-read#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; упоминается в отчете Haskell 2010, это не очень эффективная структура данных парсера.</target>
        </trans-unit>
        <trans-unit id="4b3d234dc0251109fb3ebae077fa379bf3b538ac" translate="yes" xml:space="preserve">
          <source>Why do both &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; exist, and why does GHC opt to implement &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; in derived &lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances instead of &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt;? The reason is that &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; is based on the &lt;code&gt;&lt;a href=&quot;prelude#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; type, and although &lt;code&gt;&lt;a href=&quot;prelude#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; is mentioned in the Haskell 2010 Report, it is not a very efficient parser data structure.</source>
          <target state="translated">Почему существуют и &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; , и почему GHC предпочитает реализовывать &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; в производных экземплярах &lt;code&gt;&lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; ? Причина в том, что &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; основан на типе &lt;code&gt;&lt;a href=&quot;prelude#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; , и хотя &lt;code&gt;&lt;a href=&quot;prelude#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; упоминается в отчете Haskell 2010, это не очень эффективная структура данных парсера.</target>
        </trans-unit>
        <trans-unit id="f3e75c0bb579876ee1ae6f6f75f665c7fa512d6b" translate="yes" xml:space="preserve">
          <source>Why do both &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; exist, and why does GHC opt to implement &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; in derived &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances instead of &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt;? The reason is that &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; is based on the &lt;code&gt;&lt;a href=&quot;text-read#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; type, and although &lt;code&gt;&lt;a href=&quot;text-read#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; is mentioned in the Haskell 2010 Report, it is not a very efficient parser data structure.</source>
          <target state="translated">Почему существуют и &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; , и почему GHC предпочитает реализовывать &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; в производных экземплярах &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; ? Причина в том, что &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; основан на типе &lt;code&gt;&lt;a href=&quot;text-read#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; , и хотя &lt;code&gt;&lt;a href=&quot;text-read#t:ReadS&quot;&gt;ReadS&lt;/a&gt;&lt;/code&gt; упоминается в отчете Haskell 2010, это не очень эффективная структура данных парсера.</target>
        </trans-unit>
        <trans-unit id="86af37585c6c693fdc0ebac6c3d4e275681346c9" translate="yes" xml:space="preserve">
          <source>Why do we need this? Because if a foreign library is called from a thread created using &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, it won't have access to any &lt;em&gt;thread-local state&lt;/em&gt; - state variables that have specific values for each OS thread (see POSIX's &lt;code&gt;pthread_key_create&lt;/code&gt; or Win32's &lt;code&gt;TlsAlloc&lt;/code&gt;). Therefore, some libraries (OpenGL, for example) will not work from a thread created using &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;. They work fine in threads created using &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOS&quot;&gt;forkOS&lt;/a&gt;&lt;/code&gt; or when called from &lt;code&gt;main&lt;/code&gt; or from a &lt;code&gt;foreign export&lt;/code&gt;.</source>
          <target state="translated">Зачем нам это нужно? Потому что , если внешняя библиотека вызывается из нити , созданной с использованием &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; , он не будет иметь доступ к любым &lt;em&gt;нит локального состояния&lt;/em&gt; - переменным состояний , которые имеют конкретные значения для каждого потока ОС (см POSIX в &lt;code&gt;pthread_key_create&lt;/code&gt; или Win32 в &lt;code&gt;TlsAlloc&lt;/code&gt; ). Поэтому некоторые библиотеки (например, OpenGL) не будут работать из потока, созданного с помощью &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; . Они отлично работают в потоках, созданных с помощью &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOS&quot;&gt;forkOS&lt;/a&gt;&lt;/code&gt; , или при вызове из &lt;code&gt;main&lt;/code&gt; или &lt;code&gt;foreign export&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bbbc60c133dcaa45a637190bca0c68db03dab6c1" translate="yes" xml:space="preserve">
          <source>Why might we want to do this? The main reason is that the RTS running the interpreted code can be a different flavour (profiling or dynamically-linked) from GHC itself. So for example:</source>
          <target state="translated">Зачем нам это делать? Основная причина заключается в том,что RTS,выполняющий интерпретируемый код,может иметь другой оттенок (профилирующий или динамически связанный),чем сам GHC.Так,например:</target>
        </trans-unit>
        <trans-unit id="47b6a914e21ff5813991e6da748b083baff53cd8" translate="yes" xml:space="preserve">
          <source>Why should we want to run compiled code? Well, compiled code is roughly 10x faster than interpreted code, but takes about 2x longer to produce (perhaps longer if optimisation is on). So it pays to compile the parts of a program that aren&amp;rsquo;t changing very often, and use the interpreter for the code being actively developed.</source>
          <target state="translated">Почему нам нужно запускать скомпилированный код? Что ж, скомпилированный код примерно в 10 раз быстрее, чем интерпретируемый, но для его создания требуется примерно в 2 раза больше времени (возможно, дольше, если включена оптимизация). Так что стоит компилировать те части программы, которые не очень часто меняются, и использовать интерпретатор для активно разрабатываемого кода.</target>
        </trans-unit>
        <trans-unit id="cc7d6ee8236b5733d37003f374fc603c874165c9" translate="yes" xml:space="preserve">
          <source>Width digits can also be used after any modifiers and before the specifier (here marked as &lt;code&gt;z&lt;/code&gt;), for example:</source>
          <target state="translated">Цифры ширины также могут использоваться после любых модификаторов и перед спецификатором (здесь обозначены как &lt;code&gt;z&lt;/code&gt; ), например:</target>
        </trans-unit>
        <trans-unit id="6cc81c4740a7ec55686ef91e0c779bca9974a1fc" translate="yes" xml:space="preserve">
          <source>WildCardT</source>
          <target state="translated">WildCardT</target>
        </trans-unit>
        <trans-unit id="9dd4ee310008cd2a0ddc0df60850b2b849a28904" translate="yes" xml:space="preserve">
          <source>WildP</source>
          <target state="translated">WildP</target>
        </trans-unit>
        <trans-unit id="0bad7324dc674391ab667a3facf3ae0df9dc30be" translate="yes" xml:space="preserve">
          <source>Wildcards occurring within the monotype (tau) part of the type signature are &lt;em&gt;type wildcards&lt;/em&gt; (&amp;ldquo;type&amp;rdquo; is often omitted as this is the default kind of wildcard). Type wildcards can be instantiated to any monotype like &lt;code&gt;Bool&lt;/code&gt; or &lt;code&gt;Maybe [Bool]&lt;/code&gt;, including functions and higher-kinded types like &lt;code&gt;(Int -&amp;gt; Bool)&lt;/code&gt; or &lt;code&gt;Maybe&lt;/code&gt;.</source>
          <target state="translated">Подстановочные знаки, встречающиеся в монотипной (тау) части сигнатуры типа, являются &lt;em&gt;подстановочными знаками типа&lt;/em&gt; (&amp;laquo;тип&amp;raquo; часто опускается, поскольку это &lt;em&gt;тип подстановочного знака&lt;/em&gt; по умолчанию). Подстановочные знаки типа могут быть созданы для любого монотипа, такого как &lt;code&gt;Bool&lt;/code&gt; или &lt;code&gt;Maybe [Bool]&lt;/code&gt; , включая функции и типы более высокого порядка, такие как &lt;code&gt;(Int -&amp;gt; Bool)&lt;/code&gt; или &lt;code&gt;Maybe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9658cea5793b3d031fa20c655bb68dd4c32b903a" translate="yes" xml:space="preserve">
          <source>Will emit no output, despite the fact that the ill-typed term appears after the well-typed &lt;code&gt;putStrLn &quot;Hi there.&quot;&lt;/code&gt;. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11197&quot;&gt;#11197&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef392380581e1168eebb15a8a0e18150691c4d57" translate="yes" xml:space="preserve">
          <source>Will emit no output, despite the fact that the ill-typed term appears after the well-typed &lt;code&gt;putStrLn &quot;Hi there.&quot;&lt;/code&gt;. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11197&quot;&gt;Issue #11197&lt;/a&gt;.</source>
          <target state="translated">Не будет выдавать никаких выходных данных, несмотря на то, что некорректно набранный термин появляется после правильно напечатанного &lt;code&gt;putStrLn &quot;Hi there.&quot;&lt;/code&gt; , См. &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11197&quot;&gt;Выпуск № 11197&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a1662f103a3266468f46e63fa2cf2f0cfd01bbf" translate="yes" xml:space="preserve">
          <source>Will raise two warnings because &lt;code&gt;Zero&lt;/code&gt; and &lt;code&gt;Succ&lt;/code&gt; are not written as &lt;code&gt;'Zero&lt;/code&gt; and &lt;code&gt;'Succ&lt;/code&gt;.</source>
          <target state="translated">Будет выдано два предупреждения, потому что &lt;code&gt;Zero&lt;/code&gt; и &lt;code&gt;Succ&lt;/code&gt; не записываются как &lt;code&gt;'Zero&lt;/code&gt; и &lt;code&gt;'Succ&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c5ec9681ce2072b76c270f62f6f9eee48c28bf7" translate="yes" xml:space="preserve">
          <source>WindowClosure</source>
          <target state="translated">WindowClosure</target>
        </trans-unit>
        <trans-unit id="7e26c5824975ae8a63fa3abf0584b4efdb2b248d" translate="yes" xml:space="preserve">
          <source>WindowStyle</source>
          <target state="translated">WindowStyle</target>
        </trans-unit>
        <trans-unit id="9378a46e189b577aaeee3aa3a868039a552854b0" translate="yes" xml:space="preserve">
          <source>WindowStyleEx</source>
          <target state="translated">WindowStyleEx</target>
        </trans-unit>
        <trans-unit id="8a20bdc2dc7d2d8d4e84b9d92b1bb47619b3475f" translate="yes" xml:space="preserve">
          <source>Windows GUI-only programs have no stdin, stdout or stderr so using the ordinary Haskell input/output functions will cause your program to fail with an IO exception, such as:</source>
          <target state="translated">Программы только с графическим интерфейсом Windows не имеют stdin,stdout или stderr,поэтому использование обычных функций ввода/вывода Haskell приведет к отказу вашей программы с исключением ввода/вывода,например:</target>
        </trans-unit>
        <trans-unit id="5d6f840cad39d9a272a9703b68f0d38fb8222f38" translate="yes" xml:space="preserve">
          <source>Windows only: directory link</source>
          <target state="translated">только для Windows:ссылка на каталог</target>
        </trans-unit>
        <trans-unit id="73d40c03f33c4a3de272ded5007d929ac7019282" translate="yes" xml:space="preserve">
          <source>Windows paths are not all the same. The different kinds of paths each have different meanings. The &lt;code&gt;MAX_PATH&lt;/code&gt; limitation is not a limitation of the operating system nor the file system. It is a limitation of the default namespace enforced by the Win32 API for backwards compatibility.</source>
          <target state="translated">Пути Windows не все одинаковы. Каждый из путей имеет разное значение. &lt;code&gt;MAX_PATH&lt;/code&gt; ограничение не является ограничение операционной системы , ни в файловой системе. Это ограничение пространства имен по умолчанию, применяемое Win32 API для обратной совместимости.</target>
        </trans-unit>
        <trans-unit id="48c423f5c542bd757cc0d8148840620479fe1d50" translate="yes" xml:space="preserve">
          <source>Windows systems</source>
          <target state="translated">Windows-системы</target>
        </trans-unit>
        <trans-unit id="17b0e8d7184831d84e104c44677c17826487591f" translate="yes" xml:space="preserve">
          <source>Windows-specific errors: This operation may fail with &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:illegalOperationErrorType&quot;&gt;illegalOperationErrorType&lt;/a&gt;&lt;/code&gt; if the file system does not support symbolic links.</source>
          <target state="translated">Ошибки, характерные для Windows: эта операция может завершиться ошибкой с параметром &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:illegalOperationErrorType&quot;&gt;illegalOperationErrorType&lt;/a&gt;&lt;/code&gt; если файловая система не поддерживает символические ссылки.</target>
        </trans-unit>
        <trans-unit id="ae9664fed6d551c4afead4741b8d33a6823b9b7c" translate="yes" xml:space="preserve">
          <source>Windows-specific errors: This operation may fail with &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:permissionErrorType&quot;&gt;permissionErrorType&lt;/a&gt;&lt;/code&gt; if the user lacks the privileges to create symbolic links. It may also fail with &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:illegalOperationErrorType&quot;&gt;illegalOperationErrorType&lt;/a&gt;&lt;/code&gt; if the file system does not support symbolic links.</source>
          <target state="translated">Ошибки, специфичные для Windows: эта операция может завершиться ошибкой с &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:permissionErrorType&quot;&gt;permissionErrorType&lt;/a&gt;&lt;/code&gt; , если у пользователя нет прав для создания символических ссылок. Он также может завершиться ошибкой с &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:illegalOperationErrorType&quot;&gt;illegalOperationErrorType&lt;/a&gt;&lt;/code&gt; если файловая система не поддерживает символические ссылки.</target>
        </trans-unit>
        <trans-unit id="02de5f68b4be14e6f9c02d269cf51b2ebcc4d006" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DataKinds&quot;&gt;&lt;code&gt;DataKinds&lt;/code&gt;&lt;/a&gt;, GHC automatically promotes every datatype to be a kind and its (value) constructors to be type constructors. The following types</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DataKinds&quot;&gt; &lt;code&gt;DataKinds&lt;/code&gt; &lt;/a&gt; GHC автоматически превращает каждый тип данных в тип, а его конструкторы (значения) в конструкторы типов. Следующие типы</target>
        </trans-unit>
        <trans-unit id="66de61afd3dce19c1e8432307fd1a6cdbb984d5b" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DataKinds&quot;&gt;&lt;code&gt;DataKinds&lt;/code&gt;&lt;/a&gt;, Haskell&amp;rsquo;s list and tuple types are natively promoted to kinds, and enjoy the same convenient syntax at the type level, albeit prefixed with a quote:</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DataKinds&quot;&gt; &lt;code&gt;DataKinds&lt;/code&gt; &lt;/a&gt; типы списков и кортежей Haskell изначально преобразованы в виды и пользуются тем же удобным синтаксисом на уровне типов, хотя и с префиксом в кавычки:</target>
        </trans-unit>
        <trans-unit id="ad73cf0a187d7c5263c3ed9059162402b019df7e" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DataKinds&quot;&gt;&lt;code&gt;DataKinds&lt;/code&gt;&lt;/a&gt;, the example above can then be rewritten to:</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DataKinds&quot;&gt; &lt;code&gt;DataKinds&lt;/code&gt; &lt;/a&gt; приведенный выше пример можно переписать так:</target>
        </trans-unit>
        <trans-unit id="9694f3dae022beb52b1d2eae44907067122df68b" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveAnyClass&quot;&gt;&lt;code&gt;DeriveAnyClass&lt;/code&gt;&lt;/a&gt; you can derive any other class. The compiler will simply generate an instance declaration with no explicitly-defined methods. This is mostly useful in classes whose &lt;a href=&quot;#minimal-pragma&quot;&gt;minimal set&lt;/a&gt; is empty, and especially when writing &lt;a href=&quot;#generic-programming&quot;&gt;generic functions&lt;/a&gt;.</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveAnyClass&quot;&gt; &lt;code&gt;DeriveAnyClass&lt;/code&gt; &lt;/a&gt; вы можете получить любой другой класс. Компилятор просто сгенерирует объявление экземпляра без явно определенных методов. Это в основном полезно в классах, &lt;a href=&quot;#minimal-pragma&quot;&gt;минимальный набор&lt;/a&gt; которых пуст, и особенно при написании &lt;a href=&quot;#generic-programming&quot;&gt;общих функций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="05e8935b6c02826df72f7c768e1ec4453e94c14a" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveDataTypeable&quot;&gt;&lt;code&gt;DeriveDataTypeable&lt;/code&gt;&lt;/a&gt;, you can derive instances of the class &lt;code&gt;Data&lt;/code&gt;, defined in &lt;code&gt;Data.Data&lt;/code&gt;.</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveDataTypeable&quot;&gt; &lt;code&gt;DeriveDataTypeable&lt;/code&gt; &lt;/a&gt; вы можете создавать экземпляры класса &lt;code&gt;Data&lt;/code&gt; , определенного в &lt;code&gt;Data.Data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad9e3a1e0afdec73dafa2b178a39235fdd9bec14" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt;&lt;code&gt;DeriveFoldable&lt;/code&gt;&lt;/a&gt;, one can derive &lt;code&gt;Foldable&lt;/code&gt; instances for data types of kind &lt;code&gt;Type -&amp;gt; Type&lt;/code&gt;. For example, this declaration:</source>
          <target state="translated">С &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt; &lt;code&gt;DeriveFoldable&lt;/code&gt; &lt;/a&gt; , можно получить &lt;code&gt;Foldable&lt;/code&gt; экземпляры для типов данных любезного &lt;code&gt;Type -&amp;gt; Type&lt;/code&gt; . Например, это объявление:</target>
        </trans-unit>
        <trans-unit id="4864b90fc425d7d78346fd4210a107b2e500fb2e" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt;&lt;code&gt;DeriveFoldable&lt;/code&gt;&lt;/a&gt;, you can derive instances of the class &lt;code&gt;Foldable&lt;/code&gt;, defined in &lt;code&gt;Data.Foldable&lt;/code&gt;.</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt; &lt;code&gt;DeriveFoldable&lt;/code&gt; &lt;/a&gt; вы можете создавать экземпляры класса &lt;code&gt;Foldable&lt;/code&gt; , определенного в &lt;code&gt;Data.Foldable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="671954f0f4d9ee0f1430a6541e8fa3672fbee0d2" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt;&lt;code&gt;DeriveFunctor&lt;/code&gt;&lt;/a&gt;, one can derive &lt;code&gt;Functor&lt;/code&gt; instances for data types of kind &lt;code&gt;Type -&amp;gt; Type&lt;/code&gt;. For example, this declaration:</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt; &lt;code&gt;DeriveFunctor&lt;/code&gt; &lt;/a&gt; можно получить экземпляры &lt;code&gt;Functor&lt;/code&gt; для типов данных типа &lt;code&gt;Type -&amp;gt; Type&lt;/code&gt; . Например, это объявление:</target>
        </trans-unit>
        <trans-unit id="8a9d0c586e9f69c6ba34b372f93f09827c90392d" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt;&lt;code&gt;DeriveFunctor&lt;/code&gt;&lt;/a&gt;, you can derive instances of the class &lt;code&gt;Functor&lt;/code&gt;, defined in &lt;code&gt;GHC.Base&lt;/code&gt;.</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt; &lt;code&gt;DeriveFunctor&lt;/code&gt; &lt;/a&gt; вы можете создавать экземпляры класса &lt;code&gt;Functor&lt;/code&gt; , определенного в &lt;code&gt;GHC.Base&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70bde54b16dc89d95935abc8c585ccb864a45328" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveGeneric&quot;&gt;&lt;code&gt;DeriveGeneric&lt;/code&gt;&lt;/a&gt;, you can derive instances of the classes &lt;code&gt;Generic&lt;/code&gt; and &lt;code&gt;Generic1&lt;/code&gt;, defined in &lt;code&gt;GHC.Generics&lt;/code&gt;. You can use these to define generic functions, as described in &lt;a href=&quot;#generic-programming&quot;&gt;Generic programming&lt;/a&gt;.</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveGeneric&quot;&gt; &lt;code&gt;DeriveGeneric&lt;/code&gt; &lt;/a&gt; вы можете создавать экземпляры классов &lt;code&gt;Generic&lt;/code&gt; и &lt;code&gt;Generic1&lt;/code&gt; , определенных в &lt;code&gt;GHC.Generics&lt;/code&gt; . Вы можете использовать их для определения общих функций, как описано в &lt;a href=&quot;#generic-programming&quot;&gt;разделе Общее программирование&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e5f52e040d0ae2ddbdd82b0a2735b846ecf5083" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveLift&quot;&gt;&lt;code&gt;DeriveLift&lt;/code&gt;&lt;/a&gt;, you can derive instances of the class &lt;code&gt;Lift&lt;/code&gt;, defined in the &lt;code&gt;Language.Haskell.TH.Syntax&lt;/code&gt; module of the &lt;code&gt;template-haskell&lt;/code&gt; package.</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveLift&quot;&gt; &lt;code&gt;DeriveLift&lt;/code&gt; &lt;/a&gt; вы можете получить экземпляры класса &lt;code&gt;Lift&lt;/code&gt; , определенного в модуле &lt;code&gt;Language.Haskell.TH.Syntax&lt;/code&gt; пакета &lt;code&gt;template-haskell&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dc82d6ad448bf5d43bd791bf2a64d65052ded54" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt;, one can derive &lt;code&gt;Traversable&lt;/code&gt; instances for data types of kind &lt;code&gt;Type -&amp;gt; Type&lt;/code&gt;. For example, this declaration:</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; &lt;/a&gt; можно получить экземпляры &lt;code&gt;Traversable&lt;/code&gt; для типов данных типа &lt;code&gt;Type -&amp;gt; Type&lt;/code&gt; . Например, это объявление:</target>
        </trans-unit>
        <trans-unit id="1bd07f0bfee4349fb82f2d04a2759ee937885c23" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt;, you can derive instances of the class &lt;code&gt;Traversable&lt;/code&gt;, defined in &lt;code&gt;Data.Traversable&lt;/code&gt;. Since the &lt;code&gt;Traversable&lt;/code&gt; instance dictates the instances of &lt;code&gt;Functor&lt;/code&gt; and &lt;code&gt;Foldable&lt;/code&gt;, you&amp;rsquo;ll probably want to derive them too, so &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt;&lt;code&gt;DeriveTraversable&lt;/code&gt;&lt;/a&gt; implies &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt;&lt;code&gt;DeriveFunctor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt;&lt;code&gt;DeriveFoldable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; &lt;/a&gt; вы можете создавать экземпляры класса &lt;code&gt;Traversable&lt;/code&gt; , определенного в &lt;code&gt;Data.Traversable&lt;/code&gt; . Поскольку экземпляр &lt;code&gt;Traversable&lt;/code&gt; определяет экземпляры &lt;code&gt;Functor&lt;/code&gt; и &lt;code&gt;Foldable&lt;/code&gt; , вы, вероятно, захотите также получить их, поэтому &lt;a href=&quot;#extension-DeriveTraversable&quot;&gt; &lt;code&gt;DeriveTraversable&lt;/code&gt; &lt;/a&gt; подразумевает &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt; &lt;code&gt;DeriveFunctor&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#extension-DeriveFoldable&quot;&gt; &lt;code&gt;DeriveFoldable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="559a00aea3f890980a1f984df90a03d7d63d1ade" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt;&lt;code&gt;DisambiguateRecordFields&lt;/code&gt;&lt;/a&gt; you can use &lt;em&gt;unqualified&lt;/em&gt; field names even if the corresponding selector is only in scope &lt;em&gt;qualified&lt;/em&gt; For example, assuming the same module &lt;code&gt;M&lt;/code&gt; as in our earlier example, this is legal:</source>
          <target state="translated">С помощью &lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt; &lt;code&gt;DisambiguateRecordFields&lt;/code&gt; &lt;/a&gt; вы можете использовать &lt;em&gt;неквалифицированные&lt;/em&gt; имена полей, даже если соответствующий селектор находится только в &lt;em&gt;квалифицированной области.&lt;/em&gt; Например, предполагая тот же модуль &lt;code&gt;M&lt;/code&gt; , что и в нашем предыдущем примере, это допустимо:</target>
        </trans-unit>
        <trans-unit id="d839e1b384cdeb1b20e6abc8876be37df3ce01a5" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;#extension-MultiWayIf&quot;&gt;&lt;code&gt;MultiWayIf&lt;/code&gt;&lt;/a&gt; extension GHC accepts conditional expressions with multiple branches:</source>
          <target state="translated">С расширением &lt;a href=&quot;#extension-MultiWayIf&quot;&gt; &lt;code&gt;MultiWayIf&lt;/code&gt; &lt;/a&gt; GHC принимает условные выражения с несколькими ветвями:</target>
        </trans-unit>
        <trans-unit id="a0d6333b42a8531a55b6ff2108e890fa59726fab" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;-maxN⟨x⟩&lt;/code&gt;, i.e. &lt;code&gt;+RTS -maxN3 -RTS&lt;/code&gt;, the runtime will choose at most (x), also limited by the number of processors on the system. Omitting (x) is an error, if you need a default use option &lt;code&gt;-N&lt;/code&gt;.</source>
          <target state="translated">С &lt;code&gt;-maxN⟨x⟩&lt;/code&gt; , т.е. &lt;code&gt;+RTS -maxN3 -RTS&lt;/code&gt; , среда выполнения выберет не более (x), также ограниченное количеством процессоров в системе. Пропуск (x) является ошибкой, если вам нужен параметр по умолчанию &lt;code&gt;-N&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf6c6cd414272ae624ac863540c1eb4369c6d081" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;hpc-tracer&lt;/code&gt;, this is 8 (a tab represents several spaces).</source>
          <target state="translated">Для &lt;code&gt;hpc-tracer&lt;/code&gt; это 8 (табуляция означает несколько пробелов).</target>
        </trans-unit>
        <trans-unit id="cec44f01be85a69c1fd7140d01ffa23f751d8ab9" translate="yes" xml:space="preserve">
          <source>With GHC, the &lt;code&gt;ByteString&lt;/code&gt; representation uses &lt;em&gt;pinned&lt;/em&gt; memory, meaning it cannot be moved by the GC. This is usually the right thing to do for larger strings, but for small strings using pinned memory can lead to heap fragmentation which wastes space. The &lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; type (and the &lt;code&gt;Text&lt;/code&gt; type from the &lt;code&gt;text&lt;/code&gt; package) use &lt;em&gt;unpinned&lt;/em&gt; memory so they do not contribute to heap fragmentation. In addition, with GHC, small unpinned strings are allocated in the same way as normal heap allocations, rather than in a separate pinned area.</source>
          <target state="translated">В GHC представление &lt;code&gt;ByteString&lt;/code&gt; использует &lt;em&gt;закрепленную&lt;/em&gt; память, то есть сборщик мусора не может перемещать его. Обычно это правильно для больших строк, но для небольших строк использование закрепленной памяти может привести к фрагментации кучи, которая тратит пространство. Тип &lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; (и тип &lt;code&gt;Text&lt;/code&gt; из &lt;code&gt;text&lt;/code&gt; пакета) используют &lt;em&gt;незакрепленную&lt;/em&gt; память, поэтому они не способствуют фрагментации кучи. Кроме того, с помощью GHC небольшие незакрепленные строки выделяются так же, как и обычные выделения кучи, а не в отдельной закрепленной области.</target>
        </trans-unit>
        <trans-unit id="1b24cdcec5afa4ca8ae04f5f805367b2d6db2d4d" translate="yes" xml:space="preserve">
          <source>With GHC, the memory overheads are as follows, expressed in words and in bytes (words are 4 and 8 bytes on 32 or 64bit machines respectively).</source>
          <target state="translated">При использовании GHC накладные расходы на память выражаются в словах и байтах (слова-4 и 8 байт на 32-х или 64-х битных машинах соответственно).</target>
        </trans-unit>
        <trans-unit id="2d06615b16a183cf6330905f8030d63fe75722c8" translate="yes" xml:space="preserve">
          <source>With Unicode text, it is incorrect to use combinators like &lt;code&gt;map
 toUpper&lt;/code&gt; to case convert each character of a string individually. Instead, use the whole-string case conversion functions from this module. For correctness in different writing systems, these functions may map one input character to two or three output characters.</source>
          <target state="translated">В тексте Unicode неправильно использовать комбинаторы, такие как &lt;code&gt;map toUpper&lt;/code&gt; для преобразования каждого символа строки по отдельности. Вместо этого используйте функции преобразования регистра целой строки из этого модуля. Для корректности в разных системах письма эти функции могут отображать один входной символ на два или три выходных символа.</target>
        </trans-unit>
        <trans-unit id="51f3ae84f7608aa013b4484775362a706adc53f0" translate="yes" xml:space="preserve">
          <source>With any luck, &lt;code&gt;__GLASGOW_HASKELL__&lt;/code&gt; will be undefined in all other implementations that support C-style pre-processing.</source>
          <target state="translated">Если повезет, &lt;code&gt;__GLASGOW_HASKELL__&lt;/code&gt; будет неопределенным во всех других реализациях, поддерживающих предварительную обработку в стиле C.</target>
        </trans-unit>
        <trans-unit id="c44ed7fc274ccaa822b5b3ccf3ecc3bf7adbae81" translate="yes" xml:space="preserve">
          <source>With dependently-typed features it is more useful (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/2431&quot;&gt;#2431&lt;/a&gt;). For example, consider these two candidate definitions of &lt;code&gt;absurd&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107ef4354dd6e452c7d4441a2e93bd2aacde1ddc" translate="yes" xml:space="preserve">
          <source>With dependently-typed features it is more useful (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/2431&quot;&gt;Issue #2431&lt;/a&gt;). For example, consider these two candidate definitions of &lt;code&gt;absurd&lt;/code&gt;:</source>
          <target state="translated">Для функций с зависимым типом это более полезно (см. &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/2431&quot;&gt;Проблему № 2431&lt;/a&gt; ). Например, рассмотрим эти два возможных определения &lt;code&gt;absurd&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="21e78b74f477258018d7a7870e8af03b21095ae1" translate="yes" xml:space="preserve">
          <source>With kind polymorphism, there is quite a bit going on behind the scenes that may be invisible to a Haskell programmer. GHC supports several flags that control how types are printed in error messages and at the GHCi prompt. See the &lt;a href=&quot;using#pretty-printing-types&quot;&gt;discussion of type pretty-printing options&lt;/a&gt; for further details. If you are using kind polymorphism and are confused as to why GHC is rejecting (or accepting) your program, we encourage you to turn on these flags, especially &lt;a href=&quot;using#ghc-flag--fprint-explicit-kinds&quot;&gt;&lt;code&gt;-fprint-explicit-kinds&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">С добрым полиморфизмом за кулисами происходит довольно много вещей, которые могут быть невидимы для программиста на Haskell. GHC поддерживает несколько флагов, которые контролируют печать типов в сообщениях об ошибках и в приглашении GHCi. См. &lt;a href=&quot;using#pretty-printing-types&quot;&gt;Обсуждение параметров красивой печати&lt;/a&gt; для получения дополнительной информации. Если вы используете полиморфизм типа и не знаете, почему GHC отклоняет (или принимает) вашу программу, мы рекомендуем вам включить эти флаги, особенно &lt;a href=&quot;using#ghc-flag--fprint-explicit-kinds&quot;&gt; &lt;code&gt;-fprint-explicit-kinds&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69cd37ef3fe1623579439f2a0ea2d08874630d4e" translate="yes" xml:space="preserve">
          <source>With multiple modules in scope, especially multiple &lt;code&gt;*&lt;/code&gt;-form modules, it is likely that name clashes will occur. Haskell specifies that name clashes are only reported when an ambiguous identifier is used, and GHCi behaves in the same way for expressions typed at the prompt.</source>
          <target state="translated">С несколькими модулями в области видимости, особенно с несколькими модулями &lt;code&gt;*&lt;/code&gt; -form, вероятно возникновение конфликтов имен. Haskell указывает, что о конфликтах имен сообщается только при использовании неоднозначного идентификатора, и GHCi ведет себя таким же образом для выражений, вводимых в приглашении.</target>
        </trans-unit>
        <trans-unit id="d0493423cb33f94a9da912db9832c18dcdd8ec9d" translate="yes" xml:space="preserve">
          <source>With only 1 generation (e.g. &lt;code&gt;-G1&lt;/code&gt;, see &lt;a href=&quot;#rts-flag--G%20%E2%9F%A8generations%E2%9F%A9&quot;&gt;&lt;code&gt;-G ⟨generations⟩&lt;/code&gt;&lt;/a&gt;) the &lt;code&gt;-A&lt;/code&gt; option specifies the minimum allocation area, since the actual size of the allocation area will be resized according to the amount of data in the heap (see &lt;a href=&quot;#rts-flag--F%20%E2%9F%A8factor%E2%9F%A9&quot;&gt;&lt;code&gt;-F ⟨factor⟩&lt;/code&gt;&lt;/a&gt;, below).</source>
          <target state="translated">Только для 1 поколения (например, &lt;code&gt;-G1&lt;/code&gt; , см. &lt;a href=&quot;#rts-flag--G%20%E2%9F%A8generations%E2%9F%A9&quot;&gt; &lt;code&gt;-G ⟨generations⟩&lt;/code&gt; &lt;/a&gt; ) опция &lt;code&gt;-A&lt;/code&gt; указывает минимальную область выделения, поскольку фактический размер области выделения будет изменен в соответствии с объемом данных в куче (см. &lt;a href=&quot;#rts-flag--F%20%E2%9F%A8factor%E2%9F%A9&quot;&gt; &lt;code&gt;-F ⟨factor⟩&lt;/code&gt; &lt;/a&gt; , ниже).</target>
        </trans-unit>
        <trans-unit id="785aea24bc9e99119b7035e19ac075542c979030" translate="yes" xml:space="preserve">
          <source>With some exceptions (see below), the file will be created securely in the sense that an attacker should not be able to cause openTempFile to overwrite another file on the filesystem using your credentials, by putting symbolic links (on Unix) in the place where the temporary file is to be created. On Unix the &lt;code&gt;O_CREAT&lt;/code&gt; and &lt;code&gt;O_EXCL&lt;/code&gt; flags are used to prevent this attack, but note that &lt;code&gt;O_EXCL&lt;/code&gt; is sometimes not supported on NFS filesystems, so if you rely on this behaviour it is best to use local filesystems only.</source>
          <target state="translated">За некоторыми исключениями (см. Ниже) файл будет создан безопасно в том смысле, что злоумышленник не сможет заставить openTempFile перезаписать другой файл в файловой системе, используя ваши учетные данные, путем размещения символических ссылок (в Unix) в месте, где временный файл должен быть создан. В Unix для предотвращения этой атаки используются флаги &lt;code&gt;O_CREAT&lt;/code&gt; и &lt;code&gt;O_EXCL&lt;/code&gt; , но обратите внимание, что &lt;code&gt;O_EXCL&lt;/code&gt; иногда не поддерживается в файловых системах NFS, поэтому, если вы полагаетесь на такое поведение, лучше всего использовать только локальные файловые системы.</target>
        </trans-unit>
        <trans-unit id="a93509c3f999509299ef31391df84499497efcb8" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;#extension-Arrows&quot;&gt;&lt;code&gt;Arrows&lt;/code&gt;&lt;/a&gt; extension, GHC supports the arrow notation described in the second of these papers, translating it using combinators from the &lt;a href=&quot;../libraries/base-4.13.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; module. What follows is a brief introduction to the notation; it won&amp;rsquo;t make much sense unless you&amp;rsquo;ve read Hughes&amp;rsquo;s paper.</source>
          <target state="translated">С расширением &lt;a href=&quot;#extension-Arrows&quot;&gt; &lt;code&gt;Arrows&lt;/code&gt; &lt;/a&gt; GHC поддерживает обозначение стрелок, описанное во втором из этих документов, переводя его с помощью комбинаторов из модуля &lt;a href=&quot;../libraries/base-4.13.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; . Ниже приводится краткое введение в обозначения; в этом не будет особого смысла, если вы не прочитаете статью Хьюза.</target>
        </trans-unit>
        <trans-unit id="6b570873f02bd59cb3d75af7817ea6c7ba50ea43" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;#extension-Arrows&quot;&gt;&lt;code&gt;Arrows&lt;/code&gt;&lt;/a&gt; extension, GHC supports the arrow notation described in the second of these papers, translating it using combinators from the &lt;a href=&quot;../libraries/base-4.14.1.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; module. What follows is a brief introduction to the notation; it won&amp;rsquo;t make much sense unless you&amp;rsquo;ve read Hughes&amp;rsquo;s paper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1c52b5955db050f2c09abaaf8b8f9460a4acba" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;#extension-ConstraintKinds&quot;&gt;&lt;code&gt;ConstraintKinds&lt;/code&gt;&lt;/a&gt; extension, GHC becomes more liberal in what it accepts as constraints in your program. To be precise, with this flag any &lt;em&gt;type&lt;/em&gt; of the new kind &lt;code&gt;Constraint&lt;/code&gt; can be used as a constraint. The following things have kind &lt;code&gt;Constraint&lt;/code&gt;:</source>
          <target state="translated">С расширением &lt;a href=&quot;#extension-ConstraintKinds&quot;&gt; &lt;code&gt;ConstraintKinds&lt;/code&gt; &lt;/a&gt; GHC становится более либеральным в том, что он принимает в качестве ограничений в вашей программе. Если быть точным, с этим флагом любой &lt;em&gt;тип &lt;/em&gt; &lt;code&gt;Constraint&lt;/code&gt; нового типа может использоваться как ограничение. У следующих вещей есть &lt;code&gt;Constraint&lt;/code&gt; вида :</target>
        </trans-unit>
        <trans-unit id="e1664518d009a52644be50176a94b39948aa07fe" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt;&lt;code&gt;EmptyDataDecls&lt;/code&gt;&lt;/a&gt; extension, GHC lets you declare a data type with no constructors.</source>
          <target state="translated">С расширением &lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt; &lt;code&gt;EmptyDataDecls&lt;/code&gt; &lt;/a&gt; GHC позволяет объявлять тип данных без конструкторов.</target>
        </trans-unit>
        <trans-unit id="86f5c1ba9a946fe63d6ee762808ace202ba1df31" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;#extension-PackageImports&quot;&gt;&lt;code&gt;PackageImports&lt;/code&gt;&lt;/a&gt; extension, GHC allows import declarations to be qualified by the package name that the module is intended to be imported from. For example:</source>
          <target state="translated">С расширением &lt;a href=&quot;#extension-PackageImports&quot;&gt; &lt;code&gt;PackageImports&lt;/code&gt; &lt;/a&gt; GHC позволяет уточнять объявления импорта по имени пакета, из которого модуль предназначен для импорта. Например:</target>
        </trans-unit>
        <trans-unit id="0081b5adf07c359a705bcc01d665e8bd9d05b630" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt; extension (&lt;a href=&quot;#universal-quantification&quot;&gt;Lexically scoped type variables&lt;/a&gt;), it is possible to declare type arguments somewhere other than the beginning of a type. For example, we can have &lt;code&gt;pair :: forall a. a -&amp;gt; forall b. b -&amp;gt; (a, b)&lt;/code&gt; and then say &lt;code&gt;pair @Bool True @Char&lt;/code&gt; which would have type &lt;code&gt;Char -&amp;gt; (Bool, Char)&lt;/code&gt;.</source>
          <target state="translated">С расширением &lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;#universal-quantification&quot;&gt;переменные типа с лексической областью видимости&lt;/a&gt; ) можно объявлять аргументы типа где-нибудь, кроме начала типа. Например, у нас может быть &lt;code&gt;pair :: forall a. a -&amp;gt; forall b. b -&amp;gt; (a, b)&lt;/code&gt; а затем произнесите &lt;code&gt;pair @Bool True @Char&lt;/code&gt; которая будет иметь тип &lt;code&gt;Char -&amp;gt; (Bool, Char)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76eee139e346997f5c9c53bbb31187ae5e3574e1" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt;&lt;code&gt;TypeSynonymInstances&lt;/code&gt;&lt;/a&gt; extension, instance heads may use type synonyms. As always, using a type synonym is just shorthand for writing the RHS of the type synonym definition. For example:</source>
          <target state="translated">С расширением &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt; &lt;code&gt;TypeSynonymInstances&lt;/code&gt; &lt;/a&gt; главы экземпляров могут использовать синонимы типов. Как всегда, использование синонима типа - это просто сокращение для записи правой части определения синонима типа. Например:</target>
        </trans-unit>
        <trans-unit id="dd64afd9c5cd942b81bb03eac59d62ba1c9175a3" translate="yes" xml:space="preserve">
          <source>With the &lt;a href=&quot;safe_haskell#extension-Safe&quot;&gt;&lt;code&gt;Safe&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;safe_haskell#extension-Trustworthy&quot;&gt;&lt;code&gt;Trustworthy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;safe_haskell#extension-Unsafe&quot;&gt;&lt;code&gt;Unsafe&lt;/code&gt;&lt;/a&gt; language flags, GHC extends the import declaration syntax to take an optional &lt;code&gt;safe&lt;/code&gt; keyword after the &lt;code&gt;import&lt;/code&gt; keyword. This feature is part of the Safe Haskell GHC extension. For example:</source>
          <target state="translated">С помощью языковых флагов &lt;a href=&quot;safe_haskell#extension-Safe&quot;&gt; &lt;code&gt;Safe&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;safe_haskell#extension-Trustworthy&quot;&gt; &lt;code&gt;Trustworthy&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;safe_haskell#extension-Unsafe&quot;&gt; &lt;code&gt;Unsafe&lt;/code&gt; &lt;/a&gt; GHC расширяет синтаксис объявления импорта, принимая необязательное ключевое слово &lt;code&gt;safe&lt;/code&gt; после ключевого слова &lt;code&gt;import&lt;/code&gt; . Эта функция является частью расширения Safe Haskell GHC. Например:</target>
        </trans-unit>
        <trans-unit id="86dce2a8a32edb642a5851fc037f97dda0e2a514" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;-XDeriveDataTypeable&lt;/code&gt; option, GHC can generate instances of the &lt;code&gt;&lt;a href=&quot;data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; class automatically. For example, given the declaration</source>
          <target state="translated">С параметром &lt;code&gt;-XDeriveDataTypeable&lt;/code&gt; GHC может автоматически создавать экземпляры класса &lt;code&gt;&lt;a href=&quot;data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; . Например, учитывая декларацию</target>
        </trans-unit>
        <trans-unit id="7061af1c2882d04c412d1f683d99f0149d64aa2b" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;T&lt;/code&gt; example above, we could bind &lt;code&gt;k&lt;/code&gt;&lt;em&gt;after&lt;/em&gt;&lt;code&gt;a&lt;/code&gt;; doing so would not violate dependency concerns. However, it would violate our general principle, and so &lt;code&gt;k&lt;/code&gt; comes first.</source>
          <target state="translated">В приведенном выше примере &lt;code&gt;T&lt;/code&gt; мы могли связать &lt;code&gt;k&lt;/code&gt; &lt;em&gt;после &lt;/em&gt; &lt;code&gt;a&lt;/code&gt; ; это не нарушит проблемы зависимости. Однако это нарушило бы наш общий принцип, и поэтому &lt;code&gt;k&lt;/code&gt; на первом месте.</target>
        </trans-unit>
        <trans-unit id="95a87e504b0a793e5fd58318fbc965d5cde726b1" translate="yes" xml:space="preserve">
          <source>With the declaration of &lt;code&gt;(:~~:)&lt;/code&gt; above, it gets kind &lt;code&gt;forall k1 k2. k1 -&amp;gt; k2 -&amp;gt; Type&lt;/code&gt;. Thus, the type &lt;code&gt;(:~~:) a&lt;/code&gt; has kind &lt;code&gt;k2 -&amp;gt; Type&lt;/code&gt; for some &lt;code&gt;k2&lt;/code&gt;. GHC cannot then &lt;em&gt;regeneralize&lt;/em&gt; this kind to become &lt;code&gt;forall k2. k2 -&amp;gt; Type&lt;/code&gt; as desired. Thus, the instance is rejected as ill-kinded.</source>
          <target state="translated">С объявлением &lt;code&gt;(:~~:)&lt;/code&gt; выше, он становится добрым для &lt;code&gt;forall k1 k2. k1 -&amp;gt; k2 -&amp;gt; Type&lt;/code&gt; . Таким образом, тип &lt;code&gt;(:~~:) a&lt;/code&gt; имеет вид &lt;code&gt;k2 -&amp;gt; Type&lt;/code&gt; для некоторого &lt;code&gt;k2&lt;/code&gt; . GHC не может затем &lt;em&gt;регенерировать&lt;/em&gt; этот вид, чтобы стать для &lt;code&gt;forall k2. k2 -&amp;gt; Type&lt;/code&gt; желаемый. Таким образом, экземпляр отклоняется как недоброжелательный.</target>
        </trans-unit>
        <trans-unit id="8e9d7ae0964f2c8a37967ebdf7b51ca679bfce71" translate="yes" xml:space="preserve">
          <source>With the extension that adds a &lt;a href=&quot;#constraint-kind&quot;&gt;kind of constraints&lt;/a&gt;, you can write more exotic superclass definitions. The superclass cycle check is even more liberal in these case. For example, this is OK:</source>
          <target state="translated">С помощью расширения, которое добавляет своего &lt;a href=&quot;#constraint-kind&quot;&gt;рода ограничения&lt;/a&gt; , вы можете писать более экзотические определения суперклассов. В этом случае проверка цикла суперкласса еще более либеральна. Например, это нормально:</target>
        </trans-unit>
        <trans-unit id="c21ffce8c72ae9e80966f7f06bfe16bc1598f575" translate="yes" xml:space="preserve">
          <source>With the goal in mind to make &lt;code&gt;encode&lt;/code&gt; work on &lt;code&gt;Tree&lt;/code&gt; and other datatypes, we now define instances for the representation type constructors &lt;code&gt;&lt;a href=&quot;ghc-generics#t:V1&quot;&gt;V1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-generics#t:U1&quot;&gt;U1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">С целью в виде , чтобы сделать &lt;code&gt;encode&lt;/code&gt; работу на &lt;code&gt;Tree&lt;/code&gt; и других типах данных, мы определим экземпляры для конструкторов типа представления &lt;code&gt;&lt;a href=&quot;ghc-generics#t:V1&quot;&gt;V1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ghc-generics#t:U1&quot;&gt;U1&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-43-:&quot;&gt;:+:&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ghc-generics#t::-42-:&quot;&gt;:*:&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5302a8fcd7027fe5fed3ca73b8eed7f9ceed1e24" translate="yes" xml:space="preserve">
          <source>With the improved kind of &lt;code&gt;Vec&lt;/code&gt;, things like &lt;code&gt;Vec Int Char&lt;/code&gt; are now ill-kinded, and GHC will report an error.</source>
          <target state="translated">С улучшенным видом &lt;code&gt;Vec&lt;/code&gt; такие вещи, как &lt;code&gt;Vec Int Char&lt;/code&gt; , теперь не подходят, и GHC сообщит об ошибке.</target>
        </trans-unit>
        <trans-unit id="0aed3bcdd45e9d87e9c818064646efdefe64f958" translate="yes" xml:space="preserve">
          <source>With the language extension &lt;a href=&quot;#extension-UndecidableSuperClasses&quot;&gt;&lt;code&gt;UndecidableSuperClasses&lt;/code&gt;&lt;/a&gt; GHC lifts all restrictions on superclass constraints. If there really &lt;em&gt;is&lt;/em&gt; a loop, GHC will only expand it to finite depth.</source>
          <target state="translated">С расширением языка &lt;a href=&quot;#extension-UndecidableSuperClasses&quot;&gt; &lt;code&gt;UndecidableSuperClasses&lt;/code&gt; &lt;/a&gt; GHC снимает все ограничения на суперклассы. Если там действительно &lt;em&gt;есть&lt;/em&gt; петля, GHC будет только расширить его конечную глубину.</target>
        </trans-unit>
        <trans-unit id="881f9aca2cbf94416a15c78d09c89a5e610b3cba" translate="yes" xml:space="preserve">
          <source>With this extension turned on, &lt;code&gt;static&lt;/code&gt; is no longer a valid identifier.</source>
          <target state="translated">Когда это расширение включено, &lt;code&gt;static&lt;/code&gt; больше не является допустимым идентификатором.</target>
        </trans-unit>
        <trans-unit id="3eae705dd30aa403e3959eddafb73fb5d53a286c" translate="yes" xml:space="preserve">
          <source>With this flag enabled we use the last jump instruction in blocks. Without this flags the old algorithm also uses the heaviest outgoing edge.</source>
          <target state="translated">При включенном флаге мы используем последнюю инструкцию прыжка блоками.Без этого флага старый алгоритм также использует самый тяжелый исходящий край.</target>
        </trans-unit>
        <trans-unit id="b16f923b2bccb6268626a56190ac266418d2ee9a" translate="yes" xml:space="preserve">
          <source>With this form of the group statement, f is required to simply have the type &lt;code&gt;forall a. [a] -&amp;gt; [[a]]&lt;/code&gt;, which will be used to group up the comprehension so far directly. An example of this form is as follows:</source>
          <target state="translated">В этой форме оператора group f требуется просто иметь тип для &lt;code&gt;forall a. [a] -&amp;gt; [[a]]&lt;/code&gt; , который будет использоваться для непосредственной группировки понимания до сих пор. Пример этой формы выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="c1ca2feeac1b63c8b0e8b5d863d1efdb6417eb61" translate="yes" xml:space="preserve">
          <source>With this macro defined in your &lt;code&gt;.ghci&lt;/code&gt; file, you can use &lt;code&gt;:source file&lt;/code&gt; to read GHCi commands from &lt;code&gt;file&lt;/code&gt;. You can find (and contribute!-) other suggestions for &lt;code&gt;.ghci&lt;/code&gt; files on this Haskell wiki page: &lt;a href=&quot;http://haskell.org/haskellwiki/GHC/GHCi&quot;&gt;GHC/GHCi&lt;/a&gt;</source>
          <target state="translated">С помощью этого макроса, определенного в вашем файле &lt;code&gt;.ghci&lt;/code&gt; , вы можете использовать &lt;code&gt;:source file&lt;/code&gt; для чтения команд GHCi из &lt;code&gt;file&lt;/code&gt; . Вы можете найти (и внести свой вклад! -) другие предложения для файлов &lt;code&gt;.ghci&lt;/code&gt; на этой вики-странице Haskell: &lt;a href=&quot;http://haskell.org/haskellwiki/GHC/GHCi&quot;&gt;GHC / GHCi&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c6c0ef956744d9c2875427c6662b77c5a888414" translate="yes" xml:space="preserve">
          <source>With zig-zag cuts.</source>
          <target state="translated">С порезами зигзага.</target>
        </trans-unit>
        <trans-unit id="bc2f9125cc8c7112d9ada66985a127ec0ad4e915" translate="yes" xml:space="preserve">
          <source>Within reason, more memory for heap space means less garbage collection for GHC, which means less compilation time. If you use the &lt;code&gt;-Rghc-timing&lt;/code&gt; option, you&amp;rsquo;ll get a garbage-collector report. (Again, you can use the cheap-and-nasty &lt;code&gt;+RTS -S -RTS&lt;/code&gt; option to send the GC stats straight to standard error.)</source>
          <target state="translated">В разумных пределах больше памяти для кучи означает меньшую сборку мусора для GHC, что означает меньшее время компиляции. Если вы используете параметр &lt;code&gt;-Rghc-timing&lt;/code&gt; , вы получите отчет сборщика мусора. (Опять же, вы можете использовать опцию cheap-and-nasty &lt;code&gt;+RTS -S -RTS&lt;/code&gt; , чтобы отправить статистику GC прямо в стандартную ошибку.)</target>
        </trans-unit>
        <trans-unit id="8f47805e05322cd599bf35fe9faf060f5e73efd3" translate="yes" xml:space="preserve">
          <source>Within this module, many functions construct a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; from one or more &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values. Those functions will substitute &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values with the replacement character &quot;�&quot; (U+FFFD). Functions that perform this inspection and replacement are documented with the phrase &quot;Performs replacement on invalid scalar values&quot;.</source>
          <target state="translated">В этом модуле многие функции создают &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; из одного или нескольких значений &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; . Эти функции заменят значения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , которые не являются допустимыми скалярными значениями Unicode, на заменяющий символ &quot;&quot; (U + FFFD). Функции, выполняющие эту проверку и замену, задокументированы фразой &amp;laquo;Выполняет замену недопустимых скалярных значений&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="dea0da7408cfec1901b2368ef703f2aecf1f6514" translate="yes" xml:space="preserve">
          <source>Within this module, many functions construct a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; from one or more &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values. Those functions will substitute &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values with the replacement character &quot;�&quot; (U+FFFD). Functions that perform this inspection and replacement are documented with the phrase &quot;Performs replacement on invalid scalar values&quot;.</source>
          <target state="translated">В этом модуле многие функции создают &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; из одного или нескольких значений &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; . Эти функции заменят значения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , которые не являются допустимыми скалярными значениями Unicode, на заменяющий символ &quot;&quot; (U + FFFD). Функции, выполняющие эту проверку и замену, задокументированы фразой &amp;laquo;Выполняет замену недопустимых скалярных значений&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d9dfb1e2314e140fc44280b93e374d8103a6bd88" translate="yes" xml:space="preserve">
          <source>Without &lt;a href=&quot;#extension-DuplicateRecordFields&quot;&gt;&lt;code&gt;DuplicateRecordFields&lt;/code&gt;&lt;/a&gt;, an update mentioning &lt;code&gt;foo&lt;/code&gt; will always be ambiguous if all these definitions were in scope. When the extension is enabled, there are several options for disambiguating updates:</source>
          <target state="translated">Без &lt;a href=&quot;#extension-DuplicateRecordFields&quot;&gt; &lt;code&gt;DuplicateRecordFields&lt;/code&gt; &lt;/a&gt; обновление, в котором упоминается &lt;code&gt;foo&lt;/code&gt; , всегда будет неоднозначным, если все эти определения были в области действия. Когда расширение включено, есть несколько вариантов устранения неоднозначности обновлений:</target>
        </trans-unit>
        <trans-unit id="cf558caacc962a4ce5708595b14947064e9202c7" translate="yes" xml:space="preserve">
          <source>Without &lt;a href=&quot;#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt;, GHC refuses to generalise over kind variables. It thus defaults kind variables to &lt;code&gt;Type&lt;/code&gt; when possible; when this is not possible, an error is issued.</source>
          <target state="translated">Без &lt;a href=&quot;#extension-PolyKinds&quot;&gt; &lt;code&gt;PolyKinds&lt;/code&gt; &lt;/a&gt; GHC отказывается делать обобщения по переменным вида. Таким образом, он по умолчанию устанавливает для переменных &lt;code&gt;Type&lt;/code&gt; значение Тип, когда это возможно; когда это невозможно, выдается ошибка.</target>
        </trans-unit>
        <trans-unit id="2a9c3c68ec886ab1a40dbb182885c56e2b6ca831" translate="yes" xml:space="preserve">
          <source>Without &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt;&lt;code&gt;QuasiQuotes&lt;/code&gt;&lt;/a&gt; this is parsed as a list comprehension. With &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt;&lt;code&gt;QuasiQuotes&lt;/code&gt;&lt;/a&gt; this is parsed as a quasi-quote; however, this parse will fail due to the lack of a closing &lt;code&gt;|]&lt;/code&gt;. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11679&quot;&gt;#11679&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5845f382c175f98b7eb91c01c1ee5f311d078978" translate="yes" xml:space="preserve">
          <source>Without &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt;&lt;code&gt;QuasiQuotes&lt;/code&gt;&lt;/a&gt; this is parsed as a list comprehension. With &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt;&lt;code&gt;QuasiQuotes&lt;/code&gt;&lt;/a&gt; this is parsed as a quasi-quote; however, this parse will fail due to the lack of a closing &lt;code&gt;|]&lt;/code&gt;. See &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11679&quot;&gt;Issue #11679&lt;/a&gt;.</source>
          <target state="translated">Без &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt; &lt;code&gt;QuasiQuotes&lt;/code&gt; &lt;/a&gt; это анализируется как понимание списка. В &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt; &lt;code&gt;QuasiQuotes&lt;/code&gt; &lt;/a&gt; это обрабатывается как квази-цитата; однако этот синтаксический анализ завершится неудачно из-за отсутствия закрытия &lt;code&gt;|]&lt;/code&gt; . См. &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/11679&quot;&gt;Выпуск № 11679&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f3724a985619b98c0ad7733af9c670b7ea356bd" translate="yes" xml:space="preserve">
          <source>Without a &lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt; option, your &lt;code&gt;SCC&lt;/code&gt;s are ignored; so you can compile &lt;code&gt;SCC&lt;/code&gt;-laden code without changing it.</source>
          <target state="translated">Без опции &lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; &lt;/a&gt; ваши &lt;code&gt;SCC&lt;/code&gt; игнорируются; так что вы можете скомпилировать &lt;code&gt;SCC&lt;/code&gt; - загруженный код, не меняя его.</target>
        </trans-unit>
        <trans-unit id="7b93607420f6e329b78506ca570d35577aad1878" translate="yes" xml:space="preserve">
          <source>Without any arguments, displays the current set of options that are applied to expressions and commands typed at the prompt.</source>
          <target state="translated">Без всяких аргументов,отображает текущий набор опций,которые применяются к выражениям и командам,набранным в подсказке.</target>
        </trans-unit>
        <trans-unit id="6afd1c5d24d0c6ba28deb9777974788c74c647b1" translate="yes" xml:space="preserve">
          <source>Without lifting a finger, the &lt;code&gt;?cmp&lt;/code&gt; parameter is propagated to become a parameter of &lt;code&gt;least&lt;/code&gt; as well. With explicit parameters, the default is that parameters must always be explicit propagated. With implicit parameters, the default is to always propagate them.</source>
          <target state="translated">Не поднимая пальца, параметр &lt;code&gt;?cmp&lt;/code&gt; также становится параметром &lt;code&gt;least&lt;/code&gt; . При использовании явных параметров по умолчанию параметры всегда должны передаваться явно. При использовании неявных параметров по умолчанию они всегда распространяются.</target>
        </trans-unit>
        <trans-unit id="b0f92d9fa8c76be5e794944834d2ec86a2772775" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;MINIMAL&lt;/code&gt; pragma no warning would be generated for an instance that implements neither method.</source>
          <target state="translated">Без &lt;code&gt;MINIMAL&lt;/code&gt; MINIMAL предупреждение не было бы создано для экземпляра, который не реализует ни один из методов.</target>
        </trans-unit>
        <trans-unit id="50d9f1e1cbc21e6ec9dc165a0f7dae51d3263314" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;forall b&lt;/code&gt;, the type variable &lt;code&gt;b&lt;/code&gt; would be quantified over the whole instance declaration, which is not what is intended.</source>
          <target state="translated">Без &lt;code&gt;forall b&lt;/code&gt; переменная типа &lt;code&gt;b&lt;/code&gt; была бы количественно оценена по всему объявлению экземпляра, что не является тем, что предполагается.</target>
        </trans-unit>
        <trans-unit id="d93b93f4b6fa3889a10d8fc5065716508c9b410a" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;pattern&lt;/code&gt; prefix, &lt;code&gt;Zero&lt;/code&gt; would be interpreted as a type constructor in the export list.</source>
          <target state="translated">Без префикса &lt;code&gt;pattern&lt;/code&gt; &lt;code&gt;Zero&lt;/code&gt; будет интерпретироваться как конструктор типа в списке экспорта.</target>
        </trans-unit>
        <trans-unit id="8529406902d1abcacd9905fe51002c24837c1b9f" translate="yes" xml:space="preserve">
          <source>Witness for an unboxed &lt;code&gt;Proxy#&lt;/code&gt; value, which has no runtime representation.</source>
          <target state="translated">Свидетель для распакованного значения &lt;code&gt;Proxy#&lt;/code&gt; , которое не имеет представления во время выполнения.</target>
        </trans-unit>
        <trans-unit id="610f9340ef73da170fe3d746b635b1e322839287" translate="yes" xml:space="preserve">
          <source>Witness the trail of destruction:</source>
          <target state="translated">Следите за разрушением:</target>
        </trans-unit>
        <trans-unit id="44363ccb8230b892c5ab09c35a02a4ea41ff9976" translate="yes" xml:space="preserve">
          <source>Word</source>
          <target state="translated">Word</target>
        </trans-unit>
        <trans-unit id="d5483c905b6d49a4bb959ca289af138ba2e3974b" translate="yes" xml:space="preserve">
          <source>Word completion</source>
          <target state="translated">Завершение слов</target>
        </trans-unit>
        <trans-unit id="ebec3f021b32b6cc5c3702fa2014aacc63a489c8" translate="yes" xml:space="preserve">
          <source>Word#</source>
          <target state="translated">Word#</target>
        </trans-unit>
        <trans-unit id="6a84434113170dd2196183223a37fdceb55ba2fb" translate="yes" xml:space="preserve">
          <source>Word16</source>
          <target state="translated">Word16</target>
        </trans-unit>
        <trans-unit id="47cfcc5721eb7b6a68e503b7664fe5da8cc042b7" translate="yes" xml:space="preserve">
          <source>Word16#</source>
          <target state="translated">Word16#</target>
        </trans-unit>
        <trans-unit id="c3be769dd2ec4a171cda42ade7fe290e55320847" translate="yes" xml:space="preserve">
          <source>Word16ElemRep</source>
          <target state="translated">Word16ElemRep</target>
        </trans-unit>
        <trans-unit id="6e4a4a97ad2c84568dfc9c970956cd5aea4291f3" translate="yes" xml:space="preserve">
          <source>Word16Rep</source>
          <target state="translated">Word16Rep</target>
        </trans-unit>
        <trans-unit id="27d33d7ad79bddbd9198dbf60544ea0a5922ab2d" translate="yes" xml:space="preserve">
          <source>Word16X16#</source>
          <target state="translated">Word16X16#</target>
        </trans-unit>
        <trans-unit id="581ced5045f9589c18eb6b89774a5edb7cf18907" translate="yes" xml:space="preserve">
          <source>Word16X32#</source>
          <target state="translated">Word16X32#</target>
        </trans-unit>
        <trans-unit id="cb0fa55002540cd66201e78dd2a473b775807583" translate="yes" xml:space="preserve">
          <source>Word16X8#</source>
          <target state="translated">Word16X8#</target>
        </trans-unit>
        <trans-unit id="ca9cf535ecc0d6f9c09f163d1eace0c0b75e14df" translate="yes" xml:space="preserve">
          <source>Word32</source>
          <target state="translated">Word32</target>
        </trans-unit>
        <trans-unit id="a933b159a6b2cb61c00b71e8591eb2ee110f8728" translate="yes" xml:space="preserve">
          <source>Word32#</source>
          <target state="translated">Word32#</target>
        </trans-unit>
        <trans-unit id="399b80b5d6a6df00939198146bfa201fbcfcb514" translate="yes" xml:space="preserve">
          <source>Word32ElemRep</source>
          <target state="translated">Word32ElemRep</target>
        </trans-unit>
        <trans-unit id="bb69aca3ee85ff65d670de320b3a0722f77e6a2c" translate="yes" xml:space="preserve">
          <source>Word32X16#</source>
          <target state="translated">Word32X16#</target>
        </trans-unit>
        <trans-unit id="8243c948dcd7f5412910c04096e56d0136dac05a" translate="yes" xml:space="preserve">
          <source>Word32X4#</source>
          <target state="translated">Word32X4#</target>
        </trans-unit>
        <trans-unit id="b142d249e87e96429320d524a3b07bd2246dd820" translate="yes" xml:space="preserve">
          <source>Word32X8#</source>
          <target state="translated">Word32X8#</target>
        </trans-unit>
        <trans-unit id="8a1457858cb6a778826be1ec52c62538bb952ff7" translate="yes" xml:space="preserve">
          <source>Word64</source>
          <target state="translated">Word64</target>
        </trans-unit>
        <trans-unit id="8530200a24dcfbd549467b756af592d29de90c98" translate="yes" xml:space="preserve">
          <source>Word64#</source>
          <target state="translated">Word64#</target>
        </trans-unit>
        <trans-unit id="5346b71b27abd762c16882d8503921d915a9b596" translate="yes" xml:space="preserve">
          <source>Word64ElemRep</source>
          <target state="translated">Word64ElemRep</target>
        </trans-unit>
        <trans-unit id="ad9de82091d9f5be6f70404a7f6ea77db4515661" translate="yes" xml:space="preserve">
          <source>Word64Rep</source>
          <target state="translated">Word64Rep</target>
        </trans-unit>
        <trans-unit id="0bf4e17ceba7b29f9db8d40fc30978cabad5b2e3" translate="yes" xml:space="preserve">
          <source>Word64X2#</source>
          <target state="translated">Word64X2#</target>
        </trans-unit>
        <trans-unit id="f30283a81aeb4836e2239aa4b4f88d036171e15d" translate="yes" xml:space="preserve">
          <source>Word64X4#</source>
          <target state="translated">Word64X4#</target>
        </trans-unit>
        <trans-unit id="6df564da800ea9db332a4e4f70ac3b7baee68108" translate="yes" xml:space="preserve">
          <source>Word64X8#</source>
          <target state="translated">Word64X8#</target>
        </trans-unit>
        <trans-unit id="7d4f09dfc217ef6de83fd0a7817a34a9c524f5f8" translate="yes" xml:space="preserve">
          <source>Word8</source>
          <target state="translated">Word8</target>
        </trans-unit>
        <trans-unit id="1026530b7f2b7d11ceed950f769ae8af9db41c6d" translate="yes" xml:space="preserve">
          <source>Word8#</source>
          <target state="translated">Word8#</target>
        </trans-unit>
        <trans-unit id="46fa1330e06c95858d3c751456971104c43240e6" translate="yes" xml:space="preserve">
          <source>Word8ElemRep</source>
          <target state="translated">Word8ElemRep</target>
        </trans-unit>
        <trans-unit id="bb25378aca5d0bf9417565eddafe0c9955fced88" translate="yes" xml:space="preserve">
          <source>Word8Rep</source>
          <target state="translated">Word8Rep</target>
        </trans-unit>
        <trans-unit id="6d9c171610680a48a7e1adce25e5ef2175c1786b" translate="yes" xml:space="preserve">
          <source>Word8X16#</source>
          <target state="translated">Word8X16#</target>
        </trans-unit>
        <trans-unit id="7d2b3864aa2a328b268de16ec90a676d025166df" translate="yes" xml:space="preserve">
          <source>Word8X32#</source>
          <target state="translated">Word8X32#</target>
        </trans-unit>
        <trans-unit id="420bed9409614065e79233ee278151c88a99c07c" translate="yes" xml:space="preserve">
          <source>Word8X64#</source>
          <target state="translated">Word8X64#</target>
        </trans-unit>
        <trans-unit id="84c6a57a62c9a723bc4c3a3bbe6ffc9a885219d9" translate="yes" xml:space="preserve">
          <source>WordPtr</source>
          <target state="translated">WordPtr</target>
        </trans-unit>
        <trans-unit id="68dc8baeafc9a279622fb5e31be3ed83d95357da" translate="yes" xml:space="preserve">
          <source>WordRep</source>
          <target state="translated">WordRep</target>
        </trans-unit>
        <trans-unit id="7ba9e8f41622b0ccfc835a4f2140ab6eea7b7e9b" translate="yes" xml:space="preserve">
          <source>Work left-to-right through the input list of type variables, with a cursor.</source>
          <target state="translated">Работайте слева направо через входной список переменных типа,с помощью курсора.</target>
        </trans-unit>
        <trans-unit id="bc1c455e1b31ed1393785a6cdc3045bbb118f243" translate="yes" xml:space="preserve">
          <source>Workaround so that we can have a Haskell 98 instance &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#t:Error&quot;&gt;Error&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Обходной путь, чтобы мы могли получить &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#t:Error&quot;&gt;Error&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;control-monad-trans-error#t:Error&quot;&gt;ошибки&lt;/a&gt; экземпляра Haskell 98 .</target>
        </trans-unit>
        <trans-unit id="9c02809968c5a04b4bf0b6d24112481a63ca6dca" translate="yes" xml:space="preserve">
          <source>Workaround so that we can have a Haskell 98 instance &lt;code&gt;&lt;a href=&quot;control-monad-trans-error#t:Error&quot;&gt;Error&lt;/a&gt; &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab49cd9ef02b20b8f0a395f52a3bac5f961ae20" translate="yes" xml:space="preserve">
          <source>Worker-wrapper removes unused arguments, but usually we do not remove them all, lest it turn a function closure into a thunk, thereby perhaps creating a space leak and/or disrupting inlining. This flag allows worker/wrapper to remove &lt;em&gt;all&lt;/em&gt; value lambdas.</source>
          <target state="translated">Worker-wrapper удаляет неиспользуемые аргументы, но обычно мы не удаляем их все, чтобы не превратить закрытие функции в преобразователь, что, возможно, приведет к утечке пространства и / или нарушению встраивания. Этот флаг позволяет исполнителю / оболочке удалить &lt;em&gt;все&lt;/em&gt; лямбда-выражения значений.</target>
        </trans-unit>
        <trans-unit id="61f4d4dd918269bf5a5ff69500737f2e3c652d80" translate="yes" xml:space="preserve">
          <source>Working with equality</source>
          <target state="translated">Работать на равноправной основе</target>
        </trans-unit>
        <trans-unit id="b7851eadac070ddfea609696fdeb164b7899ebe8" translate="yes" xml:space="preserve">
          <source>Would result in a generated &lt;code&gt;Functor&lt;/code&gt; instance like so:</source>
          <target state="translated">Результатом будет сгенерированный экземпляр &lt;code&gt;Functor&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="6ee562876821329b8991ff4daaadbf4f98ef9b98" translate="yes" xml:space="preserve">
          <source>Wrap a BCO in a &lt;code&gt;AP_UPD&lt;/code&gt; thunk which will be updated with the value of the BCO when evaluated.</source>
          <target state="translated">Оберните BCO в &lt;code&gt;AP_UPD&lt;/code&gt; который будет обновлен значением BCO при оценке.</target>
        </trans-unit>
        <trans-unit id="16397dd6317efa9c9836ee42453758565f8d25ed" translate="yes" xml:space="preserve">
          <source>Wrap an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation to time out and return &lt;code&gt;Nothing&lt;/code&gt; in case no result is available within &lt;code&gt;n&lt;/code&gt; microseconds (&lt;code&gt;1/10^6&lt;/code&gt; seconds). In case a result is available before the timeout expires, &lt;code&gt;Just a&lt;/code&gt; is returned. A negative timeout interval means &quot;wait indefinitely&quot;. When specifying long timeouts, be careful not to exceed &lt;code&gt;maxBound :: Int&lt;/code&gt;.</source>
          <target state="translated">Оберните вычисление &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; вывода для тайм-аута и возврата &lt;code&gt;Nothing&lt;/code&gt; , если результат не будет доступен в течение &lt;code&gt;n&lt;/code&gt; микросекунд (1/10 &lt;code&gt;1/10^6&lt;/code&gt; секунд). Если результат доступен до истечения тайм-аута, возвращается &lt;code&gt;Just a&lt;/code&gt; . Отрицательный интервал тайм-аута означает &amp;laquo;ждать бесконечно&amp;raquo;. При указании длинных тайм-аутов будьте осторожны, чтобы не превышать &lt;code&gt;maxBound :: Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="298bd3ed150b3f0eda86e3bd26b9d517dfc0dc76" translate="yes" xml:space="preserve">
          <source>Wrap an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation to time out and return &lt;code&gt;Nothing&lt;/code&gt; in case no result is available within &lt;code&gt;n&lt;/code&gt; microseconds (&lt;code&gt;1/10^6&lt;/code&gt; seconds). In case a result is available before the timeout expires, &lt;code&gt;Just a&lt;/code&gt; is returned. A negative timeout interval means &quot;wait indefinitely&quot;. When specifying long timeouts, be careful not to exceed &lt;code&gt;maxBound :: Int&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769d436eab4aa870cf748d72592199f75a9fdf28" translate="yes" xml:space="preserve">
          <source>Wrap an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation to time out and return &lt;code&gt;Nothing&lt;/code&gt; in case no result is available within &lt;code&gt;n&lt;/code&gt; microseconds (&lt;code&gt;1/10^6&lt;/code&gt; seconds). In case a result is available before the timeout expires, &lt;code&gt;Just a&lt;/code&gt; is returned. A negative timeout interval means &quot;wait indefinitely&quot;. When specifying long timeouts, be careful not to exceed &lt;code&gt;maxBound :: Int&lt;/code&gt;.</source>
          <target state="translated">Оберните вычисление &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; вывода для тайм-аута и возврата &lt;code&gt;Nothing&lt;/code&gt; , если результат не будет доступен в течение &lt;code&gt;n&lt;/code&gt; микросекунд (1/10 &lt;code&gt;1/10^6&lt;/code&gt; секунд). Если результат доступен до истечения тайм-аута, возвращается &lt;code&gt;Just a&lt;/code&gt; . Отрицательный интервал тайм-аута означает &amp;laquo;ждать бесконечно&amp;raquo;. При указании длинных тайм-аутов будьте осторожны, чтобы не превышать &lt;code&gt;maxBound :: Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="052e52e2ec601e51ff67cce14d06f664e23dd732" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;&quot;...&quot;&lt;/code&gt;</source>
          <target state="translated">Обернуть документ в &lt;code&gt;&quot;...&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3e2463a3964a6d5f90893a0cb4a83e415f58109e" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;'...'&lt;/code&gt;</source>
          <target state="translated">Обернуть документ в &lt;code&gt;'...'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e11d85c98f81ceac1c15ffeb3554f6ef50d942c9" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;(...)&lt;/code&gt;</source>
          <target state="translated">Обернуть документ в &lt;code&gt;(...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fefcdd75b8d3ceac5767fa9ddb3485c2fae7387b" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;[...]&lt;/code&gt;</source>
          <target state="translated">Обернуть документ в &lt;code&gt;[...]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d9a81e67b5bd2bc5cede4830f07d4ee5769499a" translate="yes" xml:space="preserve">
          <source>Wrap document in &lt;code&gt;{...}&lt;/code&gt;</source>
          <target state="translated">Обернуть документ в &lt;code&gt;{...}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5150dc051fd47e830d39a1a10a0d5cede823b6b" translate="yes" xml:space="preserve">
          <source>WrapArrow</source>
          <target state="translated">WrapArrow</target>
        </trans-unit>
        <trans-unit id="c92147ea0c2b0677b7c09751757b19d07bd7b17c" translate="yes" xml:space="preserve">
          <source>WrapMonad</source>
          <target state="translated">WrapMonad</target>
        </trans-unit>
        <trans-unit id="4069d5a8b2d61fc44c53d1d69a1603e75124fe55" translate="yes" xml:space="preserve">
          <source>WrapMonoid</source>
          <target state="translated">WrapMonoid</target>
        </trans-unit>
        <trans-unit id="f72344941ecf4dbf3a6b05f7d128cba499a51fde" translate="yes" xml:space="preserve">
          <source>WrappedArrow</source>
          <target state="translated">WrappedArrow</target>
        </trans-unit>
        <trans-unit id="5424268dd193f61b9e7843ef4109dc2a12bac7a6" translate="yes" xml:space="preserve">
          <source>WrappedMonad</source>
          <target state="translated">WrappedMonad</target>
        </trans-unit>
        <trans-unit id="459140ee141c9d01be26238b973ae1046e530be2" translate="yes" xml:space="preserve">
          <source>WrappedMonoid</source>
          <target state="translated">WrappedMonoid</target>
        </trans-unit>
        <trans-unit id="fb18f208c8e09b8e152ee97be9d763608b85aabc" translate="yes" xml:space="preserve">
          <source>Wrapper of &lt;code&gt;mallocForeignPtrBytes&lt;/code&gt; with faster implementation for GHC</source>
          <target state="translated">Обертка &lt;code&gt;mallocForeignPtrBytes&lt;/code&gt; с более быстрой реализацией для GHC</target>
        </trans-unit>
        <trans-unit id="f5bae4c947473ab2febca5eb61bfa9da65f60ac7" translate="yes" xml:space="preserve">
          <source>Wrapping an IO action that can throw an error &lt;code&gt;e&lt;/code&gt;:</source>
          <target state="translated">Завершение действия ввода-вывода, которое может вызвать ошибку &lt;code&gt;e&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0d27d9e2d3a2ad251d4892a773947e707db18720" translate="yes" xml:space="preserve">
          <source>Wrapping documents in delimiters</source>
          <target state="translated">Упаковка документов в разделители</target>
        </trans-unit>
        <trans-unit id="48606f4bb9cb6f76c6d45f0aae55cb4f7a999651" translate="yes" xml:space="preserve">
          <source>Write 31-bit character; offset in 4-byte words.</source>
          <target state="translated">Запишите 31-битный символ;смещение в 4-байтных словах.</target>
        </trans-unit>
        <trans-unit id="132823a14fa0074e9c3549c122a220890e54d9b3" translate="yes" xml:space="preserve">
          <source>Write 8-bit character; offset in bytes.</source>
          <target state="translated">Запишите 8-битный символ;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="6cfb95525e855d3c2fb90f553acacc9ffd9b1afe" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; to the buffer</source>
          <target state="translated">Записать &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; в буфер</target>
        </trans-unit>
        <trans-unit id="a30ef0a4dea3adbd954b944a856f0d73077a7fef" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;.tix&lt;/code&gt; File.</source>
          <target state="translated">Напишите файл &lt;code&gt;.tix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2384eda70bde5fbafcdce06c7083ad1f34fba13d" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; using the locale encoding.</source>
          <target state="translated">Запишите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; , используя кодировку локали.</target>
        </trans-unit>
        <trans-unit id="641fdc517a3a148a3426445c3e2501afc543647f" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="translated">Напишите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; в формате IEEE-754 с прямым порядком байтов.</target>
        </trans-unit>
        <trans-unit id="19f5831180b0536c875f7fde0710ba2f6b629a3f" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="translated">Напишите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; в формате IEEE-754 с прямым порядком байтов.</target>
        </trans-unit>
        <trans-unit id="993b7cc9e4c74d2721eedc685664742cc7c82795" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in native in IEEE-754 format and host endian.</source>
          <target state="translated">Напишите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; в собственном формате в формате IEEE-754 с порядком байтов на хосте.</target>
        </trans-unit>
        <trans-unit id="025b69c4396276807676b294d74b3b70f46bef94" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="translated">Напишите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; в формате IEEE-754 с прямым порядком байтов.</target>
        </trans-unit>
        <trans-unit id="2300f23523bc1b33ccbbebf657381c02dd05c86c" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="translated">Напишите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; в формате IEEE-754 с прямым порядком байтов.</target>
        </trans-unit>
        <trans-unit id="9a6e3e08979b85f7f159802afa8ee51f8a4eedd1" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in native in IEEE-754 format and host endian.</source>
          <target state="translated">Напишите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; в собственном формате в формате IEEE-754 с порядком байтов на хосте.</target>
        </trans-unit>
        <trans-unit id="100ddab2dd798658dd4fbb44584d4757dded426e" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; to an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; using the locale encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ed5c3f805685b995398b8616a908c0066ad70a" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">Записать &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; в файл.</target>
        </trans-unit>
        <trans-unit id="ca463eab69a5fff98e0ab2e75dce7ed014b9ab1b" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">Записать &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; в файл.</target>
        </trans-unit>
        <trans-unit id="3ad21d75c6a544747e2e36fcec12a87a1aebe727" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">Записать &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; в файл.</target>
        </trans-unit>
        <trans-unit id="a8e6f690eb143ffdbea5335db0be7244660876a2" translate="yes" xml:space="preserve">
          <source>Write a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to a file.</source>
          <target state="translated">Записать &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; в файл.</target>
        </trans-unit>
        <trans-unit id="244e830bbe30fb0c3258c35cfc26647f07415c80" translate="yes" xml:space="preserve">
          <source>Write a ByteString to a handle, appending a newline byte</source>
          <target state="translated">Напишите ByteString на ручку,добавляя байт новой строки.</target>
        </trans-unit>
        <trans-unit id="a70a82a5347cdeed11b696c9567115f30a6a5296" translate="yes" xml:space="preserve">
          <source>Write a ByteString to stdout</source>
          <target state="translated">Написать байтСтринг в stdout</target>
        </trans-unit>
        <trans-unit id="e8ad66b8476a9e49cc072f07250605c906e95e94" translate="yes" xml:space="preserve">
          <source>Write a ByteString to stdout, appending a newline byte</source>
          <target state="translated">Напишите ByteString в stdout,добавив байт новой строки.</target>
        </trans-unit>
        <trans-unit id="c0c3cc8f4573e40e62c43e8422d4118f97ea3fea" translate="yes" xml:space="preserve">
          <source>Write a Int16 in big endian format</source>
          <target state="translated">Написать Int16 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="9d73a70f9f179a81035be58cee26e559014c575a" translate="yes" xml:space="preserve">
          <source>Write a Int16 in little endian format</source>
          <target state="translated">Напишите Int16 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="7d8b2b4323c44fde9919abbfb9988c387020100a" translate="yes" xml:space="preserve">
          <source>Write a Int16 in native host order and host endianness. 2 bytes will be written, unaligned.</source>
          <target state="translated">Напишите Int16 в порядке родного хозяина и эндианстве хозяина.2 байта будут написаны,не выровненные.</target>
        </trans-unit>
        <trans-unit id="fb3123d3e54a5bdf6aa5b4391bbf7b28df79fb37" translate="yes" xml:space="preserve">
          <source>Write a Int32 in big endian format</source>
          <target state="translated">Написать Int32 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="7e919ad40c1b9ea38485684cbf74d8a9568b9af7" translate="yes" xml:space="preserve">
          <source>Write a Int32 in little endian format</source>
          <target state="translated">Напишите Int32 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="c8c3c578503e8e7468915f61ff1fa6751340cce3" translate="yes" xml:space="preserve">
          <source>Write a Int32 in native host order and host endianness. 4 bytes will be written, unaligned.</source>
          <target state="translated">Напишите Int32 в порядке родного хозяина и эндианстве хозяина.Будет записано 4 байта без выравнивания.</target>
        </trans-unit>
        <trans-unit id="b4e181d3a02580a355986a71c12d4507242968cf" translate="yes" xml:space="preserve">
          <source>Write a Int64 in big endian format</source>
          <target state="translated">Написать Int64 в большом эндийском формате</target>
        </trans-unit>
        <trans-unit id="6a15b266b9877bbd729c40ccb87aa3db359c9f58" translate="yes" xml:space="preserve">
          <source>Write a Int64 in little endian format</source>
          <target state="translated">Напишите Int64 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="001b75a9a615fe6648502bcfe94fd2920ba86af5" translate="yes" xml:space="preserve">
          <source>Write a Int64 in native host order. On a 32 bit machine we write two host order Int32s, in big endian form. 8 bytes will be written, unaligned.</source>
          <target state="translated">Напишите Int64 в порядке &quot;родного&quot; хоста.На 32-битной машине мы пишем два хоста в порядке Int32,в большом эндиане.Будет записано 8 байт без выравнивания.</target>
        </trans-unit>
        <trans-unit id="50fde014dba0a50360d764d6c2704238d9a9cb90" translate="yes" xml:space="preserve">
          <source>Write a String using UTF-8 encoding.</source>
          <target state="translated">Напишите строку,используя кодировку UTF-8.</target>
        </trans-unit>
        <trans-unit id="ca1a04969f07426c1e00b1b3766e301003971851" translate="yes" xml:space="preserve">
          <source>Write a Unicode string to the user's standard output.</source>
          <target state="translated">Запишите строку Юникода в стандартный вывод пользователя.</target>
        </trans-unit>
        <trans-unit id="de13c62099cbcafc759fb5510fbb414e0c611d13" translate="yes" xml:space="preserve">
          <source>Write a Word16 in big endian format</source>
          <target state="translated">Напишите Word16 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="1d3480abbd86fc7688fd650a23916c935ed2b876" translate="yes" xml:space="preserve">
          <source>Write a Word16 in little endian format</source>
          <target state="translated">Напишите Word16 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="374953a98335b9e84fa5e0a4c035b46b2a892799" translate="yes" xml:space="preserve">
          <source>Write a Word16 in native host order and host endianness. 2 bytes will be written, unaligned.</source>
          <target state="translated">Напишите Word16 в порядке родного хозяина и эндианства хозяина.2 байта будут написаны,не выровненные.</target>
        </trans-unit>
        <trans-unit id="b1d543a7902bc6e8e15046b66cf37db05811d00c" translate="yes" xml:space="preserve">
          <source>Write a Word32 in big endian format</source>
          <target state="translated">Напишите Word32 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="426bab66f99e758605e62a76ce97b5ce1321c0e7" translate="yes" xml:space="preserve">
          <source>Write a Word32 in little endian format</source>
          <target state="translated">Напишите Word32 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="22533b04aaf4738c420c7810c743da18ca10d4e0" translate="yes" xml:space="preserve">
          <source>Write a Word32 in native host order and host endianness. 4 bytes will be written, unaligned.</source>
          <target state="translated">Напишите Word32 в порядке родного хозяина и эндианства хозяина.Будет написано 4 байта,без выравнивания.</target>
        </trans-unit>
        <trans-unit id="d00bd933478ce30ee3627449becbce383505e676" translate="yes" xml:space="preserve">
          <source>Write a Word64 in big endian format</source>
          <target state="translated">Написать Word64 в большом эндийском формате</target>
        </trans-unit>
        <trans-unit id="1ccded859c25705e9ae2dccba946964f2b4b599e" translate="yes" xml:space="preserve">
          <source>Write a Word64 in little endian format</source>
          <target state="translated">Напишите Word64 в формате little endian</target>
        </trans-unit>
        <trans-unit id="fe8b5771af7a4fe3ab30f772b71da7013250ca90" translate="yes" xml:space="preserve">
          <source>Write a Word64 in native host order. On a 32 bit machine we write two host order Word32s, in big endian form. 8 bytes will be written, unaligned.</source>
          <target state="translated">Напишите Word64 в порядке родного хоста.На 32-битной машине мы пишем два хоста в порядке Word32s,в большом эндийском.Будет записано 8 байт,без выравнивания.</target>
        </trans-unit>
        <trans-unit id="d084d0a0a3ee70356c669bbf84781436e439ab8d" translate="yes" xml:space="preserve">
          <source>Write a character into the array at the given offset. Returns the number of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;s written.</source>
          <target state="translated">Запишите символ в массив по заданному смещению. Возвращает количество &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="824db4935989674b3e285858238d002d124cd8b6" translate="yes" xml:space="preserve">
          <source>Write a character to the standard output device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hPutChar&quot;&gt;hPutChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Запишите символ на стандартное устройство вывода (то же, что и &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hPutChar&quot;&gt;hPutChar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f3d825454d2db1c3d3f226a28bb4ebdfec603097" translate="yes" xml:space="preserve">
          <source>Write a character to the standard output device (same as &lt;code&gt;&lt;a href=&quot;system-io#v:hPutChar&quot;&gt;hPutChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Запишите символ на стандартное устройство вывода (то же, что и &lt;code&gt;&lt;a href=&quot;system-io#v:hPutChar&quot;&gt;hPutChar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="955d70d1572c0c0ab9646927bdac5ea547ae35f8" translate="yes" xml:space="preserve">
          <source>Write a character using UTF-8 encoding.</source>
          <target state="translated">Запишите символ в кодировке UTF-8.</target>
        </trans-unit>
        <trans-unit id="0a40d25653018769760da200e171fb69042b97ba" translate="yes" xml:space="preserve">
          <source>Write a floating point value to a &lt;code&gt;&lt;a href=&quot;data-text-lazy-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите значение с плавающей запятой в &lt;code&gt;&lt;a href=&quot;data-text-lazy-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f0e537457e84f16fbaa39fa0827e8c740824c36" translate="yes" xml:space="preserve">
          <source>Write a lazy ByteString efficiently, simply appending the lazy ByteString chunks to the output buffer</source>
          <target state="translated">Написать ленивый ByteString эффективно,просто добавляя ленивые ByteString куски в выходной буфер</target>
        </trans-unit>
        <trans-unit id="4a5a6f538364d52e8d401c4fc9299b67f51eb2c1" translate="yes" xml:space="preserve">
          <source>Write a list of storable elements into a newly allocated, consecutive sequence of storable values (like &lt;code&gt;&lt;a href=&quot;foreign-marshal-utils#v:new&quot;&gt;new&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="translated">Запишите список сохраняемых элементов во вновь выделенную последовательную последовательность сохраняемых значений (как &lt;code&gt;&lt;a href=&quot;foreign-marshal-utils#v:new&quot;&gt;new&lt;/a&gt;&lt;/code&gt; , но для нескольких элементов).</target>
        </trans-unit>
        <trans-unit id="cdf3a3bd7d79bb717fec0614e932a3f554e7d129" translate="yes" xml:space="preserve">
          <source>Write a list of storable elements into a newly allocated, consecutive sequence of storable values, where the end is fixed by the given end marker</source>
          <target state="translated">Записать список хранимых элементов во вновь выделенную последовательную последовательность хранимых значений,где конец фиксируется заданным маркером конца</target>
        </trans-unit>
        <trans-unit id="46dde6be964e98cc511af24b16c6e57e81e0249e" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Записать новое значение в &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ded1b880637c536601d5622865a8ac5bee12d73f" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Записать новое значение в &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b15bee858199106a92ca21868dcf92516cce78a" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Записать новое значение в &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cfd1ae109907abef00a2e666c2fb353f397524eb" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Записать новое значение в &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a0bbd3fd99a0c8ca169dc0a0800f474e5f53bf14" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Записать новое значение в &lt;code&gt;&lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a779d08a6f4043a50272816a75acd9ee4cacd4c" translate="yes" xml:space="preserve">
          <source>Write a new value into an &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Записать новое значение в &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20f4593948df5a33a2e433f875c4b3f08e697cff" translate="yes" xml:space="preserve">
          <source>Write a string the end of a file.</source>
          <target state="translated">Запишите строку в конец файла.</target>
        </trans-unit>
        <trans-unit id="c180f2e1d927a73773a56afa0d7e8518dedba44e" translate="yes" xml:space="preserve">
          <source>Write a string to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;, followed by a newline.</source>
          <target state="translated">Запишите строку в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; , за которой следует перевод строки.</target>
        </trans-unit>
        <trans-unit id="f7e8eefc7a202ba520c173df9a961b393fa4acc7" translate="yes" xml:space="preserve">
          <source>Write a string to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Напишите строку в стандартный &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7142ba8529e9f3798882070ee18b16fa9830450d" translate="yes" xml:space="preserve">
          <source>Write a string to a file. The file is truncated to zero length before writing begins.</source>
          <target state="translated">Запишите строку в файл.Перед началом записи файл усекается до нулевой длины.</target>
        </trans-unit>
        <trans-unit id="1c2990ff65d290d7bbb87a7564d0e4e76c8f8255" translate="yes" xml:space="preserve">
          <source>Write a string to a handle, followed by a newline.</source>
          <target state="translated">Запишите строку на рукоятку,а затем новую строку.</target>
        </trans-unit>
        <trans-unit id="bd7a02731ecdcdf45341edba546df5ac23933c67" translate="yes" xml:space="preserve">
          <source>Write a string to a handle.</source>
          <target state="translated">Напишите строку на ручку.</target>
        </trans-unit>
        <trans-unit id="ece9511f02a82892ce27b96dda3476e25a7fbdb9" translate="yes" xml:space="preserve">
          <source>Write a string to the standard output device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hPutStr&quot;&gt;hPutStr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Запишите строку на стандартное устройство вывода (то же, что и &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hPutStr&quot;&gt;hPutStr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ffa575f023b590cb0185153c4e3bb7bcdf3ca8ca" translate="yes" xml:space="preserve">
          <source>Write a string to the standard output device (same as &lt;code&gt;&lt;a href=&quot;system-io#v:hPutStr&quot;&gt;hPutStr&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Запишите строку на стандартное устройство вывода (то же, что и &lt;code&gt;&lt;a href=&quot;system-io#v:hPutStr&quot;&gt;hPutStr&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9ddf3308755406ffab4fefd34e1c0f532c36bfca" translate="yes" xml:space="preserve">
          <source>Write a string to the user's standard output, followed by a newline.</source>
          <target state="translated">Запишите строку в стандартный вывод пользователя,а затем новую строку.</target>
        </trans-unit>
        <trans-unit id="d649865e90fcbff9ffe50b1a59105ee5172bcad2" translate="yes" xml:space="preserve">
          <source>Write a value to a &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Напишите значение &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bb0e77531d8dd5855a5dee42f98bdfb66dea502" translate="yes" xml:space="preserve">
          <source>Write a value to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt;; blocks if the queue is full.</source>
          <target state="translated">Записать значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; ; блокируется, если очередь заполнена.</target>
        </trans-unit>
        <trans-unit id="9b880d3a6f95fb0643f6f8cb86d9febe4b457c2d" translate="yes" xml:space="preserve">
          <source>Write a value to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="502f2a89fe6ab954ea36d4a5f5ae4da0588aaadf" translate="yes" xml:space="preserve">
          <source>Write a value to a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b003c4b3a259d538a4ba6bcb5c8dd4f54a8c348a" translate="yes" xml:space="preserve">
          <source>Write a value to a memory area regarded as an array of values of the same kind. The following equality holds:</source>
          <target state="translated">Записать значение в область памяти,рассматриваемую как массив однотипных значений.Равенство имеет следующее значение:</target>
        </trans-unit>
        <trans-unit id="2278658d6c531603ea71643e435890480712f25e" translate="yes" xml:space="preserve">
          <source>Write a value to a memory location given by a base address and offset. The following equality holds:</source>
          <target state="translated">Запишите значение в ячейку памяти,заданное базовым адресом и смещением.Равенство имеет следующее значение:</target>
        </trans-unit>
        <trans-unit id="d2bcb5f72dff224c65e70a09f3049dbb8677df2f" translate="yes" xml:space="preserve">
          <source>Write a vector to specified index of mutable array of scalars; offset is in scalar elements.</source>
          <target state="translated">Запишите вектор в заданный индекс мутируемого массива скаляров;смещение-в скалярных элементах.</target>
        </trans-unit>
        <trans-unit id="47fbcdcf5427d81f8e800b2a3be52a9b2780f1f2" translate="yes" xml:space="preserve">
          <source>Write a vector to specified index of mutable array.</source>
          <target state="translated">Запись вектора в указанный индекс мутируемого массива.</target>
        </trans-unit>
        <trans-unit id="2cbdaab506338b440edffc79752d43d3b372babf" translate="yes" xml:space="preserve">
          <source>Write an Int16 in big endian format</source>
          <target state="translated">Написать Int16 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="a4e76ca260148b04e485fd2b3ab9435bef6ca68d" translate="yes" xml:space="preserve">
          <source>Write an Int16 in little endian format</source>
          <target state="translated">Напишите Int16 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="04d7dd93d431136691244f8a8060c6f710b4c9c7" translate="yes" xml:space="preserve">
          <source>Write an Int32 in big endian format</source>
          <target state="translated">Написать Int32 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="ac3eecde6710e67b4fbd62fe5faea7085564b9e9" translate="yes" xml:space="preserve">
          <source>Write an Int32 in little endian format</source>
          <target state="translated">Напишите Int32 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="4ecb73c918eeb208591574c27bf43973ceabac8a" translate="yes" xml:space="preserve">
          <source>Write an Int64 in big endian format</source>
          <target state="translated">Написать Int64 в большом эндийском формате</target>
        </trans-unit>
        <trans-unit id="062b3fd33b7744aa05c8b488aac57bd5719de134" translate="yes" xml:space="preserve">
          <source>Write an Int64 in little endian format</source>
          <target state="translated">Напишите Int64 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="f3475a216b60f541f9561999947a42033537d47f" translate="yes" xml:space="preserve">
          <source>Write an element in a mutable array</source>
          <target state="translated">Запись элемента в мутирующий массив</target>
        </trans-unit>
        <trans-unit id="3a6dc8d047fec7b46b0233f24f9a28adcd679e26" translate="yes" xml:space="preserve">
          <source>Write an entire list of items to a &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Написать весь список элементов в &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9599a175165c39f1f29ddd9bb8c7e18497bf06b" translate="yes" xml:space="preserve">
          <source>Write contents of &lt;code&gt;MutVar#&lt;/code&gt;.</source>
          <target state="translated">Напишите содержимое &lt;code&gt;MutVar#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="842c4baf59de10dbe1f4228d4e89548eb6cfad90" translate="yes" xml:space="preserve">
          <source>Write contents of &lt;code&gt;TVar#&lt;/code&gt;.</source>
          <target state="translated">Напишите содержимое &lt;code&gt;TVar#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3de1d04f7bf6af5e972546fb7777d6bafc52d88" translate="yes" xml:space="preserve">
          <source>Write data from memory to an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt;. This is exactly equivalent to the POSIX &lt;code&gt;write&lt;/code&gt; function.</source>
          <target state="translated">Записать данные из памяти в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; . Это в точности эквивалентно функции &lt;code&gt;write&lt;/code&gt; POSIX .</target>
        </trans-unit>
        <trans-unit id="3589adf6c850b011d135abac8239e99774d7263d" translate="yes" xml:space="preserve">
          <source>Write data from memory to an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt;. This is exactly equivalent to the POSIX &lt;code&gt;write&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7773c80499d5b3f15854fd0b2e72f86ef50f9e8" translate="yes" xml:space="preserve">
          <source>Write given error message to &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stderr&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt; and terminate with &lt;code&gt;&lt;a href=&quot;system-exit#v:exitFailure&quot;&gt;exitFailure&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите данное сообщение об ошибке в &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stderr&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt; и завершите с помощью &lt;code&gt;&lt;a href=&quot;system-exit#v:exitFailure&quot;&gt;exitFailure&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4355c147f16522d41a43d5a06119aedec6f7144b" translate="yes" xml:space="preserve">
          <source>Write output from main C-\- pipeline passes to files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96bdb27f817c3c1baec26eb6ded0edc44bb3c99" translate="yes" xml:space="preserve">
          <source>Write the given value to the given memory location. Alignment restrictions might apply; see &lt;code&gt;&lt;a href=&quot;foreign-storable#v:peek&quot;&gt;peek&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите данное значение в указанную ячейку памяти. Могут применяться ограничения по выравниванию; посмотреть &lt;code&gt;&lt;a href=&quot;foreign-storable#v:peek&quot;&gt;peek&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77655bd9fbe731998656fdcf621486c02b0a375a" translate="yes" xml:space="preserve">
          <source>Write the given value to the given memory location. Alignment restrictions might apply; see &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:peek&quot;&gt;peek&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите данное значение в указанную ячейку памяти. Могут применяться ограничения по выравниванию; посмотреть &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:peek&quot;&gt;peek&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="babfd98df4815040b9b8feaf92e4a373432b470f" translate="yes" xml:space="preserve">
          <source>Write the list elements consecutive into memory</source>
          <target state="translated">Запись последовательных элементов списка в память</target>
        </trans-unit>
        <trans-unit id="c13f0a2faae8bb31701cafde84fa1d469581a021" translate="yes" xml:space="preserve">
          <source>Write the list elements consecutive into memory and terminate them with the given marker element</source>
          <target state="translated">Записать последовательные элементы списка в память и завершить их заданным элементом маркера</target>
        </trans-unit>
        <trans-unit id="4bfb3401061c515a5bf897d647437c6e727895e8" translate="yes" xml:space="preserve">
          <source>Write the specified number of bytes.</source>
          <target state="translated">Запишите указанное количество байт.</target>
        </trans-unit>
        <trans-unit id="7948630f19859069bae4a14e2c76f2c7020b9d2a" translate="yes" xml:space="preserve">
          <source>Write the supplied value into a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите полученное значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8756d20514051c6080e747e02c7172e182a101af" translate="yes" xml:space="preserve">
          <source>Write the supplied value into a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите полученное значение в &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f27a7a93b6c3f65c763bd60036589804bd7bf721" translate="yes" xml:space="preserve">
          <source>Write the supplied value into a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите полученное значение в &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="155f12112f4379352bcdee8335e8ff9abd964e75" translate="yes" xml:space="preserve">
          <source>Write the terminal output to the standard output device.</source>
          <target state="translated">Запишите клеммный выход на стандартное выходное устройство.</target>
        </trans-unit>
        <trans-unit id="2ffb13840f565fd761a331ddc6dc0237d509420b" translate="yes" xml:space="preserve">
          <source>Write the terminal output to the terminal or file managed by the given &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Запишите вывод терминала в терминал или файл, управляемый данным &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3cd750e768a4d8f40411b104e6eddf083a4f201a" translate="yes" xml:space="preserve">
          <source>Write the terminal output to the terminal or file managed by the given &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bab7a81286ec426207ad20332db127f5e40c79b" translate="yes" xml:space="preserve">
          <source>Write to specified index of mutable array.</source>
          <target state="translated">Запись в указанный индекс мутируемого массива.</target>
        </trans-unit>
        <trans-unit id="faa64ad5644001c4c4dc3bee878a933e8c8aac0e" translate="yes" xml:space="preserve">
          <source>Write up to the specified number of bytes without blocking. Returns the actual number of bytes written.</source>
          <target state="translated">Записывайте до заданного количества байт без блокировки.Возвращает фактическое количество записанных байтов.</target>
        </trans-unit>
        <trans-unit id="74120aff54b3ed793ccfa34d37318c6efb458636" translate="yes" xml:space="preserve">
          <source>Write vector; offset in bytes.</source>
          <target state="translated">Вектор записи;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="fd96182628831a4dab0848bbbb0a8a86256945c3" translate="yes" xml:space="preserve">
          <source>Write vector; offset in scalar elements.</source>
          <target state="translated">Записать вектор;смещение в скалярных элементах.</target>
        </trans-unit>
        <trans-unit id="e1f97fa6627971c9b0e683428fd5abfab1ecbdb9" translate="yes" xml:space="preserve">
          <source>Write? (False = read-only)</source>
          <target state="translated">Писать? (False=только для чтения)</target>
        </trans-unit>
        <trans-unit id="09c7377b67eee34defdc1dd0804c879b090650d2" translate="yes" xml:space="preserve">
          <source>WriteBuffer</source>
          <target state="translated">WriteBuffer</target>
        </trans-unit>
        <trans-unit id="3082b1ffe24322eee941ed215c852cffc7410d42" translate="yes" xml:space="preserve">
          <source>WriteHandle</source>
          <target state="translated">WriteHandle</target>
        </trans-unit>
        <trans-unit id="9ee45a046a695fc62952355259c464d3782298a5" translate="yes" xml:space="preserve">
          <source>WriteLock</source>
          <target state="translated">WriteLock</target>
        </trans-unit>
        <trans-unit id="60841bf1ad2d01720515c6eb9b3efbeb2e0f7656" translate="yes" xml:space="preserve">
          <source>WriteMode</source>
          <target state="translated">WriteMode</target>
        </trans-unit>
        <trans-unit id="f5ca54e8210ce7deaf5fa1129a91a1f50f08386a" translate="yes" xml:space="preserve">
          <source>WriteOnly</source>
          <target state="translated">WriteOnly</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="a8f135f9c50f7fe5f7a287362386d791fee8800a" translate="yes" xml:space="preserve">
          <source>Writer operations</source>
          <target state="translated">Работа со сценарием</target>
        </trans-unit>
        <trans-unit id="a123ab5d3541d6386c9d34765c7348e78d2bb09e" translate="yes" xml:space="preserve">
          <source>WriterT</source>
          <target state="translated">WriterT</target>
        </trans-unit>
        <trans-unit id="1cccc800c778fc7aea514948aa922ecafd4399e9" translate="yes" xml:space="preserve">
          <source>Writes an array of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Пишет массив &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; к указанной &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d30a3e22fd6539c1c9d94fc5b04d15e2c9f7e725" translate="yes" xml:space="preserve">
          <source>Writes an array of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b97a0aaa412174782d8ac6874c3f7cc18e81e9" translate="yes" xml:space="preserve">
          <source>Writes out extended interface files alongisde regular enterface files. Just like regular interface files, GHC has a recompilation check to detect out of date or missing extended interface files.</source>
          <target state="translated">Записывает файлы расширенного интерфейса вдоль обычных файлов интерфейса.Как и обычные файлы интерфейсов,GHC имеет проверку на перекомпиляцию,чтобы обнаружить устаревшие или отсутствующие файлы расширенного интерфейса.</target>
        </trans-unit>
        <trans-unit id="f8ed5cefe0e622b3e54c1d44f041cf244581a4d3" translate="yes" xml:space="preserve">
          <source>Writes out extended interface files alongside regular interface files. Just like regular interface files, GHC has a recompilation check to detect out of date or missing extended interface files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e584f7c39c3d0e184b912ee7be64b91cc4f0e227" translate="yes" xml:space="preserve">
          <source>Writes the line history to the given file. If there is an error when writing the file, it will be ignored.</source>
          <target state="translated">Записывает историю строк в данный файл.Если при записи файла будет допущена ошибка,то она будет проигнорирована.</target>
        </trans-unit>
        <trans-unit id="82675cd0bc2b58173645fe62ed090db0c903a0d8" translate="yes" xml:space="preserve">
          <source>XdgCache</source>
          <target state="translated">XdgCache</target>
        </trans-unit>
        <trans-unit id="a09516bd6fa5e0d22f97cc882d59eced3f611c61" translate="yes" xml:space="preserve">
          <source>XdgConfig</source>
          <target state="translated">XdgConfig</target>
        </trans-unit>
        <trans-unit id="513936143f60ff489cea943b4d3cf5ff7ec804be" translate="yes" xml:space="preserve">
          <source>XdgConfigDirs</source>
          <target state="translated">XdgConfigDirs</target>
        </trans-unit>
        <trans-unit id="b55b13216c4a49a521787620dab302740b661e55" translate="yes" xml:space="preserve">
          <source>XdgData</source>
          <target state="translated">XdgData</target>
        </trans-unit>
        <trans-unit id="5c87de6a1cfa7e4af282e624345c841e7d8bd0bb" translate="yes" xml:space="preserve">
          <source>XdgDataDirs</source>
          <target state="translated">XdgDataDirs</target>
        </trans-unit>
        <trans-unit id="1fbbfb2eaf00935b6eaff85397e2d3159b40fac3" translate="yes" xml:space="preserve">
          <source>XdgDirectory</source>
          <target state="translated">XdgDirectory</target>
        </trans-unit>
        <trans-unit id="2a60deb694d7c793f949c28507f268cafab38ce5" translate="yes" xml:space="preserve">
          <source>XdgDirectoryList</source>
          <target state="translated">XdgDirectoryList</target>
        </trans-unit>
        <trans-unit id="14824d205a044c81fdecf7f246ad054ed0648b74" translate="yes" xml:space="preserve">
          <source>Year and day format</source>
          <target state="translated">Формат года и дня</target>
        </trans-unit>
        <trans-unit id="ed289f57da895ead697dd2c01857ff65cfc7ea93" translate="yes" xml:space="preserve">
          <source>Year.</source>
          <target state="translated">Year.</target>
        </trans-unit>
        <trans-unit id="3526f607bcd4f51ad0bc05f814579a42c2c0ba57" translate="yes" xml:space="preserve">
          <source>Yellow</source>
          <target state="translated">Yellow</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="520497482bb4d7526496e8edb3018d95cee38510" translate="yes" xml:space="preserve">
          <source>Yes (Explicit)</source>
          <target state="translated">Да (ясно выражается)</target>
        </trans-unit>
        <trans-unit id="90c557a6b48e6bc7ef30b6f2d5fb9c703c39cf2f" translate="yes" xml:space="preserve">
          <source>Yes (Inferred)</source>
          <target state="translated">Да (Предполагается)</target>
        </trans-unit>
        <trans-unit id="86200a8547bb15fb3a4cf8bb1368b37de64fb317" translate="yes" xml:space="preserve">
          <source>Yield &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the given &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; value is valid on the system. This implies that the &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; instance of &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; is also system dependent as it is only defined for valid values of &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выход &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если данная &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; значение действует в системе. Это означает, что экземпляр &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; также зависит от системы, поскольку он определен только для допустимых значений &lt;code&gt;&lt;a href=&quot;foreign-c-error#t:Errno&quot;&gt;Errno&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f384c9380a1584c25f0df9644ddfab42bb5794c" translate="yes" xml:space="preserve">
          <source>Yield a &lt;em&gt;non-empty&lt;/em&gt; strict &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выход в &lt;em&gt;непустой&lt;/em&gt; строгой &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="711685e6ca2af214ee9e0c03ff3f6e2991b1fffe" translate="yes" xml:space="preserve">
          <source>Yield not to its blasphemous call! Flee traveller! Flee or you will be corrupted and devoured!</source>
          <target state="translated">Не поддавайся его богохульному призыву! Путешественник в бегах! Спасайся или ты будешь испорчен и съеден!</target>
        </trans-unit>
        <trans-unit id="a5cc7a47f6c353cbfbd096e4097551052e651002" translate="yes" xml:space="preserve">
          <source>You can add a module to the scope (via &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;import&lt;/code&gt;) only if either (a) it is loaded, or (b) it is a module from a package that GHCi knows about. Using &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;import&lt;/code&gt; to try bring into scope a non-loaded module may result in the message &lt;code&gt;module M is not loaded&lt;/code&gt;.</source>
          <target state="translated">Вы можете добавить модуль в область видимости (через &lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt; или &lt;code&gt;import&lt;/code&gt; ), только если (а) он загружен, или (б) это модуль из пакета, о котором знает GHCi. Использование &lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt; или &lt;code&gt;import&lt;/code&gt; для попытки ввести в область видимости незагруженного модуля может привести к тому, что &lt;code&gt;module M is not loaded&lt;/code&gt; сообщений M не загружен .</target>
        </trans-unit>
        <trans-unit id="269b166a8fb9660360ed22bb6ffd6ad1f5dbf714" translate="yes" xml:space="preserve">
          <source>You can add explicit phase control (&lt;a href=&quot;#phase-control&quot;&gt;Phase control&lt;/a&gt;) to &lt;code&gt;SPECIALISE INLINE&lt;/code&gt; pragma, just like on an &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt; pragma; if you do so, the same phase is used for the rewrite rule and the INLINE control of the specialised function.</source>
          <target state="translated">Вы можете добавить явное управление фазой ( &lt;a href=&quot;#phase-control&quot;&gt;Phase control&lt;/a&gt; ) в прагму &lt;code&gt;SPECIALISE INLINE&lt;/code&gt; , как и в прагму &lt;a href=&quot;#pragma-INLINE&quot;&gt; &lt;code&gt;INLINE&lt;/code&gt; &lt;/a&gt; ; если вы это сделаете, для правила перезаписи и элемента управления INLINE специализированной функции используется одна и та же фаза.</target>
        </trans-unit>
        <trans-unit id="76b4dc225411289e9acdbfffaafe383a16ca2930" translate="yes" xml:space="preserve">
          <source>You can add phase control (&lt;a href=&quot;#phase-control&quot;&gt;Phase control&lt;/a&gt;) to the RULE generated by a &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma, just as you can if you write a &lt;code&gt;RULE&lt;/code&gt; directly. For example:</source>
          <target state="translated">Вы можете добавить фазовый контроль ( &lt;a href=&quot;#phase-control&quot;&gt;Phase control&lt;/a&gt; ) к ПРАВИЛУ, сгенерированному &lt;code&gt;SPECIALIZE&lt;/code&gt; , точно так же, как если бы вы написали &lt;code&gt;RULE&lt;/code&gt; напрямую. Например:</target>
        </trans-unit>
        <trans-unit id="d19396807b5bb813f8f10443b8f102685ebd9a78" translate="yes" xml:space="preserve">
          <source>You can also define functions at the prompt:</source>
          <target state="translated">Вы также можете определить функции с помощью подсказки:</target>
        </trans-unit>
        <trans-unit id="9f2d6d5ccc9f9a9d9f25489b257a5154dc96e794" translate="yes" xml:space="preserve">
          <source>You can also get this in a more future-proof, machine readable format, with &lt;code&gt;-t --machine-readable&lt;/code&gt;:</source>
          <target state="translated">Вы также можете получить это в более перспективном, машиночитаемом формате с &lt;code&gt;-t --machine-readable&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a5b15205797af6957ff9cf5c81b6dc586582e3e9" translate="yes" xml:space="preserve">
          <source>You can also use a standalone deriving declaration instead (see &lt;a href=&quot;#stand-alone-deriving&quot;&gt;Stand-alone deriving declarations&lt;/a&gt;).</source>
          <target state="translated">Вместо этого вы также можете использовать автономное объявление производного объекта (см. &lt;a href=&quot;#stand-alone-deriving&quot;&gt;Автономные производные объявления&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bf82ec7c5c55deb1e4326a6cd0200b4cd6f00276" translate="yes" xml:space="preserve">
          <source>You can annotate modules with the &lt;code&gt;ANN&lt;/code&gt; pragma by using the &lt;code&gt;module&lt;/code&gt; keyword. For example:</source>
          <target state="translated">Вы можете аннотировать модули с помощью прагмы &lt;code&gt;ANN&lt;/code&gt; , используя ключевое слово &lt;code&gt;module&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="bd200064406d69a57200444728341c157a15f8d7" translate="yes" xml:space="preserve">
          <source>You can annotate types with the &lt;code&gt;ANN&lt;/code&gt; pragma by using the &lt;code&gt;type&lt;/code&gt; keyword. For example:</source>
          <target state="translated">Вы можете аннотировать типы с помощью прагмы &lt;code&gt;ANN&lt;/code&gt; , используя ключевое слово &lt;code&gt;type&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="190d499d4f768a4e6267637fa569282ca6b46254" translate="yes" xml:space="preserve">
          <source>You can apply a type synonym to a forall type:</source>
          <target state="translated">Вы можете применить синоним типа к типу forall:</target>
        </trans-unit>
        <trans-unit id="9c64d81db37258386a1e4b81a293b2b44f3418af" translate="yes" xml:space="preserve">
          <source>You can apply a type synonym to a partially applied type synonym:</source>
          <target state="translated">К частично применяемому синониму типа можно применить синоним типа:</target>
        </trans-unit>
        <trans-unit id="7ff9739eba78b0ef326aef750e441b5f886825f8" translate="yes" xml:space="preserve">
          <source>You can attach a warning to a function, class, type, or data constructor, with the following top-level declarations:</source>
          <target state="translated">К функции,классу,типу или конструктору данных можно прикрепить предупреждение со следующими декларациями верхнего уровня:</target>
        </trans-unit>
        <trans-unit id="f496445edbfd2209c4adb64a23b8653fa9374d16" translate="yes" xml:space="preserve">
          <source>You can build Haskell code into a shared library and make a package to be used by other Haskell programs. The easiest way is using Cabal, simply configure the Cabal package with the &lt;code&gt;--enable-shared&lt;/code&gt; flag.</source>
          <target state="translated">Вы можете встроить код Haskell в общую библиотеку и сделать пакет, который будет использоваться другими программами Haskell. Самый простой способ - использовать Cabal, просто настройте пакет Cabal с флагом &lt;code&gt;--enable-shared&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84f62a92315cdce6616bfcedb52e44f10633e662" translate="yes" xml:space="preserve">
          <source>You can change the messages printed when the runtime system &amp;ldquo;blows up,&amp;rdquo; e.g., on stack overflow. The hooks for these are as follows:</source>
          <target state="translated">Вы можете изменить сообщения, выводимые при &amp;laquo;взрыве&amp;raquo; исполняющей системы, например, при переполнении стека. Крючки для них следующие:</target>
        </trans-unit>
        <trans-unit id="0d971c05fa641eaafca23d1a4589109ee786b1b8" translate="yes" xml:space="preserve">
          <source>You can check if your GHC is unregisterised by calling &lt;code&gt;ghc --info&lt;/code&gt; (see &lt;a href=&quot;using#ghc-flag---info&quot;&gt;&lt;code&gt;--info&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Вы можете проверить, не зарегистрирован ли ваш GHC, вызвав &lt;code&gt;ghc --info&lt;/code&gt; (см. &lt;a href=&quot;using#ghc-flag---info&quot;&gt; &lt;code&gt;--info&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4ddf7fef2dbc32cef483b738d74cadfca1ba8b1a" translate="yes" xml:space="preserve">
          <source>You can control GHC&amp;rsquo;s package database stack using the following options:</source>
          <target state="translated">Вы можете управлять стеком базы данных пакетов GHC, используя следующие параметры:</target>
        </trans-unit>
        <trans-unit id="9ad73c7ee3619d8e3b374d0e125dd12d41cec6bc" translate="yes" xml:space="preserve">
          <source>You can define a &lt;code&gt;&lt;a href=&quot;data-bifunctor#t:Bifunctor&quot;&gt;Bifunctor&lt;/a&gt;&lt;/code&gt; by either defining &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; or by defining both &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:second&quot;&gt;second&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вы можете определить &lt;code&gt;&lt;a href=&quot;data-bifunctor#t:Bifunctor&quot;&gt;Bifunctor&lt;/a&gt;&lt;/code&gt; , определив &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; или определив и &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:second&quot;&gt;second&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53d888cce5d1295c1df726fcad67480174d570f2" translate="yes" xml:space="preserve">
          <source>You can disable specific classes, or enable/disable all classes at once:</source>
          <target state="translated">Вы можете отключить определенные классы или включить/выключить все классы сразу:</target>
        </trans-unit>
        <trans-unit id="2fbcd80b12cae4ea9adddbab75b6d400e890e23d" translate="yes" xml:space="preserve">
          <source>You can even implement traverse using foldTree:</source>
          <target state="translated">Вы даже можете реализовать траверс с помощью foldTree:</target>
        </trans-unit>
        <trans-unit id="a260428745d36797e89aab007cfe35565db63b20" translate="yes" xml:space="preserve">
          <source>You can get &lt;code&gt;happy&lt;/code&gt; from &lt;a href=&quot;http://www.haskell.org/happy/&quot;&gt;the Happy Homepage&lt;/a&gt;.</source>
          <target state="translated">Вы можете получить &lt;code&gt;happy&lt;/code&gt; от &lt;a href=&quot;http://www.haskell.org/happy/&quot;&gt;Happy Homepage&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26072251a75edc8b05b0ea7a052c2c2aab0d70e9" translate="yes" xml:space="preserve">
          <source>You can have an unboxed tuple in a pattern binding, thus</source>
          <target state="translated">Вы можете иметь незакрепленный кортеж в переплетении шаблонов,так что</target>
        </trans-unit>
        <trans-unit id="e9c31fd3f547dd66812622d105b2e524f835762e" translate="yes" xml:space="preserve">
          <source>You can however use &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt;, as well as &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt;, to build infinite lazy ByteStrings.</source>
          <target state="translated">Однако вы можете использовать &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt; , а также &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; для создания бесконечных ленивых байтовых строк.</target>
        </trans-unit>
        <trans-unit id="20f45eef250ed5478e99a9bcb99d2a343f22a32e" translate="yes" xml:space="preserve">
          <source>You can however use &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt;, as well as &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt;, to build infinite lazy ByteStrings.</source>
          <target state="translated">Однако вы можете использовать &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cons&quot;&gt;cons&lt;/a&gt;&lt;/code&gt; , а также &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:repeat&quot;&gt;repeat&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; для создания бесконечных ленивых байтовых строк.</target>
        </trans-unit>
        <trans-unit id="7e461b7e374bf4b1ebdad57b113f09b1939fc459" translate="yes" xml:space="preserve">
          <source>You can identify an orphan module by looking in its interface file, &lt;code&gt;M.hi&lt;/code&gt;, using the &lt;code&gt;--show-iface ⟨file⟩&lt;/code&gt;&lt;a href=&quot;using#modes&quot;&gt;mode&lt;/a&gt;. If there is a &lt;code&gt;[orphan module]&lt;/code&gt; on the first line, GHC considers it an orphan module.</source>
          <target state="translated">Вы можете определить модуль сироту, глядя в файле интерфейса, &lt;code&gt;M.hi&lt;/code&gt; , используя &lt;code&gt;--show-iface ⟨file⟩&lt;/code&gt; &lt;a href=&quot;using#modes&quot;&gt;режим&lt;/a&gt; . Если в первой строке есть &lt;code&gt;[orphan module]&lt;/code&gt; , GHC считает его бесхозным модулем.</target>
        </trans-unit>
        <trans-unit id="38974e60b1eeba7a0c51ba486dac9a8715f3e4cb" translate="yes" xml:space="preserve">
          <source>You can include instance declarations as in Haskell; just omit the &amp;ldquo;where&amp;rdquo; part. An instance declaration need not be implemented directly; if an instance can be derived based on instances in the environment, it is considered implemented. For example, the following signature:</source>
          <target state="translated">Вы можете включать объявления экземпляров, как в Haskell; просто опустите часть &amp;laquo;где&amp;raquo;. Объявление экземпляра не обязательно реализовывать напрямую; если экземпляр может быть получен на основе экземпляров в среде, он считается реализованным. Например, следующая подпись:</target>
        </trans-unit>
        <trans-unit id="883238e8f9c1b291d24a7f3127451079919bd8ed" translate="yes" xml:space="preserve">
          <source>You can include instance declarations just as in Haskell; but omit the &amp;ldquo;where&amp;rdquo; part.</source>
          <target state="translated">Вы можете включать объявления экземпляров, как в Haskell; но опустите часть &amp;laquo;где&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="dbe26650bd87158ad61fd3785ea8839ebbef7ad8" translate="yes" xml:space="preserve">
          <source>You can look at particular regions of your profile simply by loading a copy of the &lt;code&gt;.hp&lt;/code&gt; file into a text editor and deleting the unwanted samples. The resulting &lt;code&gt;.hp&lt;/code&gt; file can be run through &lt;code&gt;hp2ps&lt;/code&gt; and viewed or printed.</source>
          <target state="translated">Вы можете просмотреть определенные области своего профиля, просто загрузив копию файла &lt;code&gt;.hp&lt;/code&gt; в текстовый редактор и удалив ненужные образцы. Полученный файл &lt;code&gt;.hp&lt;/code&gt; можно запустить через &lt;code&gt;hp2ps&lt;/code&gt; и просмотреть или распечатать.</target>
        </trans-unit>
        <trans-unit id="0c84e4d34de9122e33e533828fb9f8724a21faac" translate="yes" xml:space="preserve">
          <source>You can make &lt;code&gt;stdin&lt;/code&gt; reset itself after every evaluation by giving GHCi the command &lt;code&gt;:set +r&lt;/code&gt;. This works because &lt;code&gt;stdin&lt;/code&gt; is just a top-level expression that can be reverted to its unevaluated state in the same way as any other top-level expression (CAF).</source>
          <target state="translated">Вы можете сбросить стандартный &lt;code&gt;stdin&lt;/code&gt; после каждой оценки, дав GHCi команду &lt;code&gt;:set +r&lt;/code&gt; . Это работает, потому что &lt;code&gt;stdin&lt;/code&gt; - это просто выражение верхнего уровня, которое можно вернуть в неоцененное состояние так же, как и любое другое выражение верхнего уровня (CAF).</target>
        </trans-unit>
        <trans-unit id="e642c86265941a9874870fbd23a160343b970a77" translate="yes" xml:space="preserve">
          <source>You can make GHC diverge by using &lt;code&gt;SPECIALISE INLINE&lt;/code&gt; on an ordinarily-recursive function.</source>
          <target state="translated">Вы можете заставить GHC расходиться, используя &lt;code&gt;SPECIALISE INLINE&lt;/code&gt; для обычно рекурсивной функции.</target>
        </trans-unit>
        <trans-unit id="d1af34bbd7e2122f7192f46d93908d24a763ec3d" translate="yes" xml:space="preserve">
          <source>You can make code that works with both Haskell 2010 and GHC by:</source>
          <target state="translated">Вы можете сделать код,который работает как с Haskell 2010,так и с GHC:</target>
        </trans-unit>
        <trans-unit id="410bc62782311c49772c6565c53d200146f4a94c" translate="yes" xml:space="preserve">
          <source>You can make code that works with both Haskell98/Haskell2010 and GHC by:</source>
          <target state="translated">Вы можете сделать код,который работает как с Haskell98/Haskell2010,так и с GHC:</target>
        </trans-unit>
        <trans-unit id="acfc22cad2a308c7de056289b725564bbb1e0277" translate="yes" xml:space="preserve">
          <source>You can omit any combination of arguments to the tuple, as in the following</source>
          <target state="translated">Вы можете опустить любую комбинацию аргументов в кортеж,как в следующих случаях</target>
        </trans-unit>
        <trans-unit id="4451b727c18bc51073a4d56eb70e8515e899636b" translate="yes" xml:space="preserve">
          <source>You can only attach to entities declared at top level in the module being compiled, and you can only use unqualified names in the list of entities. A capitalised name, such as &lt;code&gt;T&lt;/code&gt; refers to &lt;em&gt;either&lt;/em&gt; the type constructor &lt;code&gt;T&lt;/code&gt;&lt;em&gt;or&lt;/em&gt; the data constructor &lt;code&gt;T&lt;/code&gt;, or both if both are in scope. If both are in scope, there is currently no way to specify one without the other (c.f. fixities &lt;a href=&quot;#infix-tycons&quot;&gt;Infix type constructors, classes, and type variables&lt;/a&gt;).</source>
          <target state="translated">Вы можете присоединяться только к сущностям, объявленным на верхнем уровне в компилируемом модуле, и вы можете использовать только неквалифицированные имена в списке сущностей. Имя с заглавной буквы, например &lt;code&gt;T&lt;/code&gt; , относится &lt;em&gt;либо&lt;/em&gt; к конструктору типа &lt;code&gt;T&lt;/code&gt; ,&lt;em&gt;либо&lt;/em&gt; к конструктору данных &lt;code&gt;T&lt;/code&gt; , либо к обоим, если оба находятся в области видимости. Если оба находятся в области видимости, в настоящее время нет возможности указать один без другого (cf fixities &lt;a href=&quot;#infix-tycons&quot;&gt;конструкторы типов&lt;/a&gt; Infix , классы и переменные типа ).</target>
        </trans-unit>
        <trans-unit id="f886d18b90cb7daa351868e61fa0d9da62761871" translate="yes" xml:space="preserve">
          <source>You can only run a function at compile time if it is imported from another module &lt;em&gt;that is not part of a mutually-recursive group of modules that includes the module currently being compiled&lt;/em&gt;. Furthermore, all of the modules of the mutually-recursive group must be reachable by non-SOURCE imports from the module where the splice is to be run.</source>
          <target state="translated">Вы можете запустить функцию во время компиляции, только если она импортирована из другого модуля, &lt;em&gt;который не является частью взаимно-рекурсивной группы модулей, включающей модуль, который компилируется в данный момент&lt;/em&gt; . Кроме того, все модули взаимно-рекурсивной группы должны быть доступны для импорта без ИСТОЧНИКА из модуля, в котором будет выполняться монтаж.</target>
        </trans-unit>
        <trans-unit id="2006128483b352bda9f0e5cd0d687c4c8519ed68" translate="yes" xml:space="preserve">
          <source>You can only run a function at compile time if it is imported from another module. That is, you can&amp;rsquo;t define a function in a module, and call it from within a splice in the same module. (It would make sense to do so, but it&amp;rsquo;s hard to implement.)</source>
          <target state="translated">Вы можете запустить функцию во время компиляции, только если она импортирована из другого модуля. То есть вы не можете определить функцию в модуле и вызвать ее из соединения в том же модуле. (В этом есть смысл, но это сложно реализовать.)</target>
        </trans-unit>
        <trans-unit id="0f32acc6c773313553a7cd09864edd18e6cff35d" translate="yes" xml:space="preserve">
          <source>You can package up a complete Haskell program as a DLL, to be called by some external (usually non-Haskell) program. This is usually used to implement plugins and the like, and is described below.</source>
          <target state="translated">Вы можете упаковать полную программу Haskell в виде DLL,которая будет вызвана какой-нибудь внешней (обычно не-Haskell)программой.Обычно это используется для реализации плагинов и т.п.,и описано ниже.</target>
        </trans-unit>
        <trans-unit id="8f1f2284e872267e26710c33db91da1ce9d66612" translate="yes" xml:space="preserve">
          <source>You can read about &lt;a href=&quot;http://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/RecompilationAvoidance&quot;&gt;how all this works&lt;/a&gt; in the GHC commentary.</source>
          <target state="translated">О &lt;a href=&quot;http://ghc.haskell.org/trac/ghc/wiki/Commentary/Compiler/RecompilationAvoidance&quot;&gt;том, как все это работает,&lt;/a&gt; вы можете прочитать в комментарии GHC.</target>
        </trans-unit>
        <trans-unit id="2b48804fb365ae68472ebab1f616e9dd08d1939a" translate="yes" xml:space="preserve">
          <source>You can read about &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/commentary/compiler/recompilation-avoidance&quot;&gt;how all this works&lt;/a&gt; in the GHC commentary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9702340c88d3c9a130465b064633bbe3ada3fe" translate="yes" xml:space="preserve">
          <source>You can read this much like ordinary &lt;code&gt;do&lt;/code&gt;-notation, but with commands in place of monadic expressions. The first line sends the value of &lt;code&gt;x+1&lt;/code&gt; as an input to the arrow &lt;code&gt;f&lt;/code&gt;, and matches its output against &lt;code&gt;y&lt;/code&gt;. In the next line, the output is discarded. The arrow &lt;code&gt;returnA&lt;/code&gt; is defined in the &lt;a href=&quot;../libraries/base-4.13.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; module as &lt;code&gt;arr id&lt;/code&gt;. The above example is treated as an abbreviation for</source>
          <target state="translated">Вы можете читать это так же, как обычную &lt;code&gt;do&lt;/code&gt; - нотацию, но с командами вместо монадических выражений. Первая строка отправляет значение &lt;code&gt;x+1&lt;/code&gt; в качестве ввода для стрелки &lt;code&gt;f&lt;/code&gt; и сопоставляет его вывод с &lt;code&gt;y&lt;/code&gt; . В следующей строке вывод отбрасывается. Стрелка &lt;code&gt;returnA&lt;/code&gt; определена в модуле &lt;a href=&quot;../libraries/base-4.13.0.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; как &lt;code&gt;arr id&lt;/code&gt; . Приведенный выше пример рассматривается как сокращение для</target>
        </trans-unit>
        <trans-unit id="e35a1b51b1f66368a4527f3e02178b039c453864" translate="yes" xml:space="preserve">
          <source>You can read this much like ordinary &lt;code&gt;do&lt;/code&gt;-notation, but with commands in place of monadic expressions. The first line sends the value of &lt;code&gt;x+1&lt;/code&gt; as an input to the arrow &lt;code&gt;f&lt;/code&gt;, and matches its output against &lt;code&gt;y&lt;/code&gt;. In the next line, the output is discarded. The arrow &lt;code&gt;returnA&lt;/code&gt; is defined in the &lt;a href=&quot;../libraries/base-4.14.1.0/control-arrow&quot;&gt;Control.Arrow&lt;/a&gt; module as &lt;code&gt;arr id&lt;/code&gt;. The above example is treated as an abbreviation for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e72e813532509ba13800f35b2a255158378cdcd" translate="yes" xml:space="preserve">
          <source>You can safely replace all the import declarations in &lt;code&gt;&lt;em&gt;M&lt;/em&gt;.hs&lt;/code&gt; with those found in its respective &lt;code&gt;.imports&lt;/code&gt; file. Why would you want to do that? Because the &amp;ldquo;minimal&amp;rdquo; imports (a) import everything explicitly, by name, and (b) import nothing that is not required. It can be quite painful to maintain this property by hand, so this flag is intended to reduce the labour.</source>
          <target state="translated">Вы можете безопасно заменить все объявления импорта в &lt;code&gt;&lt;em&gt;M&lt;/em&gt;.hs&lt;/code&gt; объявлениями из соответствующего файла &lt;code&gt;.imports&lt;/code&gt; . Почему вы хотите это сделать? Поскольку &amp;laquo;минимальный&amp;raquo; импорт (а) импортирует все явно, по имени и (б) не импортирует ничего, что не требуется. Поддерживать это свойство вручную может быть довольно болезненно, поэтому этот флажок предназначен для уменьшения трудозатрат.</target>
        </trans-unit>
        <trans-unit id="2311eafd5220e927965cb0ade033a0464e40e05e" translate="yes" xml:space="preserve">
          <source>You can save &lt;code&gt;Main.hs&lt;/code&gt; anywhere you like, but if you save it somewhere other than the current directory &lt;a href=&quot;#id7&quot; id=&quot;id6&quot;&gt;3&lt;/a&gt; then we will need to change to the right directory in GHCi:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d11ab0fd694aaac48c2e11aa4e207640df0eae3" translate="yes" xml:space="preserve">
          <source>You can save &lt;code&gt;Main.hs&lt;/code&gt; anywhere you like, but if you save it somewhere other than the current directory &lt;a href=&quot;#id7&quot; id=&quot;id6&quot;&gt;[3]&lt;/a&gt; then we will need to change to the right directory in GHCi:</source>
          <target state="translated">Вы можете сохранить &lt;code&gt;Main.hs&lt;/code&gt; где угодно, но если вы сохраните его где-нибудь, кроме текущего каталога &lt;a href=&quot;#id7&quot; id=&quot;id6&quot;&gt;[3],&lt;/a&gt; тогда нам нужно будет перейти в правильный каталог в GHCi:</target>
        </trans-unit>
        <trans-unit id="ee71858b230e5297e34b408df25cee981faf2858" translate="yes" xml:space="preserve">
          <source>You can suppress the warnings with the flag &lt;a href=&quot;using-warnings#ghc-flag--Wwarnings-deprecations&quot;&gt;&lt;code&gt;-Wno-warnings-deprecations&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Вы можете подавить предупреждения с помощью флага &lt;a href=&quot;using-warnings#ghc-flag--Wwarnings-deprecations&quot;&gt; &lt;code&gt;-Wno-warnings-deprecations&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5b5b508f9d570be456fe99f9c95ddc6eecec794" translate="yes" xml:space="preserve">
          <source>You can turn each Haskell package into a DLL, so that multiple Haskell executables using the same packages can share the DLL files. (As opposed to linking the libraries statically, which in effect creates a new copy of the RTS and all libraries for each executable produced.)</source>
          <target state="translated">Вы можете превратить каждый пакет Haskell в DLL,чтобы несколько исполняемых файлов Haskell,использующих одни и те же пакеты,могли совместно использовать файлы DLL.(В отличие от статического связывания библиотек,которое,по сути,создает новую копию RTS и всех библиотек для каждого создаваемого исполняемого файла).</target>
        </trans-unit>
        <trans-unit id="6a0144c3e2ac0c6bb9606a34c0cd2ffa74b49390" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;a href=&quot;data-time-clock-posix#t:POSIXTime&quot;&gt;POSIXTime&lt;/a&gt;&lt;/code&gt; to obtain integer/word timestamps. For example:</source>
          <target state="translated">Вы можете использовать &lt;code&gt;&lt;a href=&quot;data-time-clock-posix#t:POSIXTime&quot;&gt;POSIXTime&lt;/a&gt;&lt;/code&gt; для получения временных меток целых чисел или слов. Например:</target>
        </trans-unit>
        <trans-unit id="fbf78f5184b54413fec2edf8ed7eaa43cd191246" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;deriving&lt;/code&gt; clause on a &lt;code&gt;data instance&lt;/code&gt; or &lt;code&gt;newtype instance&lt;/code&gt; declaration.</source>
          <target state="translated">Вы можете использовать &lt;code&gt;deriving&lt;/code&gt; предложение для &lt;code&gt;data instance&lt;/code&gt; или объявления экземпляра &lt;code&gt;newtype instance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4aac8ca00f383844bd9a5a98bae02690f26dd140" translate="yes" xml:space="preserve">
          <source>You can use a &lt;code&gt;deriving&lt;/code&gt; clause on a GADT-style data type declaration. For example, these two declarations are equivalent</source>
          <target state="translated">Вы можете использовать &lt;code&gt;deriving&lt;/code&gt; предложение в объявлении типа данных в стиле GADT. Например, эти два объявления эквивалентны</target>
        </trans-unit>
        <trans-unit id="243f575d20a545ebc20c87833a714937518039c5" translate="yes" xml:space="preserve">
          <source>You can use an external main function if you initialize the RTS manually and pass &lt;code&gt;-no-hs-main&lt;/code&gt;. See also &lt;a href=&quot;ffi-chap#using-own-main&quot;&gt;Using your own main()&lt;/a&gt;.</source>
          <target state="translated">Вы можете использовать внешнюю функцию main, если инициализируете RTS вручную и передаете &lt;code&gt;-no-hs-main&lt;/code&gt; . См. Также &lt;a href=&quot;ffi-chap#using-own-main&quot;&gt;Использование собственного main ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e680225c09eb0b9138a98df5d3c63c9df7449b8c" translate="yes" xml:space="preserve">
          <source>You can use record syntax on a GADT-style data type declaration:</source>
          <target state="translated">Синтаксис записи можно использовать при объявлении типа данных в стиле GADT:</target>
        </trans-unit>
        <trans-unit id="409585b916d348cb201d92711807df5aad400581" translate="yes" xml:space="preserve">
          <source>You can use renaming to provide an alternate prelude, e.g. &lt;code&gt;-hide-all-packages -package &quot;basic-prelude (BasicPrelude as Prelude)&quot;&lt;/code&gt;, in lieu of the &lt;a href=&quot;glasgow_exts#rebindable-syntax&quot;&gt;Rebindable syntax and the implicit Prelude import&lt;/a&gt; extension.</source>
          <target state="translated">Вы можете использовать переименование для предоставления альтернативной прелюдии, например &lt;code&gt;-hide-all-packages -package &quot;basic-prelude (BasicPrelude as Prelude)&quot;&lt;/code&gt; вместо &lt;a href=&quot;glasgow_exts#rebindable-syntax&quot;&gt;синтаксиса Rebindable и неявного&lt;/a&gt; расширения импорта Prelude .</target>
        </trans-unit>
        <trans-unit id="34cd599ca69b1635630c1789384078026b1631bc" translate="yes" xml:space="preserve">
          <source>You can use strictness annotations, in the obvious places in the constructor type:</source>
          <target state="translated">Можно использовать примечания к строчности,в очевидных местах типа конструктора:</target>
        </trans-unit>
        <trans-unit id="ed972027c3bec7c1eb51e6a5766ee6c2d7ade065" translate="yes" xml:space="preserve">
          <source>You can work on an entire module thus:</source>
          <target state="translated">Таким образом,Вы можете работать над целым модулем:</target>
        </trans-unit>
        <trans-unit id="bf48999c2bd9335885a5b2d5518e8a1da408a898" translate="yes" xml:space="preserve">
          <source>You can wrap a series of foreign function calls that rely on thread-local state with &lt;code&gt;runInBoundThread&lt;/code&gt; so that you can use them without knowing whether the current thread is &lt;em&gt;bound&lt;/em&gt;.</source>
          <target state="translated">Вы можете обернуть серию вызовов внешних функций, которые зависят от локального состояния &lt;code&gt;runInBoundThread&lt;/code&gt; с помощью runInBoundThread, чтобы вы могли использовать их, не зная, &lt;em&gt;привязан&lt;/em&gt; ли текущий поток .</target>
        </trans-unit>
        <trans-unit id="01f309884997472a9a1052740889026ae8bf67aa" translate="yes" xml:space="preserve">
          <source>You can write a &lt;code&gt;forall&lt;/code&gt; (including overloading) in a type synonym, thus:</source>
          <target state="translated">Вы можете написать &lt;code&gt;forall&lt;/code&gt; (включая перегрузку) в синоним типа, таким образом:</target>
        </trans-unit>
        <trans-unit id="4c8f6089007a930f61ef159774cdb1a472069313" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t have an implicit parameter in the context of a class or instance declaration. For example, both these declarations are illegal:</source>
          <target state="translated">У вас не может быть неявного параметра в контексте объявления класса или экземпляра. Например, оба этих объявления являются незаконными:</target>
        </trans-unit>
        <trans-unit id="4de126d4c7a597b1d236ebb25b9bb6637ffa49d2" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t pattern-match on an existentially quantified constructor in a &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;where&lt;/code&gt; group of bindings. So this is illegal:</source>
          <target state="translated">Вы не можете сопоставить шаблон для экзистенциально количественно определяемого конструктора в &lt;code&gt;let&lt;/code&gt; или &lt;code&gt;where&lt;/code&gt; группе привязок. Итак, это незаконно:</target>
        </trans-unit>
        <trans-unit id="c72ea2d044d7e8facee1aae8ded417fac4a31d3f" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use &lt;code&gt;deriving&lt;/code&gt; to define instances of a data type with existentially quantified data constructors. Reason: in most cases it would not make sense. For example:;</source>
          <target state="translated">Вы не можете использовать &lt;code&gt;deriving&lt;/code&gt; для определения экземпляров типа данных с помощью конструкторов данных с количественной оценкой существования. Причина: в большинстве случаев это не имеет смысла. Например:;</target>
        </trans-unit>
        <trans-unit id="f58bc414fc59408f4615033fa5f4af7c26c36eb5" translate="yes" xml:space="preserve">
          <source>You can&amp;rsquo;t use existential quantification for &lt;code&gt;newtype&lt;/code&gt; declarations. So this is illegal:</source>
          <target state="translated">Вы не можете использовать количественную оценку существования для объявлений &lt;code&gt;newtype&lt;/code&gt; . Итак, это незаконно:</target>
        </trans-unit>
        <trans-unit id="3b5cdddee5d2f5aa4dc4f653d99b00c57d60b7ea" translate="yes" xml:space="preserve">
          <source>You cannot bind a variable with an unboxed type in a &lt;em&gt;recursive&lt;/em&gt; binding.</source>
          <target state="translated">Невозможно связать переменную с распакованным типом в &lt;em&gt;рекурсивной&lt;/em&gt; привязке.</target>
        </trans-unit>
        <trans-unit id="8fc0d15dc8ae90bf550f66d4910d3cffc3b11e0a" translate="yes" xml:space="preserve">
          <source>You cannot bind a variable with an unboxed type in a &lt;em&gt;top-level&lt;/em&gt; binding.</source>
          <target state="translated">Невозможно связать переменную с распакованным типом в привязке &lt;em&gt;верхнего уровня&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2b1b59bb7b1256234d2e287ed8419a725eea98b4" translate="yes" xml:space="preserve">
          <source>You cannot define a newtype whose representation type (the argument type of the data constructor) is an unboxed type. Thus, this is illegal:</source>
          <target state="translated">Нельзя определить новый тип,тип представления (тип аргумента конструктора данных)которого является необъявленным типом.Таким образом,это противозаконно:</target>
        </trans-unit>
        <trans-unit id="53d57a9a763d91b8c3c30f9e88b44d16989b4ef8" translate="yes" xml:space="preserve">
          <source>You cannot use &lt;code&gt;deriving&lt;/code&gt; on a data type declaration; write an &lt;code&gt;instance&lt;/code&gt; declaration instead.</source>
          <target state="translated">Вы не можете использовать &lt;code&gt;deriving&lt;/code&gt; для объявления типа данных; вместо этого напишите объявление &lt;code&gt;instance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c32b374e885a0b6d9cb00079f7e8613d4b04f29" translate="yes" xml:space="preserve">
          <source>You cannot use a &lt;code&gt;deriving&lt;/code&gt; clause for a GADT; only for an ordinary data type.</source>
          <target state="translated">Вы не можете использовать &lt;code&gt;deriving&lt;/code&gt; предложение для GADT; только для обычного типа данных.</target>
        </trans-unit>
        <trans-unit id="30dbefdf45ec49645c5f83a96844f0e523320cd0" translate="yes" xml:space="preserve">
          <source>You cannot write &lt;code&gt;GMapKey(type GMap(..))&lt;/code&gt; &amp;mdash; i.e., sub-component specifications cannot be nested. To specify &lt;code&gt;GMap&lt;/code&gt;&amp;lsquo;s data constructors, you have to list it separately.</source>
          <target state="translated">Вы не можете написать &lt;code&gt;GMapKey(type GMap(..))&lt;/code&gt; т. Е. Спецификации субкомпонентов не могут быть вложенными. Чтобы указать &lt;code&gt;GMap&lt;/code&gt; конструкторов данных &amp;laquo;s, вы должны перечислить его отдельно.</target>
        </trans-unit>
        <trans-unit id="504d8482be9fb213017caf5dad95956603bd628a" translate="yes" xml:space="preserve">
          <source>You cannot write &lt;code&gt;GMapKey(type GMap(..))&lt;/code&gt; &amp;mdash; i.e., sub-component specifications cannot be nested. To specify &lt;code&gt;GMap&lt;/code&gt;&amp;rsquo;s data constructors, you have to list it separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801821aa8abcdb27ec906dde72beecfda446438f" translate="yes" xml:space="preserve">
          <source>You construct values of types &lt;code&gt;T1, MonadT, Swizzle&lt;/code&gt; by applying the constructor to suitable values, just as usual. For example,</source>
          <target state="translated">Вы &lt;code&gt;T1, MonadT, Swizzle&lt;/code&gt; значения типов T1, MonadT, Swizzle, как обычно , применяя конструктор к подходящим значениям. Например,</target>
        </trans-unit>
        <trans-unit id="35e2c1cf685c898a2ffd48135532e04038f5cd4e" translate="yes" xml:space="preserve">
          <source>You could also refactor to a left-fold, to decode in a more streaming fashion, and get the following decoder. It will start to return data without knowing that it can decode all input.</source>
          <target state="translated">Вы также можете рефракционировать в левую сторону,чтобы декодировать в более потоковом режиме,и получить следующий декодер.Он начнет возвращать данные,не зная,что может декодировать все входные данные.</target>
        </trans-unit>
        <trans-unit id="71ec1076802c7edea768f5f032750297cd230b60" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t have to write a &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">Вам не нужно писать &lt;code&gt;Makefile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="672d8bd48c35b0238c3a6248aa09088d6f74bcfe" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to give a type signature if the lambda bound variable is a constructor argument. Here is an example we saw earlier:</source>
          <target state="translated">Вам не нужно указывать сигнатуру типа, если связанная лямбда-переменная является аргументом конструктора. Вот пример, который мы видели ранее:</target>
        </trans-unit>
        <trans-unit id="e18c34733b256b9593b5ee6ff19c7fc0070729c9" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to use &lt;code&gt;-fprof-auto&lt;/code&gt; for interpreted modules, annotations are automatically added at a granularity fine enough to distinguish individual call sites. However, you won&amp;rsquo;t see any call stack information for compiled code unless it was compiled with &lt;code&gt;-fprof-auto&lt;/code&gt; or has explicit &lt;code&gt;SCC&lt;/code&gt; annotations (see &lt;a href=&quot;profiling#scc-pragma&quot;&gt;Inserting cost centres by hand&lt;/a&gt;).</source>
          <target state="translated">Вам не нужно использовать &lt;code&gt;-fprof-auto&lt;/code&gt; для интерпретируемых модулей, аннотации автоматически добавляются с достаточной степенью детализации, чтобы различать отдельные сайты вызовов. Однако вы не увидите никакой информации о стеке вызовов для скомпилированного кода, если он не был скомпилирован с помощью &lt;code&gt;-fprof-auto&lt;/code&gt; или не имеет явных аннотаций &lt;code&gt;SCC&lt;/code&gt; (см. &lt;a href=&quot;profiling#scc-pragma&quot;&gt;Вставка центров затрат вручную&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="31b23007442846d8966d8b9c7845ac06100f1b24" translate="yes" xml:space="preserve">
          <source>You get &lt;code&gt;:type 3&lt;/code&gt;</source>
          <target state="translated">Вы получаете &lt;code&gt;:type 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5ece0b208425f5c34d6d99b2faf1ff3266b3af5" translate="yes" xml:space="preserve">
          <source>You get &lt;code&gt;:type 3&lt;/code&gt; with your defined macro, not the builtin.</source>
          <target state="translated">Вы получите &lt;code&gt;:type 3&lt;/code&gt; с вашим определенным макросом, а не со встроенным.</target>
        </trans-unit>
        <trans-unit id="55bf28bc378f0c361c15d24c0484d765d31cbd6c" translate="yes" xml:space="preserve">
          <source>You get &lt;code&gt;:type 3&lt;/code&gt; with your defined macro.</source>
          <target state="translated">Вы получите &lt;code&gt;:type 3&lt;/code&gt; с вашим определенным макросом.</target>
        </trans-unit>
        <trans-unit id="351ad6e5432243b3e78e9a641aceba23d847888a" translate="yes" xml:space="preserve">
          <source>You have a macro &lt;code&gt;:time&lt;/code&gt; and a macro &lt;code&gt;:type&lt;/code&gt;, and enter &lt;code&gt;:t 3&lt;/code&gt;</source>
          <target state="translated">У вас есть макрос &lt;code&gt;:time&lt;/code&gt; и макрос &lt;code&gt;:type&lt;/code&gt; и введите &lt;code&gt;:t 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b967e14a3b2c88438d391b51a97e44abc37b8a3" translate="yes" xml:space="preserve">
          <source>You have a macro &lt;code&gt;:time&lt;/code&gt; and enter &lt;code&gt;:t 3&lt;/code&gt;</source>
          <target state="translated">У вас есть макрос &lt;code&gt;:time&lt;/code&gt; и введите &lt;code&gt;:t 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e64bb8bb775010f86695f2cafd801d4cc29f97f" translate="yes" xml:space="preserve">
          <source>You have a macro &lt;code&gt;:type&lt;/code&gt; and enter &lt;code&gt;:t 3&lt;/code&gt;</source>
          <target state="translated">У вас есть макрос &lt;code&gt;:type&lt;/code&gt; и введите &lt;code&gt;:t 3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c5292c5b2bc0c1ca9d4ca9e4d5b25bbd9e291c2" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;pattern&lt;/code&gt; keyword in an import/export specification to import or export an ordinary data constructor. For example:</source>
          <target state="translated">Вы также можете использовать ключевое слово &lt;code&gt;pattern&lt;/code&gt; в спецификации импорта / экспорта для импорта или экспорта обычного конструктора данных. Например:</target>
        </trans-unit>
        <trans-unit id="b74a8315c09d21b66a862d09b6cf623f9312b66e" translate="yes" xml:space="preserve">
          <source>You may also write an explicit exponent, which is similar to the exponent in decimal notation with the following differences: - the exponent begins with &lt;code&gt;p&lt;/code&gt; instead of &lt;code&gt;e&lt;/code&gt; - the exponent is written in base &lt;code&gt;10&lt;/code&gt; (&lt;strong&gt;not&lt;/strong&gt; 16) - the base of the exponent is &lt;code&gt;2&lt;/code&gt; (&lt;strong&gt;not&lt;/strong&gt; 16).</source>
          <target state="translated">Вы также можете написать явную экспоненту, которая похожа на показатель в десятичной системе счисления со следующими отличиями: - показатель степени начинается с &lt;code&gt;p&lt;/code&gt; вместо &lt;code&gt;e&lt;/code&gt; - показатель степени записывается с основанием &lt;code&gt;10&lt;/code&gt; ( &lt;strong&gt;не&lt;/strong&gt; 16) - основанием показателя степени является &lt;code&gt;2&lt;/code&gt; (а &lt;strong&gt;не&lt;/strong&gt; 16).</target>
        </trans-unit>
        <trans-unit id="8707d0873e271cfc9458fd1a9219b507929f88d1" translate="yes" xml:space="preserve">
          <source>You may bind unboxed variables in a (non-recursive, non-top-level) pattern binding, but you must make any such pattern-match strict. (Failing to do so emits a warning &lt;a href=&quot;using-warnings#ghc-flag--Wunbanged-strict-patterns&quot;&gt;&lt;code&gt;-Wunbanged-strict-patterns&lt;/code&gt;&lt;/a&gt;.) For example, rather than:</source>
          <target state="translated">Вы можете связать распакованные переменные в привязке шаблона (нерекурсивной, не верхнего уровня), но вы должны сделать любое такое соответствие шаблону строгим. (В противном случае &lt;a href=&quot;using-warnings#ghc-flag--Wunbanged-strict-patterns&quot;&gt; &lt;code&gt;-Wunbanged-strict-patterns&lt;/code&gt; &lt;/a&gt; предупреждение -Wunbanged-strict-patterns .) Например, вместо:</target>
        </trans-unit>
        <trans-unit id="e5864b6382b64fb2ddff9a22e3cb269048cd1a65" translate="yes" xml:space="preserve">
          <source>You may not mix implicit-parameter bindings with ordinary bindings in a single &lt;code&gt;let&lt;/code&gt; expression; use two nested &lt;code&gt;let&lt;/code&gt;s instead. (In the case of &lt;code&gt;where&lt;/code&gt; you are stuck, since you can&amp;rsquo;t nest &lt;code&gt;where&lt;/code&gt; clauses.)</source>
          <target state="translated">Нельзя смешивать привязки неявных параметров с обычными привязками в одном выражении &lt;code&gt;let&lt;/code&gt; ; вместо этого используйте два вложенных &lt;code&gt;let&lt;/code&gt; . (В случае, &lt;code&gt;where&lt;/code&gt; вы застряли, поскольку вы не можете вкладывать предложения &lt;code&gt;where&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="8a15b835542506de56c4f0581f50dc84443c25f1" translate="yes" xml:space="preserve">
          <source>You may omit the &lt;code&gt;$(...)&lt;/code&gt; in a top-level declaration splice. Simply writing an expression (rather than a declaration) implies a splice. For example, you can write</source>
          <target state="translated">Вы можете опустить &lt;code&gt;$(...)&lt;/code&gt; в объединении объявления верхнего уровня. Простое написание выражения (а не объявления) подразумевает склейку. Например, вы можете написать</target>
        </trans-unit>
        <trans-unit id="2a2636e1eccaa733c43b723cac9f02b969f1c6f5" translate="yes" xml:space="preserve">
          <source>You may put multiple implicit-parameter bindings in a single binding group; but they are &lt;em&gt;not&lt;/em&gt; treated as a mutually recursive group (as ordinary &lt;code&gt;let&lt;/code&gt; bindings are). Instead they are treated as a non-recursive group, simultaneously binding all the implicit parameter. The bindings are not nested, and may be re-ordered without changing the meaning of the program. For example, consider:</source>
          <target state="translated">Вы можете поместить несколько привязок неявных параметров в одну группу привязки; но они &lt;em&gt;не&lt;/em&gt; рассматриваются как взаимно рекурсивная группа (как обычные привязки &lt;code&gt;let&lt;/code&gt; ). Вместо этого они рассматриваются как нерекурсивная группа, одновременно связывающая все неявные параметры. Привязки не вложены друг в друга и могут быть переупорядочены без изменения смысла программы. Например, рассмотрим:</target>
        </trans-unit>
        <trans-unit id="69c2bcd249a51f493b6d8defcfa352db2fe97573" translate="yes" xml:space="preserve">
          <source>You may specify an explicit &lt;em&gt;pattern signature&lt;/em&gt;, as we did for &lt;code&gt;ExNumPat&lt;/code&gt; above, to specify the type of a pattern, just as you can for a function. As usual, the type signature can be less polymorphic than the inferred type. For example</source>
          <target state="translated">Вы можете указать явную &lt;em&gt;сигнатуру шаблона&lt;/em&gt; , как мы сделали для &lt;code&gt;ExNumPat&lt;/code&gt; выше, чтобы указать тип шаблона, так же, как вы можете для функции. Как обычно, сигнатура типа может быть менее полиморфной, чем предполагаемый тип. Например</target>
        </trans-unit>
        <trans-unit id="e235042667b9c56eb4698542652a4ffe747fce1f" translate="yes" xml:space="preserve">
          <source>You may specify that a different program be used for one of the phases of the compilation system, in place of whatever the &lt;code&gt;ghc&lt;/code&gt; has wired into it. For example, you might want to try a different assembler. The following options allow you to change the external program used for a given compilation phase:</source>
          <target state="translated">Вы можете указать, что на одной из фаз системы компиляции будет использоваться другая программа вместо того, что &lt;code&gt;ghc&lt;/code&gt; подключил к ней. Например, вы можете попробовать другой ассемблер. Следующие параметры позволяют вам изменить внешнюю программу, используемую на данном этапе компиляции:</target>
        </trans-unit>
        <trans-unit id="ffee81bdfe61682f0576300599ea43f154d0f848" translate="yes" xml:space="preserve">
          <source>You may want to enable this warning on a clean build or enable &lt;a href=&quot;separate_compilation#ghc-flag--fforce-recomp&quot;&gt;&lt;code&gt;-fforce-recomp&lt;/code&gt;&lt;/a&gt; in order to get reliable results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c11ae553a6507ead096463536fbbb081dce0652" translate="yes" xml:space="preserve">
          <source>You may write programs that use exotic sorts of constraints in instance contexts and superclasses, but to do so you must use &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt;&lt;code&gt;UndecidableInstances&lt;/code&gt;&lt;/a&gt; to signal that you don&amp;rsquo;t mind if the type checker fails to terminate.</source>
          <target state="translated">Вы можете писать программы, которые используют экзотические виды ограничений в контекстах и ​​суперклассах экземпляров, но для этого вы должны использовать &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt; &lt;code&gt;UndecidableInstances&lt;/code&gt; ,&lt;/a&gt; чтобы сигнализировать, что вы не возражаете, если проверка типов не завершится.</target>
        </trans-unit>
        <trans-unit id="d9ac328de126bafdb81fd66142c9606ef9f2bba1" translate="yes" xml:space="preserve">
          <source>You might also want to take a look at &lt;a href=&quot;http://www.haskell.org/haskellwiki/Hp2any&quot;&gt;hp2any&lt;/a&gt;, a more advanced suite of tools (not distributed with GHC) for displaying heap profiles.</source>
          <target state="translated">Вы также можете взглянуть на &lt;a href=&quot;http://www.haskell.org/haskellwiki/Hp2any&quot;&gt;hp2any&lt;/a&gt; , более продвинутый набор инструментов (не распространяемый с GHC) для отображения профилей кучи.</target>
        </trans-unit>
        <trans-unit id="1723e9eaca2c46aa402d493c6d51826bd13e2dec" translate="yes" xml:space="preserve">
          <source>You might find it useful to use Haskell&amp;rsquo;s &lt;code&gt;seq&lt;/code&gt; function to evaluate individual thunks rather than evaluating the whole expression with &lt;a href=&quot;#ghci-cmd-:force&quot;&gt;&lt;code&gt;:force&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="translated">Возможно, вам будет полезно использовать функцию &lt;code&gt;seq&lt;/code&gt; в Haskell для оценки отдельных преобразователей, а не для оценки всего выражения с помощью &lt;a href=&quot;#ghci-cmd-:force&quot;&gt; &lt;code&gt;:force&lt;/code&gt; &lt;/a&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="8b2b2c5879599e9fb9784f8ece7db05367147809" translate="yes" xml:space="preserve">
          <source>You might want to use this if you are you have a type class method which returns a constrained type. For example, a type class where one of the methods implements a traversal.</source>
          <target state="translated">Возможно,вы захотите использовать этот метод,если у вас есть метод класса типа,который возвращает ограниченный тип.Например,класс типа,в котором один из методов реализует обход.</target>
        </trans-unit>
        <trans-unit id="7ca17a83d89102130bc3fbe2303f1ff784f0cd26" translate="yes" xml:space="preserve">
          <source>You must install and have LLVM available on your &lt;code&gt;PATH&lt;/code&gt; for the LLVM code generator to work. Specifically GHC needs to be able to call the &lt;code&gt;opt&lt;/code&gt; and &lt;code&gt;llc&lt;/code&gt; tools. Secondly, if you are running Mac OS X with LLVM 3.0 or greater then you also need the &lt;a href=&quot;http://clang.llvm.org&quot;&gt;Clang C compiler&lt;/a&gt; compiler available on your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">Вы должны установить LLVM и иметь доступный LLVM в вашем &lt;code&gt;PATH&lt;/code&gt; , чтобы генератор кода LLVM работал. В частности, GHC должна иметь возможность вызывать инструменты &lt;code&gt;opt&lt;/code&gt; и &lt;code&gt;llc&lt;/code&gt; . Во-вторых, если вы используете Mac OS X с LLVM 3.0 или выше, вам также понадобится &lt;a href=&quot;http://clang.llvm.org&quot;&gt;компилятор&lt;/a&gt; компилятора Clang C, доступный в вашем &lt;code&gt;PATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7848640f49a2013635063f5f2a65c426e3adec48" translate="yes" xml:space="preserve">
          <source>You need this when using &lt;code&gt;&lt;a href=&quot;control-exception#v:catches&quot;&gt;catches&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это понадобится вам при использовании &lt;code&gt;&lt;a href=&quot;control-exception#v:catches&quot;&gt;catches&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5e3e8cd42cf48f666040b93e9cb7bcb77de13e8f" translate="yes" xml:space="preserve">
          <source>You need to build an &amp;ldquo;installed package info&amp;rdquo; file for passing to &lt;code&gt;ghc-pkg&lt;/code&gt; when installing your package. The contents of this file are described in &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo: a package specification&lt;/a&gt;.</source>
          <target state="translated">Вам необходимо создать файл с информацией об установленном пакете для передачи в &lt;code&gt;ghc-pkg&lt;/code&gt; при установке вашего пакета. Содержимое этого файла описано в &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo: спецификация пакета&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ecae143bd200467151fc11557c8e8ff56f5c8728" translate="yes" xml:space="preserve">
          <source>You only need to enable this extension if the language you&amp;rsquo;re using is Haskell 98, in which a data type must have at least one constructor. Haskell 2010 relaxed this rule to allow data types with no constructors, and thus &lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt;&lt;code&gt;EmptyDataDecls&lt;/code&gt;&lt;/a&gt; is enabled by default when the language is Haskell 2010.</source>
          <target state="translated">Вам нужно включить это расширение только в том случае, если вы используете язык Haskell 98, в котором тип данных должен иметь хотя бы один конструктор. Haskell 2010 ослабил это правило, чтобы разрешить типы данных без конструкторов, и поэтому &lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt; &lt;code&gt;EmptyDataDecls&lt;/code&gt; &lt;/a&gt; включен по умолчанию, если языком является Haskell 2010.</target>
        </trans-unit>
        <trans-unit id="20e8c6e9c630a979645ea222c79a82dcdd527d41" translate="yes" xml:space="preserve">
          <source>You probably don&amp;rsquo;t need to use this feature, it was added mainly so that we can build backwards-compatible versions of packages when APIs change. It can lead to fragile dependencies in the common case: modules occasionally move from one package to another, rendering any package-qualified imports broken. See also &lt;a href=&quot;packages#package-thinning-and-renaming&quot;&gt;Thinning and renaming modules&lt;/a&gt; for an alternative way of disambiguating between module names.</source>
          <target state="translated">Вероятно, вам не нужно использовать эту функцию, она была добавлена ​​в основном для того, чтобы мы могли создавать обратно совместимые версии пакетов при изменении API. В общем случае это может привести к хрупким зависимостям: модули иногда перемещаются из одного пакета в другой, что приводит к прерыванию импорта, квалифицированного для данного пакета. См. Также &lt;a href=&quot;packages#package-thinning-and-renaming&quot;&gt;Прореживание и переименование модулей,&lt;/a&gt; чтобы узнать об альтернативном способе устранения неоднозначности между именами модулей.</target>
        </trans-unit>
        <trans-unit id="06a8acb7bef4875c53862bd963dfb3bee4782074" translate="yes" xml:space="preserve">
          <source>You should be careful with your installation function, because the list of passes you give back isn&amp;rsquo;t questioned or double checked by GHC at the time of this writing. An installation function like the following:</source>
          <target state="translated">Вы должны быть осторожны с функцией установки, потому что список возвращаемых вами пропусков не подвергается сомнению и не проверяется дважды GHC на момент написания этой статьи. Функция установки, подобная следующей:</target>
        </trans-unit>
        <trans-unit id="c8fb8a0845765453a3b51653e072b1e3775e368f" translate="yes" xml:space="preserve">
          <source>You should not use this module unless you are determined to monkey with the internals, as the functions here do just about nothing to preserve data invariants. You have been warned!</source>
          <target state="translated">Вы не должны использовать этот модуль,если только не настроены на обезьяну с внутренними элементами,так как функции здесь практически ничего не делают для сохранения инвариантов данных.Вы были предупреждены!</target>
        </trans-unit>
        <trans-unit id="e9580720487f8d0a617fa4e79bebc3170cc9fb48" translate="yes" xml:space="preserve">
          <source>You should think of the object file and the interface file as a pair, since the interface file is in a sense a compiler-readable description of the contents of the object file. If the interface file and object file get out of sync for any reason, then the compiler may end up making assumptions about the object file that aren&amp;rsquo;t true; trouble will almost certainly follow. For this reason, we recommend keeping object files and interface files in the same place (GHC does this by default, but it is possible to override the defaults as we&amp;rsquo;ll explain shortly).</source>
          <target state="translated">You should think of the object file and the interface file as a pair, since the interface file is in a sense a compiler-readable description of the contents of the object file. If the interface file and object file get out of sync for any reason, then the compiler may end up making assumptions about the object file that aren&amp;rsquo;t true; trouble will almost certainly follow. For this reason, we recommend keeping object files and interface files in the same place (GHC does this by default, but it is possible to override the defaults as we&amp;rsquo;ll explain shortly).</target>
        </trans-unit>
        <trans-unit id="c015ba62398898e9130e51965530b85d77f20111" translate="yes" xml:space="preserve">
          <source>You will eventually need all the values stored.</source>
          <target state="translated">В конце концов,вам понадобятся все сохраненные значения.</target>
        </trans-unit>
        <trans-unit id="f1f3422827e73aced4dc67f6bd9053292d8032b6" translate="yes" xml:space="preserve">
          <source>You would think that the definition of &lt;code&gt;g&lt;/code&gt; would surely typecheck! After all &lt;code&gt;f&lt;/code&gt; has exactly the same type, and &lt;code&gt;g=f&lt;/code&gt;. But in fact &lt;code&gt;f&lt;/code&gt;&amp;lsquo;s type is instantiated and the instantiated constraints are solved against the constraints bound by &lt;code&gt;g&lt;/code&gt;&amp;lsquo;s signature. So, in the case an ambiguous type, solving will fail. For example, consider the earlier definition &lt;code&gt;f :: C a =&amp;gt; Int&lt;/code&gt;:</source>
          <target state="translated">Вы могли бы подумать, что определение &lt;code&gt;g&lt;/code&gt; определенно будет проверено типом! Ведь &lt;code&gt;f&lt;/code&gt; имеет точно такой же тип, и &lt;code&gt;g=f&lt;/code&gt; . Но на самом деле создается экземпляр типа &lt;code&gt;f&lt;/code&gt; , и созданные экземпляры ограничений решаются относительно ограничений, связанных сигнатурой &lt;code&gt;g&lt;/code&gt; . Итак, в случае неоднозначного типа решение не удастся. Например, рассмотрим более раннее определение &lt;code&gt;f :: C a =&amp;gt; Int&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3bacaebd47954a76b1781e22db7949543ec0e3fb" translate="yes" xml:space="preserve">
          <source>You would think that the definition of &lt;code&gt;g&lt;/code&gt; would surely typecheck! After all &lt;code&gt;f&lt;/code&gt; has exactly the same type, and &lt;code&gt;g=f&lt;/code&gt;. But in fact &lt;code&gt;f&lt;/code&gt;&amp;rsquo;s type is instantiated and the instantiated constraints are solved against the constraints bound by &lt;code&gt;g&lt;/code&gt;&amp;rsquo;s signature. So, in the case an ambiguous type, solving will fail. For example, consider the earlier definition &lt;code&gt;f :: C a =&amp;gt; Int&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82f52f22d9821ac7862aa36528ae6d83fd3c82d" translate="yes" xml:space="preserve">
          <source>Your GHC must have been built with &lt;code&gt;libdw&lt;/code&gt; support for this to work.</source>
          <target state="translated">Чтобы это &lt;code&gt;libdw&lt;/code&gt; ваш GHC должен быть построен с поддержкой libdw .</target>
        </trans-unit>
        <trans-unit id="9519d527689c73f17e39c0b9add443cee365e48f" translate="yes" xml:space="preserve">
          <source>Your code should just work as before when &lt;a href=&quot;#extension-ApplicativeDo&quot;&gt;&lt;code&gt;ApplicativeDo&lt;/code&gt;&lt;/a&gt; is enabled, provided you use conventional &lt;code&gt;Applicative&lt;/code&gt; instances. However, if you define a &lt;code&gt;Functor&lt;/code&gt; or &lt;code&gt;Applicative&lt;/code&gt; instance using do-notation, then it will likely get turned into an infinite loop by GHC. For example, if you do this:</source>
          <target state="translated">Ваш код должен работать, как и раньше, когда &lt;a href=&quot;#extension-ApplicativeDo&quot;&gt; &lt;code&gt;ApplicativeDo&lt;/code&gt; &lt;/a&gt; включен, при условии, что вы используете обычные экземпляры &lt;code&gt;Applicative&lt;/code&gt; . Однако, если вы определяете экземпляр &lt;code&gt;Functor&lt;/code&gt; или &lt;code&gt;Applicative&lt;/code&gt; с использованием do-notation, GHC, скорее всего, превратит его в бесконечный цикл. Например, если вы сделаете это:</target>
        </trans-unit>
        <trans-unit id="a1183986a9ffb1b2af584571ceb4a326e3d27e31" translate="yes" xml:space="preserve">
          <source>Z NOTATION LEFT IMAGE BRACKET</source>
          <target state="translated">ЛЕВАЯ СКОБКА С ОБОЗНАЧЕНИЕМ Z</target>
        </trans-unit>
        <trans-unit id="0c83924bcb1f702fbc698e5e6e9f9116245051fc" translate="yes" xml:space="preserve">
          <source>Z NOTATION RIGHT IMAGE BRACKET</source>
          <target state="translated">КРОНШТЕЙН ИЗОБРАЖЕНИЯ С ПРАВОЙ НОТАЦИЕЙ</target>
        </trans-unit>
        <trans-unit id="9ee13b9d7e56ee129a6f6f181a2acc60f3e30fdb" translate="yes" xml:space="preserve">
          <source>Zero and plus:</source>
          <target state="translated">Ноль и плюс:</target>
        </trans-unit>
        <trans-unit id="e033898555382f2650b269ecbde512101722e511" translate="yes" xml:space="preserve">
          <source>Zero is represented by an empty error and the plus operation executes its second argument if the first fails.</source>
          <target state="translated">Ноль представляет собой пустую ошибку,а операция плюс выполняет свой второй аргумент,если первый не удается.</target>
        </trans-unit>
        <trans-unit id="89ce708b7ebe149f5f5bb556542ed3a714814ce1" translate="yes" xml:space="preserve">
          <source>Zero or more.</source>
          <target state="translated">Ноль или больше.</target>
        </trans-unit>
        <trans-unit id="4f2b9ff1bc4646cc78797dbbfc4b21df6589cf65" translate="yes" xml:space="preserve">
          <source>ZeroPad</source>
          <target state="translated">ZeroPad</target>
        </trans-unit>
        <trans-unit id="2700bd76f0516df842fd9e4abb85f8429575d4af" translate="yes" xml:space="preserve">
          <source>ZigZagMode</source>
          <target state="translated">ZigZagMode</target>
        </trans-unit>
        <trans-unit id="e3c3091702d0663b55dd13e13b164ff519e2737a" translate="yes" xml:space="preserve">
          <source>ZipList</source>
          <target state="translated">ZipList</target>
        </trans-unit>
        <trans-unit id="281d4deef155f3f504d99a312a022a397d572373" translate="yes" xml:space="preserve">
          <source>Zipping</source>
          <target state="translated">Zipping</target>
        </trans-unit>
        <trans-unit id="933679db226a72e96000d73f1c7a880b6ddef5ad" translate="yes" xml:space="preserve">
          <source>Zipping and unzipping</source>
          <target state="translated">Застёгивание и распаковка</target>
        </trans-unit>
        <trans-unit id="005dee8618c3540289989daf3c2e77debf4a260b" translate="yes" xml:space="preserve">
          <source>Zipping and unzipping ByteStrings</source>
          <target state="translated">Застежка-молния и распаковка ByteStrings</target>
        </trans-unit>
        <trans-unit id="30dc05c3a24d302f5746bde459be8a25f4a06e2d" translate="yes" xml:space="preserve">
          <source>Zipping and unzipping lists</source>
          <target state="translated">Списки застежек и распаковок</target>
        </trans-unit>
        <trans-unit id="07d080af9fb55da8f84a8c1fcaee4852c64bdb52" translate="yes" xml:space="preserve">
          <source>Zipping and unzipping streams</source>
          <target state="translated">Потоки застежки-молнии и распаковки</target>
        </trans-unit>
        <trans-unit id="aa0ede24e19b5ea08adf33939b19f9036f4d61de" translate="yes" xml:space="preserve">
          <source>Zips and unzip</source>
          <target state="translated">Застёжки-молнии</target>
        </trans-unit>
        <trans-unit id="826ebf2b3d9d03b6187eb018e001d37252118a80" translate="yes" xml:space="preserve">
          <source>Zl: Separator, Line</source>
          <target state="translated">Зл:Сепаратор,линия</target>
        </trans-unit>
        <trans-unit id="0f9a135b374272cc3038eb482b2ccf2620a381ea" translate="yes" xml:space="preserve">
          <source>ZonedTime</source>
          <target state="translated">ZonedTime</target>
        </trans-unit>
        <trans-unit id="53df64e0f183ed18f2af00a3cd4b1e5f59e3ad75" translate="yes" xml:space="preserve">
          <source>Zp: Separator, Paragraph</source>
          <target state="translated">Зп:Разделитель,параграф</target>
        </trans-unit>
        <trans-unit id="b8543845a37a3bc5a76a7d50c4861b4a9b6ca581" translate="yes" xml:space="preserve">
          <source>Zs: Separator, Space</source>
          <target state="translated">Zs:Разделитель,Пространство</target>
        </trans-unit>
        <trans-unit id="ed9b7c0478a525885fdc0372f59486ef9c26b349" translate="yes" xml:space="preserve">
          <source>[ This is an experimental feature enabled by the new &lt;code&gt;-fexternal-interpreter&lt;/code&gt; flag that was introduced in GHC 8.0.1. It is currently not supported on Windows.]</source>
          <target state="translated">[Это экспериментальная функция, &lt;code&gt;-fexternal-interpreter&lt;/code&gt; благодаря новому флагу -fexternal-интерпретатор, который был представлен в GHC 8.0.1. В настоящее время он не поддерживается в Windows.]</target>
        </trans-unit>
        <trans-unit id="8d3d9a8e3d2cb9184eb7776e15ffceb7ac844db5" translate="yes" xml:space="preserve">
          <source>[AssocDataTypes2005]</source>
          <target state="translated">[AssocDataTypes2005]</target>
        </trans-unit>
        <trans-unit id="3149026df86df09307a54a32b5ebc7072dbf3911" translate="yes" xml:space="preserve">
          <source>[AssocTypeSyn2005]</source>
          <target state="translated">[AssocTypeSyn2005]</target>
        </trans-unit>
        <trans-unit id="27ff8c3223896183bde17540d1a603485152df8f" translate="yes" xml:space="preserve">
          <source>[Example: &lt;code&gt;-n4m&lt;/code&gt; ] When set to a non-zero value, this option divides the allocation area (&lt;code&gt;-A&lt;/code&gt; value) into chunks of the specified size. During execution, when a processor exhausts its current chunk, it is given another chunk from the pool until the pool is exhausted, at which point a collection is triggered.</source>
          <target state="translated">[Пример: &lt;code&gt;-n4m&lt;/code&gt; ] Если задано ненулевое значение, эта опция делит область выделения ( значение &lt;code&gt;-A&lt;/code&gt; ) на фрагменты указанного размера. Во время выполнения, когда процессор исчерпывает свой текущий фрагмент, ему предоставляется еще один фрагмент из пула, пока пул не будет исчерпан, после чего запускается сборка.</target>
        </trans-unit>
        <trans-unit id="fd9c35275c0e496e473d959fc136a682ad3086d9" translate="yes" xml:space="preserve">
          <source>[Generics2010]</source>
          <target state="translated">[Generics2010]</target>
        </trans-unit>
        <trans-unit id="2163465089d2b153e0b8b61b46434eae8e1fe466" translate="yes" xml:space="preserve">
          <source>[Jones1999]</source>
          <target state="translated">[Jones1999]</target>
        </trans-unit>
        <trans-unit id="0c12f0c3c0a3e1aa6318a2e1ca646ed6212245b2" translate="yes" xml:space="preserve">
          <source>[Jones2000]</source>
          <target state="translated">[Jones2000]</target>
        </trans-unit>
        <trans-unit id="5f40289190bf70086cf4ad6fbc3348c060199dc3" translate="yes" xml:space="preserve">
          <source>[Lewis2000]</source>
          <target state="translated">[Lewis2000]</target>
        </trans-unit>
        <trans-unit id="c15f78a0d8a349e988dcf4bdf728980c9aa85b77" translate="yes" xml:space="preserve">
          <source>[TypeFamilies2008]</source>
          <target state="translated">[TypeFamilies2008]</target>
        </trans-unit>
        <trans-unit id="b5891f87311c40fc7e2feb2ed9e6cc0bd4955f76" translate="yes" xml:space="preserve">
          <source>[Vista and later only] The RTS calls the Win32 function &lt;code&gt;CancelSynchronousIo&lt;/code&gt;, which will cause a blocking I/O operation to return with the error &lt;code&gt;ERROR_OPERATION_ABORTED&lt;/code&gt;.</source>
          <target state="translated">[Только для Vista и более поздних &lt;code&gt;CancelSynchronousIo&lt;/code&gt; ] RTS вызывает функцию Win32 CancelSynchronousIo , которая вызывает возврат операции блокирующего ввода-вывода с ошибкой &lt;code&gt;ERROR_OPERATION_ABORTED&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e646f03d1dbd0ea6ebb7f3338bf711149839b070" translate="yes" xml:space="preserve">
          <source>[this is the default setting] Enable only the &amp;ldquo;safe&amp;rdquo; RTS options: (Currently only &lt;code&gt;-?&lt;/code&gt; and &lt;code&gt;--info&lt;/code&gt;.) Any other RTS options on the command line or in the &lt;code&gt;GHCRTS&lt;/code&gt; environment variable causes the program with to abort with an error message.</source>
          <target state="translated">[это настройка по умолчанию] Включить только &amp;laquo;безопасные&amp;raquo; параметры RTS: (В настоящее время только &lt;code&gt;-?&lt;/code&gt; и &lt;code&gt;--info&lt;/code&gt; .) Любые другие параметры RTS в командной строке или в &lt;code&gt;GHCRTS&lt;/code&gt; среды GHCRTS приводят к прерыванию программы с ошибкой сообщение.</target>
        </trans-unit>
        <trans-unit id="34cbcaa3ebb2e1b02bbd040476f4a4192d9188e6" translate="yes" xml:space="preserve">
          <source>\( O(1) \). A singleton sequence.</source>
          <target state="translated">\ (О (1) \). Одноэлементная последовательность.</target>
        </trans-unit>
        <trans-unit id="3b0d6be93c20b18b6a203f57ca8cdd843632dbbc" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Add an element to the left end of a sequence. Mnemonic: a triangle with the single element at the pointy end.</source>
          <target state="translated">\ (О (1) \). Добавьте элемент в левый конец последовательности. Мнемоника: треугольник с единственным элементом на заостренном конце.</target>
        </trans-unit>
        <trans-unit id="e29f0dd89cf4b98d9f9940c595b922a5dd21f994" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Add an element to the right end of a sequence. Mnemonic: a triangle with the single element at the pointy end.</source>
          <target state="translated">\ (О (1) \). Добавьте элемент в правый конец последовательности. Мнемоника: треугольник с единственным элементом на заостренном конце.</target>
        </trans-unit>
        <trans-unit id="e2f5fbbdc003ed6b6112958c18acd9b5bad4a569" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Analyse the left end of a sequence.</source>
          <target state="translated">\ (О (1) \). Проанализируйте левый конец последовательности.</target>
        </trans-unit>
        <trans-unit id="f32019dd1c2a2c3b992da628e1dbb8fca3a9a405" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Analyse the right end of a sequence.</source>
          <target state="translated">\ (О (1) \). Проанализируйте правый конец последовательности.</target>
        </trans-unit>
        <trans-unit id="7b89d619c376ded4ba8029ab80cbbe273480461c" translate="yes" xml:space="preserve">
          <source>\( O(1) \). Is this the empty sequence?</source>
          <target state="translated">\ (О (1) \). Это пустая последовательность?</target>
        </trans-unit>
        <trans-unit id="4043cdf48e14bbc7bef8e182dfe108b0e21704e2" translate="yes" xml:space="preserve">
          <source>\( O(1) \). The empty sequence.</source>
          <target state="translated">\ (О (1) \). Пустая последовательность.</target>
        </trans-unit>
        <trans-unit id="789a94c6e45150494a843083839c99ddbbcbcb8b" translate="yes" xml:space="preserve">
          <source>\( O(1) \). The number of elements in the sequence.</source>
          <target state="translated">\ (О (1) \). Количество элементов в последовательности.</target>
        </trans-unit>
        <trans-unit id="9c9b70cf9a1b94d641385e597a06a4220c6c9d1d" translate="yes" xml:space="preserve">
          <source>\( O(\log n) \). &lt;code&gt;replicate n x&lt;/code&gt; is a sequence consisting of &lt;code&gt;n&lt;/code&gt; copies of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">\ (O (\ журнал п) \). &lt;code&gt;replicate n x&lt;/code&gt; - это последовательность, состоящая из &lt;code&gt;n&lt;/code&gt; копий &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="546ea35cf6dc085674954ee6937f092065e639a0" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:insertAt&quot;&gt;insertAt&lt;/a&gt; i x xs&lt;/code&gt; inserts &lt;code&gt;x&lt;/code&gt; into &lt;code&gt;xs&lt;/code&gt; at the index &lt;code&gt;i&lt;/code&gt;, shifting the rest of the sequence over.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:insertAt&quot;&gt;insertAt&lt;/a&gt; i x xs&lt;/code&gt; вставляет &lt;code&gt;x&lt;/code&gt; в &lt;code&gt;xs&lt;/code&gt; по индексу &lt;code&gt;i&lt;/code&gt; , сдвигая оставшуюся часть последовательности.</target>
        </trans-unit>
        <trans-unit id="0fe577d234433675e32729fdf0c2bc4f8e4d33da" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). A flipped, infix version of &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Перевернутая инфиксная версия &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f1d705d397309f0a39429659216e4009c9399c0" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Delete the element of a sequence at a given index. Return the original sequence if the index is out of range.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Удалить элемент последовательности по заданному индексу. Вернуть исходную последовательность, если индекс вне допустимого диапазона.</target>
        </trans-unit>
        <trans-unit id="5bf003bead51d54a782a3e3daf5bde07395d33e1" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Elements of a sequence after the first &lt;code&gt;i&lt;/code&gt;. If &lt;code&gt;i&lt;/code&gt; is negative, &lt;code&gt;&lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt; i s&lt;/code&gt; yields the whole sequence. If the sequence contains fewer than &lt;code&gt;i&lt;/code&gt; elements, the empty sequence is returned.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Элементы последовательности после первого &lt;code&gt;i&lt;/code&gt; . Если &lt;code&gt;i&lt;/code&gt; отрицательно, &lt;code&gt;&lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt; i s&lt;/code&gt; дает всю последовательность. Если последовательность содержит менее &lt;code&gt;i&lt;/code&gt; элементов, возвращается пустая последовательность.</target>
        </trans-unit>
        <trans-unit id="ca211904aa96b1bd11aefb66842881538beef91d" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Replace the element at the specified position. If the position is out of range, the original sequence is returned.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Заменить элемент в указанной позиции. Если позиция вне допустимого диапазона, возвращается исходная последовательность.</target>
        </trans-unit>
        <trans-unit id="d2ebe26c5fed5338d546b09c50f90bdfc79c5c59" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Split a sequence at a given position. &lt;code&gt;&lt;a href=&quot;data-sequence#v:splitAt&quot;&gt;splitAt&lt;/a&gt; i s = (&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt; i s, &lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt; i s)&lt;/code&gt;.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Разделите последовательность в заданной позиции. &lt;code&gt;&lt;a href=&quot;data-sequence#v:splitAt&quot;&gt;splitAt&lt;/a&gt; i s = (&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt; i s, &lt;a href=&quot;data-sequence#v:drop&quot;&gt;drop&lt;/a&gt; i s)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9982ecf4ad26d9bf2a275e1e35fdb06d9eb20b1" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). The element at the specified position, counting from 0. If the specified position is negative or at least the length of the sequence, &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Элемент в указанной позиции, отсчет от 0. Если указанная позиция отрицательна или равна длине последовательности, &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4d4d2f3cb4b284e3cbd0d7773d4efed269d4097" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). The element at the specified position, counting from 0. If the specified position is negative or at least the length of the sequence, &lt;code&gt;&lt;a href=&quot;data-sequence#v:lookup&quot;&gt;lookup&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532d131357cc364ae609f962dfa852c5ecc94891" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). The element at the specified position, counting from 0. The argument should thus be a non-negative integer less than the size of the sequence. If the position is out of range, &lt;code&gt;&lt;a href=&quot;data-sequence#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; fails with an error.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Элемент в указанной позиции, отсчет от 0. Таким образом, аргумент должен быть неотрицательным целым числом меньше размера последовательности. Если позиция выходит за пределы допустимого диапазона, &lt;code&gt;&lt;a href=&quot;data-sequence#v:index&quot;&gt;index&lt;/a&gt;&lt;/code&gt; не выполняется с ошибкой.</target>
        </trans-unit>
        <trans-unit id="31957683248c73c401120fd6ad1cf601736552c0" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). The first &lt;code&gt;i&lt;/code&gt; elements of a sequence. If &lt;code&gt;i&lt;/code&gt; is negative, &lt;code&gt;&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt; i s&lt;/code&gt; yields the empty sequence. If the sequence contains fewer than &lt;code&gt;i&lt;/code&gt; elements, the whole sequence is returned.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Первые &lt;code&gt;i&lt;/code&gt; элементов последовательности. Если &lt;code&gt;i&lt;/code&gt; отрицательно, &lt;code&gt;&lt;a href=&quot;data-sequence#v:take&quot;&gt;take&lt;/a&gt; i s&lt;/code&gt; возвращает пустую последовательность. Если последовательность содержит менее &lt;code&gt;i&lt;/code&gt; элементов, возвращается вся последовательность.</target>
        </trans-unit>
        <trans-unit id="3751741ea558f6d0bac38a7743eebeac69c91050" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Update the element at the specified position. If the position is out of range, the original sequence is returned. &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust&quot;&gt;adjust&lt;/a&gt;&lt;/code&gt; can lead to poor performance and even memory leaks, because it does not force the new value before installing it in the sequence. &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust-39-&quot;&gt;adjust'&lt;/a&gt;&lt;/code&gt; should usually be preferred.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Обновите элемент в указанной позиции. Если позиция вне допустимого диапазона, возвращается исходная последовательность. &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust&quot;&gt;adjust&lt;/a&gt;&lt;/code&gt; может привести к снижению производительности и даже утечке памяти, поскольку он не принудительно устанавливает новое значение перед его установкой в ​​последовательности. &lt;code&gt;&lt;a href=&quot;data-sequence#v:adjust-39-&quot;&gt;adjust'&lt;/a&gt;&lt;/code&gt; обычно предпочтительнее.</target>
        </trans-unit>
        <trans-unit id="899c0369d8a46c9994ff0ff3c2c10f46f7406360" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(i,n-i))) \). Update the element at the specified position. If the position is out of range, the original sequence is returned. The new value is forced before it is installed in the sequence.</source>
          <target state="translated">\ (O (\ log (\ min (i, ni))) \). Обновите элемент в указанной позиции. Если позиция вне допустимого диапазона, возвращается исходная последовательность. Новое значение принудительно вводится перед установкой в ​​последовательности.</target>
        </trans-unit>
        <trans-unit id="040c9f3a0d532171b25aefd9fcca6a4a01b60888" translate="yes" xml:space="preserve">
          <source>\( O(\log(\min(n_1,n_2))) \). Concatenate two sequences.</source>
          <target state="translated">\ (O (\ log (\ min (n_1, n_2))) \). Соедините две последовательности.</target>
        </trans-unit>
        <trans-unit id="06b9733d915a81dc3c5e947c773106d127b1fbcf" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; takes two sequences and returns a sequence of corresponding pairs. If one input is short, excess elements are discarded from the right end of the longer sequence.</source>
          <target state="translated">\ (O (\ min (n_1, n_2)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; принимает две последовательности и возвращает последовательность соответствующих пар. Если один вход короткий, лишние элементы отбрасываются из правого конца более длинной последовательности.</target>
        </trans-unit>
        <trans-unit id="b0d0c309376140b35e15a12bd8a45bdb90c7b61c" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; generalizes &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; by zipping with the function given as the first argument, instead of a tupling function. For example, &lt;code&gt;zipWith (+)&lt;/code&gt; is applied to two sequences to take the sequence of corresponding sums.</source>
          <target state="translated">\ (O (\ min (n_1, n_2)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; обобщает &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; , используя функцию, указанную в качестве первого аргумента, вместо функции кортежа. Например, &lt;code&gt;zipWith (+)&lt;/code&gt; применяется к двум последовательностям, чтобы получить последовательность соответствующих сумм.</target>
        </trans-unit>
        <trans-unit id="dbdb161425b4bae8703cd60a4996961e056d4753" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2,n_3)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; takes three sequences and returns a sequence of triples, analogous to &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (\ min (n_1, n_2, n_3)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip3&quot;&gt;zip3&lt;/a&gt;&lt;/code&gt; принимает три последовательности и возвращает последовательность троек, аналогичную &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb3b48ecc1f93c5a7b9927fe5999f5b74e5ec5b7" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2,n_3)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith3&quot;&gt;zipWith3&lt;/a&gt;&lt;/code&gt; takes a function which combines three elements, as well as three sequences and returns a sequence of their point-wise combinations, analogous to &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (\ min (n_1, n_2, n_3)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith3&quot;&gt;zipWith3&lt;/a&gt;&lt;/code&gt; принимает функцию, которая объединяет три элемента, а также три последовательности, и возвращает последовательность их точечных комбинаций, аналогично &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa10a5a78855dcba7d813e3ee6a207f58661c276" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2,n_3,n_4)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip4&quot;&gt;zip4&lt;/a&gt;&lt;/code&gt; takes four sequences and returns a sequence of quadruples, analogous to &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (\ min (n_1, n_2, n_3, n_4)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip4&quot;&gt;zip4&lt;/a&gt;&lt;/code&gt; принимает четыре последовательности и возвращает последовательность четверок, аналогичную &lt;code&gt;&lt;a href=&quot;data-sequence#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4390799dddf20a6343ea9646879bb16e7f084e8e" translate="yes" xml:space="preserve">
          <source>\( O(\min(n_1,n_2,n_3,n_4)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith4&quot;&gt;zipWith4&lt;/a&gt;&lt;/code&gt; takes a function which combines four elements, as well as four sequences and returns a sequence of their point-wise combinations, analogous to &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (\ min (n_1, n_2, n_3, n_4)) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith4&quot;&gt;zipWith4&lt;/a&gt;&lt;/code&gt; принимает функцию, которая объединяет четыре элемента, а также четыре последовательности, и возвращает последовательность их точечных комбинаций, аналогично &lt;code&gt;&lt;a href=&quot;data-sequence#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="854a5f214f7aa4910183ce26158e2621a9a01034" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the breakpoint index. &lt;code&gt;&lt;a href=&quot;data-sequence#v:breakl&quot;&gt;breakl&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns a pair whose first element is the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that &lt;em&gt;do not satisfy&lt;/em&gt;&lt;code&gt;p&lt;/code&gt; and the second element is the remainder of the sequence.</source>
          <target state="translated">\ (O (i) \), где \ (i \) - индекс точки останова. &lt;code&gt;&lt;a href=&quot;data-sequence#v:breakl&quot;&gt;breakl&lt;/a&gt;&lt;/code&gt; , примененный к предикату &lt;code&gt;p&lt;/code&gt; и последовательности &lt;code&gt;xs&lt;/code&gt; , возвращает пару, первый элемент которой является самым длинным префиксом (возможно, пустым) из &lt;code&gt;xs&lt;/code&gt; элементов, которые &lt;em&gt;не удовлетворяют &lt;/em&gt; &lt;code&gt;p&lt;/code&gt; , а второй элемент является остатком последовательности.</target>
        </trans-unit>
        <trans-unit id="fb6c136646637ba26b9e4d03ff183d0f2f7f4e9e" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the prefix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileL&quot;&gt;dropWhileL&lt;/a&gt; p xs&lt;/code&gt; returns the suffix remaining after &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt; p xs&lt;/code&gt;.</source>
          <target state="translated">\ (O (i) \), где \ (i \) - длина префикса. &lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileL&quot;&gt;dropWhileL&lt;/a&gt; p xs&lt;/code&gt; возвращает суффикс, оставшийся после &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt; p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbf309903f09bc7649ddc265c0f3450f702cefc0" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the prefix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanl&quot;&gt;spanl&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns a pair whose first element is the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt; and the second element is the remainder of the sequence.</source>
          <target state="translated">\ (O (i) \), где \ (i \) - длина префикса. &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanl&quot;&gt;spanl&lt;/a&gt;&lt;/code&gt; , примененный к предикату &lt;code&gt;p&lt;/code&gt; и последовательности &lt;code&gt;xs&lt;/code&gt; , возвращает пару, первый элемент которой является самым длинным префиксом (возможно, пустым) из &lt;code&gt;xs&lt;/code&gt; элементов, удовлетворяющих &lt;code&gt;p&lt;/code&gt; , а второй элемент является остатком последовательности.</target>
        </trans-unit>
        <trans-unit id="8a5eca9907659b3a43380501559c0f8bf072c551" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the prefix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns the longest prefix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">\ (O (i) \), где \ (i \) - длина префикса. &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileL&quot;&gt;takeWhileL&lt;/a&gt;&lt;/code&gt; , примененный к предикату &lt;code&gt;p&lt;/code&gt; и последовательности &lt;code&gt;xs&lt;/code&gt; , возвращает самый длинный префикс (возможно, пустой) из &lt;code&gt;xs&lt;/code&gt; элементов, удовлетворяющих &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2527991eb02d123ae97e3053f7be92eb76670670" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the suffix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileR&quot;&gt;dropWhileR&lt;/a&gt; p xs&lt;/code&gt; returns the prefix remaining after &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt; p xs&lt;/code&gt;.</source>
          <target state="translated">\ (O (i) \), где \ (i \) - длина суффикса. &lt;code&gt;&lt;a href=&quot;data-sequence#v:dropWhileR&quot;&gt;dropWhileR&lt;/a&gt; p xs&lt;/code&gt; возвращает префикс, оставшийся после &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt; p xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca86e7d1bc6e9440039fd89da4b54ce4dc1b17ba" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the suffix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanr&quot;&gt;spanr&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns a pair whose &lt;em&gt;first&lt;/em&gt; element is the longest &lt;em&gt;suffix&lt;/em&gt; (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt; and the second element is the remainder of the sequence.</source>
          <target state="translated">\ (O (i) \), где \ (i \) - длина суффикса. &lt;code&gt;&lt;a href=&quot;data-sequence#v:spanr&quot;&gt;spanr&lt;/a&gt;&lt;/code&gt; , примененный к предикату &lt;code&gt;p&lt;/code&gt; и последовательности &lt;code&gt;xs&lt;/code&gt; , возвращает пару, &lt;em&gt;первый&lt;/em&gt; элемент которой является самым длинным &lt;em&gt;суффиксом&lt;/em&gt; (возможно, пустым) из &lt;code&gt;xs&lt;/code&gt; элементов, удовлетворяющих &lt;code&gt;p&lt;/code&gt; , а второй элемент является остатком последовательности.</target>
        </trans-unit>
        <trans-unit id="bcfc88e467626c77e9e30a0a96b1b1973c08c4cc" translate="yes" xml:space="preserve">
          <source>\( O(i) \) where \( i \) is the suffix length. &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt;&lt;/code&gt;, applied to a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt;, returns the longest suffix (possibly empty) of &lt;code&gt;xs&lt;/code&gt; of elements that satisfy &lt;code&gt;p&lt;/code&gt;.</source>
          <target state="translated">\ (O (i) \), где \ (i \) - длина суффикса. &lt;code&gt;&lt;a href=&quot;data-sequence#v:takeWhileR&quot;&gt;takeWhileR&lt;/a&gt;&lt;/code&gt; , примененный к предикату &lt;code&gt;p&lt;/code&gt; и последовательности &lt;code&gt;xs&lt;/code&gt; , возвращает самый длинный суффикс (возможно, пустой) из &lt;code&gt;xs&lt;/code&gt; элементов, удовлетворяющих &lt;code&gt;p&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="89864ca7ad3a975e47d1ac468095d918264767d7" translate="yes" xml:space="preserve">
          <source>\( O(n \log d) \). The &lt;code&gt;nubOrd&lt;/code&gt; function removes duplicate elements from a list. In particular, it keeps only the first occurrence of each element. By using a &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; internally it has better asymptotics than the standard &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">\ (O (п \ журнал d) \). Функция &lt;code&gt;nubOrd&lt;/code&gt; удаляет повторяющиеся элементы из списка. В частности, он сохраняет только первое вхождение каждого элемента. При внутреннем использовании &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; он имеет лучшую асимптотику, чем стандартная функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77dbb7bcdeacb5504a0ef6cf2f5ee72db2c1bd02" translate="yes" xml:space="preserve">
          <source>\( O(n \log d) \). The &lt;code&gt;nubOrd&lt;/code&gt; function removes duplicate elements from a list. In particular, it keeps only the first occurrence of each element. By using a &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; internally it has better asymptotics than the standard &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe404a925ef3c49842338c60efd96b745d6f3be" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by the natural ordering of its elements. The sort is stable. If stability is not required, &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; can be slightly faster.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; по естественному порядку его элементов. Сорт стабильный. Если стабильность не требуется, &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; может быть немного быстрее.</target>
        </trans-unit>
        <trans-unit id="1098d943b88eab1e390e5ed0bde58e02fe11a30b" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; according to the specified comparator. The sort is stable. If stability is not required, &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; can be slightly faster.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; в соответствии с указанным компаратором. Сорт стабильный. Если стабильность не требуется, &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; может быть немного быстрее.</target>
        </trans-unit>
        <trans-unit id="783b6fa9efe8b0aacee689453492ec1f64175be9" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; , сравнивая результаты ключевой функции, примененной к каждому элементу. &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; эквивалентен &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt; , но имеет преимущество в производительности, заключающееся в том, что &lt;code&gt;f&lt;/code&gt; оценивается только один раз для каждого элемента во входном списке. Это называется парадигмой &amp;laquo;украсить-отсортировать-не декорировать&amp;raquo; или преобразованием Шварца.</target>
        </trans-unit>
        <trans-unit id="dd5b729298fbee668ec8a880b8bbf7694c81ab2d" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.14.1.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76919fecc6589c311cc2f157b3a6e318f7753a16" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by the natural ordering of its elements, but the sort is not stable. This algorithm is frequently faster and uses less memory than &lt;code&gt;&lt;a href=&quot;data-sequence#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; по естественному порядку его элементов, но сортировка нестабильна. Этот алгоритм часто быстрее и использует меньше памяти, чем &lt;code&gt;&lt;a href=&quot;data-sequence#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9085dac0a56339479accab8408ea49a6a539f2cb" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; , сравнивая результаты ключевой функции, примененной к каждому элементу. &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; эквивалентен &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt; , но имеет преимущество в производительности, заключающееся в том, что &lt;code&gt;f&lt;/code&gt; оценивается только один раз для каждого элемента во входном списке. Это называется парадигмой &amp;laquo;украсить-отсортировать-не декорировать&amp;raquo; или преобразованием Шварца.</target>
        </trans-unit>
        <trans-unit id="7a75f512d7ba326f341d19f6a0cb353e820eb396" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.14.1.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20373e1ed680ebc14f4b07924b5b470cc33402e5" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by the natural ordering of its elements. The sort is stable. If stability is not required, &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; can be slightly faster.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; по естественному порядку его элементов. Сорт стабильный. Если стабильность не требуется, &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; может быть немного быстрее.</target>
        </trans-unit>
        <trans-unit id="0eccdd8235b36a805ffa872f4e21e6f3de43dfa9" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; according to the specified comparator. The sort is stable. If stability is not required, &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; can be slightly faster.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; в соответствии с указанным компаратором. Сорт стабильный. Если стабильность не требуется, &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; может быть немного быстрее.</target>
        </trans-unit>
        <trans-unit id="72a13ba7d54627091e4ede4aa6ae6a602d067ef1" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; , сравнивая результаты ключевой функции, примененной к каждому элементу. &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; эквивалентен &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt; , но имеет преимущество в производительности, заключающееся в том, что &lt;code&gt;f&lt;/code&gt; оценивается только один раз для каждого элемента во входном списке. Это называется парадигмой &amp;laquo;украсить-отсортировать-не декорировать&amp;raquo; или преобразованием Шварца.</target>
        </trans-unit>
        <trans-unit id="7753c3a048f9c8faf7bca750396f1ef7c209569b" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.14.1.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7788d5dd9362fea81aef704f1b25c424829d973e" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by the natural ordering of its elements, but the sort is not stable. This algorithm is frequently faster and uses less memory than &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; по естественному порядку его элементов, но сортировка нестабильна. Этот алгоритм часто быстрее и использует меньше памяти, чем &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="923bbcdf6473777345bf3471e264e87c7325e7e1" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="translated">\ (O (п \ журнал п) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; сортирует указанный &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; , сравнивая результаты ключевой функции, примененной к каждому элементу. &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; эквивалентен &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.13.0.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt; , но имеет преимущество в производительности, заключающееся в том, что &lt;code&gt;f&lt;/code&gt; оценивается только один раз для каждого элемента во входном списке. Это называется парадигмой &amp;laquo;украсить-отсортировать-не декорировать&amp;raquo; или преобразованием Шварца.</target>
        </trans-unit>
        <trans-unit id="1626966051459fb3709cd1435e0670a0dbe0a5a9" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; sorts the specified &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; by comparing the results of a key function applied to each element. &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt; f&lt;/code&gt; is equivalent to &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt; (&lt;a href=&quot;../base-4.14.1.0/data-ord#v:compare&quot;&gt;compare&lt;/a&gt; &lt;a href=&quot;../base-4.14.1.0/data-function#v:on&quot;&gt;`on`&lt;/a&gt; f)&lt;/code&gt;, but has the performance advantage of only evaluating &lt;code&gt;f&lt;/code&gt; once for each element in the input list. This is called the decorate-sort-undecorate paradigm, or Schwartzian transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c993d7ee2b9e07347303a1bfa6fbe29b0033e24" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). A generalization of &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; takes an arbitrary comparator and sorts the specified sequence. The sort is not stable. This algorithm is frequently faster and uses less memory than &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (п \ журнал п) \). Обобщение &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; берет произвольный компаратор и сортирует указанную последовательность. Сорт нестабильный. Этот алгоритм часто быстрее и использует меньше памяти, чем &lt;code&gt;&lt;a href=&quot;data-sequence#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c91e61a22ccef5e854b0115e7bae5f82a0d4e39" translate="yes" xml:space="preserve">
          <source>\( O(n \log n) \). A generalization of &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; takes an arbitrary comparator and sorts the specified sequence. The sort is not stable. This algorithm is frequently faster and uses less memory than &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (O (п \ журнал п) \). Обобщение &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSort&quot;&gt;unstableSort&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortBy&quot;&gt;unstableSortBy&lt;/a&gt;&lt;/code&gt; берет произвольный компаратор и сортирует указанную последовательность. Сорт нестабильный. Этот алгоритм часто быстрее и использует меньше памяти, чем &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="930890d550afe6b5871128789424f2ee5f748526" translate="yes" xml:space="preserve">
          <source>\( O(n \min(d,W)) \). The &lt;code&gt;nubInt&lt;/code&gt; function removes duplicate &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; values from a list. In particular, it keeps only the first occurrence of each element. By using an &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; internally, it attains better asymptotics than the standard &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">\ (O (п \ мин (d, W)) \). Функция &lt;code&gt;nubInt&lt;/code&gt; удаляет повторяющиеся значения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; из списка. В частности, он сохраняет только первое вхождение каждого элемента. Благодаря внутреннему использованию &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; он достигает лучшей асимптотики, чем стандартная функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1a5d9655deddf9d1b59afeca8f46744a66f38b7" translate="yes" xml:space="preserve">
          <source>\( O(n \min(d,W)) \). The &lt;code&gt;nubInt&lt;/code&gt; function removes duplicate &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; values from a list. In particular, it keeps only the first occurrence of each element. By using an &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; internally, it attains better asymptotics than the standard &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603349967cf31a7e7a62cb16fea5e3004150cc9a" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Constructs a sequence by repeated application of a function to a seed value.</source>
          <target state="translated">\ (О (п) \). Создает последовательность путем повторного применения функции к начальному значению.</target>
        </trans-unit>
        <trans-unit id="e68f82855a00f85773c90f1119ff0dc9a7c9916f" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Convert a given sequence length and a function representing that sequence into a sequence.</source>
          <target state="translated">\ (О (п) \). Преобразуйте заданную длину последовательности и функцию, представляющую эту последовательность, в последовательность.</target>
        </trans-unit>
        <trans-unit id="28abf92fc465e3c6920cbdd18d990aa00bd50bda" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Create a sequence consisting of the elements of an &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt;. Note that the resulting sequence elements may be evaluated lazily (as on GHC), so you must force the entire structure to be sure that the original array can be garbage-collected.</source>
          <target state="translated">\ (О (п) \). Создайте последовательность, состоящую из элементов &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; . Обратите внимание, что результирующие элементы последовательности могут оцениваться лениво (как в GHC), поэтому вы должны заставить всю структуру быть уверенным, что исходный массив может быть собран с помощью сборщика мусора.</target>
        </trans-unit>
        <trans-unit id="c7cdb9801d2d28c4375010fb1f7c0579b09caa2d" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Create a sequence from a finite list of elements. There is a function &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:toList&quot;&gt;toList&lt;/a&gt;&lt;/code&gt; in the opposite direction for all instances of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; class, including &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">\ (О (п) \). Создайте последовательность из конечного списка элементов. Для всех экземпляров класса &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; , включая &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; , есть функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:toList&quot;&gt;toList&lt;/a&gt;&lt;/code&gt; в противоположном направлении .</target>
        </trans-unit>
        <trans-unit id="69a0fce5498890ae28d63d4fde0c7bd1e787e9c0" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Create a sequence from a finite list of elements. There is a function &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:toList&quot;&gt;toList&lt;/a&gt;&lt;/code&gt; in the opposite direction for all instances of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; class, including &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbfa82306b38fbfc581f7b62fe7f6936fc85d5d" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Intersperse an element between the elements of a sequence.</source>
          <target state="translated">\ (О (п) \). Перемежайте элемент между элементами последовательности.</target>
        </trans-unit>
        <trans-unit id="eb33857f95e6abd9b8e92b965742544d371251b4" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Returns a sequence of all prefixes of this sequence, shortest first. For example,</source>
          <target state="translated">\ (О (п) \). Возвращает последовательность всех префиксов этой последовательности, сначала самый короткий. Например,</target>
        </trans-unit>
        <trans-unit id="e9bb88e43721f0ad090dd3079c9ab2d4f7f5e33e" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Returns a sequence of all suffixes of this sequence, longest first. For example,</source>
          <target state="translated">\ (О (п) \). Возвращает последовательность всех суффиксов этой последовательности, начиная с самого длинного. Например,</target>
        </trans-unit>
        <trans-unit id="d22fb3ce0a67f04fdebb29f7e29e9664003f24cc" translate="yes" xml:space="preserve">
          <source>\( O(n) \). The &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; function takes a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt; and returns a sequence of those elements which satisfy the predicate.</source>
          <target state="translated">\ (О (п) \). Функция &lt;code&gt;&lt;a href=&quot;data-sequence#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; принимает предикат &lt;code&gt;p&lt;/code&gt; и последовательность &lt;code&gt;xs&lt;/code&gt; и возвращает последовательность тех элементов, которые удовлетворяют этому предикату.</target>
        </trans-unit>
        <trans-unit id="95c6f2c5a83a628e74aa5f06545408e2cd588fd6" translate="yes" xml:space="preserve">
          <source>\( O(n) \). The &lt;code&gt;&lt;a href=&quot;data-sequence#v:partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; function takes a predicate &lt;code&gt;p&lt;/code&gt; and a sequence &lt;code&gt;xs&lt;/code&gt; and returns sequences of those elements which do and do not satisfy the predicate.</source>
          <target state="translated">\ (О (п) \). Функция &lt;code&gt;&lt;a href=&quot;data-sequence#v:partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; принимает предикат &lt;code&gt;p&lt;/code&gt; и последовательность &lt;code&gt;xs&lt;/code&gt; и возвращает последовательности тех элементов, которые удовлетворяют и не удовлетворяют предикату.</target>
        </trans-unit>
        <trans-unit id="7d2552d02625413aa29e21b7cef52458a7ad4167" translate="yes" xml:space="preserve">
          <source>\( O(n) \). The reverse of a sequence.</source>
          <target state="translated">\ (О (п) \). Обратная последовательность.</target>
        </trans-unit>
        <trans-unit id="ef7cfa6738484ccd222c60ae3aef6fc4d639c58e" translate="yes" xml:space="preserve">
          <source>\( O(n) \). Unzip a sequence using a function to divide elements.</source>
          <target state="translated">\ (О (п) \). Разархивируйте последовательность, используя функцию разделения элементов.</target>
        </trans-unit>
        <trans-unit id="652ee9de3d79897676915fbdfd5346a4ef2470da" translate="yes" xml:space="preserve">
          <source>\(IY\) is strictly more specific than \(IX\). That is, \(IY\) is a substitution instance of \(IX\) but not vice versa.</source>
          <target state="translated">\ (IY \) строго более конкретен, чем \ (IX \). То есть \ (IY \) является экземпляром подстановки \ (IX \), но не наоборот.</target>
        </trans-unit>
        <trans-unit id="b689d73e7c786fd5b31eb51ed9d31a3f7d6ae37b" translate="yes" xml:space="preserve">
          <source>\(O \Bigl(\bigl(\frac{n}{c}\bigr) \log c\Bigr)\). &lt;code&gt;chunksOf c xs&lt;/code&gt; splits &lt;code&gt;xs&lt;/code&gt; into chunks of size &lt;code&gt;c&amp;gt;0&lt;/code&gt;. If &lt;code&gt;c&lt;/code&gt; does not divide the length of &lt;code&gt;xs&lt;/code&gt; evenly, then the last element of the result will be short.</source>
          <target state="translated">\ (O \ Bigl (\ bigl (\ frac {n} {c} \ bigr) \ log c \ Bigr) \). &lt;code&gt;chunksOf c xs&lt;/code&gt; разбивает &lt;code&gt;xs&lt;/code&gt; на куски размером &lt;code&gt;c&amp;gt;0&lt;/code&gt; . Если &lt;code&gt;c&lt;/code&gt; не делит длину &lt;code&gt;xs&lt;/code&gt; равномерно, то последний элемент результата будет коротким.</target>
        </trans-unit>
        <trans-unit id="5e6f80a34a9798cafc6a5db96cc57ba4c4db59c2" translate="yes" xml:space="preserve">
          <source>^</source>
          <target state="translated">^</target>
        </trans-unit>
        <trans-unit id="600e600a68a149108f159e39fce17366d56fc4e6" translate="yes" xml:space="preserve">
          <source>_ &lt;a href=&quot;data-type-equality#t:-61--61-&quot;&gt;==&lt;/a&gt; _ = '&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;</source>
          <target state="translated">_ &lt;a href=&quot;data-type-equality#t:-61--61-&quot;&gt;==&lt;/a&gt; _ = ' &lt;a href=&quot;data-bool#v:False&quot;&gt;Ложь&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81245c14fa4af0f8aca817f3aac71e3856bb2e1a" translate="yes" xml:space="preserve">
          <source>_open_osfhandle</source>
          <target state="translated">_open_osfhandle</target>
        </trans-unit>
        <trans-unit id="8022fc62249fb25428a03d36552b9662db865b9c" translate="yes" xml:space="preserve">
          <source>a 32-bit floating point number</source>
          <target state="translated">32-битное число с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="25484eb33e4ca7fa03af08f774aeade1c4ee2d63" translate="yes" xml:space="preserve">
          <source>a 64-bit floating point number</source>
          <target state="translated">64-битное число с плавающей точкой</target>
        </trans-unit>
        <trans-unit id="495a1fe000be6a5008ec4d1eb84e2a1d5d084889" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;||&lt;/a&gt; '&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; = a</source>
          <target state="translated">а &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;|| &lt;/a&gt;' &lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; = a</target>
        </trans-unit>
        <trans-unit id="1048dece3526da535f415f1622b9e7f4b2a0f838" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;||&lt;/a&gt; '&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; = '&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;</source>
          <target state="translated">а &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;|| &lt;/a&gt;' &lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; =' &lt;a href=&quot;data-bool#v:True&quot;&gt;верно&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d8d742293ecc54e41ac09b51fa2b2c86cd8c0847" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;||&lt;/a&gt; a = a</source>
          <target state="translated">а &lt;a href=&quot;data-type-bool#t:-124--124-&quot;&gt;|| &lt;/a&gt;а = а</target>
        </trans-unit>
        <trans-unit id="dfc3eece5d5fbbfb2557fdd2f1a0de5ec1613686" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; '&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; = '&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;</source>
          <target state="translated">a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; ' &lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt; =' &lt;a href=&quot;data-bool#v:False&quot;&gt;Ложь&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01ba601786bc77082f70fd3b2a119e6f137598d1" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; '&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; = a</source>
          <target state="translated">a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; ' &lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt; = a</target>
        </trans-unit>
        <trans-unit id="db482d5c52f88bf9c927868acddf21f43b80bd3f" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; a = a</source>
          <target state="translated">а &lt;a href=&quot;data-type-bool#t:-38--38-&quot;&gt;&amp;amp;&amp;amp;&lt;/a&gt; а = а</target>
        </trans-unit>
        <trans-unit id="46a1e8ea1de968dcf4615a18bb4b53b696036bd4" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Ограниченный&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="2784769421385712bd50e00b7541bc81e814f56a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="f867947542827acc0d2ea8e0082554ae2d9a293e" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;ghc-read#t:Read&quot;&gt;Прочитать&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="abf8e156382601d33ab4309b568c53d2699611e4" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Ограниченный&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="0375fef85fb75ec4eaea1233da0a84c6a11f70eb" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Ограниченный&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="04456549f2a5abfaa433721a9e4d30e8a18a7b88" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Ограниченный&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="a89d1de959bd2ba9abd9673e63ea6a45b095b5bd" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="5ce73f6cfcb9fe04f1a9c2ebf0e845f07785c1c6" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="027733db5bec3026113257962749176c09fed167" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="36b1d286e77dd08402089dc786c5d6751384d91a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;prelude#t:Read&quot;&gt;Прочитать&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="16c734ad064a036a3668c749c7ed15b1c82c32e7" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Прочитать&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="8e9dc88d9d6b9dc3f6810c3cb75f9b31968412fb" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Прочитать&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="b047af46bc432fe3a62a3c51785c13516dfb1285" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;:~~:&lt;/a&gt; b)</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-126--126-&quot;&gt;~~&lt;/a&gt; b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Прочитать&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126--126-:&quot;&gt;: ~~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="66da0a7f93a9faeeee0de1ce9988147838ae30bc" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;data-type-equality#t:-61--61-&quot;&gt;==&lt;/a&gt; a = '&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;</source>
          <target state="translated">a &lt;a href=&quot;data-type-equality#t:-61--61-&quot;&gt;==&lt;/a&gt; a = ' &lt;a href=&quot;data-bool#v:True&quot;&gt;Верно&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e53f9d6aefd63368970fd8b1c03f48b2146d52ae" translate="yes" xml:space="preserve">
          <source>a &lt;a id=&quot;v::-124-&quot;&gt;:|&lt;/a&gt; [a] infixr 5</source>
          <target state="translated">а &lt;a id=&quot;v::-124-&quot;&gt;: | &lt;/a&gt;[а] инфикс 5</target>
        </trans-unit>
        <trans-unit id="c09b5ca0ab45efbf368c8f883aaeb643f25da75f" translate="yes" xml:space="preserve">
          <source>a &lt;a id=&quot;v::-60-&quot;&gt;:&amp;lt;&lt;/a&gt; (&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a) infixr 5</source>
          <target state="translated">a &lt;a id=&quot;v::-60-&quot;&gt;: &amp;lt;&lt;/a&gt; ( &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a) infixr 5</target>
        </trans-unit>
        <trans-unit id="4366d8309e6c4a93d2e6f9fac58abf7190d747db" translate="yes" xml:space="preserve">
          <source>a SIMD vector type</source>
          <target state="translated">векторный тип SIMD</target>
        </trans-unit>
        <trans-unit id="2c60a8948409326587e2d80c0533c0b2ba526f53" translate="yes" xml:space="preserve">
          <source>a buffer (whose length may be zero).</source>
          <target state="translated">буфер (длина которого может быть равна нулю).</target>
        </trans-unit>
        <trans-unit id="6aba5037454fcbe2497a45a925a7bf0909281177" translate="yes" xml:space="preserve">
          <source>a constant function, returning the lowest and highest values the exponent may assume</source>
          <target state="translated">постоянная функция,возвращающая наименьшее и наибольшее значения,которые может принять экспонент</target>
        </trans-unit>
        <trans-unit id="5b9c7de41a1536a2cf821f605e86c2793f6bd4c5" translate="yes" xml:space="preserve">
          <source>a constant function, returning the number of digits of &lt;code&gt;&lt;a href=&quot;ghc-float#v:floatRadix&quot;&gt;floatRadix&lt;/a&gt;&lt;/code&gt; in the significand</source>
          <target state="translated">постоянная функция, возвращающая количество цифр &lt;code&gt;&lt;a href=&quot;ghc-float#v:floatRadix&quot;&gt;floatRadix&lt;/a&gt;&lt;/code&gt; в мантиссе</target>
        </trans-unit>
        <trans-unit id="cde248066dbb28c999a2778ce818e55f0128d213" translate="yes" xml:space="preserve">
          <source>a constant function, returning the number of digits of &lt;code&gt;&lt;a href=&quot;prelude#v:floatRadix&quot;&gt;floatRadix&lt;/a&gt;&lt;/code&gt; in the significand</source>
          <target state="translated">постоянная функция, возвращающая количество цифр &lt;code&gt;&lt;a href=&quot;prelude#v:floatRadix&quot;&gt;floatRadix&lt;/a&gt;&lt;/code&gt; в мантиссе</target>
        </trans-unit>
        <trans-unit id="a633e2dd8b55ec1e8c7eb858ebb8fa756f27e31c" translate="yes" xml:space="preserve">
          <source>a constant function, returning the radix of the representation (often &lt;code&gt;2&lt;/code&gt;)</source>
          <target state="translated">постоянная функция, возвращающая основание системы счисления (часто &lt;code&gt;2&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2d112c21b644b5118250a8a70b2538ed21ba15e3" translate="yes" xml:space="preserve">
          <source>a decoding error, if the input begins with an invalid byte sequence in this Handle's encoding.</source>
          <target state="translated">ошибка декодирования,если вход начинается с некорректной последовательности байт в кодировке данного Хэндла.</target>
        </trans-unit>
        <trans-unit id="13d51f2874011f80c0fda1c8dd64f87141fd6f14" translate="yes" xml:space="preserve">
          <source>a default value</source>
          <target state="translated">значение по умолчанию</target>
        </trans-unit>
        <trans-unit id="efc6e377ad13780bc21173cedd26de2bc7744fdb" translate="yes" xml:space="preserve">
          <source>a function converting a valid digit character to an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">функция, преобразующая действительный цифровой символ в &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="64e5fba578c7d1891365516501058a16fc9e7609" translate="yes" xml:space="preserve">
          <source>a function that can show unsigned values</source>
          <target state="translated">функция,которая может показывать неподписанные значения</target>
        </trans-unit>
        <trans-unit id="4ad166b7834c36795a4fe596e5997879628c7a69" translate="yes" xml:space="preserve">
          <source>a handler for errors in the inner computation</source>
          <target state="translated">обработчик ошибок во внутренних вычислениях</target>
        </trans-unit>
        <trans-unit id="c3c5aa9d0619cb64fabfcd8bc2312b400a6ca3c8" translate="yes" xml:space="preserve">
          <source>a handler for exceptions in the inner computation</source>
          <target state="translated">обработчик исключений во внутреннем вычислении</target>
        </trans-unit>
        <trans-unit id="e9b3db5689251b32a019d1c409373cee04ec49ff" translate="yes" xml:space="preserve">
          <source>a list of &lt;em&gt;associations&lt;/em&gt; of the form (&lt;em&gt;index&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;). Typically, this list will be expressed as a comprehension. An association &lt;code&gt;(i, x)&lt;/code&gt; defines the value of the array at index &lt;code&gt;i&lt;/code&gt; to be &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">список &lt;em&gt;ассоциаций&lt;/em&gt; формы ( &lt;em&gt;индекс&lt;/em&gt; , &lt;em&gt;значение&lt;/em&gt; ). Обычно этот список выражается в виде понимания. Ассоциация &lt;code&gt;(i, x)&lt;/code&gt; определяет значение массива с индексом &lt;code&gt;i&lt;/code&gt; как &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1838769c938ccda3c38c195704df00e6f8f9cac3" translate="yes" xml:space="preserve">
          <source>a list of declarations at top level; the spliced expression must have type &lt;code&gt;Q [Dec]&lt;/code&gt;</source>
          <target state="translated">список объявлений на верхнем уровне; склеенное выражение должно иметь тип &lt;code&gt;Q [Dec]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c84a8e03c639e4b99b736533f6ce0d75c3d436cc" translate="yes" xml:space="preserve">
          <source>a nested BCO</source>
          <target state="translated">вложенный BCO</target>
        </trans-unit>
        <trans-unit id="dacf656c29af63ede7d5a66eb4c195cb7d68d27c" translate="yes" xml:space="preserve">
          <source>a nonempty subtree present only in the first map is passed to &lt;code&gt;only1&lt;/code&gt; and the output is added to the result;</source>
          <target state="translated">непустое поддерево, присутствующее только в первой карте, передается в &lt;code&gt;only1&lt;/code&gt; , и вывод добавляется к результату;</target>
        </trans-unit>
        <trans-unit id="9431cc2ffae3083c6fd4eb94123849e01bcd09de" translate="yes" xml:space="preserve">
          <source>a nonempty subtree present only in the second map is passed to &lt;code&gt;only2&lt;/code&gt; and the output is added to the result.</source>
          <target state="translated">непустое поддерево, присутствующее только во второй карте, передается в &lt;code&gt;only2&lt;/code&gt; , и вывод добавляется к результату.</target>
        </trans-unit>
        <trans-unit id="b079c712d0fda010c398b8b4fc564c5d93d60fd1" translate="yes" xml:space="preserve">
          <source>a pair of &lt;em&gt;bounds&lt;/em&gt;, each of the index type of the array. These bounds are the lowest and highest indices in the array, in that order. For example, a one-origin vector of length &lt;code&gt;10&lt;/code&gt; has bounds &lt;code&gt;(1,10)&lt;/code&gt;, and a one-origin &lt;code&gt;10&lt;/code&gt; by &lt;code&gt;10&lt;/code&gt; matrix has bounds &lt;code&gt;((1,1),(10,10))&lt;/code&gt;.</source>
          <target state="translated">пара &lt;em&gt;границ&lt;/em&gt; , каждая из типов индекса массива. Эти границы являются самым низким и самым высоким индексами в массиве в указанном порядке. Например, вектор с одним началом длины &lt;code&gt;10&lt;/code&gt; имеет границы &lt;code&gt;(1,10)&lt;/code&gt; , а матрица с одним началом &lt;code&gt;10&lt;/code&gt; на &lt;code&gt;10&lt;/code&gt; имеет границы &lt;code&gt;((1,1),(10,10))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba8e826714a73899830f6ab608075ff579906dbb" translate="yes" xml:space="preserve">
          <source>a pattern; the spliced pattern must have type &lt;code&gt;Q Pat&lt;/code&gt;</source>
          <target state="translated">шаблон; шаблон сращивания должен иметь тип &lt;code&gt;Q Pat&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="73059a8046b1c205b18c2f7d1b925674ed55a915" translate="yes" xml:space="preserve">
          <source>a pre-existing chunks of data represented by a strict &lt;code&gt;ByteString&lt;/code&gt;</source>
          <target state="translated">уже существующие блоки данных, представленные строгой &lt;code&gt;ByteString&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12724a459ab10a8829360de4d06541b3e47dba30" translate="yes" xml:space="preserve">
          <source>a predicate distinguishing valid digits in this base</source>
          <target state="translated">предикат,различающий действительные цифры в этой базе.</target>
        </trans-unit>
        <trans-unit id="c68f4a2495d7173548e9a09cb2324b41dff54f59" translate="yes" xml:space="preserve">
          <source>a relative path that is appended to the path</source>
          <target state="translated">относительный путь,который прилагается к пути</target>
        </trans-unit>
        <trans-unit id="8fed21137ffe5d0c7090ea916a8c3a6106462526" translate="yes" xml:space="preserve">
          <source>a relative path that is appended to the path; if empty, the base path is returned</source>
          <target state="translated">относительный путь,который добавляется к пути;если он пустой,возвращается базовый путь</target>
        </trans-unit>
        <trans-unit id="02e6f3d317a5b730213d444073c4a9d995df7da7" translate="yes" xml:space="preserve">
          <source>a restricted append-only version of a state monad transformer or</source>
          <target state="translated">ограниченная версия только для приложений государственного монотрансформатора или</target>
        </trans-unit>
        <trans-unit id="00cd8647e896b38e11fdde37050fe414990bbb27" translate="yes" xml:space="preserve">
          <source>a simplified AST</source>
          <target state="translated">упрощённый АСТ</target>
        </trans-unit>
        <trans-unit id="0f5ca64142ff0bb325d5429f5831baee94016b9b" translate="yes" xml:space="preserve">
          <source>a standard &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read1&quot;&gt;Read1&lt;/a&gt;&lt;/code&gt; instance may be defined as</source>
          <target state="translated">стандартный экземпляр &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read1&quot;&gt;Read1&lt;/a&gt;&lt;/code&gt; может быть определен как</target>
        </trans-unit>
        <trans-unit id="af4e0527aa2daaff6ce8c67a4930a298ed4dbc12" translate="yes" xml:space="preserve">
          <source>a string describing the &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;, e.g. the file path for a file. Used in error messages.</source>
          <target state="translated">строка , описывающая &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; , например , путь к файлу для файла. Используется в сообщениях об ошибках.</target>
        </trans-unit>
        <trans-unit id="32ae1817dace426c93d098fe2524e0f3abe3aa1a" translate="yes" xml:space="preserve">
          <source>a string literal denoting a common prefix to be added to the returned completion candidates.</source>
          <target state="translated">строковый литерал,обозначающий общий префикс,который будет добавлен к возвращаемым кандидатам на заполнение.</target>
        </trans-unit>
        <trans-unit id="654558a0452dc0b9f151efdec13bb4d9e7dd1b7f" translate="yes" xml:space="preserve">
          <source>a string that can be passed to &lt;code&gt;&lt;a href=&quot;system-io#v:mkTextEncoding&quot;&gt;mkTextEncoding&lt;/a&gt;&lt;/code&gt; to create an equivalent &lt;code&gt;&lt;a href=&quot;ghc-io-encoding#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">строка, которую можно передать в &lt;code&gt;&lt;a href=&quot;system-io#v:mkTextEncoding&quot;&gt;mkTextEncoding&lt;/a&gt;&lt;/code&gt; для создания эквивалентного &lt;code&gt;&lt;a href=&quot;ghc-io-encoding#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b85621828f70ac37a526068e8083c87be9c3be28" translate="yes" xml:space="preserve">
          <source>a suffix of &lt;code&gt;//IGNORE&lt;/code&gt;, e.g. &lt;code&gt;UTF-8//IGNORE&lt;/code&gt;, will cause all illegal sequences on input to be ignored, and on output will drop all code points that have no representation in the target encoding.</source>
          <target state="translated">суффикс &lt;code&gt;//IGNORE&lt;/code&gt; , например &lt;code&gt;UTF-8//IGNORE&lt;/code&gt; , приведет к игнорированию всех недопустимых последовательностей на входе, а на выходе удалит все кодовые точки, которые не представлены в целевой кодировке.</target>
        </trans-unit>
        <trans-unit id="c776055d334ae6a629010d30b766a23c8aa3fde8" translate="yes" xml:space="preserve">
          <source>a suffix of &lt;code&gt;//ROUNDTRIP&lt;/code&gt; will use a PEP383-style escape mechanism to represent any invalid bytes in the input as Unicode codepoints (specifically, as lone surrogates, which are normally invalid in UTF-32). Upon output, these special codepoints are detected and turned back into the corresponding original byte.</source>
          <target state="translated">суффикс &lt;code&gt;//ROUNDTRIP&lt;/code&gt; будет использовать механизм перехода в стиле PEP383 для представления любых недопустимых байтов во входных данных как кодовых точек Unicode (в частности, как одиночные суррогаты, которые обычно недопустимы в UTF-32). После вывода эти специальные кодовые точки обнаруживаются и возвращаются в соответствующий исходный байт.</target>
        </trans-unit>
        <trans-unit id="8e864fd0038b9dc298144ef97f622ae11f451d8b" translate="yes" xml:space="preserve">
          <source>a suffix of &lt;code&gt;//TRANSLIT&lt;/code&gt; will choose a replacement character for illegal sequences or code points.</source>
          <target state="translated">суффикс &lt;code&gt;//TRANSLIT&lt;/code&gt; выберет символ замены для недопустимых последовательностей или кодовых точек.</target>
        </trans-unit>
        <trans-unit id="3397cb671916c002d3ff115ddde37cc1a14cdaba" translate="yes" xml:space="preserve">
          <source>a suitable instance would be</source>
          <target state="translated">подходящим случаем было бы</target>
        </trans-unit>
        <trans-unit id="d80c6eecdcbcce1a1bc8b7bef1f178ffa9e415f5" translate="yes" xml:space="preserve">
          <source>a type variable that names the result of a type family. Syntax: &lt;code&gt;= tyvar&lt;/code&gt; or &lt;code&gt;= (tyvar :: kind)&lt;/code&gt;. The type variable must be fresh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd9d6630c224794540c3f07f3de17df1e2d88d75" translate="yes" xml:space="preserve">
          <source>a type variable that names the result of a type family. Syntax: &lt;code&gt;= tyvar&lt;/code&gt; or &lt;code&gt;= (tyvar :: kind)&lt;/code&gt;. Type variable must be fresh.</source>
          <target state="translated">переменная типа, которая называет результат семейства типов. Синтаксис: &lt;code&gt;= tyvar&lt;/code&gt; или &lt;code&gt;= (tyvar :: kind)&lt;/code&gt; . Переменная типа должна быть свежей.</target>
        </trans-unit>
        <trans-unit id="657ee88f03507eb2daa1cae621b0d82027549b01" translate="yes" xml:space="preserve">
          <source>a type; the spliced expression must have type &lt;code&gt;Q Type&lt;/code&gt;</source>
          <target state="translated">тип; склеенное выражение должно иметь тип &lt;code&gt;Q Type&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ffe8b2f16c8d4d508612436c15bcb9b6541a38f" translate="yes" xml:space="preserve">
          <source>a value of type &lt;code&gt;STRef s a&lt;/code&gt; is a mutable variable in state thread &lt;code&gt;s&lt;/code&gt;, containing a value of type &lt;code&gt;a&lt;/code&gt;</source>
          <target state="translated">значение типа &lt;code&gt;STRef s a&lt;/code&gt; - это изменяемая переменная в потоке состояния &lt;code&gt;s&lt;/code&gt; , содержащая значение типа &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6175f44ee858b68670e6002cb56e8b10631f1a87" translate="yes" xml:space="preserve">
          <source>a variant of &lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; that is useful in some circumstances:</source>
          <target state="translated">вариант &lt;code&gt;&lt;a href=&quot;control-deepseq#v:deepseq&quot;&gt;deepseq&lt;/a&gt;&lt;/code&gt; , который полезен в некоторых случаях:</target>
        </trans-unit>
        <trans-unit id="a649924718de2a48a367079f1e0da51d4a9da37f" translate="yes" xml:space="preserve">
          <source>a version of arctangent taking two real floating-point arguments. For real floating &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; computes the angle (from the positive x-axis) of the vector from the origin to the point &lt;code&gt;(x,y)&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; returns a value in the range [&lt;code&gt;-pi&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;]. It follows the Common Lisp semantics for the origin when signed zeroes are supported. &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y 1&lt;/code&gt;, with &lt;code&gt;y&lt;/code&gt; in a type that is &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;, should return the same value as &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan&quot;&gt;atan&lt;/a&gt; y&lt;/code&gt;. A default definition of &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; is provided, but implementors can provide a more accurate implementation.</source>
          <target state="translated">версия арктангенса, принимающая два реальных аргумента с плавающей запятой. Для реальных плавающих &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; вычисляет угол (от положительной оси х) вектора от начала координат до точки &lt;code&gt;(x,y)&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; возвращает значение в диапазоне [ &lt;code&gt;-pi&lt;/code&gt; , &lt;code&gt;pi&lt;/code&gt; ]. Он следует семантике Common Lisp для источника, когда поддерживаются нули со знаком. &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt; y 1&lt;/code&gt; , где &lt;code&gt;y&lt;/code&gt; имеет тип &lt;code&gt;&lt;a href=&quot;ghc-float#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; , должен возвращать то же значение, что и &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan&quot;&gt;atan&lt;/a&gt; y&lt;/code&gt; . Определение &lt;code&gt;&lt;a href=&quot;ghc-float#v:atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; по умолчанию предоставляется, но разработчики могут предоставить более точную реализацию.</target>
        </trans-unit>
        <trans-unit id="fe74ee7452742c4171313955ab223053c4556057" translate="yes" xml:space="preserve">
          <source>a version of arctangent taking two real floating-point arguments. For real floating &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; computes the angle (from the positive x-axis) of the vector from the origin to the point &lt;code&gt;(x,y)&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; returns a value in the range [&lt;code&gt;-pi&lt;/code&gt;, &lt;code&gt;pi&lt;/code&gt;]. It follows the Common Lisp semantics for the origin when signed zeroes are supported. &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y 1&lt;/code&gt;, with &lt;code&gt;y&lt;/code&gt; in a type that is &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;, should return the same value as &lt;code&gt;&lt;a href=&quot;prelude#v:atan&quot;&gt;atan&lt;/a&gt; y&lt;/code&gt;. A default definition of &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; is provided, but implementors can provide a more accurate implementation.</source>
          <target state="translated">версия арктангенса, принимающая два реальных аргумента с плавающей запятой. Для реальных плавающих &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; вычисляет угол (от положительной оси х) вектора от начала координат до точки &lt;code&gt;(x,y)&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y x&lt;/code&gt; возвращает значение в диапазоне [ &lt;code&gt;-pi&lt;/code&gt; , &lt;code&gt;pi&lt;/code&gt; ]. Он следует семантике Common Lisp для источника, когда поддерживаются нули со знаком. &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt; y 1&lt;/code&gt; , где &lt;code&gt;y&lt;/code&gt; имеет тип &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; , должен возвращать то же значение, что и &lt;code&gt;&lt;a href=&quot;prelude#v:atan&quot;&gt;atan&lt;/a&gt; y&lt;/code&gt; . Определение &lt;code&gt;&lt;a href=&quot;prelude#v:atan2&quot;&gt;atan2&lt;/a&gt;&lt;/code&gt; по умолчанию предоставляется, но разработчики могут предоставить более точную реализацию.</target>
        </trans-unit>
        <trans-unit id="ab5c5acde1e2f6c3f101707a78f1d04cb72059dd" translate="yes" xml:space="preserve">
          <source>a writer monad transformer with the extra ability to read all previous output.</source>
          <target state="translated">Трансформатор monad для записи с дополнительной способностью считывать все предыдущие выходы.</target>
        </trans-unit>
        <trans-unit id="590421791efe5c46df565897151f6d7d2023d8e6" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; (&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; ( &lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</target>
        </trans-unit>
        <trans-unit id="31c6d7a30a36618fec3902097e5b43815bce0f49" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; (&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; ( &lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt; a)</target>
        </trans-unit>
        <trans-unit id="35ef1ee6ab6f7855e9ef87b5827bdeb7fde62274" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; (&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:HPrintfType&quot;&gt;HPrintfType&lt;/a&gt; ( &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</target>
        </trans-unit>
        <trans-unit id="409880a65ffaa71a1e0d0fe62cfabfa3a938169c" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; (&lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; ( &lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</target>
        </trans-unit>
        <trans-unit id="3e151aca4c15d6934c037ad431662959917ad736" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; (&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; ( &lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt; a)</target>
        </trans-unit>
        <trans-unit id="98a378d9b15b70d74d0944fb1e954d4256523aa2" translate="yes" xml:space="preserve">
          <source>a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; (&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</source>
          <target state="translated">a ~ () =&amp;gt; &lt;a href=&quot;text-printf#t:PrintfType&quot;&gt;PrintfType&lt;/a&gt; ( &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a)</target>
        </trans-unit>
        <trans-unit id="a332ce52488d1d5de5b7bfd2033ff8678cc81e6d" translate="yes" xml:space="preserve">
          <source>a ~ &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:IsString&quot;&gt;IsString&lt;/a&gt; (&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a)</source>
          <target state="translated">a ~ &lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:IsString&quot;&gt;IsString&lt;/a&gt; ( &lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a)</target>
        </trans-unit>
        <trans-unit id="9ecaf4f34f4aad0b04127e60e022b72ec77a2eaa" translate="yes" xml:space="preserve">
          <source>a ~ &lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-string#t:IsString&quot;&gt;IsString&lt;/a&gt; (&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915fd9d7d50fa1f7e70a03265ca1bb088bdf1f16" translate="yes" xml:space="preserve">
          <source>a ~ &lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;data-string#t:IsString&quot;&gt;IsString&lt;/a&gt; [a]</source>
          <target state="translated">a ~ &lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;data-string#t:IsString&quot;&gt;IsString&lt;/a&gt; [a]</target>
        </trans-unit>
        <trans-unit id="523bc46d742e3092442dc8594623b4685aa196dc" translate="yes" xml:space="preserve">
          <source>a ~ &lt;a href=&quot;ghc-exts#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;ghc-exts#t:IsString&quot;&gt;IsString&lt;/a&gt; [a]</source>
          <target state="translated">a ~ &lt;a href=&quot;ghc-exts#t:Char&quot;&gt;Char&lt;/a&gt; =&amp;gt; &lt;a href=&quot;ghc-exts#t:IsString&quot;&gt;IsString&lt;/a&gt; [a]</target>
        </trans-unit>
        <trans-unit id="044c3a8ec5a5d9d794332e8feedf60bf63246f8d" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;ограниченный&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="c737fd2304d681b949b955e6cfaadea29b7174bd" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="5581fcde0073364eee5b2f7c3bcbc6f61185c507" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;ghc-read#t:Read&quot;&gt;Читать&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="ed4469140697334ccde0a1e5ed82cd81fb9b8dce" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;ограниченный&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="e716884071d36d90840e4caf15ff812e7f6a4a74" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;ограниченный&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="7ab919c4c8d16d344ff842435c43a224ea48ef20" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;Bounded&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Bounded&quot;&gt;ограниченный&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="77faa75fa005c9774da433fc23465bd9c8bebd3d" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="74e2e6fa82ee67074c4af2de1a01a37948e866f2" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="92d3e309f797fb4f4c1371be971b05d314eef8fa" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Enum&quot;&gt;Enum&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="3557a95257ef12efdfbd0506e1f8c579d231ef7d" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;prelude#t:Read&quot;&gt;Читать&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="657481dfd6da9b659b9b66c663a065a94bf937a3" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Читать&lt;/a&gt; (a &lt;a href=&quot;data-type-equality#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="cbde84fe7ced7f537dc42c05790ea00c1f4ccf3c" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Читать&lt;/a&gt; (a &lt;a href=&quot;data-typeable#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="3a4dfd01691dd3bc592cf6604b7e5fd0d0d580cc" translate="yes" xml:space="preserve">
          <source>a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;:~:&lt;/a&gt; b)</source>
          <target state="translated">a ~ b =&amp;gt; &lt;a href=&quot;text-read#t:Read&quot;&gt;Читать&lt;/a&gt; (a &lt;a href=&quot;type-reflection#t::-126-:&quot;&gt;: ~:&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="891c3640894e01860eb0ae7ccf5446799d718ed2" translate="yes" xml:space="preserve">
          <source>aCCESS_SYSTEM_SECURITY</source>
          <target state="translated">aCCESS_SYSTEM_SECURITY</target>
        </trans-unit>
        <trans-unit id="b9bce8bc7cbd4cfc74af295dc63b50f294e0fb27" translate="yes" xml:space="preserve">
          <source>abbr</source>
          <target state="translated">abbr</target>
        </trans-unit>
        <trans-unit id="9fbb397449fabe7370de4e726a586750c0e025d4" translate="yes" xml:space="preserve">
          <source>above</source>
          <target state="translated">above</target>
        </trans-unit>
        <trans-unit id="dbaa3b644912f622f62ee8b0092a8d9ffa527bdc" translate="yes" xml:space="preserve">
          <source>aboves</source>
          <target state="translated">aboves</target>
        </trans-unit>
        <trans-unit id="3c647eaa3ec188fa4a41bc29560cf3d263ce2c90" translate="yes" xml:space="preserve">
          <source>abs (Num)</source>
          <target state="translated">брюшные мышцы (Номер)</target>
        </trans-unit>
        <trans-unit id="ccfa5b700105590fd54b7a4acd40d0f1749a6761" translate="yes" xml:space="preserve">
          <source>absInteger</source>
          <target state="translated">absInteger</target>
        </trans-unit>
        <trans-unit id="bce57942f67ca0fbd6511ebbaac8b282f36b38f8" translate="yes" xml:space="preserve">
          <source>absentErr</source>
          <target state="translated">absentErr</target>
        </trans-unit>
        <trans-unit id="64b6ed23db21d395b30faeea0ee1a854363149cc" translate="yes" xml:space="preserve">
          <source>absolute value expressed in 31 bit chunks, least significant first (ideally these would be machine-word &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt;s rather than 31-bit truncated &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;s)</source>
          <target state="translated">абсолютное значение, выраженное в 31-битных блоках, наименее значимые сначала (в идеале это будут машинные слова &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; , а не 31-битные усеченные &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-prim-0.5.3/GHC-Types.html#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c51b51e73e19ddc7f3d78e1d559b9e094d6aabd7" translate="yes" xml:space="preserve">
          <source>absurd</source>
          <target state="translated">absurd</target>
        </trans-unit>
        <trans-unit id="1add8034a0b73096de672f41850b64a5ad712a1a" translate="yes" xml:space="preserve">
          <source>accepts any of &lt;code&gt;&amp;plusmn;HHMM&lt;/code&gt; or &lt;code&gt;&amp;plusmn;HH:MM&lt;/code&gt;.</source>
          <target state="translated">принимает любое из &lt;code&gt;&amp;plusmn;HHMM&lt;/code&gt; или &lt;code&gt;&amp;plusmn;HH:MM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d33d98937b79b4741648859979c3a47d36f7b6e" translate="yes" xml:space="preserve">
          <source>accepts any string of letters, or any of the formats accepted by &lt;code&gt;%z&lt;/code&gt;.</source>
          <target state="translated">принимает любую строку букв или любой из форматов, поддерживаемых &lt;code&gt;%z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6401d94d7fa2a221be73d01898ea5b60b61008b" translate="yes" xml:space="preserve">
          <source>accepts exactly four digits.</source>
          <target state="translated">принимает ровно четыре цифры.</target>
        </trans-unit>
        <trans-unit id="8b61036933e858789a8f27653fcaabe0dd729aed" translate="yes" xml:space="preserve">
          <source>accepts exactly two digits.</source>
          <target state="translated">принимает ровно две цифры.</target>
        </trans-unit>
        <trans-unit id="8c5af12517ca0f8866b26bf9c075f775fccff465" translate="yes" xml:space="preserve">
          <source>accessModes</source>
          <target state="translated">accessModes</target>
        </trans-unit>
        <trans-unit id="bb99d38076a7fd7a77e43ad49c41b08fd8af4431" translate="yes" xml:space="preserve">
          <source>accessTime</source>
          <target state="translated">accessTime</target>
        </trans-unit>
        <trans-unit id="122871cac8e2ec1f46010f99a1357daa1eb8508a" translate="yes" xml:space="preserve">
          <source>accessTimeFromMetadata</source>
          <target state="translated">accessTimeFromMetadata</target>
        </trans-unit>
        <trans-unit id="f45e20611738871cf30c605a806206b5753c0310" translate="yes" xml:space="preserve">
          <source>accessTimeHiRes</source>
          <target state="translated">accessTimeHiRes</target>
        </trans-unit>
        <trans-unit id="5a6b2eab4e73bc94a6e4f9f228c7bdd126f38135" translate="yes" xml:space="preserve">
          <source>accum</source>
          <target state="translated">accum</target>
        </trans-unit>
        <trans-unit id="32ba47d6af576dc9065e3c948273f0cf110aea55" translate="yes" xml:space="preserve">
          <source>accumArray</source>
          <target state="translated">accumArray</target>
        </trans-unit>
        <trans-unit id="d3d1577ef799a30fb0de62bf57405648e1d9ac27" translate="yes" xml:space="preserve">
          <source>accumToStateT</source>
          <target state="translated">accumToStateT</target>
        </trans-unit>
        <trans-unit id="6f1430af6498d7c1125ea1bbdd4422357b12b588" translate="yes" xml:space="preserve">
          <source>accumulating function</source>
          <target state="translated">аккумуляционная функция</target>
        </trans-unit>
        <trans-unit id="71215402ee267f31cd6fff0de041f00108e40d9d" translate="yes" xml:space="preserve">
          <source>accursedUnutterablePerformIO</source>
          <target state="translated">accursedUnutterablePerformIO</target>
        </trans-unit>
        <trans-unit id="74463958ab508dde5fa01d729fc7e788ebaf16ad" translate="yes" xml:space="preserve">
          <source>acosDouble</source>
          <target state="translated">acosDouble</target>
        </trans-unit>
        <trans-unit id="aa8712a2c68660e7cab096247485e031962170db" translate="yes" xml:space="preserve">
          <source>acosDouble#</source>
          <target state="translated">acosDouble#</target>
        </trans-unit>
        <trans-unit id="06ead770755ad26198b691576891794699c24da7" translate="yes" xml:space="preserve">
          <source>acosFloat</source>
          <target state="translated">acosFloat</target>
        </trans-unit>
        <trans-unit id="5a1736b2ae2b058f0de2f7136bce2a54c8d5dabb" translate="yes" xml:space="preserve">
          <source>acosFloat#</source>
          <target state="translated">acosFloat#</target>
        </trans-unit>
        <trans-unit id="a117ad6e1e8d24d25a3c1d016abe956c25876c10" translate="yes" xml:space="preserve">
          <source>acoshDouble</source>
          <target state="translated">acoshDouble</target>
        </trans-unit>
        <trans-unit id="6ad5f18630535118c189843962d470a8fc55e725" translate="yes" xml:space="preserve">
          <source>acoshDouble#</source>
          <target state="translated">acoshDouble#</target>
        </trans-unit>
        <trans-unit id="9a15b5f46d5d30c87845f315fc5849e9e48b45e2" translate="yes" xml:space="preserve">
          <source>acoshFloat</source>
          <target state="translated">acoshFloat</target>
        </trans-unit>
        <trans-unit id="e919f2e880321a0f856646007be4dae7a833f62e" translate="yes" xml:space="preserve">
          <source>acoshFloat#</source>
          <target state="translated">acoshFloat#</target>
        </trans-unit>
        <trans-unit id="18b1ec962b2619762af0ec0fed21b2a539c0a2ad" translate="yes" xml:space="preserve">
          <source>acronym</source>
          <target state="translated">acronym</target>
        </trans-unit>
        <trans-unit id="34eb4c4ef005207e8b8f916b9f1fffacccd6945e" translate="yes" xml:space="preserve">
          <source>action</source>
          <target state="translated">action</target>
        </trans-unit>
        <trans-unit id="1b306a7ae5a93c2bc409337ec3c59d10b467f3be" translate="yes" xml:space="preserve">
          <source>action to execute before retrying if an immediate retry would block</source>
          <target state="translated">действие,которое необходимо выполнить перед повторной попыткой,если немедленная повторная попытка заблокирует</target>
        </trans-unit>
        <trans-unit id="aee7075968e647c3563062ca38e54057dc8697f6" translate="yes" xml:space="preserve">
          <source>action which may fail</source>
          <target state="translated">действие,которое может не сработать</target>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="translated">add</target>
        </trans-unit>
        <trans-unit id="bc819af4dff987b7d40d69f25a7222d9022e6a4a" translate="yes" xml:space="preserve">
          <source>add ⟨dir⟩, ⟨dir2⟩, etc. to import path</source>
          <target state="translated">добавить ⟨dir⟩,⟨dir2⟩ и т.д.для импорта пути.</target>
        </trans-unit>
        <trans-unit id="1a53926ff9a1f6ce2083c28e73a8746413f7f9c2" translate="yes" xml:space="preserve">
          <source>addAbsoluteTime</source>
          <target state="translated">addAbsoluteTime</target>
        </trans-unit>
        <trans-unit id="87525f25780e527362cefa6bdd2e1b213af0972c" translate="yes" xml:space="preserve">
          <source>addAbsoluteTime a b = a + b</source>
          <target state="translated">addAbsoluteTime a=a+b</target>
        </trans-unit>
        <trans-unit id="74be67a240cd07b3a37dad0d8885e9133def5e48" translate="yes" xml:space="preserve">
          <source>addCFinalizerToWeak#</source>
          <target state="translated">addCFinalizerToWeak#</target>
        </trans-unit>
        <trans-unit id="731c5bb583d26164f9396c8cbc16dca6d0509a59" translate="yes" xml:space="preserve">
          <source>addCorePlugin</source>
          <target state="translated">addCorePlugin</target>
        </trans-unit>
        <trans-unit id="d0145a9d610a932d395308c0578f0b6ae175e2af" translate="yes" xml:space="preserve">
          <source>addDays</source>
          <target state="translated">addDays</target>
        </trans-unit>
        <trans-unit id="2efe0e94d3706a6e4d0eadfeff52bfc1d5378955" translate="yes" xml:space="preserve">
          <source>addDependentFile</source>
          <target state="translated">addDependentFile</target>
        </trans-unit>
        <trans-unit id="32ef3f548fdf998e0f408d513f2294dc9d188d08" translate="yes" xml:space="preserve">
          <source>addErrorMessage</source>
          <target state="translated">addErrorMessage</target>
        </trans-unit>
        <trans-unit id="d4d3026cb3c2c56719fbc6c14e120de7e351ab45" translate="yes" xml:space="preserve">
          <source>addExtension</source>
          <target state="translated">addExtension</target>
        </trans-unit>
        <trans-unit id="2cc1c20966f345f8990d256b3116243a546f91f7" translate="yes" xml:space="preserve">
          <source>addFinalizer</source>
          <target state="translated">addFinalizer</target>
        </trans-unit>
        <trans-unit id="5ada88558e381a62eb980a4682593062da9dc534" translate="yes" xml:space="preserve">
          <source>addForeignFile</source>
          <target state="translated">addForeignFile</target>
        </trans-unit>
        <trans-unit id="9882e831aabf83aae4b0eeca2389878efc89c287" translate="yes" xml:space="preserve">
          <source>addForeignFilePath</source>
          <target state="translated">addForeignFilePath</target>
        </trans-unit>
        <trans-unit id="5328cde5115b1f16a2cc11d9a0999d26769e04e4" translate="yes" xml:space="preserve">
          <source>addForeignPtrConcFinalizer</source>
          <target state="translated">addForeignPtrConcFinalizer</target>
        </trans-unit>
        <trans-unit id="d5e1b3826f3b45dbf1383bc16da6aa8896061279" translate="yes" xml:space="preserve">
          <source>addForeignPtrFinalizer</source>
          <target state="translated">addForeignPtrFinalizer</target>
        </trans-unit>
        <trans-unit id="1b7fc9ba8933d32e1ac319cb6b2984e1f1263c5f" translate="yes" xml:space="preserve">
          <source>addForeignPtrFinalizerEnv</source>
          <target state="translated">addForeignPtrFinalizerEnv</target>
        </trans-unit>
        <trans-unit id="330e67d423abd9f347b5714dc456b22d4a8b754f" translate="yes" xml:space="preserve">
          <source>addForeignSource</source>
          <target state="translated">addForeignSource</target>
        </trans-unit>
        <trans-unit id="efd9bbf9d174ede41caa654a081e970edbaf7c5a" translate="yes" xml:space="preserve">
          <source>addGregorianDurationClip</source>
          <target state="translated">addGregorianDurationClip</target>
        </trans-unit>
        <trans-unit id="1561a5201a8010ec95ce0c3dd4a699656e12c8ee" translate="yes" xml:space="preserve">
          <source>addGregorianDurationRollOver</source>
          <target state="translated">addGregorianDurationRollOver</target>
        </trans-unit>
        <trans-unit id="c2d30e34952b264621f5128e144c309a55f7bf00" translate="yes" xml:space="preserve">
          <source>addGregorianMonthsClip</source>
          <target state="translated">addGregorianMonthsClip</target>
        </trans-unit>
        <trans-unit id="f575f24b13db058d587ee4f1fde8e06c8c98ba49" translate="yes" xml:space="preserve">
          <source>addGregorianMonthsRollOver</source>
          <target state="translated">addGregorianMonthsRollOver</target>
        </trans-unit>
        <trans-unit id="ddaf167355addb06f5a1984493ceb5270c71e859" translate="yes" xml:space="preserve">
          <source>addGregorianYearsClip</source>
          <target state="translated">addGregorianYearsClip</target>
        </trans-unit>
        <trans-unit id="176a967932a4ed7f3164e00ef84d05bd16c7e27d" translate="yes" xml:space="preserve">
          <source>addGregorianYearsRollOver</source>
          <target state="translated">addGregorianYearsRollOver</target>
        </trans-unit>
        <trans-unit id="ded846822c1263da1a8e8a9ddeec15118958535b" translate="yes" xml:space="preserve">
          <source>addHistory</source>
          <target state="translated">addHistory</target>
        </trans-unit>
        <trans-unit id="6e68d851a386df95bf92d31df2026345efb374ee" translate="yes" xml:space="preserve">
          <source>addHistoryRemovingAllDupes</source>
          <target state="translated">addHistoryRemovingAllDupes</target>
        </trans-unit>
        <trans-unit id="ae0889be6dd5d5e2cb3eccf41df9b9dd0362c36c" translate="yes" xml:space="preserve">
          <source>addHistoryUnlessConsecutiveDupe</source>
          <target state="translated">addHistoryUnlessConsecutiveDupe</target>
        </trans-unit>
        <trans-unit id="b670556bdf5011b208984ce40cfe570a51d8e4c8" translate="yes" xml:space="preserve">
          <source>addIntC#</source>
          <target state="translated">addIntC#</target>
        </trans-unit>
        <trans-unit id="ae0f81dae2059fbf8cf6fe47528bd5afce44b4c4" translate="yes" xml:space="preserve">
          <source>addJulianDurationClip</source>
          <target state="translated">addJulianDurationClip</target>
        </trans-unit>
        <trans-unit id="eaebfd6c1cc89922e86b864fb75e87647b8ef728" translate="yes" xml:space="preserve">
          <source>addJulianDurationRollOver</source>
          <target state="translated">addJulianDurationRollOver</target>
        </trans-unit>
        <trans-unit id="219dd18ee334cb16306dfefb1974c0e75d510e41" translate="yes" xml:space="preserve">
          <source>addJulianMonthsClip</source>
          <target state="translated">addJulianMonthsClip</target>
        </trans-unit>
        <trans-unit id="aa98e6a4ed889b1f638a01298b19623885f610d0" translate="yes" xml:space="preserve">
          <source>addJulianMonthsRollOver</source>
          <target state="translated">addJulianMonthsRollOver</target>
        </trans-unit>
        <trans-unit id="4a89e71927988a572e8cc407c7a6e67fdeb4175c" translate="yes" xml:space="preserve">
          <source>addJulianYearsClip</source>
          <target state="translated">addJulianYearsClip</target>
        </trans-unit>
        <trans-unit id="32c9d769452701100b91ebed14ed6e082ec489c8" translate="yes" xml:space="preserve">
          <source>addJulianYearsRollOver</source>
          <target state="translated">addJulianYearsRollOver</target>
        </trans-unit>
        <trans-unit id="595781519f927b0b1834b52a7e1a1a39c625039c" translate="yes" xml:space="preserve">
          <source>addLibrarySearchPath</source>
          <target state="translated">addLibrarySearchPath</target>
        </trans-unit>
        <trans-unit id="3e4666f9ee956353d042bfd9513fa4abc5a3f310" translate="yes" xml:space="preserve">
          <source>addLocalTime</source>
          <target state="translated">addLocalTime</target>
        </trans-unit>
        <trans-unit id="2abbdc9eb41c727e121578360a859ca4e4efe078" translate="yes" xml:space="preserve">
          <source>addLocalTime a b = a + b</source>
          <target state="translated">addLocalTime a=a+b</target>
        </trans-unit>
        <trans-unit id="84862540c7306b95991c435f71820dd519248fee" translate="yes" xml:space="preserve">
          <source>addMVarFinalizer</source>
          <target state="translated">addMVarFinalizer</target>
        </trans-unit>
        <trans-unit id="8f456b836a57e7b521cd3fe8b4642d186ff9a89d" translate="yes" xml:space="preserve">
          <source>addModFinalizer</source>
          <target state="translated">addModFinalizer</target>
        </trans-unit>
        <trans-unit id="2eb2458fc9cab4d81757f4fc410fbe961d8d6e36" translate="yes" xml:space="preserve">
          <source>addSignal</source>
          <target state="translated">addSignal</target>
        </trans-unit>
        <trans-unit id="ccd08e29dfeaf9bdafa115354157598d5b620f0f" translate="yes" xml:space="preserve">
          <source>addTempFile</source>
          <target state="translated">addTempFile</target>
        </trans-unit>
        <trans-unit id="40603c528fd8abd1b5db422a5605a0e04b8c7ed9" translate="yes" xml:space="preserve">
          <source>addTopDecls</source>
          <target state="translated">addTopDecls</target>
        </trans-unit>
        <trans-unit id="26384875d473da292e6e94fb202bd58ec4f113bb" translate="yes" xml:space="preserve">
          <source>addTrailingPathSeparator</source>
          <target state="translated">addTrailingPathSeparator</target>
        </trans-unit>
        <trans-unit id="7bab5da1619b04063aec0086211d40edc00e803a" translate="yes" xml:space="preserve">
          <source>addUTCTime</source>
          <target state="translated">addUTCTime</target>
        </trans-unit>
        <trans-unit id="94debf7f133c839a02e77b349992ff46a34a4e84" translate="yes" xml:space="preserve">
          <source>addUTCTime a b = a + b</source>
          <target state="translated">добавить a=a+b</target>
        </trans-unit>
        <trans-unit id="3d2e6af91d0fb8fdb6a080fc71913d8cc6de0cb0" translate="yes" xml:space="preserve">
          <source>addWordC#</source>
          <target state="translated">addWordC#</target>
        </trans-unit>
        <trans-unit id="9557408f6ee06dc0fa69765d1d00f6920af8ad4a" translate="yes" xml:space="preserve">
          <source>addr2Int#</source>
          <target state="translated">addr2Int#</target>
        </trans-unit>
        <trans-unit id="16deaa35f322d5f82263f26196529ef5d290a995" translate="yes" xml:space="preserve">
          <source>addrToAny#</source>
          <target state="translated">addrToAny#</target>
        </trans-unit>
        <trans-unit id="c662180230cad14787d4ab7e77aa08681ce783fa" translate="yes" xml:space="preserve">
          <source>address</source>
          <target state="translated">address</target>
        </trans-unit>
        <trans-unit id="e691d1d7cc0ac7819d8356620e2e134b524e40d6" translate="yes" xml:space="preserve">
          <source>address to ask the OS for memory</source>
          <target state="translated">адрес для запроса памяти у операционной системы</target>
        </trans-unit>
        <trans-unit id="135486a4f285b9b2d8d7bd7607211013e28e557c" translate="yes" xml:space="preserve">
          <source>address to ask the OS for memory for the linker, 0 ==&amp;gt; off</source>
          <target state="translated">адрес для запроса памяти у ОС для компоновщика, 0 ==&amp;gt; выкл.</target>
        </trans-unit>
        <trans-unit id="a11f5c3beed47c29da089d9337054f1fc3438334" translate="yes" xml:space="preserve">
          <source>adjust</source>
          <target state="translated">adjust</target>
        </trans-unit>
        <trans-unit id="3df5363464281a44973ce242c507cca4e611d019" translate="yes" xml:space="preserve">
          <source>adjust&amp;#x27;</source>
          <target state="translated">adjust&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="31d7b3d0b23c3ecce467382f288a8fda07a7c947" translate="yes" xml:space="preserve">
          <source>adjustWindowRect</source>
          <target state="translated">adjustWindowRect</target>
        </trans-unit>
        <trans-unit id="39d007aebebe2c8bc50eed203cdd819637109fdd" translate="yes" xml:space="preserve">
          <source>adjustWindowRectEx</source>
          <target state="translated">adjustWindowRectEx</target>
        </trans-unit>
        <trans-unit id="f1adf0c08b54d347ada18d14a364b4d35310daa7" translate="yes" xml:space="preserve">
          <source>adjustWithKey</source>
          <target state="translated">adjustWithKey</target>
        </trans-unit>
        <trans-unit id="06212ffae182c208d663c07c546f86798115e6a3" translate="yes" xml:space="preserve">
          <source>advancePtr</source>
          <target state="translated">advancePtr</target>
        </trans-unit>
        <trans-unit id="1feb0e8c71dbee8b02e939d3ad8d65534654459e" translate="yes" xml:space="preserve">
          <source>afile</source>
          <target state="translated">afile</target>
        </trans-unit>
        <trans-unit id="5e372bd188ae2b14d932c8f290b9a501ab4e56dc" translate="yes" xml:space="preserve">
          <source>after &lt;code&gt;import&lt;/code&gt; statement</source>
          <target state="translated">после оператора &lt;code&gt;import&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae21c64a87f6bb0b8e16e55c48be4cc638d7bd3f" translate="yes" xml:space="preserve">
          <source>align</source>
          <target state="translated">align</target>
        </trans-unit>
        <trans-unit id="e7a2e2805d2496ca587239d4cda31b89c1c0ca73" translate="yes" xml:space="preserve">
          <source>alignPtr</source>
          <target state="translated">alignPtr</target>
        </trans-unit>
        <trans-unit id="99fce70bf4748d7e0078cd0fcd052d2b36a1e4c0" translate="yes" xml:space="preserve">
          <source>alignment (Storable)</source>
          <target state="translated">выравнивание (складируемое)</target>
        </trans-unit>
        <trans-unit id="107c36de6ed8336bd0dd209e95b562425b9dfe41" translate="yes" xml:space="preserve">
          <source>alink</source>
          <target state="translated">alink</target>
        </trans-unit>
        <trans-unit id="d87c448044defb778f33158d8ccf94a20531d600" translate="yes" xml:space="preserve">
          <source>all</source>
          <target state="translated">all</target>
        </trans-unit>
        <trans-unit id="9e504920833d81fde6eef06c19b51058b5894375" translate="yes" xml:space="preserve">
          <source>all corresponding types and implicit kinds in the patterns are apart, or</source>
          <target state="translated">все соответствующие типы и неявные виды в шаблонах разделены,или</target>
        </trans-unit>
        <trans-unit id="f00b4fd0886decfe65d992c1b482efde2ec4ad08" translate="yes" xml:space="preserve">
          <source>all get implicit bangs on the &lt;code&gt;x&lt;/code&gt; pattern.</source>
          <target state="translated">все получают неявную челку по образцу &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="95e8b2f063141b33afc19049d243214aa4c78c85" translate="yes" xml:space="preserve">
          <source>allAttributesOff</source>
          <target state="translated">allAttributesOff</target>
        </trans-unit>
        <trans-unit id="f8206e23a1b240fef234ee0c8e667350841f4923" translate="yes" xml:space="preserve">
          <source>allWriteMode</source>
          <target state="translated">allWriteMode</target>
        </trans-unit>
        <trans-unit id="65af051f252c2e070428b3d48c9e06ebe2a6b9c5" translate="yes" xml:space="preserve">
          <source>alloca</source>
          <target state="translated">alloca</target>
        </trans-unit>
        <trans-unit id="ace0898eccdd75ebfb1591fbb1f2dbc979e5ad25" translate="yes" xml:space="preserve">
          <source>allocaArray</source>
          <target state="translated">allocaArray</target>
        </trans-unit>
        <trans-unit id="3c6264e932ab091f892ddfcaa83d5b30f2c01c4f" translate="yes" xml:space="preserve">
          <source>allocaArray0</source>
          <target state="translated">allocaArray0</target>
        </trans-unit>
        <trans-unit id="d9eb1cc224bdf43481701f92d17f35791017e33f" translate="yes" xml:space="preserve">
          <source>allocaBytes</source>
          <target state="translated">allocaBytes</target>
        </trans-unit>
        <trans-unit id="5d343fcaee75170a8a898d45cbed43b312645e86" translate="yes" xml:space="preserve">
          <source>allocaBytesAligned</source>
          <target state="translated">allocaBytesAligned</target>
        </trans-unit>
        <trans-unit id="84626ff1da5397b1239fa0814deff4f223952861" translate="yes" xml:space="preserve">
          <source>allocaMessage</source>
          <target state="translated">allocaMessage</target>
        </trans-unit>
        <trans-unit id="b49fefbc56c98ab832581d8b1bb506eda4ac7c40" translate="yes" xml:space="preserve">
          <source>allocaPAINTSTRUCT</source>
          <target state="translated">allocaPAINTSTRUCT</target>
        </trans-unit>
        <trans-unit id="fdf0e6df6506ba938948d557b4d1f03e17cbb2b3" translate="yes" xml:space="preserve">
          <source>allocate a new buffer. The size of the buffer is at the discretion of the device; e.g. for a memory-mapped file the buffer will probably cover the entire file.</source>
          <target state="translated">выделить новый буфер.Размер буфера определяется на усмотрение устройства;например,для файла,отображённого на карту памяти,буфер,вероятно,будет охватывать весь файл.</target>
        </trans-unit>
        <trans-unit id="289ed2f20ead6ffa1318be2c56745e75cb77aa27" translate="yes" xml:space="preserve">
          <source>allocated bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ededb15aa1dda3618c7c1cf4e3aedb0e8dea5a" translate="yes" xml:space="preserve">
          <source>allocation area size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa8f79db994faec1f045dbc1b04ca9ac632eea6" translate="yes" xml:space="preserve">
          <source>allocationLimitExceeded</source>
          <target state="translated">allocationLimitExceeded</target>
        </trans-unit>
        <trans-unit id="b078c2f6d3c7744f8976d1d17d71825f67b47295" translate="yes" xml:space="preserve">
          <source>allowInterrupt</source>
          <target state="translated">allowInterrupt</target>
        </trans-unit>
        <trans-unit id="46538fd00b80c35182c9a6cbe69b8620bd73e5c7" translate="yes" xml:space="preserve">
          <source>allowSetForegroundWindow</source>
          <target state="translated">allowSetForegroundWindow</target>
        </trans-unit>
        <trans-unit id="385328d8d58c05e38abadd834d135fcb1234ee31" translate="yes" xml:space="preserve">
          <source>along with a small type-level language (via &lt;a href=&quot;#extension-DataKinds&quot;&gt;&lt;code&gt;DataKinds&lt;/code&gt;&lt;/a&gt;) for constructing pretty-printed error messages,</source>
          <target state="translated">наряду с небольшим языком уровня типов (через &lt;a href=&quot;#extension-DataKinds&quot;&gt; &lt;code&gt;DataKinds&lt;/code&gt; &lt;/a&gt; ) для создания красиво оформленных сообщений об ошибках,</target>
        </trans-unit>
        <trans-unit id="f14454571676762f4aecebfa7dc8a7a5ad23c746" translate="yes" xml:space="preserve">
          <source>alphaNum</source>
          <target state="translated">alphaNum</target>
        </trans-unit>
        <trans-unit id="20907882970dfeb7440c3195b40a5426061f849c" translate="yes" xml:space="preserve">
          <source>alreadyExistsErrorType</source>
          <target state="translated">alreadyExistsErrorType</target>
        </trans-unit>
        <trans-unit id="497df3e3e76e1bafba0c1940aab161fb87e25e86" translate="yes" xml:space="preserve">
          <source>alreadyInUseErrorType</source>
          <target state="translated">alreadyInUseErrorType</target>
        </trans-unit>
        <trans-unit id="c39c53f1191c5c35e3887a3c8411e8cfdb1ba72e" translate="yes" xml:space="preserve">
          <source>also, besides prefix pattern synonyms, both infix and record pattern synonyms are supported. See &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:PatSynArgs&quot;&gt;PatSynArgs&lt;/a&gt;&lt;/code&gt; for details</source>
          <target state="translated">кроме того, помимо синонимов шаблонов префикса, поддерживаются синонимы как инфиксных, так и записанных шаблонов. См. &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:PatSynArgs&quot;&gt;PatSynArgs&lt;/a&gt;&lt;/code&gt; для подробностей.</target>
        </trans-unit>
        <trans-unit id="00b732ba358efaf68ff5f29272104b074de33b1c" translate="yes" xml:space="preserve">
          <source>also, besides prefix pattern synonyms, both infix and record pattern synonyms are supported. See &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynArgs&quot;&gt;PatSynArgs&lt;/a&gt;&lt;/code&gt; for details</source>
          <target state="translated">кроме того, помимо синонимов шаблонов префикса, поддерживаются синонимы как инфиксных, так и записанных шаблонов. См. &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynArgs&quot;&gt;PatSynArgs&lt;/a&gt;&lt;/code&gt; для подробностей.</target>
        </trans-unit>
        <trans-unit id="325562c769da3f80d0e63bb56514bc2e2723c9b5" translate="yes" xml:space="preserve">
          <source>alt</source>
          <target state="translated">alt</target>
        </trans-unit>
        <trans-unit id="70387ea39726018c3fbc6e6646f6b3e08f2653fb" translate="yes" xml:space="preserve">
          <source>altcode</source>
          <target state="translated">altcode</target>
        </trans-unit>
        <trans-unit id="736d58ea8a0e114d72df992adfb0b598f3d56609" translate="yes" xml:space="preserve">
          <source>alter</source>
          <target state="translated">alter</target>
        </trans-unit>
        <trans-unit id="eab443df259d59b7f0be0d6ae1cf891a240928da" translate="yes" xml:space="preserve">
          <source>alterF</source>
          <target state="translated">alterF</target>
        </trans-unit>
        <trans-unit id="9552a99adb576ef72b680991b858dbee59db6a1c" translate="yes" xml:space="preserve">
          <source>alternate formatting</source>
          <target state="translated">альтернативное форматирование</target>
        </trans-unit>
        <trans-unit id="abdb4562600d39b8d30b8d0b475ccf60e1bf89c7" translate="yes" xml:space="preserve">
          <source>alternativeDurationDaysFormat</source>
          <target state="translated">alternativeDurationDaysFormat</target>
        </trans-unit>
        <trans-unit id="fdd881d0882b1c4c5f048f7d8e0e623bcf9325d2" translate="yes" xml:space="preserve">
          <source>alternativeDurationTimeFormat</source>
          <target state="translated">alternativeDurationTimeFormat</target>
        </trans-unit>
        <trans-unit id="7bd9c52c9a7f5e5d2e984623ea3ff531278ec6f8" translate="yes" xml:space="preserve">
          <source>although it may be implemented differently internally: you may not assume that the memory returned by &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; has been allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">хотя это может быть реализовано по-разному внутри: вы не можете предполагать, что память, возвращаемая &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; , была выделена с помощью &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="934eb62a6b31097f2fac60e6fd55182652f37d42" translate="yes" xml:space="preserve">
          <source>although it may be implemented differently internally: you may not assume that the memory returned by &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; has been allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">хотя это может быть реализовано по-разному внутри: вы не можете предполагать, что память, возвращаемая &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; , была выделена с помощью &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3519690ec5174207733af0989822eef74a9c717" translate="yes" xml:space="preserve">
          <source>although it may be implemented differently internally: you may not assume that the memory returned by &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; has been allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">хотя это может быть реализовано по-разному внутри: вы не можете предполагать, что память, возвращаемая &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#v:mallocForeignPtr&quot;&gt;mallocForeignPtr&lt;/a&gt;&lt;/code&gt; , была выделена с помощью &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aef5549ddc5a767e365906475597631e50d60859" translate="yes" xml:space="preserve">
          <source>amap</source>
          <target state="translated">amap</target>
        </trans-unit>
        <trans-unit id="f2a0ab49a9adc5a07c9ee8cd9d68bbd663d1c7f2" translate="yes" xml:space="preserve">
          <source>an IO action for writing the Builder's data into a user-supplied memory buffer.</source>
          <target state="translated">IO действие для записи данных Конструктора в пользовательский буфер памяти.</target>
        </trans-unit>
        <trans-unit id="8952e66aaa1977113e4b1a4ba68eedb56b0fbe3d" translate="yes" xml:space="preserve">
          <source>an expression; the spliced expression must have type &lt;code&gt;Q Exp&lt;/code&gt;</source>
          <target state="translated">выражение; склеенное выражение должно иметь тип &lt;code&gt;Q Exp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ea36d7e375ce2814347654f5ef296397ce4aba4e" translate="yes" xml:space="preserve">
          <source>an injectivity annotation of the form &lt;code&gt;| A -&amp;gt; B&lt;/code&gt;, where &lt;code&gt;A&lt;/code&gt; is the result type variable (see previous bullet) and &lt;code&gt;B&lt;/code&gt; is a list of argument type and kind variables in which type family is injective. It is possible to omit some variables if the type family is not injective in them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121f54c8437072b73e02a43f271054b7774b4a32" translate="yes" xml:space="preserve">
          <source>an injectivity annotation of the form &lt;code&gt;| A -&amp;gt; B&lt;/code&gt;, where &lt;code&gt;A&lt;/code&gt; is the result type variable (see previous bullet) and &lt;code&gt;B&lt;/code&gt; is a list of argument type and kind variables in which type family is injective. It is possible to omit some variables if type family is not injective in them.</source>
          <target state="translated">аннотация инъективности формы &lt;code&gt;| A -&amp;gt; B&lt;/code&gt; , где &lt;code&gt;A&lt;/code&gt; - это переменная типа результата (см. Предыдущий маркер), а &lt;code&gt;B&lt;/code&gt; - список переменных типа и типа аргумента, в которых семейство типов является инъективным. Некоторые переменные можно опустить, если семейство типов в них не является инъективным.</target>
        </trans-unit>
        <trans-unit id="1a95fd2b1f1263e20bf576cce1bb6848b28d31fc" translate="yes" xml:space="preserve">
          <source>an integer denoting the total number of completions available, and finally</source>
          <target state="translated">целое число,обозначающее общее количество доступных завершений,и,наконец.</target>
        </trans-unit>
        <trans-unit id="f44dc67be4e4958de07b0ede75630e83a23b10ae" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">переменная неустановленного типа (внутри вызовов &lt;code&gt;&lt;a href=&quot;control-monad-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; ) или</target>
        </trans-unit>
        <trans-unit id="992794f62e6051e5e84c50b259319620ef00db27" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">переменная неустановленного типа (внутри вызовов &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; ) или</target>
        </trans-unit>
        <trans-unit id="6e6f742509798b1d55d4f9ddf3f20626b1e54ef1" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">переменная неустановленного типа (внутри вызовов &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; ) или</target>
        </trans-unit>
        <trans-unit id="89a3f6e722a126ad023f9020da68a4c65094180b" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">переменная неустановленного типа (внутри вызовов &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; ) или</target>
        </trans-unit>
        <trans-unit id="e10af2d69950ac2fb9dab5fc0d823c9b9607ba56" translate="yes" xml:space="preserve">
          <source>an uninstantiated type variable (inside invocations of &lt;code&gt;&lt;a href=&quot;ghc-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;), or</source>
          <target state="translated">переменная неустановленного типа (внутри вызовов &lt;code&gt;&lt;a href=&quot;ghc-st#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; ) или</target>
        </trans-unit>
        <trans-unit id="f06df609aed50661247cc6ec96c1599c193c3ec4" translate="yes" xml:space="preserve">
          <source>anchor</source>
          <target state="translated">anchor</target>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="translated">and</target>
        </trans-unit>
        <trans-unit id="fe59db250f48c323d463aa9559750b0ad6dced15" translate="yes" xml:space="preserve">
          <source>and a polymorphic one:</source>
          <target state="translated">и полиморфный:</target>
        </trans-unit>
        <trans-unit id="73f706b0b1b0c12a6ba4c1f76fdaaf06a88ee8e7" translate="yes" xml:space="preserve">
          <source>and now we&amp;rsquo;d be in a superclass loop. Here&amp;rsquo;s an example involving a type variable</source>
          <target state="translated">и теперь мы будем в цикле суперкласса. Вот пример с переменной типа</target>
        </trans-unit>
        <trans-unit id="18d42fb779a37e4e1dc3e098558cdf4c4c83ec15" translate="yes" xml:space="preserve">
          <source>and parses as:</source>
          <target state="translated">и,судя по всему:</target>
        </trans-unit>
        <trans-unit id="e8fa7487b8c23045ccaa94a54053cdefcb655f2e" translate="yes" xml:space="preserve">
          <source>and pass &lt;code&gt;-F -pgmF convert.sh&lt;/code&gt; to GHC. The &lt;code&gt;-f l1&lt;/code&gt; option tells iconv to convert your Latin-1 file, supplied in argument &lt;code&gt;$2&lt;/code&gt;, while the &amp;ldquo;-t utf-8&amp;rdquo; options tell iconv to return a UTF-8 encoded file. The result is redirected into argument &lt;code&gt;$3&lt;/code&gt;. The &lt;code&gt;echo &quot;{-# LINE 1 \&quot;$2\&quot; #-}&quot;&lt;/code&gt; just makes sure that your error positions are reported as in the original source file.</source>
          <target state="translated">и передайте &lt;code&gt;-F -pgmF convert.sh&lt;/code&gt; в GHC. Параметр &lt;code&gt;-f l1&lt;/code&gt; указывает iconv преобразовать ваш файл Latin-1, указанный в аргументе &lt;code&gt;$2&lt;/code&gt; , а параметры &amp;laquo;-t utf-8&amp;raquo; говорят iconv вернуть файл в кодировке UTF-8. Результат перенаправляется в аргумент &lt;code&gt;$3&lt;/code&gt; . &lt;code&gt;echo &quot;{-# LINE 1 \&quot;$2\&quot; #-}&quot;&lt;/code&gt; просто гарантирует , что ваши позиции ошибок представлены как в оригинальном исходном файле.</target>
        </trans-unit>
        <trans-unit id="9b4aa4b3a300c8b4126f09367d0c6c3c4e36cddf" translate="yes" xml:space="preserve">
          <source>and that &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and (&lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;) satisfy the applicative functor laws.</source>
          <target state="translated">и что &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; и ( &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ) удовлетворяют законам аппликативных функторов.</target>
        </trans-unit>
        <trans-unit id="f0d6908641261ebacdf7178f2871da4376ad002e" translate="yes" xml:space="preserve">
          <source>and that &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and (&lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;) satisfy the applicative functor laws.</source>
          <target state="translated">и что &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; и ( &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ) удовлетворяют законам аппликативных функторов.</target>
        </trans-unit>
        <trans-unit id="80de4bb2e6277bfe415251a8215406a0da053134" translate="yes" xml:space="preserve">
          <source>and that &lt;code&gt;&lt;a href=&quot;prelude#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and (&lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;) satisfy the applicative functor laws.</source>
          <target state="translated">и что &lt;code&gt;&lt;a href=&quot;prelude#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; и ( &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; ) удовлетворяют законам аппликативных функторов.</target>
        </trans-unit>
        <trans-unit id="f628fa481829f10eb7ed0ce431a96d7a312b5c2a" translate="yes" xml:space="preserve">
          <source>and the automatically-added import is replaced the next time you use &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:add&quot;&gt;&lt;code&gt;:add&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt;&lt;code&gt;:reload&lt;/code&gt;&lt;/a&gt;. It can also be removed by &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; as with normal imports.</source>
          <target state="translated">и автоматически добавленной импорт заменяется на следующий раз , когда вы используете &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:add&quot;&gt; &lt;code&gt;:add&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt; &lt;code&gt;:reload&lt;/code&gt; &lt;/a&gt; . Его также можно удалить с помощью &lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; ,&lt;/a&gt; как и в случае обычного импорта.</target>
        </trans-unit>
        <trans-unit id="fd67bd2ac58a98ba4fa381140fe6ca401229a1a0" translate="yes" xml:space="preserve">
          <source>and the corresponding &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Show1&quot;&gt;Show1&lt;/a&gt;&lt;/code&gt; instance as</source>
          <target state="translated">и соответствующий экземпляр &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Show1&quot;&gt;Show1&lt;/a&gt;&lt;/code&gt; как</target>
        </trans-unit>
        <trans-unit id="254f16578d53d1a8d664ec9f65a09ea9414efbab" translate="yes" xml:space="preserve">
          <source>and the fixity declaration applies wherever the binding is in scope. For example, in a &lt;code&gt;let&lt;/code&gt;, it applies in the right-hand sides of other &lt;code&gt;let&lt;/code&gt;-bindings and the body of the &lt;code&gt;let&lt;/code&gt;C. Or, in recursive &lt;code&gt;do&lt;/code&gt; expressions (&lt;a href=&quot;#recursive-do-notation&quot;&gt;The recursive do-notation&lt;/a&gt;), the local fixity declarations of a &lt;code&gt;let&lt;/code&gt; statement scope over other statements in the group, just as the bound name does.</source>
          <target state="translated">и объявление фиксации применяется везде, где привязка находится в области действия. Например, в &lt;code&gt;let&lt;/code&gt; , она применяется в правых частях других &lt;code&gt;let&lt;/code&gt; -bindings и теле &lt;code&gt;let&lt;/code&gt; C. Или, в рекурсивной &lt;code&gt;do&lt;/code&gt; выражении ( &lt;a href=&quot;#recursive-do-notation&quot;&gt;Рекурсивная делать-нотацию&lt;/a&gt; ), местные декларации неподвижности в &lt;code&gt;let&lt;/code&gt; заявлении область действия над другими операторами в группе, как и связанное имя.</target>
        </trans-unit>
        <trans-unit id="84804ecc7a15277c8dc72ca8493fc5365f07f3ef" translate="yes" xml:space="preserve">
          <source>and the identity functor &lt;code&gt;&lt;a href=&quot;data-functor-identity#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; and composition functors &lt;code&gt;&lt;a href=&quot;data-functor-compose#v:Compose&quot;&gt;Compose&lt;/a&gt;&lt;/code&gt; are from &lt;a href=&quot;data-functor-identity&quot;&gt;Data.Functor.Identity&lt;/a&gt; and &lt;a href=&quot;data-functor-compose&quot;&gt;Data.Functor.Compose&lt;/a&gt;.</source>
          <target state="translated">и функтор &lt;code&gt;&lt;a href=&quot;data-functor-identity#t:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; Функторы идентичности и композиции &lt;code&gt;&lt;a href=&quot;data-functor-compose#v:Compose&quot;&gt;Compose&lt;/a&gt;&lt;/code&gt; взяты из &lt;a href=&quot;data-functor-identity&quot;&gt;Data.Functor.Identity&lt;/a&gt; и &lt;a href=&quot;data-functor-compose&quot;&gt;Data.Functor.Compose&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dce8d78586a4b2e598fe2638354e4f7a8a928b05" translate="yes" xml:space="preserve">
          <source>and the implementation uses the &lt;em&gt;same&lt;/em&gt;&lt;code&gt;Num&lt;/code&gt; dictionary for &lt;code&gt;Dollars&lt;/code&gt; as for &lt;code&gt;Int&lt;/code&gt;. In other words, GHC will generate something that resembles the following code</source>
          <target state="translated">и реализация использует тот &lt;em&gt;же&lt;/em&gt; словарь &lt;code&gt;Num&lt;/code&gt; для &lt;code&gt;Dollars&lt;/code&gt; что и для &lt;code&gt;Int&lt;/code&gt; . Другими словами, GHC сгенерирует что-то похожее на следующий код</target>
        </trans-unit>
        <trans-unit id="479c818bfd711cf4544f049828ee87d6403981e8" translate="yes" xml:space="preserve">
          <source>and the newtype is of the form</source>
          <target state="translated">и новый тип имеет форму</target>
        </trans-unit>
        <trans-unit id="590c3603be97a6e205368ca55f167ade6ac064b9" translate="yes" xml:space="preserve">
          <source>and the syntax for explicitly bidirectional pattern synonyms is:</source>
          <target state="translated">и синтаксис явно двунаправленных синонимов:</target>
        </trans-unit>
        <trans-unit id="0582d614d00a0cc31ca47309d416d9c73c2b4a28" translate="yes" xml:space="preserve">
          <source>and then attempt to simplify the &lt;code&gt;Num Int&lt;/code&gt; context as much as possible. GHC knows that there is a &lt;code&gt;Num Int&lt;/code&gt; instance in scope, so it is able to discharge the &lt;code&gt;Num Int&lt;/code&gt; constraint, leaving the code that GHC actually generates</source>
          <target state="translated">а затем попытайтесь максимально упростить контекст &lt;code&gt;Num Int&lt;/code&gt; . GHC знает, что в области видимости существует экземпляр &lt;code&gt;Num Int&lt;/code&gt; , поэтому он может снять ограничение &lt;code&gt;Num Int&lt;/code&gt; , оставив код, который GHC фактически генерирует</target>
        </trans-unit>
        <trans-unit id="c322cc3213fe26babdb6c814e4efa12934234d9b" translate="yes" xml:space="preserve">
          <source>and then run a small &lt;code&gt;qsort&lt;/code&gt; with tracing:</source>
          <target state="translated">а затем запустите небольшой &lt;code&gt;qsort&lt;/code&gt; с трассировкой:</target>
        </trans-unit>
        <trans-unit id="ddf2a0569d46e773bb95b39acec93f8f9616fd41" translate="yes" xml:space="preserve">
          <source>and then the normal rules for filling in associated types from the default will apply, making &lt;code&gt;Size Bar&lt;/code&gt; equal to &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">а затем будут применяться обычные правила заполнения связанных типов по умолчанию, в результате чего &lt;code&gt;Size Bar&lt;/code&gt; равна &lt;code&gt;Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ee881b8d8c4966597ddf76a2c6819072e3ad2d8" translate="yes" xml:space="preserve">
          <source>and to get information about &lt;code&gt;D&lt;/code&gt;-the-type, use &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">а чтобы получить информацию о &lt;code&gt;D&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; , используйте lookupTypeName .</target>
        </trans-unit>
        <trans-unit id="72e1560bd573c44690e8f372c23f99bf5c5c54f0" translate="yes" xml:space="preserve">
          <source>and to get information about &lt;code&gt;D&lt;/code&gt;-the-type, use &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">а чтобы получить информацию о &lt;code&gt;D&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lookupTypeName&quot;&gt;lookupTypeName&lt;/a&gt;&lt;/code&gt; , используйте lookupTypeName .</target>
        </trans-unit>
        <trans-unit id="f1bb3adf03e7143a41d976d15feec1f47502e762" translate="yes" xml:space="preserve">
          <source>and use it in the same way. Of course this infix syntax only makes sense for binary operators; there is also a more general syntax involving special brackets:</source>
          <target state="translated">и использовать его таким же образом.Конечно же,этот синтаксис инфикса имеет смысл только для двоичных операторов;есть также более общий синтаксис,включающий специальные скобки:</target>
        </trans-unit>
        <trans-unit id="fc36b3ac9b0cab4ebdb5bc9351b8ed24cbc593ec" translate="yes" xml:space="preserve">
          <source>and you want to use arithmetic on &lt;code&gt;Dollars&lt;/code&gt;, you have to explicitly define an instance of &lt;code&gt;Num&lt;/code&gt;:</source>
          <target state="translated">и вы хотите использовать арифметические &lt;code&gt;Dollars&lt;/code&gt; с долларами , вы должны явно определить экземпляр &lt;code&gt;Num&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3d85f61e8bf8baf82dec3b62fb3db463f9e02400" translate="yes" xml:space="preserve">
          <source>and#</source>
          <target state="translated">and#</target>
        </trans-unit>
        <trans-unit id="ce8b3c83a77157c293197da1e8ece9fd23e4db66" translate="yes" xml:space="preserve">
          <source>and, as before, the constraint &lt;code&gt;C Int [b]&lt;/code&gt; arises from &lt;code&gt;f&lt;/code&gt;&amp;lsquo;s right hand side. GHC will reject the instance, complaining as before that it does not know how to resolve the constraint &lt;code&gt;C Int [b]&lt;/code&gt;, because it matches more than one instance declaration. The solution is to postpone the choice by adding the constraint to the context of the instance declaration, thus:</source>
          <target state="translated">и, как и раньше, ограничение &lt;code&gt;C Int [b]&lt;/code&gt; возникает из правой части &lt;code&gt;f&lt;/code&gt; . GHC отклонит экземпляр, по-прежнему жалуясь, что он не знает, как разрешить ограничение &lt;code&gt;C Int [b]&lt;/code&gt; , поскольку оно соответствует более чем одному объявлению экземпляра. Решение состоит в том, чтобы отложить выбор, добавив ограничение в контекст объявления экземпляра, таким образом:</target>
        </trans-unit>
        <trans-unit id="8257199ccb697b2284946ec000922d2ad79c7d40" translate="yes" xml:space="preserve">
          <source>and, as before, the constraint &lt;code&gt;C Int [b]&lt;/code&gt; arises from &lt;code&gt;f&lt;/code&gt;&amp;rsquo;s right hand side. GHC will reject the instance, complaining as before that it does not know how to resolve the constraint &lt;code&gt;C Int [b]&lt;/code&gt;, because it matches more than one instance declaration. The solution is to postpone the choice by adding the constraint to the context of the instance declaration, thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="51cb746cbd26ba2c83bb1c29641dd6acb59162bd" translate="yes" xml:space="preserve">
          <source>andBigNat</source>
          <target state="translated">andBigNat</target>
        </trans-unit>
        <trans-unit id="d8f45440d8ba6866f7cd5dc9bf5424e9b0b82c2f" translate="yes" xml:space="preserve">
          <source>andI#</source>
          <target state="translated">andI#</target>
        </trans-unit>
        <trans-unit id="47f0b6684dbf7a499fc68bc95f91b2dd33a57aaa" translate="yes" xml:space="preserve">
          <source>andInteger</source>
          <target state="translated">andInteger</target>
        </trans-unit>
        <trans-unit id="1b1321e7bbc9ab6c6d41f2b691ec74af95021bc8" translate="yes" xml:space="preserve">
          <source>andM</source>
          <target state="translated">andM</target>
        </trans-unit>
        <trans-unit id="814ff70e0e4573ee360322855b959e5fa7c40f93" translate="yes" xml:space="preserve">
          <source>andNatural</source>
          <target state="translated">andNatural</target>
        </trans-unit>
        <trans-unit id="5c461ca98c1ea925fc7570dbd2ef273904334489" translate="yes" xml:space="preserve">
          <source>annotate</source>
          <target state="translated">annotate</target>
        </trans-unit>
        <trans-unit id="b224d0a37a2b7e392efa9ba57defb2614389b40e" translate="yes" xml:space="preserve">
          <source>annotateIOError</source>
          <target state="translated">annotateIOError</target>
        </trans-unit>
        <trans-unit id="c5fe0200d1c7a5139bd18fd22268c4ca8bf45e90" translate="yes" xml:space="preserve">
          <source>any</source>
          <target state="translated">any</target>
        </trans-unit>
        <trans-unit id="0eaff237de409b9bb83d222042afab63b7aa7e45" translate="yes" xml:space="preserve">
          <source>any arguments</source>
          <target state="translated">любые аргументы</target>
        </trans-unit>
        <trans-unit id="71fd737816349a57448a748088738167c106781c" translate="yes" xml:space="preserve">
          <source>anyChar</source>
          <target state="translated">anyChar</target>
        </trans-unit>
        <trans-unit id="23f707c706019ea8a3e4c900f99f499e2129f964" translate="yes" xml:space="preserve">
          <source>anyPopup</source>
          <target state="translated">anyPopup</target>
        </trans-unit>
        <trans-unit id="3a6ae3160bdbc79be800415d5f533bcc73358975" translate="yes" xml:space="preserve">
          <source>anyToAddr#</source>
          <target state="translated">anyToAddr#</target>
        </trans-unit>
        <trans-unit id="9a61e5c837ce511951eff7447ed2c803341fc214" translate="yes" xml:space="preserve">
          <source>anyToken</source>
          <target state="translated">anyToken</target>
        </trans-unit>
        <trans-unit id="31381916f8b077eea68fc95956f9ac85845dcea8" translate="yes" xml:space="preserve">
          <source>anyclassStrategy</source>
          <target state="translated">anyclassStrategy</target>
        </trans-unit>
        <trans-unit id="112c2a063a0f6f3f9ba00da0de16624f951645e8" translate="yes" xml:space="preserve">
          <source>anywhere</source>
          <target state="translated">anywhere</target>
        </trans-unit>
        <trans-unit id="ac78b022715c5b8357b4dca8045e8463b4de2124" translate="yes" xml:space="preserve">
          <source>ap</source>
          <target state="translated">ap</target>
        </trans-unit>
        <trans-unit id="eba4c8092cbdadb7794392e190d53493bc334208" translate="yes" xml:space="preserve">
          <source>app (ArrowApply)</source>
          <target state="translated">приложение (ArrowApply)</target>
        </trans-unit>
        <trans-unit id="b3ad6eeb824a8ec02a5d5e832b7879b06ba3f19c" translate="yes" xml:space="preserve">
          <source>appE</source>
          <target state="translated">appE</target>
        </trans-unit>
        <trans-unit id="802f5d989c7e8fb560cd4b955e72235ad480c9b4" translate="yes" xml:space="preserve">
          <source>appEndo (Endo)</source>
          <target state="translated">appEndo (Endo)</target>
        </trans-unit>
        <trans-unit id="f4713737d3cbea3609f53517d475c7e6e3986e2b" translate="yes" xml:space="preserve">
          <source>appK</source>
          <target state="translated">appK</target>
        </trans-unit>
        <trans-unit id="c0e58dc12e9bd5c4adbcb30a9574b1f2780375f6" translate="yes" xml:space="preserve">
          <source>appKindT</source>
          <target state="translated">appKindT</target>
        </trans-unit>
        <trans-unit id="13a372d7a48946366bdcae29392ac2b0f5f7ff1f" translate="yes" xml:space="preserve">
          <source>appPrec</source>
          <target state="translated">appPrec</target>
        </trans-unit>
        <trans-unit id="ea808d665df6304e606fa6defa67afb2c39c79f0" translate="yes" xml:space="preserve">
          <source>appPrec1</source>
          <target state="translated">appPrec1</target>
        </trans-unit>
        <trans-unit id="cd060661c5ec3eafa096c5f8fa941dd1132de886" translate="yes" xml:space="preserve">
          <source>appT</source>
          <target state="translated">appT</target>
        </trans-unit>
        <trans-unit id="81896820296fd9273be70f37e16dacbfaf88d3d4" translate="yes" xml:space="preserve">
          <source>appTypeE</source>
          <target state="translated">appTypeE</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="dca4d637857ca4573531b3a30d8e520334044cac" translate="yes" xml:space="preserve">
          <source>append&amp;#x27;</source>
          <target state="translated">append&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="289ddd34d1c4c8e0f0b12fd9e90183d6e6e44042" translate="yes" xml:space="preserve">
          <source>appendFile</source>
          <target state="translated">appendFile</target>
        </trans-unit>
        <trans-unit id="6fc61421d8e67210538b07798f3f1fdd6e9d1d3b" translate="yes" xml:space="preserve">
          <source>applet</source>
          <target state="translated">applet</target>
        </trans-unit>
        <trans-unit id="69f45da1683c501696ebfa086d25192af3807dc6" translate="yes" xml:space="preserve">
          <source>apply</source>
          <target state="translated">apply</target>
        </trans-unit>
        <trans-unit id="3485dd31164492649d7850c2cbd3db18e0cea072" translate="yes" xml:space="preserve">
          <source>approxRational</source>
          <target state="translated">approxRational</target>
        </trans-unit>
        <trans-unit id="8d7fd28b52e8e13346543859eb3cc8e8ecf65d19" translate="yes" xml:space="preserve">
          <source>appsE</source>
          <target state="translated">appsE</target>
        </trans-unit>
        <trans-unit id="66a6d5d94fb47f2ef2a016ae65996e8ebb737df1" translate="yes" xml:space="preserve">
          <source>aqua</source>
          <target state="translated">aqua</target>
        </trans-unit>
        <trans-unit id="5a36f117812e69f1a5ab7e32a43b6e3db24618b2" translate="yes" xml:space="preserve">
          <source>arch</source>
          <target state="translated">arch</target>
        </trans-unit>
        <trans-unit id="ebfb55f4432b592119a10592e4f26272cc72359e" translate="yes" xml:space="preserve">
          <source>archive</source>
          <target state="translated">archive</target>
        </trans-unit>
        <trans-unit id="587353d9fa39c1a7c6f546af5b28c31d9eb924a3" translate="yes" xml:space="preserve">
          <source>are unaffected by &lt;code&gt;Strict&lt;/code&gt;. For example:</source>
          <target state="translated">не действуют на &lt;code&gt;Strict&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="0ca629a075fdb2a4486bdcf79b95788644f92842" translate="yes" xml:space="preserve">
          <source>areFileApisANSI</source>
          <target state="translated">areFileApisANSI</target>
        </trans-unit>
        <trans-unit id="699e8ae92ca31d0753b1eacb9fbc3f555d78fbd6" translate="yes" xml:space="preserve">
          <source>area</source>
          <target state="translated">area</target>
        </trans-unit>
        <trans-unit id="da023efeab5413d5c77467c8faa27e7fae7632ba" translate="yes" xml:space="preserve">
          <source>argument descriptor</source>
          <target state="translated">дескриптор аргумента</target>
        </trans-unit>
        <trans-unit id="adb0d32f4dfc9a26ee81327b9fdd7725056a7848" translate="yes" xml:space="preserve">
          <source>argvEncoding</source>
          <target state="translated">argvEncoding</target>
        </trans-unit>
        <trans-unit id="d4aa8007cc1ad1656027fb89671813afa9615288" translate="yes" xml:space="preserve">
          <source>arithSeqE</source>
          <target state="translated">arithSeqE</target>
        </trans-unit>
        <trans-unit id="b55192fbef76929083a8c47c155f2d75d1279c47" translate="yes" xml:space="preserve">
          <source>arr (Arrow)</source>
          <target state="translated">арр (Стрелка)</target>
        </trans-unit>
        <trans-unit id="8dc9c706f2a67ddc7029207634dc6e4e70b1196f" translate="yes" xml:space="preserve">
          <source>arrEleBottom</source>
          <target state="translated">arrEleBottom</target>
        </trans-unit>
        <trans-unit id="a667da204ed8615229188eafa47f44e91ddfec77" translate="yes" xml:space="preserve">
          <source>arrangeIconicWindows</source>
          <target state="translated">arrangeIconicWindows</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="39a531d92bbe1cfd6268cd99d999880c84640b1d" translate="yes" xml:space="preserve">
          <source>arrow</source>
          <target state="translated">arrow</target>
        </trans-unit>
        <trans-unit id="49a75ba655b6e52469ec549f06d8e82cf0c80387" translate="yes" xml:space="preserve">
          <source>arrowK</source>
          <target state="translated">arrowK</target>
        </trans-unit>
        <trans-unit id="9aff066125957e947bc0bfb08e59a5bf496963cf" translate="yes" xml:space="preserve">
          <source>arrowT</source>
          <target state="translated">arrowT</target>
        </trans-unit>
        <trans-unit id="e819945bb4cc7f0b639ef2ce6c193ee892c3a6ca" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt; , но при необходимости исключения включают указанный путь.</target>
        </trans-unit>
        <trans-unit id="96f77b642b11d04a41a4094411649679d7a24b87" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt; , но при необходимости исключения включают указанный путь.</target>
        </trans-unit>
        <trans-unit id="7a29f051d3cf3ba47d4940dab0a1b98525bf1e08" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt; , но отбрасывает результат.</target>
        </trans-unit>
        <trans-unit id="1bb58d8d61b0a45cdd25a0e6737c6ac8ff064c9d" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt; , но исключения включают указанный путь, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="2fda8be4ddf0842edb4c586310d4c411e6a7be79" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt; , но исключения включают указанный путь, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="f9b17066fdd54a0ee439651126df58fbfc0b71d7" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt; , но исключения включают указанный путь, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="bd3956e9755ec06f0d40dc090ede99dcbb5a2c61" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt; , но при необходимости исключения включают указанный путь.</target>
        </trans-unit>
        <trans-unit id="54be1a118d09364e48eba38faac9bcdf1c280da4" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0b769c2ab633bf9a89e72197d1fc8d90463ac4" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83a9d24ea4357625e3019ab18f6bed7e17caada7" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b28d2e27982f340e764338aba91d855ff20fa4e" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99eef91aa6b3298e186dee1eb985415200b5d76b" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140b3d97c89285ce5f71ef6e7de14797de48d5e2" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a900df7d46cd130c61b8d235b16fe1740b305e" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292df3dc62007f310b3c79925b96c07e718c31aa" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;data-time-format#v:dateFmt&quot;&gt;dateFmt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;locale&lt;/code&gt; (e.g. &lt;code&gt;%m/%d/%y&lt;/code&gt;)</source>
          <target state="translated">как &lt;code&gt;locale&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-time-format#v:dateFmt&quot;&gt;dateFmt&lt;/a&gt;&lt;/code&gt; (например, &lt;code&gt;%m/%d/%y&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="291a1609f67076e32d715dddabdba1cf4c5c5b5e" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;data-time-format#v:dateTimeFmt&quot;&gt;dateTimeFmt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;locale&lt;/code&gt; (e.g. &lt;code&gt;%a %b %e %H:%M:%S %Z %Y&lt;/code&gt;)</source>
          <target state="translated">как &lt;code&gt;locale&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-time-format#v:dateTimeFmt&quot;&gt;dateTimeFmt&lt;/a&gt;&lt;/code&gt; (например, &lt;code&gt;%a %b %e %H:%M:%S %Z %Y&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="970b1db84cd96ca172b047731015ba6ecda1ba07" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;data-time-format#v:time12Fmt&quot;&gt;time12Fmt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;locale&lt;/code&gt; (e.g. &lt;code&gt;%I:%M:%S %p&lt;/code&gt;)</source>
          <target state="translated">как &lt;code&gt;locale&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-time-format#v:time12Fmt&quot;&gt;time12Fmt&lt;/a&gt;&lt;/code&gt; (например, &lt;code&gt;%I:%M:%S %p&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="df1972bf94c556a7884296d05bdc48fcccce16f2" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;data-time-format#v:timeFmt&quot;&gt;timeFmt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;locale&lt;/code&gt; (e.g. &lt;code&gt;%H:%M:%S&lt;/code&gt;)</source>
          <target state="translated">как &lt;code&gt;locale&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-time-format#v:timeFmt&quot;&gt;timeFmt&lt;/a&gt;&lt;/code&gt; (например, &lt;code&gt;%H:%M:%S&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f7e96f215927e941b653cff123cbcf2de8abbff1" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrno&quot;&gt;throwErrno&lt;/a&gt;&lt;/code&gt; , но при необходимости исключения включают указанный путь.</target>
        </trans-unit>
        <trans-unit id="bdf24192f6eeea66c9cad99a9d280aea79054142" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but discards the result of the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action after error handling.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt; , но отбрасывает результат действия &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; после обработки ошибки.</target>
        </trans-unit>
        <trans-unit id="a98feb25d133ec0151cd4a528cf48c56551e9f63" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt; , но при необходимости исключения включают указанный путь.</target>
        </trans-unit>
        <trans-unit id="5f6c31933ee748b74fb263ed08a51305b4ea18e9" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt;, but retry the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action when it yields the error code &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eINTR&quot;&gt;eINTR&lt;/a&gt;&lt;/code&gt; - this amounts to the standard retry loop for interrupted POSIX system calls.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf&quot;&gt;throwErrnoIf&lt;/a&gt;&lt;/code&gt; , но повторить действие &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; когда оно выдает код ошибки &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eINTR&quot;&gt;eINTR&lt;/a&gt;&lt;/code&gt; - это соответствует стандартному циклу повтора для прерванных системных вызовов POSIX.</target>
        </trans-unit>
        <trans-unit id="ed7aca01b1bcc64bdb45cf9da3e07b273e9e0df3" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt; , но отбрасывает результат.</target>
        </trans-unit>
        <trans-unit id="8a37df41ad608f22eddaaf22361006ad30fa864f" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1&quot;&gt;throwErrnoIfMinus1&lt;/a&gt;&lt;/code&gt; , но исключения включают указанный путь, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="4cc4fb680d1e77a08ff23d577d37af2100e211a6" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1Retry&quot;&gt;throwErrnoIfMinus1Retry&lt;/a&gt;&lt;/code&gt;, but checks for operations that would block.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1Retry&quot;&gt;throwErrnoIfMinus1Retry&lt;/a&gt;&lt;/code&gt; , но проверяет операции, которые могут быть заблокированы.</target>
        </trans-unit>
        <trans-unit id="598153ee0de2ca393ccb04fdeb820cd54cee0e16" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1RetryMayBlock&quot;&gt;throwErrnoIfMinus1RetryMayBlock&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1RetryMayBlock&quot;&gt;throwErrnoIfMinus1RetryMayBlock&lt;/a&gt;&lt;/code&gt; , но отбрасывает результат.</target>
        </trans-unit>
        <trans-unit id="b8edcd7d36c2fd591e6897e4332eaab46dc764e7" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt; , но исключения включают указанный путь, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="9804d1ba7b8da3c9e3a4ef99531988c78f218222" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfNull&quot;&gt;throwErrnoIfNull&lt;/a&gt;&lt;/code&gt; , но исключения включают указанный путь, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="c8698d99887005060341f5b60b398465646cf6fb" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfNullRetry&quot;&gt;throwErrnoIfNullRetry&lt;/a&gt;&lt;/code&gt;, but checks for operations that would block.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfNullRetry&quot;&gt;throwErrnoIfNullRetry&lt;/a&gt;&lt;/code&gt; , но проверяет операции, которые могут быть заблокированы.</target>
        </trans-unit>
        <trans-unit id="b19b8fabcd211661d8b5390b377c495088fc70f4" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetry&quot;&gt;throwErrnoIfRetry&lt;/a&gt;&lt;/code&gt;, but additionally if the operation yields the error code &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eAGAIN&quot;&gt;eAGAIN&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eWOULDBLOCK&quot;&gt;eWOULDBLOCK&lt;/a&gt;&lt;/code&gt;, an alternative action is executed before retrying.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetry&quot;&gt;throwErrnoIfRetry&lt;/a&gt;&lt;/code&gt; , но дополнительно, если операция дает код ошибки &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eAGAIN&quot;&gt;eAGAIN&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:eWOULDBLOCK&quot;&gt;eWOULDBLOCK&lt;/a&gt;&lt;/code&gt; , перед повторной попыткой выполняется альтернативное действие.</target>
        </trans-unit>
        <trans-unit id="1eb02da65c06d772e342d2fae781776b4596b374" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetry&quot;&gt;throwErrnoIfRetry&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetry&quot;&gt;throwErrnoIfRetry&lt;/a&gt;&lt;/code&gt; , но отбрасывает результат.</target>
        </trans-unit>
        <trans-unit id="41a70d526fc5d66b6e72036d342b71b990840eaf" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetryMayBlock&quot;&gt;throwErrnoIfRetryMayBlock&lt;/a&gt;&lt;/code&gt;, but discards the result.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIfRetryMayBlock&quot;&gt;throwErrnoIfRetryMayBlock&lt;/a&gt;&lt;/code&gt; , но отбрасывает результат.</target>
        </trans-unit>
        <trans-unit id="669c7af8f0cadb94cd9f2b594244dcd11aacc58a" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;foreign-c-error#v:throwErrnoIf_&quot;&gt;throwErrnoIf_&lt;/a&gt;&lt;/code&gt; , но при необходимости исключения включают указанный путь.</target>
        </trans-unit>
        <trans-unit id="0743fe895c0907bd9048df44c862343c74e6cfac" translate="yes" xml:space="preserve">
          <source>as &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt;, but exceptions include the given path when appropriate.</source>
          <target state="translated">как &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:throwErrnoIfMinus1_&quot;&gt;throwErrnoIfMinus1_&lt;/a&gt;&lt;/code&gt; , но исключения включают указанный путь, когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="4bdb9edb01ac73d5dfc0966b5d0f87bfb05bf2d4" translate="yes" xml:space="preserve">
          <source>as a variant of &lt;code&gt;putStrLn&lt;/code&gt; that will get its call-site and print it, along with the string given as argument. We can access the call-stack inside &lt;code&gt;putStrLnWithCallStack&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;ghc-stack#v:callStack&quot;&gt;callStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">как вариант &lt;code&gt;putStrLn&lt;/code&gt; , который получит свой сайт вызова и распечатает его вместе со строкой, указанной в качестве аргумента. Мы можем получить доступ к стеку вызовов внутри &lt;code&gt;putStrLnWithCallStack&lt;/code&gt; с помощью &lt;code&gt;&lt;a href=&quot;ghc-stack#v:callStack&quot;&gt;callStack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f6f25e3f987bc94c803c4edfff11a7724cd8a42" translate="yes" xml:space="preserve">
          <source>as the latter associates &lt;code&gt;mappend&lt;/code&gt; to the left.</source>
          <target state="translated">поскольку последний ассоциирует &lt;code&gt;mappend&lt;/code&gt; слева.</target>
        </trans-unit>
        <trans-unit id="0ec49f33a5c0fd6f9c40b5d1e5c86efdf6e0513e" translate="yes" xml:space="preserve">
          <source>as the latter associates &lt;code&gt;mappend&lt;/code&gt; to the left. Or, equivalently, prefer</source>
          <target state="translated">поскольку последний ассоциирует &lt;code&gt;mappend&lt;/code&gt; слева. Или, что то же самое, предпочитать</target>
        </trans-unit>
        <trans-unit id="2f7bcccbf546e4a1340bef75a56622aaee918661" translate="yes" xml:space="preserve">
          <source>asForeignPtr</source>
          <target state="translated">asForeignPtr</target>
        </trans-unit>
        <trans-unit id="9c29488bac6732c312d5e1817af558a3ade02e0b" translate="yes" xml:space="preserve">
          <source>asP</source>
          <target state="translated">asP</target>
        </trans-unit>
        <trans-unit id="0a1a0a9d0fe57896cd23296365b42da1d2dc4c01" translate="yes" xml:space="preserve">
          <source>asProxyTypeOf</source>
          <target state="translated">asProxyTypeOf</target>
        </trans-unit>
        <trans-unit id="59cf77a30e5e610fb9842bb358fa075e5d50f012" translate="yes" xml:space="preserve">
          <source>asTypeOf</source>
          <target state="translated">asTypeOf</target>
        </trans-unit>
        <trans-unit id="51c066b36ea8b32076964c766f8a0324ca4eb4b9" translate="yes" xml:space="preserve">
          <source>ascii</source>
          <target state="translated">ascii</target>
        </trans-unit>
        <trans-unit id="da10be596dd940edab68f6508f410c8033a12c17" translate="yes" xml:space="preserve">
          <source>asciiTab</source>
          <target state="translated">asciiTab</target>
        </trans-unit>
        <trans-unit id="3b7c2523ef37662f91fb9233bee7fc9451493c6a" translate="yes" xml:space="preserve">
          <source>ascii_decode</source>
          <target state="translated">ascii_decode</target>
        </trans-unit>
        <trans-unit id="c60994a2e4ac1f3ba12a2bd38fd2ed607346c0bd" translate="yes" xml:space="preserve">
          <source>ascii_encode</source>
          <target state="translated">ascii_encode</target>
        </trans-unit>
        <trans-unit id="ca2d03115a335901df8d495a843c04f7cc55294c" translate="yes" xml:space="preserve">
          <source>ashley@semantic.org</source>
          <target state="translated">ashley@semantic.org</target>
        </trans-unit>
        <trans-unit id="8ab4958aa4c54efdc364c319ca6616fd33eab112" translate="yes" xml:space="preserve">
          <source>asin (Floating)</source>
          <target state="translated">асин (плавающий)</target>
        </trans-unit>
        <trans-unit id="0c63938f823ed86bbe8104784ae1d8817a7e3686" translate="yes" xml:space="preserve">
          <source>asinDouble</source>
          <target state="translated">asinDouble</target>
        </trans-unit>
        <trans-unit id="aadb01d2056340843324c3da5565923a1eca49ea" translate="yes" xml:space="preserve">
          <source>asinDouble#</source>
          <target state="translated">asinDouble#</target>
        </trans-unit>
        <trans-unit id="4d1b4aa15ef446aaf2f36efe1163d12eadce3150" translate="yes" xml:space="preserve">
          <source>asinFloat</source>
          <target state="translated">asinFloat</target>
        </trans-unit>
        <trans-unit id="466d0916fd029dd1a0be7a1ddad3a0a8d6022554" translate="yes" xml:space="preserve">
          <source>asinFloat#</source>
          <target state="translated">asinFloat#</target>
        </trans-unit>
        <trans-unit id="6f5241ed5c8c1d065bcdd826ec0db80b2c41f9d5" translate="yes" xml:space="preserve">
          <source>asinh (Floating)</source>
          <target state="translated">асинх (Плавающий)</target>
        </trans-unit>
        <trans-unit id="6a3a79e625e3c37b27c88131adf3361a4bbd3b51" translate="yes" xml:space="preserve">
          <source>asinhDouble</source>
          <target state="translated">asinhDouble</target>
        </trans-unit>
        <trans-unit id="bb15e70a287c413a82c6520b9672b673bc72f23c" translate="yes" xml:space="preserve">
          <source>asinhDouble#</source>
          <target state="translated">asinhDouble#</target>
        </trans-unit>
        <trans-unit id="0ddf6991a935b88788a9c19aaba2458e17863c64" translate="yes" xml:space="preserve">
          <source>asinhFloat</source>
          <target state="translated">asinhFloat</target>
        </trans-unit>
        <trans-unit id="73575de3303288f9d3181229eed89e6146960f3a" translate="yes" xml:space="preserve">
          <source>asinhFloat#</source>
          <target state="translated">asinhFloat#</target>
        </trans-unit>
        <trans-unit id="1c8f09270fc33a393af3eaf0b2ebf58eb9bbbcc2" translate="yes" xml:space="preserve">
          <source>ask</source>
          <target state="translated">ask</target>
        </trans-unit>
        <trans-unit id="26b0aff2ef859d930a04e2bd423d2b11109c8b4b" translate="yes" xml:space="preserve">
          <source>ask (MonadReader)</source>
          <target state="translated">спросить (MonadReader)</target>
        </trans-unit>
        <trans-unit id="a2f8909c86e91117070277875fbe03ff7e61c8a8" translate="yes" xml:space="preserve">
          <source>asks</source>
          <target state="translated">asks</target>
        </trans-unit>
        <trans-unit id="5b9a307943f0d16237239e002d1dd9ba522e93aa" translate="yes" xml:space="preserve">
          <source>aslatter@gmail.com</source>
          <target state="translated">aslatter@gmail.com</target>
        </trans-unit>
        <trans-unit id="cd2e8cfa846b1038a2c00c38e0753eb7f162dc23" translate="yes" xml:space="preserve">
          <source>assembler</source>
          <target state="translated">assembler</target>
        </trans-unit>
        <trans-unit id="64b5daad5073849378993ba34e058d7008293097" translate="yes" xml:space="preserve">
          <source>assert</source>
          <target state="translated">assert</target>
        </trans-unit>
        <trans-unit id="331818bdb6b82eee2ad1926a159dee726d981108" translate="yes" xml:space="preserve">
          <source>assertError</source>
          <target state="translated">assertError</target>
        </trans-unit>
        <trans-unit id="20eaf0193c1a0e9284d8a930cf806a43ab9fb8d4" translate="yes" xml:space="preserve">
          <source>association list</source>
          <target state="translated">список ассоциаций</target>
        </trans-unit>
        <trans-unit id="e58c4b53165caa444bed9a1d506569c916774721" translate="yes" xml:space="preserve">
          <source>assocs</source>
          <target state="translated">assocs</target>
        </trans-unit>
        <trans-unit id="cccf0912d9c37aa31708ddf4ec02b6da7101c49c" translate="yes" xml:space="preserve">
          <source>asum</source>
          <target state="translated">asum</target>
        </trans-unit>
        <trans-unit id="bf4172a1b40fa1ad58df6d838b23b886f07ca355" translate="yes" xml:space="preserve">
          <source>asyncExceptionFromException</source>
          <target state="translated">asyncExceptionFromException</target>
        </trans-unit>
        <trans-unit id="f6ad4d48a787677d35259d8dfe8b961a822239ef" translate="yes" xml:space="preserve">
          <source>asyncExceptionToException</source>
          <target state="translated">asyncExceptionToException</target>
        </trans-unit>
        <trans-unit id="f27f1bd487bd79ecde66ad956cc1b76df04a2b93" translate="yes" xml:space="preserve">
          <source>asynchronous exceptions are unmasked (the normal state)</source>
          <target state="translated">асинхронные исключения размаскированы (нормальное состояние)</target>
        </trans-unit>
        <trans-unit id="ac16cfd6ae8d97d8022bfbfb2185827798fcd682" translate="yes" xml:space="preserve">
          <source>asynchronous: the actual putMVar may be performed after the call returns (for example, if the RTS is currently garbage collecting). That&amp;rsquo;s why &lt;code&gt;hs_try_putmvar()&lt;/code&gt; doesn&amp;rsquo;t return a result to say whether the put succeeded. It is your responsibility to ensure that the &lt;code&gt;MVar&lt;/code&gt; is empty; if it is full, &lt;code&gt;hs_try_putmvar()&lt;/code&gt; will have no effect.</source>
          <target state="translated">асинхронный: фактическая переменная putMVar может быть выполнена после возврата вызова (например, если RTS в настоящее время выполняет сборку мусора). Вот почему &lt;code&gt;hs_try_putmvar()&lt;/code&gt; не возвращает результат, чтобы сказать, успешно ли помещен. Вы &lt;code&gt;MVar&lt;/code&gt; ответственность за то, чтобы MVar был пуст; если он заполнен, &lt;code&gt;hs_try_putmvar()&lt;/code&gt; будет иметь никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="07e381931523b54b284216ff3f12c77f8a1babc7" translate="yes" xml:space="preserve">
          <source>at compile-time, using &lt;code&gt;-with-rtsopts=⟨opts⟩&lt;/code&gt; (&lt;a href=&quot;#rts-opts-compile-time&quot;&gt;Setting RTS options at compile time&lt;/a&gt;)</source>
          <target state="translated">во время компиляции, используя &lt;code&gt;-with-rtsopts=⟨opts⟩&lt;/code&gt; ( &lt;a href=&quot;#rts-opts-compile-time&quot;&gt;установка параметров RTS во время компиляции&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="841382eece6b02b23cdf81905c9c082c29dd6750" translate="yes" xml:space="preserve">
          <source>at least for strict &lt;code&gt;k&lt;/code&gt;. (This should be automatic if you&amp;rsquo;re not using &lt;code&gt;seq&lt;/code&gt;.) This ensures that environments seen by the subcommands are environments of the whole command, and also allows the translation to safely trim these environments. (The second component of the input pairs can contain unnamed input values, as described in the next section.) The operator must also not use any variable defined within the current arrow abstraction.</source>
          <target state="translated">хотя бы для строгого &lt;code&gt;k&lt;/code&gt; . (Это должно быть автоматическим, если вы не используете &lt;code&gt;seq&lt;/code&gt; .) Это гарантирует, что среды, видимые подкомандами, являются средами всей команды, а также позволяет трансляции безопасно обрезать эти среды. (Второй компонент входных пар может содержать безымянные входные значения, как описано в следующем разделе.) Оператор также не должен использовать какие-либо переменные, определенные в текущей абстракции стрелки.</target>
        </trans-unit>
        <trans-unit id="dc8a09c1c2595ed7a7a3b2986b6d0807e3341155" translate="yes" xml:space="preserve">
          <source>at the prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686eeca8176d8cc53292cd978c09588d3431b398" translate="yes" xml:space="preserve">
          <source>at top level</source>
          <target state="translated">на высшем уровне</target>
        </trans-unit>
        <trans-unit id="279683d42bd96937141868b95971f01746b87ca9" translate="yes" xml:space="preserve">
          <source>atan2 (RealFloat)</source>
          <target state="translated">atan2 (RealFloat)</target>
        </trans-unit>
        <trans-unit id="4a27b4dad5038f014c060a6e03423dd5683cd2e1" translate="yes" xml:space="preserve">
          <source>atanDouble</source>
          <target state="translated">atanDouble</target>
        </trans-unit>
        <trans-unit id="791c56b87f8aeac733c32f85c17be8c1d6e8ff2d" translate="yes" xml:space="preserve">
          <source>atanDouble#</source>
          <target state="translated">atanDouble#</target>
        </trans-unit>
        <trans-unit id="12a19eaa6a0a56b112ead4430aa9de73d52a5937" translate="yes" xml:space="preserve">
          <source>atanFloat</source>
          <target state="translated">atanFloat</target>
        </trans-unit>
        <trans-unit id="fb74964bdc54ca68a808186703fa440baf02fca5" translate="yes" xml:space="preserve">
          <source>atanFloat#</source>
          <target state="translated">atanFloat#</target>
        </trans-unit>
        <trans-unit id="17590fa63d5b0284f1a569d89f38e04818c73107" translate="yes" xml:space="preserve">
          <source>atanhDouble</source>
          <target state="translated">atanhDouble</target>
        </trans-unit>
        <trans-unit id="ea9fd29206ac6a7fd6e13be3ba89509ac3bf4fa2" translate="yes" xml:space="preserve">
          <source>atanhDouble#</source>
          <target state="translated">atanhDouble#</target>
        </trans-unit>
        <trans-unit id="d8f70827d2119a01785ddde4cddcf40bbd328905" translate="yes" xml:space="preserve">
          <source>atanhFloat</source>
          <target state="translated">atanhFloat</target>
        </trans-unit>
        <trans-unit id="ca6c218f732b3a65fde0a91d2c0c8bb32bc18a54" translate="yes" xml:space="preserve">
          <source>atanhFloat#</source>
          <target state="translated">atanhFloat#</target>
        </trans-unit>
        <trans-unit id="37f2a114321eb35683cbe582c206f91b9444919f" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef</source>
          <target state="translated">atomicModifyIORef</target>
        </trans-unit>
        <trans-unit id="aaab5fca3a784d01a1fa679f7b3bda0da428539f" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef&amp;#x27;</source>
          <target state="translated">atomicModifyIORef&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="76498065a0459b00d75f1486b688eff4bb5daf79" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef&amp;#x27;_</source>
          <target state="translated">atomicModifyIORef&amp;#x27;_</target>
        </trans-unit>
        <trans-unit id="59ba5625a988c56daa8a4477ef1b473e13245e69" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef2</source>
          <target state="translated">atomicModifyIORef2</target>
        </trans-unit>
        <trans-unit id="e5070f03e1c36359942e14319ab0a04fa1a8efd3" translate="yes" xml:space="preserve">
          <source>atomicModifyIORef2Lazy</source>
          <target state="translated">atomicModifyIORef2Lazy</target>
        </trans-unit>
        <trans-unit id="5c79d9a757131488cca33cafd56d14c09d974504" translate="yes" xml:space="preserve">
          <source>atomicModifyIORefLazy_</source>
          <target state="translated">atomicModifyIORefLazy_</target>
        </trans-unit>
        <trans-unit id="6baa1456309aa779040c8e3898b95a3cd5941d2d" translate="yes" xml:space="preserve">
          <source>atomicModifyIORefP</source>
          <target state="translated">atomicModifyIORefP</target>
        </trans-unit>
        <trans-unit id="277573c1ff027b94839102be35105dac13beb430" translate="yes" xml:space="preserve">
          <source>atomicModifyMutVar#</source>
          <target state="translated">atomicModifyMutVar#</target>
        </trans-unit>
        <trans-unit id="cf9bcd290c284cca99a1a92d8d23c1e33c369948" translate="yes" xml:space="preserve">
          <source>atomicModifyMutVar2#</source>
          <target state="translated">atomicModifyMutVar2#</target>
        </trans-unit>
        <trans-unit id="8afe9283db349a10f51bf06015ef958b0005d2bf" translate="yes" xml:space="preserve">
          <source>atomicModifyMutVar_#</source>
          <target state="translated">atomicModifyMutVar_#</target>
        </trans-unit>
        <trans-unit id="571d2c16821da3f0d253347c1452ec53d054f56c" translate="yes" xml:space="preserve">
          <source>atomicReadIntArray#</source>
          <target state="translated">atomicReadIntArray#</target>
        </trans-unit>
        <trans-unit id="8958e94565e0dd853f3923753d1550276eafdb75" translate="yes" xml:space="preserve">
          <source>atomicSwapIORef</source>
          <target state="translated">atomicSwapIORef</target>
        </trans-unit>
        <trans-unit id="1650c5513a5c658d9f0f7869503d84921f910e31" translate="yes" xml:space="preserve">
          <source>atomicWriteIORef</source>
          <target state="translated">atomicWriteIORef</target>
        </trans-unit>
        <trans-unit id="5c1ff7d510d6a193972699afa30c4cb601de7002" translate="yes" xml:space="preserve">
          <source>atomicWriteIntArray#</source>
          <target state="translated">atomicWriteIntArray#</target>
        </trans-unit>
        <trans-unit id="035c31229bf4f528a298d211c7911c455d388b84" translate="yes" xml:space="preserve">
          <source>atomically</source>
          <target state="translated">atomically</target>
        </trans-unit>
        <trans-unit id="df2fb53fcb53403bb5fdd797b42e38c59407cede" translate="yes" xml:space="preserve">
          <source>atomically#</source>
          <target state="translated">atomically#</target>
        </trans-unit>
        <trans-unit id="b33ef518505469185ccab5a61fb50217dab84a35" translate="yes" xml:space="preserve">
          <source>attempts to parse a value from the front of the string, returning a list of (parsed value, remaining string) pairs. If there is no successful parse, the returned list is empty.</source>
          <target state="translated">пытается разобрать значение из передней части строки,возвращая список пар (разобранное значение,оставшаяся строка).Если нет успешного разбора,возвращаемый список пуст.</target>
        </trans-unit>
        <trans-unit id="d6bc890ddcf8a44060c47dafdb46321b799b3f05" translate="yes" xml:space="preserve">
          <source>augment</source>
          <target state="translated">augment</target>
        </trans-unit>
        <trans-unit id="d13b4658cef0107758394496a571bcb9a325039f" translate="yes" xml:space="preserve">
          <source>augmentIOError</source>
          <target state="translated">augmentIOError</target>
        </trans-unit>
        <trans-unit id="5a75ab98e10ba559ee7bc1a7009d08c5d6da36a7" translate="yes" xml:space="preserve">
          <source>autoLeftMargin</source>
          <target state="translated">autoLeftMargin</target>
        </trans-unit>
        <trans-unit id="90d8d7a015405319a777247de83767f218d4afb0" translate="yes" xml:space="preserve">
          <source>autoRightMargin</source>
          <target state="translated">autoRightMargin</target>
        </trans-unit>
        <trans-unit id="808de801e98ad6b34bce4b8ca076574a52a93aed" translate="yes" xml:space="preserve">
          <source>avoiding a few redundant allocations</source>
          <target state="translated">избегая нескольких излишних ассигнований</target>
        </trans-unit>
        <trans-unit id="3446c7d499589ede568f2c16f54669c219ded4e8" translate="yes" xml:space="preserve">
          <source>awaitSignal</source>
          <target state="translated">awaitSignal</target>
        </trans-unit>
        <trans-unit id="248a20b62efba8f4303c75830c83230f1b088f1e" translate="yes" xml:space="preserve">
          <source>background</source>
          <target state="translated">background</target>
        </trans-unit>
        <trans-unit id="f54b7ea09b331b8019120b505ad8db889f36e065" translate="yes" xml:space="preserve">
          <source>backgroundRead</source>
          <target state="translated">backgroundRead</target>
        </trans-unit>
        <trans-unit id="2140356f0e9b5ffe96dd20d4b68a8dab81e31e9d" translate="yes" xml:space="preserve">
          <source>backgroundWrite</source>
          <target state="translated">backgroundWrite</target>
        </trans-unit>
        <trans-unit id="4ddac83c47bfe8a4e056b0e440bd90d679ba18c8" translate="yes" xml:space="preserve">
          <source>badIO</source>
          <target state="translated">badIO</target>
        </trans-unit>
        <trans-unit id="54794ca033082925c04a6e2c1e3e1c9b459a6ed0" translate="yes" xml:space="preserve">
          <source>badSafeIndex</source>
          <target state="translated">badSafeIndex</target>
        </trans-unit>
        <trans-unit id="7b6bc3e94c887f46e187788740be96cdf64e1aa0" translate="yes" xml:space="preserve">
          <source>badSystemCall</source>
          <target state="translated">badSystemCall</target>
        </trans-unit>
        <trans-unit id="6217e69f789ed5f163d5136d4ae52dcd00b047a7" translate="yes" xml:space="preserve">
          <source>balanced</source>
          <target state="translated">balanced</target>
        </trans-unit>
        <trans-unit id="0ab79927a592f1727d4d2c6abd69b159462b349d" translate="yes" xml:space="preserve">
          <source>bang</source>
          <target state="translated">bang</target>
        </trans-unit>
        <trans-unit id="8e0470d66678fb379e74f57f2c01044d53046aa6" translate="yes" xml:space="preserve">
          <source>bangP</source>
          <target state="translated">bangP</target>
        </trans-unit>
        <trans-unit id="bd48a75a6e210331105de89ac8faf7be41bdceab" translate="yes" xml:space="preserve">
          <source>bangType</source>
          <target state="translated">bangType</target>
        </trans-unit>
        <trans-unit id="62cdb7020ff920e5aa642c3d4066950dd1f01f4d" translate="yes" xml:space="preserve">
          <source>bar</source>
          <target state="translated">bar</target>
        </trans-unit>
        <trans-unit id="1405df66cbe219b0bf6355bc3d60361a8376b6b4" translate="yes" xml:space="preserve">
          <source>base</source>
          <target state="translated">base</target>
        </trans-unit>
        <trans-unit id="29569af7293fbb608560d9e9c3e35c7c3a817c10" translate="yes" xml:space="preserve">
          <source>base-2 logarithm of &lt;em&gt;blk_sz&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e020ea1ef8f134b08044839fe5697e90f67435d1" translate="yes" xml:space="preserve">
          <source>basefont</source>
          <target state="translated">basefont</target>
        </trans-unit>
        <trans-unit id="e87b45953875b7caad2f0266b83919ebff7fb937" translate="yes" xml:space="preserve">
          <source>bcc</source>
          <target state="translated">bcc</target>
        </trans-unit>
        <trans-unit id="910273218ae5b885464f7e6c8bddecee249e65f5" translate="yes" xml:space="preserve">
          <source>bdo</source>
          <target state="translated">bdo</target>
        </trans-unit>
        <trans-unit id="ebdd7551b2d98e64c961486c2a3a6ff2c8f830d7" translate="yes" xml:space="preserve">
          <source>because GHC does not allow type constructors applied to for-all types.</source>
          <target state="translated">потому что GHC не позволяет использовать конструкторы типов для всех типов.</target>
        </trans-unit>
        <trans-unit id="e805ee658f9c460b06720196966dd85296d6e4bb" translate="yes" xml:space="preserve">
          <source>because according to the report, the &lt;code&gt;let&lt;/code&gt; expression &amp;ldquo;extends as far to the right as possible&amp;rdquo;. Since it can&amp;rsquo;t extend past the second equals sign without causing a parse error (&lt;code&gt;==&lt;/code&gt; is non-fix), the &lt;code&gt;let&lt;/code&gt;-expression must terminate there. GHC simply gobbles up the whole expression, parsing like this:</source>
          <target state="translated">потому что, согласно отчету, выражение &lt;code&gt;let&lt;/code&gt; &amp;laquo;простирается как можно дальше вправо&amp;raquo;. Поскольку он не может выходить за второй знак равенства, не вызывая ошибки синтаксического анализа ( &lt;code&gt;==&lt;/code&gt; не исправлено), &lt;code&gt;let&lt;/code&gt; -выражение должно на этом завершаться. GHC просто поглощает все выражение целиком, выполняя синтаксический анализ следующим образом:</target>
        </trans-unit>
        <trans-unit id="abe60f172be3b07770a2e3323f768af75903c1cc" translate="yes" xml:space="preserve">
          <source>because it moves several variables out of the inner loop.</source>
          <target state="translated">потому что он перемещает несколько переменных из внутреннего цикла.</target>
        </trans-unit>
        <trans-unit id="d9901eccb94d56def92a11f936488f5aa3028af1" translate="yes" xml:space="preserve">
          <source>because layout translates it as</source>
          <target state="translated">потому что макет переводит его как</target>
        </trans-unit>
        <trans-unit id="93d53ed69a40db0047beb9ee6c816d706547b112" translate="yes" xml:space="preserve">
          <source>because the derived instance</source>
          <target state="translated">потому что производный экземпляр</target>
        </trans-unit>
        <trans-unit id="275b55ce602c1618ed593dac2e71ff8868de2c13" translate="yes" xml:space="preserve">
          <source>because the type variable &lt;code&gt;s&lt;/code&gt; occurs in &lt;code&gt;State s m&lt;/code&gt;, and so cannot be &amp;ldquo;eta-converted&amp;rdquo; away. It is a good thing that this &lt;code&gt;deriving&lt;/code&gt; clause is rejected, because &lt;code&gt;NonMonad m&lt;/code&gt; is not, in fact, a monad &amp;mdash; for the same reason. Try defining &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; with the correct type: you won&amp;rsquo;t be able to.</source>
          <target state="translated">потому что переменная типа &lt;code&gt;s&lt;/code&gt; встречается в &lt;code&gt;State s m&lt;/code&gt; и не может быть &amp;laquo;преобразована в эту&amp;raquo;. Это хорошо, что это &lt;code&gt;deriving&lt;/code&gt; предложение отклонено, потому что &lt;code&gt;NonMonad m&lt;/code&gt; на самом деле не является монадой - по той же причине. Попробуйте определить &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; с правильным типом: вы не сможете.</target>
        </trans-unit>
        <trans-unit id="c02ceb78ff4863ee1a75d232c4f53af56b182ec9" translate="yes" xml:space="preserve">
          <source>becomes:</source>
          <target state="translated">becomes:</target>
        </trans-unit>
        <trans-unit id="25d4f172feced085f8da17d458f640ffad47ca65" translate="yes" xml:space="preserve">
          <source>beginDeferWindowPos</source>
          <target state="translated">beginDeferWindowPos</target>
        </trans-unit>
        <trans-unit id="bf5b6f618f1773563185d77326e1f1c36867708e" translate="yes" xml:space="preserve">
          <source>beginPaint</source>
          <target state="translated">beginPaint</target>
        </trans-unit>
        <trans-unit id="04bf886e8ac26aef79ce20e35be5e4e7220e2db3" translate="yes" xml:space="preserve">
          <source>bell</source>
          <target state="translated">bell</target>
        </trans-unit>
        <trans-unit id="d1c8869983ffe3b4f9abe1dc851bda61399ef6e6" translate="yes" xml:space="preserve">
          <source>beside</source>
          <target state="translated">beside</target>
        </trans-unit>
        <trans-unit id="94a325fbad774506643bcbe612567eb0ffe5f2fe" translate="yes" xml:space="preserve">
          <source>besides</source>
          <target state="translated">besides</target>
        </trans-unit>
        <trans-unit id="709634051471385aada32356842983beeff4b065" translate="yes" xml:space="preserve">
          <source>between</source>
          <target state="translated">between</target>
        </trans-unit>
        <trans-unit id="a0cdafd233cbaab2a9872ea8f8ae7581da6ba991" translate="yes" xml:space="preserve">
          <source>betweenSize</source>
          <target state="translated">betweenSize</target>
        </trans-unit>
        <trans-unit id="870d252224979a90e62fe3dfae2a37da5097e6fa" translate="yes" xml:space="preserve">
          <source>bgcolor</source>
          <target state="translated">bgcolor</target>
        </trans-unit>
        <trans-unit id="5fe1effab7e467663478de549c8df90ff86372b0" translate="yes" xml:space="preserve">
          <source>biList</source>
          <target state="translated">biList</target>
        </trans-unit>
        <trans-unit id="a29450bec3a3589b279c0948b8063a67ac9e0757" translate="yes" xml:space="preserve">
          <source>biall</source>
          <target state="translated">biall</target>
        </trans-unit>
        <trans-unit id="00f0211353249bf0e58ba56c7be776f845161e55" translate="yes" xml:space="preserve">
          <source>biand</source>
          <target state="translated">biand</target>
        </trans-unit>
        <trans-unit id="0ed64e17fbcb9435a4b0fb68b00971aaad576558" translate="yes" xml:space="preserve">
          <source>biany</source>
          <target state="translated">biany</target>
        </trans-unit>
        <trans-unit id="41322bdf72449d66ef86f0acb2b5e5cba0392d22" translate="yes" xml:space="preserve">
          <source>biasum</source>
          <target state="translated">biasum</target>
        </trans-unit>
        <trans-unit id="6d0b73fbf7591ec6a14fcf194cd7154596972155" translate="yes" xml:space="preserve">
          <source>biconcat</source>
          <target state="translated">biconcat</target>
        </trans-unit>
        <trans-unit id="0beef8ddc76a511f095195bb24509617d0506ea1" translate="yes" xml:space="preserve">
          <source>biconcatMap</source>
          <target state="translated">biconcatMap</target>
        </trans-unit>
        <trans-unit id="e82a328908f724f886dd94265a71641504d6fa3e" translate="yes" xml:space="preserve">
          <source>bielem</source>
          <target state="translated">bielem</target>
        </trans-unit>
        <trans-unit id="40acb1a8fbde0ccfb9056001870625497a46d9bd" translate="yes" xml:space="preserve">
          <source>bifind</source>
          <target state="translated">bifind</target>
        </trans-unit>
        <trans-unit id="9e4a7383da4d79a93f908a594eb6a160011fc94f" translate="yes" xml:space="preserve">
          <source>bifold (Bifoldable)</source>
          <target state="translated">раздвоенный (раздвоенный)</target>
        </trans-unit>
        <trans-unit id="bcb0288dc54254a2d7108d44583a2b0b43c0ee3b" translate="yes" xml:space="preserve">
          <source>bifoldMap (Bifoldable)</source>
          <target state="translated">бифолдКарта (бифолдКарта)</target>
        </trans-unit>
        <trans-unit id="102fdda1302e8724f8058b275be3811d36ccf065" translate="yes" xml:space="preserve">
          <source>bifoldMapDefault</source>
          <target state="translated">bifoldMapDefault</target>
        </trans-unit>
        <trans-unit id="faa946782e982acac423fbaed8864996776d423c" translate="yes" xml:space="preserve">
          <source>bifoldl (Bifoldable)</source>
          <target state="translated">раздвоение (бифолдинг)</target>
        </trans-unit>
        <trans-unit id="294b3c9c0ab8b163852b2650d5ed4ca6cc054ad8" translate="yes" xml:space="preserve">
          <source>bifoldl&amp;#x27;</source>
          <target state="translated">bifoldl&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="e0b522e3492c89197e5b5897a798b9e3ef91d191" translate="yes" xml:space="preserve">
          <source>bifoldl1</source>
          <target state="translated">bifoldl1</target>
        </trans-unit>
        <trans-unit id="cc84226c264bf11d1035ff4d949b8a23fed5c607" translate="yes" xml:space="preserve">
          <source>bifoldlM</source>
          <target state="translated">bifoldlM</target>
        </trans-unit>
        <trans-unit id="296f5ac551c6b9df1c50a5e987015a09b1459d8c" translate="yes" xml:space="preserve">
          <source>bifoldr (Bifoldable)</source>
          <target state="translated">раздвоенный (раздвоенный)</target>
        </trans-unit>
        <trans-unit id="2439b81ecf3182d30e5de2eb92002a889d209b1f" translate="yes" xml:space="preserve">
          <source>bifoldr&amp;#x27;</source>
          <target state="translated">bifoldr&amp;#x27;</target>
        </trans-unit>
        <trans-unit id="6cb4a2f54985dae435a7108865c2684e50f1c5cd" translate="yes" xml:space="preserve">
          <source>bifoldr1</source>
          <target state="translated">bifoldr1</target>
        </trans-unit>
        <trans-unit id="99b60545e479d2e7e89f2bcb80c280a69826ca62" translate="yes" xml:space="preserve">
          <source>bifoldrM</source>
          <target state="translated">bifoldrM</target>
        </trans-unit>
        <trans-unit id="b2fe64680fbd74762cadc29f110644de5956c06f" translate="yes" xml:space="preserve">
          <source>bifor</source>
          <target state="translated">bifor</target>
        </trans-unit>
        <trans-unit id="c3d643ddc50a496e9889b78779b57c7b08cffb10" translate="yes" xml:space="preserve">
          <source>biforM</source>
          <target state="translated">biforM</target>
        </trans-unit>
        <trans-unit id="9691cda04cf6118ce3f9ece627fc30026b94bcb7" translate="yes" xml:space="preserve">
          <source>biforM_</source>
          <target state="translated">biforM_</target>
        </trans-unit>
        <trans-unit id="4221cf4ea6c18a13c3ab25d96211126fbc01dc1c" translate="yes" xml:space="preserve">
          <source>bifor_</source>
          <target state="translated">bifor_</target>
        </trans-unit>
        <trans-unit id="95c4bea12e4edcf8aad730a222793324dc42c29d" translate="yes" xml:space="preserve">
          <source>big</source>
          <target state="translated">big</target>
        </trans-unit>
        <trans-unit id="4654e62302abbca1dc8c5be7cfbf7cc32e30a206" translate="yes" xml:space="preserve">
          <source>bigNatToInt</source>
          <target state="translated">bigNatToInt</target>
        </trans-unit>
        <trans-unit id="12bf4403c477d2f174b7d780e129891e6ea93038" translate="yes" xml:space="preserve">
          <source>bigNatToInteger</source>
          <target state="translated">bigNatToInteger</target>
        </trans-unit>
        <trans-unit id="692962999d7f315287cc6ce21ef6dc2e8f1a97bd" translate="yes" xml:space="preserve">
          <source>bigNatToNegInteger</source>
          <target state="translated">bigNatToNegInteger</target>
        </trans-unit>
        <trans-unit id="e0d17b7bff18e538276fea9a638fe1132106520f" translate="yes" xml:space="preserve">
          <source>bigNatToWord</source>
          <target state="translated">bigNatToWord</target>
        </trans-unit>
        <trans-unit id="53e563d0c86b8ceed31c0faa7603f12bc5d0086f" translate="yes" xml:space="preserve">
          <source>bilength</source>
          <target state="translated">bilength</target>
        </trans-unit>
        <trans-unit id="17047bdfe2ff0b0f30babdc53b7c185fcfac6a70" translate="yes" xml:space="preserve">
          <source>bimap (Bifunctor)</source>
          <target state="translated">бимап (Бифунктор)</target>
        </trans-unit>
        <trans-unit id="6610bd2cd6d018c2df92eedba8ea4e6874036c18" translate="yes" xml:space="preserve">
          <source>bimapAccumL</source>
          <target state="translated">bimapAccumL</target>
        </trans-unit>
        <trans-unit id="98e3164e93f32b7d4254d2c099a7bbbea5112a6c" translate="yes" xml:space="preserve">
          <source>bimapAccumR</source>
          <target state="translated">bimapAccumR</target>
        </trans-unit>
        <trans-unit id="dc31914fd4bafde0a7f3445b8b9d59f06f2cc059" translate="yes" xml:space="preserve">
          <source>bimapDefault</source>
          <target state="translated">bimapDefault</target>
        </trans-unit>
        <trans-unit id="8875024c342221102e8396f338452d97261b0833" translate="yes" xml:space="preserve">
          <source>bimapM</source>
          <target state="translated">bimapM</target>
        </trans-unit>
        <trans-unit id="b1e5aaa3ec6c63ea26a55db8ec127f457ea158f2" translate="yes" xml:space="preserve">
          <source>bimapM_</source>
          <target state="translated">bimapM_</target>
        </trans-unit>
        <trans-unit id="40de4e7c019ce55c0cc23bf04f384b14ee1e34b7" translate="yes" xml:space="preserve">
          <source>bimaximum</source>
          <target state="translated">bimaximum</target>
        </trans-unit>
        <trans-unit id="1510e419b048cbba88d1280f8dee38fb37dfa80d" translate="yes" xml:space="preserve">
          <source>bimaximumBy</source>
          <target state="translated">bimaximumBy</target>
        </trans-unit>
        <trans-unit id="e50dbcfb24621fae138a21f53b2773f4e1e5a24e" translate="yes" xml:space="preserve">
          <source>biminimum</source>
          <target state="translated">biminimum</target>
        </trans-unit>
        <trans-unit id="ad9cdb8a48f31c54a908a01a732d12df66cf5d02" translate="yes" xml:space="preserve">
          <source>biminimumBy</source>
          <target state="translated">biminimumBy</target>
        </trans-unit>
        <trans-unit id="af20a4bb0a3ad35ebad1b6b67ec11fb91cea0a5a" translate="yes" xml:space="preserve">
          <source>bimsum</source>
          <target state="translated">bimsum</target>
        </trans-unit>
        <trans-unit id="3cb377e066ede6e6f04f2b56ec085a0f25109b81" translate="yes" xml:space="preserve">
          <source>bindIO</source>
          <target state="translated">bindIO</target>
        </trans-unit>
        <trans-unit id="93896c4721c10251f7a1b788ab491ae442e79881" translate="yes" xml:space="preserve">
          <source>bindQ</source>
          <target state="translated">bindQ</target>
        </trans-unit>
        <trans-unit id="744146c4af990823a3a16ee1258ec54a315bb733" translate="yes" xml:space="preserve">
          <source>bindS</source>
          <target state="translated">bindS</target>
        </trans-unit>
        <trans-unit id="1dade36213d96ce86f55416ca6794efa60c21ad2" translate="yes" xml:space="preserve">
          <source>binotElem</source>
          <target state="translated">binotElem</target>
        </trans-unit>
        <trans-unit id="5b99e762557d42112f3c1c2543bdab268e20bfa3" translate="yes" xml:space="preserve">
          <source>binull</source>
          <target state="translated">binull</target>
        </trans-unit>
        <trans-unit id="3de4a52f42bb2bec1bc3e2822d29712faee37977" translate="yes" xml:space="preserve">
          <source>biography filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bc6e68e0164c59650e60f80dd8cb462aa6bc74" translate="yes" xml:space="preserve">
          <source>bior</source>
          <target state="translated">bior</target>
        </trans-unit>
        <trans-unit id="56b9ed772ce11b1599c43d331debd0387cee2da6" translate="yes" xml:space="preserve">
          <source>biproduct</source>
          <target state="translated">biproduct</target>
        </trans-unit>
        <trans-unit id="6d95e431300442b1d06144e0c2ad9984696e3e0f" translate="yes" xml:space="preserve">
          <source>bisequence</source>
          <target state="translated">bisequence</target>
        </trans-unit>
        <trans-unit id="4f2f6994b2f1a96da05ff723898a1b35a4bcc633" translate="yes" xml:space="preserve">
          <source>bisequenceA</source>
          <target state="translated">bisequenceA</target>
        </trans-unit>
        <trans-unit id="6a87edf4c72fc237e94c4ab7aca152c6591718bf" translate="yes" xml:space="preserve">
          <source>bisequenceA_</source>
          <target state="translated">bisequenceA_</target>
        </trans-unit>
        <trans-unit id="47be8c691096a43dc654c5d2d58c9de88d2c13ce" translate="yes" xml:space="preserve">
          <source>bisequence_</source>
          <target state="translated">bisequence_</target>
        </trans-unit>
        <trans-unit id="4db8e41b7900844669fa820ba302368399b7e410" translate="yes" xml:space="preserve">
          <source>bisum</source>
          <target state="translated">bisum</target>
        </trans-unit>
        <trans-unit id="f782ad2620888631f2243c4d2e0eca1083a08aa4" translate="yes" xml:space="preserve">
          <source>bit (Bits)</source>
          <target state="translated">бит</target>
        </trans-unit>
        <trans-unit id="72ee6ad45b097a5c0c917c48d3ae507ab8bf2591" translate="yes" xml:space="preserve">
          <source>bit 0: is the cost-centre a CAF?</source>
          <target state="translated">бит 0:является ли центр затрат CAF?</target>
        </trans-unit>
        <trans-unit id="f0cd538277c4b728b7f469148c4fe98f0841e19d" translate="yes" xml:space="preserve">
          <source>bitBigNat</source>
          <target state="translated">bitBigNat</target>
        </trans-unit>
        <trans-unit id="1bcf414ccd175876be2ac312b2c054af807ca082" translate="yes" xml:space="preserve">
          <source>bitDefault</source>
          <target state="translated">bitDefault</target>
        </trans-unit>
        <trans-unit id="0824abb0cf865f3172e552b6ecf95e6e77d4e5d9" translate="yes" xml:space="preserve">
          <source>bitInteger</source>
          <target state="translated">bitInteger</target>
        </trans-unit>
        <trans-unit id="e589df1352e0d64fdb186ef235a95f0c341c0cf3" translate="yes" xml:space="preserve">
          <source>bitNatural</source>
          <target state="translated">bitNatural</target>
        </trans-unit>
        <trans-unit id="8814ee0b056a62691e76c73f19c36ff99b44582d" translate="yes" xml:space="preserve">
          <source>bitSize (Bits)</source>
          <target state="translated">бит Размер (бит)</target>
        </trans-unit>
        <trans-unit id="193b2d8d716f2455dac7fc1c182a149ead00615d" translate="yes" xml:space="preserve">
          <source>bitSizeMaybe (Bits)</source>
          <target state="translated">bitSizeMaybe (Bits)</target>
        </trans-unit>
        <trans-unit id="4da764e1824ae57728952e1b0615985ed94f59b9" translate="yes" xml:space="preserve">
          <source>bitcount</source>
          <target state="translated">bitcount</target>
        </trans-unit>
        <trans-unit id="3ee338087fc5281bc3cab77d5688bab6b7a22fb4" translate="yes" xml:space="preserve">
          <source>bitmapOf</source>
          <target state="translated">bitmapOf</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
