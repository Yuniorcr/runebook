<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="de92db23991f110a5535cb1a0f0da9dbe65ef0b4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Case conversion&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Преобразование регистра&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="726d475db8df0ca5e2ed50e55301273ac8711672" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Catchable failure&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Уловимый провал&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="32bd769272917f67d9d48c79aed34a78f3870efb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Catching all exceptions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Ловля всех исключений&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="eb03365505347926b1220623be1335b54575e30d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Character encodings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Кодировки символов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3e5fe0fe4525c774ee32b2e62e212b83c5c371a6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Checking file existence and permissions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Проверка существования файла и разрешений&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="47fe9babd25675a037ac98f28d0d7f5366121f67" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Classifying I/O errors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Классификация ошибок ввода-вывода&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="43c4c7f245d6c8ee7bdaa7ff4bc29c7a820325c7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Closing files&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Закрытие файлов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9254043faf4c250f80219eee0299fdba39e4623e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Combinators&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Combinators&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d281ad702a8d6dc54e92575ce3f3a1f801b79d65" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Combined allocation and marshalling&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Комбинированное размещение и маршаллинг&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9394829b672e8aad09d02a6093a3fe10c342d37a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Combining documents&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Объединение документов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="89390543f4a101a41db21b5da2014e4782c78668" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Common &lt;code&gt;errno&lt;/code&gt; symbols&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Общие символы &lt;code&gt;errno&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="da8c2ebb5026c4c03ebcb5b0272cb525db112bad" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Compose&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Compose&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cbc825e16917318e3e4f38e15d29199cdc14dbad" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conditional execution of monadic expressions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Условное выполнение монадических выражений&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f1744e479f00dd725a29d32b9a423ed31218d165" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Constructing Builders&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Строительство строителей&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5cebc8e6c711dd25758035f7880b13007c082c93" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Constructing names&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Создание имен&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4e357b9a349398dbc024af07837e5b7016296ba1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Construction&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Construction&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f93e7af9c257e298d09b59e0d43af8bff6a313ed" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Constructors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Constructors&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b4c3d6b1f41be07100cceabd8af5f40cdf1fde9b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Control-C handling on Unix&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Обработка Control-C в Unix&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bef3178543045e650997b1afb4c9738d25885720" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Controllable error handling&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Управляемая обработка ошибок&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fbd4f9bab93661215b82e532fd557852025ea2c8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Convenience function: algebraic data types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Удобная функция: алгебраические типы данных&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6fccf3793c9270ea28ef57e78576144f911b35f1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Convenience functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Функции удобства&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="903dd38607e462d8846b8ab3216d7e3b5507bdb6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conversion to and from Builders&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Переход к строителям и обратно&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f80ced986705094edbae6db2de3a9155a3314711" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conversion&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Conversion&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cd9bfa298fe01daace936a140ea2cc0ce41d18b2" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conversions to/from &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt;
&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Конверсии в / из &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0c55b97d1c6b1040a1b5afa93af86653ae99f9a4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Conversions to/from &lt;code&gt;BigNat&lt;/code&gt;
&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7cb35491b34521b62dbddf9d853357f16f22454" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Converting CStrings to ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Преобразование CStrings в ByteStrings&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="aa6dacfce55b59a3f703c9db5bfda0fcc61f8f25" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Converting file descriptors to/from Handles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Преобразование файловых дескрипторов в / из дескрипторов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="448e5db4892c788c6a58778c2cb39f51d4e035f8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Converting from &lt;code&gt;String&lt;/code&gt;
&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Преобразование из &lt;code&gt;String&lt;/code&gt; &lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ed7d0b419d1dea031354ba52eb4d324855ef7890" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Copying&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Copying&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d1c55be9bc1b6858cb4d060a89c976a7c8fea1b1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Counting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Counting&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="44494bd40326ffcced77fc1ae0277dd81c00fb31" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Covariant maps for tactics&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Ковариантные карты для тактики&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="07f5eda6f3a17676977c950d753597e32da3ce84" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Creation&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Creation&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6ee6030b0c7cffe5598b0bdc869f5b9bc8304cc0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Current working directory&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Текущий рабочий каталог&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c4f6bae2bea8fd82c3c8110b6662c437803e78cc" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Deadlock&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Deadlock&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a4997fdc08f0e925d2a2f3e0fda43e77cda7f73d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Declarations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Declarations&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="019c4999211cef1c29bfb30c94c621ce50822d38" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Decoding Floats/Doubles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Расшифровка поплавков / парных чисел&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fabf5428ac4931f4f8636b1b0e2502c123e14b28" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Decoding Ints&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Расшифровка Ints&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cf5535461b487dd51145eaec710cc38f488973bd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Decoding Words&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Расшифровка слов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="37bb26bfe43372af1801efb6f187aad1b4912fa0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Deconstructing names&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Разбор имен&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b01ccdcf52093b7afdb6b7e33de8137db710ff35" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Defining datatype-generic functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Определение функций для типов данных&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="464400aa0bf46a0cef0d68d67c97ecd1cf82c73b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Delimited continuations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Разграниченные продолжения&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="04e76fc2a21f9edc14a43c469047a2a458142e79" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Deprecated general combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Устарела общая функция комбинирования&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="844e07b5276cbb960a46f2b1dd19f40df649465a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Deprecated&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Deprecated&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="986ad4f00c6f9db6361b9f2319045940c72be650" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Derived and fundamental representation types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Производные и фундаментальные типы представлений&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8c56e4842e35b19a71c6a3c53ec6d93a725c9d1c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Derived combinators&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Производные комбинаторы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="73b914d3150880a84ccdc6f7cf2875920fad0568" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Detecting the end of input&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Обнаружение конца ввода&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8fdce8726322a770cfe245e4911b7787ea3f9a9a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Difference&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Difference&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="40240641752f00623c1b52b1cd6ca0d244d05a05" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Disjoint&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Disjoint&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a00bd8c36b8b13e669fab8ff8eb370b5eaf4b4e1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Duplicating file descriptors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Дублирование файловых дескрипторов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ac4d6c796f74689cdf1bffd445751c7087260af6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Dynamic allocation&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Динамическое размещение&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b1bee556cff42fef20aad4ff082cfb5ced751a8f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Encoding as UTF-8&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Кодировка как UTF-8&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fb6c44757d7d77a5086bead6927872131c3398cd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Example&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Example&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9c20a7e285fcaf94ffd5baf1776f3a87ef5f54fb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Exception handling in the I/O monad&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Обработка исключений в монаде ввода-вывода&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ac20923c6b6cc582d077c6664469f2d95af92720" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Execution&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Execution&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="996d12dbee717592eac755aa32e26112db771811" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Exiting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Exiting&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3a41aab85ecea08fd0a8268cea36d7af4d64d11c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Export&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Export&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d0ccc16fa174bc132bbb6c51ef5284f2548189fa" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Expressions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Expressions&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c520c19a3ca4272f278911eeed1eea9202cd7927" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;File locking&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Блокировка файлов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4043527142c977cd69d9ae88beb15c7add86dbf3" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;File options&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Параметры файла&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="078d79b000e812b227514f61bb4e8450bb41d179" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Files&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Files&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1a62237430f585ced78865b90f3332d78d91ccac" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Filling up memory area with required values&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Заполнение области памяти необходимыми значениями&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7e4aec07f1be7140d59cf704074d6d02e45f0581" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Finding the length&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Определение длины&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cbccb2924a454e44f7c89b65c2c7191af7613693" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Floating types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Плавающие типы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7e43c60dee6a8af2ce1020881e1195f93c5e7ead" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Flushing the buffer state&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Очистка состояния буфера&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d8fdc73f0d707594649f3b22c036006b0f7271da" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Folds and traversals&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Складки и обходы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b2458eb1b536930ea029228414f7f441f273b26f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;For binary constructors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Для бинарных конструкторов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c6f39bdc50c6bcaf0ef3cb32645216cb5a8ef462" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Formatting numbers as text&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Форматирование чисел как текста&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b341cbf31bdc011355439da9497801e044990250" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;From Ascending Lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Из списков по возрастанию&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0751dbf95ef07af008cd9cfa11156104b4bc58ff" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;From Descending Lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Из убывающих списков&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bf34f66f2fb389020f2fe9942da9038fa102a6ad" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;From Unordered Lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Из неупорядоченных списков&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f0581ae5175bfc92324c7dea4cdfdbd429c1b926" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;From strings to constructors and vice versa: all data types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;От строк к конструкторам и наоборот: все типы данных&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2e56a518cb3a5662e2860cb9c14461119bee8900" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Functions on strings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Функции на строках&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="11f45421782ed2db13cb39213caa3e0d391bf03f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;General combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Общая функция комбинирования&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="41b608e8d5ba0c787ffab9c48fd26a90080dd5ee" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;General combining functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Общие функции комбинирования&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1a5bb0e63a08c8603af1a89d57936409588daf17" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;General rendering&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Общий рендеринг&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cd4351572f1189512dc7ad1db59dadae4aa8a424" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generalisations of list functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Обобщения функций списков&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c41e06d430edaf9885e376104305200ab7187ee1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generating and unfolding ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Генерация и разворачивание байтовых строк&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4b7a5527b2681d3bd89540da57a04b355c8161f8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generation and unfolding&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Генерация и развертывание&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="31f6ef509a592006a4b5ad7e0fdd3c929c4f368b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generative Recursion&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a8fcbcf7a48c6a9c07dd50fbf9f27683aa3783" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Generic constructor classes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Классы универсальных конструкторов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="93df86e480f9a87321a41e85942228858083d030" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Graph Algorithms&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Графические алгоритмы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="83753776da45e234c33f0708db289c1c5ffe030f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Graph Construction&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Построение графа&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bf90b8089f50dcedf607be04a023abaa4f6d0c9a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Graph Properties&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Свойства графика&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1065c8a4eef04a59375def9d5b497c03fa014388" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Graph Transformations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Преобразования графов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9a9a52adb15fe8d1830bb8b0fefb895e7919835c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Guards for IO operations that may fail&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Защита для операций ввода-вывода, которые могут выйти из строя&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="09f23233a1c95c567f556f732a2806ad6ddf3b74" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Handle properties&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Свойства ручки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5c656a45b9c3df26413583f03fd54cc4bbcf1d05" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Handling Type-specific Modifiers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Обработка модификаторов, зависящих от типа&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0c967d56d79187f7c5a8e4f919406739484963e6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Haskell threads and Operating System threads&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Потоки Haskell и потоки операционной системы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c762d349e0425233d7c8d2b4c8a15329ca7bd369" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Haskellish interface to memcpy and memmove&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Haskellish интерфейс для memcpy и memmove&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="fb000c42917662b68f0437bcfe06266815aeea7c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Heap fragmentation&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Фрагментация кучи&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d29fbfd02c8897f7bfdaaeac8092c577168a301c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;History&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;History&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c6207dc24f5f68499adeb9905a5168fdb3763c7e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Host-endian, unaligned writes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Порядок порядкового номера хоста, невыровненная запись&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3ee386d24c95d8125df4b790913b3e0d4cd8a907" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;I/O with Handles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Ввод / вывод с ручками&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b1d253e7a2612d3356ada47d620ef6f5d0b6e2b7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Import&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Import&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5790a838d110b13d66bc0d6bb5ced5ea3c08d7f4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Indexing with predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Индексирование с помощью предикатов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="02049e0949a2cc607a771b17dc467849fd3b53de" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Indexing&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Indexing&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9621aa5914499d89446e4f556dc7e557c4e8fa2f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Infinite ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Бесконечные байтовые строки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2db10118a8bce66b63638a35232ce66eebbd3522" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Infinite lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Бесконечные списки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3286aafca39403a76bce8a1fb7bec38d678dc134" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Insertion/removal&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Insertion/removal&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="dbaaa75f9b923aa8d8387c4fd1080eb435097570" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Inspecting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Inspecting&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3be2d22762a3ce4f0c72e7a8f975395cba23f9d5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Int results&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Результаты Int&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b511abb310b1a80c188ec476081c7476da0b49eb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Integral types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Интегральные типы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6afdef42dbe12dc4cdb0eb2edd2e393f4838026a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Interpreter monad&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Монада интерпретатора&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="340af3d4f5e7c19a47d18c08639b68d67ebbc12b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Interpreting flags as concrete values&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Интерпретация флагов как конкретных значений&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="22d719f46a722a341690a40cfecd31e7eee71e5a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Interpreting flags as transformations of an options record&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Интерпретация флагов как преобразований записи опций&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="394b1312a172a520e6485bcfc6e942d359f6c2e5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Intersection&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Intersection&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1cfc483e035e7be0b3d944d0ade35b927caa320a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Iterative construction&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Итерационное построение&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7a239bea4c8889a65e4620c13e4d0d4c1823cba5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Justification&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Justification&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="094fa64210677a911fa3b29182417f48b9b8ad20" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Labelling trees&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Маркировка деревьев&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7136ff8ab068e64f43c1f31accfeac5c68f8c3da" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Legacy folds&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Исторические складки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="74fddd75d91aa4cfb10f3d49162809a44390fe12" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Lists&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5b628bcb1482ea2fd84a3d54e66d847c1f91262a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Little-endian writes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Little-endian пишет&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="37839dbce279cec6b9a4857e7f114f06b9733cd1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Locking&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Locking&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a9a965671753e671abd47c38ce8190b04bc8817d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Low-level capabilities&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Возможности низкого уровня&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8468bb9943d545d84713aad27e3d3bffde040457" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Low-level operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Низкоуровневые операции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="118c620d8449ee5e8a5cd65615a5c18185f2b21e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling lists of storable objects&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Списки сортировки сохраняемых объектов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="790f75b4e9c9f75ec47d63ff02fc0c36176a9d9e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling of Boolean values (non-zero corresponds to &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;)&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Маршалинг логических значений (ненулевое значение соответствует &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; )&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="67e0b98305a091c572c1575e77ca9198541e58bd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling of Boolean values (non-zero corresponds to &lt;code&gt;True&lt;/code&gt;)&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b474cd3f5c1f53822ba9e638830ba53589702c56" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling of Maybe values&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Объединение ценностей Maybe&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7b3c8b391fe47db4e7f29be595e9ffd7b42f11a4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Marshalling&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Marshalling&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a6cf60d9248493e3ee61d7b5ffa08187bc8c2e55" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Memory Model&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Модель памяти&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4234b665d739e9be9b7dacce1371ba9d371cd12d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Memory overhead&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Накладные расходы на память&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="73e6c1657535b6ba73babb54c9ea22449a89ada9" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Miscellaneous functions on tactics&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Разные функции по тактике&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="eef70e217ae2fad1ee5181577ca77806b89ad9e6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Miscellaneous functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Разные функции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d37912c89a94f97ae92d1f8ea087b9253e8f4a1f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Mode wrappers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Обертки режимов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="457072e61e9b98ca06b0f96a66924ab9f3f0d6b7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Modifying the user environment&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Изменение пользовательской среды&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8f9187dc6c823fb9fc033e765c31e30f75b4279c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Monadic actions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Монадические действия&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ce5a9a8eff9611407bef51ffc8991624794dcd27" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Monadic lifting operators&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Операторы монадического подъема&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="643ce0edebd41c3504ca1c7c59b0aa929bee3c1a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Monads and functors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Монады и функторы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d0a100f58309468bb5a9cd772fc00b866b7d2c6e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Monoid functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Моноидные функции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5989f51e0fb350d5fb1836641c983fa8e9c01112" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Numeric types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Числовые типы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e3d175ab87cd9d82242d05a1d16f756cb2cc194f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Observers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Observers&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d4b2d22f012a27e15dd4dfcf4d35f4b9919a6454" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Obsolete helpers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Устаревшие помощники&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="3712aed03e312cab018ea160458a4ef08e869c8c" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Obtaining file status&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Получение статуса файла&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a2d4e5708e503067ab5197dacf78076b88909cbf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Opening and closing files&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Открытие и закрытие файлов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b215b9ab6648f75c1d62b2c6c53e5870d6dd8c97" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Operating on the raw buffer as a Ptr&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Работа с необработанным буфером как с Ptr&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="19122e0da0940fdb553e1aa455eaa8a24a9294ab" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Operations&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="efb7c5e21e63061207ac9ff4af8075f8d2dde507" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Ordered list&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Заказанный список&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="195c5acc749595702ba60ebb94942c334d572d0d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Ordered lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Упорядоченные списки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="daf792758c307e101c8a282fba2387606747b67d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Other types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Другие типы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="28e7b486fb7312509f306c8be16c9b527b8286e2" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Outputting text&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Вывод текста&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e620e2c5797f2c06627642872c354a470f0f9794" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Packing &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s and pointers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Упаковка &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; и указателей&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a93afb941f8a0ba2423ee52a46adebeee3b9730d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Packing &lt;code&gt;CString&lt;/code&gt;s and pointers&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984656fcf94b935a4595408c1bed8f5d7211ec40" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Packing CStrings and pointers&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Упаковка CStrings и указателей&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="52afa2fa240e9a71da5615735dcf6bd0b01e4241" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Parsing and counting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Разбор и подсчет&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8fc2573156c1f773fa4ce66a47aa1a703a5ef14e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Patterns&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Patterns&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b03bde8e1c15bc75f153378c2d6b71d4be932bae" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Pipes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Pipes&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0f7012e3bba1df1331652323024649aa3910d765" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Platform differences&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Различия платформ&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2ace7c3cd825383b0e496b3935938006162dd334" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Pre-emption&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Pre-emption&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c13917ff6625efa54a43d226e94b125392e996db" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Predicates&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Predicates&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="06ad2fa97536b873106ea249d8fbb0c8e38c462a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Primitive combinators&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Примитивные комбинаторы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="20c6e795bc5cec59a773d8f48836557a52b25e40" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Primitive movement capabilities&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Возможности примитивного движения&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="837d55888a6f6f7d3855eaca664282281fcd2d43" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Process environment&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Технологическая среда&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e4af8de74867b32429646d22e69358f4ee8e89a1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Process groups&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Группы процессов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="bf3057c599d877ef568cb93e92b313e881b557a6" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Process status&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Статус процесса&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6c7540963a6d814c14e08a25ab3d33fc935f4dd2" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Process times&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Время обработки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9a2220236e3e29741b22feebd7a7ffa190c87106" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Providing input&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Обеспечение ввода&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7bc2a54365fc541890a7faf479718810508154bd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Pseudoterminal operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Псевдотерминальные операции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="77e3c4d6a821efbb65a9d770b9c6d76745d9bc6a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Quantified&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Quantified&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="29d056b26cae661b1cca2a89ca7076d2be4bc65a" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Queries&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Queries&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c79264578193c91087db67d3ec4beb27152657d5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Querying file status&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Запрос статуса файла&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4472e8fa39686626fb5016107788c09c95ce20c7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Raising Errors&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Возникновение ошибок&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0efc7c5f0d2773badd6b11c2f524f0cb14545613" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Reading and writing&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Чтение и запись&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="93f53728712c6b846d654b737c1b9129dfac2c91" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Reading/writing data&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Чтение / запись данных&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4740969b4b31258f2ba635d0828cf57c28b8598f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Recursive and corecursive reduction&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df09d337edf7c9638651c7ee5f30e73b23840c50" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Related utilities&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Связанные утилиты&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f879dcff2fc0cf0a836915f7a73279992651fcec" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Rendering with a particular style&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Рендеринг в определенном стиле&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b358364b4750ee6635c8adf5eb60b1b5728f7288" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Repetition&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Repetition&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8b1b40f4de31acb6d23aa94e76889af1cfcd7ea7" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Repositioning handles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Перестановка ручек&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="472bd2350e7caa51ceffcd079d21321ab45a273e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Representing datatypes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Представление типов данных&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cf35efe6bb969f3cc419ec168e9707fdbb68f2c8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Right-to-left variants&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Варианты с написанием справа налево&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9fb4984e7f911d801854423b4263dd7697d081d8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Sample instance&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ec4fc4604bf5745373eea2e832bcf929e74e69" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Scheduling priority&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Приоритет планирования&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6d8baa5c56bcc7edddeb4f5eb99bc384a110f29e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Search for arbitrary substrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Поиск произвольных подстрок&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4d9a0847083b171dedc83f5c92064f27a7916adf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Searching lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Списки поиска&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="28b7d2dae22006102f7e5dcd67ffaebebb07a424" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Searching with a predicate&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Поиск с предикатом&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="26b84aeb5a445e77e2731163a1797868287803e0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Seeking&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Seeking&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b3e5938fad9ffef70901bd58a7ae9d04f4ff66de" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Semigroups and Monoids&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Полугруппы и моноиды&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b20c52964c2e9282425f89d5f7cf3cb4d6ff2dc0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Sequential searches&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Последовательные поиски&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5c216dba399e947f5b1687ffb9e5644faf5e7ec1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Sessions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Sessions&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7007346e1c619647216d2af2471b343801c87bc8" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Setting file modes&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Настройка файловых режимов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8a94070f77ca09f3b52c32a4fe6f498554d2ef50" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Showing handle state (not portable: GHC only)&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Отображение состояния дескриптора (не переносится: только GHC)&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="afb8186cce7135210ea355c44a21b6b68944d4ad" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Simple derived documents&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Простые производные документы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8203afbd1bee52f76aaa4438661fdc6005080283" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Simple merge tactic types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Типы простых тактик слияния&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b03c00dda87470a64a1e098b3b2f90b11823de32" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Simpler functions for common tasks&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Более простые функции для общих задач&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e55c362179eb9e4a3c4f1b3c4957713032305310" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Size&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Size&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="6997ba8dd8491954a278b3b5477f5c27bb3f4460" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Special cases for standard input and output&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Особые случаи для стандартного ввода и вывода&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c46f841c99db68165c0ed6f56285190c61649b43" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Special cases&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Особые случаи&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d9a56eb6cea09db74f6ec7ce9dcc26152b5f558e" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Special folds&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Специальные складки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="9d9d2641b4c51c6bee8f8c8daa02dc082d379632" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Standard Formatters&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Стандартные форматеры&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c297f0a3979a11cf9b67f438435bc6a06c1906e4" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Standard handles&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Стандартные ручки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="05104699042312619e63c593455a0328758b0638" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Standard input and output&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Стандартный ввод и вывод&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8b16d24aa15b70c2a7edf32ff73638490f3ed0ed" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Stream oriented decoding&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Потоковое декодирование&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8d311be45f5556a1f23274c11816698d5cbc3019" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Strict folds&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Строгие складки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="4b964a9c6a99fdfe4ba39348318c0a23549b8a8b" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Strict monadic functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Строгие монадические функции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e33102ceed0de8b90b062f72352eedf70ddbd125" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Sublists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Sublists&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b7cc2968bd0743d76960f1bc525f8ebba419b50f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Subranges&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Subranges&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b5ff6c7d4170e6cd80ab0b06a345da6194fa2619" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Synonyms for convenience&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Синонимы к слову удобство&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8b6b9366ae00e771f4d41ab68dbb36d8dd5dfb10" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;TermOutput&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;TermOutput&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="31d38cfb088f2a7cc7e805fcf9a255a14f869318" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Terminal operations (not portable: GHC only)&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Терминальные операции (не переносится: только GHC)&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5b59a86977a10525408b59377f3011166dab2baf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Terminal operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Терминальные операции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ea7ddda6dce40d1566d205fc42665716ea9547fb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Terminating the program&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Завершение программы&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="7ff01062f7ac7a0eb2f0a9b58004d657e3ab713d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Testing a file descriptor&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Тестирование файлового дескриптора&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="d24e5cb0adb94cea0caae32f7669f88b4727b554" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Text output&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Текстовый вывод&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2a1a8c3888cff08e380b98230d559ad47c52f30d" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &quot;&lt;code&gt;generic&lt;/code&gt;&quot; operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;&amp;laquo; &lt;code&gt;generic&lt;/code&gt; &amp;raquo; операции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="90c2870dc1c39e76f618d9579c6c6b568a184f29" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;catch&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;В &lt;code&gt;catch&lt;/code&gt; функции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e0401f02c9c4806a3f11cf9f0b137b0457c185eb" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;evaluate&lt;/code&gt; function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;evaluate&lt;/code&gt; функцию&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a83411977b4021fda1b2105c12936e37da5b79ec" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;handle&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;В &lt;code&gt;handle&lt;/code&gt; функции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a6a146fe2a81726d9bdd36f331a050ca6a625ec1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;mapException&lt;/code&gt; function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt; &lt;code&gt;mapException&lt;/code&gt; функция&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="e1d9e6ad86b3c4f6e78037d9a5cda1060b33c411" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;sequenceA&lt;/code&gt; and &lt;code&gt;sequence&lt;/code&gt; methods&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c3b8cc61782014daf88d61974f04989cadbdc0" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;traverse&lt;/code&gt; and &lt;code&gt;mapM&lt;/code&gt; methods&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde1b9d497a2e1863322abcd78da14c7547a1004" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The &lt;code&gt;try&lt;/code&gt; functions&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;В &lt;code&gt;try&lt;/code&gt; функции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="505d2d6b9466a018136b18e8ab6d87589b6d81bf" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;The C-side interface&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Интерфейс на стороне C&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="2feed7b5f4c2fb037c96bdf3b405b31c61f1dd82" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Threads with affinity&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Темы с близостью&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="5667a2b27cf86a6facd5a2b6fa1f4781c29ac6d9" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Types&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f4424895aa43af6ebbe8d50bbf31076163846d3f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unboxed representation types&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Распакованные типы представлений&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="a664439103fed00f18cb6cdce6b32f926d837628" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unfolding ByteStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Разворачивание байтовых строк&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="0d5771f68b742a9f74f4bd7c018a39ed68315588" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unfolding&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Unfolding&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8dc52df211e33097b39795d9eef838f9f1ac2804" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unicode encodings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Кодировки Unicode&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b2b5eddb362e4ea5f5dc82fbf211f3b59e45b944" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unicode general categories&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Общие категории Unicode&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="443dc27fe917219c1e227a7cf8e53ea025d70775" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unicode&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Unicode&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="8fd4158cdb70f3f3055cfdc3cc464ed1ed7d3f97" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Universal combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Универсальная функция комбинирования&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="517fdf6bd06a90378cad3395f75c6cc48b245d51" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unsafe general combining function&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Небезопасная общая функция комбинирования&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b26c76d647850bb664f2705c2346891893224993" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Unsafe low-level operations&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Небезопасные низкоуровневые операции&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b15736258590f294a5d0ddc7a0d4f4f650f41179" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;User preferences&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Предпочтения пользователей&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="60db20aa411384ccaef6650faca7f5abff2675de" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using 8-bit characters&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Использование 8-битных символов&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="ffe3313007ea7943427b9e8bc2ca7ca12ef96fcd" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using ByteStrings as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Использование ByteStrings как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-c-string#t:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt; s&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="21208557565a0767548e0863019b63967d4c4dc1" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using ByteStrings as &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/foreign-c-string#v:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf5012abc592887fc666f4952b0d6fcbc62f929" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using ByteStrings as &lt;code&gt;CString&lt;/code&gt;s&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Использование ByteStrings как &lt;code&gt;CString&lt;/code&gt; s&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="cb16ea583aafa1b58081ec3eb2d0c8887122c796" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using ByteStrings as CStrings&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Использование ByteStrings как CStrings&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="b82f965522cfecfb3cda4480153ab4c4d19c1328" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Using a locale-dependent encoding&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Использование кодировки, зависящей от локали&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f71438c3e7b8594191f618585b21c597aca6dc8f" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Validation use-case&lt;/h3&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1699f9a82ebb8f7f6eb73199d61e5a7a5307616" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;View patterns&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Посмотреть шаблоны&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="804d3cacb614d4bdfb3822b6bc252249358d8922" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Views&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Views&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="f51e2177552c233852d9ff74160572dc49f182af" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Waiting&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Waiting&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="37bb5bfa7c137d0273fe43774a9b1030467e92f5" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Wrapping documents in delimiters&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Перенос документов в разделители&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="1e30136dbc83bf7b9d7c8867c26d1e1f7ff6aced" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Zipping and unzipping lists&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Списки архивирования и распаковки&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="c1444168f592ab0fce2022480f0a9f2a9f9bb636" translate="yes" xml:space="preserve">
          <source>&lt;h3&gt;Zips and unzip&lt;/h3&gt;</source>
          <target state="translated">&lt;h3&gt;Молнии и разархивировать&lt;/h3&gt;</target>
        </trans-unit>
        <trans-unit id="548fdcab5af57ada5d0745ff2024ad305fbb17c0" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;
&lt;code&gt;WhenMatched&lt;/code&gt; tactics&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt; &lt;code&gt;WhenMatched&lt;/code&gt; тактики&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="8e616065b0a6197825c343552ec58650250227e4" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;
&lt;code&gt;WhenMissing&lt;/code&gt; tactics&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt; &lt;code&gt;WhenMissing&lt;/code&gt; тактики&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="ac9362795cbca4c3542732a5d8411f63ecb7cd9b" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;ASCII (Char7)&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;ASCII (Char7)&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="9176450cef042b0783cc277c7f0c97b9a43090d8" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Additional generic representation type constructors&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Дополнительные конструкторы типов универсального представления&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="68f754da92347f8b59874ef82624b1b3b07582ce" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Annotation lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Поиск аннотации&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="c809d64438f16268f1c6d3f138e8a58adf72ec9c" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Applying &lt;code&gt;mask&lt;/code&gt; to an exception handler&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Применение &lt;code&gt;mask&lt;/code&gt; к обработчику исключения&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="00c0640df734ecc5d66455b1d2d6fd91e8d596a0" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Being strict by being lazy&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0975d8227a73928538fe77cd6eac343d85237456" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Big-endian decoding&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Декодирование с прямым порядком байтов&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="fa0285a97de0a09886998c893a081647ffed8f91" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Big-endian&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Big-endian&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7c7da32152a61af57b6c00c8a832c49357a60e9c" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Constructor strictness lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Поиск строгости конструктора&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="b0e34a5b1e2cad32b7e583d86b7bc5c9231a2713" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Contravariant maps for tactics&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Контравариантные карты для тактики&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="a67a14e75a70c18bc2c5d3a0d9bd0a95f1e8dcfb" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Covariant maps for tactics&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Ковариантные карты для тактики&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="4d943a7024335d0559c461d932e194a2e5fa7502" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Decimal numbers&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Десятичные числа&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="8ecfc38c5fee92bb6ff576bf480c95d10cf01db6" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Definition of the generic representation types&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Определение общих типов представления&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="87337fe97b4c3f800e3f6cec7217a7a45ff57eaa" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Files&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Files&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7ecd5800a1dae97eb3ce9cf4a775c5b7dced0e39" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Fixed-width hexadecimal numbers&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Шестнадцатеричные числа фиксированной ширины&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="caaa4fa73c88a75916b5c100a71bb9cc6506450b" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Fixity lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Поиск исправлений&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7dfdf0b83215bf99d22a40e73ebe01fc1d3b48a6" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Generic instances&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Общие экземпляры&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7b1361562a51404d3b495d552c622f49f011308a" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Hexadecimal numbers&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Шестнадцатеричные числа&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="14c8ba00f2f6df3be186017e56a8f1697d17a26a" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Host-endian, unaligned decoding&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Host-endian, невыровненное декодирование&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="49768d9f737c7a6970d76827fe360fd427ea39c2" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Hybrid folds&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426ef69626e9d657816ef10fffdf646defa36f63" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;ISO/IEC 8859-1 (Char8)&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;ISO / IEC 8859-1 (Char8)&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="91738bf4e64020434749a605c5a0f674e8977f13" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Individual fields of constructors: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt;
&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Индивидуальные поля конструкторов: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:K1&quot;&gt;K1&lt;/a&gt;&lt;/code&gt; &lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="95aa336f40b13d70987524c498e539051dbc0ab8" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Individual fields of constructors: &lt;code&gt;K1&lt;/code&gt;
&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff63b17159610c343c47efb18239a6e42bac4a43" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Infinite lists&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Бесконечные списки&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="d880e1b562ff684e782a8e158dd0c4c38ea616d2" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Input functions&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Функции ввода&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="687a671aa68dfd31a2ff9c3065d51a7eb641957d" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Instance lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Поиск экземпляра&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="9de2727b3c888c5fe8f595711e7c4e4376446782" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Interruptible operations&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Прерывистые операции&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="a0bdd9e037b2fe3362702cf64a61e10f4ac32133" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Language extension lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Поиск языкового расширения&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="971b639c6ae7ec2a143594b47bc2cad3ab23f941" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Lazy corecursive folds&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f721762f7b5fa0bc36f126e027964f56276d40" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Little-endian decoding&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Little-endian декодирование&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="3d29315e3e217a9ae85e08ccfa4ff67e3b192c92" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Little-endian&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Little-endian&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="a666b543aad6a27c72f0151395179bb84b642932" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Meta information: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt;
&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Метаинформация: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:M1&quot;&gt;M1&lt;/a&gt;&lt;/code&gt; &lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="6eb625c90b481bb9f8dac1ca694c19291bb010a7" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Meta information: &lt;code&gt;M1&lt;/code&gt;
&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e67005a69354063f6b9635aed8692bf413a735e3" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Miscellaneous tactic functions&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Разные тактические функции&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="cecbf1bcc8e505cea2eb1a4a33120494eedf7271" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Name lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Поиск имени&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="987cde202187cbf24eb16085f070a22551579940" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Non-portable, host-dependent&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Непереносимый, зависит от хоста&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="8b77870acfaed7d35670833b7a4631d1264c71db" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Numeric functions&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Числовые функции&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="69d77b9c530f2437dbf511df4e101b3e164c07e5" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Numeric type classes&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Классы числового типа&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="00f8a4a19841150cb3fd93a597d12faa3f7f8012" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Omitting generic instances&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Пропуск общих экземпляров&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="5448bcba6e6592ebe3e67bb2ea180855211d008e" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Representation of &lt;code&gt;* -&amp;gt; *&lt;/code&gt; types&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Представление &lt;code&gt;* -&amp;gt; *&lt;/code&gt; типов&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7326f97b4d5a4fd5ffec8292544b247f245d8e98" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Representation of &lt;code&gt;k -&amp;gt; *&lt;/code&gt; types&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Представление &lt;code&gt;k -&amp;gt; *&lt;/code&gt; типов&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="de3a9800dd577d40567dee75709fb63860ef8349" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Representation of types with many constructors or many fields&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Представление типов с множеством конструкторов или множеством полей&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="7cad31f288fffbdb949315d0a84dd3cbd30da25b" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Representation of unlifted types&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Представление неподнятых типов&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="b58791bfb6f34d501ed62ff12d5a2a6306751b4c" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Roles lookup&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Поиск ролей&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="92cd228b2eff4a406205b1a1ace4fba53f914435" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Short-circuit folds&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a07deb727c867cd5e05df55461156dc778541a0" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Special folds&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Специальные складки&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="9e53aed42127e86ca4a33e0f279437712b1d43ce" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Strict recursive folds&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33559e84b0368317316237655368f553779abc29" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; class&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt; &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; класс&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="195ad43f6046b9bf8b178cc1baf4c1cb43629885" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The &lt;code&gt;Generic1&lt;/code&gt; class&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7750057364e0715cc99fd58aef16db57645d3cc6" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The group database&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;База данных группы&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="cbcbc5964f730c01310985667d916e65e70481c0" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The user database&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;База данных пользователей&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="3069839bd83149ea60d26e1a3d7e94ea2b26230c" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;The wrapper and generic default&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Оболочка и общий стандарт по умолчанию&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="2812b6eeb2f4c2e7b04fb3e3fa0c6fdd6d22130e" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Tuples&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Tuples&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="308da98bdbca78d5a0f07dd48b7cbbe8b9684e48" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;Type lookup&lt;/h4&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c4955c32dfcd4e322109bccc87b8cfbda5f3fa" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;UTF-8&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;UTF-8&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="6da3f8ab1174a28ae5c2fbdfdc18c1fdeff6406e" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;User-supplied comparison (replacing an &lt;code&gt;Ord&lt;/code&gt; context)&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Пользовательское сравнение (заменяет контекст &lt;code&gt;Ord&lt;/code&gt; )&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="4677b39f0809a550b962e1efbc16e3ccb92962dd" translate="yes" xml:space="preserve">
          <source>&lt;h4&gt;User-supplied equality (replacing an &lt;code&gt;Eq&lt;/code&gt; context)&lt;/h4&gt;</source>
          <target state="translated">&lt;h4&gt;Предоставляемое пользователем равенство (заменяющее контекст &lt;code&gt;Eq&lt;/code&gt; )&lt;/h4&gt;</target>
        </trans-unit>
        <trans-unit id="08a890eeac9d05c319be1cea2864ef5cfa38f510" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Constructors without fields: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:U1&quot;&gt;U1&lt;/a&gt;&lt;/code&gt;
&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;Конструкторы без полей: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:U1&quot;&gt;U1&lt;/a&gt;&lt;/code&gt; &lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="b64b327926e4b85702574d65e28fb8ac8b3784e9" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Constructors without fields: &lt;code&gt;U1&lt;/code&gt;
&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab968abd2f2cbc3d3fe44413917e1b647aacb89" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Decimal numbers&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;Десятичные числа&lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="1f72c14c5b2a8e43a50e20e49a2610afb3e60713" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Empty datatypes: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:V1&quot;&gt;V1&lt;/a&gt;&lt;/code&gt;
&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;Пустые типы данных: &lt;code&gt;&lt;a href=&quot;ghc-generics#t:V1&quot;&gt;V1&lt;/a&gt;&lt;/code&gt; &lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="fb4127e27d20faed0bb0685a7eaf40c0a76b3313" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Empty datatypes: &lt;code&gt;V1&lt;/code&gt;
&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e605a9a48c2670e40260fb8c8668eb33aa93ad8" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Fixed-width hexadecimal numbers&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;Шестнадцатеричные числа фиксированной ширины&lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="d0a4a8ae6658c219000895cac58801e5f635b1a2" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;Hexadecimal numbers&lt;/h5&gt;</source>
          <target state="translated">&lt;h5&gt;Шестнадцатеричные числа&lt;/h5&gt;</target>
        </trans-unit>
        <trans-unit id="14abccc93409c6f31f9697672cec625f1ab46a59" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;List of lazy functions&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbeb25a3b9ac941834026bd1d1d3b3fbc0fb77c" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;List of short-circuit functions&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c908f2133c4dc0d3cf573eb7b352d866d416f09" translate="yes" xml:space="preserve">
          <source>&lt;h5&gt;List of strict functions&lt;/h5&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9259d33641d1c26faf14b516e5c6061cacdd428a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;`&lt;/strong&gt; takes an operator function of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b83737f173b7b8104574a74cccaf01f76d7b21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt; takes an operator function of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a997035839cf73ad5947ef88cb4492ea1ee9dd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 0&lt;/code&gt; is the additive identity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 0&lt;/code&gt; - это аддитивная идентичность&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d012edc54d76fe1a6fd5a931466b32cb2e48585f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 1&lt;/code&gt; is the multiplicative identity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;ghc-num#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 1&lt;/code&gt; - мультипликативное тождество&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1be9ee6f076b69424c84138762c6785925fb2fe3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;ghc-num#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; gives the additive inverse&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;ghc-num#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; дает аддитивное обратное&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8e5db0d22c31c7f6d7b9e88cbcbceca04840e237" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;ghc-real#v:recip&quot;&gt;recip&lt;/a&gt;&lt;/code&gt; gives the multiplicative inverse&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;ghc-real#v:recip&quot;&gt;recip&lt;/a&gt;&lt;/code&gt; дает мультипликативный обратный&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b34a48ea58b53c48926fb1d6604c6963ad6425b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 0&lt;/code&gt; is the additive identity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 0&lt;/code&gt; - это аддитивная идентичность&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4cbac6b4bcb89975222e88ef9556105acd07884d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 1&lt;/code&gt; is the multiplicative identity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:fromInteger&quot;&gt;fromInteger&lt;/a&gt; 1&lt;/code&gt; - мультипликативное тождество&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39a01ea8c89d72148e323997d4119984e73975bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;prelude#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; gives the additive inverse&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:negate&quot;&gt;negate&lt;/a&gt;&lt;/code&gt; дает аддитивное обратное&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="753334d2f051471b256e5badd522f302be4fb892" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;&lt;a href=&quot;prelude#v:recip&quot;&gt;recip&lt;/a&gt;&lt;/code&gt; gives the multiplicative inverse&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;&lt;a href=&quot;prelude#v:recip&quot;&gt;recip&lt;/a&gt;&lt;/code&gt; дает мультипликативный обратный&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8951ee24d2259235f247886562c09d1c82372a3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; this can fail with an unchecked exception.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Предупреждение:&lt;/em&gt;&lt;/strong&gt; это может привести к сбою с непроверенным исключением.</target>
        </trans-unit>
        <trans-unit id="170bdc09cc4472459171d7b9834478eb80feda9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; this is only available on LLVM and can fail with an unchecked exception.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Предупреждение:&lt;/em&gt;&lt;/strong&gt; это доступно только на LLVM и может завершиться ошибкой с непроверенным исключением.</target>
        </trans-unit>
        <trans-unit id="9ed96c0af0623165c6ada4cbcf6ac4951a9d8c89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;em&gt;Warning:&lt;/em&gt;&lt;/strong&gt; this is only available on LLVM.</source>
          <target state="translated">&lt;strong&gt;&lt;em&gt;Предупреждение:&lt;/em&gt;&lt;/strong&gt; это доступно только на LLVM.</target>
        </trans-unit>
        <trans-unit id="319cba874b46028fdb87bb64fe0d5318e0d1dda0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Antisymmetry&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Antisymmetry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ff5302c36194af0ae673efd623e66220d2859ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associativity of &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ассоциативность &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4223f519ebc51584d410f0045b220809255cfd13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associativity of &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ассоциативность &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6116dc5a02e53b126226e38a3af939721aab2c93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associativity of &lt;code&gt;(&lt;a href=&quot;prelude#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ассоциативность &lt;code&gt;(&lt;a href=&quot;prelude#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="799163cf7b51b0c79eb47b8a26d033faa5a16191" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Associativity of &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ассоциативность &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7925b0c6a04e437163494c8557540ca5b61a3e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Backtracking&lt;/strong&gt;. Lastly, a simple form of &lt;strong&gt;backtracking&lt;/strong&gt; could be introduced. We simply select the first matching axiom we encounter and when the entailment fails, we backtrack and look for other axioms that might match the wanted constraint.</source>
          <target state="translated">&lt;strong&gt;Возврат&lt;/strong&gt; . Наконец, можно ввести простую форму &lt;strong&gt;поиска&lt;/strong&gt; с &lt;strong&gt;возвратом&lt;/strong&gt; . Мы просто выбираем первую совпадающую аксиому, с которой сталкиваемся, и когда следствие не удается, мы возвращаемся назад и ищем другие аксиомы, которые могли бы соответствовать желаемому ограничению.</target>
        </trans-unit>
        <trans-unit id="3c4434638d63955669a6ef153af03507483724e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Commutativity of &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Коммутативность &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d9d507a824ba6df7be3779b954141b766cfe2bd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Commutativity of &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Коммутативность &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aaca685e072a46196ad726aa484bd084f5030b6c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Corecursion&lt;/strong&gt;, which yields intermediate results as it encounters additional input elements. Lazy processing of the remaining elements makes the intermediate results available even before the rest of the input is processed. The input may be unbounded, and the caller can stop processing intermediate results early.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd71e7ce598692e08885d5cfe8581474fda3225a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Distributivity of &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; with respect to &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Дистрибутивность &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; относительно &lt;code&gt;(&lt;a href=&quot;ghc-num#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d980dbdc9c76f6a3f781e8be02c04e6dd5479cf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Distributivity of &lt;code&gt;(&lt;a href=&quot;prelude#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; with respect to &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Дистрибутивность &lt;code&gt;(&lt;a href=&quot;prelude#v:-42-&quot;&gt;*&lt;/a&gt;)&lt;/code&gt; относительно &lt;code&gt;(&lt;a href=&quot;prelude#v:-43-&quot;&gt;+&lt;/a&gt;)&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cb7c8e1987eda07393a58eb1e87322de13d342de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Example&lt;/strong&gt;. Suppose we have a C/C++ function to call that will return and then invoke a callback at some point in the future, passing us some data. We want to wait in Haskell for the callback to be called, and retrieve the data. We can do it like this:</source>
          <target state="translated">&lt;strong&gt;Пример&lt;/strong&gt; . Предположим, у нас есть функция C / C ++ для вызова, которая вернется, а затем вызовет обратный вызов в какой-то момент в будущем, передав нам некоторые данные. Мы хотим дождаться вызова обратного вызова в Haskell и получить данные. Сделать это можно так:</target>
        </trans-unit>
        <trans-unit id="deaf7df0f7720e67c432ed3a03953663a73c03d7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Function definitions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Определения функций&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6312fe48c479f3415ae6ad3d8c55e86c3b4a9045" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Invariant&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;ghc-natural#v:NatJ-35-&quot;&gt;NatJ#&lt;/a&gt;&lt;/code&gt; is used &lt;em&gt;iff&lt;/em&gt; value doesn't fit in &lt;code&gt;&lt;a href=&quot;ghc-natural#v:NatS-35-&quot;&gt;NatS#&lt;/a&gt;&lt;/code&gt; constructor. NB: Order of constructors *must* coincide with &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; relation</source>
          <target state="translated">&lt;strong&gt;Инвариант&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;ghc-natural#v:NatJ-35-&quot;&gt;NatJ#&lt;/a&gt;&lt;/code&gt; используется, &lt;em&gt;если&lt;/em&gt; значение не помещается в конструктор &lt;code&gt;&lt;a href=&quot;ghc-natural#v:NatS-35-&quot;&gt;NatS#&lt;/a&gt;&lt;/code&gt; . NB: порядок конструкторов * должен * совпадать с отношением &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="561ae905d7f2789db0c5ce4de85d235050a3ed6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Let/where bindings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Пусть / где привязки&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e9162040ac128533f617928c245aee81c316ceb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; является суперклассом &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; начиная с &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5a4b9ac937e39046d8b983fc94ade6a8cfc792ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2d3664ee37ed2cfa999ff0a501a272001dccb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf9e65ce2fc94787a4c53411b9778d3dffc617d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;ghc-base#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; является суперклассом &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; начиная с &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="df04c2abdfb988143c3b8d479e9f82bb9dcd1990" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; является суперклассом &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; начиная с &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="03411ce0e13fe57751c2f82253b492cc9d47c8f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a superclass of &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; является суперклассом &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; начиная с &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="166aed14653edc6f46dcff3c1dae86631ba0a891" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Currently, &lt;code&gt;&lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; exhibits surprising behaviour when applied to a parser &lt;code&gt;p&lt;/code&gt; that doesn't consume any input; specifically</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . В настоящее время &lt;code&gt;&lt;a href=&quot;text-parsec#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; демонстрирует удивительное поведение при применении к синтаксическому анализатору &lt;code&gt;p&lt;/code&gt; , который не потребляет никаких входных данных; конкретно</target>
        </trans-unit>
        <trans-unit id="ec9986bf04287187f171a448a6e427d2d4d16d6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Currently, &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; exhibits surprising behaviour when applied to a parser &lt;code&gt;p&lt;/code&gt; that doesn't consume any input; specifically</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . В настоящее время &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; демонстрирует удивительное поведение при применении к синтаксическому анализатору &lt;code&gt;p&lt;/code&gt; , который не потребляет никаких входных данных; конкретно</target>
        </trans-unit>
        <trans-unit id="5d16f3693057b662396f898cac3b01fe76debdb2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Currently, &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; exhibits surprising behaviour when applied to a parser &lt;code&gt;p&lt;/code&gt; that doesn't consume any input; specifically</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . В настоящее время &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-combinator#v:notFollowedBy&quot;&gt;notFollowedBy&lt;/a&gt;&lt;/code&gt; демонстрирует удивительное поведение при применении к синтаксическому анализатору &lt;code&gt;p&lt;/code&gt; , который не потребляет никаких входных данных; конкретно</target>
        </trans-unit>
        <trans-unit id="6818107750bfc6c118df69013440ac82805bba52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Only strict in the reference and not the referenced value.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : строго в ссылке, а не в указанном значении.</target>
        </trans-unit>
        <trans-unit id="dc20d237e47fdcc6a1702edaefb72cd73590b46d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: Prior to &lt;code&gt;deepseq-1.4.4.0&lt;/code&gt; this instance was only defined for &lt;code&gt;base-4.8.0.0&lt;/code&gt; and later.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . До &lt;code&gt;deepseq-1.4.4.0&lt;/code&gt; этот экземпляр был определен только для &lt;code&gt;base-4.8.0.0&lt;/code&gt; и новее.</target>
        </trans-unit>
        <trans-unit id="7a7733fa013d8d35cc1c5581dc3eef96e5dfd0cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The functions in &lt;code&gt;base-4.12&lt;/code&gt; changed the serialisation in case of a &lt;code&gt;Just 0&lt;/code&gt; precision; this version of &lt;code&gt;text&lt;/code&gt; still provides the serialisation as implemented in &lt;code&gt;base-4.11&lt;/code&gt;. The next major version of &lt;code&gt;text&lt;/code&gt; will switch to the more correct &lt;code&gt;base-4.12&lt;/code&gt; serialisation.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . Функции в &lt;code&gt;base-4.12&lt;/code&gt; изменили сериализацию в случае точности &lt;code&gt;Just 0&lt;/code&gt; ; эта версия &lt;code&gt;text&lt;/code&gt; прежнему обеспечивает сериализацию, реализованную в &lt;code&gt;base-4.11&lt;/code&gt; . Следующая основная версия &lt;code&gt;text&lt;/code&gt; переключится на более правильную сериализацию &lt;code&gt;base-4.12&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77693d6f146c132591a587e160c8af245f51c0df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The intrepid user may notice that &lt;code&gt;HasCallStack&lt;/code&gt; is just an alias for an implicit parameter &lt;code&gt;?callStack :: CallStack&lt;/code&gt;. This is an implementation detail and &lt;strong&gt;should not&lt;/strong&gt; be considered part of the &lt;code&gt;CallStack&lt;/code&gt; API, we may decide to change the implementation in the future.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . Неустрашимый пользователь может заметить, что &lt;code&gt;HasCallStack&lt;/code&gt; - это просто псевдоним для неявного параметра &lt;code&gt;?callStack :: CallStack&lt;/code&gt; . Это деталь реализации, и &lt;strong&gt;ее не&lt;/strong&gt; следует рассматривать как часть API &lt;code&gt;CallStack&lt;/code&gt; , мы можем решить изменить реализацию в будущем.</target>
        </trans-unit>
        <trans-unit id="2533d0f8b23d21f162cecf82e012550c323eb127" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The replacement character returned by &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:OnDecodeError&quot;&gt;OnDecodeError&lt;/a&gt;&lt;/code&gt; MUST be within the BMP plane; surrogate code points will automatically be remapped to the replacement char &lt;code&gt;U+FFFD&lt;/code&gt; (&lt;em&gt;since 0.11.3.0&lt;/em&gt;), whereas code points beyond the BMP will throw an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;since 1.2.3.1&lt;/em&gt;); For earlier versions of &lt;code&gt;text&lt;/code&gt; using those unsupported code points would result in undefined behavior.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; : замещающий символ, возвращаемый &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:OnDecodeError&quot;&gt;OnDecodeError&lt;/a&gt;&lt;/code&gt; , ДОЛЖЕН находиться в плоскости BMP; суррогатные кодовые точки будут автоматически переназначены на заменяющий char &lt;code&gt;U+FFFD&lt;/code&gt; ( &lt;em&gt;начиная с 0.11.3.0&lt;/em&gt; ), тогда как кодовые точки за пределами BMP &lt;em&gt;вызовут &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; ( &lt;em&gt;начиная с 1.2.3.1&lt;/em&gt; ); Для более ранних версий &lt;code&gt;text&lt;/code&gt; использование этих неподдерживаемых кодовых точек привело бы к неопределенному поведению.</target>
        </trans-unit>
        <trans-unit id="f697bb0f17f9be6e8b12d7d542631a6b9b017b47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The replacement character returned by &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:OnDecodeError&quot;&gt;OnDecodeError&lt;/a&gt;&lt;/code&gt; MUST be within the BMP plane; surrogate code points will automatically be remapped to the replacement char &lt;code&gt;U+FFFD&lt;/code&gt; (&lt;em&gt;since 0.11.3.0&lt;/em&gt;), whereas code points beyond the BMP will throw an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;since 1.2.3.1&lt;/em&gt;); For earlier versions of &lt;code&gt;text&lt;/code&gt; using those unsupported code points would result in undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5ede059537538903ed8438e14015f63ad7bc85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: The replacement character returned by &lt;code&gt;&lt;a href=&quot;data-text-encoding-error#t:OnDecodeError&quot;&gt;OnDecodeError&lt;/a&gt;&lt;/code&gt; MUST be within the BMP plane; surrogate code points will automatically be remapped to the replacement char &lt;code&gt;U+FFFD&lt;/code&gt; (&lt;em&gt;since 0.11.3.0&lt;/em&gt;), whereas code points beyond the BMP will throw an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;since 1.2.3.1&lt;/em&gt;); For earlier versions of &lt;code&gt;text&lt;/code&gt; using those unsupported code points would result in undefined behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af85fbdeb1c1548ecdc703b5c39806483adbef4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This instance is only defined for &lt;code&gt;base &amp;gt;= 4.9.0&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . Этот экземпляр определен только для &lt;code&gt;base &amp;gt;= 4.9.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d4e26172ba9fac2189c2280c424438f132a68b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This is not needed anymore since &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; became a superclass of &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; in &lt;em&gt;base-4.11&lt;/em&gt; and this newtype be deprecated at some point in the future.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . В этом больше нет необходимости, так как &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; стал суперклассом &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; в &lt;em&gt;base-4.11,&lt;/em&gt; и этот новый тип будет объявлен устаревшим в какой-то момент в будущем.</target>
        </trans-unit>
        <trans-unit id="09bbdeeb23f25384d247711b42a27b30cfbb93e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . Этот метод является избыточным и имеет реализацию по умолчанию &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; начиная с &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a54cc0eac403b56d8c90a486bcee12f4b0d2cff7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7bee89a50523b2b7f4298406f2f560b7f97e3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . Этот метод является избыточным и имеет реализацию по умолчанию &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; начиная с &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="17aedd0e093e0e25223d9534cf1c076f3a8a2cfb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;ghc-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53250bceefb8edf3079bcff5effdeb91a06684e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . Этот метод является избыточным и имеет реализацию по умолчанию &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; начиная с &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="9ab18beb231b92aa2228a0bd2a20b51f1a2b1860" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;prelude#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;prelude#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;prelude#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5e33ea116bb722425b17e443f5a6fd673821d3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;ПРИМЕЧАНИЕ&lt;/strong&gt; . Этот метод является избыточным и имеет реализацию по умолчанию &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; начиная с &lt;em&gt;base-4.11.0.0&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4b182cab3c093432cfb21fa9dafb0c11115dbd3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3257a06863bf7f9dc786e6e8ab7f729cc62492" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;: This method is redundant and has the default implementation &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt; = (&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; since &lt;em&gt;base-4.11.0.0&lt;/em&gt;. Should it be implemented manually, since &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is a synonym for (&lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;), it is expected that the two functions are defined the same way. In a future GHC release &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; will be removed from &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b87531c422bb43abf588cd19cfb145b4b1af212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Negation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Negation&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="35fdc70491666deaadbc15762d73d32a5836699b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Nested patterns&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Вложенные шаблоны&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="39c28848aeb5cab86ac6b199bccbac9933f1e95b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Newtypes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Newtypes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e0d40e5bd81d1d6957246a1ec75c38216c4704c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;No ``-O*``-type option specified:&lt;/strong&gt; This is taken to mean &amp;ldquo;Please compile quickly; I&amp;rsquo;m not over-bothered about compiled-code quality.&amp;rdquo; So, for example, &lt;code&gt;ghc -c Foo.hs&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Не указана опция типа &amp;laquo;-O *&amp;raquo;:&lt;/strong&gt; это означает &amp;laquo;Пожалуйста, скомпилируйте быстро; Меня не беспокоит качество скомпилированного кода &amp;raquo;. Так, например, &lt;code&gt;ghc -c Foo.hs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1703f964965b565950bc6eb43f0e6d084f01e5a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-intmap-strict&quot;&gt;Data.IntMap.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c868bb4011e6208365665fdb4bdf5094e1a4de81" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-intmap-strict&quot;&gt;Data.IntMap.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4dbb5c88e424a361334b4d6f21f10b3ce674e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-intmap-strict&quot;&gt;Data.IntMap.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b24fbc9f07667773368a3b7ec8264c0363872e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-map-strict&quot;&gt;Data.Map.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09385c49980f00ae37579142a86cc82d33d8840d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Prior to v0.6.4, &lt;a href=&quot;data-map-strict&quot;&gt;Data.Map.Strict&lt;/a&gt; exposed a version of &lt;code&gt;&lt;a href=&quot;data-map-strict#v:compose&quot;&gt;compose&lt;/a&gt;&lt;/code&gt; that forced the values of the output &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt;. This version does not force these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fc39334b9319bc0d7d967925cee84740f69bc0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This module exports internal implementation details that may change anytime. If you want a more stable API, use &lt;a href=&quot;system-process&quot;&gt;System.Process&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Этот модуль экспортирует детали внутренней реализации, которые могут измениться в любое время. Если вам нужен более стабильный API, используйте вместо этого &lt;a href=&quot;system-process&quot;&gt;System.Process&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2350c93205902e1c98253ef2f7d2621dcc8098cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The example above should rather be written in terms of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; to ensure releasing file-descriptors in a timely matter (see the description of &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; for an example).</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Приведенный выше пример лучше записывать в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; чтобы обеспечить своевременное освобождение файловых дескрипторов (см. Описание &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; для примера).</target>
        </trans-unit>
        <trans-unit id="47f5cf616517b6eba6447338e761bc574ca481fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The example above should rather be written in terms of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; to ensure releasing file-descriptors in a timely matter (see the description of &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; for an example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5985d3f882e48a65109c5dc428706442d6a515de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The example above should rather be written in terms of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-exception#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; to ensure releasing file-descriptors in a timely matter (see the description of &lt;code&gt;&lt;a href=&quot;control-deepseq#v:force&quot;&gt;force&lt;/a&gt;&lt;/code&gt; for an example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f41c2eafe5091226c38a0690d82eb9525b65f556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This function is a very big hammer. If you only need an absolute path, &lt;code&gt;&lt;a href=&quot;system-directory#v:makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;&lt;/code&gt; is sufficient for removing dependence on the current working directory.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : эта функция представляет собой очень большой молоток. Если вам нужен только абсолютный путь, &lt;code&gt;&lt;a href=&quot;system-directory#v:makeAbsolute&quot;&gt;makeAbsolute&lt;/a&gt;&lt;/code&gt; достаточно для устранения зависимости от текущего рабочего каталога.</target>
        </trans-unit>
        <trans-unit id="615eff90afa4cc9668282159ebd5fba86b0a2aa6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This is an internal GHC module with an API subject to change. It's recommended use the &lt;a href=&quot;numeric-natural&quot;&gt;Numeric.Natural&lt;/a&gt; module to import the &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Это внутренний модуль GHC, API которого может изменяться. Для импорта типа &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; рекомендуется использовать модуль &lt;a href=&quot;numeric-natural&quot;&gt;Numeric.Natural&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60f2ee22884b6646412af01b670fedfd33ce75d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Unlike for the unary &lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf&quot;&gt;liftRnf&lt;/a&gt;&lt;/code&gt;, there is currently no support for generically deriving &lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf2&quot;&gt;liftRnf2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . В отличие от унарного &lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf&quot;&gt;liftRnf&lt;/a&gt;&lt;/code&gt; , в настоящее время нет поддержки для обобщенного получения &lt;code&gt;&lt;a href=&quot;control-deepseq#v:liftRnf2&quot;&gt;liftRnf2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f5608392e60fb88bd92846a796785eb6d245173" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pattern matching in case expressions, lambdas, do-notation, etc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Сопоставление с образцом в case-выражениях, лямбдах, do-notation и т. Д.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ba63c80e3e98efdf17dda0cdece96c022afb21de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pick first&lt;/strong&gt;. We can simply select the &lt;strong&gt;first matching axiom&lt;/strong&gt; we encounter. In the above example, this would be &lt;code&gt;A a =&amp;gt; C a&lt;/code&gt;. We&amp;rsquo;d then need to entail &lt;code&gt;A a&lt;/code&gt;, for which we have no matching axioms available, causing the above program to be rejected.</source>
          <target state="translated">&lt;strong&gt;Выбери первым&lt;/strong&gt; . Мы можем просто выбрать &lt;strong&gt;первую подходящую аксиому, с которой&lt;/strong&gt; столкнемся. В приведенном выше примере это будет &lt;code&gt;A a =&amp;gt; C a&lt;/code&gt; . Затем нам нужно будет вывести &lt;code&gt;A a&lt;/code&gt; , для которого у нас нет подходящих аксиом, что приведет к отклонению вышеуказанной программы.</target>
        </trans-unit>
        <trans-unit id="253e3168e251c32ee7395e138a3469c717c976b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Recursive&lt;/strong&gt; reduction, which is strict in all the elements of the structure. This produces a single final result only after processing the entire input structure, and so the input must be finite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9db9b2d82045af0ef687f46fd582968b70dfaa2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflexivity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Reflexivity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b82302cd8a8e37a6d42b327c237c78b4a98d4a8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reject if in doubt&lt;/strong&gt;. An alternative approach would be to check for overlapping axioms, when solving a constraint. When multiple matching axioms are discovered, we &lt;strong&gt;reject the program&lt;/strong&gt;. This approach is a bit conservative, in that it may reject working programs. But it seem much more transparent towards the developer, who can be presented with a clear message, explaining why the program is rejected.</source>
          <target state="translated">&lt;strong&gt;Отклоните, если сомневаетесь&lt;/strong&gt; . Альтернативный подход заключался бы в проверке перекрывающихся аксиом при решении ограничения. Когда обнаруживается несколько аксиом соответствия, мы &lt;strong&gt;отклоняем программу&lt;/strong&gt; . Этот подход немного консервативен, так как он может отклонять рабочие программы. Но это кажется гораздо более прозрачным для разработчика, которому можно представить четкое сообщение, объясняющее, почему программа отклонена.</target>
        </trans-unit>
        <trans-unit id="8155d14fae21297bb2351ad76ac41a99e68aa1a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Short-circuit&lt;/strong&gt; reduction, which examines some initial sequence of the input elements, but stops once a termination condition is met, returning a final result based only on the elements considered up to that point. The remaining elements are not considered. The input should generally be finite, because the termination condition might otherwise never be met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f25f822df506cef863bb9a00c96e4fcc1e4bad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Substitutivity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Substitutivity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e45f773e26962ea2903c38d6204599890b0de4a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Symmetry&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Symmetry&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ee5c2d79bacdffb4c928966fd9071775b91a7e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This extension is currently considered experimental, expect bugs, warts, and bad error messages; everything down to the syntax is subject to change&lt;/strong&gt;. See, in particular, &lt;a href=&quot;#linear-types-limitations&quot;&gt;Limitations&lt;/a&gt; below. We encourage you to experiment with this extension and report issues in the GHC bug tracker &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues&quot;&gt;the GHC bug tracker&lt;/a&gt;, adding the tag &lt;code&gt;LinearTypes&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174acfc98226e3aa5c79a549f805f6cffd2f76aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Top level bindings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Привязки верхнего уровня&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="75903953dc91115d2e5cd9a4146a4781631d6cb1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Transitivity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Transitivity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dbc186f13791531aa2d22dbaf862de224a352ddf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: It's advised to avoid calling this primitive with negative exponents unless it is guaranteed the inverse exists, as failure to do so will likely cause program abortion due to a divide-by-zero fault. See also &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:recipModInteger&quot;&gt;recipModInteger&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Предупреждение&lt;/strong&gt; : рекомендуется избегать вызова этого примитива с отрицательными показателями степени, если нет гарантии, что существует обратное, так как невыполнение этого может привести к прерыванию программы из-за ошибки деления на ноль. См. Также &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:recipModInteger&quot;&gt;recipModInteger&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="992f7e50f9c1364f8bae8fe4988cebb6afeb5ae8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: The internal implementation of &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; (i.e. which constructors are available) depends on the &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; backend used!</source>
          <target state="translated">&lt;strong&gt;Предупреждение&lt;/strong&gt; : внутренняя реализация &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; (то есть доступные конструкторы) зависит от используемого бэкэнда &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="083d34b27586c0efd3bb96a02d93d956f6452f30" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: result may become negative if (at least) one argument is &lt;code&gt;minBound&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;Предупреждение&lt;/strong&gt; : результат может стать отрицательным, если (хотя бы) один аргумент - &lt;code&gt;minBound&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="58416cb35befd57e074b001d9d43848b0e5f2ef5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hp2ps&lt;/strong&gt; is distributed in &lt;code&gt;ghc/utils/hp2ps&lt;/code&gt; in a GHC source distribution. It was originally developed by Dave Wakeling as part of the HBC/LML heap profiler.</source>
          <target state="translated">&lt;strong&gt;hp2ps&lt;/strong&gt; распространяется в &lt;strong&gt;каталоге &lt;/strong&gt; &lt;code&gt;ghc/utils/hp2ps&lt;/code&gt; в составе исходного кода GHC. Первоначально он был разработан Дэйвом Уэйкелингом как часть профилировщика кучи HBC / LML.</target>
        </trans-unit>
        <trans-unit id="a2a10c48ea0cdf0ca5edaab63d2e386e55d8c83d" translate="yes" xml:space="preserve">
          <source>= (&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="translated">= ( &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Инт&lt;/a&gt; ; &lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Инт&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4d11ca513c5dfa1a04706b4e93d1d42a3f41dd63" translate="yes" xml:space="preserve">
          <source>= (&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80e39b83ebdc23fd3eef2c1399534af7f59d826" translate="yes" xml:space="preserve">
          <source>= (&lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../base-4.15.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9374aa68561e358ba9277ebf67e9a0b2cac65c" translate="yes" xml:space="preserve">
          <source>= [&lt;a href=&quot;language-haskell-th#t:Pred&quot;&gt;Pred&lt;/a&gt;]</source>
          <target state="translated">= [ &lt;a href=&quot;language-haskell-th#t:Pred&quot;&gt;Пред.&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a4a112b1856c707441c9370242edae658a769d2" translate="yes" xml:space="preserve">
          <source>= [&lt;a href=&quot;language-haskell-th-syntax#t:Pred&quot;&gt;Pred&lt;/a&gt;]</source>
          <target state="translated">= [ &lt;a href=&quot;language-haskell-th-syntax#t:Pred&quot;&gt;Пред.&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f3e53936f3c79bf9c4206c8b91a0a0c917161364" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (&lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</source>
          <target state="translated">=&amp;gt; ( &lt;a href=&quot;text-xhtml-frameset#t:Html&quot;&gt;HTML&lt;/a&gt; -&amp;gt; б)</target>
        </trans-unit>
        <trans-unit id="22500a4bcb96fc197f5175e32ffc6ecdc6564339" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (&lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</source>
          <target state="translated">=&amp;gt; ( &lt;a href=&quot;text-xhtml-strict#t:Html&quot;&gt;HTML&lt;/a&gt; -&amp;gt; б)</target>
        </trans-unit>
        <trans-unit id="98254af121448be337d889b7151e3095f29dfd2e" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (&lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;Html&lt;/a&gt; -&amp;gt; b)</source>
          <target state="translated">=&amp;gt; ( &lt;a href=&quot;text-xhtml-transitional#t:Html&quot;&gt;HTML&lt;/a&gt; -&amp;gt; б)</target>
        </trans-unit>
        <trans-unit id="87b9b2b6b45827b7ebbf823fd4e6fa2e656b9896" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (a -&amp;gt; &lt;a href=&quot;text-show#t:ShowS&quot;&gt;ShowS&lt;/a&gt;)</source>
          <target state="translated">=&amp;gt; (а -&amp;gt; &lt;a href=&quot;text-show#t:ShowS&quot;&gt;ShowS&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7e543fa87f892cd0310b1be2e1183e668e09b4b6" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (ann -&amp;gt; m r)</source>
          <target state="translated">=&amp;gt; (Энн -&amp;gt; г-н)</target>
        </trans-unit>
        <trans-unit id="3f837c598bd2a2ea0c21ac7ef916a3ba8c291114" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (e -&amp;gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; b)</source>
          <target state="translated">=&amp;gt; (e -&amp;gt; &lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Может быть,&lt;/a&gt; b)</target>
        </trans-unit>
        <trans-unit id="146ec650c89d3406783a47923e5bcd00b024cf1a" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (e -&amp;gt; a -&amp;gt; e)</source>
          <target state="translated">=&amp;gt; (е -&amp;gt; а -&amp;gt; е)</target>
        </trans-unit>
        <trans-unit id="28b8a020a4a70d67b201ecca5ebfe9b3decfac94" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (e -&amp;gt; e' -&amp;gt; e)</source>
          <target state="translated">=&amp;gt; (е -&amp;gt; е '-&amp;gt; е)</target>
        </trans-unit>
        <trans-unit id="d1cff79143a6b98192e6f5c93021392b3bb26523" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (i, i)</source>
          <target state="translated">=&amp;gt; (я, я)</target>
        </trans-unit>
        <trans-unit id="273c01aab4f2aada746f406147099fc43c561169" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (r -&amp;gt; a)</source>
          <target state="translated">=&amp;gt; (г -&amp;gt; а)</target>
        </trans-unit>
        <trans-unit id="98cb27f97fefd7391598e198b2314a4052bd3f10" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (s -&amp;gt; (a, s))</source>
          <target state="translated">=&amp;gt; (s -&amp;gt; (a, s))</target>
        </trans-unit>
        <trans-unit id="40a084ccf2eb50cdea0902780e3641bbeeb218a0" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (t -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="translated">=&amp;gt; (t -&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;Строка&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a913d2dfb1e9cb8a3706aeccb247062382be5958" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (t -&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f5a6a0166bf7f1e62a147f1d55aa5e2926c2f4" translate="yes" xml:space="preserve">
          <source>=&amp;gt; (t -&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08f7f76239cb27ca373456dbde8bc8bedbe3e3f1" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="631db25a13c5bd3f3a27fb66e2b126a624973fe7" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Может быть, &lt;/a&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Чар&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3b4666c0db847e1f4ef59969ccc1e08d98e0fb5" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;Строка&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83f228b1575a69db7fa34e7e1f31ba1fcc909002" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</target>
        </trans-unit>
        <trans-unit id="9b29c2ad51aea488dc493c38480ca6f86fb32ef5" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c452ca6d503847edaa9b27463d3b870902e52c" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eea19132ccdb3f07c5c85871217ec3b42357147" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a090ffafec70ef99fa90de5566cfbed70873913" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="865ea042dc9d3a65bcfb422f98964127f8bc5900" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f972cd68ccad49565c245b300e7fd101e069a4b" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbece24d489fe410096efb4d6d117eb82e5a5278" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ca9e7a5ceefc17b8329679432b242d9666dcae" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c85809d4a3a2bbe15915426aa3ae9d49b837b4" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="881da90599e1b286facbeb80f0b5665a56f022f1" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="c0ed1cf1dee5f53006a4c0bd4c39fd64413da332" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-error#t:ErrorT&quot;&gt;ErrorT&lt;/a&gt; e m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-error#t:ErrorT&quot;&gt;ErrorT&lt;/a&gt; ema</target>
        </trans-unit>
        <trans-unit id="43faa2c3584d57723d2b7894cdd8de390f7d6ff3" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt; e m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-except#t:ExceptT&quot;&gt;Кроме&lt;/a&gt; ema</target>
        </trans-unit>
        <trans-unit id="ed1c848733ee83ef5cfd6f49ba6a222cc681fb5b" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWS&quot;&gt;RWS&lt;/a&gt; r w s a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWS&quot;&gt;RWS&lt;/a&gt; rwsa</target>
        </trans-unit>
        <trans-unit id="0d59b61a3690bc45a5667c7d9d686fd7aae890a6" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-cps#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="e04a43f264efe742e62b7c872cf3243a4e74e724" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-lazy#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="46a15491d5a54f8e9623cc81bd3b40c08cc35bc5" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; r w s m a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;control-monad-trans-rws-strict#t:RWST&quot;&gt;RWST&lt;/a&gt; rwsma</target>
        </trans-unit>
        <trans-unit id="1decabf293013a44ad8fb38d770351c0b3d3eff0" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Динамический&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c49f72d1d47fd85210f06fe46bd2fbdba18a7f1" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;Когда отсутствует&lt;/a&gt; фак</target>
        </trans-unit>
        <trans-unit id="c6dd57371651023369288a8ddebf01f317b257ab" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;Когда отсутствует&lt;/a&gt; фак</target>
        </trans-unit>
        <trans-unit id="01807040766915893b46814bd7bc992c2c731d87" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt; k a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt; kac</target>
        </trans-unit>
        <trans-unit id="f3e23cdc0abf474625d6acfcfc952ed151e46c12" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;Когда не&lt;/a&gt; хватает fkac</target>
        </trans-unit>
        <trans-unit id="e4ec523b9e7b9c9afd657cd3f09a05fbaa7be373" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt; k a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:SimpleWhenMissing&quot;&gt;SimpleWhenMissing&lt;/a&gt; kac</target>
        </trans-unit>
        <trans-unit id="5b3d889a0b4ee8e84ff7b2d421af97fb78b317dd" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt; f k a c</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;Когда не&lt;/a&gt; хватает fkac</target>
        </trans-unit>
        <trans-unit id="998942da66b438367a1103e796eb6fe2d1d3b071" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-text-lazy-builder-realfloat#t:FPFormat&quot;&gt;FPFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d97087128e0e8d5868c008414eb04d89f5c495f9" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;data-time-format#t:TimeLocale&quot;&gt;TimeLocale&lt;/a&gt;</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;data-time-format#t:TimeLocale&quot;&gt;TimeLocale&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16402fa4cd4c09cc613611f7301a7d80b85c6647" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;ghc-io#t:IO&quot;&gt;IO&lt;/a&gt; a</target>
        </trans-unit>
        <trans-unit id="64674fd23e15a8758e1e185aedc3564f71140d67" translate="yes" xml:space="preserve">
          <source>=&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</source>
          <target state="translated">=&amp;gt; &lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt; a</target>
        </trans-unit>
        <trans-unit id="7cc439ff40c5b4dedd82f1f56048dc9dea26eb6f" translate="yes" xml:space="preserve">
          <source>=&amp;gt; [(node, key, [key])]</source>
          <target state="translated">=&amp;gt; [(узел, ключ, [ключ])]</target>
        </trans-unit>
        <trans-unit id="43c78599b734a8beb8eaf6cf4e3c3a77e20137fe" translate="yes" xml:space="preserve">
          <source>=&amp;gt; a</source>
          <target state="translated">=&amp;gt; а</target>
        </trans-unit>
        <trans-unit id="9ed6660105e653b094e0abb01e8f35fac4855dca" translate="yes" xml:space="preserve">
          <source>=&amp;gt; dev</source>
          <target state="translated">=&amp;gt; разработчик</target>
        </trans-unit>
        <trans-unit id="6947818ac409551f11fbaa78f0ea6391960aa5b8" translate="yes" xml:space="preserve">
          <source>==</source>
          <target state="translated">==</target>
        </trans-unit>
        <trans-unit id="6bb984861a61b745289ffc16ea1e0057086b9c13" translate="yes" xml:space="preserve">
          <source>@&lt;code&gt;&lt;a href=&quot;data-binary-builder#v:toLazyByteString&quot;&gt;toLazyByteString&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;data-binary-builder#v:fromShortByteString&quot;&gt;fromShortByteString&lt;/a&gt;&lt;/code&gt; bs) = &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#v:fromChunks&quot;&gt;fromChunks&lt;/a&gt;&lt;/code&gt; [&lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-short#v:fromShort&quot;&gt;fromShort&lt;/a&gt;&lt;/code&gt; bs]</source>
          <target state="translated">@ &lt;code&gt;&lt;a href=&quot;data-binary-builder#v:toLazyByteString&quot;&gt;toLazyByteString&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;&lt;a href=&quot;data-binary-builder#v:fromShortByteString&quot;&gt;fromShortByteString&lt;/a&gt;&lt;/code&gt; bs) = &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#v:fromChunks&quot;&gt;fromChunks&lt;/a&gt;&lt;/code&gt; [ &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-short#v:fromShort&quot;&gt;fromShort&lt;/a&gt;&lt;/code&gt; bs]</target>
        </trans-unit>
        <trans-unit id="05f62fcb80c6543699d5f5fdd9477911d9bc454c" translate="yes" xml:space="preserve">
          <source>@&lt;code&gt;&lt;a href=&quot;data-binary-builder#v:toLazyByteString&quot;&gt;toLazyByteString&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;data-binary-builder#v:fromShortByteString&quot;&gt;fromShortByteString&lt;/a&gt;&lt;/code&gt; bs) = &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring-lazy#v:fromChunks&quot;&gt;fromChunks&lt;/a&gt;&lt;/code&gt; [&lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring-short#v:fromShort&quot;&gt;fromShort&lt;/a&gt;&lt;/code&gt; bs]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7645f8659601261150e344f118c20cdc21f84f1c" translate="yes" xml:space="preserve">
          <source>@since 4.X.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f4dc36787602cc5de507d13c594861d488c7eb" translate="yes" xml:space="preserve">
          <source>A &quot;-&amp;gt;&quot; string</source>
          <target state="translated">Строка &quot;-&amp;gt;&quot;</target>
        </trans-unit>
        <trans-unit id="3dbf51df963b10779a311937a8f60e762c73a212" translate="yes" xml:space="preserve">
          <source>A &quot;::&quot; string</source>
          <target state="translated">Строка &quot;::&quot;</target>
        </trans-unit>
        <trans-unit id="300f220bfe895126a57222e655e8c3d3cabdf03a" translate="yes" xml:space="preserve">
          <source>A &quot;plain&quot; type constructor. &quot;Fancier&quot; type constructors are returned using &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:PrimTyConI&quot;&gt;PrimTyConI&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:FamilyI&quot;&gt;FamilyI&lt;/a&gt;&lt;/code&gt; as appropriate. At present, this reified declaration will never have derived instances attached to it (if you wish to check for an instance, see &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Конструктор &quot;простого&quot; типа. Конструкторы типа &quot;Fancier&quot; возвращаются с использованием &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:PrimTyConI&quot;&gt;PrimTyConI&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:FamilyI&quot;&gt;FamilyI&lt;/a&gt;&lt;/code&gt; в зависимости от ситуации. В настоящее время это обобщенное объявление никогда не будет иметь прикрепленных к нему производных экземпляров (если вы хотите проверить экземпляр, см. &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="10a841c387fe820bc69427b7c8889b542a6b0766" translate="yes" xml:space="preserve">
          <source>A &quot;plain&quot; type constructor. &quot;Fancier&quot; type constructors are returned using &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:PrimTyConI&quot;&gt;PrimTyConI&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:FamilyI&quot;&gt;FamilyI&lt;/a&gt;&lt;/code&gt; as appropriate. At present, this reified declaration will never have derived instances attached to it (if you wish to check for an instance, see &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Конструктор &quot;простого&quot; типа. Конструкторы типа &quot;Fancier&quot; возвращаются с использованием &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:PrimTyConI&quot;&gt;PrimTyConI&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:FamilyI&quot;&gt;FamilyI&lt;/a&gt;&lt;/code&gt; в зависимости от ситуации. В настоящее время это обобщенное объявление никогда не будет иметь прикрепленных к нему производных экземпляров (если вы хотите проверить экземпляр, см. &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyInstances&quot;&gt;reifyInstances&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="32c1213ff43ed2016bf02de4b047ebc7b374b44b" translate="yes" xml:space="preserve">
          <source>A &quot;primitive&quot; type constructor, which can't be expressed with a &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt;. Examples: &lt;code&gt;(-&amp;gt;)&lt;/code&gt;, &lt;code&gt;Int#&lt;/code&gt;.</source>
          <target state="translated">А &amp;laquo;примитивный&amp;raquo; конструктор типа, который не может быть выражено с &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt; . Примеры: &lt;code&gt;(-&amp;gt;)&lt;/code&gt; , &lt;code&gt;Int#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b8cadfacc5513088f5ce5adc653861e33911e323" translate="yes" xml:space="preserve">
          <source>A &quot;primitive&quot; type constructor, which can't be expressed with a &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt;. Examples: &lt;code&gt;(-&amp;gt;)&lt;/code&gt;, &lt;code&gt;Int#&lt;/code&gt;.</source>
          <target state="translated">А &amp;laquo;примитивный&amp;raquo; конструктор типа, который не может быть выражено с &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Dec&quot;&gt;Dec&lt;/a&gt;&lt;/code&gt; . Примеры: &lt;code&gt;(-&amp;gt;)&lt;/code&gt; , &lt;code&gt;Int#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8b95014d55a1a5c44f3c7bc23c6504bed812af75" translate="yes" xml:space="preserve">
          <source>A &quot;raw&quot; (disk) device which supports block binary read and write operations and may be seekable only to positions of certain granularity (block- aligned).</source>
          <target state="translated">Устройство &quot;raw&quot; (дисковое),которое поддерживает блочные двоичные операции чтения и записи и может быть обращено только к позициям с определенной степенью детализации (блочно-выровненным).</target>
        </trans-unit>
        <trans-unit id="40dadc0fe1ae92b18009dce1f8fd8927976b9479" translate="yes" xml:space="preserve">
          <source>A &quot;standard&quot; derived instance</source>
          <target state="translated">&quot;стандартный&quot; производный экземпляр</target>
        </trans-unit>
        <trans-unit id="a9c3609906f2647fca409f7da980e584e3ef11e0" translate="yes" xml:space="preserve">
          <source>A &quot;value&quot; variable (as opposed to a type variable, see &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:TyVarI&quot;&gt;TyVarI&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Переменная &amp;laquo;значение&amp;raquo; (в отличие от переменной типа, см. &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:TyVarI&quot;&gt;TyVarI&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d2fa3eeda719de99d1617880e4ee077e0acc83a6" translate="yes" xml:space="preserve">
          <source>A &quot;value&quot; variable (as opposed to a type variable, see &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TyVarI&quot;&gt;TyVarI&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Переменная &amp;laquo;значение&amp;raquo; (в отличие от переменной типа, см. &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:TyVarI&quot;&gt;TyVarI&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7997fc7db9137928c1b509a18708a225d550e901" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;&lt;code&gt;Found hole&lt;/code&gt;&amp;rdquo; error usually terminates compilation, like any other type error. After all, you have omitted some code from your program. Nevertheless, you can run and test a piece of code containing holes, by using the &lt;a href=&quot;../using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt;&lt;code&gt;-fdefer-typed-holes&lt;/code&gt;&lt;/a&gt; flag. This flag defers errors produced by typed holes until runtime, and converts them into compile-time warnings. These warnings can in turn be suppressed entirely by &lt;a href=&quot;../using-warnings#ghc-flag--Wtyped-holes&quot;&gt;&lt;code&gt;-Wno-typed-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d099ba358135489de4b98f8bef8e1700327509fb" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;&lt;code&gt;Found hole&lt;/code&gt;&amp;rdquo; error usually terminates compilation, like any other type error. After all, you have omitted some code from your program. Nevertheless, you can run and test a piece of code containing holes, by using the &lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt;&lt;code&gt;-fdefer-typed-holes&lt;/code&gt;&lt;/a&gt; flag. This flag defers errors produced by typed holes until runtime, and converts them into compile-time warnings. These warnings can in turn be suppressed entirely by &lt;a href=&quot;using-warnings#ghc-flag--Wtyped-holes&quot;&gt;&lt;code&gt;-Wno-typed-holes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ошибка &amp;laquo; &lt;code&gt;Found hole&lt;/code&gt; &amp;raquo; обычно прерывает компиляцию, как и ошибка любого другого типа. В конце концов, вы пропустили какой-то код из своей программы. Тем не менее, вы можете запустить и протестировать фрагмент кода, содержащий дыры, используя &lt;a href=&quot;using-warnings#ghc-flag--fdefer-typed-holes&quot;&gt; &lt;code&gt;-fdefer-typed-holes&lt;/code&gt; &lt;/a&gt; . Этот флаг откладывает ошибки, вызванные типизированными дырами, до времени выполнения и преобразует их в предупреждения времени компиляции. Эти предупреждения, в свою очередь, могут быть полностью подавлены &lt;a href=&quot;using-warnings#ghc-flag--Wtyped-holes&quot;&gt; &lt;code&gt;-Wno-typed-holes&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="03ff9cc92a1ea810e41d8095971be93bdf74f086" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;literate Haskell&amp;rdquo; module.</source>
          <target state="translated">Модуль &amp;laquo;грамотный Haskell&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="8fe0e5fa44b3983941075b4a786a25d59bed2413" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;stable topological sort&amp;rdquo; here, we mean that we perform this algorithm (which we call &lt;em&gt;ScopedSort&lt;/em&gt;):</source>
          <target state="translated">&amp;laquo;Стабильная топологическая сортировка&amp;raquo; здесь означает, что мы выполняем этот алгоритм (который мы называем &lt;em&gt;ScopedSort&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="65e8bde33d0926b669005135d74a4a27a9f4e93e" translate="yes" xml:space="preserve">
          <source>A &amp;ldquo;strict pattern match&amp;rdquo; is any pattern match that can fail. For example, &lt;code&gt;()&lt;/code&gt;, &lt;code&gt;(x:xs)&lt;/code&gt;, &lt;code&gt;!z&lt;/code&gt;, and &lt;code&gt;C x&lt;/code&gt; are strict patterns, but &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;~(1,2)&lt;/code&gt; are not. For the purposes of &lt;code&gt;ApplicativeDo&lt;/code&gt;, a pattern match against a &lt;code&gt;newtype&lt;/code&gt; constructor is considered strict.</source>
          <target state="translated">&amp;laquo;Строгое сопоставление с образцом&amp;raquo; - это любое сопоставление с образцом, которое может потерпеть неудачу. Например, &lt;code&gt;()&lt;/code&gt; , &lt;code&gt;(x:xs)&lt;/code&gt; , &lt;code&gt;!z&lt;/code&gt; и &lt;code&gt;C x&lt;/code&gt; строгие узоры, но &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;~(1,2)&lt;/code&gt; не являются. Для целей &lt;code&gt;ApplicativeDo&lt;/code&gt; соответствие шаблона конструктору &lt;code&gt;newtype&lt;/code&gt; считается строгим.</target>
        </trans-unit>
        <trans-unit id="f547f0739b0d3ec8b58b70d55fe4382a3dcaab7d" translate="yes" xml:space="preserve">
          <source>A '(' character</source>
          <target state="translated">Символ '(')</target>
        </trans-unit>
        <trans-unit id="70d5a19191116accb71ec443cd4b4fc4796865be" translate="yes" xml:space="preserve">
          <source>A ')' character</source>
          <target state="translated">')' персонаж</target>
        </trans-unit>
        <trans-unit id="5c59fc97f8f16f9e84989be6184e3be3c12f4c4d" translate="yes" xml:space="preserve">
          <source>A ',' character</source>
          <target state="translated">'',' персонаж</target>
        </trans-unit>
        <trans-unit id="8cea7bc9d7fd5c53754fe5fa302c98ab7ebba9d0" translate="yes" xml:space="preserve">
          <source>A ';' character</source>
          <target state="translated">A ';' персонаж</target>
        </trans-unit>
        <trans-unit id="24a06b0596e6f9b715b619a7c1e59cb58205d143" translate="yes" xml:space="preserve">
          <source>A '=' character</source>
          <target state="translated">Символ &quot;=</target>
        </trans-unit>
        <trans-unit id="f781f6726d451e5c82ca330b01816e92ba6ee9b1" translate="yes" xml:space="preserve">
          <source>A '[' character</source>
          <target state="translated">Символ '['</target>
        </trans-unit>
        <trans-unit id="f989a4679028d9554fb0771f1f50eeed8579ba0d" translate="yes" xml:space="preserve">
          <source>A ']' character</source>
          <target state="translated">Персонаж &quot;А</target>
        </trans-unit>
        <trans-unit id="fa5fc1c81727f1321da12121ae03096bcaacada5" translate="yes" xml:space="preserve">
          <source>A '{' character</source>
          <target state="translated">Персонаж '{'</target>
        </trans-unit>
        <trans-unit id="f0864bd7f5f8f23f2a725f53240aa607578e2ea5" translate="yes" xml:space="preserve">
          <source>A '}' character</source>
          <target state="translated">Персонаж &quot;}</target>
        </trans-unit>
        <trans-unit id="0d686b1feab210fa1d571b1cf64d0dc555ea4552" translate="yes" xml:space="preserve">
          <source>A (partial) type signature has the following form: &lt;code&gt;forall a b .. . (C1, C2, ..) =&amp;gt; tau&lt;/code&gt;. It consists of three parts:</source>
          <target state="translated">Сигнатура (частичного) типа имеет следующий вид: &lt;code&gt;forall a b .. . (C1, C2, ..) =&amp;gt; tau&lt;/code&gt; . Он состоит из трех частей:</target>
        </trans-unit>
        <trans-unit id="f80c2a8ab20b3b616d4d4b2f353d1a0756e8af37" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;#safe-language&quot;&gt;safe language&lt;/a&gt; dialect of Haskell that provides stricter guarantees about the code. It allows types and module boundaries to be trusted.</source>
          <target state="translated">&lt;a href=&quot;#safe-language&quot;&gt;Безопасный язык&lt;/a&gt; диалект Haskell , что обеспечивает более строгие гарантии о коде. Это позволяет доверять типам и границам модулей.</target>
        </trans-unit>
        <trans-unit id="240604f168c64bbbbd9cc3f79b1c96c50e4da4c9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;#&lt;/code&gt; is followed by optional spaces and tabs, an alphanumeric keyword that describes the kind of processing, and its arguments. Arguments look like C expressions separated by commas (they are not written inside parens). They extend up to the nearest unmatched &lt;code&gt;)&lt;/code&gt;, &lt;code&gt;]&lt;/code&gt; or &lt;code&gt;}&lt;/code&gt;, or to the end of line if it occurs outside any &lt;code&gt;() [] {} '' &quot;&quot; /**/&lt;/code&gt; and is not preceded by a backslash. Backslash-newline pairs are stripped.</source>
          <target state="translated">За &lt;code&gt;#&lt;/code&gt; следуют необязательные пробелы и табуляторы, буквенно-цифровое ключевое слово, описывающее вид обработки и ее аргументы. Аргументы выглядят как выражения C, разделенные запятыми (они не записываются внутри скобок). Они простираются до ближайшего несоответствующего &lt;code&gt;)&lt;/code&gt; , &lt;code&gt;]&lt;/code&gt; или &lt;code&gt;}&lt;/code&gt; или до конца строки, если оно встречается за пределами any &lt;code&gt;() [] {} '' &quot;&quot; /**/&lt;/code&gt; и ему не предшествует обратная косая черта. Пары обратной косой черты и новой строки удаляются.</target>
        </trans-unit>
        <trans-unit id="ec7d45efe24e17a78b3531b77507cc5b414969c3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;:&lt;/code&gt; character</source>
          <target state="translated">A &lt;code&gt;:&lt;/code&gt; персонаж</target>
        </trans-unit>
        <trans-unit id="4d77aa84dcc8476d8b0a59a06fc9910da40d4c94" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="translated">Функция, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; , специализированная для моноида &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; , которая использует преимущества внутренней структуры &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; , чтобы избежать оборачивания в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; в определенных точках.</target>
        </trans-unit>
        <trans-unit id="79c191e27824000624b968ce755ce2407b5fc3a4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; that describes the error.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , описывающая ошибку.</target>
        </trans-unit>
        <trans-unit id="c8af9e26c7ea200796fafc8da4bdbcb725df4cd0" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d400114eea1475d056fa063af7fa6b78840b520" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; that describes the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5923743c66c14ca8fe2bc6adfa2042271bf2976b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc060b93922360079cb1f325af3a9684b198eb3c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; that describes the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58fb0b6ff8af11490e6db18e3159b3eb14567f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an abstract type representing a handle to a thread. &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an instance of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt;, where the &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance implements an arbitrary total ordering over &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;s. The &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; instance lets you convert an arbitrary-valued &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; to string form; showing a &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; value is occasionally useful when debugging or diagnosing the behaviour of a concurrent program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; является абстрактным типом , представляющий дескриптор потока. &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; - это экземпляр &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; , где экземпляр &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; реализует произвольное общее упорядочение по &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; s. &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; Экземпляр позволяет преобразовать произвольные многозначные &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; в виде строки; отображение значения &lt;code&gt;&lt;a href=&quot;control-concurrent#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; иногда полезно при отладке или диагностике поведения параллельной программы.</target>
        </trans-unit>
        <trans-unit id="ce7ce3c377d39b823d763d8b4302a42e6c97ffce" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is a synchronising variable, used for communication between concurrent threads. It can be thought of as a box, which may be empty or full.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; является переменной синхронизации, используемый для связи между параллельными потоками. Его можно представить как коробку, которая может быть пустой или полной.</target>
        </trans-unit>
        <trans-unit id="af4f02e01c3ad2f55652fc8918f170a9b5f03f08" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; is like a &lt;code&gt;TChan&lt;/code&gt;, with two important differences:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; подобен &lt;code&gt;TChan&lt;/code&gt; , с двумя важными отличиями:</target>
        </trans-unit>
        <trans-unit id="db398cefd7bed902dc3f0468dccbf2a712235464" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; without a &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; instance may only be used in conjunction with pattern that always match, such as newtypes, tuples, data types with only a single data constructor, and irrefutable patterns (&lt;code&gt;~pat&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; без &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; , например , может быть использована только в сочетании с рисунком , который всегда совпадает, такие , как ньютайпы, кортежи, типы данных только с одним конструктором данных и неопровержимыми образцы ( &lt;code&gt;~pat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d52facfcc17560b0b9fcad065ab617e3ee01a7a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; without a &lt;code&gt;&lt;a href=&quot;control-monad-fail#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; instance may only be used in conjunction with pattern that always match, such as newtypes, tuples, data types with only a single data constructor, and irrefutable patterns (&lt;code&gt;~pat&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; без &lt;code&gt;&lt;a href=&quot;control-monad-fail#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; , например , может быть использована только в сочетании с рисунком , который всегда совпадает, такие , как ньютайпы, кортежи, типы данных только с одним конструктором данных и неопровержимыми образцы ( &lt;code&gt;~pat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="98a4293c93b9833b04feec4af599fa4ee1223c1f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;control-monad-catch#t:MonadMask&quot;&gt;MonadMask&lt;/a&gt;&lt;/code&gt; computation may either succeed with a value, abort with an exception, or abort for some other reason. For example, in &lt;code&gt;ExceptT e IO&lt;/code&gt; you can use &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:throwM&quot;&gt;throwM&lt;/a&gt;&lt;/code&gt; to abort with an exception (&lt;code&gt;&lt;a href=&quot;control-monad-catch#v:ExitCaseException&quot;&gt;ExitCaseException&lt;/a&gt;&lt;/code&gt;) or &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-monad-trans-except#v:throwE&quot;&gt;throwE&lt;/a&gt;&lt;/code&gt; to abort with a value of type &lt;code&gt;e&lt;/code&gt; (&lt;code&gt;&lt;a href=&quot;control-monad-catch#v:ExitCaseAbort&quot;&gt;ExitCaseAbort&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ad78e77b876113c12279bae00129914cb00534" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; will generally be more efficient (in terms of both time and space) than the equivalent &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; with the same element type. However, &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; is strict in its elements - so don't use &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; if you require the non-strictness that &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; provides.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; как правило , будет более эффективным (с точки зрения времени и в пространстве) , чем эквивалентный &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; с тем же типом элемента. Однако &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; строг в своих элементах - поэтому не используйте &lt;code&gt;&lt;a href=&quot;data-array-unboxed#t:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; , если вам требуется нестрогость, которую обеспечивает &lt;code&gt;&lt;a href=&quot;data-array#v:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="847ef857687e72367977c03ca9ca6353ced7a496" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value finitely far from the left end yields &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; (short circuit):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387236e394e04d90b9aaa99b8be720f9777a2e5d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; value infinitely far from the left end hangs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccaa5a853f1fe133a9c1964f7408ce1ac090820" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value finitely far from the left end yields &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; (short circuit):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfecb196440667fb82c8f75e4e5a04e16e0c97e6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; value infinitely far from the left end hangs:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d5b0a46bf9ac13012695d647011268c6839438" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; содержит 8-битовый байт, или с помощью операции из &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; он может быть истолкованы как содержащие 8-битные символы.</target>
        </trans-unit>
        <trans-unit id="f0361d0a51c1f43d10a9cb740bc7c3263eaf2423" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:BufferWriter&quot;&gt;BufferWriter&lt;/a&gt;&lt;/code&gt; represents the result of running a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;. It unfolds as a sequence of chunks of data. These chunks come in two forms:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:BufferWriter&quot;&gt;BufferWriter&lt;/a&gt;&lt;/code&gt; представляет собой результат запуска &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; . Он разворачивается как последовательность порций данных. Эти фрагменты бывают двух видов:</target>
        </trans-unit>
        <trans-unit id="a2a67d6507558e86947578e9d9e53ccc77b5315b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt; together with the &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; of free bytes. The filled space starts at offset 0 and ends at the first free byte.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Buffer&quot;&gt;Buffer&lt;/a&gt;&lt;/code&gt; вместе с &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; свободных байтов. Заполненное пространство начинается со смещения 0 и заканчивается первым свободным байтом.</target>
        </trans-unit>
        <trans-unit id="811beb8fb95b58583e6d93fef1cf1359e8bd2557" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; action denotes a computation of a value that writes a stream of bytes as a side-effect. &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt;s are strict in their side-effect; i.e., the stream of bytes will always be written before the computed value is returned.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; действие означает вычисление значения , которое записывает поток байт в качестве побочного эффекта. &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Put&quot;&gt;Put&lt;/a&gt;&lt;/code&gt; s строги в своих побочных эффектах; т.е. поток байтов всегда будет записан до того, как будет возвращено вычисленное значение.</target>
        </trans-unit>
        <trans-unit id="77ba64f4eea7ca7040ede60a91c0479a0256585a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; содержит 8-битовый байт, или с помощью операции из &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; он может быть истолкованы как содержащие 8-битные символы.</target>
        </trans-unit>
        <trans-unit id="3742f257dac22eaeb1f72c5a59a402dd9caed9a3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; содержит 8-битовый байт, или с помощью операции из &lt;a href=&quot;data-bytestring-char8&quot;&gt;Data.ByteString.Char8&lt;/a&gt; он может быть истолкованы как содержащие 8-битные символы.</target>
        </trans-unit>
        <trans-unit id="87acc03140b6a38efd5eb569210acf530d577e77" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; may only represent a monomorphic value; an attempt to create a value of type &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; from a polymorphically-typed expression will result in an ambiguity error (see &lt;code&gt;&lt;a href=&quot;data-dynamic#v:toDyn&quot;&gt;toDyn&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; может представлять только мономорфное значение; попытка создать значение типа &lt;code&gt;&lt;a href=&quot;data-dynamic#t:Dynamic&quot;&gt;Dynamic&lt;/a&gt;&lt;/code&gt; из выражения с полиморфным типом приведет к ошибке неоднозначности (см. &lt;code&gt;&lt;a href=&quot;data-dynamic#v:toDyn&quot;&gt;toDyn&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7559ec7e510228d1d09527f56d2e4f26a8324238" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Comparison&quot;&gt;Comparison&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, because &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt;&lt;/code&gt; can apply its function argument to each input of the comparison function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Comparison&quot;&gt;Comparison&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; , потому что &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt;&lt;/code&gt; можно применить свой аргумент функции для каждого входа функции сравнения.</target>
        </trans-unit>
        <trans-unit id="dfe92df845c7b9c6045ec318c8250ac09ae3d416" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Predicate&quot;&gt;Predicate&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, because &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt;&lt;/code&gt; can apply its function argument to the input of the predicate.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Predicate&quot;&gt;Predicate&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#t:Contravariant&quot;&gt;Contravariant&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; , потому что &lt;code&gt;&lt;a href=&quot;data-functor-contravariant#v:contramap&quot;&gt;contramap&lt;/a&gt;&lt;/code&gt; может применить свой аргумент функции на вход предиката.</target>
        </trans-unit>
        <trans-unit id="89f60209ccece04c7a022e1e1c35644383139a1b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; list is one which always has at least one element, but is otherwise identical to the traditional list type in complexity and in terms of API. You will almost certainly want to import this module &lt;code&gt;qualified&lt;/code&gt;.</source>
          <target state="translated">Список &lt;code&gt;&lt;a href=&quot;data-list-nonempty#t:NonEmpty&quot;&gt;NonEmpty&lt;/a&gt;&lt;/code&gt; -это список, который всегда имеет хотя бы один элемент, но в остальном идентичен традиционному типу списка по сложности и с точки зрения API. Вы почти наверняка захотите импортировать этот &lt;code&gt;qualified&lt;/code&gt; модуль .</target>
        </trans-unit>
        <trans-unit id="344c6ff8d7a2bcd44da8bfd8dc8df57dba6e7404" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; with the added requirement of a neutral element. Thus any &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;, but not the other way around.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; с дополнительным требованием нейтрального элемента. Таким образом, любой &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;&lt;a href=&quot;prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; , но не наоборот.</target>
        </trans-unit>
        <trans-unit id="e35d89b46351c9630145c0b8bbf882d79457fee2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; is a generalization of a &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;. Yet unlike the &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; requires the presence of a neutral element (&lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt;) in addition to the associative operator. The requirement for a neutral element prevents many types from being a full Monoid, like &lt;a href=&quot;data-list-nonempty-nonempty&quot;&gt;Data.List.NonEmpty.NonEmpty&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; является обобщением &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; . Тем не менее, в отличие от &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; требует наличия нейтрального элемента ( &lt;code&gt;&lt;a href=&quot;data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; ) в дополнение к ассоциативному оператору. Требование нейтрального элемента предотвращает &lt;a href=&quot;data-list-nonempty-nonempty&quot;&gt;превращение&lt;/a&gt; многих типов в полноценный моноид, например Data.List.NonEmpty.NonEmpty .</target>
        </trans-unit>
        <trans-unit id="276d119a24c0525aa19868a36000fbee697e666e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt; , специализированная для моноида &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; , которая использует внутреннюю структуру &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; , чтобы избежать переноса в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; в определенные моменты.</target>
        </trans-unit>
        <trans-unit id="8fd75af820d1f54d527c5ea90ed335e09bb6599b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84511dcac21ac65b75749687fbca1119e8190ab2" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;-like function, specialized to the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-semigroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; monoid, which takes advantage of the internal structure of &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt;&lt;/code&gt; to avoid wrapping in &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; at certain points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031626d15f769e94dae06fe92bad6c13a12414d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is a list of characters. String constants in Haskell are values of type &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; представляет собой список символов. Строковые константы в Haskell - это значения типа &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d557b82ce614c78066224f253d24d1e9e55d7e4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; значение представляет собой последовательность значений скалярных Unicode, как это определено в &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, определение D76 стандарта Unicode 5.2&lt;/a&gt; . Таким образом, &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; не может содержать значения в диапазоне от U + D800 до U + DFFF включительно. Реализации Haskell допускают все кодовые точки Unicode ( &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, определение D10&lt;/a&gt; ) как значения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , включая кодовые точки из этого недопустимого диапазона. Это означает, что есть некоторые значения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , которые не являются допустимыми скалярными значениями Unicode, и функции в этом модуле должны обрабатывать эти случаи.</target>
        </trans-unit>
        <trans-unit id="ba6d7e8a329334a4b1d22a38141853602d817c11" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd09cc4e2dd986cdda3af230a4786350b6847249" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;https://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;https://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493151274c14fd9063bbd993eabc297404d04a97" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; значение представляет собой последовательность значений скалярных Unicode, как это определено в &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, определение D76 стандарта Unicode 5.2&lt;/a&gt; . Таким образом, &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; не может содержать значения в диапазоне от U + D800 до U + DFFF включительно. Реализации Haskell допускают все кодовые точки Unicode ( &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, определение D10&lt;/a&gt; ) как значения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , включая кодовые точки из этого недопустимого диапазона. Это означает, что есть некоторые значения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , которые не являются допустимыми скалярными значениями Unicode, и функции в этом модуле должны обрабатывать эти случаи.</target>
        </trans-unit>
        <trans-unit id="f4efd90b35c412b075e756ebf2fb1e09bcf9e262" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f04c611bd484409b08efb1ab5363099dd50fe58" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; value is a sequence of Unicode scalar values, as defined in &lt;a href=&quot;https://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=35&quot;&gt;&amp;sect;3.9, definition D76 of the Unicode 5.2 standard&lt;/a&gt;. As such, a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; cannot contain values in the range U+D800 to U+DFFF inclusive. Haskell implementations admit all Unicode code points (&lt;a href=&quot;https://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#page=13&quot;&gt;&amp;sect;3.4, definition D10&lt;/a&gt;) as &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values, including code points from this invalid range. This means that there are some &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; values that are not valid Unicode scalar values, and the functions in this module must handle those cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ab4f0a1420ff27eb07a2afba8acbdae44df567" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt; represents the version of a software entity.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt; представляет собой версию программного объекта.</target>
        </trans-unit>
        <trans-unit id="5972d36864fed9ff33b5afd14a95cb4b9c27b6e1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an unsigned integral type, with the same size as &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; является беззнаковым интегральным типом, с таким же размером , как &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3aa7b36dc316c60d893b5f124b1ba5988ceb7f6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-base#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is a list of characters. String constants in Haskell are values of type &lt;code&gt;&lt;a href=&quot;ghc-base#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-base#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; представляет собой список символов. Строковые константы в Haskell - это значения типа &lt;code&gt;&lt;a href=&quot;ghc-base#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39546383234ce70932952659423f3ad369b9dc5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an abstract type representing a handle to a thread. &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an instance of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt;, where the &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance implements an arbitrary total ordering over &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;s. The &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; instance lets you convert an arbitrary-valued &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; to string form; showing a &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; value is occasionally useful when debugging or diagnosing the behaviour of a concurrent program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; является абстрактным типом , представляющий дескриптор потока. &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; - это экземпляр &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; , где экземпляр &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; реализует произвольное общее упорядочение по &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; s. &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; Экземпляр позволяет преобразовать произвольные многозначные &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; в виде строки; отображение значения &lt;code&gt;&lt;a href=&quot;ghc-conc#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; иногда полезно при отладке или диагностике поведения параллельной программы.</target>
        </trans-unit>
        <trans-unit id="6daf9cc92f22cab1cda41ec56fc33fa5bcb5c1b5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an abstract type representing a handle to a thread. &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; is an instance of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt;, where the &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance implements an arbitrary total ordering over &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt;s. The &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; instance lets you convert an arbitrary-valued &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; to string form; showing a &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; value is occasionally useful when debugging or diagnosing the behaviour of a concurrent program.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; является абстрактным типом , представляющий дескриптор потока. &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; - это экземпляр &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; , где экземпляр &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; реализует произвольное общее упорядочение по &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; s. &lt;code&gt;&lt;a href=&quot;text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; Экземпляр позволяет преобразовать произвольные многозначные &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; в виде строки; отображение значения &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#t:ThreadId&quot;&gt;ThreadId&lt;/a&gt;&lt;/code&gt; иногда полезно при отладке или диагностике поведения параллельной программы.</target>
        </trans-unit>
        <trans-unit id="c433ed52817c69814ef408474d7e7f0f19916c6d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt;. The &lt;code&gt;String&lt;/code&gt; is the name of function that was called, the &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; is the call-site. The list is ordered with the most recently called function at the head.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt; . &lt;code&gt;String&lt;/code&gt; это имя функции , которая была вызвана, &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; это вызов-сайт. Список упорядочен так, что во главе его стоит функция, вызываемая последней.</target>
        </trans-unit>
        <trans-unit id="e99764c1391b456842912477a01318962af2d4bc" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an unsigned integral type, with the same size as &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exts#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; является беззнаковым интегральным типом, с таким же размером , как &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c448caa1f3bf73a5f3c86998ff8b234d23f5d613" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; instance must satisfy the following laws:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; экземпляр должен удовлетворять следующим условиям:</target>
        </trans-unit>
        <trans-unit id="f058fc8709c912eeb2b787983729f79e927817fe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; instance must satisfy the following laws:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; экземпляр должен удовлетворять следующим условиям:</target>
        </trans-unit>
        <trans-unit id="37bca98687b6539690c105875b7d36949eaf0920" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-io-encoding#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; is a specification of a conversion scheme between sequences of bytes and sequences of Unicode characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io-encoding#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; это спецификация схемы преобразования между последовательностями байтов и последовательности символов Unicode.</target>
        </trans-unit>
        <trans-unit id="9ccfc506522947e455012faccd5c0641a69d1d0d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt;. The &lt;code&gt;String&lt;/code&gt; is the name of function that was called, the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; is the call-site. The list is ordered with the most recently called function at the head.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt; . &lt;code&gt;String&lt;/code&gt; это имя функции , которая была вызвана, &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; это вызов-сайт. Список упорядочен так, что во главе его стоит функция, вызываемая последней.</target>
        </trans-unit>
        <trans-unit id="95958acad6af1408745c1c860b5d733b2d323753" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; is a &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt;. The &lt;code&gt;String&lt;/code&gt; is the name of function that was called, the &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; is the call-site. The list is ordered with the most recently called function at the head.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;[(String, SrcLoc)]&lt;/code&gt; . &lt;code&gt;String&lt;/code&gt; это имя функции , которая была вызвана, &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; это вызов-сайт. Список упорядочен так, что во главе его стоит функция, вызываемая последней.</target>
        </trans-unit>
        <trans-unit id="8456cabb368794e2df99a2d1a5a798a5a772942a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an unsigned integral type, with the same size as &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-word#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; является беззнаковым интегральным типом, с таким же размером , как &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e97ac17514823d55db637532fc8cca228a55594" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;ghci-resolvedbco#t:ResolvedBCO&quot;&gt;ResolvedBCO&lt;/a&gt;&lt;/code&gt; is one in which all the &lt;code&gt;Name&lt;/code&gt; references have been resolved to actual addresses or &lt;code&gt;RemoteHValues&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghci-resolvedbco#t:ResolvedBCO&quot;&gt;ResolvedBCO&lt;/a&gt;&lt;/code&gt; является один , в котором все &lt;code&gt;Name&lt;/code&gt; ссылка была решена с реальными адресами или &lt;code&gt;RemoteHValues&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac3fb4ef717ebd938a5a9ccd1477f18f81bcf827" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;-style resource handler for &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9ca692d8226adf018ac8ce128aabc55c560244" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;-style resource handler for &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/base-4.13.0.0/Control-Exception-Base.html#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; обработчик -стиль ресурс для &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2efa953b4a158512aba395acdfd3f41d7d9dbfa4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;-style resource handler for &lt;code&gt;&lt;a href=&quot;system-process#v:createProcess&quot;&gt;createProcess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a5f3927daf976203d0a64fefe6097c6cf2ad69" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instance can have any of its values turned into a Template Haskell expression. This is needed when a value used within a Template Haskell quotation is bound outside the Oxford brackets (&lt;code&gt;[| ... |]&lt;/code&gt; or &lt;code&gt;[|| ... ||]&lt;/code&gt;) but not at the top level. As an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20537f017b881ed432aeb6d8c3c69764ad12389" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instance can have any of its values turned into a Template Haskell expression. This is needed when a value used within a Template Haskell quotation is bound outside the Oxford brackets (&lt;code&gt;[| ... |]&lt;/code&gt;) but not at the top level. As an example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; экземпляр может иметь какой - либо из его значений превратились в выражение шаблона Haskell. Это необходимо, когда значение, используемое в цитате Template Haskell, ограничено за пределами оксфордских скобок ( &lt;code&gt;[| ... |]&lt;/code&gt; ), но не на верхнем уровне. Например:</target>
        </trans-unit>
        <trans-unit id="c9e2e94c84b5b9cd735447e28ce573e13139de2a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instance must satisfy &lt;code&gt;$(lift x) &amp;equiv; x&lt;/code&gt; and &lt;code&gt;$$(liftTyped x) &amp;equiv; x&lt;/code&gt; for all &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;$(...)&lt;/code&gt; and &lt;code&gt;$$(...)&lt;/code&gt; are Template Haskell splices. It is additionally expected that &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:lift&quot;&gt;lift&lt;/a&gt; x &amp;equiv; &lt;a href=&quot;language-haskell-th-syntax#v:unTypeQ&quot;&gt;unTypeQ&lt;/a&gt; (&lt;a href=&quot;language-haskell-th-syntax#v:liftTyped&quot;&gt;liftTyped&lt;/a&gt; x)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baf8997f83651b56856d51ed22119ab60baf8c6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; instance must satisfy &lt;code&gt;$(lift x) &amp;equiv; x&lt;/code&gt; for all &lt;code&gt;x&lt;/code&gt;, where &lt;code&gt;$(...)&lt;/code&gt; is a Template Haskell splice.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; экземпляр должен удовлетворять &lt;code&gt;$(lift x) &amp;equiv; x&lt;/code&gt; для всех &lt;code&gt;x&lt;/code&gt; , где &lt;code&gt;$(...)&lt;/code&gt; является сращивание Template Haskell.</target>
        </trans-unit>
        <trans-unit id="dc2e529d77216b7e230e75736a12096341b81566" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; without a &lt;code&gt;&lt;a href=&quot;prelude#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; instance may only be used in conjunction with pattern that always match, such as newtypes, tuples, data types with only a single data constructor, and irrefutable patterns (&lt;code&gt;~pat&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; без &lt;code&gt;&lt;a href=&quot;prelude#t:MonadFail&quot;&gt;MonadFail&lt;/a&gt;&lt;/code&gt; , например , может быть использована только в сочетании с рисунком , который всегда совпадает, такие , как ньютайпы, кортежи, типы данных только с одним конструктором данных и неопровержимыми образцы ( &lt;code&gt;~pat&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="01cb4e7f2872a463ecfc84cecc5fd37176ad2686" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; is a list of characters. String constants in Haskell are values of type &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; представляет собой список символов. Строковые константы в Haskell - это значения типа &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16c73c4644db1dd430eecd595b2935abcbd70f5e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;prelude#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; is an unsigned integral type, with the same size as &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;prelude#t:Word&quot;&gt;Word&lt;/a&gt;&lt;/code&gt; является беззнаковым интегральным типом, с таким же размером , как &lt;code&gt;&lt;a href=&quot;prelude#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5384336a86ebc421cc3fe658790659229a2e63f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt; is a method for deciding at run-time which type of interaction to use.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Behavior&quot;&gt;Behavior&lt;/a&gt;&lt;/code&gt; является способом принятия решения во время выполнения какого типа взаимодействия для использования.</target>
        </trans-unit>
        <trans-unit id="45d218cdb4af63fb065f7347943499e7d49ef9be" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;system-console-haskeline-monadexception#t:RunIO&quot;&gt;RunIO&lt;/a&gt;&lt;/code&gt; function takes a monadic action &lt;code&gt;m&lt;/code&gt; as input, and outputs an IO action which performs the underlying impure part of &lt;code&gt;m&lt;/code&gt; and returns the '&lt;code&gt;pure'&lt;/code&gt; part of &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;system-console-haskeline-monadexception#t:RunIO&quot;&gt;RunIO&lt;/a&gt;&lt;/code&gt; принимает на вход монадическое действие &lt;code&gt;m&lt;/code&gt; и выводит действие ввода-вывода, которое выполняет нижележащую нечистую часть &lt;code&gt;m&lt;/code&gt; и возвращает &amp;laquo; &lt;code&gt;pure'&lt;/code&gt; часть &lt;code&gt;m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3139966130ea6dafab5ae56d42fa83f1c983bce8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; is a specification of a conversion scheme between sequences of bytes and sequences of Unicode characters.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-io#t:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; это спецификация схемы преобразования между последовательностями байтов и последовательности символов Unicode.</target>
        </trans-unit>
        <trans-unit id="1a15ba8c0101a0b559f5881de53f7fa0649c9e6b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; сообщение генерируется &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; комбинатора. Аргументом является какое-то общее сообщение парсера.</target>
        </trans-unit>
        <trans-unit id="d7c33b518e905e06246fdc3442ce5bfca419239f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e58353acc65029a29c5f94d4523fb7e0eae49d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7ef7fe44084ddf44d2e8bb742356ef4d58d6b59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:Expect&quot;&gt;Expect&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:-60--63--62-&quot;&gt;&amp;lt;?&amp;gt;&lt;/a&gt;&lt;/code&gt; combinator. The argument describes the expected item.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec-error#v:Expect&quot;&gt;Expect&lt;/a&gt;&lt;/code&gt; сообщение генерируется &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:-60--63--62-&quot;&gt;&amp;lt;?&amp;gt;&lt;/a&gt;&lt;/code&gt; Комбинатора. Аргумент описывает ожидаемый элемент.</target>
        </trans-unit>
        <trans-unit id="2f54fff1c216809b3a5e0dbc637601d50f8c6c28" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:SysUnExpect&quot;&gt;SysUnExpect&lt;/a&gt;&lt;/code&gt; message is automatically generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; combinator. The argument is the unexpected input.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec-error#v:SysUnExpect&quot;&gt;SysUnExpect&lt;/a&gt;&lt;/code&gt; сообщение автоматически генерируется &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; комбинатора. Аргумент - неожиданный ввод.</target>
        </trans-unit>
        <trans-unit id="cd574240b0c567cd017058a316ed035f46f6524e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsec-error#v:UnExpect&quot;&gt;UnExpect&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:unexpected&quot;&gt;unexpected&lt;/a&gt;&lt;/code&gt; combinator. The argument describes the unexpected item.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec-error#v:UnExpect&quot;&gt;UnExpect&lt;/a&gt;&lt;/code&gt; сообщение генерируется &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:unexpected&quot;&gt;unexpected&lt;/a&gt;&lt;/code&gt; комбинатора. Аргумент описывает неожиданный предмет.</target>
        </trans-unit>
        <trans-unit id="c19aa3725eed1ff35ec390fbcd0c985fd5b931ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; сообщение генерируется &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; комбинатора. Аргументом является какое-то общее сообщение парсера.</target>
        </trans-unit>
        <trans-unit id="c65c2017bc5e0477e9c2b63e9054f9b8989ca0a8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6ff3260d341085786c3b5f87f8c725da8326a6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#t:Message&quot;&gt;Message&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; combinator. The argument is some general parser message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbea807bde10982fba750640fdd252b73cdd256c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:Expect&quot;&gt;Expect&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:-60--63--62-&quot;&gt;&amp;lt;?&amp;gt;&lt;/a&gt;&lt;/code&gt; combinator. The argument describes the expected item.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:Expect&quot;&gt;Expect&lt;/a&gt;&lt;/code&gt; сообщение генерируется &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:-60--63--62-&quot;&gt;&amp;lt;?&amp;gt;&lt;/a&gt;&lt;/code&gt; Комбинатора. Аргумент описывает ожидаемый элемент.</target>
        </trans-unit>
        <trans-unit id="a0592092bb04d822c205343ec720a927bd033f59" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:SysUnExpect&quot;&gt;SysUnExpect&lt;/a&gt;&lt;/code&gt; message is automatically generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; combinator. The argument is the unexpected input.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:SysUnExpect&quot;&gt;SysUnExpect&lt;/a&gt;&lt;/code&gt; сообщение автоматически генерируется &lt;code&gt;&lt;a href=&quot;text-parsec-combinator#v:satisfy&quot;&gt;satisfy&lt;/a&gt;&lt;/code&gt; комбинатора. Аргумент - неожиданный ввод.</target>
        </trans-unit>
        <trans-unit id="043b63a3a919975f6460c5dd3c3a8b5b0fcacbb9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:UnExpect&quot;&gt;UnExpect&lt;/a&gt;&lt;/code&gt; message is generated by the &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:unexpected&quot;&gt;unexpected&lt;/a&gt;&lt;/code&gt; combinator. The argument describes the unexpected item.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-error#v:UnExpect&quot;&gt;UnExpect&lt;/a&gt;&lt;/code&gt; сообщение генерируется &lt;code&gt;&lt;a href=&quot;text-parsec-prim#v:unexpected&quot;&gt;unexpected&lt;/a&gt;&lt;/code&gt; комбинатора. Аргумент описывает неожиданный предмет.</target>
        </trans-unit>
        <trans-unit id="97982bdf22f3c28d9d65ec6b0247f3758c15fa0c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Builder&lt;/code&gt; is an efficient way to build lazy &lt;code&gt;Text&lt;/code&gt; values. There are several functions for constructing builders, but only one to inspect them: to extract any data, you have to turn them into lazy &lt;code&gt;Text&lt;/code&gt; values using &lt;code&gt;toLazyText&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Builder&lt;/code&gt; является эффективным способом построения ленивого &lt;code&gt;Text&lt;/code&gt; значения. Есть несколько функций для создания построителей, но только одна для их проверки: чтобы извлечь какие-либо данные, вы должны превратить их в ленивые &lt;code&gt;Text&lt;/code&gt; значения с помощью &lt;code&gt;toLazyText&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="994c45c3efba13b92d41911d6419360be708120c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;DEPRECATED&lt;/code&gt; pragma lets you specify that a particular function, class, or type is deprecated.</source>
          <target state="translated">&lt;code&gt;DEPRECATED&lt;/code&gt; Прагма позволяет определить , что конкретная функция, класс или тип осуждается.</target>
        </trans-unit>
        <trans-unit id="202df593255e09bcdac86158dc3e1eaaeacee3f8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;HasField x r a&lt;/code&gt; constraint represents the fact that &lt;code&gt;x&lt;/code&gt; is a field of type &lt;code&gt;a&lt;/code&gt; belonging to a record type &lt;code&gt;r&lt;/code&gt;. The &lt;code&gt;getField&lt;/code&gt; method gives the record selector function.</source>
          <target state="translated">&lt;code&gt;HasField x r a&lt;/code&gt; ограничение представляет тот факт , что &lt;code&gt;x&lt;/code&gt; представляет собой поле типа , принадлежащий к записи типа &lt;code&gt;r&lt;/code&gt; . Метод &lt;code&gt;getField&lt;/code&gt; предоставляет функцию выбора записи. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48ba20858c6e487ee442bbf0e918d296f38bac12" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Message a&lt;/code&gt; is a message that returns a value of type &lt;code&gt;a&lt;/code&gt;. These are requests sent from GHC to the server.</source>
          <target state="translated">&lt;code&gt;Message a&lt;/code&gt; это сообщение , которое возвращает значение типа &lt;code&gt;a&lt;/code&gt; . Это запросы, отправленные GHC на сервер.</target>
        </trans-unit>
        <trans-unit id="4cb20e68d9cba85e4c2de51bcc3a4286e1b2b4ed" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ModGuts&lt;/code&gt; holds all of the module&amp;rsquo;s top level bindings which we can examine. These bindings are of type &lt;code&gt;CoreBind&lt;/code&gt; and effectively represent the binding of a name to body of code. Top-level module bindings are part of a &lt;code&gt;ModGuts&lt;/code&gt; in the field &lt;code&gt;mg_binds&lt;/code&gt;. Implementing a pass that manipulates the top level bindings merely needs to iterate over this field, and return a new &lt;code&gt;ModGuts&lt;/code&gt; with an updated &lt;code&gt;mg_binds&lt;/code&gt; field. Because this is such a common case, there is a function provided named &lt;code&gt;bindsOnlyPass&lt;/code&gt; which lifts a function of type &lt;code&gt;([CoreBind] -&amp;gt; CoreM [CoreBind])&lt;/code&gt; to type &lt;code&gt;(ModGuts -&amp;gt; CoreM ModGuts)&lt;/code&gt;.</source>
          <target state="translated">А &lt;code&gt;ModGuts&lt;/code&gt; содержит все привязки верхнего уровня модуля, который мы можем исследовать. Эти привязки относятся к типу &lt;code&gt;CoreBind&lt;/code&gt; и эффективно представляют привязку имени к основной части кода. Привязки модулей верхнего уровня являются частью &lt;code&gt;ModGuts&lt;/code&gt; в поле &lt;code&gt;mg_binds&lt;/code&gt; . Для реализации прохода, который манипулирует привязками верхнего уровня, необходимо просто перебрать это поле и вернуть новый &lt;code&gt;ModGuts&lt;/code&gt; с обновленным полем &lt;code&gt;mg_binds&lt;/code&gt; . Поскольку это очень распространенный случай, существует функция с именем &lt;code&gt;bindsOnlyPass&lt;/code&gt; , которая переводит функцию типа &lt;code&gt;([CoreBind] -&amp;gt; CoreM [CoreBind])&lt;/code&gt; в тип &lt;code&gt;(ModGuts -&amp;gt; CoreM ModGuts)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a70f83cdade171d92c14ec57aaab7b2cf6914937" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;MutVar#&lt;/code&gt; behaves like a single-element mutable array.</source>
          <target state="translated">&lt;code&gt;MutVar#&lt;/code&gt; ведет себя как изменяемый массив с одним элементом.</target>
        </trans-unit>
        <trans-unit id="6b8d2e79c3650e0188852b9ee2cfa2dcd42b4114" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Plugin&lt;/code&gt; effectively holds a function which installs a compilation pass into the compiler pipeline. By default there is the empty plugin which does nothing, &lt;code&gt;GHC.Plugins.defaultPlugin&lt;/code&gt;, which you should override with record syntax to specify your installation function. Since the exact fields of the &lt;code&gt;Plugin&lt;/code&gt; type are open to change, this is the best way to ensure your plugins will continue to work in the future with minimal interface impact.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6337414644ea4c6c26609fea40acca352b7ea57" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Plugin&lt;/code&gt; effectively holds a function which installs a compilation pass into the compiler pipeline. By default there is the empty plugin which does nothing, &lt;code&gt;GhcPlugins.defaultPlugin&lt;/code&gt;, which you should override with record syntax to specify your installation function. Since the exact fields of the &lt;code&gt;Plugin&lt;/code&gt; type are open to change, this is the best way to ensure your plugins will continue to work in the future with minimal interface impact.</source>
          <target state="translated">&lt;code&gt;Plugin&lt;/code&gt; эффективно удерживает функцию , которая устанавливает компиляцию прохода в трубопровод компилятора. По умолчанию есть пустой плагин, который ничего не делает, &lt;code&gt;GhcPlugins.defaultPlugin&lt;/code&gt; , который вы должны переопределить синтаксисом записи, чтобы указать вашу функцию установки. Поскольку точные поля типа &lt;code&gt;Plugin&lt;/code&gt; открыты для изменения, это лучший способ гарантировать, что ваши плагины будут продолжать работать в будущем с минимальным влиянием на интерфейс.</target>
        </trans-unit>
        <trans-unit id="c79966287c7a0289106cbf652df27cd92d1d3c79" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Reader&lt;/code&gt; to run.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; для запуска.</target>
        </trans-unit>
        <trans-unit id="42d146b8c1428a840a06c263b2ea3c6508ddd7d5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPECIALIZE&lt;/code&gt; has the effect of generating (a) a specialised version of the function and (b) a rewrite rule (see &lt;a href=&quot;#rewrite-rules&quot;&gt;Rewrite rules&lt;/a&gt;) that rewrites a call to the un-specialised function into a call to the specialised one. Moreover, given a &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma for a function &lt;code&gt;f&lt;/code&gt;, GHC will automatically create specialisations for any type-class-overloaded functions called by &lt;code&gt;f&lt;/code&gt;, if they are in the same module as the &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma, or if they are &lt;code&gt;INLINABLE&lt;/code&gt;; and so on, transitively.</source>
          <target state="translated">&lt;code&gt;SPECIALIZE&lt;/code&gt; имеет эффект генерации (а) специализированная версия функции и (б) правила перезаписи (см &lt;a href=&quot;#rewrite-rules&quot;&gt;Rewrite правила&lt;/a&gt; ) , которые переписывают вызов функции ипа-специализировано в вызов специализированной один. Более того, учитывая прагму &lt;code&gt;SPECIALIZE&lt;/code&gt; для функции &lt;code&gt;f&lt;/code&gt; , GHC автоматически создает специализации для любых функций, перегруженных типом-классом, вызываемых &lt;code&gt;f&lt;/code&gt; , если они находятся в том же модуле, что и прагма &lt;code&gt;SPECIALIZE&lt;/code&gt; , или если они являются &lt;code&gt;INLINABLE&lt;/code&gt; ; и так далее, транзитивно.</target>
        </trans-unit>
        <trans-unit id="eea1ba3f2a174923ad0f56aa695c2ab086c3cbf9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPECIALIZE&lt;/code&gt; has the effect of generating (a) a specialised version of the function and (b) a rewrite rule (see &lt;a href=&quot;rewrite_rules#rewrite-rules&quot;&gt;Rewrite rules&lt;/a&gt;) that rewrites a call to the un-specialised function into a call to the specialised one. Moreover, given a &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma for a function &lt;code&gt;f&lt;/code&gt;, GHC will automatically create specialisations for any type-class-overloaded functions called by &lt;code&gt;f&lt;/code&gt;, if they are in the same module as the &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma, or if they are &lt;code&gt;INLINABLE&lt;/code&gt;; and so on, transitively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b980d520829db47b0e6b9e92a84de862c7cc8a1" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma can optionally be followed with a &lt;code&gt;INLINE&lt;/code&gt; or &lt;code&gt;NOINLINE&lt;/code&gt; pragma, optionally followed by a phase, as described in &lt;a href=&quot;#inline-noinline-pragma&quot;&gt;INLINE and NOINLINE pragmas&lt;/a&gt;. The &lt;code&gt;INLINE&lt;/code&gt; pragma affects the specialised version of the function (only), and applies even if the function is recursive. The motivating example is this:</source>
          <target state="translated">За &lt;code&gt;SPECIALIZE&lt;/code&gt; необязательно может следовать прагма &lt;code&gt;INLINE&lt;/code&gt; или &lt;code&gt;NOINLINE&lt;/code&gt; , за которой может следовать этап, как описано в &lt;a href=&quot;#inline-noinline-pragma&quot;&gt;прагмах INLINE и NOINLINE&lt;/a&gt; . &lt;code&gt;INLINE&lt;/code&gt; Прагма влияет на специализированную версию функции (только), и применяется , даже если функция является рекурсивной. Вот мотивирующий пример:</target>
        </trans-unit>
        <trans-unit id="7b82be1262e45e02f43857ca0ff6515f9db20126" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SPECIALIZE&lt;/code&gt; pragma for a function can be put anywhere its type signature could be put. Moreover, you can also &lt;code&gt;SPECIALIZE&lt;/code&gt; an &lt;em&gt;imported&lt;/em&gt; function provided it was given an &lt;code&gt;INLINABLE&lt;/code&gt; pragma at its definition site (&lt;a href=&quot;#inlinable-pragma&quot;&gt;INLINABLE pragma&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;SPECIALIZE&lt;/code&gt; Прагма для функции можно разместить в любом месте его тип подписи может поставить. Кроме того, вы можете также &lt;code&gt;SPECIALIZE&lt;/code&gt; &lt;em&gt;импортирована&lt;/em&gt; функция при условии , что было дано &lt;code&gt;INLINABLE&lt;/code&gt; прагму на его определение сайта ( &lt;a href=&quot;#inlinable-pragma&quot;&gt;INLINABLE прагма&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a25c001444e85ab6f7b0766980538a555f7440b7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Span&lt;/code&gt; represents the result of an annotation after a &lt;code&gt;Doc&lt;/code&gt; has been rendered, capturing where the annotation now starts and ends in the rendered output.</source>
          <target state="translated">&lt;code&gt;Span&lt;/code&gt; представляет собой результат аннотацию после того, как &lt;code&gt;Doc&lt;/code&gt; был оказанной, захватив где аннотаций теперь начинается и заканчивается в воспроизведенной выходной.</target>
        </trans-unit>
        <trans-unit id="9ed158fbad702e89568f4c1dbb871930a8429284" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Stream&lt;/code&gt; instance is responsible for maintaining the &quot;position within the stream&quot; in the stream state &lt;code&gt;s&lt;/code&gt;. This is trivial unless you are using the monad in a non-trivial way.</source>
          <target state="translated">&lt;code&gt;Stream&lt;/code&gt; экземпляр несет ответственность за сохранение &amp;laquo;позиции в потоке&amp;raquo; в государственном потоке &lt;code&gt;s&lt;/code&gt; . Это тривиально, если только вы не используете монаду нетривиальным образом.</target>
        </trans-unit>
        <trans-unit id="6768d45124fc6209d1d55206e3becea75d2017a7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;data instance&lt;/code&gt; can use GADT syntax for the data constructors, and indeed can define a GADT. For example:</source>
          <target state="translated">&lt;code&gt;data instance&lt;/code&gt; можно использовать синтаксис GADT для конструкторов данных, и в самом деле можно определить GADT. Например:</target>
        </trans-unit>
        <trans-unit id="74cabc38aef40d10530f088fa7619bad50be5163" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;newtype&lt;/code&gt; instance actually can have &lt;em&gt;two&lt;/em&gt; return kinds. The first is the kind derived by applying the data family to the patterns provided in the instance declaration. The second is given by a kind annotation. Both return kinds must satisfy the restrictions above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daba80bb3a6be48bbea57e35e9db17367b1d0d13" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;deriving instance&lt;/code&gt; declaration must obey the same rules concerning form and termination as ordinary instance declarations, controlled by the same flags; see &lt;a href=&quot;#instance-decls&quot;&gt;Instance declarations&lt;/a&gt;.</source>
          <target state="translated">Объявление &lt;code&gt;deriving instance&lt;/code&gt; должно подчиняться тем же правилам относительно формы и завершения, что и обычные объявления экземпляра, управляемые теми же флагами; см. &lt;a href=&quot;#instance-decls&quot;&gt;Объявления экземпляров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dcedd81e3b114ae1f25eaf1d0ce6b61eb1be2f83" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;deriving instance&lt;/code&gt; declaration must obey the same rules concerning form and termination as ordinary instance declarations, controlled by the same flags; see &lt;a href=&quot;instances#instance-decls&quot;&gt;Instance declarations and resolution&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59db072390d4948ccdd767966bcedd58bf2bcf38" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;hs-boot&lt;/code&gt; file is compiled by GHC, just like a &lt;code&gt;hs&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;hs-boot&lt;/code&gt; файл компилируется GHC, так же , как &lt;code&gt;hs&lt;/code&gt; файл:</target>
        </trans-unit>
        <trans-unit id="0ee8809aa12d51318c13f6f45ee2d8d36268a40a" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;rec&lt;/code&gt;-block tells the compiler where precisely the recursive knot should be tied. It turns out that the placement of the recursive knots can be rather delicate: in particular, we would like the knots to be wrapped around as minimal groups as possible. This process is known as &lt;em&gt;segmentation&lt;/em&gt;, and is described in detail in Section 3.2 of &lt;a href=&quot;http://leventerkok.github.io/papers/recdo.pdf&quot;&gt;A recursive do for Haskell&lt;/a&gt;. Segmentation improves polymorphism and reduces the size of the recursive knot. Most importantly, it avoids unnecessary interference caused by a fundamental issue with the so-called &lt;em&gt;right-shrinking&lt;/em&gt; axiom for monadic recursion. In brief, most monads of interest (IO, strict state, etc.) do &lt;em&gt;not&lt;/em&gt; have recursion operators that satisfy this axiom, and thus not performing segmentation can cause unnecessary interference, changing the termination behavior of the resulting translation. (Details can be found in Sections 3.1 and 7.2.2 of &lt;a href=&quot;http://leventerkok.github.io/papers/erkok-thesis.pdf&quot;&gt;Value Recursion in Monadic Computations&lt;/a&gt;.)</source>
          <target state="translated">&lt;code&gt;rec&lt;/code&gt; -блок сообщает компилятор , где именно рекурсивный узел должен быть привязан. Оказывается, размещение рекурсивных узлов может быть довольно деликатным: в частности, мы хотели бы, чтобы узлы были обернуты вокруг как можно меньшего количества групп. Этот процесс известен как &lt;em&gt;сегментация&lt;/em&gt; и подробно описан в разделе 3.2 &lt;a href=&quot;http://leventerkok.github.io/papers/recdo.pdf&quot;&gt;Рекурсивной операции для Haskell&lt;/a&gt; . Сегментация улучшает полиморфизм и уменьшает размер рекурсивного узла. Что наиболее важно, он позволяет избежать ненужного вмешательства, вызванного фундаментальной проблемой с так называемой аксиомой &lt;em&gt;сжатия вправо&lt;/em&gt; для монадической рекурсии. Короче говоря, большинство представляющих интерес монад (IO, строгое состояние и т. Д.) &lt;em&gt;Не&lt;/em&gt;имеют операторы рекурсии, которые удовлетворяют этой аксиоме, и, таким образом, невыполнение сегментации может вызвать ненужные помехи, изменяя поведение завершения результирующего перевода. (Подробности можно найти в разделах 3.1 и 7.2.2 Рекурсии &lt;a href=&quot;http://leventerkok.github.io/papers/erkok-thesis.pdf&quot;&gt;значений в монадических вычислениях&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="634d8c1c5fc85c63ad48d6c53ca1ba9951fc19ae" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;rec&lt;/code&gt;-block tells the compiler where precisely the recursive knot should be tied. It turns out that the placement of the recursive knots can be rather delicate: in particular, we would like the knots to be wrapped around as minimal groups as possible. This process is known as &lt;em&gt;segmentation&lt;/em&gt;, and is described in detail in Section 3.2 of &lt;a href=&quot;https://leventerkok.github.io/papers/recdo.pdf&quot;&gt;A recursive do for Haskell&lt;/a&gt;. Segmentation improves polymorphism and reduces the size of the recursive knot. Most importantly, it avoids unnecessary interference caused by a fundamental issue with the so-called &lt;em&gt;right-shrinking&lt;/em&gt; axiom for monadic recursion. In brief, most monads of interest (IO, strict state, etc.) do &lt;em&gt;not&lt;/em&gt; have recursion operators that satisfy this axiom, and thus not performing segmentation can cause unnecessary interference, changing the termination behavior of the resulting translation. (Details can be found in Sections 3.1 and 7.2.2 of &lt;a href=&quot;https://leventerkok.github.io/papers/erkok-thesis.pdf&quot;&gt;Value Recursion in Monadic Computations&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6424d363fc1534d52bf8f4a0355f089902e52f85" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;safe&lt;/code&gt; call calling into haskell is run on a bound thread by the RTS. This means any nesting of &lt;code&gt;safe&lt;/code&gt; calls will be executed on the same operating system thread. &lt;em&gt;Sequential&lt;/em&gt;&lt;code&gt;safe&lt;/code&gt; calls however do not enjoy this luxury and may be run on arbitrary OS threads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdbd6d30e59c1faa209edf1aa68a5deb84cd963" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;lexically scoped type variable&lt;/em&gt; can be bound by:</source>
          <target state="translated">&lt;em&gt;Лексическую область видимости тип переменной&lt;/em&gt; может быть связано:</target>
        </trans-unit>
        <trans-unit id="109054251366535f7af799fd6243e0d372229344" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;package environment file&lt;/em&gt; is a file that tells &lt;code&gt;ghc&lt;/code&gt; precisely which packages should be visible. It can be used to create environments for &lt;code&gt;ghc&lt;/code&gt; or &lt;code&gt;ghci&lt;/code&gt; that are local to a shell session or to some file system location. They are intended to be managed by build/package tools, to enable &lt;code&gt;ghc&lt;/code&gt; and &lt;code&gt;ghci&lt;/code&gt; to automatically use an environment created by the tool.</source>
          <target state="translated">&lt;em&gt;Файл пакет среды&lt;/em&gt; представляет собой файл , который говорит &lt;code&gt;ghc&lt;/code&gt; точно , какие пакеты должны быть видны. Его можно использовать для создания окружений для &lt;code&gt;ghc&lt;/code&gt; или &lt;code&gt;ghci&lt;/code&gt; , которые являются локальными для сеанса оболочки или для некоторого местоположения файловой системы. Они предназначены для управления с помощью инструментов сборки / упаковки, чтобы позволить &lt;code&gt;ghc&lt;/code&gt; и &lt;code&gt;ghci&lt;/code&gt; автоматически использовать среду, созданную этим инструментом.</target>
        </trans-unit>
        <trans-unit id="c8382233c25160218d5faa2b0244da9d3072c08a" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;safe import&lt;/em&gt; extension that specifies that the module being imported must be trusted.</source>
          <target state="translated">Расширение &lt;em&gt;безопасного импорта,&lt;/em&gt; которое указывает, что импортируемый модуль должен быть доверенным.</target>
        </trans-unit>
        <trans-unit id="a2030af640ee35ae911effa3c859071e394be43d" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;segment&lt;/em&gt; of a given &lt;code&gt;mdo&lt;/code&gt;-expression is a minimal sequence of generators such that no generator of the sequence depends on an outside generator. As a special case, although it is not a generator, the final expression in an &lt;code&gt;mdo&lt;/code&gt;-expression is considered to form a segment by itself.</source>
          <target state="translated">&lt;em&gt;Сегмент&lt;/em&gt; данного &lt;code&gt;mdo&lt;/code&gt; -expression является минимальной последовательностью образующих таким образом, что нет генератора последовательности не зависит от внешнего генератора. В качестве особого случая считается, что последнее выражение в &lt;code&gt;mdo&lt;/code&gt; -выражении само по себе формирует сегмент , хотя оно и не является генератором .</target>
        </trans-unit>
        <trans-unit id="19ca4e3b6cf814de306149f6c08ac93ed06475ee" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;stable pointer&lt;/em&gt; is a reference to a Haskell expression that is guaranteed not to be affected by garbage collection, i.e., it will neither be deallocated nor will the value of the stable pointer itself change during garbage collection (ordinary references may be relocated during garbage collection). Consequently, stable pointers can be passed to foreign code, which can treat it as an opaque reference to a Haskell value.</source>
          <target state="translated">&lt;em&gt;Указатель стабильным&lt;/em&gt; является ссылкой на выражение Haskell , который гарантированно не могут быть затронуты в процессе сборки мусора, то есть, это ни будет освобождаться не будет значение указателя стабильной само изменение во время сборки мусора (обычные ссылки могут быть переселены во время сбора мусора ). Следовательно, стабильные указатели могут быть переданы внешнему коду, который может рассматривать его как непрозрачную ссылку на значение Haskell.</target>
        </trans-unit>
        <trans-unit id="9598916c07779e260b1bef0d4810f6ea9d7267b5" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression quotation is written as &lt;code&gt;[|| ... ||]&lt;/code&gt;, or &lt;code&gt;[e|| ... ||]&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is an expression; if the &amp;ldquo;&amp;hellip;&amp;rdquo; expression has type &lt;code&gt;a&lt;/code&gt;, then the quotation has type &lt;code&gt;Q (TExp a)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03966a369ab9f12abf8e596ab2fa4aeb07d6727e" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression quotation is written as &lt;code&gt;[|| ... ||]&lt;/code&gt;, or &lt;code&gt;[e|| ... ||]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is an expression; if the &amp;rdquo;...&amp;rdquo; expression has type &lt;code&gt;a&lt;/code&gt;, then the quotation has type &lt;code&gt;Q (TExp a)&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Типизированное&lt;/em&gt; выражение котировка записываются в виде &lt;code&gt;[|| ... ||]&lt;/code&gt; или &lt;code&gt;[e|| ... ||]&lt;/code&gt; , где &amp;laquo;...&amp;raquo; - выражение; если выражение &amp;laquo;...&amp;raquo; имеет тип &lt;code&gt;a&lt;/code&gt; , то цитата имеет тип &lt;code&gt;Q (TExp a)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff8fea212baa2384e8384f9da14bfcf9a0782e6c" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression quotation is written as &lt;code&gt;[|| ... ||]&lt;/code&gt;, or &lt;code&gt;[e|| ... ||]&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is an expression; if the &amp;rdquo;...&amp;rdquo; expression has type &lt;code&gt;a&lt;/code&gt;, then the quotation has type &lt;code&gt;Quote m =&amp;gt; Code m a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd2d6413fa23bbe46409864d68196768ad43eda" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression splice is written &lt;code&gt;$$x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is an identifier, or &lt;code&gt;$$(...)&lt;/code&gt;, where the &amp;ldquo;&amp;hellip;&amp;rdquo; is an arbitrary expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04024bbf6ad0e93c59da416e846a98466aa2e965" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression splice is written &lt;code&gt;$$x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is an identifier, or &lt;code&gt;$$(...)&lt;/code&gt;, where the &amp;rdquo;...&amp;rdquo; is an arbitrary expression.</source>
          <target state="translated">Соединение &lt;em&gt;типизированного&lt;/em&gt; выражения записывается как &lt;code&gt;$$x&lt;/code&gt; , где &lt;code&gt;x&lt;/code&gt; - это идентификатор, или &lt;code&gt;$$(...)&lt;/code&gt; , где &amp;laquo;...&amp;raquo; - произвольное выражение.</target>
        </trans-unit>
        <trans-unit id="6539c9f66cd3e867ac038f98747ef5ff5abbfbee" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;typed&lt;/em&gt; expression splice is written &lt;code&gt;$$x&lt;/code&gt;, where &lt;code&gt;x&lt;/code&gt; is is an arbitrary expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77214962b033f462a16c20eb7078d49bb12efbd" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;wrapper&lt;/em&gt; that for any datatype that is in &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt;, performs the conversion between the original value and its &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt;-based representation and then invokes the generic instances.</source>
          <target state="translated">&lt;em&gt;Обертка&lt;/em&gt; , что для любого типа данных , который находится в &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; , выполняет преобразование между исходным значением и его &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Rep&quot;&gt;Rep&lt;/a&gt;&lt;/code&gt; основанного представлением , а затем вызывает общие экземпляры.</target>
        </trans-unit>
        <trans-unit id="b326e9656587b1adc32b0826a631549e0850098e" translate="yes" xml:space="preserve">
          <source>A C &lt;code&gt;printf(3)&lt;/code&gt;-like formatter. This version has been extended by Bart Massey as per the recommendations of John Meacham and Simon Marlow &lt;a href=&quot;http://comments.gmane.org/gmane.comp.lang.haskell.libraries/4726&quot;&gt;http://comments.gmane.org/gmane.comp.lang.haskell.libraries/4726&lt;/a&gt; to support extensible formatting for new datatypes. It has also been extended to support almost all C &lt;code&gt;printf(3)&lt;/code&gt; syntax.</source>
          <target state="translated">Программа форматирования, подобная AC &lt;code&gt;printf(3)&lt;/code&gt; . Эта версия была расширена Барт Мэсси в соответствии с рекомендациями Джона Мичема и Саймона Марлоу &lt;a href=&quot;http://comments.gmane.org/gmane.comp.lang.haskell.libraries/4726&quot;&gt;http://comments.gmane.org/gmane.comp.lang.haskell.libraries/4726&lt;/a&gt; для поддержки расширяемого форматирования для новых типов данных. Он также был расширен для поддержки почти всего синтаксиса C &lt;code&gt;printf(3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e0f8ee9d576152373e38d95b4048e53733a3d06" translate="yes" xml:space="preserve">
          <source>A C file not produced by the Haskell compiler.</source>
          <target state="translated">Файл на Си,не созданный компилятором Haskell.</target>
        </trans-unit>
        <trans-unit id="0aad97c64c03d205c1227f534babfb0125731f8e" translate="yes" xml:space="preserve">
          <source>A C string is a reference to an array of C characters terminated by NUL.</source>
          <target state="translated">Строка на языке C-это ссылка на массив символов на языке C,заканчивающийся на NUL.</target>
        </trans-unit>
        <trans-unit id="73ba7d14948cc5309d53b24f871c08ff3a2fc5ec" translate="yes" xml:space="preserve">
          <source>A C template should define a macro or function with name prefixed by &lt;code&gt;hsc_&lt;/code&gt; that handles the construct by emitting the expansion to stdout. See &lt;code&gt;template-hsc.h&lt;/code&gt; for examples.</source>
          <target state="translated">Шаблон AC должен определять макрос или функцию с именем с префиксом &lt;code&gt;hsc_&lt;/code&gt; , которая обрабатывает конструкцию, передавая расширение в stdout. Примеры см. В &lt;code&gt;template-hsc.h&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6886031497104d24437d52b2978fb1d3195d1677" translate="yes" xml:space="preserve">
          <source>A C wide string is a reference to an array of C wide characters terminated by NUL.</source>
          <target state="translated">Строка на языке C-это ссылка на массив символов на языке C,заканчивающийся на NUL.</target>
        </trans-unit>
        <trans-unit id="fff4ba731434913625d1042847648e899bcdc46f" translate="yes" xml:space="preserve">
          <source>A DynFlags plugin allows you to modify the &lt;code&gt;DynFlags&lt;/code&gt; that GHC is going to use when processing a given (set of) file(s). &lt;code&gt;DynFlags&lt;/code&gt; is a record containing all sorts of configuration and command line data, from verbosity level to the integer library to use, including compiler hooks, plugins and pretty-printing options. DynFlags plugins allow plugin authors to update any of those values before GHC starts doing any actual work, effectively meaning that the updates specified by the plugin will be taken into account and influence GHC&amp;rsquo;s behaviour.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e325f82925ec97e39b08ddc2fdbd0f77145b84c" translate="yes" xml:space="preserve">
          <source>A GADT can only be declared using GADT-style syntax (&lt;a href=&quot;#gadt-style&quot;&gt;Declaring data types with explicit constructor signatures&lt;/a&gt;); the old Haskell 98 syntax for data declarations always declares an ordinary data type. The result type of each constructor must begin with the type constructor being defined, but for a GADT the arguments to the type constructor can be arbitrary monotypes. For example, in the &lt;code&gt;Term&lt;/code&gt; data type above, the type of each constructor must end with &lt;code&gt;Term ty&lt;/code&gt;, but the &lt;code&gt;ty&lt;/code&gt; need not be a type variable (e.g. the &lt;code&gt;Lit&lt;/code&gt; constructor).</source>
          <target state="translated">GADT может быть объявлен только с использованием синтаксиса в стиле GADT (объявление &lt;a href=&quot;#gadt-style&quot;&gt;типов данных с явными сигнатурами конструктора&lt;/a&gt; ); старый синтаксис Haskell 98 для объявлений данных всегда объявляет обычный тип данных. Тип результата каждого конструктора должен начинаться с определяемого конструктора типа, но для GADT аргументы конструктора типа могут быть произвольными монотипами. Например, в приведенном выше типе данных &lt;code&gt;Term&lt;/code&gt; тип каждого конструктора должен заканчиваться &lt;code&gt;Term ty&lt;/code&gt; , но &lt;code&gt;ty&lt;/code&gt; не обязательно должен быть переменной типа (например, конструктор &lt;code&gt;Lit&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="58b71829716444049200321c5db9b83265dc9dd6" translate="yes" xml:space="preserve">
          <source>A GADT can only be declared using GADT-style syntax (&lt;a href=&quot;gadt_syntax#gadt-style&quot;&gt;Declaring data types with explicit constructor signatures&lt;/a&gt;); the old Haskell 98 syntax for data declarations always declares an ordinary data type. The result type of each constructor must begin with the type constructor being defined, but for a GADT the arguments to the type constructor can be arbitrary monotypes. For example, in the &lt;code&gt;Term&lt;/code&gt; data type above, the type of each constructor must end with &lt;code&gt;Term ty&lt;/code&gt;, but the &lt;code&gt;ty&lt;/code&gt; need not be a type variable (e.g. the &lt;code&gt;Lit&lt;/code&gt; constructor).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c115ed6390536f96008338c3a76d6dc97d17be" translate="yes" xml:space="preserve">
          <source>A Haskell equivalent of the C numeric type will be output. It will be one of &lt;code&gt;{Int,Word}{8,16,32,64}&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;LDouble&lt;/code&gt;.</source>
          <target state="translated">Будет выведен Haskell-эквивалент числового типа C. Это будет одно из &lt;code&gt;{Int,Word}{8,16,32,64}&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; , &lt;code&gt;Double&lt;/code&gt; , &lt;code&gt;LDouble&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="411cbf3d599620cacbd5cc015731fcfe3b92f459" translate="yes" xml:space="preserve">
          <source>A Haskell interface file, probably compiler-generated.</source>
          <target state="translated">Файл интерфейса Хаскелла,вероятно,сгенерированный компилятором.</target>
        </trans-unit>
        <trans-unit id="bea884a4fa9bc97a6459261f9e280deaec7399ff" translate="yes" xml:space="preserve">
          <source>A Haskell module.</source>
          <target state="translated">Модуль Хаскелла.</target>
        </trans-unit>
        <trans-unit id="e5aff74609ec235803608003865846be7a8bd1bc" translate="yes" xml:space="preserve">
          <source>A Map from keys &lt;code&gt;k&lt;/code&gt; to values &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Карта от ключей &lt;code&gt;k&lt;/code&gt; до значений &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cea3593e9e6a31d8bb148597b7e5fd17de4ea82d" translate="yes" xml:space="preserve">
          <source>A TextDetails represents a fragment of text that will be output at some point in a &lt;code&gt;Doc&lt;/code&gt;.</source>
          <target state="translated">TextDetails представляет собой фрагмент текста, который будет выводиться в какой-то момент в &lt;code&gt;Doc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc9ca598a7522d4ced721535fa37974946883f88" translate="yes" xml:space="preserve">
          <source>A TimeZone is a whole number of minutes offset from UTC, together with a name and a &quot;just for summer&quot; flag.</source>
          <target state="translated">TimeZone-это смещение по UTC на целое количество минут,вместе с названием и флагом &quot;только на лето&quot;.</target>
        </trans-unit>
        <trans-unit id="c5ce154a6a02d4026db50fe3f1a5c49edc516fc7" translate="yes" xml:space="preserve">
          <source>A bang only really has an effect if it precedes a variable or wild-card pattern:</source>
          <target state="translated">Взрыв действительно имеет эффект,только если он предшествует переменной или шаблону wild-card:</target>
        </trans-unit>
        <trans-unit id="bdd93c38550cc32cf4aa813352ba8371915da4f4" translate="yes" xml:space="preserve">
          <source>A bang pattern is allowed in a let or where clause, and makes the binding strict. For example:</source>
          <target state="translated">Шаблон взрыва разрешен в пункте &quot;let&quot; или &quot;где&quot;,и делает обязательную к исполнению строгую.Например:</target>
        </trans-unit>
        <trans-unit id="dbe85709a7348f901616c420f38c5dde9ca96cf4" translate="yes" xml:space="preserve">
          <source>A bare kind variable (with &lt;a href=&quot;#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt; enabled). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbd4e1dd2f2e3557e83084e2d5e15eb20407efb" translate="yes" xml:space="preserve">
          <source>A bare kind variable (with &lt;a href=&quot;poly_kinds#extension-PolyKinds&quot;&gt;&lt;code&gt;PolyKinds&lt;/code&gt;&lt;/a&gt; enabled). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8b165584d313eb61a9a907807491cb2de49845" translate="yes" xml:space="preserve">
          <source>A better method is to keep a global list of all child threads which we should wait for at the end of the program:</source>
          <target state="translated">Лучшим методом является ведение глобального списка всех дочерних потоков,который мы должны ждать в конце программы:</target>
        </trans-unit>
        <trans-unit id="6005fc493cfa098670cf6142c7e4205f8cdf474b" translate="yes" xml:space="preserve">
          <source>A better monoid for Maybe</source>
          <target state="translated">Лучший моноид для &quot;Может быть</target>
        </trans-unit>
        <trans-unit id="d6fedf65a2cdf1eec5e505a6812db33c8b5b82ec" translate="yes" xml:space="preserve">
          <source>A bidirectional pattern synonym matching an empty sequence.</source>
          <target state="translated">Двунаправленный синоним шаблона,совпадающий с пустой последовательностью.</target>
        </trans-unit>
        <trans-unit id="4177af688c85d2078a0a8ce62a0441115616a0c4" translate="yes" xml:space="preserve">
          <source>A bidirectional pattern synonym viewing the front of a non-empty sequence.</source>
          <target state="translated">Двунаправленный синоним шаблона,отображающий переднюю часть непустой последовательности.</target>
        </trans-unit>
        <trans-unit id="81df1a482fca8b73fcc642c85849297fd446593b" translate="yes" xml:space="preserve">
          <source>A bidirectional pattern synonym viewing the rear of a non-empty sequence.</source>
          <target state="translated">Синоним двунаправленного рисунка,отображающий заднюю часть непустой последовательности.</target>
        </trans-unit>
        <trans-unit id="9d4dd551ba4445c410acc2d23a963ba185817d09" translate="yes" xml:space="preserve">
          <source>A bifunctor is a type constructor that takes two type arguments and is a functor in &lt;em&gt;both&lt;/em&gt; arguments. That is, unlike with &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, a type constructor such as &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; does not need to be partially applied for a &lt;code&gt;&lt;a href=&quot;data-bifunctor#t:Bifunctor&quot;&gt;Bifunctor&lt;/a&gt;&lt;/code&gt; instance, and the methods in this class permit mapping functions over the &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; value or the &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; value, or both at the same time.</source>
          <target state="translated">Бифунктор - это конструктор типа, который принимает два аргумента типа и является функтором в &lt;em&gt;обоих&lt;/em&gt; аргументах. То есть, в отличие от &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; , конструктор типа, такой как &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; , не нужно частично применять для экземпляра &lt;code&gt;&lt;a href=&quot;data-bifunctor#t:Bifunctor&quot;&gt;Bifunctor&lt;/a&gt;&lt;/code&gt; , а методы в этом классе разрешают функции сопоставления по &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; значению или &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; значению, или обоим одновременно.</target>
        </trans-unit>
        <trans-unit id="de0591af67d2bf9b3b0301e6aff8ce08884f0195" translate="yes" xml:space="preserve">
          <source>A big difference with higher-rank kinds as compared with higher-rank types is that &lt;code&gt;forall&lt;/code&gt;s in kinds &lt;em&gt;cannot&lt;/em&gt; be moved. This is best illustrated by example. Suppose we want to have an instance of &lt;code&gt;HTestEquality&lt;/code&gt; for &lt;code&gt;(:~~:)&lt;/code&gt;.</source>
          <target state="translated">Большая разница с более высоким рангом видами по сравнению с типами высокого ранга, что &lt;code&gt;forall&lt;/code&gt; s в видах &lt;em&gt;не может&lt;/em&gt; быть перемещена. Лучше всего это проиллюстрировать на примере. Предположим, мы хотим иметь экземпляр &lt;code&gt;HTestEquality&lt;/code&gt; для &lt;code&gt;(:~~:)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="018f1834f8f4ba2f827cc9e9d66782e066f8b4db" translate="yes" xml:space="preserve">
          <source>A big part of what makes the heaps fast is that they're non empty, so the merge function can avoid an extra case match. To take advantage of this, though, we need specialized versions of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;, which can alternate between calling the faster semigroup-like merge when folding over non empty structures (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Node&quot;&gt;Node&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Digit&quot;&gt;Digit&lt;/a&gt;&lt;/code&gt;), and the &lt;code&gt;&lt;a href=&quot;data-semirgroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt;-like mappend, when folding over structures which can be empty (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:FingerTree&quot;&gt;FingerTree&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Большая часть того, что делает кучи быстрыми, заключается в том, что они не пусты, поэтому функция слияния может избежать дополнительного совпадения регистра. Однако, чтобы воспользоваться этим, нам нужны специализированные версии &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt; , которые могут чередоваться между вызовом более быстрого слияния, подобного полугруппе, при сворачивании непустых структур (таких как &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Node&quot;&gt;Node&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Digit&quot;&gt;Digit&lt;/a&gt;&lt;/code&gt; ) и &lt;code&gt;&lt;a href=&quot;data-semirgroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt; - подобного mappend при сворачивании над структурами, которые могут быть пустыми (например, &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:FingerTree&quot;&gt;FingerTree&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="47779d8a6c1ed5651ad2278a9f8963fba26cb6a4" translate="yes" xml:space="preserve">
          <source>A big part of what makes the heaps fast is that they're non empty, so the merge function can avoid an extra case match. To take advantage of this, though, we need specialized versions of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;, which can alternate between calling the faster semigroup-like merge when folding over non empty structures (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Node&quot;&gt;Node&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:Digit&quot;&gt;Digit&lt;/a&gt;&lt;/code&gt;), and the &lt;code&gt;&lt;a href=&quot;data-semirgroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt;-like mappend, when folding over structures which can be empty (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/containers-0.6.2.1/Data-Sequence-Internal.html#t:FingerTree&quot;&gt;FingerTree&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34bb306a64f6ff04365504486103eca5836b25d3" translate="yes" xml:space="preserve">
          <source>A big part of what makes the heaps fast is that they're non empty, so the merge function can avoid an extra case match. To take advantage of this, though, we need specialized versions of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-sequence#v:foldMapWithIndex&quot;&gt;foldMapWithIndex&lt;/a&gt;&lt;/code&gt;, which can alternate between calling the faster semigroup-like merge when folding over non empty structures (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Sequence-Internal.html#t:Node&quot;&gt;Node&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Sequence-Internal.html#t:Digit&quot;&gt;Digit&lt;/a&gt;&lt;/code&gt;), and the &lt;code&gt;&lt;a href=&quot;data-semirgroup#v:Option&quot;&gt;Option&lt;/a&gt;&lt;/code&gt;-like mappend, when folding over structures which can be empty (like &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/containers-0.6.4.1/Data-Sequence-Internal.html#t:FingerTree&quot;&gt;FingerTree&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09cdbe53b7e03819c7930f606ae901636894954" translate="yes" xml:space="preserve">
          <source>A binary tree typically (when balanced, or randomly biased) provides equally efficient access to its left and right subtrees. This makes it possible to define a &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; optimised for &lt;a href=&quot;#corec&quot;&gt;corecursive&lt;/a&gt; folds with operators that are lazy in their first (left) argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59eaf213264b07a33c9b86cc594f16cfebf034b" translate="yes" xml:space="preserve">
          <source>A binding group is &lt;em&gt;fully generalised&lt;/em&gt; if and only if</source>
          <target state="translated">Связывающая группа является &lt;em&gt;полностью обобщенной&lt;/em&gt; тогда и только тогда, когда</target>
        </trans-unit>
        <trans-unit id="f0ac98b71fc651c5cb7838fb8ecc4183a85e5c4f" translate="yes" xml:space="preserve">
          <source>A biographical heap profile displays the portion of the live heap in each of the four states listed above. Usually the most interesting states are the void and drag states: live heap in these states is more likely to be wasted space than heap in the lag or use states.</source>
          <target state="translated">Биографический профиль кучи отображает часть живой кучи в каждом из четырех вышеперечисленных штатов.Обычно наиболее интересными состояниями являются состояния пустоты и перетаскивания:живая куча в этих состояниях с большей вероятностью останется пустым местом,чем куча в состояниях запаздывания или использования.</target>
        </trans-unit>
        <trans-unit id="798384519287140522d002a35024512e2c520012" translate="yes" xml:space="preserve">
          <source>A bound thread is a haskell thread that is &lt;em&gt;bound&lt;/em&gt; to an operating system thread. While the bound thread is still scheduled by the Haskell run-time system, the operating system thread takes care of all the foreign calls made by the bound thread.</source>
          <target state="translated">Связанный поток - это поток haskell, который &lt;em&gt;привязан&lt;/em&gt; к потоку операционной системы. Хотя связанный поток по-прежнему запланирован системой времени выполнения Haskell, поток операционной системы берет на себя все внешние вызовы, сделанные связанным потоком.</target>
        </trans-unit>
        <trans-unit id="3f4f07c153a23dab6881d6b97859240ea5495b6b" translate="yes" xml:space="preserve">
          <source>A buffer allocation strategy for executing &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">Стратегия выделения буфера для выполнения &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="3acbb589dc6847927b75f04416af1f081adc5cfc" translate="yes" xml:space="preserve">
          <source>A buffer allocation strategy for executing &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">Стратегия выделения буфера для выполнения &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="b00aec03f8bf511485eb07886b22c54f4f193a13" translate="yes" xml:space="preserve">
          <source>A builder primitive that always results in a sequence of bytes of a pre-determined, fixed size.</source>
          <target state="translated">Примитив конструктора,который всегда приводит к последовательности байт заранее заданного,фиксированного размера.</target>
        </trans-unit>
        <trans-unit id="218c8868a68984ef2191051e647e5ad44495f1c2" translate="yes" xml:space="preserve">
          <source>A builder primitive that always results in sequence of bytes that is no longer than a pre-determined bound.</source>
          <target state="translated">Строительный примитив,который всегда приводит к последовательности байтов,не превышающей заданную границу.</target>
        </trans-unit>
        <trans-unit id="cee5a68b267e0b9eedc95f3e5e46dbbcbd9d7c7d" translate="yes" xml:space="preserve">
          <source>A canonical proxy type</source>
          <target state="translated">Канонический тип прокси</target>
        </trans-unit>
        <trans-unit id="f9785a9266197868d744526bac75698ed903dbc4" translate="yes" xml:space="preserve">
          <source>A capability has been deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e42267c559ef0543a396aeedf38ba2368048b9" translate="yes" xml:space="preserve">
          <source>A capability has been disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86896e42132938a37e212fd5cef10f4151fc9477" translate="yes" xml:space="preserve">
          <source>A capability has been enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c58d21d44a4d30e0c00f0ffb699c3dbb7518536" translate="yes" xml:space="preserve">
          <source>A capability has been started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="646cfd44f97fd578432c1d7e4ee9f594332ba27b" translate="yes" xml:space="preserve">
          <source>A careful reading of the Haskell 98 Report reveals that fixity declarations (&lt;code&gt;infix&lt;/code&gt;, &lt;code&gt;infixl&lt;/code&gt;, and &lt;code&gt;infixr&lt;/code&gt;) are permitted to appear inside local bindings such those introduced by &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;where&lt;/code&gt;. However, the Haskell Report does not specify the semantics of such bindings very precisely.</source>
          <target state="translated">Внимательное чтение отчета Haskell 98 показывает, что объявлениям &lt;code&gt;infixl&lt;/code&gt; ( &lt;code&gt;infix&lt;/code&gt; , infixl и &lt;code&gt;infixr&lt;/code&gt; ) разрешено появляться внутри локальных привязок, таких как введенные &lt;code&gt;let&lt;/code&gt; и &lt;code&gt;where&lt;/code&gt; . Однако отчет Haskell не очень точно определяет семантику таких привязок.</target>
        </trans-unit>
        <trans-unit id="6cad22f831909a841240c57158600100ecb21412" translate="yes" xml:space="preserve">
          <source>A caveat: this encoding strategy may not be reliable across different versions of GHC. When deriving a &lt;code&gt;Generic&lt;/code&gt; instance is free to choose any nesting of &lt;code&gt;:+:&lt;/code&gt; and &lt;code&gt;:*:&lt;/code&gt; it chooses, so if GHC chooses &lt;code&gt;(a :+: b) :+: c&lt;/code&gt;, then the encoding for &lt;code&gt;a&lt;/code&gt; would be &lt;code&gt;[O, O]&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; would be &lt;code&gt;[O, I]&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; would be &lt;code&gt;[I]&lt;/code&gt;. However, if GHC chooses &lt;code&gt;a :+: (b :+: c)&lt;/code&gt;, then the encoding for &lt;code&gt;a&lt;/code&gt; would be &lt;code&gt;[O]&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; would be &lt;code&gt;[I, O]&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; would be &lt;code&gt;[I, I]&lt;/code&gt;. (In practice, the current implementation tries to produce a more-or-less balanced nesting of &lt;code&gt;:+:&lt;/code&gt; and &lt;code&gt;:*:&lt;/code&gt; so that the traversal of the structure of the datatype from the root to a particular component can be performed in logarithmic rather than linear time.)</source>
          <target state="translated">Предостережение: эта стратегия кодирования может быть ненадежной в разных версиях GHC. При создании экземпляра &lt;code&gt;Generic&lt;/code&gt; можно выбрать любое вложение &lt;code&gt;:+:&lt;/code&gt; и &lt;code&gt;:*:&lt;/code&gt; по своему усмотрению, поэтому, если GHC выбирает &lt;code&gt;(a :+: b) :+: c&lt;/code&gt; , то кодировка для &lt;code&gt;a&lt;/code&gt; будет &lt;code&gt;[O, O]&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; будет &lt;code&gt;[O, I]&lt;/code&gt; , а &lt;code&gt;c&lt;/code&gt; будет &lt;code&gt;[I]&lt;/code&gt; . Однако, если GHC выбирает &lt;code&gt;a :+: (b :+: c)&lt;/code&gt; , тогда кодировка для &lt;code&gt;a&lt;/code&gt; будет &lt;code&gt;[O]&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; будет &lt;code&gt;[I, O]&lt;/code&gt; , а &lt;code&gt;c&lt;/code&gt; будет &lt;code&gt;[I, I]&lt;/code&gt; , (На практике текущая реализация пытается произвести более или менее сбалансированное вложение &lt;code&gt;:+:&lt;/code&gt; и &lt;code&gt;:*:&lt;/code&gt; так, чтобы переход структуры типа данных от корня к конкретному компоненту мог выполняться в логарифмическом, а не линейное время.)</target>
        </trans-unit>
        <trans-unit id="22d4b5245916ddee4003e31bf87953ef290e9b20" translate="yes" xml:space="preserve">
          <source>A class cannot generally have itself as a superclass. So this is illegal</source>
          <target state="translated">Класс,как правило,не может иметь себя в качестве суперкласса.Так что это незаконно</target>
        </trans-unit>
        <trans-unit id="f056b7a04761436a087354198406063da33c9730" translate="yes" xml:space="preserve">
          <source>A class declarations can either be abstract or concrete. An abstract class is one with no superclasses or class methods:</source>
          <target state="translated">Классовые декларации могут быть как абстрактными,так и конкретными.Абстрактный класс-это класс,в котором нет ни суперклассов,ни методов класса:</target>
        </trans-unit>
        <trans-unit id="1b36f377a6bd2fac28e2b563337bb9c2dc25741e" translate="yes" xml:space="preserve">
          <source>A class for categories. Instances should satisfy the laws</source>
          <target state="translated">Класс для категорий.Случаи должны соответствовать законам</target>
        </trans-unit>
        <trans-unit id="3ec4717446a855d06a8c1e87456d78539b17b28b" translate="yes" xml:space="preserve">
          <source>A class for monads in which exceptions may be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b57c7ffb9d24daec9c92510e3dc595c7c4d9f4" translate="yes" xml:space="preserve">
          <source>A class for monads which allow exceptions to be caught, in particular exceptions which were thrown by &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:throwM&quot;&gt;throwM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c880c2de95d653829de3579b5cf0450be8b3f4" translate="yes" xml:space="preserve">
          <source>A class for monads which provide for the ability to account for all possible exit points from a computation, and to mask asynchronous exceptions. Continuation-based monads are invalid instances of this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fec2d7334def5a7f37888bee18c8bb561acd718" translate="yes" xml:space="preserve">
          <source>A class for things buildable from static pointers.</source>
          <target state="translated">Класс для вещей,построенных из статических указателей.</target>
        </trans-unit>
        <trans-unit id="16f65e9b0b64e45d51e0bcdd76ca8407c6f3cc52" translate="yes" xml:space="preserve">
          <source>A class method</source>
          <target state="translated">метод класса</target>
        </trans-unit>
        <trans-unit id="6f3ca3b97f5cb6f003ec47445c70a8cb5a13ebc9" translate="yes" xml:space="preserve">
          <source>A class method without a definition (neither a default definition, nor a definition in the appropriate instance) was called. The &lt;code&gt;String&lt;/code&gt; gives information about which method it was.</source>
          <target state="translated">Был вызван метод класса без определения (ни определения по умолчанию, ни определения в соответствующем экземпляре). &lt;code&gt;String&lt;/code&gt; дает информацию о том, какой метод он был.</target>
        </trans-unit>
        <trans-unit id="820008a62ac203372438ae344a8da118e60912d3" translate="yes" xml:space="preserve">
          <source>A class of bifunctors that can be fully evaluated.</source>
          <target state="translated">Класс бифункторов,который может быть полностью оценен.</target>
        </trans-unit>
        <trans-unit id="5f62d094b52f200eb67c73fe054a072916deee3f" translate="yes" xml:space="preserve">
          <source>A class of functors that can be fully evaluated.</source>
          <target state="translated">Класс functors,который может быть полностью оценен.</target>
        </trans-unit>
        <trans-unit id="03b36f13be1922d1c74d9e6e0b4b212a81502e1b" translate="yes" xml:space="preserve">
          <source>A class of types that can be fully evaluated.</source>
          <target state="translated">Класс типов,которые могут быть полностью оценены.</target>
        </trans-unit>
        <trans-unit id="18974c638151613690d5d785bcc282ea54126e16" translate="yes" xml:space="preserve">
          <source>A class, with a list of its visible instances</source>
          <target state="translated">Класс,со списком его видимых экземпляров.</target>
        </trans-unit>
        <trans-unit id="cf9b4ce512562f9b4a68069022cc221d559c7dde" translate="yes" xml:space="preserve">
          <source>A closed type family has a complete signature when all of its type variables are annotated and a return kind (with a top-level &lt;code&gt;::&lt;/code&gt;) is supplied.</source>
          <target state="translated">Семейство закрытых типов имеет полную сигнатуру, когда все его переменные типа аннотированы и предоставляется возвращаемый вид (с верхним уровнем &lt;code&gt;::&lt;/code&gt; :).</target>
        </trans-unit>
        <trans-unit id="5dfadf25c80308dd41216413c27a3be8dce8cf23" translate="yes" xml:space="preserve">
          <source>A closed type family may be declared with no equations. Such closed type families are opaque type-level definitions that will never reduce, are not necessarily injective (unlike empty data types), and cannot be given any instances. This is different from omitting the equations of a closed type family in a &lt;code&gt;hs-boot&lt;/code&gt; file, which uses the syntax &lt;code&gt;where ..&lt;/code&gt;, as in that case there may or may not be equations given in the &lt;code&gt;hs&lt;/code&gt; file.</source>
          <target state="translated">Семейство закрытых типов можно объявлять без уравнений. Такие закрытые семейства типов являются непрозрачными определениями на уровне типов, которые никогда не уменьшаются, не обязательно являются инъективными (в отличие от пустых типов данных) и не могут иметь никаких экземпляров. Это отличается от исключения уравнений семейства закрытых типов в файле &lt;code&gt;hs-boot&lt;/code&gt; , который использует синтаксис &lt;code&gt;where ..&lt;/code&gt; , поскольку в этом случае в файле &lt;code&gt;hs&lt;/code&gt; могут быть или не быть уравнения .</target>
        </trans-unit>
        <trans-unit id="5bc12f9a6f357ec15b737234f9f657aacb094303" translate="yes" xml:space="preserve">
          <source>A closed type family may optionally omit its equations, as in the following example:</source>
          <target state="translated">Семейство закрытого типа может по желанию опускать свои уравнения,как в следующем примере:</target>
        </trans-unit>
        <trans-unit id="560667c66049aeef765aec3cd394fe9074dbfde4" translate="yes" xml:space="preserve">
          <source>A closed type family&amp;rsquo;s equations are tried in order, from top to bottom, when simplifying a type family application. In this example, we declare an instance for &lt;code&gt;F&lt;/code&gt; such that &lt;code&gt;F Int&lt;/code&gt; simplifies to &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;F Bool&lt;/code&gt; simplifies to &lt;code&gt;Char&lt;/code&gt;, and for any other type &lt;code&gt;a&lt;/code&gt; that is known not to be &lt;code&gt;Int&lt;/code&gt; or &lt;code&gt;Bool&lt;/code&gt;, &lt;code&gt;F a&lt;/code&gt; simplifies to &lt;code&gt;String&lt;/code&gt;. Note that GHC must be sure that &lt;code&gt;a&lt;/code&gt; cannot unify with &lt;code&gt;Int&lt;/code&gt; or &lt;code&gt;Bool&lt;/code&gt; in that last case; if a programmer specifies just &lt;code&gt;F a&lt;/code&gt; in their code, GHC will not be able to simplify the type. After all, &lt;code&gt;a&lt;/code&gt; might later be instantiated with &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">Уравнения замкнутого семейства типов проверяются по порядку, сверху вниз, при упрощении приложения семейства типов. В этом примере мы объявляем экземпляр для &lt;code&gt;F&lt;/code&gt; так , что &lt;code&gt;F Int&lt;/code&gt; упрощается до &lt;code&gt;Double&lt;/code&gt; , &lt;code&gt;F Bool&lt;/code&gt; упрощается до &lt;code&gt;Char&lt;/code&gt; , а для любого другого типа &lt;code&gt;a&lt;/code&gt; , который, как известно, не является &lt;code&gt;Int&lt;/code&gt; или &lt;code&gt;Bool&lt;/code&gt; , &lt;code&gt;F a&lt;/code&gt; упрощается до &lt;code&gt;String&lt;/code&gt; . Обратите внимание, что GHC должен быть уверен, что &lt;code&gt;a&lt;/code&gt; не может объединиться с &lt;code&gt;Int&lt;/code&gt; или &lt;code&gt;Bool&lt;/code&gt; в последнем случае; если программист указывает только &lt;code&gt;F a&lt;/code&gt; в своем коде GHC не сможет упростить тип. В конце концов, позже может быть &lt;code&gt;a&lt;/code&gt; экземпляр с &lt;code&gt;Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8038c2136e5194f458ce16e855b310af6be8edf" translate="yes" xml:space="preserve">
          <source>A closed type family&amp;rsquo;s equations have the same restrictions and extensions as the equations for open type family instances. For instance, when &lt;a href=&quot;#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt; is enabled, type or kind variables used on the left hand side of an equation can be explicitly bound, such as in:</source>
          <target state="translated">Уравнения семейства закрытого типа имеют те же ограничения и расширения, что и уравнения для экземпляров семейства открытого типа. Например, когда включен &lt;a href=&quot;#extension-ExplicitForAll&quot;&gt; &lt;code&gt;ExplicitForAll&lt;/code&gt; &lt;/a&gt; , переменные типа или типа, используемые в левой части уравнения, могут быть явно связаны, например в:</target>
        </trans-unit>
        <trans-unit id="2cbb953a48fd83f0a426ad4c7e2aac7e2a21cac0" translate="yes" xml:space="preserve">
          <source>A closed type family&amp;rsquo;s equations have the same restrictions and extensions as the equations for open type family instances. For instance, when &lt;a href=&quot;explicit_forall#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt; is enabled, type or kind variables used on the left hand side of an equation can be explicitly bound, such as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979f0b250d6263823cae5f13007ece9ecedaf23c" translate="yes" xml:space="preserve">
          <source>A collection of FFI declarations for accessing the Win32 registry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55db83fdd426c323b8ba055ddebf0f4927065c0d" translate="yes" xml:space="preserve">
          <source>A collection of FFI declarations for interfacing with Win32 Console API</source>
          <target state="translated">Коллекция FFI-деклараций для взаимодействия с Win32 Console API</target>
        </trans-unit>
        <trans-unit id="97dfd9521aba56f50c67376cea085b8e6e134f90" translate="yes" xml:space="preserve">
          <source>A collection of FFI declarations for interfacing with Win32 mapped files.</source>
          <target state="translated">Коллекция FFI-деклараций для взаимодействия с картографическими файлами Win32.</target>
        </trans-unit>
        <trans-unit id="0e9e3c664eeffb3c7374565940d3d04f59d623a4" translate="yes" xml:space="preserve">
          <source>A collection of FFI declarations for interfacing with Win32.</source>
          <target state="translated">Коллекция FFI-деклараций для взаимодействия с Win32.</target>
        </trans-unit>
        <trans-unit id="15a4c2ec78aa243e78e786440542fa86a3f898c2" translate="yes" xml:space="preserve">
          <source>A combination is &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Pure&quot;&gt;Pure&lt;/a&gt;&lt;/code&gt; only either part is.</source>
          <target state="translated">Комбинация &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Pure&quot;&gt;Pure&lt;/a&gt;&lt;/code&gt; только обе части.</target>
        </trans-unit>
        <trans-unit id="0e6111313c9398a428339ebfc1488b4234c0e6df" translate="yes" xml:space="preserve">
          <source>A combination is &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Pure&quot;&gt;Pure&lt;/a&gt;&lt;/code&gt; only if both parts are.</source>
          <target state="translated">Комбинация &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Pure&quot;&gt;Pure&lt;/a&gt;&lt;/code&gt; только если обе части чистые .</target>
        </trans-unit>
        <trans-unit id="1cf4024f647ac4b5f1014ad62fdb4551663a3cfd" translate="yes" xml:space="preserve">
          <source>A command line to execute using the shell</source>
          <target state="translated">Командная строка для выполнения с помощью оболочки</target>
        </trans-unit>
        <trans-unit id="2b42afbfaea58252904aedc72c342409dc5217ec" translate="yes" xml:space="preserve">
          <source>A common example is opening a file:</source>
          <target state="translated">Обычный пример-открытие файла:</target>
        </trans-unit>
        <trans-unit id="e611ccbbca22d800c83d8e50686983d00ac930b7" translate="yes" xml:space="preserve">
          <source>A common interface to a collection of useful concurrency abstractions.</source>
          <target state="translated">Общий интерфейс к коллекции полезных параллельных абстракций.</target>
        </trans-unit>
        <trans-unit id="158d48aa333ea6c2ec16fe37bdb3bd252bd76bb9" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;&lt;a href=&quot;control-monad#v:forever&quot;&gt;forever&lt;/a&gt;&lt;/code&gt; is to process input from network sockets, &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s, and channels (e.g. &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#v:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Обычное использование &lt;code&gt;&lt;a href=&quot;control-monad#v:forever&quot;&gt;forever&lt;/a&gt;&lt;/code&gt; является вход процесса от сетевых розеток, &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; с, и каналов (например , &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#v:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="de5703326cbd6c93faef0a72782d20b8fe31e5ee" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;&lt;a href=&quot;control-monad#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; is to run an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation returned from an &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; transaction, since &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; transactions can't perform &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directly. Recall that</source>
          <target state="translated">Обычно &lt;code&gt;&lt;a href=&quot;control-monad#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; используется для выполнения вычисления &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; вывода, возвращаемого из транзакции &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; , поскольку транзакции &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; не могут выполнять &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; напрямую. Напомним, что</target>
        </trans-unit>
        <trans-unit id="d6b9bff21670bd6e1dbddd535cfab7c10fd33d82" translate="yes" xml:space="preserve">
          <source>A common use of &lt;code&gt;&lt;a href=&quot;ghc-base#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; is to run an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; computation returned from an &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; transaction, since &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; transactions can't perform &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; directly. Recall that</source>
          <target state="translated">Обычно &lt;code&gt;&lt;a href=&quot;ghc-base#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; используется для выполнения вычисления &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; вывода, возвращаемого из транзакции &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; , поскольку транзакции &lt;code&gt;&lt;a href=&quot;ghc-conc#v:STM&quot;&gt;STM&lt;/a&gt;&lt;/code&gt; не могут выполнять &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; напрямую. Напомним, что</target>
        </trans-unit>
        <trans-unit id="923f01eefd2602576139719f5c7af323619c5a66" translate="yes" xml:space="preserve">
          <source>A compact representation of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; vector.</source>
          <target state="translated">Компактное представление вектора &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5b6f1851ba64e7fbc006018f91e89cc899a277e" translate="yes" xml:space="preserve">
          <source>A compact representation of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746987a27cba5fc9b09e0af9a8bec6d5a8c190f1" translate="yes" xml:space="preserve">
          <source>A compact representation of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dc43ee46b5b21f3e78943bd2860ac98eafb0926" translate="yes" xml:space="preserve">
          <source>A compact representation suitable for storing short byte strings in memory.</source>
          <target state="translated">Компактное представление,подходящее для хранения коротких строк байтов в памяти.</target>
        </trans-unit>
        <trans-unit id="4dee1b6583088672899330bd95413844639d24f0" translate="yes" xml:space="preserve">
          <source>A concrete class specifies its superclasses, methods, default method signatures (but not their implementations) and a &lt;code&gt;MINIMAL&lt;/code&gt; pragma. Unlike regular Haskell classes, you don&amp;rsquo;t have to explicitly declare a default for a method to make it optional vis-a-vis the &lt;code&gt;MINIMAL&lt;/code&gt; pragma.</source>
          <target state="translated">Конкретный класс определяет свои Суперклассов, методы, сигнатуры метода по умолчанию (но не их реализация) и &lt;code&gt;MINIMAL&lt;/code&gt; Прагме. В отличие от обычных классов Haskell, вам не нужно явно объявлять значение по умолчанию для метода, чтобы сделать его необязательным по отношению к &lt;code&gt;MINIMAL&lt;/code&gt; MINIMAL.</target>
        </trans-unit>
        <trans-unit id="48e06f28fdc9e894b60b4a1b8a5f1e5767f7a49e" translate="yes" xml:space="preserve">
          <source>A concrete representation of &lt;code&gt;Version&lt;/code&gt;</source>
          <target state="translated">Конкретное представление &lt;code&gt;Version&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cb20f59e5f2e9ba3dec010b3eb3028f911a9a31" translate="yes" xml:space="preserve">
          <source>A concrete representation of a (monomorphic) type. &lt;code&gt;&lt;a href=&quot;type-reflection#t:TypeRep&quot;&gt;TypeRep&lt;/a&gt;&lt;/code&gt; supports reasonably efficient equality.</source>
          <target state="translated">Конкретное представление (мономорфного) типа. &lt;code&gt;&lt;a href=&quot;type-reflection#t:TypeRep&quot;&gt;TypeRep&lt;/a&gt;&lt;/code&gt; поддерживает достаточно эффективное равенство.</target>
        </trans-unit>
        <trans-unit id="11422484bfa14bcef95a9aa3860b69ba994b65fb" translate="yes" xml:space="preserve">
          <source>A concrete representation of a (monomorphic) type. &lt;code&gt;&lt;a href=&quot;type-reflection-unsafe#t:TypeRep&quot;&gt;TypeRep&lt;/a&gt;&lt;/code&gt; supports reasonably efficient equality.</source>
          <target state="translated">Конкретное представление (мономорфного) типа. &lt;code&gt;&lt;a href=&quot;type-reflection-unsafe#t:TypeRep&quot;&gt;TypeRep&lt;/a&gt;&lt;/code&gt; поддерживает достаточно эффективное равенство.</target>
        </trans-unit>
        <trans-unit id="0e1fa2e1fdd32663fb32988ae8b548b810674d4a" translate="yes" xml:space="preserve">
          <source>A concrete type constructor applied to some types.</source>
          <target state="translated">Конструктор бетонного типа применяется к некоторым типам.</target>
        </trans-unit>
        <trans-unit id="8bad079c8885ff9572beaf6828f7450891b38608" translate="yes" xml:space="preserve">
          <source>A concrete type literal.:</source>
          <target state="translated">Бетонный тип буквально..:</target>
        </trans-unit>
        <trans-unit id="5d4c61340ac65e2aef91e6fee099cfe89ce3d06e" translate="yes" xml:space="preserve">
          <source>A concrete, promotable proxy type, for use at the kind level. There are no instances for this because it is intended at the kind level only</source>
          <target state="translated">Конкретный,стимулирующий тип прокси,для использования на уровне вида.Случаев для этого нет,так как он предназначен только на уровне вида.</target>
        </trans-unit>
        <trans-unit id="63ae3dab5a2e143c3ea2383adfe2778d5d710d0b" translate="yes" xml:space="preserve">
          <source>A constraint in the type signature is not used in the code it covers:</source>
          <target state="translated">Ограничение в подписи типа не используется в коде,который она охватывает:</target>
        </trans-unit>
        <trans-unit id="84193f4f755d1c0b1057183b2a0adc6bf73de7fb" translate="yes" xml:space="preserve">
          <source>A constructor signature may mention type class constraints, which can differ for different constructors. For example, this is fine:</source>
          <target state="translated">В сигнатуре конструктора могут быть указаны ограничения типов классов,которые могут отличаться для разных конструкторов.Например,это нормально:</target>
        </trans-unit>
        <trans-unit id="1fe5ae7286a52f71d84c6187f3fe447df9c9228a" translate="yes" xml:space="preserve">
          <source>A contrived addition example. Works only with positive numbers:</source>
          <target state="translated">Искусственный пример добавления.Работает только с положительными числами:</target>
        </trans-unit>
        <trans-unit id="0df890da0fb3e9db7fe956f05674d4d8aa062f47" translate="yes" xml:space="preserve">
          <source>A conversion specification begins with the character &lt;code&gt;%&lt;/code&gt;, followed by zero or more of the following flags:</source>
          <target state="translated">Спецификация преобразования начинается с символа &lt;code&gt;%&lt;/code&gt; , за которым следует ноль или более следующих флагов:</target>
        </trans-unit>
        <trans-unit id="dd84caa4cb664b8bd50303514ba4d2b0f6763dd8" translate="yes" xml:space="preserve">
          <source>A corresponding Haskell value looks like this:</source>
          <target state="translated">Соответствующее значение Хаскелла выглядит так:</target>
        </trans-unit>
        <trans-unit id="2f782e63a1f3f05e6a16c8d7b64076664f462677" translate="yes" xml:space="preserve">
          <source>A cost-centre from GHC's cost-center profiler.</source>
          <target state="translated">Стоимость в профилировщике GHC.</target>
        </trans-unit>
        <trans-unit id="ba083c36a70a7120687138d63b14bdaf702d8dac" translate="yes" xml:space="preserve">
          <source>A cost-centre stack from GHC's cost-center profiler.</source>
          <target state="translated">Стоимость стека из профилировщика стоимости GHC.</target>
        </trans-unit>
        <trans-unit id="50ea9d5bdb5ec17d018609e47a9ec22b64ecd54e" translate="yes" xml:space="preserve">
          <source>A couple of things to notice:</source>
          <target state="translated">Пара вещей,на которые стоит обратить внимание:</target>
        </trans-unit>
        <trans-unit id="3dc945323c54ee396119be0717674ee79090c303" translate="yes" xml:space="preserve">
          <source>A custom &lt;code&gt;&lt;a href=&quot;system-console-haskeline-completion#t:CompletionFunc&quot;&gt;CompletionFunc&lt;/a&gt;&lt;/code&gt; which completes the word immediately to the left of the cursor, and takes into account the line contents to the left of the word.</source>
          <target state="translated">Пользовательский &lt;code&gt;&lt;a href=&quot;system-console-haskeline-completion#t:CompletionFunc&quot;&gt;CompletionFunc&lt;/a&gt;&lt;/code&gt; , который завершает слово сразу слева от курсора и учитывает содержимое строки слева от слова.</target>
        </trans-unit>
        <trans-unit id="8c0d52f3762ec276383b7f73f082f54d2df5f0bc" translate="yes" xml:space="preserve">
          <source>A custom &lt;code&gt;&lt;a href=&quot;system-console-haskeline-completion#t:CompletionFunc&quot;&gt;CompletionFunc&lt;/a&gt;&lt;/code&gt; which completes the word immediately to the left of the cursor.</source>
          <target state="translated">Пользовательский &lt;code&gt;&lt;a href=&quot;system-console-haskeline-completion#t:CompletionFunc&quot;&gt;CompletionFunc&lt;/a&gt;&lt;/code&gt; , который завершает слово сразу слева от курсора.</target>
        </trans-unit>
        <trans-unit id="5862453396404797aa7de7142dce28109cb9b288" translate="yes" xml:space="preserve">
          <source>A custom pre-processor is run over your Haskell source file only if the &lt;code&gt;-F&lt;/code&gt; option is given.</source>
          <target state="translated">Пользовательский препроцессор запускается в исходном файле Haskell только в том случае, если задана опция &lt;code&gt;-F&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1599a4a0a331f022d3d429faece9bf7cf541b2b9" translate="yes" xml:space="preserve">
          <source>A custom pretty printing function can be used, for example, to format tree-like and nested structures in a more readable way.</source>
          <target state="translated">Пользовательская красивая функция печати может быть использована,например,для более читабельного форматирования древовидных и вложенных структур.</target>
        </trans-unit>
        <trans-unit id="f8eb6d3c983aaf3cde12f740cd4904b0498bd294" translate="yes" xml:space="preserve">
          <source>A data constructor</source>
          <target state="translated">Конструктор данных</target>
        </trans-unit>
        <trans-unit id="b5d4cb00190598ddeec4823830bc239b1485a236" translate="yes" xml:space="preserve">
          <source>A data family instance declaration can use the full expressiveness of ordinary &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;newtype&lt;/code&gt; declarations:</source>
          <target state="translated">Объявление экземпляра семейства данных может использовать полную выразительность обычных &lt;code&gt;data&lt;/code&gt; или объявлений &lt;code&gt;newtype&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f190b4f01195b249d3555778e7d04af0949a28aa" translate="yes" xml:space="preserve">
          <source>A data or type synonym family can be declared as part of a type class, thus:</source>
          <target state="translated">Таким образом,данные или семейство синонимов типов могут быть объявлены как часть класса типов:</target>
        </trans-unit>
        <trans-unit id="4fab55b5200474635e47e3680a86e7055016af5b" translate="yes" xml:space="preserve">
          <source>A data type declaration can either be given in full, exactly as in Haskell, or it can be given abstractly, by omitting the &amp;lsquo;=&amp;rsquo; sign and everything that follows. For example:</source>
          <target state="translated">Объявление типа данных может быть дано полностью, как в Haskell, или может быть дано абстрактно, опуская знак '=' и все, что следует за ним. Например:</target>
        </trans-unit>
        <trans-unit id="3df736aafe2d3db3e69d9a2a8f83fab7d3cd7998" translate="yes" xml:space="preserve">
          <source>A data type has no type parameters (e.g., &lt;code&gt;data Nothing = Nothing&lt;/code&gt;).</source>
          <target state="translated">Тип данных не имеет параметров типа (например, &lt;code&gt;data Nothing = Nothing&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="586827d4266b3d644377c42c18624801ae4ad40a" translate="yes" xml:space="preserve">
          <source>A data type&amp;rsquo;s last type variable is used in a &lt;a href=&quot;#extension-DatatypeContexts&quot;&gt;&lt;code&gt;DatatypeContexts&lt;/code&gt;&lt;/a&gt; constraint (e.g., &lt;code&gt;data Ord a =&amp;gt; O a = O a&lt;/code&gt;).</source>
          <target state="translated">Переменная последнего типа типа данных используется в ограничении &lt;a href=&quot;#extension-DatatypeContexts&quot;&gt; &lt;code&gt;DatatypeContexts&lt;/code&gt; &lt;/a&gt; (например, &lt;code&gt;data Ord a =&amp;gt; O a = O a&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cc7a41bf1a92f066b2f5370019dbc0cca08e6499" translate="yes" xml:space="preserve">
          <source>A data type&amp;rsquo;s last type variable is used in a &lt;a href=&quot;datatype_contexts#extension-DatatypeContexts&quot;&gt;&lt;code&gt;DatatypeContexts&lt;/code&gt;&lt;/a&gt; constraint (e.g., &lt;code&gt;data Ord a =&amp;gt; O a = O a&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541952865f0bce99dfba54b59c18bf4d90b79e63" translate="yes" xml:space="preserve">
          <source>A data type&amp;rsquo;s last type variable is used in an &lt;a href=&quot;#extension-ExistentialQuantification&quot;&gt;&lt;code&gt;ExistentialQuantification&lt;/code&gt;&lt;/a&gt; constraint, or is refined in a GADT. For example,</source>
          <target state="translated">Переменная последнего типа типа данных используется в ограничении &lt;a href=&quot;#extension-ExistentialQuantification&quot;&gt; &lt;code&gt;ExistentialQuantification&lt;/code&gt; &lt;/a&gt; или уточняется в GADT. Например,</target>
        </trans-unit>
        <trans-unit id="df53ab812109e5455de48a78e896649f6237dc82" translate="yes" xml:space="preserve">
          <source>A data type&amp;rsquo;s last type variable is used in an &lt;a href=&quot;existential_quantification#extension-ExistentialQuantification&quot;&gt;&lt;code&gt;ExistentialQuantification&lt;/code&gt;&lt;/a&gt; constraint, or is refined in a GADT. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d82223d3ac86e9e0f5a1e86033ba159dc2adca" translate="yes" xml:space="preserve">
          <source>A datatype-generic function comprises two parts:</source>
          <target state="translated">Функция генерирования данных состоит из двух частей:</target>
        </trans-unit>
        <trans-unit id="6264b318464960e93f9c184b690473f5a5728225" translate="yes" xml:space="preserve">
          <source>A declaration type signature (&lt;a href=&quot;#decl-type-sigs&quot;&gt;Declaration type signatures&lt;/a&gt;)</source>
          <target state="translated">Подпись типа объявления ( &lt;a href=&quot;#decl-type-sigs&quot;&gt;подписи типа объявления&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="ee69366de998246ce67952ee9a1a1b3b6c96d4af" translate="yes" xml:space="preserve">
          <source>A declaration type signature that has &lt;em&gt;explicit&lt;/em&gt; quantification (using &lt;code&gt;forall&lt;/code&gt;) brings into scope the explicitly-quantified type variables, in the definition of the named function. For example:</source>
          <target state="translated">Сигнатура типа объявления, которая имеет &lt;em&gt;явную&lt;/em&gt; количественную оценку (с использованием &lt;code&gt;forall&lt;/code&gt; ), вводит в область видимости явно определенные количественные переменные типа в определении названной функции. Например:</target>
        </trans-unit>
        <trans-unit id="7a000f3b48bd252b4ec5f85b4c427ccb663838bd" translate="yes" xml:space="preserve">
          <source>A decoder procuced by running a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Декодер, получаемый при запуске монады &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d17b00ef4a90f5cabfdbf829a677b6db008e640" translate="yes" xml:space="preserve">
          <source>A default declaration is not permitted for an associated &lt;em&gt;data&lt;/em&gt; type.</source>
          <target state="translated">Объявление по умолчанию не разрешено для связанного типа &lt;em&gt;данных&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="13508033e2c27b5de3214a6e0b6e522b009a007b" translate="yes" xml:space="preserve">
          <source>A default definition of &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldMap&quot;&gt;bifoldMap&lt;/a&gt;&lt;/code&gt; in terms of the &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">Определение &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldMap&quot;&gt;bifoldMap&lt;/a&gt;&lt;/code&gt; по умолчанию с точки &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; операций Bitraversable .</target>
        </trans-unit>
        <trans-unit id="a5b5443d78a52a0405c2f0d6239820bf3007f82e" translate="yes" xml:space="preserve">
          <source>A default definition of &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; in terms of the &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">Определение &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; по умолчанию с точки &lt;code&gt;&lt;a href=&quot;data-bitraversable#t:Bitraversable&quot;&gt;Bitraversable&lt;/a&gt;&lt;/code&gt; операций Bitraversable .</target>
        </trans-unit>
        <trans-unit id="8979aa9d1894c898d3c726fca41fdca65c4a33d5" translate="yes" xml:space="preserve">
          <source>A default element</source>
          <target state="translated">Элемент по умолчанию</target>
        </trans-unit>
        <trans-unit id="6b0ba2dc21c07d694dd7ceb37775a8c3eee889d5" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Определение &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bitraverse&quot;&gt;bitraverse&lt;/a&gt;&lt;/code&gt; должно удовлетворять следующим законам:</target>
        </trans-unit>
        <trans-unit id="a180dbe254c504564dcc326aee311c425f63e9ec" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Определение &lt;code&gt;&lt;a href=&quot;data-traversable#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; A должно удовлетворять следующим законам:</target>
        </trans-unit>
        <trans-unit id="16de260f1c6cac6529ed6b018b65c836efe37f81" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Определение &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; должно удовлетворять следующим законам:</target>
        </trans-unit>
        <trans-unit id="47d9196fc9df3f1fb6cf5bd564f834d9d06f81f1" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Определение &lt;code&gt;&lt;a href=&quot;prelude#v:sequenceA&quot;&gt;sequenceA&lt;/a&gt;&lt;/code&gt; A должно удовлетворять следующим законам:</target>
        </trans-unit>
        <trans-unit id="dc3862240a73ca7ad48aba38069f60afa153c34d" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;&lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; must satisfy the following laws:</source>
          <target state="translated">Определение &lt;code&gt;&lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt; должно удовлетворять следующим законам:</target>
        </trans-unit>
        <trans-unit id="06c816889d8c0a0e486735490b0238ade51de818" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;safeDiv&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;control-monad#v:guard&quot;&gt;guard&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;&lt;code&gt;do&lt;/code&gt;-notation:</source>
          <target state="translated">Определение &lt;code&gt;safeDiv&lt;/code&gt; с использованием нотации &lt;code&gt;&lt;a href=&quot;control-monad#v:guard&quot;&gt;guard&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; &lt;code&gt;do&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c1670eef1322c0d7b707d0ae468ed9e809e67e91" translate="yes" xml:space="preserve">
          <source>A definition of &lt;code&gt;safeDiv&lt;/code&gt; using guards, but not &lt;code&gt;&lt;a href=&quot;control-monad#v:guard&quot;&gt;guard&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Определение &lt;code&gt;safeDiv&lt;/code&gt; с использованием охранников, но не &lt;code&gt;&lt;a href=&quot;control-monad#v:guard&quot;&gt;guard&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="006a6845e3a856bbfba4df0255e3848a4a860831" translate="yes" xml:space="preserve">
          <source>A definition of &lt;em&gt;trust&lt;/em&gt; (or safety) and how it operates, along with ways of defining and changing the trust of modules and packages.</source>
          <target state="translated">Определение &lt;em&gt;доверия&lt;/em&gt; (или безопасности) и то, как оно работает, а также способы определения и изменения доверия модулей и пакетов.</target>
        </trans-unit>
        <trans-unit id="1fb7cf11f58e4e4a3003926053464a1496f9bd2f" translate="yes" xml:space="preserve">
          <source>A deprecated alias of &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt; псевдоним RankNTypes .</target>
        </trans-unit>
        <trans-unit id="c13f98be7b9473c582b30f2dd1c5005c007bdc07" translate="yes" xml:space="preserve">
          <source>A derived instance is derived only for declarations of these forms (after expansion of any type synonyms)</source>
          <target state="translated">Производный экземпляр выводится только для деклараций этих форм (после расширения синонимов любого типа).</target>
        </trans-unit>
        <trans-unit id="fd8f6757bd0323a7730e959138361a06c176f799" translate="yes" xml:space="preserve">
          <source>A description of a custom type error.</source>
          <target state="translated">Описание ошибки пользовательского типа.</target>
        </trans-unit>
        <trans-unit id="97496eb0e26835b32d2dfe1ae69ecf8a627e29cb" translate="yes" xml:space="preserve">
          <source>A descriptive string roughly identifying the cost-centre.</source>
          <target state="translated">Описательная строка,грубо определяющая центр затрат.</target>
        </trans-unit>
        <trans-unit id="1814a528e490de53f22aa61afcafb8d5feeb8d24" translate="yes" xml:space="preserve">
          <source>A different approach is to group the option values in a record of type &lt;code&gt;Options&lt;/code&gt;, and have each flag yield a function of type &lt;code&gt;Options -&amp;gt; Options&lt;/code&gt; transforming this record.</source>
          <target state="translated">Другой подход состоит в том, чтобы сгруппировать значения параметров в записи типа &lt;code&gt;Options&lt;/code&gt; , и каждый флаг должен давать функцию типа &lt;code&gt;Options -&amp;gt; Options&lt;/code&gt; преобразующую эту запись.</target>
        </trans-unit>
        <trans-unit id="bbb68a110439919741a19755964df2e6fa3244b4" translate="yes" xml:space="preserve">
          <source>A directory contains a series of entries, each of which is a named reference to a file system object (file, directory etc.). Some entries may be hidden, inaccessible, or have some administrative function (e.g. &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt; under &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399&quot;&gt;POSIX&lt;/a&gt;), but in this standard all such entries are considered to form part of the directory contents. Entries in sub-directories are not, however, considered to form part of the directory contents.</source>
          <target state="translated">Каталог содержит серию записей, каждая из которых является именованной ссылкой на объект файловой системы (файл, каталог и т. Д.). Некоторые записи могут быть скрыты, недоступны, или иметь некоторую административную функцию (например &lt;code&gt;.&lt;/code&gt; Или &lt;code&gt;..&lt;/code&gt; под &lt;a href=&quot;http://www.opengroup.org/onlinepubs/009695399&quot;&gt;POSIX&lt;/a&gt; ), но в этом стандарте все такие записи считаются составляют часть содержимого каталога. Однако записи в подкаталогах не считаются частью содержимого каталога.</target>
        </trans-unit>
        <trans-unit id="b8bc02a67c4fcfc20a0a309702e42070cfdd3a1e" translate="yes" xml:space="preserve">
          <source>A directory contains a series of entries, each of which is a named reference to a file system object (file, directory etc.). Some entries may be hidden, inaccessible, or have some administrative function (e.g. &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;..&lt;/code&gt; under &lt;a href=&quot;https://www.opengroup.org/onlinepubs/009695399&quot;&gt;POSIX&lt;/a&gt;), but in this standard all such entries are considered to form part of the directory contents. Entries in sub-directories are not, however, considered to form part of the directory contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cea28c5c17737eb22d5290576e72180db68e967" translate="yes" xml:space="preserve">
          <source>A document of height 1 containing a literal string. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; satisfies the following laws:</source>
          <target state="translated">Документ высотой 1, содержащий буквальную строку. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; удовлетворяет следующим законам:</target>
        </trans-unit>
        <trans-unit id="a7c0af88c561dd3e381e4c0c9eb468d9f9adda7d" translate="yes" xml:space="preserve">
          <source>A document of height 1 containing a literal string. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; satisfies the following laws:</source>
          <target state="translated">Документ высотой 1, содержащий буквальную строку. &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; удовлетворяет следующим законам:</target>
        </trans-unit>
        <trans-unit id="b60445ccdc10943dbfcb65b6302d60eef3c3dd3b" translate="yes" xml:space="preserve">
          <source>A document of height 1 containing a literal string. &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; satisfies the following laws:</source>
          <target state="translated">Документ высотой 1, содержащий буквальную строку. &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:text&quot;&gt;text&lt;/a&gt;&lt;/code&gt; удовлетворяет следующим законам:</target>
        </trans-unit>
        <trans-unit id="688bfb4bbd29b21c2ae8d691c138d77983de8115" translate="yes" xml:space="preserve">
          <source>A document of height and width 1, containing a literal character.</source>
          <target state="translated">Документ высотой и шириной 1,содержащий буквальный символ.</target>
        </trans-unit>
        <trans-unit id="6b6ebd185f2a3b55592691251680ab65322061fe" translate="yes" xml:space="preserve">
          <source>A duplex communications channel (results in creation of a duplex &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;). The standard libraries use this device type when creating &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s for open sockets.</source>
          <target state="translated">Дуплексный канал связи (приводит к созданию дуплексного &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; ). Стандартные библиотеки используют этот тип устройства при создании &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; для открытых сокетов.</target>
        </trans-unit>
        <trans-unit id="86a3012ad906142a305a738b9de653227862c657" translate="yes" xml:space="preserve">
          <source>A expression quotation is written in Oxford brackets, thus:</source>
          <target state="translated">Таким образом,цитата из выражения записывается в оксфордские скобки:</target>
        </trans-unit>
        <trans-unit id="5e47ffa147be43069d678d8783f87f9374b92f8d" translate="yes" xml:space="preserve">
          <source>A feature or operation which a &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Terminal&quot;&gt;Terminal&lt;/a&gt;&lt;/code&gt; may define.</source>
          <target state="translated">Функция или операция, которую может определять &lt;code&gt;&lt;a href=&quot;system-console-terminfo-base#t:Terminal&quot;&gt;Terminal&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e098e337088120cd46a6eee334387a102be1a6" translate="yes" xml:space="preserve">
          <source>A few caveats apply here. First, it is illegal to export an entity which refers to a locally defined type which itself is not exported (GHC will report an error in this case). Second, signatures which come from dependencies which expose modules cannot be thinned in this way (after all, the dependency itself may need the entity); these requirements are unconditionally exported. Finally, any module reexports must refer to modules imported by the local signature (even if an inherited signature exported the module).</source>
          <target state="translated">Здесь есть несколько предостережений.Во-первых,запрещен экспорт сущности,которая относится к локально определённому типу,но которая сама по себе не экспортируется (GHC в этом случае сообщит об ошибке).Во-вторых,сигнатуры,которые приходят от зависимостей,которые обнажают модули,не могут быть прорезаны таким образом (в конце концов,зависимость сама по себе может нуждаться в сущности);эти требования экспортируются безоговорочно.Наконец,любой реэкспорт модуля должен относиться к модулям,импортируемым локальной подписью (даже если экспортируется унаследованная подпись модуля).</target>
        </trans-unit>
        <trans-unit id="ebd630669cc76942437803b1fb8107b3e2063e84" translate="yes" xml:space="preserve">
          <source>A few functors support an implementation of &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; that is more efficient than the default one.</source>
          <target state="translated">Некоторые функторы поддерживают реализацию &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; , которая более эффективна, чем стандартная.</target>
        </trans-unit>
        <trans-unit id="4e9bb325d8e94370ab23120a7426d9ee7ea2c654" translate="yes" xml:space="preserve">
          <source>A few functors support an implementation of &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; that is more efficient than the default one.</source>
          <target state="translated">Некоторые функторы поддерживают реализацию &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; , которая более эффективна, чем стандартная.</target>
        </trans-unit>
        <trans-unit id="feddbc495dd6f9bc1a1874e911421fb2030f4453" translate="yes" xml:space="preserve">
          <source>A few functors support an implementation of &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; that is more efficient than the default one.</source>
          <target state="translated">Некоторые функторы поддерживают реализацию &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; , которая более эффективна, чем стандартная.</target>
        </trans-unit>
        <trans-unit id="412108fee011dff2957aa26fc118a779db7cb3e1" translate="yes" xml:space="preserve">
          <source>A field must be in scope for the corresponding &lt;code&gt;HasField&lt;/code&gt; constraint to be solved. This retains the existing representation hiding mechanism, whereby a module may choose not to export a field, preventing client modules from accessing or updating it directly.</source>
          <target state="translated">Поле должно быть в области действия, чтобы соответствующее ограничение &lt;code&gt;HasField&lt;/code&gt; было разрешено. При этом сохраняется существующий механизм сокрытия представления, посредством которого модуль может решить не экспортировать поле, не позволяя клиентским модулям напрямую обращаться к нему или обновлять его.</target>
        </trans-unit>
        <trans-unit id="647667c77d993eaf0e249337caf2de0283b2f13c" translate="yes" xml:space="preserve">
          <source>A file created by the preprocessor.</source>
          <target state="translated">Файл,созданный препроцессором.</target>
        </trans-unit>
        <trans-unit id="10a6f21acebb16166b923fe8816f24879cac7dc7" translate="yes" xml:space="preserve">
          <source>A file descriptor registration cookie.</source>
          <target state="translated">Куки-файл регистрации дескрипторов файлов.</target>
        </trans-unit>
        <trans-unit id="b7ff63f15803ad313bc70e86c0b9af3bd034d57c" translate="yes" xml:space="preserve">
          <source>A file that may be read or written, and also may be seekable.</source>
          <target state="translated">Файл,который может быть прочитан или написан,а также может быть доступен для поиска.</target>
        </trans-unit>
        <trans-unit id="3fc8729fc9cba21c227493e06ca57c42259f5fbc" translate="yes" xml:space="preserve">
          <source>A file-header pragma must precede the &lt;code&gt;module&lt;/code&gt; keyword in the file.</source>
          <target state="translated">Прагма заголовка файла должна предшествовать ключевому слову &lt;code&gt;module&lt;/code&gt; в файле.</target>
        </trans-unit>
        <trans-unit id="ee69f3557f209a70b6dbd3e30733ef3266ad45c4" translate="yes" xml:space="preserve">
          <source>A finalizer is not always called after its weak pointer's object becomes unreachable. There are two situations that can cause this:</source>
          <target state="translated">Финишилизатор не всегда вызывается после того,как объект его слабого указателя становится недоступным.Есть две ситуации,которые могут вызвать это:</target>
        </trans-unit>
        <trans-unit id="c83751e185497b34efc04696de873a6948bad996" translate="yes" xml:space="preserve">
          <source>A finalizer is represented as a pointer to a foreign function that, at finalisation time, gets as an argument a plain pointer variant of the foreign pointer that the finalizer is associated with.</source>
          <target state="translated">Финализатор представляется как указатель на инородную функцию,которая во время завершения работы получает в качестве аргумента вариант простого указателя на инородный указатель,с которым связан финализатор.</target>
        </trans-unit>
        <trans-unit id="1df6acc2d101561b7dc4207a365d517cbb075848" translate="yes" xml:space="preserve">
          <source>A fixed-precision integer type with at least the range &lt;code&gt;[-2^29 .. 2^29-1]&lt;/code&gt;. The exact range for a given implementation can be determined by using &lt;code&gt;&lt;a href=&quot;prelude#v:minBound&quot;&gt;minBound&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:maxBound&quot;&gt;maxBound&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;&lt;a href=&quot;prelude#v:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; class.</source>
          <target state="translated">Целочисленный тип фиксированной точности с диапазоном не менее &lt;code&gt;[-2^29 .. 2^29-1]&lt;/code&gt; . Точный диапазон для данной реализации можно определить с помощью &lt;code&gt;&lt;a href=&quot;prelude#v:minBound&quot;&gt;minBound&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;prelude#v:maxBound&quot;&gt;maxBound&lt;/a&gt;&lt;/code&gt; из класса &lt;code&gt;&lt;a href=&quot;prelude#v:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5c0b209d881b38e76f482af23564dfb8494b98b" translate="yes" xml:space="preserve">
          <source>A flag to disable Safe Haskell checks:</source>
          <target state="translated">Флаг,чтобы отключить проверки Безопасного Хаскелла:</target>
        </trans-unit>
        <trans-unit id="5e83789a4d462ba5ff17578c25dbd53a56499d15" translate="yes" xml:space="preserve">
          <source>A flexible variation parameterised in a type constructor</source>
          <target state="translated">Гибкий вариант,параметризованный в конструкторе типа.</target>
        </trans-unit>
        <trans-unit id="ae7acb61d64b5e1b08a76042f669d06cf246bf79" translate="yes" xml:space="preserve">
          <source>A fmap-like operator for builder primitives, both bounded and fixed size.</source>
          <target state="translated">fmap-подобный оператор для примитивов конструктора,как ограниченного,так и фиксированного размера.</target>
        </trans-unit>
        <trans-unit id="3156de946a16b219e4da74bb691b1f317bcde8a4" translate="yes" xml:space="preserve">
          <source>A frontend plugin allows you to add new major modes to GHC. You may prefer this over a traditional program which calls the GHC API, as GHC manages a lot of parsing flags and administrative nonsense which can be difficult to manage manually. To load a frontend plugin exported by &lt;code&gt;Foo.FrontendPlugin&lt;/code&gt;, we just invoke GHC with the &lt;code&gt;--frontend ⟨module⟩&lt;/code&gt; flag as follows:</source>
          <target state="translated">Плагин внешнего интерфейса позволяет добавлять новые основные режимы в GHC. Вы можете предпочесть это традиционной программе, которая вызывает GHC API, поскольку GHC управляет множеством флагов синтаксического анализа и административной ерундой, которой может быть трудно управлять вручную. Чтобы загрузить плагин &lt;code&gt;Foo.FrontendPlugin&lt;/code&gt; интерфейса, экспортированный Foo.FrontendPlugin , мы просто вызываем GHC с флагом &lt;code&gt;--frontend ⟨module⟩&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="3516f3e003c81729d4f4111a23b0b9b529ebe196" translate="yes" xml:space="preserve">
          <source>A function &lt;code&gt;f&lt;/code&gt; is linear if: when its result is consumed &lt;em&gt;exactly once&lt;/em&gt;, then its argument is consumed &lt;em&gt;exactly once&lt;/em&gt;. Intuitively, it means that in every branch of the definition of &lt;code&gt;f&lt;/code&gt;, its argument &lt;code&gt;x&lt;/code&gt; must be used exactly once. Which can be done by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ca1012af98c96815c71a4e1c588fc523445abe" translate="yes" xml:space="preserve">
          <source>A function can request its call-site with the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; constraint. For example, we can define</source>
          <target state="translated">Функция может запросить свой сайт вызова с ограничением &lt;code&gt;&lt;a href=&quot;ghc-stack#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; . Например, мы можем определить</target>
        </trans-unit>
        <trans-unit id="85ce5ed93025fc855be629c4ba88fa8a1670bc1d" translate="yes" xml:space="preserve">
          <source>A function can request its call-site with the &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; constraint. For example, we can define</source>
          <target state="translated">Функция может запросить свой сайт вызова с ограничением &lt;code&gt;&lt;a href=&quot;ghc-stack-types#t:HasCallStack&quot;&gt;HasCallStack&lt;/a&gt;&lt;/code&gt; . Например, мы можем определить</target>
        </trans-unit>
        <trans-unit id="b827823da9db0cd7f4da87d2bab81acb959e4419" translate="yes" xml:space="preserve">
          <source>A function can request its call-site with the &lt;code&gt;HasCallStack&lt;/code&gt; constraint and access it as a Haskell value by using &lt;code&gt;callStack&lt;/code&gt;.</source>
          <target state="translated">Функция может запросить свой сайт вызова с ограничением &lt;code&gt;HasCallStack&lt;/code&gt; и получить к нему доступ как к значению Haskell с помощью &lt;code&gt;callStack&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="959c41ee1afd55fc73fec6ad553ce55c337100e6" translate="yes" xml:space="preserve">
          <source>A function that accepts another &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. That string will be assumed to directly follow the string that was passed as input to the original function, and it will in turn be decoded.</source>
          <target state="translated">Функция, которая принимает другую &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Предполагается, что эта строка следует непосредственно за строкой, переданной в качестве входных данных исходной функции, и она, в свою очередь, будет декодирована.</target>
        </trans-unit>
        <trans-unit id="da28dee5583d50081afa31b6dd484807a9fdb272" translate="yes" xml:space="preserve">
          <source>A function that accepts another &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.12.1/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. That string will be assumed to directly follow the string that was passed as input to the original function, and it will in turn be decoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146f819aeac6eebc6c002e437bb527a05441309a" translate="yes" xml:space="preserve">
          <source>A function that fills a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;, calls the continuation with the updated &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; and its computed value once its done, and signals its caller how to proceed using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:insertChunk&quot;&gt;insertChunk&lt;/a&gt;&lt;/code&gt; signals.</source>
          <target state="translated">Функция, которая заполняет &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; , вызывает продолжение с обновленным &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; и его вычисленным значением после его завершения и сигнализирует вызывающей &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt; , как продолжить, используя сигналы &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; , bufferFull или &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:insertChunk&quot;&gt;insertChunk&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9fe9550377f39c1dda07402c3e5dd3c52deb055" translate="yes" xml:space="preserve">
          <source>A function that fills a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt;, calls the continuation with the updated &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; once its done, and signals its caller how to proceed using &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:insertChunk&quot;&gt;insertChunk&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция, которая заполняет &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; , после завершения вызывает продолжение с обновленным &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:BufferRange&quot;&gt;BufferRange&lt;/a&gt;&lt;/code&gt; и сигнализирует вызывающей &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:bufferFull&quot;&gt;bufferFull&lt;/a&gt;&lt;/code&gt; , как действовать дальше, используя &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:done&quot;&gt;done&lt;/a&gt;&lt;/code&gt; , bufferFull или &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#v:insertChunk&quot;&gt;insertChunk&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a1cfa6ac431e810bfaf7276b3ed3786ed71fd59" translate="yes" xml:space="preserve">
          <source>A function that peeks a field of a C struct will be output. It will have the type &lt;code&gt;Storable b =&amp;gt; Ptr a -&amp;gt; IO b&lt;/code&gt;. The intention is that &lt;code&gt;#peek&lt;/code&gt; and &lt;code&gt;#poke&lt;/code&gt; can be used for implementing the operations of class &lt;code&gt;Storable&lt;/code&gt; for a given C struct (see the &lt;code&gt;Foreign.Storable&lt;/code&gt; module in the library documentation).</source>
          <target state="translated">Будет выведена функция, которая просматривает поле структуры C. Он будет иметь тип &lt;code&gt;Storable b =&amp;gt; Ptr a -&amp;gt; IO b&lt;/code&gt; . Предполагается, что &lt;code&gt;#peek&lt;/code&gt; и &lt;code&gt;#poke&lt;/code&gt; можно использовать для реализации операций класса &lt;code&gt;Storable&lt;/code&gt; для данной структуры C (см. Модуль &lt;code&gt;Foreign.Storable&lt;/code&gt; в документации библиотеки).</target>
        </trans-unit>
        <trans-unit id="d2ef8a015f90280c78a9e52d4eaee96c355e724d" translate="yes" xml:space="preserve">
          <source>A function to check if the current terminal uses MinTTY. Much of this code was originally authored by Phil Ruffwind and the git-for-windows project.</source>
          <target state="translated">Функция проверки,использует ли текущий терминал MinTTY.Большая часть этого кода была изначально написана Филом Раффвиндом (Phil Ruffwind)и проектом git-for-windows.</target>
        </trans-unit>
        <trans-unit id="31ba468a5f0c3b9552cf7091416e0dd2026254a0" translate="yes" xml:space="preserve">
          <source>A function to increment a counter. Taken from the paper &quot;Generalising Monads to Arrows&quot;, John Hughes (&lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/&quot;&gt;http://www.cse.chalmers.se/~rjmh/&lt;/a&gt;), November 1998:</source>
          <target state="translated">Функция увеличения счетчика. Взято из статьи Джона Хьюза &amp;laquo;Обобщение монад на стрелы&amp;raquo; ( &lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/&quot;&gt;http://www.cse.chalmers.se/~rjmh/&lt;/a&gt; ), ноябрь 1998 г .:</target>
        </trans-unit>
        <trans-unit id="05dac60b6df39a2cc430ba2715bb82eb9d50346b" translate="yes" xml:space="preserve">
          <source>A function to increment a counter. Taken from the paper &lt;em&gt;Generalising Monads to Arrows&lt;/em&gt;, John Hughes (&lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf&quot;&gt;http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf&lt;/a&gt;), November 1998:</source>
          <target state="translated">Функция увеличения счетчика. Взято из статьи Джона Хьюза &amp;laquo; &lt;em&gt;Обобщение монад до стрел&amp;raquo;&lt;/em&gt; ( &lt;a href=&quot;http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf&quot;&gt;http://www.cse.chalmers.se/~rjmh/Papers/arrows.pdf&lt;/a&gt; ), ноябрь 1998 г .:</target>
        </trans-unit>
        <trans-unit id="cba486e1fb914bff3d0a304947268224d9af2b9a" translate="yes" xml:space="preserve">
          <source>A function to increment a counter. Taken from the paper &lt;em&gt;Generalising Monads to Arrows&lt;/em&gt;, John Hughes (&lt;a href=&quot;http://www.math.chalmers.se/~rjmh/&quot;&gt;http://www.math.chalmers.se/~rjmh/&lt;/a&gt;), November 1998:</source>
          <target state="translated">Функция увеличения счетчика. Взято из статьи Джона Хьюза &amp;laquo; &lt;em&gt;Обобщение монад на стрелы&amp;raquo;&lt;/em&gt; ( &lt;a href=&quot;http://www.math.chalmers.se/~rjmh/&quot;&gt;http://www.math.chalmers.se/~rjmh/&lt;/a&gt; ), ноябрь 1998 г .:</target>
        </trans-unit>
        <trans-unit id="0853cd0ac4addf801d952885147dabfee851dfba" translate="yes" xml:space="preserve">
          <source>A function will not be split into worker and wrapper if the number of value arguments of the resulting worker exceeds both that of the original function and this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407bdfca3acdcf3e83644e05bb20353353df0c81" translate="yes" xml:space="preserve">
          <source>A functor with application, providing operations to</source>
          <target state="translated">Функтор с приложением,обеспечивающим работу с</target>
        </trans-unit>
        <trans-unit id="672c26b34e9f1b6a9e0ef2bedd270f00f9598669" translate="yes" xml:space="preserve">
          <source>A garbage collection pass has been finished.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74eb92ae3094b3fdb42750a32df490044fa7fa7c" translate="yes" xml:space="preserve">
          <source>A garbage collection pass has been started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b56072e77298e15569c00276b7c0299340640ae" translate="yes" xml:space="preserve">
          <source>A general library for representation and manipulation of versions.</source>
          <target state="translated">Общая библиотека для представления и манипулирования версиями.</target>
        </trans-unit>
        <trans-unit id="3bc20610754970931bb56e207d89ee27df2c440a" translate="yes" xml:space="preserve">
          <source>A generalization of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt; takes a mapping function that also depends on the element's index, and applies it to every element in the sequence.</source>
          <target state="translated">Обобщая &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt; принимает функцию сопоставления, которая также зависит от индекса элемента, и применяет ее к каждому элементу в последовательности.</target>
        </trans-unit>
        <trans-unit id="4ed89134d2ae1ba346467054c2cbd0888a87f736" translate="yes" xml:space="preserve">
          <source>A generalization of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt; takes a mapping function that also depends on the element's index, and applies it to every element in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c9af6b1dc84796a6a950216f71a6548a6cabaf" translate="yes" xml:space="preserve">
          <source>A generalization of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt; takes a mapping function that also depends on the element's index, and applies it to every element in the sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b0bb9b6108641f8e5517af378b5cb49562a948" translate="yes" xml:space="preserve">
          <source>A generalization of &lt;code&gt;&lt;a href=&quot;data-list#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; to an arbitrary &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt;. May fail to terminate for some values in some semigroups.</source>
          <target state="translated">Обобщение &lt;code&gt;&lt;a href=&quot;data-list#v:cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; на произвольную &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; . Может не завершиться для некоторых значений в некоторых полугруппах.</target>
        </trans-unit>
        <trans-unit id="77f905e58da65369e96fec7038c896faa77152dc" translate="yes" xml:space="preserve">
          <source>A generalized version of &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt; which uses &lt;code&gt;&lt;a href=&quot;control-monad-catch#t:ExitCase&quot;&gt;ExitCase&lt;/a&gt;&lt;/code&gt; to distinguish the different exit cases, and returns the values of both the &lt;code&gt;use&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; actions. In practice, this extra information is rarely needed, so it is often more convenient to use one of the simpler functions which are defined in terms of this one, such as &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracket&quot;&gt;bracket&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:finally&quot;&gt;finally&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:onError&quot;&gt;onError&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;control-monad-catch#v:bracketOnError&quot;&gt;bracketOnError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ff4b7505fb166fcbe7f642bd27c36a8063bf48" translate="yes" xml:space="preserve">
          <source>A generator with side-effects.</source>
          <target state="translated">Генератор с побочными эффектами.</target>
        </trans-unit>
        <trans-unit id="862450f7f65fc829d17b888581dcf9423b4a7480" translate="yes" xml:space="preserve">
          <source>A generator ⟨g⟩ &lt;em&gt;depends&lt;/em&gt; on a textually following generator ⟨g&amp;rsquo;⟩, if</source>
          <target state="translated">Генератор g⟩ &lt;em&gt;зависит&lt;/em&gt; от текстуально следующего генератора g'⟩, если</target>
        </trans-unit>
        <trans-unit id="62ae38d3598e1153af86caff741ce7f45b481a95" translate="yes" xml:space="preserve">
          <source>A generic function is defined by creating a class and giving instances for each of the representation types of &lt;code&gt;GHC.Generics&lt;/code&gt;. As an example we show generic serialization:</source>
          <target state="translated">Универсальная функция определяется путем создания класса и предоставления экземпляров для каждого из типов представления &lt;code&gt;GHC.Generics&lt;/code&gt; . В качестве примера мы показываем универсальную сериализацию:</target>
        </trans-unit>
        <trans-unit id="1c195a4fb48a9a5e0bec2f551debfe0bebac3b3f" translate="yes" xml:space="preserve">
          <source>A generic monadic transformation that maps over the immediate subterms</source>
          <target state="translated">Общее монадское преобразование,которое отображает ближайшие субботы.</target>
        </trans-unit>
        <trans-unit id="2371a81d45c2bb3b8a13c0d110026806d7062e4b" translate="yes" xml:space="preserve">
          <source>A generic query that processes one child by index (zero-based)</source>
          <target state="translated">Общий запрос,который обрабатывает один дочерний элемент по индексу (на основе нуля).</target>
        </trans-unit>
        <trans-unit id="b30dda47587e5c218c84c8765cbfb57d7c32ee07" translate="yes" xml:space="preserve">
          <source>A generic query that processes the immediate subterms and returns a list of results. The list is given in the same order as originally specified in the declaration of the data constructors.</source>
          <target state="translated">Общий запрос,который обрабатывает немедленные подзапросы и возвращает список результатов.Список дается в том же порядке,который был изначально указан в декларации конструкторов данных.</target>
        </trans-unit>
        <trans-unit id="51d2a5deead9d5e63a49652af5db4d773df15f2a" translate="yes" xml:space="preserve">
          <source>A generic query with a left-associative binary operator</source>
          <target state="translated">Общий запрос с лево-ассоциативным двоичным оператором</target>
        </trans-unit>
        <trans-unit id="f172406f53434c2c85e3e88b3b734c76fe4cbf1f" translate="yes" xml:space="preserve">
          <source>A generic query with a right-associative binary operator</source>
          <target state="translated">Общий запрос с право-ассоциативным двоичным оператором</target>
        </trans-unit>
        <trans-unit id="aa8f907ef342f61225b3aaaca537bb6131e08eed" translate="yes" xml:space="preserve">
          <source>A generic transformation that maps over the immediate subterms</source>
          <target state="translated">Общее преобразование,которое отображает немедленные подзаголовки.</target>
        </trans-unit>
        <trans-unit id="263bda9728b8670fff6c73f321e0c1114a53a098" translate="yes" xml:space="preserve">
          <source>A graph where the out-list references unspecified nodes (&lt;code&gt;'c'&lt;/code&gt;), these are ignored.</source>
          <target state="translated">Граф, в котором исходящий список ссылается на неуказанные узлы ( &lt;code&gt;'c'&lt;/code&gt; ), они игнорируются.</target>
        </trans-unit>
        <trans-unit id="547e608af651f4f8ae6ad4968c6a78fb1a5f9911" translate="yes" xml:space="preserve">
          <source>A graph with 3 vertices: (&quot;a&quot;) -&amp;gt; (&quot;b&quot;) -&amp;gt; (&quot;c&quot;)</source>
          <target state="translated">Граф с 3 вершинами: (&quot;a&quot;) -&amp;gt; (&quot;b&quot;) -&amp;gt; (&quot;c&quot;)</target>
        </trans-unit>
        <trans-unit id="12b3806c7a4a6d3f01bcf0d2c455af966755af91" translate="yes" xml:space="preserve">
          <source>A group of implicit-parameter bindings may occur anywhere a normal group of Haskell bindings can occur, except at top level. That is, they can occur in a &lt;code&gt;let&lt;/code&gt; (including in a list comprehension, or do-notation, or pattern guards), or a &lt;code&gt;where&lt;/code&gt; clause. Note the following points:</source>
          <target state="translated">Группа привязок неявных параметров может встречаться везде, где возможна обычная группа привязок Haskell, за исключением верхнего уровня. То есть они могут встречаться в &lt;code&gt;let&lt;/code&gt; (в том числе в понимании списка, или в нотации do, или в защите шаблонов) или в предложении &lt;code&gt;where&lt;/code&gt; . Обратите внимание на следующие моменты:</target>
        </trans-unit>
        <trans-unit id="65051f92e572963e4acdb9bb33b4d2b90e5a8b97" translate="yes" xml:space="preserve">
          <source>A handle managing input from the Haskell program's standard input channel.</source>
          <target state="translated">Ручка,управляющая входом со стандартного входного канала программы Хаскелла.</target>
        </trans-unit>
        <trans-unit id="e751926f8fa8be7abe2938c68d0bde4c6028d510" translate="yes" xml:space="preserve">
          <source>A handle managing output to the Haskell program's standard error channel.</source>
          <target state="translated">Ручка,управляющая выводом в стандартный канал ошибок программы Хаскелла.</target>
        </trans-unit>
        <trans-unit id="2d2d9310b94785cb31fe1e4c863bde58a3090d7e" translate="yes" xml:space="preserve">
          <source>A handle managing output to the Haskell program's standard output channel.</source>
          <target state="translated">Ручка,управляющая выводом на стандартный выходной канал программы Хаскелла.</target>
        </trans-unit>
        <trans-unit id="d7a3e5b5484f784fade78cfdf6ff6413b1996492" translate="yes" xml:space="preserve">
          <source>A handle to a process, which can be used to wait for termination of the process using &lt;code&gt;&lt;a href=&quot;system-process#v:waitForProcess&quot;&gt;waitForProcess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;system-process#v:waitForProcess&quot;&gt;waitForProcess&lt;/a&gt;&lt;/code&gt; процесса, который можно использовать для ожидания завершения процесса с помощью waitForProcess .</target>
        </trans-unit>
        <trans-unit id="703580b3dc907bb3f23c64f76055da6a35b3d742" translate="yes" xml:space="preserve">
          <source>A handler for a decoding error.</source>
          <target state="translated">Обработчик ошибки декодирования.</target>
        </trans-unit>
        <trans-unit id="e5858ba1a84179526a85d088788e5ed04cd3ca67" translate="yes" xml:space="preserve">
          <source>A handler for an encoding error.</source>
          <target state="translated">Обработчик ошибки кодирования.</target>
        </trans-unit>
        <trans-unit id="a61fb6766aecc9004ee1afd5c6ce82d376d98ad4" translate="yes" xml:space="preserve">
          <source>A handler function to handle previous errors and return to normal execution. A common idiom is:</source>
          <target state="translated">Функция обработчика для обработки предыдущих ошибок и возврата к нормальному выполнению.Общая идиома:</target>
        </trans-unit>
        <trans-unit id="be659a8b5b88eca4628da85b8cd673c423ac389e" translate="yes" xml:space="preserve">
          <source>A heap object is &lt;em&gt;reachable&lt;/em&gt; if:</source>
          <target state="translated">Объект кучи &lt;em&gt;доступен,&lt;/em&gt; если:</target>
        </trans-unit>
        <trans-unit id="ea694877df8a08ed123b92ef6005435d0a5c6bc8" translate="yes" xml:space="preserve">
          <source>A heap residency census will follow. Since events may only be up to 2^16^ bytes in length a single sample may need to be split among multiple &lt;code&gt;EVENT_HEAP_PROF_SAMPLE&lt;/code&gt; events. The precise format of the census entries is determined by the break-down type.</source>
          <target state="translated">Будет проведена перепись населения кучи. Поскольку длина событий может составлять не более 2 ^ 16 ^ байтов, может потребоваться разделение одной выборки на несколько событий &lt;code&gt;EVENT_HEAP_PROF_SAMPLE&lt;/code&gt; . Точный формат записей переписи определяется типом разбивки.</target>
        </trans-unit>
        <trans-unit id="f721eb8b4b3c875c9b3039562674d9428b85321c" translate="yes" xml:space="preserve">
          <source>A helper module that defines some language definitions that can be used to instantiate a token parser (see &lt;a href=&quot;text-parsec-token&quot;&gt;Text.Parsec.Token&lt;/a&gt;).</source>
          <target state="translated">Вспомогательный модуль, который определяет некоторые определения языка, которые можно использовать для создания экземпляра анализатора токенов (см. &lt;a href=&quot;text-parsec-token&quot;&gt;Text.Parsec.Token&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="020709edaa36d2287275fd9547b133a13203df95" translate="yes" xml:space="preserve">
          <source>A helper module to parse &quot;expressions&quot;. Builds a parser given a table of operators and associativities.</source>
          <target state="translated">Вспомогательный модуль для разбора &quot;выражений&quot;.Сборка синтаксического анализатора с учетом таблицы операторов и ассоциативностей.</target>
        </trans-unit>
        <trans-unit id="150ba12f35ac6072514bd31b5f915a96dc42b4c6" translate="yes" xml:space="preserve">
          <source>A helper module to parse lexical elements (tokens). See &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; for a description of how to use it.</source>
          <target state="translated">Вспомогательный модуль для разбора лексических элементов (токенов). См. &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; для описания того, как его использовать.</target>
        </trans-unit>
        <trans-unit id="0383b225a4de83038268fe176e36b5324f8b57bd" translate="yes" xml:space="preserve">
          <source>A hs-boot file is written in a subset of Haskell:</source>
          <target state="translated">Файл hs-boot записан в подмножестве Haskell:</target>
        </trans-unit>
        <trans-unit id="beb39b13efdd6752b158de82a3a13e416589e21f" translate="yes" xml:space="preserve">
          <source>A hs-boot file need only contain the bare minimum of information needed to get the bootstrapping process started. For example, it doesn&amp;rsquo;t need to contain declarations for &lt;em&gt;everything&lt;/em&gt; that module &lt;code&gt;A&lt;/code&gt; exports, only the things required by the module(s) that import &lt;code&gt;A&lt;/code&gt; recursively.</source>
          <target state="translated">Файл hs-boot должен содержать только самый минимум информации, необходимой для запуска процесса начальной загрузки. Например, он не должен содержать объявления для &lt;em&gt;всего,&lt;/em&gt; что экспортирует модуль &lt;code&gt;A&lt;/code&gt; , только то, что требуется модулям, рекурсивно импортирующим &lt;code&gt;A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aabdc6334ac103ac81c28f41f91111e372570439" translate="yes" xml:space="preserve">
          <source>A hypothetical application of the above is to validate a structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99d62d7c94b294b753091beb25073b072165f534" translate="yes" xml:space="preserve">
          <source>A key distinction is between left-associative and right-associative folds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6d3cf5164d3e0790c51b498cf4792069b594e1" translate="yes" xml:space="preserve">
          <source>A key feature of lazy ByteStrings is the means to manipulate large or unbounded streams of data without requiring the entire sequence to be resident in memory. To take advantage of this you have to write your functions in a lazy streaming style, e.g. classic pipeline composition. The default I/O chunk size is 32k, which should be good in most circumstances.</source>
          <target state="translated">Ключевой особенностью ленивого ByteStrings является возможность манипулировать большими или неограниченными потоками данных,не требуя,чтобы вся последовательность была резидентной в памяти.Чтобы воспользоваться этим,вы должны написать свои функции в ленивом потоковом стиле,например,классическую трубопроводную композицию.По умолчанию размер фрагмента ввода/вывода составляет 32k,что должно быть хорошо в большинстве случаев.</target>
        </trans-unit>
        <trans-unit id="325a2bf823d17d06d93a99292962d2fd916a91fe" translate="yes" xml:space="preserve">
          <source>A key for &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtr&quot;&gt;StaticPtr&lt;/a&gt;&lt;/code&gt;s that can be serialized and used with &lt;code&gt;&lt;a href=&quot;ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;unsafeLookupStaticPtr&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Ключ для &lt;code&gt;&lt;a href=&quot;ghc-staticptr#t:StaticPtr&quot;&gt;StaticPtr&lt;/a&gt;&lt;/code&gt; , который можно сериализовать и использовать с &lt;code&gt;&lt;a href=&quot;ghc-staticptr#v:unsafeLookupStaticPtr&quot;&gt;unsafeLookupStaticPtr&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e03259c4d4eaef67f0780d176664c739ae643fea" translate="yes" xml:space="preserve">
          <source>A key issue with lists, when used generatively as &lt;em&gt;iterators&lt;/em&gt;, rather than as poor-man's containers (see &lt;a href=&quot;#uselistsnot&quot;&gt;[1]&lt;/a&gt;), is that such iterators tend to consume memory when used more than once. A single traversal of a list-as-iterator will run in constant space, but as soon as the list is retained for reuse, its entire element sequence is stored in memory, and the second traversal reads the copy, rather than regenerates the elements. It is sometimes better to recompute the elements rather than memoise the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036affe5e2067ef8e5a7e25cb46bbfbf0c7d82cb" translate="yes" xml:space="preserve">
          <source>A kind signature is considered to be outermost regardless of redundant parentheses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b381dc7ee35453cc6200cb73ab6f7a29da015f" translate="yes" xml:space="preserve">
          <source>A kind variable can also be bound implicitly in a LHS type pattern, as in this example:</source>
          <target state="translated">Переменная вида также может быть неявно связана в шаблоне типа LHS,как в данном примере:</target>
        </trans-unit>
        <trans-unit id="fed1bf023551f5e183a777d4ad8f17c745a4596e" translate="yes" xml:space="preserve">
          <source>A lazier version of Data.List.intersperse. The other version causes space leaks!</source>
          <target state="translated">Более ленивая версия Data.List.intersperse.Другая версия вызывает утечку места!</target>
        </trans-unit>
        <trans-unit id="54d1e3a19df5bd11488b091ae905ebe5fef9f311" translate="yes" xml:space="preserve">
          <source>A lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Ленивая &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; содержит 8-битные байты или с помощью операций из &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; может быть интерпретирована как содержащая 8-битные символы.</target>
        </trans-unit>
        <trans-unit id="5a2fd64b80af2ff85d7158cad974f3b8d6d3fa1e" translate="yes" xml:space="preserve">
          <source>A lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Ленивая &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; содержит 8-битные байты или с помощью операций из &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; может быть интерпретирована как содержащая 8-битные символы.</target>
        </trans-unit>
        <trans-unit id="4f64b98de52b0b6fa53b16083b06816797fde862" translate="yes" xml:space="preserve">
          <source>A lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; contains 8-bit bytes, or by using the operations from &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; it can be interpreted as containing 8-bit characters.</source>
          <target state="translated">Ленивая &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; содержит 8-битные байты или с помощью операций из &lt;a href=&quot;data-bytestring-lazy-char8&quot;&gt;Data.ByteString.Lazy.Char8&lt;/a&gt; может быть интерпретирована как содержащая 8-битные символы.</target>
        </trans-unit>
        <trans-unit id="15d0c3d1a9e330b475d899c85089d3a45d5191af" translate="yes" xml:space="preserve">
          <source>A leading (or &quot;high&quot;) surrogate code unit (0xD800&amp;ndash;0xDBFF) must always be followed by a trailing (or &quot;low&quot;) surrogate code unit (0xDC00-0xDFFF). A trailing surrogate code unit must always be preceded by a leading surrogate code unit.</source>
          <target state="translated">За ведущей (или &amp;laquo;высокой&amp;raquo;) единицей суррогатного кода (0xD800&amp;ndash;0xDBFF) всегда должна следовать завершающая (или &amp;laquo;младшая&amp;raquo;) единица суррогатного кода (0xDC00-0xDFFF). Завершающей единице суррогатного кода всегда должна предшествовать ведущая единица суррогатного кода.</target>
        </trans-unit>
        <trans-unit id="7f944c37522b758dfc630e9f692d2c4ea18427aa" translate="yes" xml:space="preserve">
          <source>A left fold of a structure that is infinite on the right cannot terminate, even when for any finite input the fold just returns the initial accumulator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49f7c0bc99a71677d388689dcc2d6ba4d8f6ecf2" translate="yes" xml:space="preserve">
          <source>A left fold over the elements</source>
          <target state="translated">Левый склад над элементами</target>
        </trans-unit>
        <trans-unit id="875903e7616532ab0681456be555fa6ab6806498" translate="yes" xml:space="preserve">
          <source>A left fold over the elements with no starting value</source>
          <target state="translated">Левый сгиб над элементами без стартового значения.</target>
        </trans-unit>
        <trans-unit id="063a39e2610d5a3659863c33a33d21aa0ae832bd" translate="yes" xml:space="preserve">
          <source>A left-associative variant of &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldMap&quot;&gt;foldMap&lt;/a&gt;&lt;/code&gt; that is strict in the accumulator. Use this method for strict reduction when partial results are merged via &lt;code&gt;(&lt;a href=&quot;data-monoid#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13379849e3da0988f874c759315290aea7600c73" translate="yes" xml:space="preserve">
          <source>A less contrived example shows the use of &lt;code&gt;cases&lt;/code&gt; instead of &lt;code&gt;lets&lt;/code&gt; to get stricter code (a good thing):</source>
          <target state="translated">Менее надуманный пример показывает использование &lt;code&gt;cases&lt;/code&gt; вместо &lt;code&gt;lets&lt;/code&gt; получить более строгий код (хорошая вещь):</target>
        </trans-unit>
        <trans-unit id="fd8adda1f5cdce432835cce105d7c84fdbd2dac1" translate="yes" xml:space="preserve">
          <source>A lexer for the haskell language.</source>
          <target state="translated">Лексер для языка хаскеллов.</target>
        </trans-unit>
        <trans-unit id="6b7e5a3a0abc0bd6645cddccc0976a9582cc8903" translate="yes" xml:space="preserve">
          <source>A lexer for the mondrian language.</source>
          <target state="translated">Лексер для языка мондрий.</target>
        </trans-unit>
        <trans-unit id="1726ba2f885b524251e70e59cf6b4178dcd2f11f" translate="yes" xml:space="preserve">
          <source>A library for &lt;code&gt;&lt;a href=&quot;system-filepath-posix#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; manipulations, using Posix style paths on all platforms. Importing &lt;a href=&quot;system-filepath&quot;&gt;System.FilePath&lt;/a&gt; is usually better.</source>
          <target state="translated">Библиотека для &lt;code&gt;&lt;a href=&quot;system-filepath-posix#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; манипуляций, используя пути стиля Posix на всех платформах. Обычно лучше импортировать &lt;a href=&quot;system-filepath&quot;&gt;System.FilePath&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d22f4e61fa94ecb3258b9cf1c0bad6a5edb3b1fc" translate="yes" xml:space="preserve">
          <source>A library for &lt;code&gt;&lt;a href=&quot;system-filepath-windows#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; manipulations, using Windows style paths on all platforms. Importing &lt;a href=&quot;system-filepath&quot;&gt;System.FilePath&lt;/a&gt; is usually better.</source>
          <target state="translated">Библиотека для манипуляций с &lt;code&gt;&lt;a href=&quot;system-filepath-windows#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; , использующая пути в стиле Windows на всех платформах. Обычно лучше импортировать &lt;a href=&quot;system-filepath&quot;&gt;System.FilePath&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf071838763971ee6b13aa8cf3fa8382989daf38" translate="yes" xml:space="preserve">
          <source>A lifted BigNat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b736f738e6fcd73b3f446e3ef506bfbfaf5591f3" translate="yes" xml:space="preserve">
          <source>A line recording the dependence of the object file on the source file.</source>
          <target state="translated">Строка,записывающая зависимость объектного файла от исходного файла.</target>
        </trans-unit>
        <trans-unit id="dc910a705047942aa6596ecdf81615bb378b5bf0" translate="yes" xml:space="preserve">
          <source>A list containing child cost-centre stacks.</source>
          <target state="translated">Список,содержащий детские стеки.</target>
        </trans-unit>
        <trans-unit id="a5dad55926d22c2d61986b7de9e0d931acff5efa" translate="yes" xml:space="preserve">
          <source>A list of all known keys.</source>
          <target state="translated">Список всех известных ключей.</target>
        </trans-unit>
        <trans-unit id="bc1c4d836fb10a25fe5cebecf7f03642a53de4ec" translate="yes" xml:space="preserve">
          <source>A list of all supported language extensions can be obtained by invoking &lt;code&gt;ghc --supported-extensions&lt;/code&gt; (see &lt;a href=&quot;../using#ghc-flag---supported-extensions&quot;&gt;&lt;code&gt;--supported-extensions&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a068c69873917f77c92591cc3eed569ea30b4268" translate="yes" xml:space="preserve">
          <source>A list of all supported language extensions can be obtained by invoking &lt;code&gt;ghc --supported-extensions&lt;/code&gt; (see &lt;a href=&quot;using#ghc-flag---supported-extensions&quot;&gt;&lt;code&gt;--supported-extensions&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Список всех поддерживаемых языковых расширений можно получить, вызвав &lt;code&gt;ghc --supported-extensions&lt;/code&gt; (см. &lt;a href=&quot;using#ghc-flag---supported-extensions&quot;&gt; &lt;code&gt;--supported-extensions&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9020f71c1c4e09df1fb37e8eb8a85e9c837975c2" translate="yes" xml:space="preserve">
          <source>A list of separate command line arguments to the program</source>
          <target state="translated">Список отдельных аргументов командной строки к программе</target>
        </trans-unit>
        <trans-unit id="5f31632c64a2a83d396013e71426f91b56565679" translate="yes" xml:space="preserve">
          <source>A list of the program&amp;rsquo;s cost centres</source>
          <target state="translated">Список центров затрат программы</target>
        </trans-unit>
        <trans-unit id="73940efd2676f199ed1ac86bfd84a3386d46652a" translate="yes" xml:space="preserve">
          <source>A list of zero or more usernames that are members (gr_mem)</source>
          <target state="translated">Список нулевых и более имен пользователей,которые являются членами (gr_mem).</target>
        </trans-unit>
        <trans-unit id="bb14c26279814204dd8eba9acbc9f2cc037cda91" translate="yes" xml:space="preserve">
          <source>A list producer that can be fused with &lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;. This function is merely</source>
          <target state="translated">Производитель списков, который можно объединить с &lt;code&gt;&lt;a href=&quot;ghc-base#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; . Эта функция просто</target>
        </trans-unit>
        <trans-unit id="7609384306d65c392d73d1f946dd577e1543b1ed" translate="yes" xml:space="preserve">
          <source>A list producer that can be fused with &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;. This function is merely</source>
          <target state="translated">Производитель списков, который можно объединить с &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; . Эта функция просто</target>
        </trans-unit>
        <trans-unit id="3157123a0be7934993229fbac35bb2de4bfc150e" translate="yes" xml:space="preserve">
          <source>A literal POSIX file path</source>
          <target state="translated">Буквальный путь к POSIX-файлу</target>
        </trans-unit>
        <trans-unit id="616e39ecf2bde53027e5f642d48b139e07322230" translate="yes" xml:space="preserve">
          <source>A local time together with a time zone.</source>
          <target state="translated">Местное время вместе с часовым поясом.</target>
        </trans-unit>
        <trans-unit id="edcfe1b56e989ad66407f462968b76cf02bda336" translate="yes" xml:space="preserve">
          <source>A location in the original program source.</source>
          <target state="translated">Местоположение в оригинальном источнике программы.</target>
        </trans-unit>
        <trans-unit id="8d5a785c724a8eba79d22f8cfdbe656e03ea3ef1" translate="yes" xml:space="preserve">
          <source>A log message from the runtime system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb40e6b7e0ea76eae404b014920691442447d08" translate="yes" xml:space="preserve">
          <source>A logically uninhabited data type, used to indicate that a given term should not exist.</source>
          <target state="translated">Логически необитаемый тип данных,используемый для обозначения того,что данный термин не должен существовать.</target>
        </trans-unit>
        <trans-unit id="4fae0237e62dbac5cce6d600545ee02ceb780eef" translate="yes" xml:space="preserve">
          <source>A long GC sync can be caused by a mutator thread that is inside an &lt;code&gt;unsafe&lt;/code&gt; FFI call, or running in a loop that doesn&amp;rsquo;t allocate memory and so doesn&amp;rsquo;t yield. To fix the former, make the call &lt;code&gt;safe&lt;/code&gt;, and to fix the latter, either avoid calling the code in question or compile it with &lt;a href=&quot;using-optimisation#ghc-flag--fomit-yields&quot;&gt;&lt;code&gt;-fomit-yields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Долгая синхронизация GC может быть вызвана потоком мутатора, который находится внутри &lt;code&gt;unsafe&lt;/code&gt; вызова FFI или работает в цикле, который не выделяет память и поэтому не дает результатов. Чтобы исправить первое, сделайте вызов &lt;code&gt;safe&lt;/code&gt; , а для исправления последнего либо избегайте вызова рассматриваемого кода, либо скомпилируйте его с помощью &lt;a href=&quot;using-optimisation#ghc-flag--fomit-yields&quot;&gt; &lt;code&gt;-fomit-yields&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="05cad06e7cb8bda737ea7d67ec36667703119c82" translate="yes" xml:space="preserve">
          <source>A low-level I/O provider where the data is bytes in memory.</source>
          <target state="translated">Провайдер низкоуровневых входов/выходов,где данные находятся в байтах в памяти.</target>
        </trans-unit>
        <trans-unit id="29a420d2bda1c2230ff18f10c36a8d31a7dc978a" translate="yes" xml:space="preserve">
          <source>A low-level I/O provider where the data is bytes in memory. The Word64 offsets currently have no effect on POSIX system or consoles where the implicit behaviour of the C runtime is assume to move the file pointer on every read/write without needing an explicit seek.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c87eeefae8a2c24218a0a414358507070126796" translate="yes" xml:space="preserve">
          <source>A low-tech way: grep (search) your interface files for overloaded type signatures. You can view interface files using the &lt;code&gt;--show-iface ⟨file⟩&lt;/code&gt; option (see &lt;a href=&quot;separate_compilation#hi-options&quot;&gt;Other options related to interface files&lt;/a&gt;).</source>
          <target state="translated">Нетехнологичный способ: grep (поиск) файлов интерфейса на предмет подписей перегруженного типа. Вы можете просматривать файлы интерфейса, используя параметр &lt;code&gt;--show-iface ⟨file⟩&lt;/code&gt; (см. &lt;a href=&quot;separate_compilation#hi-options&quot;&gt;Другие параметры, относящиеся к файлам интерфейса&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f6dadb395de3d2b9d69bc143f67ef70d410699b4" translate="yes" xml:space="preserve">
          <source>A lower-case identifier &lt;code&gt;foo&lt;/code&gt;. GHC assumes that the main function is &lt;code&gt;Main.foo&lt;/code&gt;.</source>
          <target state="translated">Идентификатор в нижнем регистре &lt;code&gt;foo&lt;/code&gt; . GHC предполагает, что основная функция - &lt;code&gt;Main.foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68062c83cacf82d9a90ab7e0cc7ea387cf2a996a" translate="yes" xml:space="preserve">
          <source>A map of integers to values &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Карта целых чисел со значениями &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65d761f61d1d8b61018c0927736bc1f2164bec10" translate="yes" xml:space="preserve">
          <source>A masking character; e.g., &lt;code&gt;Just '*'&lt;/code&gt;</source>
          <target state="translated">Маскирующий персонаж; например, &lt;code&gt;Just '*'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec043ff4717214a6d38bc8fbb175d1fdb2e2c0b5" translate="yes" xml:space="preserve">
          <source>A maximal set of mutually reachable vertices.</source>
          <target state="translated">Максимальный набор взаимно достижимых вершин.</target>
        </trans-unit>
        <trans-unit id="11966b51fe1d27560b215138baa79271c17219dd" translate="yes" xml:space="preserve">
          <source>A memory pool.</source>
          <target state="translated">Бассейн памяти.</target>
        </trans-unit>
        <trans-unit id="068781bc49acfb4cc274e15ab83d09598ea7b38a" translate="yes" xml:space="preserve">
          <source>A minimal &lt;code&gt;&lt;a href=&quot;data-bifoldable#t:Bifoldable&quot;&gt;Bifoldable&lt;/a&gt;&lt;/code&gt; definition consists of either &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldMap&quot;&gt;bifoldMap&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldr&quot;&gt;bifoldr&lt;/a&gt;&lt;/code&gt;. When defining more than this minimal set, one should ensure that the following identities hold:</source>
          <target state="translated">Минимальное &lt;code&gt;&lt;a href=&quot;data-bifoldable#t:Bifoldable&quot;&gt;Bifoldable&lt;/a&gt;&lt;/code&gt; определение состоит либо из &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldMap&quot;&gt;bifoldMap&lt;/a&gt;&lt;/code&gt; , либо из &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldr&quot;&gt;bifoldr&lt;/a&gt;&lt;/code&gt; . При определении большего, чем этот минимальный набор, следует убедиться, что выполняются следующие тождества:</target>
        </trans-unit>
        <trans-unit id="3ca5616e71a7726aa5bd2663b7f524e751a256d8" translate="yes" xml:space="preserve">
          <source>A minimal complete definition must include implementations of &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and of either &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt;. If it defines both, then they must behave the same as their default definitions:</source>
          <target state="translated">Минимальное полное определение должно включать в себя реализации &lt;code&gt;&lt;a href=&quot;control-applicative#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; и либо &lt;code&gt;&lt;a href=&quot;control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; , либо &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; . Если он определяет оба, тогда они должны вести себя так же, как их определения по умолчанию:</target>
        </trans-unit>
        <trans-unit id="c69118482cffeb2b76367b869803b6611f4079d3" translate="yes" xml:space="preserve">
          <source>A minimal complete definition must include implementations of &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and of either &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt;. If it defines both, then they must behave the same as their default definitions:</source>
          <target state="translated">Минимальное полное определение должно включать в себя реализации &lt;code&gt;&lt;a href=&quot;ghc-base#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; и либо &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; , либо &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; . Если он определяет оба, тогда они должны вести себя так же, как их определения по умолчанию:</target>
        </trans-unit>
        <trans-unit id="a11f1b1fc9f85e87f7328e93a0fe87efd1a62782" translate="yes" xml:space="preserve">
          <source>A minimal complete definition must include implementations of &lt;code&gt;&lt;a href=&quot;prelude#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; and of either &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt;. If it defines both, then they must behave the same as their default definitions:</source>
          <target state="translated">Минимальное полное определение должно включать в себя реализации &lt;code&gt;&lt;a href=&quot;prelude#v:pure&quot;&gt;pure&lt;/a&gt;&lt;/code&gt; и либо &lt;code&gt;&lt;a href=&quot;prelude#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; , либо &lt;code&gt;&lt;a href=&quot;control-applicative#v:liftA2&quot;&gt;liftA2&lt;/a&gt;&lt;/code&gt; . Если он определяет оба, тогда они должны вести себя так же, как их определения по умолчанию:</target>
        </trans-unit>
        <trans-unit id="b8c72a19154aaf8d59b6b3ec9d5c79b6d054c147" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Зеркальное отображение &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9728f4924a2cece6cd9f3bd1f1fb2a3d7d63e51" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228cb9e2e60bf9edb999f975c52ca86b23a2deaa" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2014f989a9d241989c62fe055f679a0c74c7b1b5" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Зеркальное отображение &lt;code&gt;&lt;a href=&quot;control-arrow#v:first&quot;&gt;first&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11fd433555f19114cd7accfaf208363211897740" translate="yes" xml:space="preserve">
          <source>A mirror image of &lt;code&gt;&lt;a href=&quot;control-arrow#v:left&quot;&gt;left&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Зеркальное отображение &lt;code&gt;&lt;a href=&quot;control-arrow#v:left&quot;&gt;left&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b38d2272521d203ef9738b678b691090ceb2c2a7" translate="yes" xml:space="preserve">
          <source>A mode that determines the effect of &lt;code&gt;&lt;a href=&quot;system-io#v:hSeek&quot;&gt;hSeek&lt;/a&gt;&lt;/code&gt;&lt;code&gt;hdl mode i&lt;/code&gt;.</source>
          <target state="translated">Режим, определяющий эффект &lt;code&gt;&lt;a href=&quot;system-io#v:hSeek&quot;&gt;hSeek&lt;/a&gt;&lt;/code&gt; &lt;code&gt;hdl mode i&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f6374097118c76813d909ba13b814c9cd41e81e" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; in a package &lt;code&gt;P&lt;/code&gt; is trusted by a client C if and only if:</source>
          <target state="translated">Модуль &lt;code&gt;M&lt;/code&gt; в пакете &lt;code&gt;P&lt;/code&gt; пользуется доверием со стороны клиента C тогда и только тогда, когда:</target>
        </trans-unit>
        <trans-unit id="79f16cbaafdc9bfd2ba1ca22d71d2c674b761102" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; that is &lt;code&gt;{-# SOURCE #-}&lt;/code&gt;-imported in a program will usually also be ordinarily imported elsewhere. If not, &lt;code&gt;ghc --make&lt;/code&gt; automatically adds &lt;code&gt;M&lt;/code&gt; to the set of modules it tries to compile and link, to ensure that &lt;code&gt;M&lt;/code&gt;&amp;lsquo;s implementation is included in the final program.</source>
          <target state="translated">Модуль &lt;code&gt;M&lt;/code&gt; , который &lt;code&gt;{-# SOURCE #-}&lt;/code&gt; -импортирован в программу, обычно также обычно импортируется в другое место. Если нет, &lt;code&gt;ghc --make&lt;/code&gt; автоматически добавляет &lt;code&gt;M&lt;/code&gt; к набору модулей, которые он пытается скомпилировать и связать, чтобы гарантировать, что реализация &lt;code&gt;M&lt;/code&gt; включена в окончательную программу.</target>
        </trans-unit>
        <trans-unit id="987f7b14a3141b967b7850d7f7657d68e62459f9" translate="yes" xml:space="preserve">
          <source>A module &lt;code&gt;M&lt;/code&gt; that is &lt;code&gt;{-# SOURCE #-}&lt;/code&gt;-imported in a program will usually also be ordinarily imported elsewhere. If not, &lt;code&gt;ghc --make&lt;/code&gt; automatically adds &lt;code&gt;M&lt;/code&gt; to the set of modules it tries to compile and link, to ensure that &lt;code&gt;M&lt;/code&gt;&amp;rsquo;s implementation is included in the final program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519fe32d3643ce1e03ac2bab30bb1bdcc52d189b" translate="yes" xml:space="preserve">
          <source>A module containing &lt;em&gt;unsafe&lt;/em&gt; operations, for &lt;em&gt;very very careful&lt;/em&gt; use in &lt;em&gt;heavily tested&lt;/em&gt; code.</source>
          <target state="translated">Модуль, содержащий &lt;em&gt;небезопасные&lt;/em&gt; операции, для &lt;em&gt;очень осторожного&lt;/em&gt; использования в &lt;em&gt;тщательно протестированном&lt;/em&gt; коде.</target>
        </trans-unit>
        <trans-unit id="461ba4ff0cf5d9d0e690d1653b0296554ff09c30" translate="yes" xml:space="preserve">
          <source>A module containing private &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; internals. This exposes the &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; representation and low level construction functions. Modules which extend the &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; system may need to use this module.</source>
          <target state="translated">Модуль, содержащий внутреннее частное &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; содержимое. Это предоставляет функции &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; представления и построения нижнего уровня. Модули, расширяющие &lt;code&gt;&lt;a href=&quot;data-text-internal#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; систему, могут нуждаться в использовании этого модуля.</target>
        </trans-unit>
        <trans-unit id="9355e89a95e098cf87e4b9b4d4b0c731bdb2c1ad" translate="yes" xml:space="preserve">
          <source>A module containing private &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; internals. This exposes the &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; representation and low level construction functions. Modules which extend the &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; system may need to use this module.</source>
          <target state="translated">Модуль, содержащий внутреннее частное &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; содержимое. Это предоставляет функции &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; представления и построения нижнего уровня. Модули, расширяющие &lt;code&gt;&lt;a href=&quot;data-text-internal-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; систему, могут нуждаться в использовании этого модуля.</target>
        </trans-unit>
        <trans-unit id="d6002f28ce7de42f2068e2f04b1e0c26f91c712e" translate="yes" xml:space="preserve">
          <source>A module containing semi-public &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; internals. This exposes the &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; representation and low level construction functions. As such all the functions in this module are unsafe. The API is also not stable.</source>
          <target state="translated">Модуль, содержащий &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; внутренние компоненты ByteString . Это предоставляет представление &lt;code&gt;&lt;a href=&quot;data-bytestring-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; и функции построения нижнего уровня. Таким образом, все функции в этом модуле небезопасны. API тоже нестабилен.</target>
        </trans-unit>
        <trans-unit id="1bd1a012965931778304a7fe9b5fbe73d7d293aa" translate="yes" xml:space="preserve">
          <source>A module containing semi-public &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; internals. This exposes the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; representation and low level construction functions. Modules which extend the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; system will need to use this module while ideally most users will be able to make do with the public interface modules.</source>
          <target state="translated">Модуль, содержащий &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; внутренние компоненты ByteString . Это предоставляет представление &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; и функции построения нижнего уровня. Модули, расширяющие систему &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-internal#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; , должны будут использовать этот модуль, в то время как в идеале большинство пользователей смогут обходиться модулями общедоступного интерфейса.</target>
        </trans-unit>
        <trans-unit id="23bf84d5c3edc452896e02cf0360a0e8d1e320af" translate="yes" xml:space="preserve">
          <source>A module containing unsafe &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; operations.</source>
          <target state="translated">Модуль, содержащий небезопасные операции &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d9f0c8a370cea074b5aff281e49729218f6c1e7" translate="yes" xml:space="preserve">
          <source>A module containing unsafe &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; operations, for very very careful use in heavily tested code.</source>
          <target state="translated">Модуль, содержащий небезопасные &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; операции, для очень осторожного использования в тщательно протестированном коде.</target>
        </trans-unit>
        <trans-unit id="af7a45c55bc3dff94ebe92e041da9cd2e519eb81" translate="yes" xml:space="preserve">
          <source>A module implementing &lt;code&gt;A&lt;/code&gt; would have to export the function &lt;code&gt;double&lt;/code&gt; with a type definitionally equal to the signature. Note that this means you can&amp;rsquo;t implement &lt;code&gt;double&lt;/code&gt; using a polymorphic function &lt;code&gt;double :: Num a =&amp;gt; a -&amp;gt; a&lt;/code&gt;.</source>
          <target state="translated">Модуль, реализующий &lt;code&gt;A&lt;/code&gt; , должен будет экспортировать функцию &lt;code&gt;double&lt;/code&gt; с типом, определенно равным сигнатуре. Обратите внимание, что это означает, что вы не можете реализовать &lt;code&gt;double&lt;/code&gt; с помощью полиморфной функции &lt;code&gt;double :: Num a =&amp;gt; a -&amp;gt; a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab6705ee3245e4112a8338653bc894373bc0218c" translate="yes" xml:space="preserve">
          <source>A module name &lt;code&gt;A&lt;/code&gt;. GHC assumes that the main function is &lt;code&gt;A.main&lt;/code&gt;.</source>
          <target state="translated">Имя модуля . GHC предполагает, что основной функцией является &lt;code&gt;A.main&lt;/code&gt; . &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffa8da0aa9a3feddea78d0a337a370d07af5012b" translate="yes" xml:space="preserve">
          <source>A module which imports &lt;code&gt;MyNum(..)&lt;/code&gt; from &lt;code&gt;Example&lt;/code&gt; and then re-exports &lt;code&gt;MyNum(..)&lt;/code&gt; will also export any pattern synonyms bundled with &lt;code&gt;MyNum&lt;/code&gt; in &lt;code&gt;Example&lt;/code&gt;. A more complete specification can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms/AssociatingSynonyms&quot;&gt;wiki.&lt;/a&gt;</source>
          <target state="translated">Модуль, который импортирует &lt;code&gt;MyNum(..)&lt;/code&gt; из &lt;code&gt;Example&lt;/code&gt; а затем повторно экспортирует &lt;code&gt;MyNum(..)&lt;/code&gt; , также будет экспортировать любые синонимы шаблона, связанные с &lt;code&gt;MyNum&lt;/code&gt; в &lt;code&gt;Example&lt;/code&gt; . Более полную спецификацию можно найти в &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms/AssociatingSynonyms&quot;&gt;вики.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46205c3964ea4b2def4e3d5de0a91193b170cf06" translate="yes" xml:space="preserve">
          <source>A module which imports &lt;code&gt;MyNum(..)&lt;/code&gt; from &lt;code&gt;Example&lt;/code&gt; and then re-exports &lt;code&gt;MyNum(..)&lt;/code&gt; will also export any pattern synonyms bundled with &lt;code&gt;MyNum&lt;/code&gt; in &lt;code&gt;Example&lt;/code&gt;. A more complete specification can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms/associating-synonyms&quot;&gt;wiki.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11caca4dfe7a2e6647b187af096af9ce16cdb9c3" translate="yes" xml:space="preserve">
          <source>A monad containing an environment of type &lt;code&gt;r&lt;/code&gt;, output of type &lt;code&gt;w&lt;/code&gt; and an updatable state of type &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">Монада, содержащая среду типа &lt;code&gt;r&lt;/code&gt; , вывод типа &lt;code&gt;w&lt;/code&gt; и обновляемое состояние типа &lt;code&gt;s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44b463ce5ac795e0357256636d6bb8abafd3b888" translate="yes" xml:space="preserve">
          <source>A monad is said to be &lt;em&gt;strict&lt;/em&gt; if its &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operation is strict in its first argument. The base monads &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; are strict:</source>
          <target state="translated">Монада называется &lt;em&gt;строгой,&lt;/em&gt; если ее операция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; строго по первому аргументу. Базовые монады &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; строгие:</target>
        </trans-unit>
        <trans-unit id="880b41c9b53dfefef049250c9c1a2e53c78a0d3b" translate="yes" xml:space="preserve">
          <source>A monad is said to be &lt;em&gt;strict&lt;/em&gt; if its &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operation is strict in its first argument. The base monads &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; are strict:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838ec5c60886531f50cec97ff01bdfacdd5b0b2a" translate="yes" xml:space="preserve">
          <source>A monad is said to be &lt;em&gt;strict&lt;/em&gt; if its &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; operation is strict in its first argument. The base monads &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; are strict:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77a2e0dd83579c01e51b5cfcae453a98e588af94" translate="yes" xml:space="preserve">
          <source>A monad supporting atomic memory transactions.</source>
          <target state="translated">Монада,поддерживающая атомные операции с памятью.</target>
        </trans-unit>
        <trans-unit id="84ed5327cac92c7ef6e8588da5238de45965557c" translate="yes" xml:space="preserve">
          <source>A monad that can execute GHCi statements by lifting them out of m into the IO monad. (e.g state monads)</source>
          <target state="translated">Монада,которая может выполнять заявления о GHCi,поднимая их из меня в IO monad.(например,государственные монады)</target>
        </trans-unit>
        <trans-unit id="2d83f98faa29021325e93148f624ac116d49fdd7" translate="yes" xml:space="preserve">
          <source>A monad that doesn't allow any IO.</source>
          <target state="translated">Монада,которая не разрешает никакого ввода.</target>
        </trans-unit>
        <trans-unit id="475de8d1c4ced9051885211b80d0128a644d0a1b" translate="yes" xml:space="preserve">
          <source>A monad transformer adding reading an environment of type &lt;code&gt;r&lt;/code&gt;, collecting an output of type &lt;code&gt;w&lt;/code&gt; and updating a state of type &lt;code&gt;s&lt;/code&gt; to an inner monad &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">Преобразователь монады, добавляющий чтение среды типа &lt;code&gt;r&lt;/code&gt; , сбор выходных данных типа &lt;code&gt;w&lt;/code&gt; и обновление состояния типа &lt;code&gt;s&lt;/code&gt; до внутренней монады &lt;code&gt;m&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec0442bcbea355903251a46fae40d37d907ac64e" translate="yes" xml:space="preserve">
          <source>A monad transformer embedding lazy &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Преобразователь монад, встраивающий ленивый &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; в монаду &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Параметр &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; указывает, что внутреннее состояние, используемое вычислением &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; , является особым состоянием, предоставляемым монадой &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , и поэтому отличается от состояния, используемого при &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21a5486c71e41350dc1ca87d78fb4f0bce729afa" translate="yes" xml:space="preserve">
          <source>A monad transformer embedding lazy &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad. The &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; parameter indicates that the internal state used by the &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; computation is a special one supplied by the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad, and thus distinct from those used by invocations of &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Преобразователь монад, встраивающий ленивый &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; в монаду &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; . Параметр &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:RealWorld&quot;&gt;RealWorld&lt;/a&gt;&lt;/code&gt; указывает, что внутреннее состояние, используемое вычислением &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; , является особым состоянием, предоставляемым монадой &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , и поэтому отличается от состояния, используемого при &lt;code&gt;&lt;a href=&quot;control-monad-st-lazy-safe#v:runST&quot;&gt;runST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="601b40dc8531d619de3d6e429600341c4287841e" translate="yes" xml:space="preserve">
          <source>A monad transformer makes a new monad out of an existing monad, such that computations of the old monad may be embedded in the new one. To construct a monad with a desired set of features, one typically starts with a base monad, such as &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, and applies a sequence of monad transformers.</source>
          <target state="translated">Преобразователь монад создает новую монаду из существующей монады, так что вычисления старой монады могут быть встроены в новую. Чтобы построить монаду с желаемым набором функций, обычно начинают с базовой монады, такой как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;[]&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; , и применяют последовательность преобразователей монад.</target>
        </trans-unit>
        <trans-unit id="b365f46b9cfdefb11fdd9add50d3c78cbda728a5" translate="yes" xml:space="preserve">
          <source>A monad transformer makes a new monad out of an existing monad, such that computations of the old monad may be embedded in the new one. To construct a monad with a desired set of features, one typically starts with a base monad, such as &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, and applies a sequence of monad transformers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6ea457401e45545ac3dfea75911c233e6ec31b" translate="yes" xml:space="preserve">
          <source>A monad transformer makes a new monad out of an existing monad, such that computations of the old monad may be embedded in the new one. To construct a monad with a desired set of features, one typically starts with a base monad, such as &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-functor-identity#v:Identity&quot;&gt;Identity&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;, and applies a sequence of monad transformers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f7cb8e57886d5e86aabfd267501ad0211c3d9f3" translate="yes" xml:space="preserve">
          <source>A monad transformer that adds exceptions to other monads.</source>
          <target state="translated">Монада-трансформатор,который добавляет исключения к другим монадам.</target>
        </trans-unit>
        <trans-unit id="6426c40e7452ced39d0234fd45fc21a33bd3cc41" translate="yes" xml:space="preserve">
          <source>A monad transformer that combines &lt;code&gt;ReaderT&lt;/code&gt;, &lt;code&gt;WriterT&lt;/code&gt; and &lt;code&gt;StateT&lt;/code&gt;. This version is lazy; for a constant-space version with almost the same interface, see &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt;.</source>
          <target state="translated">Преобразователь монад, объединяющий &lt;code&gt;ReaderT&lt;/code&gt; , &lt;code&gt;WriterT&lt;/code&gt; и &lt;code&gt;StateT&lt;/code&gt; . Эта версия ленивая; для версии с постоянным пространством с почти таким же интерфейсом см. &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2547fe70b78fa47777714df77c0add427abe3628" translate="yes" xml:space="preserve">
          <source>A monad transformer that combines &lt;code&gt;ReaderT&lt;/code&gt;, &lt;code&gt;WriterT&lt;/code&gt; and &lt;code&gt;StateT&lt;/code&gt;. This version is strict; for a lazy version with the same interface, see &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt;. Although the output is built strictly, it is not possible to achieve constant space behaviour with this transformer: for that, use &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt; instead.</source>
          <target state="translated">Преобразователь монад, объединяющий &lt;code&gt;ReaderT&lt;/code&gt; , &lt;code&gt;WriterT&lt;/code&gt; и &lt;code&gt;StateT&lt;/code&gt; . Эта версия строгая; для ленивой версии с тем же интерфейсом см. &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt; . Хотя вывод построен строго, с помощью этого преобразователя невозможно добиться постоянного пространственного поведения: для этого используйте вместо него &lt;a href=&quot;control-monad-trans-rws-cps&quot;&gt;Control.Monad.Trans.RWS.CPS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9a2ee9baf8f5856a19298f4db328fc74a1d39bd" translate="yes" xml:space="preserve">
          <source>A monad transformer that combines &lt;code&gt;ReaderT&lt;/code&gt;, &lt;code&gt;WriterT&lt;/code&gt; and &lt;code&gt;StateT&lt;/code&gt;. This version uses continuation-passing-style for the writer part to achieve constant space usage. For a lazy version with the same interface, see &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt;.</source>
          <target state="translated">Преобразователь монад, объединяющий &lt;code&gt;ReaderT&lt;/code&gt; , &lt;code&gt;WriterT&lt;/code&gt; и &lt;code&gt;StateT&lt;/code&gt; . Эта версия использует стиль передачи продолжения для части записи для достижения постоянного использования пространства. Для ленивой версии с тем же интерфейсом см. &lt;a href=&quot;control-monad-trans-rws-lazy&quot;&gt;Control.Monad.Trans.RWS.Lazy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="500a320bcd121d2c8283ae8852b2515080dcee31" translate="yes" xml:space="preserve">
          <source>A monad transformer which carries all of the state and settings relevant to a line-reading application.</source>
          <target state="translated">Монадный трансформатор,который несет в себе все состояния и настройки,относящиеся к приложению линейного считывания.</target>
        </trans-unit>
        <trans-unit id="f7f92818234c049ae409685d4444b37152111dc8" translate="yes" xml:space="preserve">
          <source>A monoid on applicative functors.</source>
          <target state="translated">Моноид на аппликативных фанкторах.</target>
        </trans-unit>
        <trans-unit id="fe60158aa8a2b3958c4da9fb0fee916548d774b6" translate="yes" xml:space="preserve">
          <source>A monoid on arrows.</source>
          <target state="translated">Моноид на стрелках.</target>
        </trans-unit>
        <trans-unit id="5ee64c556c0433795d77b436a1a7b436c51d6e3c" translate="yes" xml:space="preserve">
          <source>A more detailed description can be found in the overview section of &lt;a href=&quot;data-foldable#overview&quot;&gt;Data.Foldable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b89f084823136ae1433b3d27925f91dc6bb6035" translate="yes" xml:space="preserve">
          <source>A more detailed description can be found in the overview section of &lt;a href=&quot;data-traversable#overview&quot;&gt;Data.Traversable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a21663d6e752b5cb512178e5bc40818c9525d6" translate="yes" xml:space="preserve">
          <source>A more general example is &lt;code&gt;&lt;a href=&quot;data-foldable#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt;, which applies a predicate to each input element in turn until it finds the first one for which the predicate is true, at which point it returns success. If, in an infinite input stream the predicate is false for all the elements, &lt;code&gt;&lt;a href=&quot;data-foldable#v:any&quot;&gt;any&lt;/a&gt;&lt;/code&gt; will not terminate, but since it runs in constant space, it typically won't run out of memory, it'll just loop forever.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985dc66669594864a05f74a53c35b9231ca89cb8" translate="yes" xml:space="preserve">
          <source>A more generalized way of determining which exceptions to catch at run time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5845b618bce8288ed7fd6ae679531f4a7a5b077f" translate="yes" xml:space="preserve">
          <source>A more precise specification is as follows. The willingness to be overlapped or incoherent is a property of the &lt;em&gt;instance declaration&lt;/em&gt; itself, controlled as follows:</source>
          <target state="translated">Более точное описание выглядит следующим образом. Готовность к перекрытию или несогласованности - это свойство самого &lt;em&gt;объявления экземпляра&lt;/em&gt; , управляемое следующим образом:</target>
        </trans-unit>
        <trans-unit id="f0e63911e5dfc97bc3c592219078a690d8ed2ff3" translate="yes" xml:space="preserve">
          <source>A mutable array of bytes that can be passed to foreign functions.</source>
          <target state="translated">Мутируемый массив байт,который может быть передан в сторонние функции.</target>
        </trans-unit>
        <trans-unit id="aaaa00796670cca26a60ac72f4e07d8b337ab183" translate="yes" xml:space="preserve">
          <source>A mutable array with unboxed elements, that can be manipulated in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="translated">Изменяемый массив с распакованными элементами, которыми можно управлять в монаде &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; . Аргументы типа следующие:</target>
        </trans-unit>
        <trans-unit id="3387c300ae3f8914517cc0cd6aa9b1be1561eb1a" translate="yes" xml:space="preserve">
          <source>A mutable array with unboxed elements, that can be manipulated in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc2bfa672fe2f680fb75b734f6f8b70d25e0e65" translate="yes" xml:space="preserve">
          <source>A mutable array with unboxed elements, that can be manipulated in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad. The type arguments are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6994baa9908c386c8aa2378b6690cc491d3b838a" translate="yes" xml:space="preserve">
          <source>A mutable variable in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="translated">Изменяемая переменная в монаде &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86d8cb4c41428c71956a58b3affc3d3a67e5a624" translate="yes" xml:space="preserve">
          <source>A mutable variable in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbad323a47ac9bc70e75ccd7f2a3ebe5beec48d5" translate="yes" xml:space="preserve">
          <source>A mutable variable in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="985e8387b10ebbbd6e5ab332eab6588b350aa36d" translate="yes" xml:space="preserve">
          <source>A mutable variable in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad</source>
          <target state="translated">Изменяемая переменная в монаде &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a954d6c35420d409169ad1a91fbdf2cc6fa8fd09" translate="yes" xml:space="preserve">
          <source>A name can be quoted with either one or two prefix single quotes:</source>
          <target state="translated">Имя может быть процитировано как с одной,так и с двумя префиксными одиночными кавычками:</target>
        </trans-unit>
        <trans-unit id="6eac8d924312d7747867fd052a0984825adb6ab0" translate="yes" xml:space="preserve">
          <source>A name whose second character is a single quote (sadly) cannot be quoted in this way, because it will be parsed instead as a quoted character. For example, if the function is called &lt;code&gt;f'7&lt;/code&gt; (which is a legal Haskell identifier), an attempt to quote it as &lt;code&gt;'f'7&lt;/code&gt; would be parsed as the character literal &lt;code&gt;'f'&lt;/code&gt; followed by the numeric literal &lt;code&gt;7&lt;/code&gt;. There is no current escape mechanism in this (unusual) situation.</source>
          <target state="translated">Имя, вторым символом которого является одинарная кавычка (к сожалению), нельзя заключать в кавычки таким образом, потому что вместо этого оно будет проанализировано как заключенный в кавычки символ. Например, если функция называется &lt;code&gt;f'7&lt;/code&gt; (который является допустимым идентификатором Haskell), попытка процитировать ее как &lt;code&gt;'f'7&lt;/code&gt; будет анализироваться как символьный литерал &lt;code&gt;'f'&lt;/code&gt; за которым следует числовой литерал &lt;code&gt;7&lt;/code&gt; . В этой (необычной) ситуации нет действующего механизма выхода.</target>
        </trans-unit>
        <trans-unit id="7f16e7f677a6d8e62b9e97a39d3de36debfc79cc" translate="yes" xml:space="preserve">
          <source>A name's package, if it exists.</source>
          <target state="translated">Пакет с именем,если он существует.</target>
        </trans-unit>
        <trans-unit id="7598a3dc426907ef37ba1a8eb3a99bc5a30b0e87" translate="yes" xml:space="preserve">
          <source>A new chunk of heap has been allocated by the indicated capability set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6919dce57a8f508bed2b02c9c8ad2d961f4e47dd" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; function attempts to put the value &lt;code&gt;a&lt;/code&gt; into the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if it was successful, or &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">Неблокирующая версия &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; . Функция &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; пытается поместить значение &lt;code&gt;a&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , возвращая &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; в случае успеха или &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="1adb02601e1d9275c9a9312a596d444889d03e7a" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryReadMVar&quot;&gt;tryReadMVar&lt;/a&gt;&lt;/code&gt; function returns immediately, with &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Неблокирующая версия &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; . Функция &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryReadMVar&quot;&gt;tryReadMVar&lt;/a&gt;&lt;/code&gt; немедленно возвращает значение &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; был пуст, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; был заполнен содержимым &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ccd9ca2458eb3a684692c3f8141733d7490bf75" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; function returns immediately, with &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;. After &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">Неблокирующая версия &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; . Функция &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; немедленно возвращает значение &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; был пуст, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; был заполнен содержимым &lt;code&gt;a&lt;/code&gt; . После &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; , то &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; остается пустым.</target>
        </trans-unit>
        <trans-unit id="e55cff29c2c9733e10c5a0b338cfcec2b5ad75a2" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; function attempts to put the value &lt;code&gt;a&lt;/code&gt; into the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, returning &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if it was successful, or &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">Неблокирующая версия &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; . Функция &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryPutMVar&quot;&gt;tryPutMVar&lt;/a&gt;&lt;/code&gt; пытается поместить значение &lt;code&gt;a&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , возвращая &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; в случае успеха или &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="206f440a2076bebff809698fc93d8fc54da5d7ab" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryReadMVar&quot;&gt;tryReadMVar&lt;/a&gt;&lt;/code&gt; function returns immediately, with &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Неблокирующая версия &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:readMVar&quot;&gt;readMVar&lt;/a&gt;&lt;/code&gt; . Функция &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryReadMVar&quot;&gt;tryReadMVar&lt;/a&gt;&lt;/code&gt; немедленно возвращает значение &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; был пуст, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; был заполнен содержимым &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c36e2f146526d2510dab34b468a2981631693ee" translate="yes" xml:space="preserve">
          <source>A non-blocking version of &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; function returns immediately, with &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was empty, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; if the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; was full with contents &lt;code&gt;a&lt;/code&gt;. After &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is left empty.</source>
          <target state="translated">Неблокирующая версия &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:takeMVar&quot;&gt;takeMVar&lt;/a&gt;&lt;/code&gt; . Функция &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; немедленно возвращает значение &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; был пуст, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; , если &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; был заполнен содержимым &lt;code&gt;a&lt;/code&gt; . После &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:tryTakeMVar&quot;&gt;tryTakeMVar&lt;/a&gt;&lt;/code&gt; , то &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; остается пустым.</target>
        </trans-unit>
        <trans-unit id="2569960f87e4b3b548288102fd577f9229d2fab8" translate="yes" xml:space="preserve">
          <source>A non-indexed type representation.</source>
          <target state="translated">Неиндексированное представление типа.</target>
        </trans-unit>
        <trans-unit id="e9d1290f4bd898d7ad62e94e9d30ceb6655bd011" translate="yes" xml:space="preserve">
          <source>A non-inlined version of &lt;code&gt;&lt;a href=&quot;data-text-internal#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Версия без встроенного файла &lt;code&gt;&lt;a href=&quot;data-text-internal#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f03b8899bb7d9e29bd30f804a030dd4fd076a1a" translate="yes" xml:space="preserve">
          <source>A note on evaluation order: the expression &lt;code&gt;seq a b&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; guarantee that &lt;code&gt;a&lt;/code&gt; will be evaluated before &lt;code&gt;b&lt;/code&gt;. The only guarantee given by &lt;code&gt;seq&lt;/code&gt; is that the both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; will be evaluated before &lt;code&gt;seq&lt;/code&gt; returns a value. In particular, this means that &lt;code&gt;b&lt;/code&gt; may be evaluated before &lt;code&gt;a&lt;/code&gt;. If you need to guarantee a specific order of evaluation, you must use the function &lt;code&gt;pseq&lt;/code&gt; from the &quot;parallel&quot; package.</source>
          <target state="translated">Замечание о порядке оценки: выражение &lt;code&gt;seq a b&lt;/code&gt; вовсе &lt;em&gt;не&lt;/em&gt; гарантирует , что будет оцениваться , прежде чем &lt;code&gt;b&lt;/code&gt; . Единственная гарантия, предоставляемая &lt;code&gt;seq&lt;/code&gt; , заключается в том, что и &lt;code&gt;a&lt;/code&gt; , и &lt;code&gt;b&lt;/code&gt; будут вычислены до того, как &lt;code&gt;seq&lt;/code&gt; вернет значение. В частности, это означает, что &lt;code&gt;b&lt;/code&gt; можно вычислить до &lt;code&gt;a&lt;/code&gt; . Если вам нужно гарантировать определенный порядок оценки, вы должны использовать функцию &lt;code&gt;pseq&lt;/code&gt; из пакета &amp;laquo;parallel&amp;raquo;. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3c16b58b80137c1a8cc002192b71e052aeb6a9ce" translate="yes" xml:space="preserve">
          <source>A number of restrictions apply to use of annotations:</source>
          <target state="translated">На использование аннотаций распространяется ряд ограничений:</target>
        </trans-unit>
        <trans-unit id="711bb74ca36d3d4c1868e4f33ea8af8c9700a708" translate="yes" xml:space="preserve">
          <source>A package database is where the details about installed packages are stored. It is a directory, usually called &lt;code&gt;package.conf.d&lt;/code&gt;, that contains a file for each package, together with a binary cache of the package data in the file &lt;code&gt;package.cache&lt;/code&gt;. Normally you won&amp;rsquo;t need to look at or modify the contents of a package database directly; all management of package databases can be done through the &lt;strong&gt;ghc-pkg&lt;/strong&gt; tool (see &lt;a href=&quot;#package-management&quot;&gt;Package management (the ghc-pkg command)&lt;/a&gt;).</source>
          <target state="translated">База данных пакетов - это место, где хранятся сведения об установленных пакетах. Это каталог, обычно называемый &lt;code&gt;package.conf.d&lt;/code&gt; , который содержит файл для каждого пакета вместе с двоичным кешем данных пакета в файле &lt;code&gt;package.cache&lt;/code&gt; . Обычно вам не нужно напрямую просматривать или изменять содержимое базы данных пакетов; все управление базами данных пакетов можно выполнить с помощью инструмента &lt;strong&gt;ghc-pkg&lt;/strong&gt; (см. Управление пакетами &lt;a href=&quot;#package-management&quot;&gt;(команда ghc-pkg)&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e6482c111ff88fbc29ede2ddeea4102525681832" translate="yes" xml:space="preserve">
          <source>A package description consists of a number of field/value pairs. A field starts with the field name in the left-hand column followed by a &amp;ldquo;&lt;code&gt;:&lt;/code&gt;&amp;rdquo;, and the value continues until the next line that begins in the left-hand column, or the end of file.</source>
          <target state="translated">Описание пакета состоит из ряда пар поле / значение. Поле начинается с имени поля в левом столбце, за которым следует &amp;laquo; &lt;code&gt;:&lt;/code&gt; &amp;raquo;, и значение продолжается до следующей строки, которая начинается в левом столбце, или до конца файла.</target>
        </trans-unit>
        <trans-unit id="f0d41efbca1f6d8a23338adade26a83c1583e8be" translate="yes" xml:space="preserve">
          <source>A package is a library of Haskell modules known to the compiler. GHC comes with several packages: see the accompanying &lt;a href=&quot;../libraries/index&quot;&gt;library documentation&lt;/a&gt;. More packages to install can be obtained from &lt;a href=&quot;http://hackage.haskell.org/packages/hackage.html&quot;&gt;HackageDB&lt;/a&gt;.</source>
          <target state="translated">Пакет - это библиотека модулей Haskell, известная компилятору. GHC поставляется с несколькими пакетами: см. Сопроводительную &lt;a href=&quot;../libraries/index&quot;&gt;документацию библиотеки&lt;/a&gt; . Дополнительные пакеты для установки можно получить на &lt;a href=&quot;http://hackage.haskell.org/packages/hackage.html&quot;&gt;HackageDB&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c520c7aa2b71fcf3f1e8b3c7af68b75aff8a5221" translate="yes" xml:space="preserve">
          <source>A package is a library of Haskell modules known to the compiler. GHC comes with several packages: see the accompanying &lt;a href=&quot;../libraries/index&quot;&gt;library documentation&lt;/a&gt;. More packages to install can be obtained from &lt;a href=&quot;https://hackage.haskell.org/packages/hackage.html&quot;&gt;HackageDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3dbde045ae446b9fd85968f7cfc7dbefc9f7710" translate="yes" xml:space="preserve">
          <source>A package specification is a Haskell record; in particular, it is the record &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/Cabal-3.2.0.0/Distribution-InstalledPackageInfo.html#t:InstalledPackageInfo&quot;&gt;Distribution.InstalledPackageInfo.InstalledPackageInfo&lt;/a&gt; in the module Distribution.InstalledPackageInfo, which is part of the Cabal package distributed with GHC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c877a3844ef3dc7d9601200a6497a731da7b2b16" translate="yes" xml:space="preserve">
          <source>A package specification is a Haskell record; in particular, it is the record &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/Cabal-3.0.1.0/Distribution-InstalledPackageInfo.html#t:InstalledPackageInfo&quot;&gt;Distribution.InstalledPackageInfo.InstalledPackageInfo&lt;/a&gt; in the module Distribution.InstalledPackageInfo, which is part of the Cabal package distributed with GHC.</source>
          <target state="translated">Спецификация пакета - это запись Haskell; в частности, это запись &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/Cabal-3.0.1.0/Distribution-InstalledPackageInfo.html#t:InstalledPackageInfo&quot;&gt;Distribution.InstalledPackageInfo.InstalledPackageInfo&lt;/a&gt; в модуле Distribution.InstalledPackageInfo, который является частью пакета Cabal, распространяемого с GHC.</target>
        </trans-unit>
        <trans-unit id="060689afe5f9becdf3b195ee863bbe73de610b9c" translate="yes" xml:space="preserve">
          <source>A package specification is a Haskell record; in particular, it is the record &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/Cabal-3.4.0.0/Distribution-InstalledPackageInfo.html#t:InstalledPackageInfo&quot;&gt;Distribution.InstalledPackageInfo.InstalledPackageInfo&lt;/a&gt; in the module Distribution.InstalledPackageInfo, which is part of the Cabal package distributed with GHC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7ab63973f7143650edb4489cbabd9755f0dae2" translate="yes" xml:space="preserve">
          <source>A pair of an open type family equations is checked by attempting to unify their RHSs. If the RHSs don&amp;rsquo;t unify this pair does not violate injectivity annotation. If unification succeeds with a substitution then LHSs of unified equations must be identical under that substitution. If they are not identical then GHC reports that the type family is not injective.</source>
          <target state="translated">Пара уравнений семейства открытого типа проверяется попыткой унифицировать их правые части. Если RHS не объединяются, эта пара не нарушает аннотацию приемистости. Если объединение успешно с заменой, то LHS унифицированных уравнений должны быть идентичны при этой замене. Если они не идентичны, то GHC сообщает, что семейство типов не является инъективным.</target>
        </trans-unit>
        <trans-unit id="84d2773400375ccf44e88b72599837fd03633672" translate="yes" xml:space="preserve">
          <source>A pairing heap tagged with both a key and the original position of its elements, for use in &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Куча сопряжения, помеченная как ключом, так и исходной позицией ее элементов, для использования в &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:sortOn&quot;&gt;sortOn&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2dd62e14bc9431464958571d2b435d03d28b2f82" translate="yes" xml:space="preserve">
          <source>A pairing heap tagged with some key for sorting elements, for use in &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Куча сопряжения, помеченная некоторым ключом для сортировки элементов, для использования в &lt;code&gt;&lt;a href=&quot;data-sequence-internal-sorting#v:unstableSortOn&quot;&gt;unstableSortOn&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08959b3dc19b34612dd713a20c89a35536c5c8b1" translate="yes" xml:space="preserve">
          <source>A pairing heap tagged with the original position of elements, to allow for stable sorting.</source>
          <target state="translated">Сопряженная куча,помеченная исходным положением элементов,для обеспечения стабильной сортировки.</target>
        </trans-unit>
        <trans-unit id="179683aea0f779b8d62f71ce768d02e25c23258e" translate="yes" xml:space="preserve">
          <source>A pairing/concatenation operator for builder primitives, both bounded and fixed size.</source>
          <target state="translated">Оператор сопряжения/конскатенации для примитивов конструктора,как ограниченного,так и фиксированного размера.</target>
        </trans-unit>
        <trans-unit id="a9abb3b7589ecd20d1d2b93e90cc7db6542915ba" translate="yes" xml:space="preserve">
          <source>A parallel garbage collection has been requested by a capability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b720794f2dd0a7c18f79f3dbbf604879cd4d39c" translate="yes" xml:space="preserve">
          <source>A parallel list comprehension has multiple independent branches of qualifier lists, each separated by a &lt;code&gt;|&lt;/code&gt; symbol. For example, the following zips together two lists:</source>
          <target state="translated">Понимание параллельного списка имеет несколько независимых ветвей списков квалификаторов, каждая из которых разделена знаком &lt;code&gt;|&lt;/code&gt; условное обозначение. Например, следующий код объединяет два списка:</target>
        </trans-unit>
        <trans-unit id="3fb86b841f661b45cc569b86782f61f203ff3263" translate="yes" xml:space="preserve">
          <source>A parameter to specify the number of lines affected. Some capabilities (e.g., &lt;code&gt;clear&lt;/code&gt; and &lt;code&gt;dch1&lt;/code&gt;) use this parameter on some terminals to compute variable-length padding.</source>
          <target state="translated">Параметр для указания количества затронутых строк. Некоторые возможности (например, &lt;code&gt;clear&lt;/code&gt; и &lt;code&gt;dch1&lt;/code&gt; ) используют этот параметр на некоторых терминалах для вычисления заполнения переменной длины.</target>
        </trans-unit>
        <trans-unit id="3c7816b5381405514fd134ab41157f7a1b19dbb1" translate="yes" xml:space="preserve">
          <source>A parser for a type &lt;code&gt;a&lt;/code&gt;, represented as a function that takes a &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and returns a list of possible parses as &lt;code&gt;(a,&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; pairs.</source>
          <target state="translated">Синтаксический анализатор для типа &lt;code&gt;a&lt;/code&gt; , представленный как функция, которая принимает &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; и возвращает список возможных синтаксических анализов в &lt;code&gt;(a,&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; пар (a, String ) .</target>
        </trans-unit>
        <trans-unit id="8ef40a705741b0fa0c05e60da025feb810b08af8" translate="yes" xml:space="preserve">
          <source>A parser for a type &lt;code&gt;a&lt;/code&gt;, represented as a function that takes a &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and returns a list of possible parses as &lt;code&gt;(a,&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; pairs.</source>
          <target state="translated">Синтаксический анализатор для типа &lt;code&gt;a&lt;/code&gt; , представленный как функция, которая принимает &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; и возвращает список возможных синтаксических анализов в &lt;code&gt;(a,&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;)&lt;/code&gt; пар (a, String ) .</target>
        </trans-unit>
        <trans-unit id="77e31a3f5862591f06987b3fcab3d8cc7ae35a42" translate="yes" xml:space="preserve">
          <source>A parser for versions in the format produced by &lt;code&gt;&lt;a href=&quot;data-version#v:showVersion&quot;&gt;showVersion&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Парсер для версий в формате, созданном &lt;code&gt;&lt;a href=&quot;data-version#v:showVersion&quot;&gt;showVersion&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="00189f74465df92aa0eb7c3be6fb9e5d018cbddf" translate="yes" xml:space="preserve">
          <source>A partial type signature is a type signature containing special placeholders called &lt;em&gt;wildcards&lt;/em&gt;. A wildcard is written as an underscore (e.g. &amp;ldquo;&lt;code&gt;_&lt;/code&gt;&amp;rdquo;) or, if &lt;a href=&quot;#extension-NamedWildCards&quot;&gt;&lt;code&gt;NamedWildCards&lt;/code&gt;&lt;/a&gt; is enabled, any identifier with a leading underscore (e.g. &amp;ldquo;&lt;code&gt;_foo&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;_bar&lt;/code&gt;&amp;rdquo;). Partial type signatures are to type signatures what &lt;a href=&quot;#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; are to expressions. During compilation these wildcards or holes will generate an error message that describes which type was inferred at the hole&amp;rsquo;s location, and information about the origin of any free type variables. GHC reports such error messages by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d0b796bf5c4ddb7dc5dc483c396f91df528a67" translate="yes" xml:space="preserve">
          <source>A partial type signature is a type signature containing special placeholders called &lt;em&gt;wildcards&lt;/em&gt;. A wildcard is written as an underscore (e.g. &amp;ldquo;&lt;code&gt;_&lt;/code&gt;&amp;rdquo;) or, if &lt;a href=&quot;#extension-NamedWildCards&quot;&gt;&lt;code&gt;NamedWildCards&lt;/code&gt;&lt;/a&gt; is enabled, any identifier with a leading underscore (e.g. &amp;ldquo;&lt;code&gt;_foo&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;_bar&lt;/code&gt;&amp;rdquo;). Partial type signatures are to type signatures what &lt;a href=&quot;typed_holes#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; are to expressions. During compilation these wildcards or holes will generate an error message that describes which type was inferred at the hole&amp;rsquo;s location, and information about the origin of any free type variables. GHC reports such error messages by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8d03f9fe4fb54a82d09df64d310f7a60062a82" translate="yes" xml:space="preserve">
          <source>A partial type signature is a type signature containing special placeholders written with a leading underscore (e.g., &amp;ldquo;&lt;code&gt;_&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;_foo&lt;/code&gt;&amp;rdquo;, &amp;ldquo;&lt;code&gt;_bar&lt;/code&gt;&amp;rdquo;) called &lt;em&gt;wildcards&lt;/em&gt;. Partial type signatures are to type signatures what &lt;a href=&quot;#typed-holes&quot;&gt;Typed Holes&lt;/a&gt; are to expressions. During compilation these wildcards or holes will generate an error message that describes which type was inferred at the hole&amp;rsquo;s location, and information about the origin of any free type variables. GHC reports such error messages by default.</source>
          <target state="translated">Сигнатура частичного типа - это сигнатура типа, содержащая специальные заполнители, записанные с &lt;code&gt;_foo&lt;/code&gt; подчеркиванием (например, &amp;laquo; &lt;code&gt;_&lt;/code&gt; &amp;raquo;, &amp;laquo; _foo &amp;raquo;, &amp;laquo; &lt;code&gt;_bar&lt;/code&gt; &amp;raquo;), называемые &lt;em&gt;подстановочными знаками&lt;/em&gt; . Сигнатуры частичного типа предназначены для &lt;a href=&quot;#typed-holes&quot;&gt;типизированных&lt;/a&gt; сигнатур, что и типизированные отверстия для выражений. Во время компиляции эти подстановочные знаки или дыры будут генерировать сообщение об ошибке, описывающее, какой тип был выведен в местоположении дыры, и информацию о происхождении любых переменных свободного типа. GHC выдает такие сообщения об ошибках по умолчанию.</target>
        </trans-unit>
        <trans-unit id="0ce90625442120850b40e55bce20778556220c5e" translate="yes" xml:space="preserve">
          <source>A pattern</source>
          <target state="translated">Образец</target>
        </trans-unit>
        <trans-unit id="433fae1ea61aa93f2a83f57ff1684a275dd099f0" translate="yes" xml:space="preserve">
          <source>A pattern match failed. The &lt;code&gt;String&lt;/code&gt; gives information about the source location of the pattern.</source>
          <target state="translated">Не удалось сопоставить шаблон. &lt;code&gt;String&lt;/code&gt; дает информацию об исходном местоположении шаблона.</target>
        </trans-unit>
        <trans-unit id="252b18a2db7ed609ee5f049df36aa764455492be" translate="yes" xml:space="preserve">
          <source>A pattern quasiquoter &lt;em&gt;may&lt;/em&gt; generate binders that scope over the right-hand side of a definition because these binders are in scope lexically. For example, given a quasiquoter &lt;code&gt;haskell&lt;/code&gt; that parses Haskell, in the following code, the &lt;code&gt;y&lt;/code&gt; in the right-hand side of &lt;code&gt;f&lt;/code&gt; refers to the &lt;code&gt;y&lt;/code&gt; bound by the &lt;code&gt;haskell&lt;/code&gt; pattern quasiquoter, &lt;em&gt;not&lt;/em&gt; the top-level &lt;code&gt;y = 7&lt;/code&gt;.</source>
          <target state="translated">Квазиквотер шаблона &lt;em&gt;может&lt;/em&gt; генерировать связующие, которые охватывают правую часть определения, потому что эти связующие находятся в области лексической области. Например, для данного квазиквотера &lt;code&gt;haskell&lt;/code&gt; , который анализирует Haskell, в следующем коде &lt;code&gt;y&lt;/code&gt; в правой части &lt;code&gt;f&lt;/code&gt; относится к &lt;code&gt;y&lt;/code&gt; , ограниченному квазиквотером шаблона &lt;code&gt;haskell&lt;/code&gt; , а &lt;em&gt;не&lt;/em&gt; к верхнему уровню &lt;code&gt;y = 7&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ac55497c2a5f3f9d1f6ff0844f5381d5d90653d" translate="yes" xml:space="preserve">
          <source>A pattern synonym</source>
          <target state="translated">Синоним шаблона</target>
        </trans-unit>
        <trans-unit id="b17af7c644158ae7e89b62cef1f1583e8c015c62" translate="yes" xml:space="preserve">
          <source>A pattern synonym declaration can be either unidirectional, bidirectional or explicitly bidirectional. The syntax for unidirectional pattern synonyms is:</source>
          <target state="translated">Объявление синонима шаблона может быть однонаправленным,двунаправленным или явно двунаправленным.Синтаксисом однонаправленных синонимов шаблона является:</target>
        </trans-unit>
        <trans-unit id="55cb5ca64df4e9f9ca70699a5130d9563eece58c" translate="yes" xml:space="preserve">
          <source>A pattern synonym occurrence in a pattern is evaluated by first matching against the pattern synonym itself, and then on the argument patterns.</source>
          <target state="translated">Вхождение синонима шаблона в шаблон оценивается сначала по совпадению с синонимом самого шаблона,а затем по шаблонам аргументов.</target>
        </trans-unit>
        <trans-unit id="6a294e72d5a00c5790ab20aeadfe0fb6770ada67" translate="yes" xml:space="preserve">
          <source>A pattern synonym's argument type.</source>
          <target state="translated">Тип аргумента синонима шаблона.</target>
        </trans-unit>
        <trans-unit id="cc5e6ef416da30039d54dd764052a16e266e5fba" translate="yes" xml:space="preserve">
          <source>A pattern synonym's directionality.</source>
          <target state="translated">Направленность синонима шаблона.</target>
        </trans-unit>
        <trans-unit id="dbbd0987654018a69ab48de461e219d56cbd0973" translate="yes" xml:space="preserve">
          <source>A pattern synonym's type signature.</source>
          <target state="translated">Подпись типа синонима шаблона.</target>
        </trans-unit>
        <trans-unit id="57cf5046220efabc22f8328901a49323d7f92001" translate="yes" xml:space="preserve">
          <source>A pattern synonym's type. Note that a pattern synonym's &lt;em&gt;fully&lt;/em&gt; specified type has a peculiar shape coming with two forall quantifiers and two constraint contexts. For example, consider the pattern synonym</source>
          <target state="translated">Тип синонима шаблона. Обратите внимание, что &lt;em&gt;полностью&lt;/em&gt; определенный тип синонима шаблона имеет своеобразную форму с двумя квантификаторами для всех и двумя контекстами ограничений. Например, рассмотрим синоним шаблона</target>
        </trans-unit>
        <trans-unit id="eb6f155dcdcf6384b306398b26156bf38f28d6e1" translate="yes" xml:space="preserve">
          <source>A pattern type signature (&lt;a href=&quot;#pattern-type-sigs&quot;&gt;Pattern type signatures&lt;/a&gt;)</source>
          <target state="translated">Подпись типа шаблона ( &lt;a href=&quot;#pattern-type-sigs&quot;&gt;подписи типа шаблона&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="a7c69d52227bddae63e60e9734e227c6257070e0" translate="yes" xml:space="preserve">
          <source>A pattern variable may optionally have a type signature. If the type of the pattern variable is polymorphic, it &lt;em&gt;must&lt;/em&gt; have a type signature. For example, here is the &lt;code&gt;foldr/build&lt;/code&gt; rule:</source>
          <target state="translated">Переменная шаблона может дополнительно иметь подпись типа. Если тип переменной шаблона является полиморфным, она &lt;em&gt;должна&lt;/em&gt; иметь сигнатуру типа. Например, вот правило &lt;code&gt;foldr/build&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0a9bf5dd0f5b938cd3b48a5e6e85a85c3767d1a0" translate="yes" xml:space="preserve">
          <source>A pattern with a bang at the outermost level is not allowed at the top level of a module.</source>
          <target state="translated">На верхнем уровне модуля не допускается использование шаблона со взбалтыванием на крайнем уровне.</target>
        </trans-unit>
        <trans-unit id="a45544682b3f8a207a4592a867670905952dce9d" translate="yes" xml:space="preserve">
          <source>A periodic reporting of various statistics of spark evaluation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9808c24500197f32f662437a4166807e09da1b17" translate="yes" xml:space="preserve">
          <source>A permutation phrase is a sequence of elements (possibly of different types) in which each element occurs exactly once and the order is irrelevant. Some of the permutable elements may be optional.</source>
          <target state="translated">Фраза перестановки-это последовательность элементов (возможно,разных типов),в которой каждый элемент встречается ровно один раз и порядок не имеет значения.Некоторые из перестановочных элементов могут быть необязательными.</target>
        </trans-unit>
        <trans-unit id="d61867d436a630172f4b894664bb8d6ce4e454da" translate="yes" xml:space="preserve">
          <source>A pinned byte array is one that the garbage collector is not allowed to move. Consequently, it has a stable address that can be safely requested with &lt;code&gt;byteArrayContents#&lt;/code&gt;. There are a handful of primitive functions in &lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/ghc-prim-0.7.0/GHC-Prim.html&quot;&gt;GHC.Prim&lt;/a&gt; used to enforce or check for pinnedness: &lt;code&gt;isByteArrayPinned#&lt;/code&gt;, &lt;code&gt;isMutableByteArrayPinned#&lt;/code&gt;, and &lt;code&gt;newPinnedByteArray#&lt;/code&gt;. A byte array can be pinned as a result of three possible causes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbcb4942ca58cf7831c96fb91a0838412cc4bba" translate="yes" xml:space="preserve">
          <source>A pinned byte array is one that the garbage collector is not allowed to move. Consequently, it has a stable address that can be safely requested with &lt;code&gt;byteArrayContents#&lt;/code&gt;. There are a handful of primitive functions in GHC.Prim &amp;lt;GHC-Prim.html&amp;gt; used to enforce or check for pinnedness: &lt;code&gt;isByteArrayPinned#&lt;/code&gt;, &lt;code&gt;isMutableByteArrayPinned#&lt;/code&gt;, and &lt;code&gt;newPinnedByteArray#&lt;/code&gt;. A byte array can be pinned as a result of three possible causes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d2f58da1fb581a9ce7c0820def592bde3a97f6" translate="yes" xml:space="preserve">
          <source>A plugin which declares itself impure using &lt;code&gt;ForceRecompile&lt;/code&gt; will always trigger a recompilation of the current module. &lt;code&gt;NoForceRecompile&lt;/code&gt; is used for &amp;ldquo;pure&amp;rdquo; plugins which don&amp;rsquo;t need to be rerun unless a module would ordinarily be recompiled. &lt;code&gt;MaybeRecompile&lt;/code&gt; computes a &lt;code&gt;Fingerprint&lt;/code&gt; and if this &lt;code&gt;Fingerprint&lt;/code&gt; is different to a previously computed &lt;code&gt;Fingerprint&lt;/code&gt; for the plugin, then we recompile the module.</source>
          <target state="translated">Плагин, который объявляет себя нечистым с помощью &lt;code&gt;ForceRecompile&lt;/code&gt; , всегда запускает перекомпиляцию текущего модуля. &lt;code&gt;NoForceRecompile&lt;/code&gt; используется для &amp;laquo;чистых&amp;raquo; плагинов, которые не нужно запускать повторно, если модуль не будет обычно перекомпилирован. &lt;code&gt;MaybeRecompile&lt;/code&gt; вычисляет &lt;code&gt;Fingerprint&lt;/code&gt; , и если этот &lt;code&gt;Fingerprint&lt;/code&gt; отличается от ранее вычисленного &lt;code&gt;Fingerprint&lt;/code&gt; для плагина, мы перекомпилируем модуль.</target>
        </trans-unit>
        <trans-unit id="a3bc90dc2dc45d7f4fd4afcd9ae1bd1af634697a" translate="yes" xml:space="preserve">
          <source>A plugin&amp;rsquo;s installation function (&lt;code&gt;install&lt;/code&gt; in the above example) takes a list of &lt;code&gt;CoreToDo&lt;/code&gt;s and returns a list of &lt;code&gt;CoreToDo&lt;/code&gt;. Before GHC begins compiling modules, it enumerates all the needed plugins you tell it to load, and runs all of their installation functions, initially on a list of passes that GHC specifies itself. After doing this for every plugin, the final list of passes is given to the optimizer, and are run by simply going over the list in order.</source>
          <target state="translated">Функция установки плагина ( &lt;code&gt;install&lt;/code&gt; в приведенном выше примере) принимает список &lt;code&gt;CoreToDo&lt;/code&gt; и возвращает список &lt;code&gt;CoreToDo&lt;/code&gt; . Прежде чем GHC начнет компилировать модули, он перечисляет все необходимые плагины, которые вы указываете для загрузки, и запускает все их функции установки, первоначально в списке проходов, который GHC определяет сам. После выполнения этого для каждого плагина окончательный список проходов передается оптимизатору и запускается простым просмотром списка по порядку.</target>
        </trans-unit>
        <trans-unit id="c3c0c15abdc47e8b410d77eeddeb4ff60204efc9" translate="yes" xml:space="preserve">
          <source>A pointer to a foreign function equivalent to &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:free&quot;&gt;free&lt;/a&gt;&lt;/code&gt;, which may be used as a finalizer (cf &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt;) for storage allocated with &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:realloc&quot;&gt;realloc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:reallocBytes&quot;&gt;reallocBytes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Указатель на внешнюю функцию, эквивалентную &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:free&quot;&gt;free&lt;/a&gt;&lt;/code&gt; , которая может использоваться в качестве финализатора (см. &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#v:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; ) для памяти, выделенной с помощью &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:malloc&quot;&gt;malloc&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:mallocBytes&quot;&gt;mallocBytes&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:realloc&quot;&gt;realloc&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:reallocBytes&quot;&gt;reallocBytes&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed62f36de9a3053add8b5f383c46d4ea22035d53" translate="yes" xml:space="preserve">
          <source>A pointer, but &lt;em&gt;not&lt;/em&gt; to a Haskell value</source>
          <target state="translated">Указатель, но &lt;em&gt;не&lt;/em&gt; на значение Haskell</target>
        </trans-unit>
        <trans-unit id="12c3c6eef2eab225b82c10e7756d7d1120735999" translate="yes" xml:space="preserve">
          <source>A positive initial counter value denotes availability of units &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; can acquire.</source>
          <target state="translated">Положительное начальное значение счетчика означает наличие единиц, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tsem#v:waitTSem&quot;&gt;waitTSem&lt;/a&gt;&lt;/code&gt; может получить waitTSem .</target>
        </trans-unit>
        <trans-unit id="4607e3c8d43d975a9d5043b9fe5325adef419139" translate="yes" xml:space="preserve">
          <source>A possible reason for this is that &lt;code&gt;readLitChar&lt;/code&gt; accepts hex and octal escapes, so it seems inconsistent not to do so for integers too.</source>
          <target state="translated">Возможная причина этого в том, что &lt;code&gt;readLitChar&lt;/code&gt; принимает шестнадцатеричные и восьмеричные escape-последовательности , поэтому не делать этого и для целых чисел тоже непоследовательно.</target>
        </trans-unit>
        <trans-unit id="ee0df3315cf15090b8170db19c00adae9d086669" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadList&quot;&gt;liftReadList&lt;/a&gt;&lt;/code&gt; method. This is only needed for &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read1&quot;&gt;Read1&lt;/a&gt;&lt;/code&gt; instances where &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec&quot;&gt;liftReadListPrec&lt;/a&gt;&lt;/code&gt; isn't defined as &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrecDefault&quot;&gt;liftReadListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Определение возможной замены для метода &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadList&quot;&gt;liftReadList&lt;/a&gt;&lt;/code&gt; . Это необходимо только для &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read1&quot;&gt;Read1&lt;/a&gt;&lt;/code&gt; случаев , когда &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec&quot;&gt;liftReadListPrec&lt;/a&gt;&lt;/code&gt; не определяется как &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrecDefault&quot;&gt;liftReadListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d38c3479f89f023338692e638f45fe5ac188bd2d" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadList2&quot;&gt;liftReadList2&lt;/a&gt;&lt;/code&gt; method. This is only needed for &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read2&quot;&gt;Read2&lt;/a&gt;&lt;/code&gt; instances where &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2&quot;&gt;liftReadListPrec2&lt;/a&gt;&lt;/code&gt; isn't defined as &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2Default&quot;&gt;liftReadListPrec2Default&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Определение возможной замены для метода &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadList2&quot;&gt;liftReadList2&lt;/a&gt;&lt;/code&gt; . Это необходимо только для &lt;code&gt;&lt;a href=&quot;data-functor-classes#t:Read2&quot;&gt;Read2&lt;/a&gt;&lt;/code&gt; случаев , когда &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2&quot;&gt;liftReadListPrec2&lt;/a&gt;&lt;/code&gt; не определяется как &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2Default&quot;&gt;liftReadListPrec2Default&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1d027bf72f3911128c132d8c54e0a8ef6c5c888" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec&quot;&gt;liftReadListPrec&lt;/a&gt;&lt;/code&gt; method, defined using &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadPrec&quot;&gt;liftReadPrec&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Определение возможной замены для метода &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec&quot;&gt;liftReadListPrec&lt;/a&gt;&lt;/code&gt; , определенного с помощью &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadPrec&quot;&gt;liftReadPrec&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d373fa8bb2d277c322dacc2f2dcc3f3d824b4e2" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2&quot;&gt;liftReadListPrec2&lt;/a&gt;&lt;/code&gt; method, defined using &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadPrec2&quot;&gt;liftReadPrec2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Определение возможной замены для метода &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadListPrec2&quot;&gt;liftReadListPrec2&lt;/a&gt;&lt;/code&gt; , определенного с помощью &lt;code&gt;&lt;a href=&quot;data-functor-classes#v:liftReadPrec2&quot;&gt;liftReadPrec2&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29364a8e8891d9c56243d372544806d4d546619b" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; method (GHC only). This is only needed for GHC, and even then only for &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances where &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; isn't defined as &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Определение возможной замены для метода &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; (только GHC). Это необходимо только для GHC, и даже тогда только для экземпляров &lt;code&gt;&lt;a href=&quot;ghc-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; , где &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; не определен как &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68ae1239307d70eba9e18971c894baa48ad11cf4" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; method, defined using &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (GHC only).</source>
          <target state="translated">Определение возможной замены для метода &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; , определенного с помощью &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (только GHC).</target>
        </trans-unit>
        <trans-unit id="f80e2bb9e234ed027f7e8ba6d593f983b80c8933" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; method (GHC only). This is only needed for GHC, and even then only for &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instances where &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; isn't defined as &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Определение возможной замены для метода &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; (только GHC). Это необходимо только для GHC, и даже тогда только для экземпляров &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; , где &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; не определен как &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f98f636cd56d17e711ba559f0f71c4bdebdffa1" translate="yes" xml:space="preserve">
          <source>A possible replacement definition for the &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; method, defined using &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (GHC only).</source>
          <target state="translated">Определение возможной замены для метода &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; , определенного с помощью &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; (только GHC).</target>
        </trans-unit>
        <trans-unit id="b157127674bef09a54a1bf4952fda41dd1808377" translate="yes" xml:space="preserve">
          <source>A postfix '&lt;code&gt;M&lt;/code&gt;' always stands for a function in the Kleisli category: The monad type constructor &lt;code&gt;m&lt;/code&gt; is added to function results (modulo currying) and nowhere else. So, for example,</source>
          <target state="translated">Постфикс &amp;laquo; &lt;code&gt;M&lt;/code&gt; &amp;raquo; всегда означает функцию из категории Клейсли: конструктор монадного типа &lt;code&gt;m&lt;/code&gt; добавляется к результатам функции (по модулю каррирования) и больше нигде. Так, например,</target>
        </trans-unit>
        <trans-unit id="4f57aca0d9a4c899e484cd901e67bacaa13d70b9" translate="yes" xml:space="preserve">
          <source>A postfix '&lt;code&gt;_&lt;/code&gt;' changes the result type from &lt;code&gt;(m a)&lt;/code&gt; to &lt;code&gt;(m ())&lt;/code&gt;. Thus, for example:</source>
          <target state="translated">Постфикс ' &lt;code&gt;_&lt;/code&gt; ' изменяет тип результата с &lt;code&gt;(m a)&lt;/code&gt; на &lt;code&gt;(m ())&lt;/code&gt; . Так, например:</target>
        </trans-unit>
        <trans-unit id="46921428c3bbaa58265d19bfda0ee3268636763a" translate="yes" xml:space="preserve">
          <source>A precise semantics</source>
          <target state="translated">Точная семантика</target>
        </trans-unit>
        <trans-unit id="47f994aa80408a0bd45b4587fcafe17e6fd888ec" translate="yes" xml:space="preserve">
          <source>A predicate &lt;code&gt;trim used allocated&lt;/code&gt; returning &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, if the buffer should be trimmed before it is returned.</source>
          <target state="translated">Используется &lt;code&gt;trim used allocated&lt;/code&gt; предиката, возвращающая значение &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если буфер должен быть обрезан перед возвратом .</target>
        </trans-unit>
        <trans-unit id="d580afd63f73de0a796d71c734098f93fa407b93" translate="yes" xml:space="preserve">
          <source>A predicate &lt;code&gt;trim used allocated&lt;/code&gt; returning &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, if the buffer should be trimmed before it is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c817efef5f5e7b5e45c1fb0dd7b99d6342536f7" translate="yes" xml:space="preserve">
          <source>A predicate &lt;code&gt;trim used allocated&lt;/code&gt; returning &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;, if the buffer should be trimmed before it is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7be90e7ccc0906e803e54dbfc057396ec04901" translate="yes" xml:space="preserve">
          <source>A prefix '&lt;code&gt;m&lt;/code&gt;' generalizes an existing function to a monadic form. Thus, for example:</source>
          <target state="translated">Префикс &amp;laquo; &lt;code&gt;m&lt;/code&gt; &amp;raquo; обобщает существующую функцию до монадической формы. Так, например:</target>
        </trans-unit>
        <trans-unit id="d70f07d0fd97e79392191dc0d1a1d9c0b6a7f1e2" translate="yes" xml:space="preserve">
          <source>A primitive C-style string, type &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7685a5ab3153d56bb49c042dcd22463fc1d995f8" translate="yes" xml:space="preserve">
          <source>A primitive C-style string, type &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ba2753b7a938dad018da0fd6997dc0b76bb953" translate="yes" xml:space="preserve">
          <source>A primitive C-style string, type Addr#</source>
          <target state="translated">Примитивная строка в стиле C,введите Addr#.</target>
        </trans-unit>
        <trans-unit id="f28dde23b4ee72f0bc2a782151d6569a43780c6c" translate="yes" xml:space="preserve">
          <source>A priority search queue, with timeouts as priorities.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d0a23e976121bc1cfab9f6f18718ab2b9d2383" translate="yes" xml:space="preserve">
          <source>A process in the process group</source>
          <target state="translated">Процесс в группе процессов</target>
        </trans-unit>
        <trans-unit id="e2978f6c6d0c2493478216f46bf15eb08160b4e7" translate="yes" xml:space="preserve">
          <source>A program that fails in any other way is treated as if it had called &lt;code&gt;&lt;a href=&quot;system-exit#v:exitFailure&quot;&gt;exitFailure&lt;/a&gt;&lt;/code&gt;. A program that terminates successfully without calling &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; explicitly is treated as if it had called &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-exit#v:ExitSuccess&quot;&gt;ExitSuccess&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Программа, которая терпит неудачу каким-либо другим образом, рассматривается как если бы она вызвала &lt;code&gt;&lt;a href=&quot;system-exit#v:exitFailure&quot;&gt;exitFailure&lt;/a&gt;&lt;/code&gt; . Программа, которая успешно завершается без явного вызова &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; , обрабатывается так, как если бы она вызвала &lt;code&gt;&lt;a href=&quot;system-exit#v:exitWith&quot;&gt;exitWith&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-exit#v:ExitSuccess&quot;&gt;ExitSuccess&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="106e5d7fb17753020184a4433ee767b6d5411226" translate="yes" xml:space="preserve">
          <source>A programmer may use &lt;code&gt;forall&lt;/code&gt; in a type to introduce new quantified type variables. These variables may depend on each other, even in the same &lt;code&gt;forall&lt;/code&gt;. However, GHC requires that the dependency be inferrable from the body of the &lt;code&gt;forall&lt;/code&gt;. Here are some examples:</source>
          <target state="translated">Программист может использовать &lt;code&gt;forall&lt;/code&gt; в типе, чтобы ввести новые количественные переменные типа. Эти переменные могут зависеть друг от друга, даже в том же &lt;code&gt;forall&lt;/code&gt; . Тем не менее, GHC требует, чтобы зависимость быть inferrable от тела &lt;code&gt;forall&lt;/code&gt; . Вот некоторые примеры:</target>
        </trans-unit>
        <trans-unit id="71ba773b3259e537cc66acd4ec6d24f2384a5425" translate="yes" xml:space="preserve">
          <source>A programmer-defined error value constructed using &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Значение ошибки, определяемое программистом, &lt;code&gt;&lt;a href=&quot;system-io-error#v:userError&quot;&gt;userError&lt;/a&gt;&lt;/code&gt; с помощью userError .</target>
        </trans-unit>
        <trans-unit id="7217616c7698f7547fd2c1e5c701e62f18577563" translate="yes" xml:space="preserve">
          <source>A pun on a qualified field name is expanded by stripping off the module qualifier. For example:</source>
          <target state="translated">Каламбур на квалифицированном названии поля расширяется путем удаления классификатора модуля.Например:</target>
        </trans-unit>
        <trans-unit id="c36208f7850763edf61643d27d80bde39732dac8" translate="yes" xml:space="preserve">
          <source>A qualified name &lt;code&gt;A.foo&lt;/code&gt;. GHC assumes that the main function is &lt;code&gt;A.foo&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;A.foo&lt;/code&gt; имя A.foo . GHC предполагает, что основная функция - &lt;code&gt;A.foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1f854f70933a723bf95a735c3aa4de5afabd5c6" translate="yes" xml:space="preserve">
          <source>A qualified name; dynamically bound</source>
          <target state="translated">Квалифицированное имя;динамически связанное</target>
        </trans-unit>
        <trans-unit id="a8f9eb9db19a1818e7c75d1fe1ee9a6205220c54" translate="yes" xml:space="preserve">
          <source>A quantified type representation.</source>
          <target state="translated">Количественное представление типа.</target>
        </trans-unit>
        <trans-unit id="e82bbf975220aa7ab5228dfdba9164c275fc91d4" translate="yes" xml:space="preserve">
          <source>A quasi-quotation can appear in a pattern, type, expression, or declaration context and is also written in Oxford brackets:</source>
          <target state="translated">Квази-цитата может появиться в шаблоне,типе,выражении или контексте декларации,а также написана в Оксфордских скобках:</target>
        </trans-unit>
        <trans-unit id="9598087296773252828f5341b4828654c30bd8a1" translate="yes" xml:space="preserve">
          <source>A quasi-quote has the form &lt;code&gt;[quoter| string |]&lt;/code&gt;.</source>
          <target state="translated">Квази-цитата имеет вид &lt;code&gt;[quoter| string |]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e1cb587055071e4fb0d1b0454a870959e6f9fa49" translate="yes" xml:space="preserve">
          <source>A quasi-quote is expanded by applying the appropriate parser to the string enclosed by the Oxford brackets. The context of the quasi-quote (expression, pattern, type, declaration) determines which of the parsers is called.</source>
          <target state="translated">Квази-цитата расширяется путем применения соответствующего парсера к строке,заключенной в Оксфордские скобки.Контекст квазицитаты (выражение,шаблон,тип,объявление)определяет,какой из парсеров вызывается.</target>
        </trans-unit>
        <trans-unit id="cdcde5d2df86936b559e312ff74aff26f8e4d03f" translate="yes" xml:space="preserve">
          <source>A quasiquote may appear in place of</source>
          <target state="translated">Квазиквота может появиться вместо</target>
        </trans-unit>
        <trans-unit id="a001d4fd181336f68b683e872533d57d619d5b7e" translate="yes" xml:space="preserve">
          <source>A question that we often want to ask when debugging a program is &amp;ldquo;how did I get here?&amp;rdquo;. Traditional imperative debuggers usually provide some kind of stack-tracing feature that lets you see the stack of active function calls (sometimes called the &amp;ldquo;lexical call stack&amp;rdquo;), describing a path through the code to the current location. Unfortunately this is hard to provide in Haskell, because execution proceeds on a demand-driven basis, rather than a depth-first basis as in strict languages. The &amp;ldquo;stack&amp;ldquo; in GHC&amp;rsquo;s execution engine bears little resemblance to the lexical call stack. Ideally GHCi would maintain a separate lexical call stack in addition to the dynamic call stack, and in fact this is exactly what our profiling system does (&lt;a href=&quot;profiling#profiling&quot;&gt;Profiling&lt;/a&gt;), and what some other Haskell debuggers do. For the time being, however, GHCi doesn&amp;rsquo;t maintain a lexical call stack (there are some technical challenges to be overcome). Instead, we provide a way to backtrack from a breakpoint to previous evaluation steps: essentially this is like single-stepping backwards, and should in many cases provide enough information to answer the &amp;ldquo;how did I get here?&amp;rdquo; question.</source>
          <target state="translated">При отладке программы мы часто задаем вопрос: &amp;laquo;Как я сюда попал?&amp;raquo;. Традиционные императивные отладчики обычно предоставляют некую функцию трассировки стека, которая позволяет вам видеть стек вызовов активных функций (иногда называемый &amp;laquo;стеком лексических вызовов&amp;raquo;), описывающий путь через код к текущему местоположению. К сожалению, это сложно обеспечить в Haskell, потому что выполнение происходит по запросу, а не по глубине, как в строгих языках. &amp;laquo;Стек&amp;raquo; в механизме выполнения GHC мало похож на лексический стек вызовов. В идеале GHCi должен поддерживать отдельный стек лексических вызовов в дополнение к стеку динамических вызовов, и фактически это именно то, что делает наша система профилирования ( &lt;a href=&quot;profiling#profiling&quot;&gt;Профилирование&lt;/a&gt;) и что делают некоторые другие отладчики Haskell. Однако в настоящее время GHCi не поддерживает лексический стек вызовов (есть некоторые технические проблемы, которые необходимо преодолеть). Вместо этого мы предоставляем способ вернуться от точки останова к предыдущим этапам оценки: по сути, это похоже на одиночный шаг назад, и во многих случаях он должен предоставлять достаточно информации, чтобы ответить на вопрос &amp;laquo;как я сюда попал?&amp;raquo; вопрос.</target>
        </trans-unit>
        <trans-unit id="189d1cf3fab3e51e460ff7ce2b8a93636027c0d7" translate="yes" xml:space="preserve">
          <source>A quoter is a value of type &lt;a href=&quot;../../libraries/template-haskell-2.17.0.0/language-haskell-th-quote#t:QuasiQuoter&quot;&gt;Language.Haskell.TH.Quote.QuasiQuoter&lt;/a&gt;, which is defined thus:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0242b7d03d75d9ad4b17787a60e3e615d37d16" translate="yes" xml:space="preserve">
          <source>A quoter is a value of type &lt;code&gt;Language.Haskell.TH.Quote.QuasiQuoter&lt;/code&gt;, which is defined thus:</source>
          <target state="translated">Кавычки - это значение типа &lt;code&gt;Language.Haskell.TH.Quote.QuasiQuoter&lt;/code&gt; , которое определяется следующим образом:</target>
        </trans-unit>
        <trans-unit id="a48ce4817f3e54a0532248a31d1f099d88b1351f" translate="yes" xml:space="preserve">
          <source>A range of bytes in a buffer represented by the pointer to the first byte of the range and the pointer to the first byte &lt;em&gt;after&lt;/em&gt; the range.</source>
          <target state="translated">Диапазон байтов в буфере, представленный указателем на первый байт диапазона и указателем на первый байт &lt;em&gt;после&lt;/em&gt; диапазона.</target>
        </trans-unit>
        <trans-unit id="b28c56da049e38013f1fcf4d02dcb6b1f0080a5c" translate="yes" xml:space="preserve">
          <source>A record GADT may have a restricted type for a selector function, which may lead to additional unification when solving &lt;code&gt;HasField&lt;/code&gt; constraints. For example,</source>
          <target state="translated">Запись GADT может иметь ограниченный тип для функции выбора, что может привести к дополнительной унификации при решении ограничений &lt;code&gt;HasField&lt;/code&gt; . Например,</target>
        </trans-unit>
        <trans-unit id="b338877827c7ed29adfee9e9d6b0b8e5a63641d8" translate="yes" xml:space="preserve">
          <source>A record selector was applied to a constructor without the appropriate field. This can only happen with a datatype with multiple constructors, where some fields are in one constructor but not another. The &lt;code&gt;String&lt;/code&gt; gives information about the source location of the record selector.</source>
          <target state="translated">Селектор записи был применен к конструктору без соответствующего поля. Это может произойти только с типом данных с несколькими конструкторами, где некоторые поля находятся в одном конструкторе, но не в другом. &lt;code&gt;String&lt;/code&gt; содержит информацию о местоположении источника селектора записи.</target>
        </trans-unit>
        <trans-unit id="c21fec8a784a0df6d796742b5beccbbdfb0d37ed" translate="yes" xml:space="preserve">
          <source>A record update was performed on a constructor without the appropriate field. This can only happen with a datatype with multiple constructors, where some fields are in one constructor but not another. The &lt;code&gt;String&lt;/code&gt; gives information about the source location of the record update.</source>
          <target state="translated">Обновление записи было выполнено для конструктора без соответствующего поля. Это может произойти только с типом данных с несколькими конструкторами, где некоторые поля находятся в одном конструкторе, но не в другом. &lt;code&gt;String&lt;/code&gt; дает информацию об исходном местоположении обновления записи.</target>
        </trans-unit>
        <trans-unit id="92fb5684ae95209348bfee7f9aea2ce376b9a4d4" translate="yes" xml:space="preserve">
          <source>A redundant constraint within the type signature itself:</source>
          <target state="translated">Резервное ограничение внутри самой подписи типа:</target>
        </trans-unit>
        <trans-unit id="54a410c09496ec54abde3e9710dcb3fcce5da06f" translate="yes" xml:space="preserve">
          <source>A reference to a remote value. These are allocated and freed explicitly.</source>
          <target state="translated">Ссылка на удаленное значение.Они выделяются и освобождаются явно.</target>
        </trans-unit>
        <trans-unit id="fb2a2acd6cd218a5be6c4d95fa1ad4daf16624a7" translate="yes" xml:space="preserve">
          <source>A reference to a value of type &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Ссылка на значение типа &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0361e89442d5407a746896c1f1424c0385608b9b" translate="yes" xml:space="preserve">
          <source>A rendering style. Allows us to specify constraints to choose among the many different rendering options.</source>
          <target state="translated">Стиль рендеринга.Позволяет указать ограничения для выбора из множества различных опций рендеринга.</target>
        </trans-unit>
        <trans-unit id="8d7030617d8d95c457294c3464041259a9a37116" translate="yes" xml:space="preserve">
          <source>A result of the naturality law is a purity law for &lt;code&gt;&lt;a href=&quot;data-traversable#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c6ef26d60ed2cc5371309971291f1535cedbfd" translate="yes" xml:space="preserve">
          <source>A result of the naturality law is a purity law for &lt;code&gt;&lt;a href=&quot;prelude#v:traverse&quot;&gt;traverse&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7715c19cf7faa5dc45883c88b4e480b883a9aa" translate="yes" xml:space="preserve">
          <source>A retainer is either the system stack, an unevaluated closure (thunk), or an explicitly mutable object.</source>
          <target state="translated">Фиксатором является либо системный стек,либо неоцененное закрытие (thunk),либо явно мутируемый объект.</target>
        </trans-unit>
        <trans-unit id="c17ab32a3bf231aeb0c4cd50ac9f91c26d98d0f8" translate="yes" xml:space="preserve">
          <source>A rewrite rule in a module &lt;code&gt;M&lt;/code&gt; is an &lt;em&gt;orphan rule&lt;/em&gt; orphan rule if none of the variables, type constructors, or classes that are free in the left hand side of the rule are declared in &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">Правило перезаписи в модуле &lt;code&gt;M&lt;/code&gt; является &lt;em&gt;правило сиротого&lt;/em&gt; правила сиротой , если ни одна из переменных, конструкторов типов или классов, которые свободны в левой части правил не объявлено в &lt;code&gt;M&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7576507e849494c245f578b7b08c722c72b9e4b" translate="yes" xml:space="preserve">
          <source>A rich user interface for line input in command-line programs. Haskeline is Unicode-aware and runs both on POSIX-compatible systems and on Windows.</source>
          <target state="translated">Богатый пользовательский интерфейс для ввода строки в программы командной строки.Haskeline ориентирован на юникод и работает как на POSIX-совместимых системах,так и на Windows.</target>
        </trans-unit>
        <trans-unit id="5fe62b863adf6df34977b49f0095efaac4aba5e7" translate="yes" xml:space="preserve">
          <source>A right fold over the elements</source>
          <target state="translated">Правый склад над элементами</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
