<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="a93f06c73a9f12fa3e18026b2a8785a41a101bf6" translate="yes" xml:space="preserve">
          <source>Specialized folds</source>
          <target state="translated">Специализированные складки</target>
        </trans-unit>
        <trans-unit id="f97044c34f322278833a86f50d9bdc888c10c331" translate="yes" xml:space="preserve">
          <source>Specific signals</source>
          <target state="translated">Конкретные сигналы</target>
        </trans-unit>
        <trans-unit id="012d095adddd2c75c8a53cf7b075e562107942d0" translate="yes" xml:space="preserve">
          <source>Specifically, a package &lt;em&gt;P is trusted&lt;/em&gt; when one of these hold:</source>
          <target state="translated">В частности, пакет &lt;em&gt;P считается доверенным,&lt;/em&gt; когда выполняется одно из следующих условий:</target>
        </trans-unit>
        <trans-unit id="31067049b8259a6fe75ff4e59dea7ee1d9fd4720" translate="yes" xml:space="preserve">
          <source>Specifically, we apply the following rule to determine if a type-class method call is &lt;em&gt;unsafe&lt;/em&gt; when overlapping instances are involved:</source>
          <target state="translated">В частности, мы применяем следующее правило, чтобы определить, &lt;em&gt;небезопасен ли&lt;/em&gt; вызов метода класса типа, когда задействованы перекрывающиеся экземпляры:</target>
        </trans-unit>
        <trans-unit id="8500b954beac6c09bc9a2ffd80eaf5707b319a7f" translate="yes" xml:space="preserve">
          <source>Specifies the path to the package environment file to be used by GHC. Overridden by the &lt;a href=&quot;#ghc-flag--package-env%20%E2%9F%A8file%E2%9F%A9%7C%E2%9F%A8name%E2%9F%A9&quot;&gt;&lt;code&gt;-package-env ⟨file⟩|⟨name⟩&lt;/code&gt;&lt;/a&gt; flag if set.</source>
          <target state="translated">Задает путь к файлу среды пакета, который будет использоваться GHC. Переопределяется флагом -package &lt;a href=&quot;#ghc-flag--package-env%20%E2%9F%A8file%E2%9F%A9%7C%E2%9F%A8name%E2%9F%A9&quot;&gt; &lt;code&gt;-package-env ⟨file⟩|⟨name⟩&lt;/code&gt; &lt;/a&gt; если он установлен.</target>
        </trans-unit>
        <trans-unit id="1b4862443cf2a7d1cac51c15b30d894bfc62157c" translate="yes" xml:space="preserve">
          <source>Specifies the translation, if any, of newline characters between internal Strings and the external file or stream. Haskell Strings are assumed to represent newlines with the &lt;code&gt;'\n'&lt;/code&gt; character; the newline mode specifies how to translate &lt;code&gt;'\n'&lt;/code&gt; on output, and what to translate into &lt;code&gt;'\n'&lt;/code&gt; on input.</source>
          <target state="translated">Задает перевод, если таковой имеется, символов новой строки между внутренними строками и внешним файлом или потоком. Предполагается, что строки Haskell представляют новые строки с символом &lt;code&gt;'\n'&lt;/code&gt; ; режим новой строки определяет, как переводить &lt;code&gt;'\n'&lt;/code&gt; при выводе и что переводить в &lt;code&gt;'\n'&lt;/code&gt; при вводе.</target>
        </trans-unit>
        <trans-unit id="ebf5b69cd7c66af683c0b7a42a0af08526744a15" translate="yes" xml:space="preserve">
          <source>Specify a directory in which to look for &lt;code&gt;#include&lt;/code&gt; files, in the usual C way.</source>
          <target state="translated">Укажите каталог, в котором следует искать файлы &lt;code&gt;#include&lt;/code&gt; обычным способом для языка C.</target>
        </trans-unit>
        <trans-unit id="8d4c49c89d68c7a927228351dcbcc9ab40cd7d1e" translate="yes" xml:space="preserve">
          <source>Specify the set of constructors or pattern synonyms which constitute a total match.</source>
          <target state="translated">Укажите набор конструкторов или синонимов шаблонов,которые составляют полное совпадение.</target>
        </trans-unit>
        <trans-unit id="00db81cc99d352529fe191ffc9903c20f150f263" translate="yes" xml:space="preserve">
          <source>Specifying 1 generation with &lt;code&gt;+RTS -G1&lt;/code&gt; gives you a simple 2-space collector, as you would expect. In a 2-space collector, the &lt;a href=&quot;#rts-flag--A%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-A
⟨size⟩&lt;/code&gt;&lt;/a&gt; option specifies the &lt;em&gt;minimum&lt;/em&gt; allocation area size, since the allocation area will grow with the amount of live data in the heap. In a multi-generational collector the allocation area is a fixed size (unless you use the &lt;a href=&quot;#rts-flag--H%20%5B%E2%9F%A8size%E2%9F%A9%5D&quot;&gt;&lt;code&gt;-H [⟨size⟩]&lt;/code&gt;&lt;/a&gt; option).</source>
          <target state="translated">Как и следовало ожидать, &lt;code&gt;+RTS -G1&lt;/code&gt; 1 поколения с помощью + RTS -G1 дает вам простой 2-пространственный коллектор. В &lt;a href=&quot;#rts-flag--A%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-A ⟨size⟩&lt;/code&gt; &lt;/a&gt; с двумя пространствами опция -A &amp;laquo;размер&amp;raquo; указывает &lt;em&gt;минимальный&lt;/em&gt; размер области выделения, так как область выделения будет расти вместе с объемом оперативных данных в куче. В &lt;a href=&quot;#rts-flag--H%20%5B%E2%9F%A8size%E2%9F%A9%5D&quot;&gt; &lt;code&gt;-H [⟨size⟩]&lt;/code&gt; &lt;/a&gt; с несколькими поколениями область распределения имеет фиксированный размер (если вы не используете параметр -H [⟨size⟩] ).</target>
        </trans-unit>
        <trans-unit id="bf1ac07144caf163566ae2b03385ea555d86cddf" translate="yes" xml:space="preserve">
          <source>Split a filename into directory and file. &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; is the inverse. The first component will often end with a trailing slash.</source>
          <target state="translated">Разделите имя файла на каталог и файл. &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; - это обратное. Первый компонент часто заканчивается косой чертой в конце.</target>
        </trans-unit>
        <trans-unit id="d592948a8e0377a4243d7b9fc69951e953dde864" translate="yes" xml:space="preserve">
          <source>Split a filename into directory and file. &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; is the inverse. The first component will often end with a trailing slash.</source>
          <target state="translated">Разделите имя файла на каталог и файл. &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; - это обратное. Первый компонент часто заканчивается косой чертой в конце.</target>
        </trans-unit>
        <trans-unit id="a2bc85796ff5f7226a895f062a3613441039aeea" translate="yes" xml:space="preserve">
          <source>Split a path by the directory separator.</source>
          <target state="translated">Разделите путь по разделителю каталогов.</target>
        </trans-unit>
        <trans-unit id="cebdf092e543b83f3fb3d5aeb6388d38ad7eac5a" translate="yes" xml:space="preserve">
          <source>Split a path into a drive and a path. On Posix, / is a Drive.</source>
          <target state="translated">Разделите путь на диск и путь.На По шесть это диск.</target>
        </trans-unit>
        <trans-unit id="cb53d1cfdd5b139b7bd5fc1b2a8bd36d0ed492a7" translate="yes" xml:space="preserve">
          <source>Split objects (for libraries)</source>
          <target state="translated">Разделенные объекты (для библиотек)</target>
        </trans-unit>
        <trans-unit id="2a067f724534a9c83887aebcdf2c883c2a8417e6" translate="yes" xml:space="preserve">
          <source>Split on all extensions.</source>
          <target state="translated">Разделите все расширения.</target>
        </trans-unit>
        <trans-unit id="e263c8e234fad76e90972473c790d76df84e5e16" translate="yes" xml:space="preserve">
          <source>Split on the extension. &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; is the inverse.</source>
          <target state="translated">Разделить на расширение. &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; - обратное.</target>
        </trans-unit>
        <trans-unit id="42c55528a61016a85d0981a77f718525c03afd02" translate="yes" xml:space="preserve">
          <source>Split on the extension. &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; is the inverse.</source>
          <target state="translated">Разделить на расширение. &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:addExtension&quot;&gt;addExtension&lt;/a&gt;&lt;/code&gt; - обратное.</target>
        </trans-unit>
        <trans-unit id="90c9f466e36b1d73c1fe86a7707a2200dcd9d2b3" translate="yes" xml:space="preserve">
          <source>Split sections for link-time dead-code stripping</source>
          <target state="translated">Разделенные секции для снятия мертвого кода во время соединения</target>
        </trans-unit>
        <trans-unit id="7af7b9d93aa19256eefce38852f4b5d272275331" translate="yes" xml:space="preserve">
          <source>Split the input between the two argument arrows and combine their output. Note that this is in general not a functor.</source>
          <target state="translated">Разделите вход между двумя стрелками аргументов и объедините их вывод.Обратите внимание,что это,в общем-то,не смешно.</target>
        </trans-unit>
        <trans-unit id="c1f4e0453574829c9c92fa9f38974ac29cedef5e" translate="yes" xml:space="preserve">
          <source>Split the input between the two argument arrows, retagging and merging their outputs. Note that this is in general not a functor.</source>
          <target state="translated">Разделите вход между двумя стрелками аргументов,перетасовывая и объединяя их выходы.Обратите внимание,что это,в общем-то,не functor.</target>
        </trans-unit>
        <trans-unit id="316d460a7a2507e25510a2601feefd8ca7cc2063" translate="yes" xml:space="preserve">
          <source>Splits a type constructor application. Note that if the type constructor is polymorphic, this will not return the kinds that were used.</source>
          <target state="translated">Разделяет приложение конструктора типа.Обратите внимание,что если конструктор типа является полиморфным,то это не вернет используемые типы.</target>
        </trans-unit>
        <trans-unit id="e7cf9a5d6d4c50cdabf326f01166416b681f8a38" translate="yes" xml:space="preserve">
          <source>Splitting functions in this library do not perform character-wise copies to create substrings; they just construct new &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;s that are slices of the original.</source>
          <target state="translated">Функции разделения в этой библиотеке не выполняют посимвольных копий для создания подстрок; они просто создают новые &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; , которые являются частями оригинала.</target>
        </trans-unit>
        <trans-unit id="ae15788730e0f1320a6a5a039cedc7a46ed9e446" translate="yes" xml:space="preserve">
          <source>Splitting functions in this library do not perform character-wise copies to create substrings; they just construct new &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;s that are slices of the original.</source>
          <target state="translated">Функции разделения в этой библиотеке не выполняют посимвольных копий для создания подстрок; они просто создают новые &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; , которые являются частями оригинала.</target>
        </trans-unit>
        <trans-unit id="da6ae66c86b9a6e3e1c72f728844ea7edf75d30e" translate="yes" xml:space="preserve">
          <source>Square &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Квадрат &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6779d64ea3734d3b574f9704fc863bcc4d27a144" translate="yes" xml:space="preserve">
          <source>Square &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Квадратное &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="90d977c737cfe8e295a62ac0d52b9b79cbdebb7f" translate="yes" xml:space="preserve">
          <source>SrcLoc</source>
          <target state="translated">SrcLoc</target>
        </trans-unit>
        <trans-unit id="785ca9526809c90e3417966be7d5844fd2a0c5c8" translate="yes" xml:space="preserve">
          <source>Stability</source>
          <target state="translated">Stability</target>
        </trans-unit>
        <trans-unit id="d96e5b2dd07c1733b2b013bd82922c22baade37d" translate="yes" xml:space="preserve">
          <source>Stable</source>
          <target state="translated">Stable</target>
        </trans-unit>
        <trans-unit id="1b9780093cdfd639e1fc94e37ddfc9e261e9c1dd" translate="yes" xml:space="preserve">
          <source>Stable Names</source>
          <target state="translated">Стабильные имена</target>
        </trans-unit>
        <trans-unit id="b124de185c68f1d92f48239730360ca3c1db0932" translate="yes" xml:space="preserve">
          <source>Stable Names are similar to Stable Pointers (&lt;a href=&quot;foreign-stableptr&quot;&gt;Foreign.StablePtr&lt;/a&gt;), but differ in the following ways:</source>
          <target state="translated">Стабильные имена похожи на стабильные указатели ( &lt;a href=&quot;foreign-stableptr&quot;&gt;Foreign.StablePtr&lt;/a&gt; ), но отличаются следующим образом:</target>
        </trans-unit>
        <trans-unit id="a01c1d0efe78a3ab9a11dd3d476288433a0081aa" translate="yes" xml:space="preserve">
          <source>Stable branches are numbered &lt;code&gt;x.y&lt;/code&gt;, where ⟨y⟩ is &lt;em&gt;even&lt;/em&gt;. Releases on the stable branch &lt;code&gt;x.y&lt;/code&gt; are numbered &lt;code&gt;x.y.z&lt;/code&gt;, where ⟨z⟩ (&amp;gt;= 1) is the patchlevel number. Patchlevels are bug-fix releases only, and never change the programmer interface to any system-supplied code. However, if you install a new patchlevel over an old one you will need to recompile any code that was compiled against the old libraries.</source>
          <target state="translated">Стабильные ветви пронумерованы &lt;code&gt;x.y&lt;/code&gt; , где ⟨y⟩ &lt;em&gt;четно&lt;/em&gt; . Релизы в стабильной ветке &lt;code&gt;x.y&lt;/code&gt; пронумерованы &lt;code&gt;x.y.z&lt;/code&gt; , где ⟨z⟩ (&amp;gt; = 1) - номер уровня исправления. Уровни исправлений - это только версии с исправлениями ошибок и никогда не изменяют интерфейс программиста на какой-либо системный код. Однако, если вы устанавливаете новый уровень исправлений поверх старого, вам нужно будет перекомпилировать любой код, который был скомпилирован для старых библиотек.</target>
        </trans-unit>
        <trans-unit id="4cd3f2d0c8741933dae5efc8c6c48a88e995a1c5" translate="yes" xml:space="preserve">
          <source>Stable names are a way of performing fast (O(1)), not-quite-exact comparison between objects.</source>
          <target state="translated">Стабильные имена-это способ быстрого (O(1)),не-квит-точного сравнения между объектами.</target>
        </trans-unit>
        <trans-unit id="6545f5f403dd45baa6ff4a3ad49d364a7e57e87a" translate="yes" xml:space="preserve">
          <source>Stable names have the following property:</source>
          <target state="translated">Стабильные имена имеют следующие свойства:</target>
        </trans-unit>
        <trans-unit id="c930dd441ec9a10fa8b41f15b63e01cc4a9157dc" translate="yes" xml:space="preserve">
          <source>Stable names solve the following problem: suppose you want to build a hash table with Haskell objects as keys, but you want to use pointer equality for comparison; maybe because the keys are large and hashing would be slow, or perhaps because the keys are infinite in size. We can't build a hash table using the address of the object as the key, because objects get moved around by the garbage collector, meaning a re-hash would be necessary after every garbage collection.</source>
          <target state="translated">Имена таблиц решают следующую проблему:предположим,что вы хотите построить хэш-таблицу с объектами Haskell в качестве ключей,но вы хотите использовать равенство указателей для сравнения;возможно,потому что ключи большие и хэширование будет медленным,или,возможно,потому что ключи бесконечного размера.Мы не можем построить хэш-таблицу,используя в качестве ключа адрес объекта,потому что объекты перемещаются сборщиком мусора,то есть повторный хэш будет необходим после каждой сборки мусора.</target>
        </trans-unit>
        <trans-unit id="8e44ac7fde1a959e4f87285404024914d18fcbbf" translate="yes" xml:space="preserve">
          <source>Stable pointers.</source>
          <target state="translated">Стабильные указатели.</target>
        </trans-unit>
        <trans-unit id="f96c029d1e410dab21513196d744d01064e5a832" translate="yes" xml:space="preserve">
          <source>Stable references to Haskell values</source>
          <target state="translated">Стабильные ссылки на значения Хаскелла</target>
        </trans-unit>
        <trans-unit id="b7009f4dd94170790b48faf243126af3763a3938" translate="yes" xml:space="preserve">
          <source>Stable snapshot releases are named &lt;code&gt;x.y.z.YYYYMMDD&lt;/code&gt;. where &lt;code&gt;YYYYMMDD&lt;/code&gt; is the date of the sources from which the snapshot was built, and &lt;code&gt;x.y.z+1&lt;/code&gt; is the next release to be made on that branch. For example, &lt;code&gt;6.8.1.20040225&lt;/code&gt; would be a snapshot of the &lt;code&gt;6.8&lt;/code&gt; branch during the development of &lt;code&gt;6.8.2&lt;/code&gt;.</source>
          <target state="translated">Стабильные выпуски моментальных снимков называются &lt;code&gt;x.y.z.YYYYMMDD&lt;/code&gt; . где &lt;code&gt;YYYYMMDD&lt;/code&gt; - это дата источников, из которых был создан снимок, а &lt;code&gt;x.y.z+1&lt;/code&gt; - это следующий выпуск, который будет сделан в этой ветке. Например, &lt;code&gt;6.8.1.20040225&lt;/code&gt; будет моментальным снимком ветви &lt;code&gt;6.8&lt;/code&gt; во время разработки &lt;code&gt;6.8.2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64feb94468e16e2ea70284003a8c4dfee7a2b84e" translate="yes" xml:space="preserve">
          <source>StableName</source>
          <target state="translated">StableName</target>
        </trans-unit>
        <trans-unit id="fbb55afa3444be1926fc9d52446de2670df59e35" translate="yes" xml:space="preserve">
          <source>StableName#</source>
          <target state="translated">StableName#</target>
        </trans-unit>
        <trans-unit id="de96d23d1deefa3ce99fa0a6afe698d4777eea5c" translate="yes" xml:space="preserve">
          <source>StablePtr</source>
          <target state="translated">StablePtr</target>
        </trans-unit>
        <trans-unit id="7e5628607d77a5b61e929e3d235dd3928a074751" translate="yes" xml:space="preserve">
          <source>StablePtr#</source>
          <target state="translated">StablePtr#</target>
        </trans-unit>
        <trans-unit id="f7b98e4b6482e7275550ba1011355872faf5ea2a" translate="yes" xml:space="preserve">
          <source>Stack trace functionality is exposed for use by Haskell programs in the &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-executionstack&quot;&gt;GHC.ExecutionStack&lt;/a&gt; module. See the Haddock documentation in this module for details regarding usage.</source>
          <target state="translated">Функциональные возможности трассировки стека доступны для использования программами Haskell в модуле &lt;a href=&quot;../libraries/base-4.13.0.0/ghc-executionstack&quot;&gt;GHC.ExecutionStack&lt;/a&gt; . Подробную информацию об использовании см. В документации Haddock в этом модуле.</target>
        </trans-unit>
        <trans-unit id="3714e866dbf3b26bb67f3d0d8dde5ef4dcd4ec16" translate="yes" xml:space="preserve">
          <source>Stack trace functionality is exposed for use by Haskell programs in the &lt;a href=&quot;../libraries/base-4.14.1.0/ghc-executionstack&quot;&gt;GHC.ExecutionStack&lt;/a&gt; module. See the Haddock documentation in this module for details regarding usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c48da7f7123f0ff64967c266833c6e4063f95a" translate="yes" xml:space="preserve">
          <source>Stack two pieces of error message on top of each other.</source>
          <target state="translated">Сложите два куска сообщения об ошибке поверх друг друга.</target>
        </trans-unit>
        <trans-unit id="11982574c05624fd4946dda5298cf9db6c679ef4" translate="yes" xml:space="preserve">
          <source>StackOverflow</source>
          <target state="translated">StackOverflow</target>
        </trans-unit>
        <trans-unit id="c7d890a6474c971c057ab4ea575d83552a62c69b" translate="yes" xml:space="preserve">
          <source>StackTrace</source>
          <target state="translated">StackTrace</target>
        </trans-unit>
        <trans-unit id="0bf83f962ea4728b5cef631d3fafc1a5854fc24f" translate="yes" xml:space="preserve">
          <source>Standalone &lt;code&gt;deriving&lt;/code&gt; declarations permit the use of a single, extra-constraints wildcard, like so:</source>
          <target state="translated">Автономные &lt;code&gt;deriving&lt;/code&gt; объявления разрешают использование единственного подстановочного знака дополнительных ограничений, например:</target>
        </trans-unit>
        <trans-unit id="ebe743ca060fac51902b85da54b6ccd49dd8f45d" translate="yes" xml:space="preserve">
          <source>StandaloneDeriving</source>
          <target state="translated">StandaloneDeriving</target>
        </trans-unit>
        <trans-unit id="cf09d1d65d0c5998001c536d15e70925e670b957" translate="yes" xml:space="preserve">
          <source>Standard C Functions</source>
          <target state="translated">Стандартные функции C</target>
        </trans-unit>
        <trans-unit id="dd904943e5d0e0ae554caef1ba1d493b42ea28e6" translate="yes" xml:space="preserve">
          <source>Standard Formatters</source>
          <target state="translated">Стандартные форматы</target>
        </trans-unit>
        <trans-unit id="e0571ffbdfbb2ed310c1a468b735edd6e5003c26" translate="yes" xml:space="preserve">
          <source>Standard Haskell has a rich type language. Types classify terms and serve to avoid many common programming mistakes. The kind language, however, is relatively simple, distinguishing only regular types (kind &lt;code&gt;Type&lt;/code&gt;) and type constructors (e.g. kind &lt;code&gt;Type -&amp;gt; Type -&amp;gt; Type&lt;/code&gt;). In particular when using advanced type system features, such as type families (&lt;a href=&quot;#type-families&quot;&gt;Type families&lt;/a&gt;) or GADTs (&lt;a href=&quot;#gadt&quot;&gt;Generalised Algebraic Data Types (GADTs)&lt;/a&gt;), this simple kind system is insufficient, and fails to prevent simple errors. Consider the example of type-level natural numbers, and length-indexed vectors:</source>
          <target state="translated">Стандартный Haskell имеет богатый язык типов. Типы классифицируют термины и помогают избежать многих распространенных ошибок программирования. Однако добрый язык относительно прост, различаются только обычные типы (тип &lt;code&gt;Type&lt;/code&gt; ) и конструкторы типов (например, тип &lt;code&gt;Type -&amp;gt; Type -&amp;gt; Type&lt;/code&gt; ). В частности, при использовании функций расширенной системы типов, таких как семейства типов (семейства &lt;a href=&quot;#type-families&quot;&gt;типов&lt;/a&gt; ) или GADT ( &lt;a href=&quot;#gadt&quot;&gt;обобщенные алгебраические типы данных (GADT)&lt;/a&gt; ), этой простой системы недостаточно, и она не может предотвратить простые ошибки. Рассмотрим пример натуральных чисел уровня типа и векторов с индексами длины:</target>
        </trans-unit>
        <trans-unit id="df22790aeb71a9887d25b6dd614d58cf9fb0694a" translate="yes" xml:space="preserve">
          <source>Standard IO Errors.</source>
          <target state="translated">Стандартные ошибки ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="249edee58712f047430f6cee9d157476dba55fa5" translate="yes" xml:space="preserve">
          <source>Standard decimal notation.</source>
          <target state="translated">Стандартная десятичная нотация.</target>
        </trans-unit>
        <trans-unit id="4a1d4ca499caf2fdda735441459f6399ddcd070d" translate="yes" xml:space="preserve">
          <source>Standard encodings of Haskell values</source>
          <target state="translated">Стандартные кодировки значений Хаскелла</target>
        </trans-unit>
        <trans-unit id="6641ea0e41b6762a2dc18847e3792238d0d52d15" translate="yes" xml:space="preserve">
          <source>Standard file descriptors</source>
          <target state="translated">Стандартные дескрипторы файлов</target>
        </trans-unit>
        <trans-unit id="95653fb800f837db1f88a5516a37229f7e9ae2b9" translate="yes" xml:space="preserve">
          <source>Standard functions on rational numbers</source>
          <target state="translated">Стандартные функции по рациональным числам</target>
        </trans-unit>
        <trans-unit id="41705579c741338bdfe2f2ddf805a96446f8e522" translate="yes" xml:space="preserve">
          <source>Standard handles</source>
          <target state="translated">Стандартные ручки</target>
        </trans-unit>
        <trans-unit id="feb489760695bfa9f478fd69772c4e317ba3a9fa" translate="yes" xml:space="preserve">
          <source>Standard input and output</source>
          <target state="translated">Стандартный вход и выход</target>
        </trans-unit>
        <trans-unit id="8a130b0aafbe13ee540535ba34a95f4a2bd1d78e" translate="yes" xml:space="preserve">
          <source>Standard types, classes and related functions</source>
          <target state="translated">Стандартные типы,классы и связанные с ними функции</target>
        </trans-unit>
        <trans-unit id="05565eead6cfb1432b88147e2b7df47f443c8aa8" translate="yes" xml:space="preserve">
          <source>StarIsType</source>
          <target state="translated">StarIsType</target>
        </trans-unit>
        <trans-unit id="b71fa15cc8a020abade88d38b208048c963ab2a9" translate="yes" xml:space="preserve">
          <source>StarT</source>
          <target state="translated">StarT</target>
        </trans-unit>
        <trans-unit id="952f375412e89ff213a8aca383d18e5691354347" translate="yes" xml:space="preserve">
          <source>Start</source>
          <target state="translated">Start</target>
        </trans-unit>
        <trans-unit id="164f116940c507103d0f7330fae894367bd8f944" translate="yes" xml:space="preserve">
          <source>Start &lt;code&gt;UniqSupply&lt;/code&gt; allocation from ⟨s⟩.</source>
          <target state="translated">Начать &lt;code&gt;UniqSupply&lt;/code&gt; выделения из ⟨s⟩.</target>
        </trans-unit>
        <trans-unit id="87cd67587e7700e90403704138073c86ff153532" translate="yes" xml:space="preserve">
          <source>Start a new TH module, return a state token that should be</source>
          <target state="translated">Запустите новый модуль TH,верните токен состояния,который должен быть</target>
        </trans-unit>
        <trans-unit id="05924043e5e4e1f8094f7c0ced251fc393740a73" translate="yes" xml:space="preserve">
          <source>Start attributing ticks to cost centres. This is called by the RTS on startup.</source>
          <target state="translated">Начните приписывать галочки стоимостным центрам.Это называется RTS при старте.</target>
        </trans-unit>
        <trans-unit id="e956beda0bcd377f3930544bb800c5b08449c53e" translate="yes" xml:space="preserve">
          <source>Start logging events to the given &lt;a href=&quot;#c.EventLogWriter&quot;&gt;&lt;code&gt;EventLogWriter&lt;/code&gt;&lt;/a&gt;. Returns true on success or false is another writer has already been configured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce1d9a5005d443d987ee67873bd91b0a6d5100e" translate="yes" xml:space="preserve">
          <source>StartStopInput</source>
          <target state="translated">StartStopInput</target>
        </trans-unit>
        <trans-unit id="c52f329a2ad4e9037d6af00f2143b3e11f38996b" translate="yes" xml:space="preserve">
          <source>StartStopOutput</source>
          <target state="translated">StartStopOutput</target>
        </trans-unit>
        <trans-unit id="9760639dd8bd243ed8a34ff7a71ee1c87cbfc596" translate="yes" xml:space="preserve">
          <source>Starting an annotation.</source>
          <target state="translated">Начинаю аннотацию.</target>
        </trans-unit>
        <trans-unit id="a2bbf1741439888f11bdd7d78ae7a3c39a61635c" translate="yes" xml:space="preserve">
          <source>Starting with GHC 7.10, the example above can be written more concisely by enabling the new &lt;code&gt;DeriveAnyClass&lt;/code&gt; extension:</source>
          <target state="translated">Начиная с GHC 7.10, приведенный выше пример можно написать более кратко, включив новое расширение &lt;code&gt;DeriveAnyClass&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="443aedd3cb6408bc6151745f0efb5bde637384f3" translate="yes" xml:space="preserve">
          <source>Starting with GHC 7.2, you can automatically derive instances for types possessing a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Начиная с GHC 7.2, вы можете автоматически создавать экземпляры для типов, обладающих экземпляром &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="083897f53ad9288353b0b64c6973be990cb1d2df" translate="yes" xml:space="preserve">
          <source>Starting with GHC 7.2, you can automatically derive instances for types possessing a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-generics#t:Generic&quot;&gt;Generic&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0717d7a07a44a226da10392758555b92d5c36a4e" translate="yes" xml:space="preserve">
          <source>Starting with GHC 8.0 type families can be annotated with injectivity information. This information is then used by GHC during type checking to resolve type ambiguities in situations where a type variable appears only under type family applications. Consider this contrived example:</source>
          <target state="translated">Начиная с GHC 8.0 семейства могут быть аннотированы информацией о приёмистости.Эта информация затем используется GHC при проверке типов для разрешения неоднозначности типов в ситуациях,когда переменная типа появляется только в приложениях семейства типов.Рассмотрим этот надуманный пример:</target>
        </trans-unit>
        <trans-unit id="fa3a5bbcd112252696951a4fcf34da3cfa7847b0" translate="yes" xml:space="preserve">
          <source>Starting with minimal verbosity (&lt;code&gt;-v1&lt;/code&gt;, see &lt;a href=&quot;#ghc-flag--v&quot;&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/a&gt;), GHC displays the name, the source path and the target path of each compiled module. This flag can be used to reduce GHC&amp;rsquo;s output by hiding source paths and target paths.</source>
          <target state="translated">Начиная с минимальным многословием ( &lt;code&gt;-v1&lt;/code&gt; см &lt;a href=&quot;#ghc-flag--v&quot;&gt; &lt;code&gt;-v&lt;/code&gt; &lt;/a&gt; ), GHC отображает имя, исходный путь и путь назначения каждого скомпилированного модуля. Этот флаг можно использовать для уменьшения вывода GHC, скрывая исходные и целевые пути.</target>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="translated">State</target>
        </trans-unit>
        <trans-unit id="66da945894f82db14a77a8be2c6323321041bb1c" translate="yes" xml:space="preserve">
          <source>State monads</source>
          <target state="translated">государственные монады</target>
        </trans-unit>
        <trans-unit id="158b4d2c36c72da53e5e963fedebe7ce62a55af8" translate="yes" xml:space="preserve">
          <source>State operations</source>
          <target state="translated">государственные операции</target>
        </trans-unit>
        <trans-unit id="536a546647686d5dbe50b90d5b04f3d2452d84ce" translate="yes" xml:space="preserve">
          <source>State#</source>
          <target state="translated">State#</target>
        </trans-unit>
        <trans-unit id="79532d5103d1a13b6e1c0c339a9743192eeb51c6" translate="yes" xml:space="preserve">
          <source>StateT</source>
          <target state="translated">StateT</target>
        </trans-unit>
        <trans-unit id="e5f4ecfe4af1087571afda2ddc97808c6498333b" translate="yes" xml:space="preserve">
          <source>Static pointers were first proposed in the paper &lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/remote.pdf&quot;&gt;Towards Haskell in the cloud&lt;/a&gt;, Jeff Epstein, Andrew P. Black and Simon Peyton-Jones, Proceedings of the 4th ACM Symposium on Haskell, pp. 118-129, ACM, 2011.</source>
          <target state="translated">Статические указатели были впервые предложены в статье &lt;a href=&quot;http://research.microsoft.com/en-us/um/people/simonpj/papers/parallel/remote.pdf&quot;&gt;К Haskell в облаке&lt;/a&gt; Джеффа Эпштейна, Эндрю П. Блэка и Саймона Пейтон-Джонса, Proceedings of the 4th ACM Symposium on Haskell, pp. 118-129, ACM, 2011.</target>
        </trans-unit>
        <trans-unit id="74315e17a1a8b045102ac7e9df4355c190ad7a64" translate="yes" xml:space="preserve">
          <source>StaticKey</source>
          <target state="translated">StaticKey</target>
        </trans-unit>
        <trans-unit id="c4cf883c115ad4a37a0d8ea79661e165e8cf7edf" translate="yes" xml:space="preserve">
          <source>StaticPointers</source>
          <target state="translated">StaticPointers</target>
        </trans-unit>
        <trans-unit id="04c2c864bcbffe68997c27cc94d1413712fc6055" translate="yes" xml:space="preserve">
          <source>StaticPtr</source>
          <target state="translated">StaticPtr</target>
        </trans-unit>
        <trans-unit id="1985d9c485de177986ea553f7aa1b1ec15724799" translate="yes" xml:space="preserve">
          <source>StaticPtrInfo</source>
          <target state="translated">StaticPtrInfo</target>
        </trans-unit>
        <trans-unit id="b6ed444cfd31a4303c65cc81df375b9c2410e95d" translate="yes" xml:space="preserve">
          <source>Statistics about a single GC. This is a mirror of the C &lt;code&gt;struct
   GCDetails&lt;/code&gt; in &lt;code&gt;RtsAPI.h&lt;/code&gt;, with the field prefixed with &lt;code&gt;gc_&lt;/code&gt; to avoid collisions with &lt;code&gt;&lt;a href=&quot;ghc-stats#t:RTSStats&quot;&gt;RTSStats&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Статистика по одному GC. Это зеркало C &lt;code&gt;struct GCDetails&lt;/code&gt; в &lt;code&gt;RtsAPI.h&lt;/code&gt; с полем с префиксом &lt;code&gt;gc_&lt;/code&gt; , чтобы избежать конфликтов с &lt;code&gt;&lt;a href=&quot;ghc-stats#t:RTSStats&quot;&gt;RTSStats&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfe3c1150c6acf9c8d532af7cedc95d73c3a8d58" translate="yes" xml:space="preserve">
          <source>Statistics about runtime activity since the start of the program. This is a mirror of the C &lt;code&gt;struct RTSStats&lt;/code&gt; in &lt;code&gt;RtsAPI.h&lt;/code&gt;</source>
          <target state="translated">Статистика активности выполнения с момента запуска программы. Это зеркало C &lt;code&gt;struct RTSStats&lt;/code&gt; в &lt;code&gt;RtsAPI.h&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e42b22b2b6b3e7f57c4367d72673984413ed8319" translate="yes" xml:space="preserve">
          <source>StdCall</source>
          <target state="translated">StdCall</target>
        </trans-unit>
        <trans-unit id="f187fc429f4baaf1f243e44e3303328c03854a81" translate="yes" xml:space="preserve">
          <source>StdStream</source>
          <target state="translated">StdStream</target>
        </trans-unit>
        <trans-unit id="dc416e1088e4bf094dfc9abe0210e0288f5a169e" translate="yes" xml:space="preserve">
          <source>Step</source>
          <target state="translated">Step</target>
        </trans-unit>
        <trans-unit id="db05c9beb5e691dc03390a6a1b7db16a6ffddc7d" translate="yes" xml:space="preserve">
          <source>Stephen Adams, &quot;&lt;em&gt;Efficient sets: a balancing act&lt;/em&gt;&quot;, Journal of Functional Programming 3(4):553-562, October 1993, &lt;a href=&quot;http://www.swiss.ai.mit.edu/~adams/BB/&quot;&gt;http://www.swiss.ai.mit.edu/~adams/BB/&lt;/a&gt;.</source>
          <target state="translated">Стивен Адамс, &amp;laquo; &lt;em&gt;Эффективные наборы: балансирование&lt;/em&gt; &amp;raquo;, Журнал функционального программирования 3 (4): 553-562, октябрь 1993 г., &lt;a href=&quot;http://www.swiss.ai.mit.edu/~adams/BB/&quot;&gt;http://www.swiss.ai.mit.edu/~adams/BB/&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35cb1f2f3090469fddd290f48f6f6f66f6cfbf71" translate="yes" xml:space="preserve">
          <source>Stmt</source>
          <target state="translated">Stmt</target>
        </trans-unit>
        <trans-unit id="31572ff73d7bde41a9d74f83a2ddad260f7a6baa" translate="yes" xml:space="preserve">
          <source>StmtQ</source>
          <target state="translated">StmtQ</target>
        </trans-unit>
        <trans-unit id="de21a77acb31d0982c49a80ac234a3a75eaede79" translate="yes" xml:space="preserve">
          <source>Stock type classes, i.e. those specified in the report and those enabled by &lt;a href=&quot;#deriving-extra&quot;&gt;language extensions&lt;/a&gt;, are derived using the &lt;code&gt;stock&lt;/code&gt; strategy, with the following exception:</source>
          <target state="translated">Классы типов акций, то есть те, которые указаны в отчете, и те, которые включены с помощью &lt;a href=&quot;#deriving-extra&quot;&gt;языковых расширений&lt;/a&gt; , выводятся с использованием стратегии &lt;code&gt;stock&lt;/code&gt; , за следующим исключением:</target>
        </trans-unit>
        <trans-unit id="204cbd05b28e23bed603f5dd8080b3836a48b443" translate="yes" xml:space="preserve">
          <source>StockStrategy</source>
          <target state="translated">StockStrategy</target>
        </trans-unit>
        <trans-unit id="2384b537a83bb6a33e1d390c0c67ee850919b47c" translate="yes" xml:space="preserve">
          <source>Stolen (in types) by default (see &lt;a href=&quot;bugs#infelicities-lexical&quot;&gt;Lexical syntax&lt;/a&gt;). &lt;code&gt;forall&lt;/code&gt; is a reserved keyword and never a type variable, in accordance with &lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0043-forall-keyword.rst&quot;&gt;GHC Proposal #43&lt;/a&gt;.</source>
          <target state="translated">По умолчанию украдено (по типам) (см. &lt;a href=&quot;bugs#infelicities-lexical&quot;&gt;Лексический синтаксис&lt;/a&gt; ). &lt;code&gt;forall&lt;/code&gt; - это зарезервированное ключевое слово, а не переменная типа, в соответствии с &lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/blob/master/proposals/0043-forall-keyword.rst&quot;&gt;предложением №43 GHC&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0109369d2950503b351e2a645b66ee0cdfb0870d" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-Arrows&quot;&gt;&lt;code&gt;Arrows&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Похищено: &lt;a href=&quot;#extension-Arrows&quot;&gt; &lt;code&gt;Arrows&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5fc6096bd7063eafd5e2d7f8790bd891b7444589" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-BangPatterns&quot;&gt;&lt;code&gt;BangPatterns&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Украдено: &lt;a href=&quot;#extension-BangPatterns&quot;&gt; &lt;code&gt;BangPatterns&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="694982805bbb9dcc8a752cd200a66c9de952c939" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-ImplicitParams&quot;&gt;&lt;code&gt;ImplicitParams&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Украдено: &lt;a href=&quot;#extension-ImplicitParams&quot;&gt; &lt;code&gt;ImplicitParams&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9dd99f3a29bdf521b42a19c25458329948cfb7d" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-MagicHash&quot;&gt;&lt;code&gt;MagicHash&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#extension-MagicHash&quot;&gt; &lt;code&gt;MagicHash&lt;/code&gt; &lt;/a&gt; : MagicHash</target>
        </trans-unit>
        <trans-unit id="653e10151f5343c05b8d78af3a7faf47567411a0" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt;&lt;code&gt;PatternSynonyms&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Украдено: &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt; &lt;code&gt;PatternSynonyms&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3efe252a38c04276c73af597275737fcd9cfdad6" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt;&lt;code&gt;QuasiQuotes&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Украдено: &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt; &lt;code&gt;QuasiQuotes&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="77ef467f6713170bca1aee5678526a7c56d8ba32" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-QuasiQuotes&quot;&gt;&lt;code&gt;QuasiQuotes&lt;/code&gt;&lt;/a&gt;. Moreover, this introduces an ambiguity with list comprehension syntax. See the &lt;a href=&quot;#quasi-quotes-list-comprehension-ambiguity&quot;&gt;discussion on quasi-quoting&lt;/a&gt; for details.</source>
          <target state="translated">&lt;a href=&quot;#extension-QuasiQuotes&quot;&gt; &lt;code&gt;QuasiQuotes&lt;/code&gt; &lt;/a&gt; : QuasiQuotes . Более того, это вносит двусмысленность в синтаксис понимания списка. См. Подробности в &lt;a href=&quot;#quasi-quotes-list-comprehension-ambiguity&quot;&gt;обсуждении квазицитирования&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c972925d5d27b40147d40d5e67b8fcfe3d1b5c4" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-RecursiveDo&quot;&gt;&lt;code&gt;RecursiveDo&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Похищено: &lt;a href=&quot;#extension-RecursiveDo&quot;&gt; &lt;code&gt;RecursiveDo&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7f9280e17d67586f2b5b75560c5c0e17b233c4d" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-StaticPointers&quot;&gt;&lt;code&gt;StaticPointers&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Украдено: &lt;a href=&quot;#extension-StaticPointers&quot;&gt; &lt;code&gt;StaticPointers&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7856923f2170cc077edb89e9a27de0c565b9f3d5" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-TemplateHaskell&quot;&gt;&lt;code&gt;TemplateHaskell&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Похищено: &lt;a href=&quot;#extension-TemplateHaskell&quot;&gt; &lt;code&gt;TemplateHaskell&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef9015f89e07e2c82a32bc002e98ffaf87a6d39d" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;#extension-UnboxedTuples&quot;&gt;&lt;code&gt;UnboxedTuples&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Украдено: &lt;a href=&quot;#extension-UnboxedTuples&quot;&gt; &lt;code&gt;UnboxedTuples&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fed63a5d990e7192e1cdc7d3914885acbeebf644" translate="yes" xml:space="preserve">
          <source>Stolen by: &lt;a href=&quot;ffi-chap#extension-ForeignFunctionInterface&quot;&gt;&lt;code&gt;ForeignFunctionInterface&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Украдено: &lt;a href=&quot;ffi-chap#extension-ForeignFunctionInterface&quot;&gt; &lt;code&gt;ForeignFunctionInterface&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e253470c876ee6d5c720eb777aeb82d4c26e28f" translate="yes" xml:space="preserve">
          <source>Stop</source>
          <target state="translated">Stop</target>
        </trans-unit>
        <trans-unit id="b413b82268045c1e7ece0c70b4a9a04ae7c50bcc" translate="yes" xml:space="preserve">
          <source>Stop after generating C (&lt;code&gt;.hc&lt;/code&gt; file)</source>
          <target state="translated">Остановить после создания C ( файла &lt;code&gt;.hc&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="77bce4d6858afe8047dad68e79b4b967e9dbc28a" translate="yes" xml:space="preserve">
          <source>Stop after generating assembly (&lt;code&gt;.s&lt;/code&gt; file)</source>
          <target state="translated">Остановить после создания сборки ( файл &lt;code&gt;.s&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="72f8e464de0b7ece18b856f82c9428b57e04e974" translate="yes" xml:space="preserve">
          <source>Stop after generating object (&lt;code&gt;.o&lt;/code&gt;) file</source>
          <target state="translated">Остановить после создания файла объекта ( &lt;code&gt;.o&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ccf7f91d046e26549f0e33e6e9690b34f2c10594" translate="yes" xml:space="preserve">
          <source>Stop after preprocessing (&lt;code&gt;.hspp&lt;/code&gt; file)</source>
          <target state="translated">Остановить после предварительной обработки ( файл &lt;code&gt;.hspp&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="04cf767bea5cd66e2d50d24b00a36eb3c8c924af" translate="yes" xml:space="preserve">
          <source>Stop after writing out the intermediate C program to disk. The file name for the intermediate C program is the input file name with &lt;code&gt;.hsc&lt;/code&gt; replaced with &lt;code&gt;_hsc_make.c&lt;/code&gt;.</source>
          <target state="translated">Остановитесь после записи промежуточной программы C на диск. Имя файла для промежуточной программы C - это имя входного файла, где &lt;code&gt;.hsc&lt;/code&gt; заменено на &lt;code&gt;_hsc_make.c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="023c4f92246f4178341e6f0a01ceb000f420e539" translate="yes" xml:space="preserve">
          <source>Stop attributing ticks to cost centres. Allocations will still be attributed.</source>
          <target state="translated">Прекрати приписывать галочки стоимостным центрам.Ассигнования все равно будут приписываться.</target>
        </trans-unit>
        <trans-unit id="988ad614c0272f1d7935dae544cb67bc6c2c9fa0" translate="yes" xml:space="preserve">
          <source>Stopped because the input contains insufficient available elements, or all of the input sequence has been successfully translated.</source>
          <target state="translated">Остановлен,потому что вход содержит недостаточно доступных элементов,или вся входная последовательность была успешно транслирована.</target>
        </trans-unit>
        <trans-unit id="a8ba068bf5a51f6b6475c3d5a9cb52f8a6f89148" translate="yes" xml:space="preserve">
          <source>Stopped because the output contains insufficient free elements</source>
          <target state="translated">Остановлено,потому что на выходе недостаточно свободных элементов.</target>
        </trans-unit>
        <trans-unit id="5af0db05a6b8a98c75558631d0f653da1ee69ba7" translate="yes" xml:space="preserve">
          <source>Stopped because there are sufficient free elements in the output to output at least one encoded ASCII character, but the input contains an invalid or unrepresentable sequence</source>
          <target state="translated">Остановлен,потому что в выводе достаточно свободных элементов для вывода хотя бы одного закодированного ASCII-символа,но на входе содержится недействительная или непрезентабельная последовательность</target>
        </trans-unit>
        <trans-unit id="45b0f8b6273dfd6e7997a4038c99b48d40e17dae" translate="yes" xml:space="preserve">
          <source>Storable</source>
          <target state="translated">Storable</target>
        </trans-unit>
        <trans-unit id="3b41fc4e981bcddf2ba33abc4e193e3e4d082300" translate="yes" xml:space="preserve">
          <source>StorableArray</source>
          <target state="translated">StorableArray</target>
        </trans-unit>
        <trans-unit id="df063869e11d7a9aa132cd4a984f7b5eb870d656" translate="yes" xml:space="preserve">
          <source>Stream</source>
          <target state="translated">Stream</target>
        </trans-unit>
        <trans-unit id="3be78028889b120996da7446ec1e97f062f6f5e6" translate="yes" xml:space="preserve">
          <source>Stream interface</source>
          <target state="translated">Интерфейс Stream</target>
        </trans-unit>
        <trans-unit id="a48481a1738943e8ff33ac4241138fa17939a34e" translate="yes" xml:space="preserve">
          <source>Stream oriented decoding</source>
          <target state="translated">Потоковое декодирование</target>
        </trans-unit>
        <trans-unit id="1b965be2081b010a98a8633b41b3ef04aba79c9a" translate="yes" xml:space="preserve">
          <source>Stream the UTF-8-like packed encoding used by GHC to represent constant strings in generated code.</source>
          <target state="translated">Потоковая UTF-8-подобная упакованная кодировка,используемая GHC для представления постоянных строк в генерируемом коде.</target>
        </trans-unit>
        <trans-unit id="e39823f5d6394e4bb2bfdaafc16bb62eb67d74f1" translate="yes" xml:space="preserve">
          <source>StreamPermParser</source>
          <target state="translated">StreamPermParser</target>
        </trans-unit>
        <trans-unit id="1e8325521df6e6903ede77955f9bf1a333363aed" translate="yes" xml:space="preserve">
          <source>Streaming</source>
          <target state="translated">Streaming</target>
        </trans-unit>
        <trans-unit id="47ed8fde8f8f26c0b70f354149f72da58928a969" translate="yes" xml:space="preserve">
          <source>Strict</source>
          <target state="translated">Strict</target>
        </trans-unit>
        <trans-unit id="b055906719fced632d6400efb20c56d4258a207b" translate="yes" xml:space="preserve">
          <source>Strict (call-by-value) application operator. It takes a function and an argument, evaluates the argument to weak head normal form (WHNF), then calls the function with that value.</source>
          <target state="translated">Строгий (по стоимости звонка)оператор приложения.Он берет функцию и аргумент,оценивает аргумент до нормальной формы слабой головы (WHNF),затем вызывает функцию с этим значением.</target>
        </trans-unit>
        <trans-unit id="2363e1b8ae1b0a70a1ec6e14abb0c9296f7b59e1" translate="yes" xml:space="preserve">
          <source>Strict RWS monad.</source>
          <target state="translated">Строгая RWS-монада.</target>
        </trans-unit>
        <trans-unit id="76c36336f1c9bfc6331550790fe3c915ad08f140" translate="yes" xml:space="preserve">
          <source>Strict Reader-writer-state monads</source>
          <target state="translated">Строгие монады Читатель-писатель-государство</target>
        </trans-unit>
        <trans-unit id="24fea344d26bff4ae8bc8eed70c80a6cb9aa0f42" translate="yes" xml:space="preserve">
          <source>Strict data types (&lt;a href=&quot;#extension-StrictData&quot;&gt;&lt;code&gt;StrictData&lt;/code&gt;&lt;/a&gt;) makes constructor fields strict by default, on a per-module basis.</source>
          <target state="translated">Строгие типы данных ( &lt;a href=&quot;#extension-StrictData&quot;&gt; &lt;code&gt;StrictData&lt;/code&gt; &lt;/a&gt; ) делают поля конструктора строгими по умолчанию для каждого модуля.</target>
        </trans-unit>
        <trans-unit id="783404847dd6d8a5d62d9c622cb41988c5035941" translate="yes" xml:space="preserve">
          <source>Strict folds</source>
          <target state="translated">Строгие складки</target>
        </trans-unit>
        <trans-unit id="d3d907b1eb1f2241730e00b68e6ba576432e2b4d" translate="yes" xml:space="preserve">
          <source>Strict functions are good for space usage, as they are for time, as discussed in the previous section. Strict functions get right down to business, rather than filling up the heap with closures (the system&amp;rsquo;s notes to itself about how to evaluate something, should it eventually be required).</source>
          <target state="translated">Строгие функции хороши как для использования пространства, так и для времени, как обсуждалось в предыдущем разделе. Строгие функции переходят прямо к делу, а не заполняют кучу замыканиями (примечания системы к самой себе о том, как что-то оценивать, если это в конечном итоге потребуется).</target>
        </trans-unit>
        <trans-unit id="8c4eb494994ad32b8dbb336545842b450c139303" translate="yes" xml:space="preserve">
          <source>Strict functions are your dear friends:</source>
          <target state="translated">Строгие функции-твои дорогие друзья:</target>
        </trans-unit>
        <trans-unit id="a914659b0f38edc507ba27a21a6bdfb6fb5c1655" translate="yes" xml:space="preserve">
          <source>Strict monadic functions</source>
          <target state="translated">Строгие монадские функции</target>
        </trans-unit>
        <trans-unit id="9ca63820e49dcf2df96864861f0eefabb957830d" translate="yes" xml:space="preserve">
          <source>Strict monads</source>
          <target state="translated">Строгие монады</target>
        </trans-unit>
        <trans-unit id="4c509cf9b703d49cd6bbacf171b7c6babe197659" translate="yes" xml:space="preserve">
          <source>Strict pair.</source>
          <target state="translated">Строгая пара.</target>
        </trans-unit>
        <trans-unit id="35d0eb483830c5ebf332d2a08d7d715707ad4d98" translate="yes" xml:space="preserve">
          <source>Strict pattern (&lt;a href=&quot;#extension-Strict&quot;&gt;&lt;code&gt;Strict&lt;/code&gt;&lt;/a&gt;) makes all patterns and let bindings strict by default, on a per-module basis.</source>
          <target state="translated">Строгий шаблон ( &lt;a href=&quot;#extension-Strict&quot;&gt; &lt;code&gt;Strict&lt;/code&gt; &lt;/a&gt; ) делает все шаблоны и позволяет связывать строгие по умолчанию для каждого модуля.</target>
        </trans-unit>
        <trans-unit id="397ea718e8a9c7d01c35b292cb86a750beb71caa" translate="yes" xml:space="preserve">
          <source>Strict state monads, passing an updatable state through a computation. See below for examples.</source>
          <target state="translated">Монады строгого состояния,переходящие в обновляемое состояние через вычисления.См.примеры ниже.</target>
        </trans-unit>
        <trans-unit id="8e2a656a92ddc304255d0a52d40959ab09737cb2" translate="yes" xml:space="preserve">
          <source>Strict state monads.</source>
          <target state="translated">Строгие государственные монады.</target>
        </trans-unit>
        <trans-unit id="c23a76f4f4cbe7a8a5ea9caabae32c329023144a" translate="yes" xml:space="preserve">
          <source>Strict version of &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#v:modifyTVar&quot;&gt;modifyTVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Строгая версия &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#v:modifyTVar&quot;&gt;modifyTVar&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9f6e9fe1cf7ec312e545a2b19d927d754a6713f" translate="yes" xml:space="preserve">
          <source>Strict version of &lt;code&gt;&lt;a href=&quot;data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Строгая версия &lt;code&gt;&lt;a href=&quot;data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5b1f7c9a0fe31f46ed198e1435d2adf277aa5a7" translate="yes" xml:space="preserve">
          <source>Strict version of &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt;. This forces both the value stored in the &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; and the value returned. The new value is installed in the &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; before the returned value is forced. So</source>
          <target state="translated">Строгая версия &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; . Это заставляет как значение, хранящееся в &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; ,так и возвращаемое значение. Новое значение устанавливается в &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; перед принудительным возвратом возвращаемого значения. Так</target>
        </trans-unit>
        <trans-unit id="42d8bc23e3f7197b0d30446e7060aeae40e600db" translate="yes" xml:space="preserve">
          <source>Strict version of &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt;. This forces both the value stored in the &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; and the value returned. The new value is installed in the &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; before the returned value is forced. So</source>
          <target state="translated">Строгая версия &lt;code&gt;&lt;a href=&quot;data-ioref#v:atomicModifyIORef&quot;&gt;atomicModifyIORef&lt;/a&gt;&lt;/code&gt; . Это заставляет как значение, хранящееся в &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; ,так и возвращаемое значение. Новое значение устанавливается в &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt; перед принудительным возвратом возвращаемого значения. Так</target>
        </trans-unit>
        <trans-unit id="c77f471f01bedb20ebf62401466c912c23fb1b2b" translate="yes" xml:space="preserve">
          <source>Strict version of &lt;code&gt;&lt;a href=&quot;data-ioref#v:modifyIORef&quot;&gt;modifyIORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Строгая версия &lt;code&gt;&lt;a href=&quot;data-ioref#v:modifyIORef&quot;&gt;modifyIORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b7514ea4bb82dd2520d82e380ee5aa69bd87d59b" translate="yes" xml:space="preserve">
          <source>Strict version of &lt;code&gt;&lt;a href=&quot;data-stref#v:modifySTRef&quot;&gt;modifySTRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Строгая версия &lt;code&gt;&lt;a href=&quot;data-stref#v:modifySTRef&quot;&gt;modifySTRef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ca33b0d79de13dece7742f5c06160e31b2fa41c" translate="yes" xml:space="preserve">
          <source>Strict vs lazy types</source>
          <target state="translated">Строгие против ленивых типов</target>
        </trans-unit>
        <trans-unit id="074e69dbc31a99f40b705371021696d29cc33268" translate="yes" xml:space="preserve">
          <source>Strict writer monads.</source>
          <target state="translated">Строгие писательские монады.</target>
        </trans-unit>
        <trans-unit id="7adb8ee02eaf5cab8e6bbff5ce1f99a1ae0004b9" translate="yes" xml:space="preserve">
          <source>StrictData</source>
          <target state="translated">StrictData</target>
        </trans-unit>
        <trans-unit id="99c80ad9bf7b25224884bf0b85507c17346ab8e3" translate="yes" xml:space="preserve">
          <source>StrictPair</source>
          <target state="translated">StrictPair</target>
        </trans-unit>
        <trans-unit id="03053dcabec6cb004527a0b6b191c9f8ef2e0a88" translate="yes" xml:space="preserve">
          <source>StrictType</source>
          <target state="translated">StrictType</target>
        </trans-unit>
        <trans-unit id="ab1c44ad2859867b138996798bcf74fea8aec139" translate="yes" xml:space="preserve">
          <source>StrictTypeQ</source>
          <target state="translated">StrictTypeQ</target>
        </trans-unit>
        <trans-unit id="42f1bfdab9b4c0657e9556a7fee5234617960acf" translate="yes" xml:space="preserve">
          <source>Strictly speaking it is better to use &lt;code&gt;&lt;a href=&quot;ghc-conc#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt;, because the number of capabilities might vary at runtime.</source>
          <target state="translated">Строго говоря, лучше использовать &lt;code&gt;&lt;a href=&quot;ghc-conc#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt; , потому что количество возможностей может меняться во время выполнения.</target>
        </trans-unit>
        <trans-unit id="e7c5a762202275568d2d039c3d14f4827f67e0c5" translate="yes" xml:space="preserve">
          <source>Strictly speaking it is better to use &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt;, because the number of capabilities might vary at runtime.</source>
          <target state="translated">Строго говоря, лучше использовать &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt; , потому что количество возможностей может меняться во время выполнения.</target>
        </trans-unit>
        <trans-unit id="4e4b8136d197b8377982f8eec167ef1e32bcd988" translate="yes" xml:space="preserve">
          <source>Strictly speaking, &lt;code&gt;-main-is&lt;/code&gt; is not a link-phase flag at all; it has no effect on the link step. The flag must be specified when compiling the module containing the specified main function (e.g. module &lt;code&gt;A&lt;/code&gt; in the latter two items above). It has no effect for other modules, and hence can safely be given to &lt;code&gt;ghc --make&lt;/code&gt;. However, if all the modules are otherwise up to date, you may need to force recompilation both of the module where the new &amp;ldquo;main&amp;rdquo; is, and of the module where the &amp;ldquo;main&amp;rdquo; function used to be; &lt;code&gt;ghc&lt;/code&gt; is not clever enough to figure out that they both need recompiling. You can force recompilation by removing the object file, or by using the &lt;a href=&quot;separate_compilation#ghc-flag--fforce-recomp&quot;&gt;&lt;code&gt;-fforce-recomp&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">Строго говоря, &lt;code&gt;-main-is&lt;/code&gt; вообще не является флагом фазы связи; это не влияет на шаг ссылки. Флаг должен быть указан при компиляции модуля, содержащего указанную основную функцию (например, модуль &lt;code&gt;A&lt;/code&gt; в последних двух пунктах выше). Он не влияет на другие модули и, следовательно, может быть безопасно передан &lt;code&gt;ghc --make&lt;/code&gt; . Однако, если все модули в остальном обновлены, вам может потребоваться принудительная перекомпиляция как модуля, в котором находится новый &amp;laquo;main&amp;raquo;, так и модуля, в котором раньше находилась функция &amp;laquo;main&amp;raquo;; &lt;code&gt;ghc&lt;/code&gt; недостаточно умен, чтобы понять, что им обоим нужна перекомпиляция. Вы можете принудительно перекомпилировать, удалив объектный файл или используя флаг &lt;a href=&quot;separate_compilation#ghc-flag--fforce-recomp&quot;&gt; &lt;code&gt;-fforce-recomp&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea178a9a9bd02024d63a2e33e3d1c06a8b763aa9" translate="yes" xml:space="preserve">
          <source>Strictness</source>
          <target state="translated">Strictness</target>
        </trans-unit>
        <trans-unit id="ae70c5e0aadd2a887566abe055fa2287e396a0cb" translate="yes" xml:space="preserve">
          <source>Strictness properties</source>
          <target state="translated">Свойства стойкости</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="df69c43ff78249932546b7a676fcb79fae83ee1b" translate="yes" xml:space="preserve">
          <source>String I/O functions</source>
          <target state="translated">Функции строкового ввода/вывода</target>
        </trans-unit>
        <trans-unit id="8bafd8dde0ea5116b7c687fc066421bac5b8e127" translate="yes" xml:space="preserve">
          <source>String concatenation is another example of a &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance:</source>
          <target state="translated">Объединение строк - еще один пример экземпляра &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="93a6aed0e197696ef30cd67ec01d419a5ab47362" translate="yes" xml:space="preserve">
          <source>String literal, with escapes interpreted</source>
          <target state="translated">Строка буквально,с интерпретацией побегов</target>
        </trans-unit>
        <trans-unit id="fead3f626ab1bc4364788f5110ede5fbbe578349" translate="yes" xml:space="preserve">
          <source>String literals are also handled the same way, except that the translation is &lt;code&gt;fromString (&quot;368&quot;::String)&lt;/code&gt;.</source>
          <target state="translated">Строковые литералы также обрабатываются таким же образом, за исключением того, что перевод идет &lt;code&gt;fromString (&quot;368&quot;::String)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="322526bf32416e96b1ec87cec2493bb7d90ce000" translate="yes" xml:space="preserve">
          <source>String representations</source>
          <target state="translated">Строковые представления</target>
        </trans-unit>
        <trans-unit id="82ff0b28eaf4650bf30ef651a57f09d0653293aa" translate="yes" xml:space="preserve">
          <source>String to seach in.</source>
          <target state="translated">Присоединяйся.</target>
        </trans-unit>
        <trans-unit id="4eb2a869e70cfb05bab0937ce14f9bffba3de724" translate="yes" xml:space="preserve">
          <source>String to search for</source>
          <target state="translated">Строка для поиска</target>
        </trans-unit>
        <trans-unit id="deba9216c2af2ec3dea18fad6cf02b2f8a974cd4" translate="yes" xml:space="preserve">
          <source>String to search for.</source>
          <target state="translated">Строка для поиска.</target>
        </trans-unit>
        <trans-unit id="4e35ca95f79c8fb89c80a4d3e5db5f199d244ff7" translate="yes" xml:space="preserve">
          <source>String to search in</source>
          <target state="translated">Строка для поиска</target>
        </trans-unit>
        <trans-unit id="053cfb20420cb605c24aee25c0bbdf9ce7b6d359" translate="yes" xml:space="preserve">
          <source>String to split on. If this string is empty, an error will occur.</source>
          <target state="translated">Строка,чтобы разделиться.Если эта строка пуста,то произойдет ошибка.</target>
        </trans-unit>
        <trans-unit id="fff53bec8fdc451861d5af1b1290addb682dd9c5" translate="yes" xml:space="preserve">
          <source>String-based POSIX directory support</source>
          <target state="translated">Поддержка каталогов POSIX на основе строк</target>
        </trans-unit>
        <trans-unit id="8cef583d5b61b7fc89558336bd703935be4e09ad" translate="yes" xml:space="preserve">
          <source>StripHighBit</source>
          <target state="translated">StripHighBit</target>
        </trans-unit>
        <trans-unit id="871647865c6cba3a00d16282577f9276133331ff" translate="yes" xml:space="preserve">
          <source>Strongly Connected Components</source>
          <target state="translated">Сильно связанные компоненты</target>
        </trans-unit>
        <trans-unit id="9885145de2eac313bd39f23faaeadb94394cd85f" translate="yes" xml:space="preserve">
          <source>Strongly connected component.</source>
          <target state="translated">Сильно связанный компонент.</target>
        </trans-unit>
        <trans-unit id="99a0efc6cfd85d8ff2732a6718140f822cb90472" translate="yes" xml:space="preserve">
          <source>Style</source>
          <target state="translated">Style</target>
        </trans-unit>
        <trans-unit id="076bd1a687008936807629119bee2e2c08a156e4" translate="yes" xml:space="preserve">
          <source>SubLANGID</source>
          <target state="translated">SubLANGID</target>
        </trans-unit>
        <trans-unit id="246054a773a4e9a7ae273fea13e407f37de9f51d" translate="yes" xml:space="preserve">
          <source>Subject to fusion (fuses with its argument).</source>
          <target state="translated">Подлежит слиянию (плавится со своим аргументом).</target>
        </trans-unit>
        <trans-unit id="38dc790c6071b3fcf05389a8505d2d40f9609dfa" translate="yes" xml:space="preserve">
          <source>Subject to fusion. Performs replacement on invalid scalar values.</source>
          <target state="translated">Подверженный слиянию.Выполняет замену на недействительные скалярные значения.</target>
        </trans-unit>
        <trans-unit id="d560c3166145993736fa5da12096c1747a90f1a1" translate="yes" xml:space="preserve">
          <source>Sublist predicates</source>
          <target state="translated">Подлист предикатов</target>
        </trans-unit>
        <trans-unit id="7503d011931067b41e002f8956088332dc99cac0" translate="yes" xml:space="preserve">
          <source>Sublists</source>
          <target state="translated">Sublists</target>
        </trans-unit>
        <trans-unit id="e452b6e9b72f42cbb3a20fd5c96416db827ecc42" translate="yes" xml:space="preserve">
          <source>Submap</source>
          <target state="translated">Submap</target>
        </trans-unit>
        <trans-unit id="041d20cfb351df25518b1fc63a1180aa4794aa06" translate="yes" xml:space="preserve">
          <source>Subranges</source>
          <target state="translated">Subranges</target>
        </trans-unit>
        <trans-unit id="04b8db0c75f75123429916d395a99faa9f90f414" translate="yes" xml:space="preserve">
          <source>Subscribers can post to the list by sending their message to &lt;a href=&quot;mailto:ghc-devs%40haskell.org&quot;&gt;ghc-devs@haskell.org&lt;/a&gt;. Further information can be found on the &lt;a href=&quot;http://www.haskell.org/mailman/listinfo/ghc-devs&quot;&gt;Mailman page&lt;/a&gt;.</source>
          <target state="translated">Подписчики могут размещать сообщения в списке, отправив свое сообщение по &lt;a href=&quot;mailto:ghc-devs%40haskell.org&quot;&gt;адресу ghc-devs@haskell.org&lt;/a&gt; . Дополнительную информацию можно найти на &lt;a href=&quot;http://www.haskell.org/mailman/listinfo/ghc-devs&quot;&gt;странице Mailman&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5eb1c8f193a2e720b166a1c1ec2db58a17d52f8b" translate="yes" xml:space="preserve">
          <source>Subscribers can post to the list by sending their message to &lt;a href=&quot;mailto:glasgow-haskell-users%40haskell.org&quot;&gt;glasgow-haskell-users@haskell.org&lt;/a&gt;. Further information can be found on the &lt;a href=&quot;http://www.haskell.org/mailman/listinfo/glasgow-haskell-users&quot;&gt;Mailman page&lt;/a&gt;.</source>
          <target state="translated">Подписчики могут размещать сообщения в списке, отправив свое сообщение по &lt;a href=&quot;mailto:glasgow-haskell-users%40haskell.org&quot;&gt;адресу glasgow-haskell-users@haskell.org&lt;/a&gt; . Дополнительную информацию можно найти на &lt;a href=&quot;http://www.haskell.org/mailman/listinfo/glasgow-haskell-users&quot;&gt;странице Mailman&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ee5424964da2c091edd5848a37ea5bf9cb02ac7" translate="yes" xml:space="preserve">
          <source>Substitute a 'v' format character with the given default format character in the &lt;code&gt;&lt;a href=&quot;text-printf#t:FieldFormat&quot;&gt;FieldFormat&lt;/a&gt;&lt;/code&gt;. A convenience for user-implemented types, which should support &quot;%v&quot;.</source>
          <target state="translated">Замените символ формата 'v' заданным символом формата по умолчанию в &lt;code&gt;&lt;a href=&quot;text-printf#t:FieldFormat&quot;&gt;FieldFormat&lt;/a&gt;&lt;/code&gt; . Удобство для пользовательских типов, которые должны поддерживать &quot;% v&quot;.</target>
        </trans-unit>
        <trans-unit id="827c20543512b6872f9167e039de225d7f3586ed" translate="yes" xml:space="preserve">
          <source>Substitute various time-related information for each %-code in the string, as per &lt;code&gt;&lt;a href=&quot;data-time-format-internal#v:formatCharacter&quot;&gt;formatCharacter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Подставьте различную информацию, связанную со временем, для каждого% -кода в строке в соответствии с &lt;code&gt;&lt;a href=&quot;data-time-format-internal#v:formatCharacter&quot;&gt;formatCharacter&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21d9ae09150728fb01f3df8f2d5bf01b3f3ebc56" translate="yes" xml:space="preserve">
          <source>Substring matching is supported for ⟨M⟩ in &lt;code&gt;find-module&lt;/code&gt; and for ⟨P⟩ in &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;describe&lt;/code&gt;, and &lt;code&gt;field&lt;/code&gt;, where a &lt;code&gt;'*'&lt;/code&gt; indicates open substring ends (&lt;code&gt;prefix*&lt;/code&gt;, &lt;code&gt;*suffix&lt;/code&gt;, &lt;code&gt;*infix*&lt;/code&gt;). Examples (output omitted):</source>
          <target state="translated">Сопоставление подстроки поддерживается для M⟩ в &lt;code&gt;find-module&lt;/code&gt; и для P⟩ в &lt;code&gt;list&lt;/code&gt; , &lt;code&gt;describe&lt;/code&gt; и &lt;code&gt;field&lt;/code&gt; , где &lt;code&gt;'*'&lt;/code&gt; обозначает открытые концы подстроки ( &lt;code&gt;prefix*&lt;/code&gt; , &lt;code&gt;*suffix&lt;/code&gt; , &lt;code&gt;*infix*&lt;/code&gt; ). Примеры (вывод опущен):</target>
        </trans-unit>
        <trans-unit id="ab6fff443cc0973a1c46302de5d05ef909254c54" translate="yes" xml:space="preserve">
          <source>Substring to search for (&lt;code&gt;needle&lt;/code&gt;)</source>
          <target state="translated">Подстрока для поиска ( &lt;code&gt;needle&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="910b443e8f3aa911551fe1b15df5c21842322d13" translate="yes" xml:space="preserve">
          <source>Substrings</source>
          <target state="translated">Substrings</target>
        </trans-unit>
        <trans-unit id="98a81fc167b58777c62ed1dfaa91251ba9db5eee" translate="yes" xml:space="preserve">
          <source>Subtract one &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; from another.</source>
          <target state="translated">Вычтите одно &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; из другого.</target>
        </trans-unit>
        <trans-unit id="ee4ba19df4728cec72d08a77d05708e00b8bcb7a" translate="yes" xml:space="preserve">
          <source>Subtract signed integers reporting overflow. First member of result is the difference truncated to an &lt;code&gt;Int#&lt;/code&gt;; second member is zero if the true difference fits in an &lt;code&gt;Int#&lt;/code&gt;, nonzero if overflow occurred (the difference is either too large or too small to fit in an &lt;code&gt;Int#&lt;/code&gt;).</source>
          <target state="translated">Вычтите целые числа со знаком, сообщая о переполнении. Первый член результата - это разница, усеченная до &lt;code&gt;Int#&lt;/code&gt; ; второй член равен нулю, если истинная разница соответствует &lt;code&gt;Int#&lt;/code&gt; , ненулевой, если произошло переполнение (разница либо слишком велика, либо слишком мала, чтобы поместиться в &lt;code&gt;Int#&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="30c07609e2e31f77bb622485b3cc7bf36c0b3d7d" translate="yes" xml:space="preserve">
          <source>Subtract two vectors element-wise.</source>
          <target state="translated">Вычитайте два вектора по элементам.</target>
        </trans-unit>
        <trans-unit id="b665f5751f6c474585435dc9171b3dae6053a5f0" translate="yes" xml:space="preserve">
          <source>Subtract unsigned integers reporting overflow. The first element of the pair is the result. The second element is the carry flag, which is nonzero on overflow.</source>
          <target state="translated">Вычитать неподписанные целые числа,сообщающие о переполнении.Результат-первый элемент пары.Вторым элементом является флаг переноса,который при переполнении является ненулевым.</target>
        </trans-unit>
        <trans-unit id="497cccd33439953bbbd65da81332fed6920de8d2" translate="yes" xml:space="preserve">
          <source>Subtraction of type-level naturals.</source>
          <target state="translated">Вычитание естествоиспытаний на уровне типа.</target>
        </trans-unit>
        <trans-unit id="91d5cb154b12d16f439a24c1bf3b1c526a720a4b" translate="yes" xml:space="preserve">
          <source>Succeeds iff we are at the end of input</source>
          <target state="translated">Успех,если мы находимся в конце ввода.</target>
        </trans-unit>
        <trans-unit id="85957404dd49cf29cf9e260987f143968d4c3b86" translate="yes" xml:space="preserve">
          <source>Such arrows are equivalent to monads (see &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowMonad&quot;&gt;ArrowMonad&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Такие стрелки эквивалентны монадам (см. &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowMonad&quot;&gt;ArrowMonad&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8b16de06d17ad8c6bf7ec704068bb13890314a12" translate="yes" xml:space="preserve">
          <source>Such data types have only one value, namely bottom. Nevertheless, they can be useful when defining &amp;ldquo;phantom types&amp;rdquo;.</source>
          <target state="translated">Такие типы данных имеют только одно значение - bottom. Тем не менее они могут быть полезны при определении &amp;laquo;фантомных типов&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f1473fd9419719956dc153fb3e53b7c0229f16c2" translate="yes" xml:space="preserve">
          <source>Such macros can also be defined directly in the source. They are useful for making a &lt;code&gt;#let&lt;/code&gt;-like macro whose expansion uses other &lt;code&gt;#let&lt;/code&gt; macros. Plain &lt;code&gt;#let&lt;/code&gt; prepends &lt;code&gt;hsc_&lt;/code&gt; to the macro name and wraps the definition in a &lt;code&gt;printf&lt;/code&gt; call.</source>
          <target state="translated">Такие макросы также можно определить прямо в источнике. Они полезны для создания макроса, &lt;code&gt;#let&lt;/code&gt; , расширение которого использует другие макросы &lt;code&gt;#let&lt;/code&gt; . Простой &lt;code&gt;#let&lt;/code&gt; Добавляет &lt;code&gt;hsc_&lt;/code&gt; к макроимени и оборачивает определение в &lt;code&gt;printf&lt;/code&gt; вызова.</target>
        </trans-unit>
        <trans-unit id="55b56095e34a272508b89dad1dc7be5bd15118fb" translate="yes" xml:space="preserve">
          <source>Such multiline commands can be used with any GHCi command, and note that the layout rule is in effect. The main purpose of multiline commands is not to replace module loading but to make definitions in .ghci-files (see &lt;a href=&quot;#ghci-dot-files&quot;&gt;The .ghci and .haskeline files&lt;/a&gt;) more readable and maintainable.</source>
          <target state="translated">Такие многострочные команды можно использовать с любой командой GHCi; обратите внимание, что действует правило макета. Основная цель многострочных команд - не подменить загрузку модуля, а сделать определения в файлах .ghci (см &lt;a href=&quot;#ghci-dot-files&quot;&gt;. Файлы .ghci и .haskeline&lt;/a&gt; ) более удобочитаемыми и удобными в обслуживании.</target>
        </trans-unit>
        <trans-unit id="7169e9119a6aaa5f7b6232bacf90dcb50543ba51" translate="yes" xml:space="preserve">
          <source>Suffix saying &amp;ldquo;start here&amp;rdquo;</source>
          <target state="translated">Суффикс &quot;начни здесь&quot;</target>
        </trans-unit>
        <trans-unit id="65ff33cefc3f84e88830d0bf249af62b2e49d228" translate="yes" xml:space="preserve">
          <source>Suggest that the compiler always consider inlining &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Предложите компилятору всегда учитывать встраивание &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc9ce14b28c6f2c3b72caf056ca604b2b96f7d2b" translate="yes" xml:space="preserve">
          <source>Sum</source>
          <target state="translated">Sum</target>
        </trans-unit>
        <trans-unit id="d9e2491eb7656e3492fcc3876a7a77de3462b7a8" translate="yes" xml:space="preserve">
          <source>Sum of copied_bytes across all GCs</source>
          <target state="translated">Сумма скопированных_байт по всем ГХ.</target>
        </trans-unit>
        <trans-unit id="0d9ccb61b1acc93fbb28f6e048faf94d55b713a5" translate="yes" xml:space="preserve">
          <source>Sum of copied_bytes across all parallel GCs</source>
          <target state="translated">Сумма скопированных_байт по всем параллельным ГХ</target>
        </trans-unit>
        <trans-unit id="dcad0491181633bafafa0e3db915b09abae702b5" translate="yes" xml:space="preserve">
          <source>Sum of live bytes across all major GCs. Divided by major_gcs gives the average live data over the lifetime of the program.</source>
          <target state="translated">Сумма живых байтов по всем основным ГК.Разделенная на мажор_gcs дает средние живые данные за время жизни программы.</target>
        </trans-unit>
        <trans-unit id="70ac69aadffa6cb9bde16c8cdf6f65307407d32c" translate="yes" xml:space="preserve">
          <source>Sum of par_balanced_copied bytes across all parallel GCs</source>
          <target state="translated">Сумма пар_балансных_копированных байт по всем параллельным ГХ</target>
        </trans-unit>
        <trans-unit id="07a5b55c642011e64059485d82402747c10b4adb" translate="yes" xml:space="preserve">
          <source>Sum of par_max_copied_bytes across all parallel GCs. Deprecated.</source>
          <target state="translated">Сумма пар_макс_копированных_байт по всем параллельным ГХ.Исключено.</target>
        </trans-unit>
        <trans-unit id="5215b34dfb01abbf7378acfdcf4fe1dedcc8e009" translate="yes" xml:space="preserve">
          <source>Sum the values in a tree:</source>
          <target state="translated">Суммируй значения на дереве:</target>
        </trans-unit>
        <trans-unit id="4f4abb0e8c9277199f066395cb9c2c425902f02e" translate="yes" xml:space="preserve">
          <source>SumAlt</source>
          <target state="translated">SumAlt</target>
        </trans-unit>
        <trans-unit id="9d6c94fe6e3e0e9614bba2768e5b7540a7c0bf47" translate="yes" xml:space="preserve">
          <source>SumArity</source>
          <target state="translated">SumArity</target>
        </trans-unit>
        <trans-unit id="e797e0283a33d4a2f6f3ed364c6e9ca07755e641" translate="yes" xml:space="preserve">
          <source>Summarise timing stats for GHC (same as &lt;code&gt;+RTS -tstderr&lt;/code&gt;).</source>
          <target state="translated">Обобщите статистику времени для GHC (так же, как &lt;code&gt;+RTS -tstderr&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6a0ba6d4cba69cca9ee908b3882310d0126b622e" translate="yes" xml:space="preserve">
          <source>SummaryGCStats</source>
          <target state="translated">SummaryGCStats</target>
        </trans-unit>
        <trans-unit id="45c7c0bcfb7345694edd730cace93da339799b81" translate="yes" xml:space="preserve">
          <source>Sums, lifted to functors.</source>
          <target state="translated">Суммы,поднятые на веселье.</target>
        </trans-unit>
        <trans-unit id="825e9b3f9d7fa4f8c1136e7e836e969e05770489" translate="yes" xml:space="preserve">
          <source>Sums: encode choice between constructors</source>
          <target state="translated">Суммы:выбор кодирования между конструкторами</target>
        </trans-unit>
        <trans-unit id="bc5dd045b8623ddfc4bd0bce98ca5fda42accf88" translate="yes" xml:space="preserve">
          <source>Sunday</source>
          <target state="translated">Sunday</target>
        </trans-unit>
        <trans-unit id="e87c6d01d55d0ce0b58fc09dd2f8e52d59de79d1" translate="yes" xml:space="preserve">
          <source>Sunday-starting week number (as &lt;code&gt;%U&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Номер недели, начиная с воскресенья (как &lt;code&gt;%U&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;data-time-format#v:formatTime&quot;&gt;formatTime&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7c7cab6646f2b97044e50ae44c966832deeaa85f" translate="yes" xml:space="preserve">
          <source>Superclass for asynchronous exceptions.</source>
          <target state="translated">Суперкласс для асинхронных исключений.</target>
        </trans-unit>
        <trans-unit id="ff030e54038a44e824c8361bcdbaeb79e030624e" translate="yes" xml:space="preserve">
          <source>Support for API calls that are passed a fixed-size buffer and tell you via the return value if the buffer was too small. In that case, we extend the buffer size and try again.</source>
          <target state="translated">Поддержка вызовов API,которые передают буфер фиксированного размера и сообщают через возвращаемое значение,если буфер был слишком мал.В этом случае мы увеличиваем размер буфера и повторяем попытку.</target>
        </trans-unit>
        <trans-unit id="42fe79082e0a9288bda8ac01c25ca56f6078fa67" translate="yes" xml:space="preserve">
          <source>Support for bound threads; see the paper &lt;a href=&quot;http://community.haskell.org/~simonmar/papers/conc-ffi.pdf&quot;&gt;Extending the FFI with concurrency&lt;/a&gt;.</source>
          <target state="translated">Поддержка связанных ниток; см. статью &lt;a href=&quot;http://community.haskell.org/~simonmar/papers/conc-ffi.pdf&quot;&gt;Расширение FFI с помощью параллелизма&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f3cb7ae652ba2f67aaaa3d6c38db502bc3ca3643" translate="yes" xml:space="preserve">
          <source>Support for catching exceptions raised during top-level computations (e.g. &lt;code&gt;Main.main&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt;, and foreign exports)</source>
          <target state="translated">Поддержка &lt;code&gt;Main.main&lt;/code&gt; исключений, возникающих во время вычислений верхнего уровня (например, Main.main , &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkIO&quot;&gt;forkIO&lt;/a&gt;&lt;/code&gt; и внешний экспорт)</target>
        </trans-unit>
        <trans-unit id="31617f5b30b1b9c8053b244b4ae6feb5a246d66c" translate="yes" xml:space="preserve">
          <source>Support for multiple operating system threads and bound threads as described below is currently only available in the GHC runtime system if you use the &lt;em&gt;-threaded&lt;/em&gt; option when linking.</source>
          <target state="translated">Поддержка нескольких потоков операционной системы и связанных потоков, как описано ниже, в настоящее время доступна только в системе времени выполнения GHC, если вы используете параметр &lt;em&gt;-threaded&lt;/em&gt; при компоновке.</target>
        </trans-unit>
        <trans-unit id="e0bd01fb9ed07046a4615b96dd1a8c99f7d4ce7b" translate="yes" xml:space="preserve">
          <source>Support for using &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; data with native code via the Haskell foreign function interface.</source>
          <target state="translated">Поддержка использования &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; данных с машинным кодом через интерфейс внешней функции Haskell.</target>
        </trans-unit>
        <trans-unit id="ddf769c12c4f317b302132ad5336a5ddba73c0c8" translate="yes" xml:space="preserve">
          <source>Suppose a client C decides to trust package &lt;code&gt;P&lt;/code&gt; and package &lt;code&gt;base&lt;/code&gt;. Then does C trust module &lt;code&gt;M&lt;/code&gt;? Well &lt;code&gt;M&lt;/code&gt; is marked &lt;a href=&quot;#extension-Trustworthy&quot;&gt;&lt;code&gt;Trustworthy&lt;/code&gt;&lt;/a&gt;, so we don&amp;rsquo;t restrict the language. However, we still must check &lt;code&gt;M&lt;/code&gt;&amp;lsquo;s imports:</source>
          <target state="translated">Предположим, клиент C решает доверять пакету &lt;code&gt;P&lt;/code&gt; и его &lt;code&gt;base&lt;/code&gt; . Тогда C доверяет модулю &lt;code&gt;M&lt;/code&gt; ? Ну &lt;code&gt;M&lt;/code&gt; отмечен как &lt;a href=&quot;#extension-Trustworthy&quot;&gt; &lt;code&gt;Trustworthy&lt;/code&gt; &lt;/a&gt; , поэтому мы не ограничиваем язык. Однако мы все равно должны проверить импорт &lt;code&gt;M&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6edabccdee60f9757ab610d65ace3f274d627ee0" translate="yes" xml:space="preserve">
          <source>Suppose a client C decides to trust package &lt;code&gt;P&lt;/code&gt; and package &lt;code&gt;base&lt;/code&gt;. Then does C trust module &lt;code&gt;M&lt;/code&gt;? Well &lt;code&gt;M&lt;/code&gt; is marked &lt;a href=&quot;#extension-Trustworthy&quot;&gt;&lt;code&gt;Trustworthy&lt;/code&gt;&lt;/a&gt;, so we don&amp;rsquo;t restrict the language. However, we still must check &lt;code&gt;M&lt;/code&gt;&amp;rsquo;s imports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095b60f3ba2863e8c5c5d107012bf74c2b5f0019" translate="yes" xml:space="preserve">
          <source>Suppose that from the RHS of &lt;code&gt;f&lt;/code&gt; we get the constraint &lt;code&gt;C b [b]&lt;/code&gt;. But GHC does not commit to instance (C), because in a particular call of &lt;code&gt;f&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; might be instantiated to &lt;code&gt;Int&lt;/code&gt;, in which case instance (D) would be more specific still. So GHC rejects the program.</source>
          <target state="translated">Предположим, что из правой части &lt;code&gt;f&lt;/code&gt; мы получаем ограничение &lt;code&gt;C b [b]&lt;/code&gt; . Но GHC не фиксирует экземпляр (C), потому что в конкретном вызове &lt;code&gt;f&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; может быть создан для &lt;code&gt;Int&lt;/code&gt; , и в этом случае экземпляр (D) будет еще более конкретным. Итак, GHC отклоняет программу.</target>
        </trans-unit>
        <trans-unit id="da498088a064a16427d552d5b30c6ce378689bb7" translate="yes" xml:space="preserve">
          <source>Suppose we have the following Haskell source code, which we place in a file &lt;code&gt;Main.hs&lt;/code&gt;:</source>
          <target state="translated">Предположим, у нас есть следующий исходный код Haskell, который мы &lt;code&gt;Main.hs&lt;/code&gt; в файл Main.hs :</target>
        </trans-unit>
        <trans-unit id="efb59f4ee25bd81474f2698e49ad1d0c32f825f1" translate="yes" xml:space="preserve">
          <source>Suppose we have two uses of a type constructor, each applied to the same parameters except for one difference. (For example, &lt;code&gt;T Age Bool c&lt;/code&gt; and &lt;code&gt;T Int Bool c&lt;/code&gt; for some type &lt;code&gt;T&lt;/code&gt;.) The role of a type parameter says what we need to know about the two differing type arguments in order to know that the two outer types have the same representation (in the example, what must be true about &lt;code&gt;Age&lt;/code&gt; and &lt;code&gt;Int&lt;/code&gt; in order to show that &lt;code&gt;T Age Bool c&lt;/code&gt; has the same representation as &lt;code&gt;T Int Bool c&lt;/code&gt;).</source>
          <target state="translated">Предположим, у нас есть два использования конструктора типа, каждое из которых применяется к одним и тем же параметрам, за исключением одного различия. (Например, &lt;code&gt;T Age Bool c&lt;/code&gt; и &lt;code&gt;T Int Bool c&lt;/code&gt; для некоторого типа &lt;code&gt;T&lt;/code&gt; . ) Роль параметра типа говорит, что нам нужно знать о двух различных аргументах типа, чтобы знать, что два внешних типа имеют одинаковое представление (в примере, что должно быть правдой в отношении &lt;code&gt;Age&lt;/code&gt; и &lt;code&gt;Int&lt;/code&gt; , чтобы показать, что &lt;code&gt;T Age Bool c&lt;/code&gt; имеет то же представление, что и &lt;code&gt;T Int Bool c&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e3f030babe9d462a874f39c8cea4c76533ced64f" translate="yes" xml:space="preserve">
          <source>Suppose we have:</source>
          <target state="translated">Предположим,что так и есть:</target>
        </trans-unit>
        <trans-unit id="95d757c1803d865246ed0c5f9c2e1f752242c85c" translate="yes" xml:space="preserve">
          <source>Suppose we want to define an interpreter that can do I/O and has exceptions, an environment and a modifiable store. We can define a monad that supports all these things as a stack of monad transformers:</source>
          <target state="translated">Предположим,мы хотим определить интерпретатор,который может выполнять ввод/вывод и имеет исключения,окружение и модифицируемое хранилище.Мы можем определить monad,который поддерживает все эти вещи,как стек трансформаторов monad:</target>
        </trans-unit>
        <trans-unit id="0e761d7f04f0cd2dc6abebf53430127001808a68" translate="yes" xml:space="preserve">
          <source>Suppose you are importing a Prelude of your own in order to define your own numeric class hierarchy. It completely defeats that purpose if the literal &amp;ldquo;1&amp;rdquo; means &amp;ldquo;&lt;code&gt;Prelude.fromInteger 1&lt;/code&gt;&amp;rdquo;, which is what the Haskell Report specifies. So the &lt;a href=&quot;#extension-RebindableSyntax&quot;&gt;&lt;code&gt;RebindableSyntax&lt;/code&gt;&lt;/a&gt; extension causes the following pieces of built-in syntax to refer to &lt;em&gt;whatever is in scope&lt;/em&gt;, not the Prelude versions:</source>
          <target state="translated">Предположим, вы импортируете собственный Prelude, чтобы определить собственную иерархию числовых классов. Это полностью противоречит этой цели, если литерал &amp;laquo;1&amp;raquo; означает &amp;laquo; &lt;code&gt;Prelude.fromInteger 1&lt;/code&gt; &amp;raquo;, что и указано в отчете Haskell. Таким &lt;a href=&quot;#extension-RebindableSyntax&quot;&gt; &lt;code&gt;RebindableSyntax&lt;/code&gt; &lt;/a&gt; расширение RebindableSyntax заставляет следующие части встроенного синтаксиса ссылаться на &lt;em&gt;все, что находится в области видимости&lt;/em&gt; , а не на версии Prelude:</target>
        </trans-unit>
        <trans-unit id="c769136ca44e362284769d80ccd2b1f9f09dfcf1" translate="yes" xml:space="preserve">
          <source>Suppress &quot;ticks&quot; in the pretty-printer output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac34491e80235a273a00fbf5ae564921bc6adb63" translate="yes" xml:space="preserve">
          <source>Suppress &amp;ldquo;ticks&amp;rdquo; in the pretty-printer output.</source>
          <target state="translated">Подавите &amp;laquo;галочки&amp;raquo; в выводе красивого принтера.</target>
        </trans-unit>
        <trans-unit id="6adae4844792476be6006de9e866028d9783ef04" translate="yes" xml:space="preserve">
          <source>Suppress any unsolicited debugging output. When GHC has been built with the &lt;code&gt;DEBUG&lt;/code&gt; option it occasionally emits debug output of interest to developers. The extra output can confuse the testing framework and cause bogus test failures, so this flag is provided to turn it off.</source>
          <target state="translated">Подавить любые нежелательные отладочные данные. Когда GHC построен с опцией &lt;code&gt;DEBUG&lt;/code&gt; , он иногда выдает отладочные данные, представляющие интерес для разработчиков. Дополнительные выходные данные могут сбить с толку структуру тестирования и вызвать ложные сбои теста, поэтому этот флаг предназначен для его отключения.</target>
        </trans-unit>
        <trans-unit id="290ff2e65a492c159dfad44b8433444fb21b1d9b" translate="yes" xml:space="preserve">
          <source>Suppress everything that can be suppressed, except for unique ids as this often makes the printout ambiguous. If you just want to see the overall structure of the code, then start here.</source>
          <target state="translated">Подавление всего,что может быть подавлено,за исключением уникальных идентификаторов,так как это часто делает распечатку двусмысленной.Если вы просто хотите увидеть общую структуру кода,то начните здесь.</target>
        </trans-unit>
        <trans-unit id="a53d305ee7381472627843798c8d10190107cab3" translate="yes" xml:space="preserve">
          <source>Suppress extended information about identifiers where they are bound</source>
          <target state="translated">Подавление расширенной информации об идентификаторах,с которыми они связаны.</target>
        </trans-unit>
        <trans-unit id="11b448ead99f0bf773abbe1b2d9be994c6e6b74f" translate="yes" xml:space="preserve">
          <source>Suppress extended information about identifiers where they are bound. This includes strictness information and inliner templates. Using this flag can cut the size of the core dump in half, due to the lack of inliner templates</source>
          <target state="translated">Подавление расширенной информации об идентификаторах,с которыми они связаны.Это включает в себя строгую информацию и шаблоны внутренней информации.Использование данного флага может уменьшить размер дампа ядра пополам,в связи с отсутствием шаблонов инлайнера</target>
        </trans-unit>
        <trans-unit id="fbb75bd7a15050e7f0b879e9c42149aa1c523a0e" translate="yes" xml:space="preserve">
          <source>Suppress the printing of closure free variable lists in STG output</source>
          <target state="translated">Подавление печати списков переменных без замыкания в выходе STG</target>
        </trans-unit>
        <trans-unit id="e6f6d31cea2bd9d749646450b106f137701dd495" translate="yes" xml:space="preserve">
          <source>Suppress the printing of coercions in Core dumps to make them shorter</source>
          <target state="translated">Подавить печать принуждения в Core свалки,чтобы сделать их короче</target>
        </trans-unit>
        <trans-unit id="12c098bf156d0093acc5cd885289b696e4cc4c15" translate="yes" xml:space="preserve">
          <source>Suppress the printing of module qualification prefixes</source>
          <target state="translated">Подавление печати квалификационных префиксов модулей</target>
        </trans-unit>
        <trans-unit id="5bbac2f4b131b833c24ec52650a5f5f342d244b7" translate="yes" xml:space="preserve">
          <source>Suppress the printing of module qualification prefixes. This is the &lt;code&gt;Data.List&lt;/code&gt; in &lt;code&gt;Data.List.length&lt;/code&gt;.</source>
          <target state="translated">Запретить печать префиксов квалификации модуля. Это &lt;code&gt;Data.List&lt;/code&gt; в &lt;code&gt;Data.List.length&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71860721ed879e362ecab05e711aec4a79ac4c5e" translate="yes" xml:space="preserve">
          <source>Suppress the printing of the stable unfolding of a variable at its binding site</source>
          <target state="translated">Подавление печати стабильного разворачивания переменной в месте ее переплета</target>
        </trans-unit>
        <trans-unit id="dbb99127d9ceaf3187aec7c23b17de65a58473e2" translate="yes" xml:space="preserve">
          <source>Suppress the printing of the stable unfolding of a variable at its binding site.</source>
          <target state="translated">Подавление печати стабильного разворачивания переменной на месте ее переплета.</target>
        </trans-unit>
        <trans-unit id="dd6fc6999fd1d0618447db94d8224cadf833b0b9" translate="yes" xml:space="preserve">
          <source>Suppress the printing of timestamps. This makes it easier to diff dumps.</source>
          <target state="translated">Подавление печати временных меток.Это облегчает диффузию сбросов.</target>
        </trans-unit>
        <trans-unit id="7ae280ce64aac04364611b8b6b2d9fdd41e13369" translate="yes" xml:space="preserve">
          <source>Suppress the printing of type applications.</source>
          <target state="translated">Подавление печати типовых приложений.</target>
        </trans-unit>
        <trans-unit id="c8cbf5451aabc9715d94f13c130e063b24125bba" translate="yes" xml:space="preserve">
          <source>Suppress the printing of type coercions.</source>
          <target state="translated">Подавить печать шрифтового принуждения.</target>
        </trans-unit>
        <trans-unit id="60d40a0d45f6f7bc2dc57806157b743c4e81be9e" translate="yes" xml:space="preserve">
          <source>Suppress the printing of type signatures.</source>
          <target state="translated">Подавление печати типовых подписей.</target>
        </trans-unit>
        <trans-unit id="1e1a665236d94041050e8a7fe1af9a10ff9786d7" translate="yes" xml:space="preserve">
          <source>Suppress the printing of uniques in debug output (easier to use &lt;code&gt;diff&lt;/code&gt;)</source>
          <target state="translated">Подавить печать уникальных сообщений при отладке (проще использовать &lt;code&gt;diff&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8200cb700aabd0d0bba42349c1c49130a9f1b310" translate="yes" xml:space="preserve">
          <source>Suppress the printing of uniques. This may make the printout ambiguous (e.g. unclear where an occurrence of &amp;lsquo;x&amp;rsquo; is bound), but it makes the output of two compiler runs have many fewer gratuitous differences, so you can realistically apply &lt;code&gt;diff&lt;/code&gt;. Once &lt;code&gt;diff&lt;/code&gt; has shown you where to look, you can try again without &lt;a href=&quot;#ghc-flag--dsuppress-uniques&quot;&gt;&lt;code&gt;-dsuppress-uniques&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Запретить печать уникальных изображений. Это может сделать распечатку неоднозначной (например, непонятно, где связано вхождение 'x'), но это приведет к тому, что выходные данные двух прогонов компилятора будут иметь гораздо меньше неуместных различий, поэтому вы можете реалистично применить &lt;code&gt;diff&lt;/code&gt; . Как только &lt;code&gt;diff&lt;/code&gt; &lt;a href=&quot;#ghc-flag--dsuppress-uniques&quot;&gt; &lt;code&gt;-dsuppress-uniques&lt;/code&gt; &lt;/a&gt; вам, где искать, вы можете попробовать еще раз без -dsuppress-uniques</target>
        </trans-unit>
        <trans-unit id="6bc6a8fee0bd35a3f374848c1e256872c6dd2b76" translate="yes" xml:space="preserve">
          <source>Suppress the printing of variable kinds</source>
          <target state="translated">Подавление печати переменных видов</target>
        </trans-unit>
        <trans-unit id="6c6d53545f757aadefd3054db1329ebc043b8bef" translate="yes" xml:space="preserve">
          <source>Suppress timestamps in dumps</source>
          <target state="translated">Подавление временных штампов на свалках</target>
        </trans-unit>
        <trans-unit id="3abe7da92f27950aff8e21a0aef0128f001453a5" translate="yes" xml:space="preserve">
          <source>Suppress type applications</source>
          <target state="translated">Применение по типу &quot;Подавление</target>
        </trans-unit>
        <trans-unit id="44ecea02757bd5ca6bbfad966fb0bcd136dfa16a" translate="yes" xml:space="preserve">
          <source>Suppress type signatures</source>
          <target state="translated">Подчеркнуть тип подписи</target>
        </trans-unit>
        <trans-unit id="54ef935ccf47a05ace57d8ba2fc3133cb9a96abf" translate="yes" xml:space="preserve">
          <source>Suppress unsolicited debugging output</source>
          <target state="translated">Подавление нежелательной отладки</target>
        </trans-unit>
        <trans-unit id="ab5b3b04ea9eccd0e7c10a8ebf5857fc6c1efffc" translate="yes" xml:space="preserve">
          <source>Suppressing unwanted information</source>
          <target state="translated">Подавление нежелательной информации</target>
        </trans-unit>
        <trans-unit id="c948ea0246807256cf48a7cfaaf94b78e7b2095a" translate="yes" xml:space="preserve">
          <source>Surrogate</source>
          <target state="translated">Surrogate</target>
        </trans-unit>
        <trans-unit id="b24247fb5a9d8d8059901182187be57626f3ba71" translate="yes" xml:space="preserve">
          <source>Suspend</source>
          <target state="translated">Suspend</target>
        </trans-unit>
        <trans-unit id="60bdfaeef9de3afa9e3d9ef36f96b7bc40de22ca" translate="yes" xml:space="preserve">
          <source>SuspendOutput</source>
          <target state="translated">SuspendOutput</target>
        </trans-unit>
        <trans-unit id="e2749e7502a8294d14da474dd386ce65dffc90c7" translate="yes" xml:space="preserve">
          <source>Suspends the current thread for a given number of microseconds (GHC only).</source>
          <target state="translated">Приостанавливает текущий поток на заданное количество микросекунд (только GHC).</target>
        </trans-unit>
        <trans-unit id="4996fb84d9b501491f3973b59b2e677765620dc5" translate="yes" xml:space="preserve">
          <source>Swap bytes in &lt;code&gt;&lt;a href=&quot;data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Поменять местами байты в &lt;code&gt;&lt;a href=&quot;data-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72e71d9c46fe0a70f7a1bcce92e5572e02939858" translate="yes" xml:space="preserve">
          <source>Swap bytes in &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Поменять местами байты в &lt;code&gt;&lt;a href=&quot;ghc-word#t:Word16&quot;&gt;Word16&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63ac1bbf25314306de791757bf99d5d5c6a18eb6" translate="yes" xml:space="preserve">
          <source>Swap bytes in a 64 bits of a word.</source>
          <target state="translated">Меняйте байты на 64 бита слова.</target>
        </trans-unit>
        <trans-unit id="982631a751cc307941c1b0d5303a312235500a9f" translate="yes" xml:space="preserve">
          <source>Swap bytes in a word.</source>
          <target state="translated">Поменяйтесь байтами в слово.</target>
        </trans-unit>
        <trans-unit id="b5c217b3175f1db23e820f4a3a6c120af18860d1" translate="yes" xml:space="preserve">
          <source>Swap bytes in the lower 16 bits of a word. The higher bytes are undefined.</source>
          <target state="translated">Меняйте байты в нижних 16 битах слова.Высшие байты неопределенны.</target>
        </trans-unit>
        <trans-unit id="c7a751206d598feafc5b6d1ca524120a3e50c2de" translate="yes" xml:space="preserve">
          <source>Swap bytes in the lower 32 bits of a word. The higher bytes are undefined.</source>
          <target state="translated">Меняйте байты в нижних 32 битах слова.Высшие байты неопределенны.</target>
        </trans-unit>
        <trans-unit id="63dba41d9260dcf93f9a599778c93ef027d53087" translate="yes" xml:space="preserve">
          <source>Swap the components of a pair.</source>
          <target state="translated">Поменяйтесь компонентами пары.</target>
        </trans-unit>
        <trans-unit id="77dc57d8f17c6348cc9cdd40f021e393b0104236" translate="yes" xml:space="preserve">
          <source>Swap the contents of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; for a new value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; содержимое TMVar новым значением.</target>
        </trans-unit>
        <trans-unit id="27a7ce7e921ae432d26780f916950fbd4a0fa123" translate="yes" xml:space="preserve">
          <source>Swap the contents of a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; for a new value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; содержимое TVar на новое значение.</target>
        </trans-unit>
        <trans-unit id="3c4b8d9f358f2ff51aae7a538ec11a54f6930031" translate="yes" xml:space="preserve">
          <source>Switch on all rewrite rules (including rules generated by automatic specialisation of overloaded functions). Implied by &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt;&lt;code&gt;-O&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Включите все правила перезаписи (включая правила, сгенерированные автоматической специализацией перегруженных функций). Подразумевается &lt;a href=&quot;using-optimisation#ghc-flag--O&quot;&gt; &lt;code&gt;-O&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a04b53848ca9575d58f32001c43b4ce12406c870" translate="yes" xml:space="preserve">
          <source>Switch on the strictness analyser. The implementation is described in the paper &lt;a href=&quot;https://www.microsoft.com/en-us/research/wp-content/uploads/2017/03/demand-jfp-draft.pdf&quot;&gt;Theory and Practice of Demand Analysis in Haskell&lt;/a&gt;.</source>
          <target state="translated">Включите анализатор строгости. Реализация описана в статье &lt;a href=&quot;https://www.microsoft.com/en-us/research/wp-content/uploads/2017/03/demand-jfp-draft.pdf&quot;&gt;Теория и практика анализа спроса в Haskell&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02d654f263c534c666ce44e6336048ef132a5d99" translate="yes" xml:space="preserve">
          <source>Switch the value of returned &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; from initial value &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; after a given number of microseconds. The caveats associated with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; also apply.</source>
          <target state="translated">Переключите значение возвращенного &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; с начального значения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; через заданное количество микросекунд. Также действуют предостережения, связанные с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0eeb0af96c4035314f68fc54800b2cbb07932307" translate="yes" xml:space="preserve">
          <source>Switch the value of returned &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tvar#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; from initial value &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; after a given number of microseconds. The caveats associated with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; also apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfbadc54deedd0db1e69f8be2474847082c0a00" translate="yes" xml:space="preserve">
          <source>Switch the value of returned &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; from initial value &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; after a given number of microseconds. The caveats associated with &lt;code&gt;&lt;a href=&quot;ghc-conc#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; also apply.</source>
          <target state="translated">Переключите значение возвращенного &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; с начального значения &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; через заданное количество микросекунд. Также действуют предостережения, связанные с &lt;code&gt;&lt;a href=&quot;ghc-conc#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e07d7d535fdc45f51b0b07854b267895fb591b38" translate="yes" xml:space="preserve">
          <source>Switch the value of returned &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; from initial value &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; after a given number of microseconds. The caveats associated with &lt;code&gt;&lt;a href=&quot;ghc-conc-io#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; also apply.</source>
          <target state="translated">Переключите значение возвращенного &lt;code&gt;&lt;a href=&quot;ghc-conc#t:TVar&quot;&gt;TVar&lt;/a&gt;&lt;/code&gt; с начального значения &lt;code&gt;&lt;a href=&quot;data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; через заданное количество микросекунд. Также действуют предостережения, связанные с &lt;code&gt;&lt;a href=&quot;ghc-conc-io#v:threadDelay&quot;&gt;threadDelay&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="9a4a2407422f77912e71d6a50bc07b4dbe875d7d" translate="yes" xml:space="preserve">
          <source>Symbolic link name</source>
          <target state="translated">Символическое название ссылки</target>
        </trans-unit>
        <trans-unit id="1af7d6c34ea3d7825f1508a7baf71357f217a173" translate="yes" xml:space="preserve">
          <source>Symbolic links</source>
          <target state="translated">Символические ссылки</target>
        </trans-unit>
        <trans-unit id="783361b7b59d49d71046c74299252d084b9c7882" translate="yes" xml:space="preserve">
          <source>Symbolic links are interpreted at run-time as if the contents of the link had been substituted into the path being followed to find a file or directory.</source>
          <target state="translated">Символические ссылки интерпретируются во время выполнения так,как если бы содержимое ссылки было подставлено в путь,по которому нужно найти файл или директорию.</target>
        </trans-unit>
        <trans-unit id="aff7b58eb9d618c164b0172e0b642bbd7ee3bed7" translate="yes" xml:space="preserve">
          <source>Symbolic references to values.</source>
          <target state="translated">Символические ссылки на значения.</target>
        </trans-unit>
        <trans-unit id="6085593feb58c36d11cea09fb5b42788f1a415de" translate="yes" xml:space="preserve">
          <source>SymbolicLink</source>
          <target state="translated">SymbolicLink</target>
        </trans-unit>
        <trans-unit id="21d208078f8fa17e45f46b6a3dbd64fbee7de0c9" translate="yes" xml:space="preserve">
          <source>SymbolicLinkFlags</source>
          <target state="translated">SymbolicLinkFlags</target>
        </trans-unit>
        <trans-unit id="788f13ef423790cd39647c69cc0a0c58faa99c27" translate="yes" xml:space="preserve">
          <source>SymbolicLinkLimit</source>
          <target state="translated">SymbolicLinkLimit</target>
        </trans-unit>
        <trans-unit id="9f1776cfc9a7333966da54deeb1343c396bc5ca1" translate="yes" xml:space="preserve">
          <source>Symmetric choice.</source>
          <target state="translated">Симметричный выбор.</target>
        </trans-unit>
        <trans-unit id="a30db73bdbd543bd62c51cc7cbfd53abdb952bb2" translate="yes" xml:space="preserve">
          <source>Symmetry</source>
          <target state="translated">Symmetry</target>
        </trans-unit>
        <trans-unit id="c65dc38c1e7d55fb39d508e68b61f0074c4c4660" translate="yes" xml:space="preserve">
          <source>Symmetry of equality</source>
          <target state="translated">Симметрия равенства</target>
        </trans-unit>
        <trans-unit id="daaae392ecd2cfcb8c9a5ad68257590b8bbdfaee" translate="yes" xml:space="preserve">
          <source>Symmetry of representational equality</source>
          <target state="translated">Симметрия репрезентативного равенства</target>
        </trans-unit>
        <trans-unit id="a9b8b1d19a51e6138d76dae280c03cb8a38abaff" translate="yes" xml:space="preserve">
          <source>SyncIOAvailable</source>
          <target state="translated">SyncIOAvailable</target>
        </trans-unit>
        <trans-unit id="78a8df308e4ac054650c3c44fc4298d45737ee3c" translate="yes" xml:space="preserve">
          <source>Synchronised mutable variables, called &lt;code&gt;MVars&lt;/code&gt;</source>
          <target state="translated">Синхронизированные изменяемые переменные, называемые &lt;code&gt;MVars&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb4777d71294a1975decab3266abe6d4a49ac42f" translate="yes" xml:space="preserve">
          <source>SynchronousWrites</source>
          <target state="translated">SynchronousWrites</target>
        </trans-unit>
        <trans-unit id="8c4e75e6b94ca02b13fdfea1474a5fa8bf2871da" translate="yes" xml:space="preserve">
          <source>Synonym for &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:-60--124-&quot;&gt;&amp;lt;|&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Синоним для &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:-60--124-&quot;&gt;&amp;lt;|&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="c5009b7aa8ffbb85e47c87d652e2c495fe1375d8" translate="yes" xml:space="preserve">
          <source>Synonyms for convenience</source>
          <target state="translated">Синонимы для удобства</target>
        </trans-unit>
        <trans-unit id="5fd831fc65c8b632816765c2116fb97599a425fe" translate="yes" xml:space="preserve">
          <source>Syntactically, an &lt;code&gt;INLINE&lt;/code&gt; pragma for a function can be put anywhere its type signature could be put.</source>
          <target state="translated">Синтаксически прагма &lt;code&gt;INLINE&lt;/code&gt; для функции может быть помещена везде, где может быть помещена ее сигнатура типа.</target>
        </trans-unit>
        <trans-unit id="111026c4c5d52f704cc515ec3a428bac05c14bda" translate="yes" xml:space="preserve">
          <source>Syntactically, the declaration lacks the &amp;ldquo;= constrs&amp;rdquo; part. The type can be parameterised over types of any kind, but if the kind is not &lt;code&gt;Type&lt;/code&gt; then an explicit kind annotation must be used (see &lt;a href=&quot;#kinding&quot;&gt;Explicitly-kinded quantification&lt;/a&gt;).</source>
          <target state="translated">Синтаксически в объявлении отсутствует часть &amp;laquo;= constrs&amp;raquo;. Тип может быть параметризируется над типами любого рода, но если вид не &lt;code&gt;Type&lt;/code&gt; , то явный видом аннотация должна быть использована (см &lt;a href=&quot;#kinding&quot;&gt;Явного-kinded квантификации&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ced60300064781c174fbd8a0a8185d8ec7226f08" translate="yes" xml:space="preserve">
          <source>SysVar</source>
          <target state="translated">SysVar</target>
        </trans-unit>
        <trans-unit id="bc0792d8dc81e8aa30b987246a5ce97c40cd6833" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="translated">System</target>
        </trans-unit>
        <trans-unit id="22f626269b535be1c0e966f5cc96ffff2957b1b5" translate="yes" xml:space="preserve">
          <source>System environment</source>
          <target state="translated">Системное окружение</target>
        </trans-unit>
        <trans-unit id="9542bd35aa2f7ec22b0274a1a139aa8b0370e91b" translate="yes" xml:space="preserve">
          <source>System metrics</source>
          <target state="translated">Системные метрики</target>
        </trans-unit>
        <trans-unit id="054d4da93d51f39ec2625b1a2fd9ef9d24365634" translate="yes" xml:space="preserve">
          <source>System-independent interface to directory manipulation.</source>
          <target state="translated">Системно-независимый интерфейс для работы с каталогами.</target>
        </trans-unit>
        <trans-unit id="3cd94fc5a1a46ef3a6e5357bbfd94595a0395feb" translate="yes" xml:space="preserve">
          <source>System.CPUTime</source>
          <target state="translated">System.CPUTime</target>
        </trans-unit>
        <trans-unit id="abc2d555767936189fe82418dc11207d84b13f01" translate="yes" xml:space="preserve">
          <source>System.Cmd</source>
          <target state="translated">System.Cmd</target>
        </trans-unit>
        <trans-unit id="c80643d67b51d9087bf1a233ae3f8b99119d3de9" translate="yes" xml:space="preserve">
          <source>System.Console.GetOpt</source>
          <target state="translated">System.Console.GetOpt</target>
        </trans-unit>
        <trans-unit id="94c2d8456ad9d7db7535979829f620bdf7715969" translate="yes" xml:space="preserve">
          <source>System.Console.Haskeline</source>
          <target state="translated">System.Console.Haskeline</target>
        </trans-unit>
        <trans-unit id="995530c03cc406b77999512d065a39ec46d35a9f" translate="yes" xml:space="preserve">
          <source>System.Console.Haskeline.Completion</source>
          <target state="translated">System.Console.Haskeline.Completion</target>
        </trans-unit>
        <trans-unit id="a684ecdf4d5d95d72d8af3b78db64da52bff47f0" translate="yes" xml:space="preserve">
          <source>System.Console.Haskeline.History</source>
          <target state="translated">System.Console.Haskeline.History</target>
        </trans-unit>
        <trans-unit id="54886ee30a709eefbeeff00d918f48ef8511c73a" translate="yes" xml:space="preserve">
          <source>System.Console.Haskeline.IO</source>
          <target state="translated">System.Console.Haskeline.IO</target>
        </trans-unit>
        <trans-unit id="3d1ff7ae655f9425baf34abb0fc50577afb05559" translate="yes" xml:space="preserve">
          <source>System.Console.Haskeline.MonadException</source>
          <target state="translated">System.Console.Haskeline.MonadException</target>
        </trans-unit>
        <trans-unit id="b38428bbdc0febc23724b9b6917d59dc07cd4772" translate="yes" xml:space="preserve">
          <source>System.Console.Terminfo.Base</source>
          <target state="translated">System.Console.Terminfo.Base</target>
        </trans-unit>
        <trans-unit id="f0530b93c36300df420c73051cf5d07524a2cd9e" translate="yes" xml:space="preserve">
          <source>System.Console.Terminfo.Color</source>
          <target state="translated">System.Console.Terminfo.Color</target>
        </trans-unit>
        <trans-unit id="8720cecc6bce59d2d1b27f650fff474071f33a34" translate="yes" xml:space="preserve">
          <source>System.Console.Terminfo.Cursor</source>
          <target state="translated">System.Console.Terminfo.Cursor</target>
        </trans-unit>
        <trans-unit id="a30e7d7d690dc83e7411bcf1cfa0738ae0ea6724" translate="yes" xml:space="preserve">
          <source>System.Console.Terminfo.Edit</source>
          <target state="translated">System.Console.Terminfo.Edit</target>
        </trans-unit>
        <trans-unit id="b42df4bf6e0e3dbffae5ad7025449b91817b472a" translate="yes" xml:space="preserve">
          <source>System.Console.Terminfo.Effects</source>
          <target state="translated">System.Console.Terminfo.Effects</target>
        </trans-unit>
        <trans-unit id="caf0cb118af26fb3d6c8a384d366d0d181635bfb" translate="yes" xml:space="preserve">
          <source>System.Console.Terminfo.Keys</source>
          <target state="translated">System.Console.Terminfo.Keys</target>
        </trans-unit>
        <trans-unit id="11c2831a9056f8ddbe33dd4b68973289a4922bc9" translate="yes" xml:space="preserve">
          <source>System.Directory</source>
          <target state="translated">System.Directory</target>
        </trans-unit>
        <trans-unit id="2231e02df58e07096e144b5dd37896c98561a1ce" translate="yes" xml:space="preserve">
          <source>System.Directory.Internal</source>
          <target state="translated">System.Directory.Internal</target>
        </trans-unit>
        <trans-unit id="bf7d731a3526683fd629e32ccc3301b8cd716809" translate="yes" xml:space="preserve">
          <source>System.Directory.Internal.Prelude</source>
          <target state="translated">System.Directory.Internal.Prelude</target>
        </trans-unit>
        <trans-unit id="e21d345f344bfeaa3d9d66b3283c404541cdc3c0" translate="yes" xml:space="preserve">
          <source>System.Environment</source>
          <target state="translated">System.Environment</target>
        </trans-unit>
        <trans-unit id="0682f5d14b13bf07429dea7469e3c899f29deabf" translate="yes" xml:space="preserve">
          <source>System.Environment.Blank</source>
          <target state="translated">System.Environment.Blank</target>
        </trans-unit>
        <trans-unit id="6953b81e8a3a09467269ca7c82603f7cd5beec76" translate="yes" xml:space="preserve">
          <source>System.Exit</source>
          <target state="translated">System.Exit</target>
        </trans-unit>
        <trans-unit id="d08a9c01ae30c3d75533db9568bfa6bd75ed9d5a" translate="yes" xml:space="preserve">
          <source>System.FilePath.Posix</source>
          <target state="translated">System.FilePath.Posix</target>
        </trans-unit>
        <trans-unit id="9345ab5d2c1dc96d733c628fcb0d3f1eafabe3db" translate="yes" xml:space="preserve">
          <source>System.FilePath.Windows</source>
          <target state="translated">System.FilePath.Windows</target>
        </trans-unit>
        <trans-unit id="e506c53144a5eb9430973dbf3945a01b65e458c8" translate="yes" xml:space="preserve">
          <source>System.IO</source>
          <target state="translated">System.IO</target>
        </trans-unit>
        <trans-unit id="f14994a07ba5c1fead4e1586350fd2f9f21b59ac" translate="yes" xml:space="preserve">
          <source>System.IO.Error</source>
          <target state="translated">System.IO.Error</target>
        </trans-unit>
        <trans-unit id="e6c221935a69c687e42cd4035eb242d37e0bc15d" translate="yes" xml:space="preserve">
          <source>System.IO.Unsafe</source>
          <target state="translated">System.IO.Unsafe</target>
        </trans-unit>
        <trans-unit id="4419a80c9771611849683123ba04940c8af31934" translate="yes" xml:space="preserve">
          <source>System.Info</source>
          <target state="translated">System.Info</target>
        </trans-unit>
        <trans-unit id="3617a3cadbc5a5ec3cfc9d65ecc01945d52eb407" translate="yes" xml:space="preserve">
          <source>System.Mem</source>
          <target state="translated">System.Mem</target>
        </trans-unit>
        <trans-unit id="6c9fd4d2bf1355b803db6cbe5d56252ee1742a6f" translate="yes" xml:space="preserve">
          <source>System.Mem.StableName</source>
          <target state="translated">System.Mem.StableName</target>
        </trans-unit>
        <trans-unit id="ac63ef484f855a177f2a757712147bfca196e486" translate="yes" xml:space="preserve">
          <source>System.Mem.Weak</source>
          <target state="translated">System.Mem.Weak</target>
        </trans-unit>
        <trans-unit id="ff9de231a8350dc1875fefc39446441429733a49" translate="yes" xml:space="preserve">
          <source>System.Posix</source>
          <target state="translated">System.Posix</target>
        </trans-unit>
        <trans-unit id="3cf8346d50b6c4a7d2803333b7d5081b7651d6d0" translate="yes" xml:space="preserve">
          <source>System.Posix.ByteString</source>
          <target state="translated">System.Posix.ByteString</target>
        </trans-unit>
        <trans-unit id="615b349e99f89ae638c9bbfee8d35110bc55e372" translate="yes" xml:space="preserve">
          <source>System.Posix.ByteString.FilePath</source>
          <target state="translated">System.Posix.ByteString.FilePath</target>
        </trans-unit>
        <trans-unit id="839c186633a65e67330b131f125358fae81aa060" translate="yes" xml:space="preserve">
          <source>System.Posix.Directory</source>
          <target state="translated">System.Posix.Directory</target>
        </trans-unit>
        <trans-unit id="5a3b5e49d6b16b646df6df41ead9202c77b9bef0" translate="yes" xml:space="preserve">
          <source>System.Posix.Directory.ByteString</source>
          <target state="translated">System.Posix.Directory.ByteString</target>
        </trans-unit>
        <trans-unit id="bca5aa52215960fa4b05ae4e363825a04f9aa221" translate="yes" xml:space="preserve">
          <source>System.Posix.DynamicLinker</source>
          <target state="translated">System.Posix.DynamicLinker</target>
        </trans-unit>
        <trans-unit id="77f11246dec1a6540247cbe70a18bcc1f279f73d" translate="yes" xml:space="preserve">
          <source>System.Posix.DynamicLinker.ByteString</source>
          <target state="translated">System.Posix.DynamicLinker.ByteString</target>
        </trans-unit>
        <trans-unit id="eb9f2c4c4cf862c1683a5ce26af6cc931dacac14" translate="yes" xml:space="preserve">
          <source>System.Posix.DynamicLinker.Prim</source>
          <target state="translated">System.Posix.DynamicLinker.Prim</target>
        </trans-unit>
        <trans-unit id="7012264b990a89bac3be5d6ca05099972d043ade" translate="yes" xml:space="preserve">
          <source>System.Posix.Env</source>
          <target state="translated">System.Posix.Env</target>
        </trans-unit>
        <trans-unit id="d85b248583f751494f8005b88043518e74818eb6" translate="yes" xml:space="preserve">
          <source>System.Posix.Env.ByteString</source>
          <target state="translated">System.Posix.Env.ByteString</target>
        </trans-unit>
        <trans-unit id="9d076155d3a24a5f2de23d788d4abcd046d5e3ae" translate="yes" xml:space="preserve">
          <source>System.Posix.Error</source>
          <target state="translated">System.Posix.Error</target>
        </trans-unit>
        <trans-unit id="fd09872967b2ac3194c5fc4696d20d385a7860cf" translate="yes" xml:space="preserve">
          <source>System.Posix.Fcntl</source>
          <target state="translated">System.Posix.Fcntl</target>
        </trans-unit>
        <trans-unit id="8b9dfa6855c09b97391250383b5e8b726a1e9368" translate="yes" xml:space="preserve">
          <source>System.Posix.Files</source>
          <target state="translated">System.Posix.Files</target>
        </trans-unit>
        <trans-unit id="3f16b041c6b93909cffec51a79153fc2127e2847" translate="yes" xml:space="preserve">
          <source>System.Posix.Files.ByteString</source>
          <target state="translated">System.Posix.Files.ByteString</target>
        </trans-unit>
        <trans-unit id="22826d441bec239829da5b7727f84d6d3b1133c0" translate="yes" xml:space="preserve">
          <source>System.Posix.IO</source>
          <target state="translated">System.Posix.IO</target>
        </trans-unit>
        <trans-unit id="18c8e2232b9cdd0cf3ebd5fa88f48eca9614e2e6" translate="yes" xml:space="preserve">
          <source>System.Posix.IO.ByteString</source>
          <target state="translated">System.Posix.IO.ByteString</target>
        </trans-unit>
        <trans-unit id="0e75686cfcd84fcb1d09bd17aae8a371c23e513a" translate="yes" xml:space="preserve">
          <source>System.Posix.Process</source>
          <target state="translated">System.Posix.Process</target>
        </trans-unit>
        <trans-unit id="a2480310db25045522aaedbac979f4e3b09ed4f7" translate="yes" xml:space="preserve">
          <source>System.Posix.Process.ByteString</source>
          <target state="translated">System.Posix.Process.ByteString</target>
        </trans-unit>
        <trans-unit id="3d04fba1f9cd86e6a65d2fe8eeafe107cd69e871" translate="yes" xml:space="preserve">
          <source>System.Posix.Resource</source>
          <target state="translated">System.Posix.Resource</target>
        </trans-unit>
        <trans-unit id="51c71a3d3a66769026e6df46a54a73309e13f961" translate="yes" xml:space="preserve">
          <source>System.Posix.Semaphore</source>
          <target state="translated">System.Posix.Semaphore</target>
        </trans-unit>
        <trans-unit id="ac81966f5a16d6c1c0e69ed22750af2629c3fae8" translate="yes" xml:space="preserve">
          <source>System.Posix.SharedMem</source>
          <target state="translated">System.Posix.SharedMem</target>
        </trans-unit>
        <trans-unit id="3d33e9b08ac0cb85ad23dc6f05061d5b85066a26" translate="yes" xml:space="preserve">
          <source>System.Posix.Signals</source>
          <target state="translated">System.Posix.Signals</target>
        </trans-unit>
        <trans-unit id="bb04d0378c3bdc451f4e9aa993deb76622436b73" translate="yes" xml:space="preserve">
          <source>System.Posix.Temp</source>
          <target state="translated">System.Posix.Temp</target>
        </trans-unit>
        <trans-unit id="d0851806197ca7004c5d22b8345141db932aaaf7" translate="yes" xml:space="preserve">
          <source>System.Posix.Temp.ByteString</source>
          <target state="translated">System.Posix.Temp.ByteString</target>
        </trans-unit>
        <trans-unit id="b09408e86331461a71180d769c64b1a1e47eeb55" translate="yes" xml:space="preserve">
          <source>System.Posix.Terminal</source>
          <target state="translated">System.Posix.Terminal</target>
        </trans-unit>
        <trans-unit id="870614aa5a0cdaab31cb71eae42b2b0cb05f0acb" translate="yes" xml:space="preserve">
          <source>System.Posix.Terminal.ByteString</source>
          <target state="translated">System.Posix.Terminal.ByteString</target>
        </trans-unit>
        <trans-unit id="c0e3de00081dd59744fcaeb8b4867250ed4b1d63" translate="yes" xml:space="preserve">
          <source>System.Posix.Time</source>
          <target state="translated">System.Posix.Time</target>
        </trans-unit>
        <trans-unit id="65da21e1dd4c609c1a9f47d74327799512873aad" translate="yes" xml:space="preserve">
          <source>System.Posix.Types</source>
          <target state="translated">System.Posix.Types</target>
        </trans-unit>
        <trans-unit id="372a2b6602a17fa2360b51ad286e668b23423aba" translate="yes" xml:space="preserve">
          <source>System.Posix.Unistd</source>
          <target state="translated">System.Posix.Unistd</target>
        </trans-unit>
        <trans-unit id="34810d7b3b44d620826a9004dc0e5f29f8060ad2" translate="yes" xml:space="preserve">
          <source>System.Posix.User</source>
          <target state="translated">System.Posix.User</target>
        </trans-unit>
        <trans-unit id="2f1f00ef514b8a51d9e31107436a2fadecf66e3a" translate="yes" xml:space="preserve">
          <source>System.Process</source>
          <target state="translated">System.Process</target>
        </trans-unit>
        <trans-unit id="3674625325b086997e3b8bdb4b942a52193dbf8d" translate="yes" xml:space="preserve">
          <source>System.Process.Internals</source>
          <target state="translated">System.Process.Internals</target>
        </trans-unit>
        <trans-unit id="f1d0016b14caeb58ea97185a11bffc8f1b11451e" translate="yes" xml:space="preserve">
          <source>System.Timeout</source>
          <target state="translated">System.Timeout</target>
        </trans-unit>
        <trans-unit id="fa140aad200d97695f84bf85abb63a17293dd672" translate="yes" xml:space="preserve">
          <source>System.Win32</source>
          <target state="translated">System.Win32</target>
        </trans-unit>
        <trans-unit id="414f69cf4731ac1ba88cdb13dba547656cf1b29c" translate="yes" xml:space="preserve">
          <source>System.Win32.Automation.Input</source>
          <target state="translated">System.Win32.Automation.Input</target>
        </trans-unit>
        <trans-unit id="75709f84f78171e47b532b82a0fbbe8bc1e08692" translate="yes" xml:space="preserve">
          <source>System.Win32.Console</source>
          <target state="translated">System.Win32.Console</target>
        </trans-unit>
        <trans-unit id="5d3b2aa714514fda846675252ec6852b1e3d17f9" translate="yes" xml:space="preserve">
          <source>System.Win32.Console.CtrlHandler</source>
          <target state="translated">System.Win32.Console.CtrlHandler</target>
        </trans-unit>
        <trans-unit id="f096899037f3e974d013f5997b2831c5300d2cb1" translate="yes" xml:space="preserve">
          <source>System.Win32.Console.HWND</source>
          <target state="translated">System.Win32.Console.HWND</target>
        </trans-unit>
        <trans-unit id="41a35e001877340a7eb5d9fc7e67e59fe2abb4cc" translate="yes" xml:space="preserve">
          <source>System.Win32.Encoding</source>
          <target state="translated">System.Win32.Encoding</target>
        </trans-unit>
        <trans-unit id="66112b6d5cadbf608f5cd52ef12708bb3b252bc2" translate="yes" xml:space="preserve">
          <source>System.Win32.File</source>
          <target state="translated">System.Win32.File</target>
        </trans-unit>
        <trans-unit id="2095f23b33e7b9883a33cd535b5a08c23ad182d2" translate="yes" xml:space="preserve">
          <source>System.Win32.FileMapping</source>
          <target state="translated">System.Win32.FileMapping</target>
        </trans-unit>
        <trans-unit id="d73afd581990396c86d0f828e422efce382953f7" translate="yes" xml:space="preserve">
          <source>System.Win32.HardLink</source>
          <target state="translated">System.Win32.HardLink</target>
        </trans-unit>
        <trans-unit id="ad3fe0641322a90efb9d6f6bcc1b642f286a6068" translate="yes" xml:space="preserve">
          <source>System.Win32.Info.Computer</source>
          <target state="translated">System.Win32.Info.Computer</target>
        </trans-unit>
        <trans-unit id="e7cbd6f609063d2fbbea58646f57624041dc6fa9" translate="yes" xml:space="preserve">
          <source>System.Win32.Info.Version</source>
          <target state="translated">System.Win32.Info.Version</target>
        </trans-unit>
        <trans-unit id="b3bf2730645f2e3a415e64c3d5d248b5dc815140" translate="yes" xml:space="preserve">
          <source>System.Win32.MinTTY</source>
          <target state="translated">System.Win32.MinTTY</target>
        </trans-unit>
        <trans-unit id="e6d32a80127bc26de0ea4f3f6100d936dbac372e" translate="yes" xml:space="preserve">
          <source>System.Win32.NLS</source>
          <target state="translated">System.Win32.NLS</target>
        </trans-unit>
        <trans-unit id="773e9bbcf1f71ef20e54313cffbf86abf337dc71" translate="yes" xml:space="preserve">
          <source>System.Win32.Process</source>
          <target state="translated">System.Win32.Process</target>
        </trans-unit>
        <trans-unit id="923aeaa600aee8a79d1f2ddee37447444712bc2a" translate="yes" xml:space="preserve">
          <source>System.Win32.Security</source>
          <target state="translated">System.Win32.Security</target>
        </trans-unit>
        <trans-unit id="60a4407d0e475e148aadd205cc69e995817d6bcc" translate="yes" xml:space="preserve">
          <source>System.Win32.SimpleMAPI</source>
          <target state="translated">System.Win32.SimpleMAPI</target>
        </trans-unit>
        <trans-unit id="4413d5194e6ad6774ef578e46350e454f43dbdc7" translate="yes" xml:space="preserve">
          <source>System.Win32.String</source>
          <target state="translated">System.Win32.String</target>
        </trans-unit>
        <trans-unit id="9f1c463c538ca39643a8017b215c963a6f077f2f" translate="yes" xml:space="preserve">
          <source>System.Win32.SymbolicLink</source>
          <target state="translated">System.Win32.SymbolicLink</target>
        </trans-unit>
        <trans-unit id="cd93fa66a20bf4df736ed9cc81adf625096902ac" translate="yes" xml:space="preserve">
          <source>System.Win32.Types</source>
          <target state="translated">System.Win32.Types</target>
        </trans-unit>
        <trans-unit id="1a22699e906f0cbad54a648440b242757ba8bd85" translate="yes" xml:space="preserve">
          <source>System.Win32.Utils</source>
          <target state="translated">System.Win32.Utils</target>
        </trans-unit>
        <trans-unit id="47e68638ef3b94e3c34563e1179f97e827fb9bec" translate="yes" xml:space="preserve">
          <source>SystemError</source>
          <target state="translated">SystemError</target>
        </trans-unit>
        <trans-unit id="268b2a7b07a0ad87688e0007102a12e89748562a" translate="yes" xml:space="preserve">
          <source>SystemID</source>
          <target state="translated">SystemID</target>
        </trans-unit>
        <trans-unit id="cf2a95ca758b8bdeeb2ecf600f0df3a984af4e8f" translate="yes" xml:space="preserve">
          <source>SystemTime</source>
          <target state="translated">SystemTime</target>
        </trans-unit>
        <trans-unit id="851bce85512645682970d2b5fe17d9d43c9de283" translate="yes" xml:space="preserve">
          <source>Systems such as information flow control security, capability based security systems and DSLs for working with encrypted data.. etc can be built in the Haskell language as a library. However they require guarantees about the properties of Haskell that aren&amp;rsquo;t true in general due to the presence of functions like &lt;code&gt;unsafePerformIO&lt;/code&gt;. Safe Haskell gives users enough guarantees about the type system to allow them to build such secure systems.</source>
          <target state="translated">Такие системы, как безопасность управления информационными потоками, системы безопасности на основе возможностей и DSL для работы с зашифрованными данными и т. Д. Могут быть построены на языке Haskell в виде библиотеки. Однако они требуют гарантий относительно свойств Haskell, которые в целом &lt;code&gt;unsafePerformIO&lt;/code&gt; из-за наличия таких функций, как unsafePerformIO . Safe Haskell дает пользователям достаточно гарантий относительно системы типов, чтобы они могли создавать такие безопасные системы.</target>
        </trans-unit>
        <trans-unit id="74319ad714357112b950fcacee0295caa8b354ea" translate="yes" xml:space="preserve">
          <source>TAI - UTC during this day. No table is provided, as any program compiled with it would become out of date in six months.</source>
          <target state="translated">TAI-UTC в течение этого дня.Таблица не предоставляется,так как любая программа,составленная с ее помощью,через полгода устареет.</target>
        </trans-unit>
        <trans-unit id="1727e72b5c5ad211de6825534794a74df1a1a413" translate="yes" xml:space="preserve">
          <source>TAI and leap-second maps for converting to UTC: most people won't need this module.</source>
          <target state="translated">TAI и високосные карты для преобразования в UTC:большинству людей этот модуль не понадобится.</target>
        </trans-unit>
        <trans-unit id="9b62e74d4806b8741ec136d2ab4f7a33bba92e70" translate="yes" xml:space="preserve">
          <source>TAI clock, if it exists. Note that it is unlikely to be set correctly, without due care and attention.</source>
          <target state="translated">Часы TAI,если они существуют.Обратите внимание,что они вряд ли будут установлены правильно,без должной заботы и внимания.</target>
        </trans-unit>
        <trans-unit id="ea7d3c18994e2490c462241ebe25179ce7ebd3bc" translate="yes" xml:space="preserve">
          <source>TArray</source>
          <target state="translated">TArray</target>
        </trans-unit>
        <trans-unit id="c84c024ccfb745d3cd171eb6af01cfd3bc8684cb" translate="yes" xml:space="preserve">
          <source>TArray is a transactional array, supporting the usual &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; interface for mutable arrays.</source>
          <target state="translated">TArray - это транзакционный массив, поддерживающий обычный интерфейс &lt;code&gt;&lt;a href=&quot;../array-0.5.4.0/data-array-marray#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; для изменяемых массивов.</target>
        </trans-unit>
        <trans-unit id="10f16ce6fbbc23c8f857fdac0d27ba4eb31ec913" translate="yes" xml:space="preserve">
          <source>TBQueue</source>
          <target state="translated">TBQueue</target>
        </trans-unit>
        <trans-unit id="1eb5affcfc085f437d0186c927dcc74b9e2e4fbb" translate="yes" xml:space="preserve">
          <source>TCHAR</source>
          <target state="translated">TCHAR</target>
        </trans-unit>
        <trans-unit id="fda90d9eef3786d8353f1a1a0101c2994f16dc3e" translate="yes" xml:space="preserve">
          <source>TCIOFF</source>
          <target state="translated">TCIOFF</target>
        </trans-unit>
        <trans-unit id="33b459f201eb7b79961025dfa1eb8056af66b395" translate="yes" xml:space="preserve">
          <source>TCION</source>
          <target state="translated">TCION</target>
        </trans-unit>
        <trans-unit id="91b82e688ad4a91a8f8d35942bfb1b0267a2bc12" translate="yes" xml:space="preserve">
          <source>TCOOFF</source>
          <target state="translated">TCOOFF</target>
        </trans-unit>
        <trans-unit id="458745b27d48d51cbe1818f94471b17912d468ed" translate="yes" xml:space="preserve">
          <source>TCOON</source>
          <target state="translated">TCOON</target>
        </trans-unit>
        <trans-unit id="b0b62257759bc2acc58f041228bc720d599dfd23" translate="yes" xml:space="preserve">
          <source>TChan</source>
          <target state="translated">TChan</target>
        </trans-unit>
        <trans-unit id="9d004963a17f54a22663ca06e4dc245e834f954b" translate="yes" xml:space="preserve">
          <source>TChans</source>
          <target state="translated">TChans</target>
        </trans-unit>
        <trans-unit id="f78b01a61a63053d8f5ba0765d223c8c30a0c824" translate="yes" xml:space="preserve">
          <source>TEMP environment variable.</source>
          <target state="translated">Переменная окружения TEMP.</target>
        </trans-unit>
        <trans-unit id="77d01d4400641cd13772b447d053178042a5b9f8" translate="yes" xml:space="preserve">
          <source>TExp</source>
          <target state="translated">TExp</target>
        </trans-unit>
        <trans-unit id="ffc50102cf77faab4bd8d11769fb4a9db711a702" translate="yes" xml:space="preserve">
          <source>TExpQ</source>
          <target state="translated">TExpQ</target>
        </trans-unit>
        <trans-unit id="bf532ec46446db37cd9e4a9a9e0a0ca2b9cf4069" translate="yes" xml:space="preserve">
          <source>THAnnWrapper</source>
          <target state="translated">THAnnWrapper</target>
        </trans-unit>
        <trans-unit id="038851b817b9b84caf352b988e893435568ae800" translate="yes" xml:space="preserve">
          <source>THDec</source>
          <target state="translated">THDec</target>
        </trans-unit>
        <trans-unit id="badeede43ed54cb619ce6c3b76094dd5c7488268" translate="yes" xml:space="preserve">
          <source>THExp</source>
          <target state="translated">THExp</target>
        </trans-unit>
        <trans-unit id="ea60d3ac9972fdc020e7c91d19f18f48686c8c5a" translate="yes" xml:space="preserve">
          <source>THMessage</source>
          <target state="translated">THMessage</target>
        </trans-unit>
        <trans-unit id="dff6bb8e59ff4feee5b2c3a461ab059b8e32e9ea" translate="yes" xml:space="preserve">
          <source>THMsg</source>
          <target state="translated">THMsg</target>
        </trans-unit>
        <trans-unit id="2a19baa88a31d713903f96a9d03e694a78c0eb00" translate="yes" xml:space="preserve">
          <source>THPat</source>
          <target state="translated">THPat</target>
        </trans-unit>
        <trans-unit id="aaa0285fa41dd2a2d13544b874effeb1204519cb" translate="yes" xml:space="preserve">
          <source>THResult</source>
          <target state="translated">THResult</target>
        </trans-unit>
        <trans-unit id="f80a9d51dc48677f6d6e0e07a50d560ec6c5a50c" translate="yes" xml:space="preserve">
          <source>THResultType</source>
          <target state="translated">THResultType</target>
        </trans-unit>
        <trans-unit id="f1239fbccf0f921ceee38368839375fffd40c686" translate="yes" xml:space="preserve">
          <source>THType</source>
          <target state="translated">THType</target>
        </trans-unit>
        <trans-unit id="9f8f499f0f42ab20ff0659d3dce21f141749ef81" translate="yes" xml:space="preserve">
          <source>TMP environment variable.</source>
          <target state="translated">переменная окружения TMP.</target>
        </trans-unit>
        <trans-unit id="1ed48a41abbc149594d26db97fa4773fef889eb2" translate="yes" xml:space="preserve">
          <source>TMVar</source>
          <target state="translated">TMVar</target>
        </trans-unit>
        <trans-unit id="977a7d57f19d844873125a2f1ca576764e2a543e" translate="yes" xml:space="preserve">
          <source>TMVars</source>
          <target state="translated">TMVars</target>
        </trans-unit>
        <trans-unit id="b698c11e84460ed5999bfeb5cbf25b865c238f3c" translate="yes" xml:space="preserve">
          <source>TODO</source>
          <target state="translated">TODO</target>
        </trans-unit>
        <trans-unit id="5189c0462a327407842c657829fb8cfcdcee04ca" translate="yes" xml:space="preserve">
          <source>TQList</source>
          <target state="translated">TQList</target>
        </trans-unit>
        <trans-unit id="c9f4ed3ab0090df5294277bfc9635ecd16c9294d" translate="yes" xml:space="preserve">
          <source>TQNil</source>
          <target state="translated">TQNil</target>
        </trans-unit>
        <trans-unit id="5e8112b9bc7d573e0132a346e4f69b74ded60a70" translate="yes" xml:space="preserve">
          <source>TQueue</source>
          <target state="translated">TQueue</target>
        </trans-unit>
        <trans-unit id="33e8a7fb34109ea263f4e125202073824c4c8b68" translate="yes" xml:space="preserve">
          <source>TSem</source>
          <target state="translated">TSem</target>
        </trans-unit>
        <trans-unit id="4464b8e4a039bf6559ad424da8e3e745adcd64af" translate="yes" xml:space="preserve">
          <source>TVar</source>
          <target state="translated">TVar</target>
        </trans-unit>
        <trans-unit id="d2c1f866346f095c2573a4945b2e554e4287937b" translate="yes" xml:space="preserve">
          <source>TVar#</source>
          <target state="translated">TVar#</target>
        </trans-unit>
        <trans-unit id="ea0172c0f81612a2096348aa35563dc56d777a10" translate="yes" xml:space="preserve">
          <source>TVars</source>
          <target state="translated">TVars</target>
        </trans-unit>
        <trans-unit id="6e9816a8e9d0388eecdb52866188c04e75e4b1b3" translate="yes" xml:space="preserve">
          <source>TYPE</source>
          <target state="translated">TYPE</target>
        </trans-unit>
        <trans-unit id="8b7a73938e078907cbcaa328110155ded5994f28" translate="yes" xml:space="preserve">
          <source>Tab stops are the size of a tab in the provided &lt;em&gt;line:column&lt;/em&gt; values.</source>
          <target state="translated">Позиции табуляции - это размер табуляции в предоставленной &lt;em&gt;строке:&lt;/em&gt; значения &lt;em&gt;столбца&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0424f6e7026fa4bc2c4a7043083417315113c79b" translate="yes" xml:space="preserve">
          <source>Table</source>
          <target state="translated">Table</target>
        </trans-unit>
        <trans-unit id="78f5f5dd09ff7a5e934419029673c218534f2b15" translate="yes" xml:space="preserve">
          <source>Table combinators for XHTML.</source>
          <target state="translated">Комбинаторы таблиц для XHTML.</target>
        </trans-unit>
        <trans-unit id="80d8dd8f19975ebde18e5655c0adff4ea370a112" translate="yes" xml:space="preserve">
          <source>Table indexed by a contiguous set of vertices.</source>
          <target state="translated">Таблица проиндексирована смежным набором вершин.</target>
        </trans-unit>
        <trans-unit id="982963c1c41cbed8cab073724749592fe35c532b" translate="yes" xml:space="preserve">
          <source>Tag</source>
          <target state="translated">Tag</target>
        </trans-unit>
        <trans-unit id="3c85b45a7de3b7201de5d83d204a225914dd2b80" translate="yes" xml:space="preserve">
          <source>Tag for K1: recursion (of kind &lt;code&gt;Type&lt;/code&gt;)</source>
          <target state="translated">Тег для K1: рекурсия (вида &lt;code&gt;Type&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e972fe06be2cdde81f3a01b7d99768480021a3c4" translate="yes" xml:space="preserve">
          <source>Tag for M1: constructor</source>
          <target state="translated">тег для M1:конструктор</target>
        </trans-unit>
        <trans-unit id="592655fa52c225437f9b7c4bff055c1860aa44b8" translate="yes" xml:space="preserve">
          <source>Tag for M1: datatype</source>
          <target state="translated">Тег для M1:тип данных</target>
        </trans-unit>
        <trans-unit id="13d0d11f8436482da878107e6ab575c238f46af8" translate="yes" xml:space="preserve">
          <source>Tag for M1: record selector</source>
          <target state="translated">тег для M1:селектор записи</target>
        </trans-unit>
        <trans-unit id="fa463232bf447f8bacd0d6f66b5937149f02d14f" translate="yes" xml:space="preserve">
          <source>TaggedQueue</source>
          <target state="translated">TaggedQueue</target>
        </trans-unit>
        <trans-unit id="80af165ded52eb5f823b06e8e7198b1e25fbc5da" translate="yes" xml:space="preserve">
          <source>Take a FilePath and make it valid; does not change already valid FilePaths.</source>
          <target state="translated">Возьмите FilePath и сделайте его действительным;не изменяйте уже действительный FilePath.</target>
        </trans-unit>
        <trans-unit id="4a723fc39dcf4377dc0d11aafd6f849c739325aa" translate="yes" xml:space="preserve">
          <source>Take a given number of elements in order, beginning with the smallest ones.</source>
          <target state="translated">Возьмите заданное количество элементов по порядку,начиная с самых маленьких.</target>
        </trans-unit>
        <trans-unit id="430d666fb3c9c0e08a2be91c56b9433434f51150" translate="yes" xml:space="preserve">
          <source>Take a given number of entries in key order, beginning with the smallest keys.</source>
          <target state="translated">Возьмите заданное количество записей в порядке возрастания клавиш,начиная с наименьших.</target>
        </trans-unit>
        <trans-unit id="9587c5ae4ea1a4fbd4bab86f98fb889083a0db82" translate="yes" xml:space="preserve">
          <source>Take a string, split it on the &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:searchPathSeparator&quot;&gt;searchPathSeparator&lt;/a&gt;&lt;/code&gt; character. Blank items are ignored on Windows, and converted to &lt;code&gt;.&lt;/code&gt; on Posix. On Windows path elements are stripped of quotes.</source>
          <target state="translated">Возьмите строку, разделите ее на символ &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:searchPathSeparator&quot;&gt;searchPathSeparator&lt;/a&gt;&lt;/code&gt; . Пустые элементы игнорируются в Windows и преобразуются в &lt;code&gt;.&lt;/code&gt; на Posix. В Windows элементы пути лишены кавычек.</target>
        </trans-unit>
        <trans-unit id="80240e9aba0721fddd38fea701f84cdb2e1f6e0b" translate="yes" xml:space="preserve">
          <source>Take a string, split it on the &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:searchPathSeparator&quot;&gt;searchPathSeparator&lt;/a&gt;&lt;/code&gt; character. Blank items are ignored on Windows, and converted to &lt;code&gt;.&lt;/code&gt; on Posix. On Windows path elements are stripped of quotes.</source>
          <target state="translated">Возьмите строку, разделите ее на символ &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:searchPathSeparator&quot;&gt;searchPathSeparator&lt;/a&gt;&lt;/code&gt; . Пустые элементы игнорируются в Windows и преобразуются в &lt;code&gt;.&lt;/code&gt; на Posix. В Windows элементы пути лишены кавычек.</target>
        </trans-unit>
        <trans-unit id="1d8280d5e368da252b3055a1416972cdcbb48aa9" translate="yes" xml:space="preserve">
          <source>Take a value from an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, put a new value into the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; and return the value taken. This function is atomic only if there are no other producers for this &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Возьмите значение из &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , поместите новое значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; и верните полученное значение. Эта функция является атомарной, только если для этого &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; нет других производителей .</target>
        </trans-unit>
        <trans-unit id="8bddc3bc632e48c7b7df71bdce026a23e42c19ce" translate="yes" xml:space="preserve">
          <source>Take, for example,</source>
          <target state="translated">Возьмем,к примеру,</target>
        </trans-unit>
        <trans-unit id="7004c356a6391cdc61b111e2dfbd22378fd51474" translate="yes" xml:space="preserve">
          <source>Take, for example, the following program</source>
          <target state="translated">Возьмем,к примеру,следующую программу</target>
        </trans-unit>
        <trans-unit id="4397c207b3f93f72f76adcda5a12f1ef685122e8" translate="yes" xml:space="preserve">
          <source>Takes a value of type &lt;code&gt;a&lt;/code&gt; and returns a concrete representation of that type.</source>
          <target state="translated">Принимает значение типа &lt;code&gt;a&lt;/code&gt; и возвращает конкретное представление этого типа.</target>
        </trans-unit>
        <trans-unit id="9c14b0726bc4a4cfe19a274b23d1058099f497a9" translate="yes" xml:space="preserve">
          <source>Takes an array and a list of pairs and returns an array identical to the left argument except that it has been updated by the associations in the right argument. For example, if m is a 1-origin, n by n matrix, then &lt;code&gt;m//[((i,i), 0) | i &amp;lt;- [1..n]]&lt;/code&gt; is the same matrix, except with the diagonal zeroed.</source>
          <target state="translated">Принимает массив и список пар и возвращает массив, идентичный левому аргументу, за исключением того, что он был обновлен ассоциациями в правом аргументе. Например, если m - матрица с одним началом, n на n, то &lt;code&gt;m//[((i,i), 0) | i &amp;lt;- [1..n]]&lt;/code&gt; - та же матрица, только с обнуленной диагональю.</target>
        </trans-unit>
        <trans-unit id="a81c08f0a558b2cdb54cb75a7570aa71433fb35d" translate="yes" xml:space="preserve">
          <source>Target byte ordering.</source>
          <target state="translated">Заказ по байтам.</target>
        </trans-unit>
        <trans-unit id="2212c7b535f766ed5f3dc0a2d491cf1267e6dc5e" translate="yes" xml:space="preserve">
          <source>Target file path</source>
          <target state="translated">Путь к целевому файлу</target>
        </trans-unit>
        <trans-unit id="478d30d8174645ac8285e3dd15ce42c3543a6834" translate="yes" xml:space="preserve">
          <source>TcClsName</source>
          <target state="translated">TcClsName</target>
        </trans-unit>
        <trans-unit id="e4e0aabcee25a85a81c328ace4a61f66b1899623" translate="yes" xml:space="preserve">
          <source>Tear down the active &lt;a href=&quot;#c.EventLogWriter&quot;&gt;&lt;code&gt;EventLogWriter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56829ff154bdc1bf9f3f2d63d8359c01ea11c05e" translate="yes" xml:space="preserve">
          <source>Technically in Haskell 2010 this is illegal:</source>
          <target state="translated">Технически в Хаскелле 2010 это незаконно:</target>
        </trans-unit>
        <trans-unit id="16afc18c8983601b01eddd4bfffa7ba0a0a2c738" translate="yes" xml:space="preserve">
          <source>Tell a &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Decoder&quot;&gt;Decoder&lt;/a&gt;&lt;/code&gt; that there is no more input. This passes &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;data-binary-get#v:Partial&quot;&gt;Partial&lt;/a&gt;&lt;/code&gt; decoder, otherwise returns the decoder unchanged.</source>
          <target state="translated">Сообщите &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Decoder&quot;&gt;Decoder&lt;/a&gt;&lt;/code&gt; что ввода больше нет. Это не проходит &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; к &lt;code&gt;&lt;a href=&quot;data-binary-get#v:Partial&quot;&gt;Partial&lt;/a&gt;&lt;/code&gt; декодеру, в противном случае возвращает декодер без изменений.</target>
        </trans-unit>
        <trans-unit id="6af5e03d501c4ea227683a7b31027dcfffc9e0f7" translate="yes" xml:space="preserve">
          <source>Tell the linker to avoid shared Haskell libraries, if possible. This is the default.</source>
          <target state="translated">Скажите компоновщику,чтобы он по возможности избегал разделяемых библиотек Haskell.По умолчанию.</target>
        </trans-unit>
        <trans-unit id="bbc0aca55dd018fd5970b62abe8e150fd79f9ab2" translate="yes" xml:space="preserve">
          <source>Tell the linker to split the single object file that would normally be generated into multiple object files, one per top-level Haskell function or type in the module. This only makes sense for libraries, where it means that executables linked against the library are smaller as they only link against the object files that they need. However, assembling all the sections separately is expensive, so this is slower than compiling normally. Additionally, the size of the library itself (the &lt;code&gt;.a&lt;/code&gt; file) can be a factor of 2 to 2.5 larger.</source>
          <target state="translated">Скажите компоновщику разделить один объектный файл, который обычно создается, на несколько объектных файлов, по одному для каждой функции Haskell верхнего уровня или типа в модуле. Это имеет смысл только для библиотек, поскольку это означает, что исполняемые файлы, связанные с библиотекой, меньше по размеру, поскольку они связываются только с объектными файлами, которые им нужны. Однако сборка всех разделов по отдельности стоит дорого, поэтому это медленнее, чем обычная компиляция. Кроме того, размер самой библиотеки ( файла &lt;code&gt;.a&lt;/code&gt; ) может быть в 2&amp;ndash;2,5 раза больше.</target>
        </trans-unit>
        <trans-unit id="76ed640ba01abb6ba7a1c2453ca7124d9760be5f" translate="yes" xml:space="preserve">
          <source>Tells GHC not to collect information about how often functions are entered at runtime (the &amp;ldquo;entries&amp;rdquo; column of the time profile), for this module. This tends to make the profiled code run faster, and hence closer to the speed of the unprofiled code, because GHC is able to optimise more aggressively if it doesn&amp;rsquo;t have to maintain correct entry counts. This option can be useful if you aren&amp;rsquo;t interested in the entry counts (for example, if you only intend to do heap profiling).</source>
          <target state="translated">Указывает GHC не собирать информацию о том, как часто функции вводятся во время выполнения (столбец &amp;laquo;записи&amp;raquo; временного профиля) для этого модуля. Это приводит к тому, что профилированный код выполняется быстрее и, следовательно, приближается к скорости непрофилированного кода, поскольку GHC может оптимизировать более агрессивно, если ему не нужно поддерживать правильное количество входов. Этот параметр может быть полезен, если вас не интересует количество записей (например, если вы собираетесь выполнять только профилирование кучи).</target>
        </trans-unit>
        <trans-unit id="16a08220f8dfb558172d312872b55f0316d3cfa8" translate="yes" xml:space="preserve">
          <source>Tells GHC that the module being compiled forms part of unit ID ⟨unit-id⟩; internally, these keys are used to determine type equality and linker symbols. As of GHC 8.0, unit IDs must consist solely of alphanumeric characters, dashes, underscores and periods. GHC reserves the right to interpret other characters in a special way in later releases.</source>
          <target state="translated">Сообщает GHC,что компилируемый модуль является частью идентификатора модуля ⟨unit-id⟩;внутри эти ключи используются для определения равенства типов и символов компоновщика.Начиная с версии GHC 8.0,идентификаторы модулей должны состоять исключительно из буквенно-цифровых символов,тире,подчеркивания и точек.GHC оставляет за собой право интерпретировать другие символы особым образом в более поздних версиях.</target>
        </trans-unit>
        <trans-unit id="57fde8a4c38996e78f9476baf473c5f093c84804" translate="yes" xml:space="preserve">
          <source>Tells GHC to ignore all inessential information when reading interface files. That is, even if &lt;code&gt;M.hi&lt;/code&gt; contains unfolding or strictness information for a function, GHC will ignore that information.</source>
          <target state="translated">Указывает GHC игнорировать всю несущественную информацию при чтении файлов интерфейса. То есть, даже если &lt;code&gt;M.hi&lt;/code&gt; содержит информацию о развертывании или строгости для функции, GHC проигнорирует эту информацию.</target>
        </trans-unit>
        <trans-unit id="f49bc22458bf36f5d9ba2d83d0c8c50ed672a695" translate="yes" xml:space="preserve">
          <source>Tells GHC to omit all inessential information from the interface file generated for the module being compiled (say M). This means that a module importing M will see only the &lt;em&gt;types&lt;/em&gt; of the functions that M exports, but not their unfoldings, strictness info, etc. Hence, for example, no function exported by M will be inlined into an importing module. The benefit is that modules that import M will need to be recompiled less often (only when M&amp;rsquo;s exports change their type, not when they change their implementation).</source>
          <target state="translated">Указывает GHC опустить всю несущественную информацию из файла интерфейса, созданного для компилируемого модуля (скажем, M). Это означает, что модуль, импортирующий M, будет видеть только &lt;em&gt;типы&lt;/em&gt; функций, которые экспортирует M, но не их развертывания, информацию о строгости и т. Д. Следовательно, например, никакая функция, экспортируемая M, не будет встроена в модуль импорта. Преимущество состоит в том, что модули, которые импортируют M, нужно будет реже перекомпилировать (только когда экспорт M меняет свой тип, а не когда они меняют свою реализацию).</target>
        </trans-unit>
        <trans-unit id="ededfcf737f4c4553d987674c6464c6bd022107e" translate="yes" xml:space="preserve">
          <source>Tells GHC to omit heap checks when no allocation is being performed. While this improves binary sizes by about 5%, it also means that threads run in tight non-allocating loops will not get preempted in a timely fashion. If it is important to always be able to interrupt such threads, you should turn this optimization off. Consider also recompiling all libraries with this optimization turned off, if you need to guarantee interruptibility.</source>
          <target state="translated">Говорит GHC пропустить проверки кучи,когда не выполняется распределение.Хотя это и улучшает двоичные размеры примерно на 5%,это также означает,что нити,работающие в плотных нерегулярных петлях,не будут своевременно вытеснены.Если важно всегда иметь возможность прерывать такие потоки,то следует отключить эту оптимизацию.Рассмотрим также возможность перекомпиляции всех библиотек с отключенной оптимизацией,если необходимо гарантировать прерывистость.</target>
        </trans-unit>
        <trans-unit id="fce750875cd9a44b96f71a6caaa5492836a9bfeb" translate="yes" xml:space="preserve">
          <source>Tells the system whether or not to set the &lt;code&gt;SA_NOCLDSTOP&lt;/code&gt; flag when installing new signal handlers.</source>
          <target state="translated">Сообщает системе, следует ли устанавливать флаг &lt;code&gt;SA_NOCLDSTOP&lt;/code&gt; при установке новых обработчиков сигналов.</target>
        </trans-unit>
        <trans-unit id="ff437703677ef424e354947da194211739cafb40" translate="yes" xml:space="preserve">
          <source>Template Haskell allows you to do compile-time meta-programming in Haskell. The background to the main technical innovations is discussed in &amp;ldquo;&lt;a href=&quot;http://research.microsoft.com/~simonpj/papers/meta-haskell/&quot;&gt;Template Meta-programming for Haskell&lt;/a&gt;&amp;rdquo; (Proc Haskell Workshop 2002).</source>
          <target state="translated">Шаблон Haskell позволяет выполнять метапрограммирование во время компиляции в Haskell. Предыстория основных технических нововведений обсуждается в &amp;laquo; &lt;a href=&quot;http://research.microsoft.com/~simonpj/papers/meta-haskell/&quot;&gt;Мета-программировании шаблонов для Haskell&lt;/a&gt; &amp;raquo; (Proc Haskell Workshop 2002).</target>
        </trans-unit>
        <trans-unit id="5a8aec726ed3125e3c09e3a3ff7b03d8c159f6e8" translate="yes" xml:space="preserve">
          <source>Template Haskell cannot know what the argument to &lt;code&gt;add1&lt;/code&gt; will be at the function&amp;rsquo;s definition site, so a lifting mechanism is used to promote &lt;code&gt;x&lt;/code&gt; into a value of type &lt;code&gt;Q Exp&lt;/code&gt;. This functionality is exposed to the user as the &lt;code&gt;Lift&lt;/code&gt; typeclass in the &lt;code&gt;Language.Haskell.TH.Syntax&lt;/code&gt; module. If a type has a &lt;code&gt;Lift&lt;/code&gt; instance, then any of its values can be lifted to a Template Haskell expression:</source>
          <target state="translated">Шаблон Haskell не может знать, какой аргумент для &lt;code&gt;add1&lt;/code&gt; будет на сайте определения функции, поэтому используется механизм подъема для преобразования &lt;code&gt;x&lt;/code&gt; в значение типа &lt;code&gt;Q Exp&lt;/code&gt; . Эта функциональность предоставляется пользователю как класс типов &lt;code&gt;Lift&lt;/code&gt; в модуле &lt;code&gt;Language.Haskell.TH.Syntax&lt;/code&gt; . Если у типа есть экземпляр &lt;code&gt;Lift&lt;/code&gt; , то любое из его значений можно поднять до выражения Template Haskell:</target>
        </trans-unit>
        <trans-unit id="0bfc14e4c55c321d42934a17794446d7262b8922" translate="yes" xml:space="preserve">
          <source>Template Haskell has no way of knowing what value &lt;code&gt;x&lt;/code&gt; will take on at splice-time, so it requires the type of &lt;code&gt;x&lt;/code&gt; to be an instance of &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В Template Haskell нет способа узнать, какое значение &lt;code&gt;x&lt;/code&gt; примет во время монтажа, поэтому он требует, чтобы тип &lt;code&gt;x&lt;/code&gt; был экземпляром &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Lift&quot;&gt;Lift&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa5b11adaee119e29f46852dbeadbc40dddb30de" translate="yes" xml:space="preserve">
          <source>Template Haskell has the following new syntactic constructions. You need to use the extension &lt;a href=&quot;#extension-TemplateHaskell&quot;&gt;&lt;code&gt;TemplateHaskell&lt;/code&gt;&lt;/a&gt; to switch these syntactic extensions on. Alternatively, the &lt;a href=&quot;#extension-TemplateHaskellQuotes&quot;&gt;&lt;code&gt;TemplateHaskellQuotes&lt;/code&gt;&lt;/a&gt; extension can be used to enable the quotation subset of Template Haskell (i.e. without splice syntax). The &lt;a href=&quot;#extension-TemplateHaskellQuotes&quot;&gt;&lt;code&gt;TemplateHaskellQuotes&lt;/code&gt;&lt;/a&gt; extension is considered safe under &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell&lt;/a&gt; while &lt;a href=&quot;#extension-TemplateHaskell&quot;&gt;&lt;code&gt;TemplateHaskell&lt;/code&gt;&lt;/a&gt; is not.</source>
          <target state="translated">В Template Haskell есть следующие новые синтаксические конструкции. Вам необходимо использовать расширение &lt;a href=&quot;#extension-TemplateHaskell&quot;&gt; &lt;code&gt;TemplateHaskell&lt;/code&gt; ,&lt;/a&gt; чтобы включить эти синтаксические расширения. В качестве альтернативы, расширение &lt;a href=&quot;#extension-TemplateHaskellQuotes&quot;&gt; &lt;code&gt;TemplateHaskellQuotes&lt;/code&gt; &lt;/a&gt; может использоваться для включения подмножества цитат в Template Haskell (то есть без синтаксиса монтажа). Расширение &lt;a href=&quot;#extension-TemplateHaskellQuotes&quot;&gt; &lt;code&gt;TemplateHaskellQuotes&lt;/code&gt; &lt;/a&gt; считается безопасным в &lt;a href=&quot;safe_haskell#safe-haskell&quot;&gt;Safe Haskell,&lt;/a&gt; а &lt;a href=&quot;#extension-TemplateHaskell&quot;&gt; &lt;code&gt;TemplateHaskell&lt;/code&gt; &lt;/a&gt; - нет.</target>
        </trans-unit>
        <trans-unit id="cf0bfe7b83cf1fe4eb5eae8c6dda164d7ea82705" translate="yes" xml:space="preserve">
          <source>Template Haskell relies on GHC&amp;rsquo;s built-in bytecode compiler and interpreter to run the splice expressions. The bytecode interpreter runs the compiled expression on top of the same runtime on which GHC itself is running; this means that the compiled code referred to by the interpreted expression must be compatible with this runtime, and in particular this means that object code that is compiled for profiling &lt;em&gt;cannot&lt;/em&gt; be loaded and used by a splice expression, because profiled object code is only compatible with the profiling version of the runtime.</source>
          <target state="translated">Template Haskell полагается на встроенный компилятор и интерпретатор байт-кода GHC для выполнения выражений монтажа. Интерпретатор байт-кода запускает скомпилированное выражение поверх той же среды выполнения, в которой работает сам GHC; это означает, что скомпилированный код, на который ссылается интерпретируемое выражение, должен быть совместим с этой средой выполнения, и, в частности, это означает, что объектный код, который скомпилирован для профилирования, &lt;em&gt;не может&lt;/em&gt; быть загружен и использован выражением соединения, поскольку профилированный объектный код совместим только с версия среды выполнения для профилирования.</target>
        </trans-unit>
        <trans-unit id="7bdefc9539b9194a2d4149a5c91d997eef29d850" translate="yes" xml:space="preserve">
          <source>Template Haskell return values</source>
          <target state="translated">Шаблон возврата значений Хаскелла</target>
        </trans-unit>
        <trans-unit id="9b404f6d6623869222b538ba6bfc06c98e19cb94" translate="yes" xml:space="preserve">
          <source>Template Haskell splices won&amp;rsquo;t be checked for warnings, because the code causing the warning might originate from a third-party library and possibly was not written by the user. If you want to have warnings for splices anyway, pass &lt;a href=&quot;#ghc-flag--fenable-th-splice-warnings&quot;&gt;&lt;code&gt;-fenable-th-splice-warnings&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d152140c1e18c7cd3a3f310906c764d63ca1e2f5" translate="yes" xml:space="preserve">
          <source>Template Haskell supports quasiquoting, which permits users to construct program fragments by directly writing concrete syntax. A quasiquoter is essentially a function with takes a string to a Template Haskell AST. This module defines the &lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#t:QuasiQuoter&quot;&gt;QuasiQuoter&lt;/a&gt;&lt;/code&gt; datatype, which specifies a quasiquoter &lt;code&gt;q&lt;/code&gt; which can be invoked using the syntax &lt;code&gt;[q| ... string to parse ... |]&lt;/code&gt; when the &lt;code&gt;QuasiQuotes&lt;/code&gt; language extension is enabled, and some utility functions for manipulating quasiquoters. Nota bene: this package does not define any parsers, that is up to you.</source>
          <target state="translated">Template Haskell поддерживает квазицитаты, которые позволяют пользователям создавать фрагменты программы, напрямую записывая конкретный синтаксис. Квазицитатор - это, по сути, функция, передающая строку в Template Haskell AST. Этот модуль определяет тип данных &lt;code&gt;&lt;a href=&quot;language-haskell-th-quote#t:QuasiQuoter&quot;&gt;QuasiQuoter&lt;/a&gt;&lt;/code&gt; , который определяет квазиквотер &lt;code&gt;q&lt;/code&gt; , который может быть вызван с использованием синтаксиса &lt;code&gt;[q| ... string to parse ... |]&lt;/code&gt; когда &lt;code&gt;QuasiQuotes&lt;/code&gt; расширение языка QuasiQuotes , и некоторые служебные функции для управления квазиквотерами. Nota bene: этот пакет не определяет никаких парсеров, это зависит от вас.</target>
        </trans-unit>
        <trans-unit id="ebddc9e0d108559114cba48b682824dfa130af27" translate="yes" xml:space="preserve">
          <source>Template Haskell works in any mode (&lt;a href=&quot;using#ghc-flag---make&quot;&gt;&lt;code&gt;--make&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;using#ghc-flag---interactive&quot;&gt;&lt;code&gt;--interactive&lt;/code&gt;&lt;/a&gt;, or file-at-a-time). There used to be a restriction to the former two, but that restriction has been lifted.</source>
          <target state="translated">Шаблон Haskell работает в любом режиме ( &lt;a href=&quot;using#ghc-flag---make&quot;&gt; &lt;code&gt;--make&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;using#ghc-flag---interactive&quot;&gt; &lt;code&gt;--interactive&lt;/code&gt; &lt;/a&gt; или file-at-a-time). Раньше было ограничение на первые два, но это ограничение снято.</target>
        </trans-unit>
        <trans-unit id="eff1de13128bcd2013c8040639470f88614a3c94" translate="yes" xml:space="preserve">
          <source>TemplateHaskell</source>
          <target state="translated">TemplateHaskell</target>
        </trans-unit>
        <trans-unit id="e2eaaaa85415bd784e73442f3556432b23b5f25d" translate="yes" xml:space="preserve">
          <source>TemplateHaskellQuotes</source>
          <target state="translated">TemplateHaskellQuotes</target>
        </trans-unit>
        <trans-unit id="c51a91a0b8b55080de83a8c4c22ec084a18dc465" translate="yes" xml:space="preserve">
          <source>Temporarily allocate space for the given number of elements (like &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="translated">Временно выделите пространство для заданного количества элементов (например, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt; , но для нескольких элементов).</target>
        </trans-unit>
        <trans-unit id="9904b71b142aff63e385635451d8015680bcbfa1" translate="yes" xml:space="preserve">
          <source>Temporarily allocate space for the given number of elements (like &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa2fa00cb424efa41a42f9a30ef6767085c8e77" translate="yes" xml:space="preserve">
          <source>Temporarily allocate space for the given number of elements (like &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="translated">Временно выделите пространство для заданного количества элементов (например, &lt;code&gt;&lt;a href=&quot;foreign-marshal-alloc#v:alloca&quot;&gt;alloca&lt;/a&gt;&lt;/code&gt; , но для нескольких элементов).</target>
        </trans-unit>
        <trans-unit id="d153213de595f2b0457842b1e89ecf37e5861427" translate="yes" xml:space="preserve">
          <source>Temporarily store a list of storable values in memory (like &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:with&quot;&gt;with&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="translated">Временно сохраните список сохраняемых значений в памяти (например, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-marshal-utils#v:with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; , но для нескольких элементов).</target>
        </trans-unit>
        <trans-unit id="747adc425badeb586a9ef48c932f50cbafbf55bd" translate="yes" xml:space="preserve">
          <source>Temporarily store a list of storable values in memory (like &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-marshal-utils#v:with&quot;&gt;with&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910480cf7ceec100a9b2c82c87ed4abd8a847b1f" translate="yes" xml:space="preserve">
          <source>Temporarily store a list of storable values in memory (like &lt;code&gt;&lt;a href=&quot;foreign-marshal-utils#v:with&quot;&gt;with&lt;/a&gt;&lt;/code&gt;, but for multiple elements).</source>
          <target state="translated">Временно сохраните список сохраняемых значений в памяти (например, &lt;code&gt;&lt;a href=&quot;foreign-marshal-utils#v:with&quot;&gt;with&lt;/a&gt;&lt;/code&gt; , но для нескольких элементов).</target>
        </trans-unit>
        <trans-unit id="951532b532d7745015bbec59ce7f15413c9aa665" translate="yes" xml:space="preserve">
          <source>Temporary bindings introduced at the prompt only last until the next &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt;&lt;code&gt;:reload&lt;/code&gt;&lt;/a&gt; command, at which time they will be simply lost. However, they do survive a change of context with &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt;: the temporary bindings just move to the new location.</source>
          <target state="translated">Временные привязки, введенные в командной строке, действуют только до следующей команды &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt; &lt;code&gt;:reload&lt;/code&gt; &lt;/a&gt; , после чего они будут просто потеряны. Однако они действительно переживают изменение контекста с &lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt; : временные привязки просто перемещаются в новое место.</target>
        </trans-unit>
        <trans-unit id="8e2754fc91f29834706af71cfa26258d56805769" translate="yes" xml:space="preserve">
          <source>Temporary files</source>
          <target state="translated">Временные файлы</target>
        </trans-unit>
        <trans-unit id="61dadf9304563410bab92330ef592c2024f65bc0" translate="yes" xml:space="preserve">
          <source>TermOutput</source>
          <target state="translated">TermOutput</target>
        </trans-unit>
        <trans-unit id="ea3bc4f028c31af0bf78ae8d2532320026163e9c" translate="yes" xml:space="preserve">
          <source>TermStr</source>
          <target state="translated">TermStr</target>
        </trans-unit>
        <trans-unit id="a1f52cdcb3f2bf91aa12082618f306714fbe6324" translate="yes" xml:space="preserve">
          <source>Terminal</source>
          <target state="translated">Terminal</target>
        </trans-unit>
        <trans-unit id="656752cc25cccadfaad5f1821bdf864540c6e0e9" translate="yes" xml:space="preserve">
          <source>Terminal attributes</source>
          <target state="translated">Терминальные атрибуты</target>
        </trans-unit>
        <trans-unit id="c74ce25f28d15f536a08e8a7aae17a8cd82fa296" translate="yes" xml:space="preserve">
          <source>Terminal dimensions</source>
          <target state="translated">Размеры терминала</target>
        </trans-unit>
        <trans-unit id="16006e478e8b7dad1a17b3808b498b74f603d953" translate="yes" xml:space="preserve">
          <source>Terminal operations</source>
          <target state="translated">Работа терминала</target>
        </trans-unit>
        <trans-unit id="8abbc9be81a91e1208c58253f1fdb1868684462a" translate="yes" xml:space="preserve">
          <source>Terminal operations (not portable: GHC only)</source>
          <target state="translated">Работа с терминалом (не портативный:только GHC)</target>
        </trans-unit>
        <trans-unit id="03e69355cb9e53e2cd49b81f2188ca3e9216ddfa" translate="yes" xml:space="preserve">
          <source>Terminal support</source>
          <target state="translated">Поддержка терминала</target>
        </trans-unit>
        <trans-unit id="4356c0a245abed0df475bf4fd2e4f9252ed9378c" translate="yes" xml:space="preserve">
          <source>TerminalAttributes</source>
          <target state="translated">TerminalAttributes</target>
        </trans-unit>
        <trans-unit id="48cf04933dc0932b897bc63f987d824ce367d66f" translate="yes" xml:space="preserve">
          <source>TerminalMode</source>
          <target state="translated">TerminalMode</target>
        </trans-unit>
        <trans-unit id="eeed32bdc9fc6804be1d50287fd767119a6e6a5c" translate="yes" xml:space="preserve">
          <source>TerminalState</source>
          <target state="translated">TerminalState</target>
        </trans-unit>
        <trans-unit id="60e3b2b4662f7f71b1278d8bd5f47d4ddfcd23fa" translate="yes" xml:space="preserve">
          <source>Terminating the program</source>
          <target state="translated">Завершение программы</target>
        </trans-unit>
        <trans-unit id="bf3badca71aac2c2189a5d1f128d3744ce4ba74d" translate="yes" xml:space="preserve">
          <source>Terminfo contains many string capabilities for special effects. For example, the &lt;code&gt;cuu1&lt;/code&gt; capability moves the cursor up one line; on ANSI terminals this is accomplished by printing the control sequence &lt;code&gt;&quot;\ESC[A&quot;&lt;/code&gt;. However, some older terminals also require &quot;padding&quot;, or short pauses, after certain commands. For example, when &lt;code&gt;TERM=vt100&lt;/code&gt; the &lt;code&gt;cuu1&lt;/code&gt; capability is &lt;code&gt;&quot;\ESC[A$&amp;lt;2&amp;gt;&quot;&lt;/code&gt;, which instructs terminfo to pause for two milliseconds after outputting the control sequence.</source>
          <target state="translated">Terminfo содержит множество строковых возможностей для специальных эффектов. Например, возможность &lt;code&gt;cuu1&lt;/code&gt; перемещает курсор на одну строку вверх; на терминалах ANSI это достигается путем печати управляющей последовательности &lt;code&gt;&quot;\ESC[A&quot;&lt;/code&gt; . Однако некоторые старые терминалы также требуют &quot;заполнения&quot; или коротких пауз после определенных команд. Например, когда &lt;code&gt;TERM=vt100&lt;/code&gt; &lt;code&gt;cuu1&lt;/code&gt; способность является &lt;code&gt;&quot;\ESC[A$&amp;lt;2&amp;gt;&quot;&lt;/code&gt; , который предписывает TERMINFO паузу в течение двух миллисекунд после вывода управляющей последовательности.</target>
        </trans-unit>
        <trans-unit id="5a1bfca651035bf564aa1981572b07bdf7c4afa0" translate="yes" xml:space="preserve">
          <source>Test for a non-representable type</source>
          <target state="translated">Тест на непрезентабельный тип</target>
        </trans-unit>
        <trans-unit id="e53f6246b72df3a6091a48b1550fd22b7e1ecb7b" translate="yes" xml:space="preserve">
          <source>Test for an algebraic type</source>
          <target state="translated">Тест на алгебраический тип</target>
        </trans-unit>
        <trans-unit id="6d642ca4244b8dfb74521331eba817e7a20071aa" translate="yes" xml:space="preserve">
          <source>Test for special 0-sized &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; representing underflows.</source>
          <target state="translated">Тест на наличие специального &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; размера 0, представляющего потери значимости.</target>
        </trans-unit>
        <trans-unit id="1d02aa099737fb0fe7c1625e39f58b89235df364" translate="yes" xml:space="preserve">
          <source>Test if &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; value is equal to zero.</source>
          <target state="translated">Проверьте, &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; ли значение BigNat нулю.</target>
        </trans-unit>
        <trans-unit id="95bb15347fba86c3b17001ad0a8b69992a876f4b" translate="yes" xml:space="preserve">
          <source>Test if &lt;em&gt;n&lt;/em&gt;-th bit is set.</source>
          <target state="translated">Проверить, установлен ли &lt;em&gt;n&lt;/em&gt; -й бит.</target>
        </trans-unit>
        <trans-unit id="292e850af715e74ed5bb5feffdf8cbf1885014a3" translate="yes" xml:space="preserve">
          <source>Test if a map obeys the balance invariants.</source>
          <target state="translated">Проверьте,повинуется ли карта инвариантам баланса.</target>
        </trans-unit>
        <trans-unit id="5a94265ab8733a209e426c94ee183c76717c01db" translate="yes" xml:space="preserve">
          <source>Test if each node of a map reports its size correctly.</source>
          <target state="translated">Проверьте,правильно ли сообщают размеры каждого узла карты.</target>
        </trans-unit>
        <trans-unit id="96936c8d777fcfcafb5eb9b7eb0d03ba6539a1a1" translate="yes" xml:space="preserve">
          <source>Test if the keys are ordered correctly.</source>
          <target state="translated">Проверьте,правильно ли заказаны ключи.</target>
        </trans-unit>
        <trans-unit id="d7e009b0c3f999ffcaef1173db81146aed8dee25" translate="yes" xml:space="preserve">
          <source>Test whether all input has been consumed, i.e. there are no remaining undecoded bytes.</source>
          <target state="translated">Проверьте,все ли входные данные были потреблены,т.е.нет ли оставшихся нераспознанных байтов.</target>
        </trans-unit>
        <trans-unit id="9925348510b47b2863e5ef1c82653a196c4b207d" translate="yes" xml:space="preserve">
          <source>Test whether all internal invariants are satisfied by &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt; value</source>
          <target state="translated">Проверить, удовлетворяются ли все внутренние инварианты значением &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:BigNat&quot;&gt;BigNat&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06cded3ffb44966c229aa0a84babdf0e8c0c2137" translate="yes" xml:space="preserve">
          <source>Test whether all internal invariants are satisfied by &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; value</source>
          <target state="translated">Проверить, удовлетворяются ли все внутренние инварианты &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; значением</target>
        </trans-unit>
        <trans-unit id="cca497a59c276e03e96debbd45d14f22a694b070" translate="yes" xml:space="preserve">
          <source>Test whether all internal invariants are satisfied by &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; value</source>
          <target state="translated">Проверить, удовлетворяются ли все внутренние инварианты &lt;code&gt;&lt;a href=&quot;ghc-natural#t:Natural&quot;&gt;Natural&lt;/a&gt;&lt;/code&gt; значением</target>
        </trans-unit>
        <trans-unit id="87dfc36f0f2fd749d5bd7ceb68abbb872b3a6ab1" translate="yes" xml:space="preserve">
          <source>Test whether the given path points to an existing filesystem object. If the user lacks necessary permissions to search the parent directories, this function may return false even if the file does actually exist.</source>
          <target state="translated">Проверьте,указывает ли заданный путь на существующий объект файловой системы.Если у пользователя отсутствуют необходимые права на поиск в родительских каталогах,эта функция может вернуть false,даже если файл действительно существует.</target>
        </trans-unit>
        <trans-unit id="618c6539f1506b1efcaa432cec593a3ec5e5b23d" translate="yes" xml:space="preserve">
          <source>Test whether the structure is empty.</source>
          <target state="translated">Проверьте,пустая ли структура.</target>
        </trans-unit>
        <trans-unit id="9ec504560faa4c177387ae484066374e0280ed4d" translate="yes" xml:space="preserve">
          <source>Test whether the structure is empty. The default implementation is optimized for structures that are similar to cons-lists, because there is no general way to do better.</source>
          <target state="translated">Проверьте,пустая ли структура.Реализация по умолчанию оптимизирована для структур,похожих на cons-листы,так как нет общего способа сделать лучше.</target>
        </trans-unit>
        <trans-unit id="9ffe4f99279c8b3a1a6045e3b220319bfa26e4d4" translate="yes" xml:space="preserve">
          <source>TestCoercion</source>
          <target state="translated">TestCoercion</target>
        </trans-unit>
        <trans-unit id="6baebd3bcf2faffa77a6af6d701aed3296ee682f" translate="yes" xml:space="preserve">
          <source>TestEquality</source>
          <target state="translated">TestEquality</target>
        </trans-unit>
        <trans-unit id="13305b14347347ab0b4ea787bc14cb2b6a7b2d6b" translate="yes" xml:space="preserve">
          <source>Testing a file descriptor</source>
          <target state="translated">Тестирование дескриптора файла</target>
        </trans-unit>
        <trans-unit id="c3328c39b0e29f78e9ff45db674248b1d245887d" translate="yes" xml:space="preserve">
          <source>Text</source>
          <target state="translated">Text</target>
        </trans-unit>
        <trans-unit id="28ca7dae3040931c19068173384884833a123118" translate="yes" xml:space="preserve">
          <source>Text attributes</source>
          <target state="translated">Текстовые атрибуты</target>
        </trans-unit>
        <trans-unit id="fbaed2b20b527facc4ca0f4514252eda74d458bd" translate="yes" xml:space="preserve">
          <source>Text codecs for I/O</source>
          <target state="translated">Текстовые кодеки для ввода/вывода</target>
        </trans-unit>
        <trans-unit id="24fe565b53a0883ce95a8e632e2283a1bc0c4892" translate="yes" xml:space="preserve">
          <source>Text formatting.</source>
          <target state="translated">Форматирование текста.</target>
        </trans-unit>
        <trans-unit id="c8677ef2e3f2a24ffc9cc25edf46d04be93e6e2d" translate="yes" xml:space="preserve">
          <source>Text input</source>
          <target state="translated">Ввод текста</target>
        </trans-unit>
        <trans-unit id="b0540832a654644f2f5c3a0970298868a5907146" translate="yes" xml:space="preserve">
          <source>Text input and output</source>
          <target state="translated">Ввод и вывод текста</target>
        </trans-unit>
        <trans-unit id="05a09f33e47e5c09ffcc367387ff34665b9cdd9d" translate="yes" xml:space="preserve">
          <source>Text manipulation functions represented as fusible operations over streams.</source>
          <target state="translated">Функции манипулирования текстом,представленные в виде плавких операций над потоками.</target>
        </trans-unit>
        <trans-unit id="722885d8d390e65ecfcdb41ec41ea3b9328037eb" translate="yes" xml:space="preserve">
          <source>Text output</source>
          <target state="translated">Текстовый вывод</target>
        </trans-unit>
        <trans-unit id="13943b8e4677c9da2e6203d1b329951861af4e3e" translate="yes" xml:space="preserve">
          <source>Text representing the offset of this timezone, such as &quot;-0800&quot; or &quot;+0400&quot; (like &lt;code&gt;%z&lt;/code&gt; in formatTime), with arbitrary padding.</source>
          <target state="translated">Текст, представляющий смещение этого часового пояса, например &amp;laquo;-0800&amp;raquo; или &amp;laquo;+0400&amp;raquo; (например, &lt;code&gt;%z&lt;/code&gt; в formatTime), с произвольным заполнением.</target>
        </trans-unit>
        <trans-unit id="852166d16456b6fa662df8fb149d236828c68e68" translate="yes" xml:space="preserve">
          <source>Text representing the offset of this timezone, such as &quot;-0800&quot; or &quot;+0400&quot; (like &lt;code&gt;%z&lt;/code&gt; in formatTime).</source>
          <target state="translated">Текст, представляющий смещение этого часового пояса, например &amp;laquo;-0800&amp;raquo; или &amp;laquo;+0400&amp;raquo; (например, &lt;code&gt;%z&lt;/code&gt; в formatTime).</target>
        </trans-unit>
        <trans-unit id="ed7ae1196ea4dde7920491b601f4301c95e1e9a5" translate="yes" xml:space="preserve">
          <source>Text to display when listing alternatives.</source>
          <target state="translated">Текст для отображения при перечислении альтернатив.</target>
        </trans-unit>
        <trans-unit id="11b672bb892b79d6582e0455b8fff6ee5ceb9ac5" translate="yes" xml:space="preserve">
          <source>Text to insert in line.</source>
          <target state="translated">Текст для вставки в строку.</target>
        </trans-unit>
        <trans-unit id="b3cddd25d1a3ba043388a9be9c805221e0702100" translate="yes" xml:space="preserve">
          <source>Text to search in (&lt;code&gt;haystack&lt;/code&gt;)</source>
          <target state="translated">Текст для поиска ( &lt;code&gt;haystack&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f4926373d9c800f5b51da1a7b6d5f3a2e217d0fb" translate="yes" xml:space="preserve">
          <source>Text.Parsec</source>
          <target state="translated">Text.Parsec</target>
        </trans-unit>
        <trans-unit id="4396c7c924e8d78705c74431cf54ec75db0c822f" translate="yes" xml:space="preserve">
          <source>Text.Parsec.ByteString</source>
          <target state="translated">Text.Parsec.ByteString</target>
        </trans-unit>
        <trans-unit id="5f5916c1c3b3ac72a76fc3edc051f943c1ed5cc5" translate="yes" xml:space="preserve">
          <source>Text.Parsec.ByteString.Lazy</source>
          <target state="translated">Text.Parsec.ByteString.Lazy</target>
        </trans-unit>
        <trans-unit id="5026a39135d437c0e3d50661263d3bddb505076d" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Char</source>
          <target state="translated">Text.Parsec.Char</target>
        </trans-unit>
        <trans-unit id="d79e1e5ccbab402519d7709b426069da0e1ba90e" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Combinator</source>
          <target state="translated">Text.Parsec.Combinator</target>
        </trans-unit>
        <trans-unit id="eaa3d89d72b1231b22ba03f0db4bdaf19d21fcb1" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Error</source>
          <target state="translated">Text.Parsec.Error</target>
        </trans-unit>
        <trans-unit id="111558045cf99bdede51fa1129966883ff24afd0" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Expr</source>
          <target state="translated">Text.Parsec.Expr</target>
        </trans-unit>
        <trans-unit id="a80b14e828d7ccebb142e616cfa44b68880cc27b" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Language</source>
          <target state="translated">Text.Parsec.Language</target>
        </trans-unit>
        <trans-unit id="6c69560acd89a3439e49df9a1a3254a8b3186128" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Perm</source>
          <target state="translated">Text.Parsec.Perm</target>
        </trans-unit>
        <trans-unit id="899a00a65f2d54739e5641e8688795990245109f" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Pos</source>
          <target state="translated">Text.Parsec.Pos</target>
        </trans-unit>
        <trans-unit id="7636f7cf5f4e8c88253662fac8c688523ac4d886" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Prim</source>
          <target state="translated">Text.Parsec.Prim</target>
        </trans-unit>
        <trans-unit id="29826c57fcb89761863c39eec9c5af8a6f5febad" translate="yes" xml:space="preserve">
          <source>Text.Parsec.String</source>
          <target state="translated">Text.Parsec.String</target>
        </trans-unit>
        <trans-unit id="3b836c92fbd7582025c709ff24c175d6e716ca73" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Text</source>
          <target state="translated">Text.Parsec.Text</target>
        </trans-unit>
        <trans-unit id="e90063f714a4da52e66a2df4dd86435908e09fa3" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Text.Lazy</source>
          <target state="translated">Text.Parsec.Text.Lazy</target>
        </trans-unit>
        <trans-unit id="6fe265f0e82179432eb9ade64e7861432f7d60af" translate="yes" xml:space="preserve">
          <source>Text.Parsec.Token</source>
          <target state="translated">Text.Parsec.Token</target>
        </trans-unit>
        <trans-unit id="f172b568000576f45d59679777ed7684132968eb" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec</source>
          <target state="translated">Text.ParserCombinators.Parsec</target>
        </trans-unit>
        <trans-unit id="10b214a4ec90242f725f97833fd7675f54a888a3" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Char</source>
          <target state="translated">Text.ParserCombinators.Parsec.Char</target>
        </trans-unit>
        <trans-unit id="79ef51731535d8527d907194e42ac5b111d4c5fe" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Combinator</source>
          <target state="translated">Text.ParserCombinators.Parsec.Combinator</target>
        </trans-unit>
        <trans-unit id="61d2e006fb97d64aea24f02c9e3c08ebb1a99396" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Error</source>
          <target state="translated">Text.ParserCombinators.Parsec.Error</target>
        </trans-unit>
        <trans-unit id="516a4fb2d75ecfa62ec407490b7bc7c2d044edf8" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Expr</source>
          <target state="translated">Text.ParserCombinators.Parsec.Expr</target>
        </trans-unit>
        <trans-unit id="5e6854330348d33d0af39d8fdc6812b41298e84f" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Language</source>
          <target state="translated">Text.ParserCombinators.Parsec.Language</target>
        </trans-unit>
        <trans-unit id="05c55b78874022b802d181ba4f2880cd161193cb" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Perm</source>
          <target state="translated">Text.ParserCombinators.Parsec.Perm</target>
        </trans-unit>
        <trans-unit id="23fb49ec2cfe90e1ed5d4c61ff69122ee664057b" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Pos</source>
          <target state="translated">Text.ParserCombinators.Parsec.Pos</target>
        </trans-unit>
        <trans-unit id="f235b5d7f1d368a293584919135e9009215e4195" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Prim</source>
          <target state="translated">Text.ParserCombinators.Parsec.Prim</target>
        </trans-unit>
        <trans-unit id="f3945aa5d3428a81bf8a3a610bbab3644b5df29a" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.Parsec.Token</source>
          <target state="translated">Text.ParserCombinators.Parsec.Token</target>
        </trans-unit>
        <trans-unit id="b77b2a992aaa4c5d69ac5d9df4c739fffdace5ec" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.ReadP</source>
          <target state="translated">Text.ParserCombinators.ReadP</target>
        </trans-unit>
        <trans-unit id="bd62cb34823dd96a921d926b9390b7652930d50d" translate="yes" xml:space="preserve">
          <source>Text.ParserCombinators.ReadPrec</source>
          <target state="translated">Text.ParserCombinators.ReadPrec</target>
        </trans-unit>
        <trans-unit id="841f953fb25d967de66bdc2bfa7b808a4902b9cc" translate="yes" xml:space="preserve">
          <source>Text.PrettyPrint.Annotated</source>
          <target state="translated">Text.PrettyPrint.Annotated</target>
        </trans-unit>
        <trans-unit id="933dae42a8460538e7deec160889c28236a5659e" translate="yes" xml:space="preserve">
          <source>Text.PrettyPrint.Annotated.HughesPJ</source>
          <target state="translated">Text.PrettyPrint.Annotated.HughesPJ</target>
        </trans-unit>
        <trans-unit id="6ba7533c729a21d883c35ea710a41810576fe3f9" translate="yes" xml:space="preserve">
          <source>Text.PrettyPrint.Annotated.HughesPJClass</source>
          <target state="translated">Text.PrettyPrint.Annotated.HughesPJClass</target>
        </trans-unit>
        <trans-unit id="75d296916408b85ed138aacae307021f81e9b105" translate="yes" xml:space="preserve">
          <source>Text.PrettyPrint.HughesPJ</source>
          <target state="translated">Text.PrettyPrint.HughesPJ</target>
        </trans-unit>
        <trans-unit id="070a1b0e3666fba02bf11cf21864f94454e18fee" translate="yes" xml:space="preserve">
          <source>Text.PrettyPrint.HughesPJClass</source>
          <target state="translated">Text.PrettyPrint.HughesPJClass</target>
        </trans-unit>
        <trans-unit id="852f9faf333892c8bfed010752077687bc710eb3" translate="yes" xml:space="preserve">
          <source>Text.Printf</source>
          <target state="translated">Text.Printf</target>
        </trans-unit>
        <trans-unit id="3e467eeda741670cee0544e799baf3bc68f8f6af" translate="yes" xml:space="preserve">
          <source>Text.Read</source>
          <target state="translated">Text.Read</target>
        </trans-unit>
        <trans-unit id="e7d2b433e6b1a5bfaf0e500258b53ab2699f6b40" translate="yes" xml:space="preserve">
          <source>Text.Read.Lex</source>
          <target state="translated">Text.Read.Lex</target>
        </trans-unit>
        <trans-unit id="82d6f31f8994e83ef79b1676df6acd06d40c0952" translate="yes" xml:space="preserve">
          <source>Text.Show</source>
          <target state="translated">Text.Show</target>
        </trans-unit>
        <trans-unit id="a8c2710c3553b8ef538c168f7f038d784360e352" translate="yes" xml:space="preserve">
          <source>Text.XHtml</source>
          <target state="translated">Text.XHtml</target>
        </trans-unit>
        <trans-unit id="1c794c577eeed3e827f3f4434b0b677541efc237" translate="yes" xml:space="preserve">
          <source>Text.XHtml.Frameset</source>
          <target state="translated">Text.XHtml.Frameset</target>
        </trans-unit>
        <trans-unit id="4e310429294785c3e4ed13f69b32d21e7e3c6e8a" translate="yes" xml:space="preserve">
          <source>Text.XHtml.Strict</source>
          <target state="translated">Text.XHtml.Strict</target>
        </trans-unit>
        <trans-unit id="eaaae80f3e09d76e5b52e5458697c3fd39663493" translate="yes" xml:space="preserve">
          <source>Text.XHtml.Table</source>
          <target state="translated">Text.XHtml.Table</target>
        </trans-unit>
        <trans-unit id="b60bd5c761b5c1a8480926f234df22b56fc27ec9" translate="yes" xml:space="preserve">
          <source>Text.XHtml.Transitional</source>
          <target state="translated">Text.XHtml.Transitional</target>
        </trans-unit>
        <trans-unit id="840c7e38544dbd613fa0b1f9a59f6f627ea3dd88" translate="yes" xml:space="preserve">
          <source>TextDecoder</source>
          <target state="translated">TextDecoder</target>
        </trans-unit>
        <trans-unit id="b1ec439dd8ac6da12ff0821c5bfa7393b4881faa" translate="yes" xml:space="preserve">
          <source>TextEncoder</source>
          <target state="translated">TextEncoder</target>
        </trans-unit>
        <trans-unit id="9195c9a1d76bd3421ac42c82a5d2ce786ab09b23" translate="yes" xml:space="preserve">
          <source>TextEncoding</source>
          <target state="translated">TextEncoding</target>
        </trans-unit>
        <trans-unit id="ef309892f2826f378147927737ca881b40420a37" translate="yes" xml:space="preserve">
          <source>Textual name of this user (pw_name)</source>
          <target state="translated">Текстовое имя этого пользователя (pw_name)</target>
        </trans-unit>
        <trans-unit id="45b3ae04eef9762e57f97f506e36c837398301fc" translate="yes" xml:space="preserve">
          <source>Textual source positions.</source>
          <target state="translated">Текстовые позиции источника.</target>
        </trans-unit>
        <trans-unit id="6a2ec719ddee27b8ee0018e15dcb0d3552659a4c" translate="yes" xml:space="preserve">
          <source>Th32SnapFlags</source>
          <target state="translated">Th32SnapFlags</target>
        </trans-unit>
        <trans-unit id="f1c71aeaa559503cb5c111582956f3709a70b40b" translate="yes" xml:space="preserve">
          <source>Th32SnapHandle</source>
          <target state="translated">Th32SnapHandle</target>
        </trans-unit>
        <trans-unit id="78e1c498231e4965c95cd3fcf27fb9a7f46b40a8" translate="yes" xml:space="preserve">
          <source>That being said, with the appropriate use of wrapper datatypes, the above limitations induce no loss of generality:</source>
          <target state="translated">При этом,при надлежащем использовании типов данных обертки,вышеуказанные ограничения не приводят к потере универсальности:</target>
        </trans-unit>
        <trans-unit id="58dcecccbdfb19a6c28d4e72b8694cf3a95079aa" translate="yes" xml:space="preserve">
          <source>That gives rise to a &lt;code&gt;(X [Bool] beta)&lt;/code&gt; constraint, and using the instance means we need &lt;code&gt;(D Bool beta)&lt;/code&gt; and that fixes &lt;code&gt;beta&lt;/code&gt; via &lt;code&gt;D&lt;/code&gt;&amp;lsquo;s fundep!</source>
          <target state="translated">Это приводит к &lt;code&gt;(X [Bool] beta)&lt;/code&gt; ограничение, и использование экземпляра означает необходимость &lt;code&gt;(D Bool beta)&lt;/code&gt; и который фиксирует &lt;code&gt;beta&lt;/code&gt; через &lt;code&gt;D&lt;/code&gt; fundep &amp;laquo;s!</target>
        </trans-unit>
        <trans-unit id="6a7f123da8ed9434c97040e703694b356a4d2399" translate="yes" xml:space="preserve">
          <source>That gives rise to a &lt;code&gt;(X [Bool] beta)&lt;/code&gt; constraint, and using the instance means we need &lt;code&gt;(D Bool beta)&lt;/code&gt; and that fixes &lt;code&gt;beta&lt;/code&gt; via &lt;code&gt;D&lt;/code&gt;&amp;rsquo;s fundep!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a29bc8dbb5ee0c4a1930b318abbbb60994a117" translate="yes" xml:space="preserve">
          <source>That is because we require an &lt;code&gt;Eq (Option a)&lt;/code&gt; instance from the default type signature for &lt;code&gt;(==#)&lt;/code&gt;, which in turn requires an &lt;code&gt;Eq a&lt;/code&gt; instance, which we don&amp;rsquo;t have in scope. But if you tweak the definition of &lt;code&gt;HigherEq&lt;/code&gt; slightly:</source>
          <target state="translated">Это потому, что нам нужен экземпляр &lt;code&gt;Eq (Option a)&lt;/code&gt; из сигнатуры типа по умолчанию для &lt;code&gt;(==#)&lt;/code&gt; , который, в свою очередь, требует экземпляра &lt;code&gt;Eq a&lt;/code&gt; , которого у нас нет в области видимости. Но если вы немного &lt;code&gt;HigherEq&lt;/code&gt; определение HigherEq :</target>
        </trans-unit>
        <trans-unit id="462366d2ca673f43337d58fb2f79b52eb40d828a" translate="yes" xml:space="preserve">
          <source>That is the same as the dynamic linking on other platforms, and it is described in &lt;a href=&quot;shared_libs#using-shared-libs&quot;&gt;Using shared libraries&lt;/a&gt;.</source>
          <target state="translated">Это то же самое, что и динамическое связывание на других платформах, и оно описано в разделе &lt;a href=&quot;shared_libs#using-shared-libs&quot;&gt;Использование общих библиотек&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5adb8f6d680643cb988e19cd9ebd95685b0e9084" translate="yes" xml:space="preserve">
          <source>That is, &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt;&lt;code&gt;DeriveFunctor&lt;/code&gt;&lt;/a&gt; pattern-matches its way into tuples and maps over each type that constitutes the tuple. The generated code is reminiscent of what would be generated from &lt;code&gt;data Triple a = Triple a Int [a]&lt;/code&gt;, except with extra machinery to handle the tuple.</source>
          <target state="translated">То есть шаблон &lt;a href=&quot;#extension-DeriveFunctor&quot;&gt; &lt;code&gt;DeriveFunctor&lt;/code&gt; &lt;/a&gt; сопоставляется с кортежами и сопоставляет каждый тип, составляющий кортеж. Сгенерированный код напоминает то, что было бы сгенерировано из &lt;code&gt;data Triple a = Triple a Int [a]&lt;/code&gt; , за исключением дополнительных механизмов для обработки кортежа.</target>
        </trans-unit>
        <trans-unit id="4a82aebf2ff4e63f82086bf2da9eae4d7a61ab25" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; parses the string produced by &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt;, and delivers the value that &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; started with.</source>
          <target state="translated">То есть &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; анализирует строку, &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; , и доставляет значение, с &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; запущена команда showsPrec .</target>
        </trans-unit>
        <trans-unit id="9e481507876f41c367fe06e578b12b78a4e7b1ac" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; parses the string produced by &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt;, and delivers the value that &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; started with.</source>
          <target state="translated">То есть &lt;code&gt;&lt;a href=&quot;prelude#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; анализирует строку, &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; , и доставляет значение, с &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; запущена команда showsPrec .</target>
        </trans-unit>
        <trans-unit id="49ebb42c3d6e117d12265da60c750a18218cde33" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; parses the string produced by &lt;code&gt;&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt;, and delivers the value that &lt;code&gt;&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; started with.</source>
          <target state="translated">То есть &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; анализирует строку, &lt;code&gt;&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; , и доставляет значение, с &lt;code&gt;&lt;a href=&quot;ghc-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; запущена команда showsPrec .</target>
        </trans-unit>
        <trans-unit id="924d09ba70f052db4b220a5f8dac59b3109fa413" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; parses the string produced by &lt;code&gt;&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt;, and delivers the value that &lt;code&gt;&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; started with.</source>
          <target state="translated">То есть &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; анализирует строку, &lt;code&gt;&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; , и доставляет значение, с &lt;code&gt;&lt;a href=&quot;prelude#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; запущена команда showsPrec .</target>
        </trans-unit>
        <trans-unit id="5981428896475a8992aaf356fb600c2886c3b975" translate="yes" xml:space="preserve">
          <source>That is, &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; parses the string produced by &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt;, and delivers the value that &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; started with.</source>
          <target state="translated">То есть &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; анализирует строку, &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; , и доставляет значение, с &lt;code&gt;&lt;a href=&quot;text-show#v:showsPrec&quot;&gt;showsPrec&lt;/a&gt;&lt;/code&gt; запущена команда showsPrec .</target>
        </trans-unit>
        <trans-unit id="a0d56a2fcb64d6ff47305c969e3cc186106c4d12" translate="yes" xml:space="preserve">
          <source>That is, a quoter is a tuple of four parsers, one for each of the contexts in which a quasi-quote can occur.</source>
          <target state="translated">То есть цитата-это кортеж из четырех парсеров,по одному для каждого из контекстов,в которых может происходить квазицитата.</target>
        </trans-unit>
        <trans-unit id="1ac21267c135501bf8d1d0d91f2b069a3782591d" translate="yes" xml:space="preserve">
          <source>That is, an &lt;code&gt;SPretty Foo&lt;/code&gt; instance will be created with empty implementations for all methods. Since we are using &lt;a href=&quot;#extension-DefaultSignatures&quot;&gt;&lt;code&gt;DefaultSignatures&lt;/code&gt;&lt;/a&gt; in this example, a default implementation of &lt;code&gt;sPpr&lt;/code&gt; is filled in automatically.</source>
          <target state="translated">То есть будет создан экземпляр &lt;code&gt;SPretty Foo&lt;/code&gt; с пустыми реализациями для всех методов. Поскольку в этом примере мы используем &lt;a href=&quot;#extension-DefaultSignatures&quot;&gt; &lt;code&gt;DefaultSignatures&lt;/code&gt; &lt;/a&gt; , реализация &lt;code&gt;sPpr&lt;/code&gt; по умолчанию заполняется автоматически.</target>
        </trans-unit>
        <trans-unit id="8b860dffaafb771638ee538e2b0ac1693cebe622" translate="yes" xml:space="preserve">
          <source>That is, since the type variable &lt;code&gt;a&lt;/code&gt; isn&amp;rsquo;t in scope, it&amp;rsquo;s implicitly universally quantified.</source>
          <target state="translated">То есть, поскольку переменная типа &lt;code&gt;a&lt;/code&gt; не входит в область видимости, она неявно универсально определяется количественно.</target>
        </trans-unit>
        <trans-unit id="d7a4e9e2c0f64dd1b628ca2224d1a3e388241d4f" translate="yes" xml:space="preserve">
          <source>That is, the &lt;code&gt;&lt;a href=&quot;data-binary#v:get&quot;&gt;get&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-binary#v:put&quot;&gt;put&lt;/a&gt;&lt;/code&gt; methods should be the inverse of each other. A range of instances are provided for basic Haskell types.</source>
          <target state="translated">То есть методы &lt;code&gt;&lt;a href=&quot;data-binary#v:get&quot;&gt;get&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-binary#v:put&quot;&gt;put&lt;/a&gt;&lt;/code&gt; должны быть противоположными друг другу. Для базовых типов Haskell предоставляется ряд экземпляров.</target>
        </trans-unit>
        <trans-unit id="2de858dbd3f42f7a78dc46a1d661e4c45116e634" translate="yes" xml:space="preserve">
          <source>That is, the operator must be a function of two arguments. GHC allows it to take only one argument, and that in turn allows you to write the function postfix.</source>
          <target state="translated">То есть оператор должен быть функцией двух аргументов.GHC позволяет ему принимать только один аргумент,а это,в свою очередь,позволяет написать постфикс функции.</target>
        </trans-unit>
        <trans-unit id="de2666094f8dd3b89fcecfae7a344b137b1c390e" translate="yes" xml:space="preserve">
          <source>That is, the scoping is the same as it would be if the curried arguments were collected into a tuple.</source>
          <target state="translated">Т.е.,диапазон измерений такой же,как и в случае,если бы аргументы с карри,собранные в кортеж,были бы собраны.</target>
        </trans-unit>
        <trans-unit id="a08280c0c335de4d817b47c060a3f4af660b030a" translate="yes" xml:space="preserve">
          <source>That is, to match a variable ⟨v⟩ against a pattern &lt;code&gt;(&lt;/code&gt; ⟨exp⟩ &lt;code&gt;-&amp;gt;&lt;/code&gt; ⟨pat⟩ &lt;code&gt;)&lt;/code&gt;, evaluate &lt;code&gt;(&lt;/code&gt; ⟨exp⟩ ⟨v⟩ &lt;code&gt;)&lt;/code&gt; and match the result against ⟨pat⟩.</source>
          <target state="translated">То есть, чтобы сопоставить переменную ⟨v⟩ с шаблоном &lt;code&gt;(&lt;/code&gt; ⟨exp⟩ &lt;code&gt;-&amp;gt;&lt;/code&gt; pat⟩ &lt;code&gt;)&lt;/code&gt; , оценить &lt;code&gt;(&lt;/code&gt; ⟨exp⟩ ⟨v⟩ &lt;code&gt;)&lt;/code&gt; и сопоставить результат с ⟨pat⟩.</target>
        </trans-unit>
        <trans-unit id="f81ae30760fa45f0027ed10944dbae9bf4a7947d" translate="yes" xml:space="preserve">
          <source>That is, we add a new form of pattern, written ⟨expression⟩ &lt;code&gt;-&amp;gt;&lt;/code&gt; ⟨pattern⟩ that means &amp;ldquo;apply the expression to whatever we&amp;rsquo;re trying to match against, and then match the result of that application against the pattern&amp;rdquo;. The expression can be any Haskell expression of function type, and view patterns can be used wherever patterns are used.</source>
          <target state="translated">То есть мы добавляем новую форму шаблона, записанную &amp;laquo;выражение&amp;raquo; &lt;code&gt;-&amp;gt;&lt;/code&gt; &amp;laquo; шаблон&amp;raquo;, что означает &amp;laquo;применить выражение ко всему, что мы пытаемся сопоставить, а затем сопоставить результат этого приложения с шаблоном&amp;raquo;. Выражение может быть любым выражением Haskell типа функции, и шаблоны представления могут использоваться везде, где используются шаблоны.</target>
        </trans-unit>
        <trans-unit id="e4472bb74389d304d179494e5f818bbd3e2091fe" translate="yes" xml:space="preserve">
          <source>That is, we represent every functional dependency (FD) &lt;code&gt;a1 .. an -&amp;gt; b&lt;/code&gt; by an FD type family &lt;code&gt;F a1 .. an&lt;/code&gt; and a superclass context equality &lt;code&gt;F a1 .. an ~ b&lt;/code&gt;, essentially giving a name to the functional dependency. In class instances, we define the type instances of FD families in accordance with the class head. Method signatures are not affected by that process.</source>
          <target state="translated">То есть мы представляем каждую функциональную зависимость (FD) &lt;code&gt;a1 .. an -&amp;gt; b&lt;/code&gt; семейством FD-типов &lt;code&gt;F a1 .. an&lt;/code&gt; и контекстным равенством суперкласса &lt;code&gt;F a1 .. an ~ b&lt;/code&gt; , по существу давая имя функциональной зависимости. В экземплярах классов мы определяем экземпляры типов семейств FD в соответствии с заголовком класса. Этот процесс не влияет на сигнатуры методов.</target>
        </trans-unit>
        <trans-unit id="087a1186066043015d53285a25aa834f074c4bb9" translate="yes" xml:space="preserve">
          <source>That last one deserves a special mention, however, since &lt;code&gt;a -&amp;gt; Int -&amp;gt; Int&lt;/code&gt; is a straightforward instantiation of &lt;code&gt;forall b. a -&amp;gt; b -&amp;gt; b&lt;/code&gt;. You can still write such a default type signature, but you now must use type equalities to do so:</source>
          <target state="translated">Последнее, однако, заслуживает особого упоминания, поскольку &lt;code&gt;a -&amp;gt; Int -&amp;gt; Int&lt;/code&gt; является прямым экземпляром &lt;code&gt;forall b. a -&amp;gt; b -&amp;gt; b&lt;/code&gt; . Вы все еще можете написать такую ​​сигнатуру типа по умолчанию, но теперь вы должны использовать для этого равенства типов:</target>
        </trans-unit>
        <trans-unit id="7aa747ff9513051d2f3e0f63c5ab4677db5c86d5" translate="yes" xml:space="preserve">
          <source>That leaves let expressions, whose translation is given in &lt;a href=&quot;http://www.haskell.org/onlinereport/exps.html#sect3.12&quot;&gt;Section 3.12&lt;/a&gt; of the Haskell Report. Replace the &amp;ldquo;Translation&amp;rdquo; there with the following one. Given &lt;code&gt;let { bind1 ... bindn } in body&lt;/code&gt;:</source>
          <target state="translated">Это оставляет выражения let, перевод которых приведен в &lt;a href=&quot;http://www.haskell.org/onlinereport/exps.html#sect3.12&quot;&gt;Разделе 3.12&lt;/a&gt; отчета Haskell. Замени там &amp;laquo;Перевод&amp;raquo; на следующий. Учитывая &lt;code&gt;let { bind1 ... bindn } in body&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9239200a2fcf1e520b700775bc66f764a197c669" translate="yes" xml:space="preserve">
          <source>That postpones the question of which instance to pick to the call site for &lt;code&gt;f&lt;/code&gt; by which time more is known about the type &lt;code&gt;b&lt;/code&gt;. You can write this type signature yourself if you use the &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt; extension.</source>
          <target state="translated">Это откладывает вопрос о том, какой экземпляр выбрать на сайт вызова для &lt;code&gt;f&lt;/code&gt; ,и к тому времени больше известно о типе &lt;code&gt;b&lt;/code&gt; . Вы можете написать сигнатуру этого типа самостоятельно, если используете расширение &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0af663474763fbec92b5233bfe0db021c376fce2" translate="yes" xml:space="preserve">
          <source>That would make no sense if the expression to the left of &lt;code&gt;-&amp;lt;&lt;/code&gt; involves the bound variable &lt;code&gt;x&lt;/code&gt;. More generally, the expression to the left of &lt;code&gt;-&amp;lt;&lt;/code&gt; may not involve any local variable, i.e. a variable bound in the current arrow abstraction. For such a situation there is a variant &lt;code&gt;-&amp;lt;&amp;lt;&lt;/code&gt;, as in</source>
          <target state="translated">Это не имело бы смысла, если бы выражение слева от &lt;code&gt;-&amp;lt;&lt;/code&gt; включает связанную переменную &lt;code&gt;x&lt;/code&gt; . В более общем смысле, выражение слева от &lt;code&gt;-&amp;lt;&lt;/code&gt; может не включать никаких локальных переменных, то есть переменных, связанных в текущей абстракции стрелки. Для такой ситуации есть вариант &lt;code&gt;-&amp;lt;&amp;lt;&lt;/code&gt; , как в</target>
        </trans-unit>
        <trans-unit id="8395997f12760883e7bd00deba567522fa0be628" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s all a little confusing, so here&amp;rsquo;s a few examples. To start with, here&amp;rsquo;s a new GHCi command which doesn&amp;rsquo;t take any arguments or produce any results, it just outputs the current date and time:</source>
          <target state="translated">Это все немного сбивает с толку, поэтому вот несколько примеров. Для начала, вот новая команда GHCi, которая не принимает никаких аргументов и не дает никаких результатов, она просто выводит текущую дату и время:</target>
        </trans-unit>
        <trans-unit id="3a5d327acf1cda84e99ba8c8418f8a6e3f1a6041" translate="yes" xml:space="preserve">
          <source>The &quot;%v&quot; specifier is provided for all built-in types, and should be provided for user-defined type formatters as well. It picks a &quot;best&quot; representation for the given type. For the built-in types the &quot;%v&quot; specifier is converted as follows:</source>
          <target state="translated">Спецификатор &quot;%v&quot; предусмотрен для всех встроенных типов,а также для пользовательских форматоров типов.Он выбирает &quot;лучшее&quot; представление для данного типа.Для встроенных типов спецификатор &quot;%v&quot; приводится следующим образом:</target>
        </trans-unit>
        <trans-unit id="307d8dbf7393ba19bad8b70f752ec95aa046ce44" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;By&lt;/code&gt;&quot; operations</source>
          <target state="translated">Операции &quot; &lt;code&gt;By&lt;/code&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="599928469bbf0c1871f851f1ade723c44533fb25" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;code&gt;generic&lt;/code&gt;&quot; operations</source>
          <target state="translated">&amp;laquo; &lt;code&gt;generic&lt;/code&gt; &amp;raquo; операции</target>
        </trans-unit>
        <trans-unit id="d6bed068edef8687960252343aec2dce4a6f9960" translate="yes" xml:space="preserve">
          <source>The &quot;alternate form&quot; for unsigned radix conversions is as in C &lt;code&gt;printf(3)&lt;/code&gt;:</source>
          <target state="translated">&amp;laquo;Альтернативная форма&amp;raquo; для преобразования системы счисления без знака такая же, как в C &lt;code&gt;printf(3)&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="594cda52526f7a4ced49e3f563eb6b3d2f24eeb4" translate="yes" xml:space="preserve">
          <source>The &quot;format parser&quot; walks over argument-type-specific modifier characters to find the primary format character. This is the type of its result.</source>
          <target state="translated">Форматный парсер&quot; проходит через символы модификаторов,специфичные для типа аргумента,чтобы найти символ первичного формата.Это тип его результата.</target>
        </trans-unit>
        <trans-unit id="7723ee8b77a369d6247096077763bfcd23d475ce" translate="yes" xml:space="preserve">
          <source>The &quot;live&quot; elements of the buffer are those between the &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufL&quot;&gt;bufL&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufR&quot;&gt;bufR&lt;/a&gt;&lt;/code&gt; offsets. In an empty buffer, &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufL&quot;&gt;bufL&lt;/a&gt;&lt;/code&gt; is equal to &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufR&quot;&gt;bufR&lt;/a&gt;&lt;/code&gt;, but they might not be zero: for example, the buffer might correspond to a memory-mapped file and in which case &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufL&quot;&gt;bufL&lt;/a&gt;&lt;/code&gt; will point to the next location to be written, which is not necessarily the beginning of the file.</source>
          <target state="translated">&amp;laquo;Живые&amp;raquo; элементы буфера находятся между смещениями &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufL&quot;&gt;bufL&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufR&quot;&gt;bufR&lt;/a&gt;&lt;/code&gt; . В пустом буфере &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufL&quot;&gt;bufL&lt;/a&gt;&lt;/code&gt; равен &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufR&quot;&gt;bufR&lt;/a&gt;&lt;/code&gt; , но они не могут быть равны нулю: например, буфер может соответствовать отображенному в память файлу, и в этом случае &lt;code&gt;&lt;a href=&quot;ghc-io-buffer#v:bufL&quot;&gt;bufL&lt;/a&gt;&lt;/code&gt; будет указывать на следующее место для записи, что не обязательно начало файла.</target>
        </trans-unit>
        <trans-unit id="2a8382d16990b13cd15a39a55ae784945d07894a" translate="yes" xml:space="preserve">
          <source>The &quot;normal&quot; (Level 0) of detail.</source>
          <target state="translated">Нормальный&quot; (уровень 0)детализация.</target>
        </trans-unit>
        <trans-unit id="667c18fb4c63293a30cf0ae6252784353ac2d4c3" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;&lt;code&gt;forall a&lt;/code&gt;&amp;rdquo; brings &amp;ldquo;&lt;code&gt;a&lt;/code&gt;&amp;rdquo; into scope in the definition of &amp;ldquo;&lt;code&gt;f&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">&amp;laquo; &lt;code&gt;forall a&lt;/code&gt; &amp;raquo; вводит &amp;laquo; &lt;code&gt;a&lt;/code&gt; &amp;raquo; в объем определения &amp;laquo; &lt;code&gt;f&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c6c6c6b0c9636ffbfcb145dd52b6cf329767257a" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;bytes allocated in the heap&amp;rdquo; is the total bytes allocated by the program over the whole run.</source>
          <target state="translated">&amp;laquo;Байты, выделенные в куче&amp;raquo; - это общее количество байтов, выделенных программой за весь прогон.</target>
        </trans-unit>
        <trans-unit id="584d620fa2734b6b5eaa0370f4dc4f644b3e240e" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;bytes maximum slop&amp;rdquo; tells you the most space that is ever wasted due to the way GHC allocates memory in blocks. Slop is memory at the end of a block that was wasted. There&amp;rsquo;s no way to control this; we just like to see how much memory is being lost this way.</source>
          <target state="translated">&amp;laquo;Максимальный интервал времени в байтах&amp;raquo; показывает наибольшее количество пространства, которое когда-либо было потрачено впустую из-за того, как GHC выделяет память блоками. Slop - это память в конце блока, который был потрачен впустую. Это невозможно контролировать; нам просто нравится видеть, сколько памяти теряется таким образом.</target>
        </trans-unit>
        <trans-unit id="45090aca257e8cf2e737992e0dab8be6af802dda" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;general principle&amp;rdquo; described here is meant to make all this more predictable for users. It would not be hard to extend GHC to relax this principle. If you should want a change here, consider writing a &lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/&quot;&gt;proposal&lt;/a&gt; to do so.</source>
          <target state="translated">Описанный здесь &amp;laquo;общий принцип&amp;raquo; призван сделать все это более предсказуемым для пользователей. Было бы нетрудно расширить GHC, чтобы ослабить этот принцип. Если вы хотите, чтобы здесь что-то изменилось, подумайте о написании соответствующего &lt;a href=&quot;https://github.com/ghc-proposals/ghc-proposals/&quot;&gt;предложения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4fef8e475f005ce6d6f926436263775847cc3803" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;i&amp;rdquo; stands for &amp;ldquo;Interactive&amp;rdquo;</source>
          <target state="translated">&amp;laquo;I&amp;raquo; означает &amp;laquo;интерактивный&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="fc84efa3e37fb0d48e7458b75c4700965bef870a" translate="yes" xml:space="preserve">
          <source>The &amp;ldquo;total memory in use&amp;rdquo; tells you the peak memory the RTS has allocated from the OS.</source>
          <target state="translated">&amp;laquo;Общий объем используемой памяти&amp;raquo; показывает пиковую память, выделенную системой RTS из ОС.</target>
        </trans-unit>
        <trans-unit id="eb3433e82abbee6557ae4932640c2d8da6b781db" translate="yes" xml:space="preserve">
          <source>The (mono)type: &lt;code&gt;tau&lt;/code&gt;</source>
          <target state="translated">Тип (моно): &lt;code&gt;tau&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60b26e67d917cc3a857c71a7f8b8990a2841e52f" translate="yes" xml:space="preserve">
          <source>The 0 pointer. Used to indicate the empty Bytestring.</source>
          <target state="translated">Указатель 0.Используется для указания пустого Байтстринга.</target>
        </trans-unit>
        <trans-unit id="b0f2110e66ee660be4c8c2f43b8e22fc7b2ac364" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-BlockArguments&quot;&gt;&lt;code&gt;BlockArguments&lt;/code&gt;&lt;/a&gt; extension allows these constructs to be directly used as a function argument. For example:</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-BlockArguments&quot;&gt; &lt;code&gt;BlockArguments&lt;/code&gt; &lt;/a&gt; позволяет напрямую использовать эти конструкции в качестве аргумента функции. Например:</target>
        </trans-unit>
        <trans-unit id="64bdb3d073f079d531b8a96572945cc8af7548ae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-BlockArguments&quot;&gt;&lt;code&gt;BlockArguments&lt;/code&gt;&lt;/a&gt; extension moves these production rules under &lt;code&gt;aexp&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6312d568cf2735ca75edec69b8ff484ecdbef9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-BlockArguments&quot;&gt;&lt;code&gt;BlockArguments&lt;/code&gt;&lt;/a&gt; extension moves these production rules under &lt;code&gt;aexp&lt;/code&gt;:</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-BlockArguments&quot;&gt; &lt;code&gt;BlockArguments&lt;/code&gt; &lt;/a&gt; перемещает эти производственные правила под &lt;code&gt;aexp&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="35c65f0dc74f4931d91c01fa9c6d3700981ddac7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-CPP&quot;&gt;&lt;code&gt;CPP&lt;/code&gt;&lt;/a&gt; language extension can also be enabled using the &lt;a href=&quot;glasgow_exts#language-pragma&quot;&gt;LANGUAGE&lt;/a&gt; pragma; For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9ce911311ab5062d718c76033a5381bcc759c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-CPP&quot;&gt;&lt;code&gt;CPP&lt;/code&gt;&lt;/a&gt; language extension enables the C pre-processor. This can be turned into a command-line flag by prefixing it with &lt;code&gt;-X&lt;/code&gt;; For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4cf567699873d6594767b8148b3283fe3e91e5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-EmptyCase&quot;&gt;&lt;code&gt;EmptyCase&lt;/code&gt;&lt;/a&gt; extension enables case expressions, or lambda-case expressions, that have no alternatives, thus:</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-EmptyCase&quot;&gt; &lt;code&gt;EmptyCase&lt;/code&gt; &lt;/a&gt; позволяет использовать выражения case или лямбда-выражения, которые не имеют альтернативы, таким образом:</target>
        </trans-unit>
        <trans-unit id="abbd0ecca5ae43844dd2d11341709a7cbf2688b3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-EmptyDataDeriving&quot;&gt;&lt;code&gt;EmptyDataDeriving&lt;/code&gt;&lt;/a&gt; flag is only required to enable deriving of these four &amp;ldquo;standard&amp;rdquo; type classes (which are mentioned in the Haskell Report). Other extensions to the &lt;code&gt;deriving&lt;/code&gt; mechanism, which are explained below in greater detail, do not require &lt;a href=&quot;#extension-EmptyDataDeriving&quot;&gt;&lt;code&gt;EmptyDataDeriving&lt;/code&gt;&lt;/a&gt; to be used in conjunction with empty data types. These include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012817880879ac3870d5610c6cda1f372d2afa1d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt;&lt;code&gt;ExplicitNamespaces&lt;/code&gt;&lt;/a&gt; extension allows you to prefix the name of a type constructor in an import or export list with &amp;ldquo;&lt;code&gt;type&lt;/code&gt;&amp;rdquo; to disambiguate this case, thus:</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-ExplicitNamespaces&quot;&gt; &lt;code&gt;ExplicitNamespaces&lt;/code&gt; &lt;/a&gt; позволяет вам добавлять к имени конструктора типа в списке импорта или экспорта префикс &amp;laquo; &lt;code&gt;type&lt;/code&gt; &amp;raquo;, чтобы устранить неоднозначность в этом случае, таким образом:</target>
        </trans-unit>
        <trans-unit id="5ba167f467ba97a573f10efce8b6b966cd314396" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt; extension lifts the Haskell 98 restriction that the type-class constraints in a type signature must have the form &lt;em&gt;(class type-variable)&lt;/em&gt; or &lt;em&gt;(class (type-variable type1 type2 &amp;hellip; typen))&lt;/em&gt;. With &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt; these type signatures are perfectly okay</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e42ac5c594dfd901f58792044e9a9041c4003be" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt; extension lifts the Haskell 98 restriction that the type-class constraints in a type signature must have the form &lt;em&gt;(class type-variable)&lt;/em&gt; or &lt;em&gt;(class (type-variable type1 type2 ... typen))&lt;/em&gt;. With &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt; these type signatures are perfectly okay</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; &lt;/a&gt; снимает ограничение Haskell 98, согласно которому ограничения типа-класса в сигнатуре типа должны иметь форму &lt;em&gt;(класс-переменная-тип)&lt;/em&gt; или &lt;em&gt;(класс (тип-переменная тип1 тип2 ... тип))&lt;/em&gt; . С &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; &lt;/a&gt; эти сигнатуры типов совершенно нормальны</target>
        </trans-unit>
        <trans-unit id="7a3b07e5c3b3f792ae9a2205da0ebe6f644dadb1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt; extension relaxes this rule, as well as relaxing the corresponding rule for type signatures (see &lt;a href=&quot;#flexible-contexts&quot;&gt;The context of a type signature&lt;/a&gt;). Specifically, &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt;, allows (well-kinded) class constraints of form &lt;code&gt;(C t1 ... tn)&lt;/code&gt; in the context of an instance declaration.</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; &lt;/a&gt; ослабляет это правило, а также ослабляет соответствующее правило для сигнатур типа (см &lt;a href=&quot;#flexible-contexts&quot;&gt;. Контекст сигнатуры типа&lt;/a&gt; ). В частности, &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; &lt;/a&gt; допускает (хорошо подобранные) ограничения класса формы &lt;code&gt;(C t1 ... tn)&lt;/code&gt; в контексте объявления экземпляра.</target>
        </trans-unit>
        <trans-unit id="0562613b8f75a0cd91d39da3210ac809ea1b3a19" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt; extension allows the head of the instance declaration to mention arbitrary nested types. For example, this becomes a legal instance declaration</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; &lt;/a&gt; позволяет заголовку объявления экземпляра упоминать произвольные вложенные типы. Например, это становится декларацией юридической инстанции.</target>
        </trans-unit>
        <trans-unit id="661ec8113ef99ccdd08a9cd1e3cdeaf21af63fa6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt; extension implies &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt;&lt;code&gt;TypeSynonymInstances&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; &lt;/a&gt; подразумевает &lt;a href=&quot;#extension-TypeSynonymInstances&quot;&gt; &lt;code&gt;TypeSynonymInstances&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bdcc91b25b9ed4cc5c0260c1f012c1a5f82d2927" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-LambdaCase&quot;&gt;&lt;code&gt;LambdaCase&lt;/code&gt;&lt;/a&gt; extension enables expressions of the form</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-LambdaCase&quot;&gt; &lt;code&gt;LambdaCase&lt;/code&gt; &lt;/a&gt; позволяет использовать выражения формы</target>
        </trans-unit>
        <trans-unit id="ae186343574b4460d96f7f83aeb4d511026cbbfd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-MagicHash&quot;&gt;&lt;code&gt;MagicHash&lt;/code&gt;&lt;/a&gt; also enables some new forms of literals (see &lt;a href=&quot;#glasgow-unboxed&quot;&gt;Unboxed types&lt;/a&gt;):</source>
          <target state="translated">&lt;a href=&quot;#extension-MagicHash&quot;&gt; &lt;code&gt;MagicHash&lt;/code&gt; &lt;/a&gt; также позволяет некоторые новые формы литералов (см &lt;a href=&quot;#glasgow-unboxed&quot;&gt;Unboxed типов&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="f156d0b8de4e1a07b993f716b37564cac76a1370" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-PostfixOperators&quot;&gt;&lt;code&gt;PostfixOperators&lt;/code&gt;&lt;/a&gt; extension enables a small extension to the syntax of left operator sections, which allows you to define postfix operators. The extension is this: the left section</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-PostfixOperators&quot;&gt; &lt;code&gt;PostfixOperators&lt;/code&gt; &lt;/a&gt; включает небольшое расширение синтаксиса секций левых операторов, которое позволяет вам определять постфиксные операторы. Расширение это: левая секция</target>
        </trans-unit>
        <trans-unit id="a89c98a9a3a672e6e0625684027419f38aef7f06" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-RankNTypes&quot;&gt;&lt;code&gt;RankNTypes&lt;/code&gt;&lt;/a&gt; option is also required for any type with a &lt;code&gt;forall&lt;/code&gt; or context to the right of an arrow (e.g. &lt;code&gt;f :: Int -&amp;gt; forall a. a-&amp;gt;a&lt;/code&gt;, or &lt;code&gt;g :: Int -&amp;gt; Ord a =&amp;gt; a -&amp;gt; a&lt;/code&gt;). Such types are technically rank 1, but are clearly not Haskell-98, and an extra extension did not seem worth the bother.</source>
          <target state="translated">Параметр &lt;a href=&quot;#extension-RankNTypes&quot;&gt; &lt;code&gt;RankNTypes&lt;/code&gt; &lt;/a&gt; также требуется для любого типа с &lt;code&gt;forall&lt;/code&gt; или контекстом справа от стрелки (например, &lt;code&gt;f :: Int -&amp;gt; forall a. a-&amp;gt;a&lt;/code&gt; или &lt;code&gt;g :: Int -&amp;gt; Ord a =&amp;gt; a -&amp;gt; a&lt;/code&gt; ). Такие типы технически имеют ранг 1, но явно не относятся к Haskell-98, и дополнительное расширение, похоже, не стоило хлопот.</target>
        </trans-unit>
        <trans-unit id="35fe223925e3329d9b396b0289c0f1edb80c5f64" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-TupleSections&quot;&gt;&lt;code&gt;TupleSections&lt;/code&gt;&lt;/a&gt; extension enables partially applied tuple constructors. For example, the following program</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-TupleSections&quot;&gt; &lt;code&gt;TupleSections&lt;/code&gt; &lt;/a&gt; позволяет использовать частично применяемые конструкторы кортежей. Например, следующая программа</target>
        </trans-unit>
        <trans-unit id="b17d31417452ac7082cc9ac3c80a11f860e37344" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-TypeApplications&quot;&gt;&lt;code&gt;TypeApplications&lt;/code&gt;&lt;/a&gt; extension allows you to use &lt;em&gt;visible type application&lt;/em&gt; in expressions. Here is an example: &lt;code&gt;show (read @Int &quot;5&quot;)&lt;/code&gt;. The &lt;code&gt;@Int&lt;/code&gt; is the visible type application; it specifies the value of the type variable in &lt;code&gt;read&lt;/code&gt;&amp;lsquo;s type.</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-TypeApplications&quot;&gt; &lt;code&gt;TypeApplications&lt;/code&gt; &lt;/a&gt; позволяет использовать &lt;em&gt;приложение видимого типа&lt;/em&gt; в выражениях. Вот пример: &lt;code&gt;show (read @Int &quot;5&quot;)&lt;/code&gt; . &lt;code&gt;@Int&lt;/code&gt; является применение видимым типа; он определяет значение переменной типа в типе &lt;code&gt;read&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="815a49f2870c920071d25b5de51faa8078cb6a12" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-TypeApplications&quot;&gt;&lt;code&gt;TypeApplications&lt;/code&gt;&lt;/a&gt; extension allows you to use &lt;em&gt;visible type application&lt;/em&gt; in expressions. Here is an example: &lt;code&gt;show (read @Int &quot;5&quot;)&lt;/code&gt;. The &lt;code&gt;@Int&lt;/code&gt; is the visible type application; it specifies the value of the type variable in &lt;code&gt;read&lt;/code&gt;&amp;rsquo;s type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ebe94937368bfa68f3a743d993e9e33b0ab16eb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt;&lt;code&gt;UndecidableInstances&lt;/code&gt;&lt;/a&gt; extension is also used to lift some of the restrictions imposed on type family instances. See &lt;a href=&quot;#type-family-decidability&quot;&gt;Decidability of type synonym instances&lt;/a&gt;.</source>
          <target state="translated">Расширение &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt; &lt;code&gt;UndecidableInstances&lt;/code&gt; &lt;/a&gt; также используется для снятия некоторых ограничений, накладываемых на экземпляры семейства типов. См. &lt;a href=&quot;#type-family-decidability&quot;&gt;Раздел &amp;laquo;Разрешимость экземпляров синонимов типа&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a40f430193c52ab9a3cf3f22af8fbf5bb4348a51" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--Wmissing-export-lists&quot;&gt;&lt;code&gt;-Wmissing-export-lists&lt;/code&gt;&lt;/a&gt; flag will warn that &lt;code&gt;M&lt;/code&gt; does not declare an export list. Declaring an explicit export list for &lt;code&gt;M&lt;/code&gt; enables GHC dead code analysis, prevents accidental export of names and can ease optimizations like inlining.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--Wmissing-export-lists&quot;&gt; &lt;code&gt;-Wmissing-export-lists&lt;/code&gt; &lt;/a&gt; флаг предупредит , что &lt;code&gt;M&lt;/code&gt; не объявляет список экспорта. Объявление явного списка экспорта для &lt;code&gt;M&lt;/code&gt; включает анализ мертвого кода GHC, предотвращает случайный экспорт имен и может упростить оптимизацию, такую ​​как встраивание.</target>
        </trans-unit>
        <trans-unit id="2a474ac6ba444d90bd68f49cf89271d299c2d550" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--Wmissing-import-lists&quot;&gt;&lt;code&gt;-Wmissing-import-lists&lt;/code&gt;&lt;/a&gt; flag will warn about the import of &lt;code&gt;Y&lt;/code&gt; but not &lt;code&gt;X&lt;/code&gt; If module &lt;code&gt;Y&lt;/code&gt; is later changed to export (say) &lt;code&gt;f&lt;/code&gt;, then the reference to &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;M&lt;/code&gt; will become ambiguous. No warning is produced for the import of &lt;code&gt;Z&lt;/code&gt; because extending &lt;code&gt;Z&lt;/code&gt;&amp;lsquo;s exports would be unlikely to produce ambiguity in &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--Wmissing-import-lists&quot;&gt; &lt;code&gt;-Wmissing-import-lists&lt;/code&gt; &lt;/a&gt; флаг предупредит об импорте &lt;code&gt;Y&lt;/code&gt; , но не &lt;code&gt;X&lt;/code&gt; Если модуль &lt;code&gt;Y&lt;/code&gt; позже изменен на экспорт (скажет) &lt;code&gt;f&lt;/code&gt; , то ссылка на &lt;code&gt;f&lt;/code&gt; в &lt;code&gt;M&lt;/code&gt; будет неоднозначной. Предупреждение не производятся для импорта &lt;code&gt;Z&lt;/code&gt; потому , проходящего &lt;code&gt;Z&lt;/code&gt; экспорта &amp;laquo;сек будет вряд ли приведет к неоднозначности в &lt;code&gt;M&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e9463d37bc7356ac89d64ece95dfb6664646492" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--Wmissing-import-lists&quot;&gt;&lt;code&gt;-Wmissing-import-lists&lt;/code&gt;&lt;/a&gt; flag will warn about the import of &lt;code&gt;Y&lt;/code&gt; but not &lt;code&gt;X&lt;/code&gt; If module &lt;code&gt;Y&lt;/code&gt; is later changed to export (say) &lt;code&gt;f&lt;/code&gt;, then the reference to &lt;code&gt;f&lt;/code&gt; in &lt;code&gt;M&lt;/code&gt; will become ambiguous. No warning is produced for the import of &lt;code&gt;Z&lt;/code&gt; because extending &lt;code&gt;Z&lt;/code&gt;&amp;rsquo;s exports would be unlikely to produce ambiguity in &lt;code&gt;M&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36bf4d5a27eab719495aba2d65180ff3cb627fe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--XEmptyDataDeriving&quot;&gt;&lt;code&gt;-XEmptyDataDeriving&lt;/code&gt;&lt;/a&gt; flag is only required to enable deriving of these four &amp;ldquo;standard&amp;rdquo; type classes (which are mentioned in the Haskell Report). Other extensions to the &lt;code&gt;deriving&lt;/code&gt; mechanism, which are explained below in greater detail, do not require &lt;a href=&quot;#ghc-flag--XEmptyDataDeriving&quot;&gt;&lt;code&gt;-XEmptyDataDeriving&lt;/code&gt;&lt;/a&gt; to be used in conjunction with empty data types. These include:</source>
          <target state="translated">&lt;a href=&quot;#ghc-flag--XEmptyDataDeriving&quot;&gt; &lt;code&gt;-XEmptyDataDeriving&lt;/code&gt; &lt;/a&gt; флаг требуется только для того, чтобы получения этих четырех &amp;laquo;стандартных&amp;raquo; классов типа (которые упоминаются в докладе Haskell). Другие расширения механизма &lt;code&gt;deriving&lt;/code&gt; , которые более подробно объясняются ниже, не требуют использования &lt;a href=&quot;#ghc-flag--XEmptyDataDeriving&quot;&gt; &lt;code&gt;-XEmptyDataDeriving&lt;/code&gt; &lt;/a&gt; вместе с пустыми типами данных. Это включает:</target>
        </trans-unit>
        <trans-unit id="db722c4293a180623ff6c051b1d85ff7e25c05ee" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--interactive-print%20%E2%9F%A8expr%E2%9F%A9&quot;&gt;&lt;code&gt;-interactive-print ⟨expr⟩&lt;/code&gt;&lt;/a&gt; flag allows to specify any function of type &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt;, for some constraint &lt;code&gt;C&lt;/code&gt;, as the function for printing evaluated expressions. The function can reside in any loaded module or any registered package, but only when it resides in a registered package will it survive a &lt;a href=&quot;#ghci-cmd-:cd&quot;&gt;&lt;code&gt;:cd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:add&quot;&gt;&lt;code&gt;:add&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt;&lt;code&gt;:reload&lt;/code&gt;&lt;/a&gt; or, &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В &lt;a href=&quot;#ghc-flag--interactive-print%20%E2%9F%A8expr%E2%9F%A9&quot;&gt; &lt;code&gt;-interactive-print ⟨expr⟩&lt;/code&gt; &lt;/a&gt; флаг позволяет задать любую функцию типа &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt; , для некоторого ограничения &lt;code&gt;C&lt;/code&gt; , как функция для печати вычисленных выражений. Функция может находиться в любом загруженном модуле или любого зарегистрированного пакета, но только тогда , когда он находится в зарегистрированном пакете будет выжить &lt;a href=&quot;#ghci-cmd-:cd&quot;&gt; &lt;code&gt;:cd&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:add&quot;&gt; &lt;code&gt;:add&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt; &lt;code&gt;:reload&lt;/code&gt; &lt;/a&gt; или, &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="630c44ffedd4dd17a812ef0191fcfe9f164168e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--interactive-print%20%E2%9F%A8expr%E2%9F%A9&quot;&gt;&lt;code&gt;-interactive-print ⟨expr⟩&lt;/code&gt;&lt;/a&gt; flag can also be used when running GHC in &lt;code&gt;-e mode&lt;/code&gt;:</source>
          <target state="translated">В &lt;a href=&quot;#ghc-flag--interactive-print%20%E2%9F%A8expr%E2%9F%A9&quot;&gt; &lt;code&gt;-interactive-print ⟨expr⟩&lt;/code&gt; &lt;/a&gt; флаг также может быть использован при работе GHC в &lt;code&gt;-e mode&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="78f35da957d4cd52b15e9fdc17483788082f1d5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--interactive-print%20%E2%9F%A8name%E2%9F%A9&quot;&gt;&lt;code&gt;-interactive-print ⟨name⟩&lt;/code&gt;&lt;/a&gt; flag allows to specify any function of type &lt;code&gt;C a =&amp;gt; a -&amp;gt; IO ()&lt;/code&gt;, for some constraint &lt;code&gt;C&lt;/code&gt;, as the function for printing evaluated expressions. The function can reside in any loaded module or any registered package, but only when it resides in a registered package will it survive a &lt;a href=&quot;#ghci-cmd-:cd&quot;&gt;&lt;code&gt;:cd&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:add&quot;&gt;&lt;code&gt;:add&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt;&lt;code&gt;:reload&lt;/code&gt;&lt;/a&gt; or, &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b2b57c36c8c1575a9d46ca71c9857aa94c645d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--interactive-print%20%E2%9F%A8name%E2%9F%A9&quot;&gt;&lt;code&gt;-interactive-print ⟨name⟩&lt;/code&gt;&lt;/a&gt; flag can also be used when running GHC in &lt;code&gt;-e mode&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ee5aa0e4404a66caea5cfa0e31661321a8a071" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghc-flag--v&quot;&gt;&lt;code&gt;-v&lt;/code&gt;&lt;/a&gt; option makes GHC &lt;em&gt;verbose&lt;/em&gt;: it reports its version number and shows (on stderr) exactly how it invokes each phase of the compilation system. Moreover, it passes the &lt;code&gt;-v&lt;/code&gt; flag to most phases; each reports its version number (and possibly some other information).</source>
          <target state="translated">Параметр &lt;a href=&quot;#ghc-flag--v&quot;&gt; &lt;code&gt;-v&lt;/code&gt; &lt;/a&gt; делает GHC &lt;em&gt;подробным&lt;/em&gt; : он сообщает номер своей версии и показывает (на stderr), как именно он вызывает каждую фазу системы компиляции. Более того, он передает флаг &lt;code&gt;-v&lt;/code&gt; большинству фаз; каждый сообщает номер своей версии (и, возможно, некоторую другую информацию).</target>
        </trans-unit>
        <trans-unit id="f2aaf666449f19ca504a747ac617450334ac0091" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:list&quot;&gt;&lt;code&gt;:list&lt;/code&gt;&lt;/a&gt; command is particularly useful when single-stepping, to see where you currently are:</source>
          <target state="translated">Команда &lt;a href=&quot;#ghci-cmd-:list&quot;&gt; &lt;code&gt;:list&lt;/code&gt; &lt;/a&gt; особенно полезна при пошаговом режиме, чтобы узнать, где вы сейчас находитесь:</target>
        </trans-unit>
        <trans-unit id="c742c2c7dca48891181fe9d4cdbd89257e05f404" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:list&quot;&gt;&lt;code&gt;:list&lt;/code&gt;&lt;/a&gt; command lists the source code around the current breakpoint. If your output device supports it, then GHCi will highlight the active subexpression in bold.</source>
          <target state="translated">Команда &lt;a href=&quot;#ghci-cmd-:list&quot;&gt; &lt;code&gt;:list&lt;/code&gt; &lt;/a&gt; перечисляет исходный код вокруг текущей точки останова. Если ваше устройство вывода поддерживает это, GHCi выделит активное подвыражение жирным шрифтом.</target>
        </trans-unit>
        <trans-unit id="207cb516d01051ef8920382f50ac703484da325f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:add&quot;&gt;&lt;code&gt;:add&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt;&lt;code&gt;:reload&lt;/code&gt;&lt;/a&gt; commands (&lt;a href=&quot;#ghci-load-scope&quot;&gt;The effect of :load on what is in scope&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:add&quot;&gt; &lt;code&gt;:add&lt;/code&gt; &lt;/a&gt; , и &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt; &lt;code&gt;:reload&lt;/code&gt; &lt;/a&gt; команды ( &lt;a href=&quot;#ghci-load-scope&quot;&gt;Эффект: нагрузки на то , что находится в области видимости&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8573f5c2fc7b5e00d88d28e04c98a9bc731777f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:load&quot;&gt;&lt;code&gt;:load&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:add&quot;&gt;&lt;code&gt;:add&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt;&lt;code&gt;:reload&lt;/code&gt;&lt;/a&gt; commands (&lt;a href=&quot;#loading-source-files&quot;&gt;Loading source files&lt;/a&gt; and &lt;a href=&quot;#ghci-compiled&quot;&gt;Loading compiled code&lt;/a&gt;) affect the top-level scope. Let&amp;rsquo;s start with the simple cases; when you start GHCi the prompt looks like this:</source>
          <target state="translated">&lt;a href=&quot;#ghci-cmd-:load&quot;&gt; &lt;code&gt;:load&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:add&quot;&gt; &lt;code&gt;:add&lt;/code&gt; &lt;/a&gt; , и &lt;a href=&quot;#ghci-cmd-:reload&quot;&gt; &lt;code&gt;:reload&lt;/code&gt; &lt;/a&gt; команда ( &lt;a href=&quot;#loading-source-files&quot;&gt;Загрузка исходных файлы&lt;/a&gt; и &lt;a href=&quot;#ghci-compiled&quot;&gt;загрузка скомпилированный код&lt;/a&gt; ) влияют на объем верхнего уровня. Начнем с простых случаев; когда вы запускаете GHCi, подсказка выглядит так:</target>
        </trans-unit>
        <trans-unit id="37bb2b0da32b33f4372a12f64ecdf95d300dbf99" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; command (&lt;a href=&quot;#ghci-module-cmd&quot;&gt;Controlling what is in scope with the :module command&lt;/a&gt;).</source>
          <target state="translated">Команда &lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;#ghci-module-cmd&quot;&gt;управление тем, что находится в области действия с помощью команды: module&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f54887dc2345c58aa577bced9bca30f40c4398ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:module&quot;&gt;&lt;code&gt;:module&lt;/code&gt;&lt;/a&gt; command provides a way to do two things that cannot be done with ordinary &lt;code&gt;import&lt;/code&gt; declarations:</source>
          <target state="translated">Команда &lt;a href=&quot;#ghci-cmd-:module&quot;&gt; &lt;code&gt;:module&lt;/code&gt; &lt;/a&gt; предоставляет способ делать две вещи, которые нельзя сделать с обычными объявлениями &lt;code&gt;import&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="18bed73a85898df39bbfb21bec72caa1d380f65e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; command modifies both, but there is also a &lt;a href=&quot;#ghci-cmd-:seti&quot;&gt;&lt;code&gt;:seti&lt;/code&gt;&lt;/a&gt; command (for &amp;ldquo;set interactive&amp;rdquo;) that affects only the interactive options set.</source>
          <target state="translated">Команда &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; изменяет и то, и другое, но есть также команда &lt;a href=&quot;#ghci-cmd-:seti&quot;&gt; &lt;code&gt;:seti&lt;/code&gt; &lt;/a&gt; (для &amp;laquo;установить интерактивный&amp;raquo;), которая влияет только на набор интерактивных параметров.</target>
        </trans-unit>
        <trans-unit id="93a4b5fbe24659bd6501066dacfcac63a656645a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; command sets two types of options: GHCi options, which begin with &amp;ldquo;&lt;code&gt;+&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;command-line&amp;rdquo; options, which begin with &amp;ldquo;&lt;code&gt;-&lt;/code&gt;&amp;ldquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a5d114307bab84d24ded440bb5e92a7d6743f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; command sets two types of options: GHCi options, which begin with &amp;ldquo;&lt;code&gt;+&lt;/code&gt;&amp;rdquo;, and &amp;ldquo;command-line&amp;rdquo; options, which begin with &amp;ldquo;&lt;code&gt;-&lt;/code&gt;&amp;rdquo;.</source>
          <target state="translated">Команда &lt;a href=&quot;#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; устанавливает два типа параметров: параметры GHCi, которые начинаются с &amp;laquo; &lt;code&gt;+&lt;/code&gt; &amp;raquo;, и параметры &amp;laquo;командной строки&amp;raquo;, которые начинаются с &amp;laquo; &lt;code&gt;-&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="994ae649374ddd00dcbdb0398a07b789d70d3ee6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:trace&quot;&gt;&lt;code&gt;:trace&lt;/code&gt;&lt;/a&gt; command can be used with or without an expression. When used without an expression, tracing begins from the current breakpoint, just like &lt;a href=&quot;#ghci-cmd-:step&quot;&gt;&lt;code&gt;:step&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Команду &lt;a href=&quot;#ghci-cmd-:trace&quot;&gt; &lt;code&gt;:trace&lt;/code&gt; &lt;/a&gt; можно использовать с выражением или без него. При использовании без выражения трассировка начинается с текущей точки останова, как &lt;a href=&quot;#ghci-cmd-:step&quot;&gt; &lt;code&gt;:step&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d895b0d326a117dc38216e64627bcf0b504cc040" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:type-at&quot;&gt;&lt;code&gt;:type-at&lt;/code&gt;&lt;/a&gt; command requires &lt;a href=&quot;#ghci-cmd-:set%20+c&quot;&gt;&lt;code&gt;:set +c&lt;/code&gt;&lt;/a&gt; to be set.</source>
          <target state="translated">Для команды &lt;a href=&quot;#ghci-cmd-:type-at&quot;&gt; &lt;code&gt;:type-at&lt;/code&gt; &lt;/a&gt; требуется &lt;a href=&quot;#ghci-cmd-:set%20+c&quot;&gt; &lt;code&gt;:set +c&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="199a238337750e7292c80d8483aa164b1180ba95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ghci-cmd-:uses&quot;&gt;&lt;code&gt;:uses&lt;/code&gt;&lt;/a&gt; command requires &lt;a href=&quot;#ghci-cmd-:set%20+c&quot;&gt;&lt;code&gt;:set +c&lt;/code&gt;&lt;/a&gt; to be set.</source>
          <target state="translated">Для команды &lt;a href=&quot;#ghci-cmd-:uses&quot;&gt; &lt;code&gt;:uses&lt;/code&gt; &lt;/a&gt; необходимо &lt;a href=&quot;#ghci-cmd-:set%20+c&quot;&gt; &lt;code&gt;:set +c&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa13aae9cfabe1538d35b3d45ac31cfcc6173609" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#pragma-INLINE&quot;&gt;&lt;code&gt;INLINE&lt;/code&gt;&lt;/a&gt; pragma has the additional effect of making the function body look small, so that when inlining is allowed it is very likely to happen.</source>
          <target state="translated">&lt;a href=&quot;#pragma-INLINE&quot;&gt; &lt;code&gt;INLINE&lt;/code&gt; &lt;/a&gt; прагма имеет дополнительный эффект : внешний вид тела функции мала, так что , когда встраивание разрешено это очень вероятно , произойдет.</target>
        </trans-unit>
        <trans-unit id="3f27181af99e9c0027aecbaabc8044d1c05e8049" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#pragma-NOINLINE&quot;&gt;&lt;code&gt;NOINLINE&lt;/code&gt;&lt;/a&gt; pragma does exactly what you&amp;rsquo;d expect: it stops the named function from being inlined by the compiler. You shouldn&amp;rsquo;t ever need to do this, unless you&amp;rsquo;re very cautious about code size.</source>
          <target state="translated">&lt;a href=&quot;#pragma-NOINLINE&quot;&gt; &lt;code&gt;NOINLINE&lt;/code&gt; &lt;/a&gt; Прагма делает именно то , что вы ожидали бы: он останавливает указанную функцию от того встраиваемого компилятора. В этом нет необходимости, если только вы не очень осторожны с размером кода.</target>
        </trans-unit>
        <trans-unit id="c1a5fffbed9c12afd5da25081d7fe2ae31e2b1e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#pragma-RULES&quot;&gt;&lt;code&gt;RULES&lt;/code&gt;&lt;/a&gt; pragma lets you specify rewrite rules. It is described in &lt;a href=&quot;#rewrite-rules&quot;&gt;Rewrite rules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#pragma-RULES&quot;&gt; &lt;code&gt;RULES&lt;/code&gt; &lt;/a&gt; Прагма позволяет определить правила перезаписи. Это описано в &lt;a href=&quot;#rewrite-rules&quot;&gt;правилах перезаписи&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bf0632a671131031d8937312a06897d2e45574c4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#rts-flag--F%20%E2%9F%A8factor%E2%9F%A9&quot;&gt;&lt;code&gt;-F ⟨factor⟩&lt;/code&gt;&lt;/a&gt; setting will be automatically reduced by the garbage collector when the maximum heap size (the &lt;a href=&quot;#rts-flag--M%20%E2%9F%A8size%E2%9F%A9&quot;&gt;&lt;code&gt;-M ⟨size⟩&lt;/code&gt;&lt;/a&gt; setting) is approaching.</source>
          <target state="translated">Параметр &lt;a href=&quot;#rts-flag--F%20%E2%9F%A8factor%E2%9F%A9&quot;&gt; &lt;code&gt;-F ⟨factor⟩&lt;/code&gt; &lt;/a&gt; будет автоматически уменьшен сборщиком мусора при приближении максимального размера кучи (параметр &lt;a href=&quot;#rts-flag--M%20%E2%9F%A8size%E2%9F%A9&quot;&gt; &lt;code&gt;-M ⟨size⟩&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e8b0c5124d5ea3dd22ec93a4e1efaee8762c585c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#rts-flag--P&quot;&gt;&lt;code&gt;-P&lt;/code&gt;&lt;/a&gt; option produces a more detailed report containing the actual time and allocation data as well. (Not used much.)</source>
          <target state="translated">Параметр &lt;a href=&quot;#rts-flag--P&quot;&gt; &lt;code&gt;-P&lt;/code&gt; &lt;/a&gt; создает более подробный отчет, содержащий фактическое время и данные о распределении. (Не очень много.)</target>
        </trans-unit>
        <trans-unit id="1bd683aedc043a933d9975ed15640d3bb66f7a3a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#rts-flag--p&quot;&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/a&gt; option produces a standard &lt;em&gt;time profile&lt;/em&gt; report. It is written into the file &lt;code&gt;&amp;lt;stem&amp;gt;.prof&lt;/code&gt;; the stem is taken to be the program name by default, but can be overridden by the &lt;a href=&quot;#rts-flag--po%20%E2%9F%A8stem%E2%9F%A9&quot;&gt;&lt;code&gt;-po
⟨stem⟩&lt;/code&gt;&lt;/a&gt; flag.</source>
          <target state="translated">Параметр &lt;a href=&quot;#rts-flag--p&quot;&gt; &lt;code&gt;-p&lt;/code&gt; &lt;/a&gt; создает стандартный отчет &lt;em&gt;временного профиля&lt;/em&gt; . &lt;code&gt;&amp;lt;stem&amp;gt;.prof&lt;/code&gt; в файл &amp;lt;stem&amp;gt; .prof ; по умолчанию в качестве основы используется имя программы, но его можно переопределить с &lt;a href=&quot;#rts-flag--po%20%E2%9F%A8stem%E2%9F%A9&quot;&gt; &lt;code&gt;-po ⟨stem⟩&lt;/code&gt; &lt;/a&gt; флага -po ⟨stem⟩ .</target>
        </trans-unit>
        <trans-unit id="6f811997f5e52254e16a04cd53e244ebe3b6c6f7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#rts-flag--pa&quot;&gt;&lt;code&gt;-pa&lt;/code&gt;&lt;/a&gt; option produces the most detailed report containing all cost centres in addition to the actual time and allocation data.</source>
          <target state="translated">Параметр &lt;a href=&quot;#rts-flag--pa&quot;&gt; &lt;code&gt;-pa&lt;/code&gt; &lt;/a&gt; создает наиболее подробный отчет, содержащий все центры затрат, а также данные о фактическом времени и распределении.</target>
        </trans-unit>
        <trans-unit id="7a84a3b7430c33f4f0db03022262f484fb7742f5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#rts-flag--pj&quot;&gt;&lt;code&gt;-pj&lt;/code&gt;&lt;/a&gt; option produces a time/allocation profile report in JSON format written into the file &lt;code&gt;&amp;lt;program&amp;gt;.prof&lt;/code&gt;.</source>
          <target state="translated">Параметр &lt;a href=&quot;#rts-flag--pj&quot;&gt; &lt;code&gt;-pj&lt;/code&gt; &lt;/a&gt; создает отчет о профиле времени / распределения в формате JSON, записанный в файл &lt;code&gt;&amp;lt;program&amp;gt;.prof&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49e571794c298f99f38543a85d7967e52fd97375" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#rts-flag--po%20%E2%9F%A8stem%E2%9F%A9&quot;&gt;&lt;code&gt;-po ⟨stem⟩&lt;/code&gt;&lt;/a&gt; option overrides the stem used to form the output file paths for the cost-centre profiler (see &lt;a href=&quot;#rts-flag--p&quot;&gt;&lt;code&gt;-p&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#rts-flag--pj&quot;&gt;&lt;code&gt;-pj&lt;/code&gt;&lt;/a&gt; flags above) and heap profiler (see &lt;a href=&quot;runtime_control#rts-flag--h&quot;&gt;&lt;code&gt;-h&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Параметр &lt;a href=&quot;#rts-flag--po%20%E2%9F%A8stem%E2%9F%A9&quot;&gt; &lt;code&gt;-po ⟨stem⟩&lt;/code&gt; &lt;/a&gt; переопределяет основу, используемую для формирования путей к выходным файлам для профилировщика центра затрат (см. Флаги &lt;a href=&quot;#rts-flag--p&quot;&gt; &lt;code&gt;-p&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#rts-flag--pj&quot;&gt; &lt;code&gt;-pj&lt;/code&gt; &lt;/a&gt; выше) и профилировщика кучи (см. &lt;a href=&quot;runtime_control#rts-flag--h&quot;&gt; &lt;code&gt;-h&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b5635087d38bc262bde4371eac4de7d97f976c29" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt; input functions (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:getLine&quot;&gt;getLine&lt;/a&gt;&lt;/code&gt;) don't automatically convert to Unicode, so this function is provided to make the conversion from a multibyte string in the given code page to a proper Unicode string. To get the code page for the console, use &lt;code&gt;&lt;a href=&quot;system-win32-encoding#v:getCurrentCodePage&quot;&gt;getCurrentCodePage&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функции ввода &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt; (например, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:getLine&quot;&gt;getLine&lt;/a&gt;&lt;/code&gt; ) не преобразуются автоматически в Unicode, поэтому эта функция предназначена для преобразования многобайтовой строки в данной кодовой странице в правильную строку Unicode. Чтобы получить кодовую страницу для консоли, используйте &lt;code&gt;&lt;a href=&quot;system-win32-encoding#v:getCurrentCodePage&quot;&gt;getCurrentCodePage&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9765ad4ea03f4950380592b31970ad8c5c5f3ec8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt; output functions (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:putStr&quot;&gt;putStr&lt;/a&gt;&lt;/code&gt;) don't automatically convert to multibyte string on Windows, so this function is provided to make the conversion from a Unicode string in the given code page to a proper multibyte string. To get the code page for the console, use &lt;code&gt;&lt;a href=&quot;system-win32-encoding#v:getCurrentCodePage&quot;&gt;getCurrentCodePage&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функции вывода &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt; (например, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#v:putStr&quot;&gt;putStr&lt;/a&gt;&lt;/code&gt; ) не преобразуются автоматически в многобайтовую строку в Windows, поэтому эта функция предназначена для преобразования строки Unicode в данной кодовой странице в правильную многобайтовую строку. Чтобы получить кодовую страницу для консоли, используйте &lt;code&gt;&lt;a href=&quot;system-win32-encoding#v:getCurrentCodePage&quot;&gt;getCurrentCodePage&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ce9122f50ea53be58cbd2cf028ecc8f4c1bc2e6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../base-4.14.1.0/system-io&quot;&gt;System.IO&lt;/a&gt; input functions (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:getLine&quot;&gt;getLine&lt;/a&gt;&lt;/code&gt;) don't automatically convert to Unicode, so this function is provided to make the conversion from a multibyte string in the given code page to a proper Unicode string. To get the code page for the console, use &lt;code&gt;&lt;a href=&quot;system-win32-encoding#v:getCurrentCodePage&quot;&gt;getCurrentCodePage&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcced739f4877615ca0b1d338f8fe3c56b49eea5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../base-4.14.1.0/system-io&quot;&gt;System.IO&lt;/a&gt; output functions (e.g. &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:putStr&quot;&gt;putStr&lt;/a&gt;&lt;/code&gt;) don't automatically convert to multibyte string on Windows, so this function is provided to make the conversion from a Unicode string in the given code page to a proper multibyte string. To get the code page for the console, use &lt;code&gt;&lt;a href=&quot;system-win32-encoding#v:getCurrentCodePage&quot;&gt;getCurrentCodePage&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b352da45baeb9202cb7df82ff50b474eca2ca6d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;codegens#llvm-code-gen&quot;&gt;LLVM code generator&lt;/a&gt; can sometimes do a far better job at producing fast code than the &lt;a href=&quot;codegens#native-code-gen&quot;&gt;native code generator&lt;/a&gt;. This is not universal and depends on the code. Numeric heavy code seems to show the best improvement when compiled via LLVM. You can also experiment with passing specific flags to LLVM with the &lt;code&gt;-optlo ⟨option⟩&lt;/code&gt; and &lt;code&gt;-optlc ⟨option⟩&lt;/code&gt; flags. Be careful though as setting these flags stops GHC from setting its usual flags for the LLVM optimiser and compiler.</source>
          <target state="translated">&lt;a href=&quot;codegens#llvm-code-gen&quot;&gt;Генератор LLVM кода&lt;/a&gt; иногда может сделать гораздо лучшую работу на производство быстрого кода , чем &lt;a href=&quot;codegens#native-code-gen&quot;&gt;родной генератор кода&lt;/a&gt; . Это не универсально и зависит от кода. Числовой тяжелый код, кажется, показывает лучшее улучшение при компиляции через LLVM. Вы также можете поэкспериментировать с передачей определенных флагов в LLVM с помощью &lt;code&gt;-optlo ⟨option⟩&lt;/code&gt; и &lt;code&gt;-optlc ⟨option⟩&lt;/code&gt; . Однако будьте осторожны, поскольку установка этих флагов не позволяет GHC устанавливать свои обычные флаги для оптимизатора и компилятора LLVM.</target>
        </trans-unit>
        <trans-unit id="25f2f2f377d7a4d9d4c30076fac395670f976ba5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ghc-err&quot;&gt;GHC.Err&lt;/a&gt; module defines the code for the wired-in error functions, which have a special type in the compiler (with &quot;open tyvars&quot;).</source>
          <target state="translated">Модуль &lt;a href=&quot;ghc-err&quot;&gt;GHC.Err&lt;/a&gt; определяет код для встроенных функций ошибок, которые имеют специальный тип в компиляторе (с &amp;laquo;открытыми тиварами&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="be2bac9dc3e1c4a106dab0bef04844b8cf103571" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;glasgow_exts#th-usage&quot;&gt;Template Haskell staging restrictions&lt;/a&gt; apply to the expression being annotated with, so for example you cannot run a function from the module being compiled.</source>
          <target state="translated">Эти &lt;a href=&quot;glasgow_exts#th-usage&quot;&gt;ограничения стадирования Template Haskell&lt;/a&gt; применяется к выражению аннотируемого с, так, например , вы не можете запустить функцию из модуля компилируются.</target>
        </trans-unit>
        <trans-unit id="7bcd2aebd16cff6eded9cdf9d7624bc94b45657f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://www.haskell.org/haskellwiki/Template_Haskell&quot;&gt;Template Haskell&lt;/a&gt; page on the GHC Wiki has a wealth of information. You may also consult the Haddock reference documentation &amp;lt;Language.Haskell.TH.&amp;gt;. Many changes to the original design are described in &lt;a href=&quot;https://www.haskell.org/ghc/docs/papers/th2.ps&quot;&gt;Notes on Template Haskell version 2&lt;/a&gt;. Not all of these changes are in GHC, however.</source>
          <target state="translated">Страница &lt;a href=&quot;http://www.haskell.org/haskellwiki/Template_Haskell&quot;&gt;Template Haskell&lt;/a&gt; в GHC Wiki содержит огромное количество информации. Вы также можете обратиться к справочной документации Haddock &amp;lt;Language.Haskell.TH.&amp;gt;. Многие изменения в исходном дизайне описаны в &lt;a href=&quot;https://www.haskell.org/ghc/docs/papers/th2.ps&quot;&gt;Примечаниях к Template Haskell версии 2&lt;/a&gt; . Однако не все эти изменения внесены в GHC.</target>
        </trans-unit>
        <trans-unit id="813ef8b7c698943925b858288d022656cbf4c0e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/ghc-compact-0.1.0.0/GHC-Compact.html&quot;&gt;GHC.Compact&lt;/a&gt; module provides a way to make garbage collection more efficient for long-lived data structures. Compacting a data structure collects the objects together in memory, where they are treated as a single object by the garbage collector and not traversed individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b007f5500c0bf2359ef4d7c48a45339585e270b2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-compact-0.1.0.0/GHC-Compact.html&quot;&gt;GHC.Compact&lt;/a&gt; module provides a way to make garbage collection more efficient for long-lived data structures. Compacting a data structure collects the objects together in memory, where they are treated as a single object by the garbage collector and not traversed individually.</source>
          <target state="translated">Модуль &lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/ghc-compact-0.1.0.0/GHC-Compact.html&quot;&gt;GHC.Compact&lt;/a&gt; позволяет сделать сборку мусора более эффективной для долгоживущих структур данных. При сжатии структуры данных объекты собираются вместе в памяти, где они обрабатываются сборщиком мусора как один объект и не обрабатываются по отдельности.</target>
        </trans-unit>
        <trans-unit id="096f364a4638bd5a30481fff7cf63dd60a75f2bb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;system-io&quot;&gt;System.IO&lt;/a&gt; library manages multiplexing in its own way. On Windows systems it uses &lt;code&gt;safe&lt;/code&gt; foreign calls to ensure that threads doing I/O operations don't block the whole runtime, whereas on Unix systems all the currently blocked I/O requests are managed by a single thread (the &lt;em&gt;IO manager thread&lt;/em&gt;) using a mechanism such as &lt;code&gt;epoll&lt;/code&gt; or &lt;code&gt;kqueue&lt;/code&gt;, depending on what is provided by the host operating system.</source>
          <target state="translated">Библиотека &lt;a href=&quot;system-io&quot;&gt;System.IO&lt;/a&gt; по-своему управляет мультиплексированием. В системах Windows он использует &lt;code&gt;safe&lt;/code&gt; внешние вызовы, чтобы гарантировать, что потоки, выполняющие операции ввода-вывода, не блокируют всю среду выполнения, тогда как в системах Unix все заблокированные в настоящее время запросы ввода-вывода управляются одним потоком ( &lt;em&gt;поток диспетчера ввода-вывода&lt;/em&gt; ) с использованием механизм, такой как &lt;code&gt;epoll&lt;/code&gt; или &lt;code&gt;kqueue&lt;/code&gt; , в зависимости от того, что предоставляется операционной системой хоста.</target>
        </trans-unit>
        <trans-unit id="ad73609e01e96153a93cfebddc86a915d6769a77" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;text-read&quot;&gt;Text.Read&lt;/a&gt; library is the canonical library to import for &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt;-class facilities. For GHC only, it offers an extended and much improved &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; class, which constitutes a proposed alternative to the Haskell 2010 &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt;. In particular, writing parsers is easier, and the parsers are much more efficient.</source>
          <target state="translated">Библиотека &lt;a href=&quot;text-read&quot;&gt;Text.Read&lt;/a&gt; - это каноническая библиотека для импорта для средств класса &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; . Только для GHC он предлагает расширенный и значительно улучшенный класс &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; , который представляет собой предлагаемую альтернативу Haskell 2010 &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; . В частности, писать парсеры проще, а парсеры намного эффективнее.</target>
        </trans-unit>
        <trans-unit id="6049bb328d08178d103c9076445b562b087834cb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;using-optimisation#ghc-flag--fno-state-hack&quot;&gt;&lt;code&gt;state hack&lt;/code&gt;&lt;/a&gt; optimization can result in non-obvious changes in evaluation ordering which may hide exceptions, even with &lt;a href=&quot;using-optimisation#ghc-flag--fpedantic-bottoms&quot;&gt;&lt;code&gt;-fpedantic-bottoms&lt;/code&gt;&lt;/a&gt; (see, e.g., &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/7411&quot;&gt;#7411&lt;/a&gt;). For instance,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bc8b6c64115e4a7c4698a00f5d0d1bc2ad89f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; operator adds the bound function into the continuation chain.</source>
          <target state="translated">Оператор &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; добавляет связанную функцию в цепочку продолжения.</target>
        </trans-unit>
        <trans-unit id="5c388ccd0a655842d446db681e2ea71ce5783acf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;'MetaSel&lt;/code&gt; type is also an instance of the type class &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Selector&quot;&gt;Selector&lt;/a&gt;&lt;/code&gt;, which can be used to obtain information about the field at the value level.</source>
          <target state="translated">Тип &lt;code&gt;'MetaSel&lt;/code&gt; также является экземпляром класса &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Selector&quot;&gt;Selector&lt;/a&gt;&lt;/code&gt; типа , который можно использовать для получения информации о поле на уровне значения.</target>
        </trans-unit>
        <trans-unit id="866373df1d7e4a2d96c88db426b8a4e214a580f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(C t1..tj)&lt;/code&gt; is a partial applications of the class &lt;code&gt;C&lt;/code&gt;, where the arity of &lt;code&gt;C&lt;/code&gt; is exactly &lt;code&gt;j+1&lt;/code&gt;. That is, &lt;code&gt;C&lt;/code&gt; lacks exactly one type argument.</source>
          <target state="translated">&lt;code&gt;(C t1..tj)&lt;/code&gt; представляет собой частичное применение класса &lt;code&gt;C&lt;/code&gt; , где арностью &lt;code&gt;C&lt;/code&gt; является точно &lt;code&gt;j+1&lt;/code&gt; . То есть в &lt;code&gt;C&lt;/code&gt; отсутствует ровно один аргумент типа.</target>
        </trans-unit>
        <trans-unit id="0e53d457109427ef5ddcdce2f9d16292b3ffd5e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt;-form is only available for modules which are interpreted; for compiled modules (including modules from packages) only the non-&lt;code&gt;*&lt;/code&gt; form of &lt;a href=&quot;#ghci-cmd-:browse&quot;&gt;&lt;code&gt;:browse&lt;/code&gt;&lt;/a&gt; is available.</source>
          <target state="translated">Форма &lt;code&gt;*&lt;/code&gt; доступна только для интерпретируемых модулей; для скомпилированных модулей (включая модули из пакетов) доступна только не- &lt;code&gt;*&lt;/code&gt; форма &lt;a href=&quot;#ghci-cmd-:browse&quot;&gt; &lt;code&gt;:browse&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b53e971ecc81a3e0c6bf1b64d28ddf52cdda1a1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-#include&lt;/code&gt; option is now deprecated, and the &lt;code&gt;include-files&lt;/code&gt; field in a Cabal package specification is ignored.</source>
          <target state="translated">Опция &lt;code&gt;-#include&lt;/code&gt; теперь устарела, а поле &lt;code&gt;include-files&lt;/code&gt; в спецификации пакета Cabal игнорируется.</target>
        </trans-unit>
        <trans-unit id="ab34545a3d0cf93b61e2311037778df3c80a23fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--numa&lt;/code&gt; flag is typically beneficial when a program is using all cores of a large multi-core NUMA system, with a large allocation area (&lt;code&gt;-A&lt;/code&gt;). All memory accesses to the allocation area will go to local memory, which can save a significant amount of remote memory access. A runtime speedup on the order of 10% is typical, but can vary a lot depending on the hardware and the memory behaviour of the program.</source>
          <target state="translated">&lt;code&gt;--numa&lt;/code&gt; флаг , как правило , полезно , когда программа использует все ядра большой многоядерной системы NUMA, с большой площадью распределения ( &lt;code&gt;-A&lt;/code&gt; ). Все обращения к памяти в области выделения будут осуществляться в локальную память, что может сэкономить значительный объем удаленного доступа к памяти. Ускорение времени выполнения порядка 10% является типичным, но может сильно варьироваться в зависимости от оборудования и поведения памяти программы.</target>
        </trans-unit>
        <trans-unit id="561f71da812b2bddee25afb3e6e2e25bcb2e2f87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--numa&lt;/code&gt; option tells the RTS to tune its memory usage to maximize local memory accesses. In particular, the RTS will:</source>
          <target state="translated">Параметр &lt;code&gt;--numa&lt;/code&gt; указывает RTS настроить использование памяти для максимального доступа к локальной памяти. В частности, РТС:</target>
        </trans-unit>
        <trans-unit id="82790760e32203fbe3b3708f08a40fb1f26d4abb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-O*&lt;/code&gt; options specify convenient &amp;ldquo;packages&amp;rdquo; of optimisation flags; the &lt;code&gt;-f*&lt;/code&gt; options described later on specify &lt;em&gt;individual&lt;/em&gt; optimisations to be turned on/off; the &lt;code&gt;-m*&lt;/code&gt; options specify &lt;em&gt;machine-specific&lt;/em&gt; optimisations to be turned on/off.</source>
          <target state="translated">&lt;code&gt;-O*&lt;/code&gt; опции задают удобные &amp;laquo;пакеты&amp;raquo; из флагов оптимизации; параметры &lt;code&gt;-f*&lt;/code&gt; , описанные ниже, определяют &lt;em&gt;отдельные&lt;/em&gt; оптимизации, которые нужно включить / выключить; параметры &lt;code&gt;-m*&lt;/code&gt; указывают включение / выключение оптимизации для &lt;em&gt;конкретной машины&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="00acee18a5b40f8ae0cd328101fb51b5648ea410" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-S&lt;/code&gt; flag, as well as giving the same output as the &lt;code&gt;-s&lt;/code&gt; flag, prints information about each GC as it happens:</source>
          <target state="translated">&lt;code&gt;-S&lt;/code&gt; флаг, а также дает тот же результат, что и &lt;code&gt;-s&lt;/code&gt; флаг, печатает информацию о каждом GC , как это происходит:</target>
        </trans-unit>
        <trans-unit id="5abe89944b59b5975a75aacf7b4842e37070b39c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-XMonadFailDesugaring&lt;/code&gt; extension switches the desugaring of &lt;code&gt;do&lt;/code&gt;-blocks to use &lt;code&gt;MonadFail.fail&lt;/code&gt; instead of &lt;code&gt;Monad.fail&lt;/code&gt;.</source>
          <target state="translated">Расширение &lt;code&gt;-XMonadFailDesugaring&lt;/code&gt; переключает деактивацию &lt;code&gt;do&lt;/code&gt; -blocks на использование &lt;code&gt;MonadFail.fail&lt;/code&gt; вместо &lt;code&gt;Monad.fail&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="97d0f469a862a380331313f906971c001e89be36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-fno-gen-manifest&lt;/code&gt; disables generation of the manifest file. One reason to do this would be if you had a manifest file of your own, for example.</source>
          <target state="translated">&lt;code&gt;-fno-gen-manifest&lt;/code&gt; отключает поколение файла манифеста. Одна из причин для этого может быть, например, если у вас есть собственный файл манифеста.</target>
        </trans-unit>
        <trans-unit id="f09316b31fc22fa8a933567bd8337abedb8c8a8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-hiesuf&lt;/code&gt; ⟨suffix⟩ will change the &lt;code&gt;.hie&lt;/code&gt; file suffix for extended interface files to whatever you specify.</source>
          <target state="translated">&lt;code&gt;-hiesuf&lt;/code&gt; ⟨suffix⟩ изменит &lt;code&gt;.hie&lt;/code&gt; суффикс файла для расширенных файлов интерфейса к тому , что вы укажете.</target>
        </trans-unit>
        <trans-unit id="181c112c9b1448494d00b3a0eb2345692c427713" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-hisuf&lt;/code&gt;/&lt;code&gt;-osuf&lt;/code&gt; game is particularly useful if you want to compile a program both with and without profiling, in the same directory. You can say:</source>
          <target state="translated">Игра &lt;code&gt;-hisuf&lt;/code&gt; / &lt;code&gt;-osuf&lt;/code&gt; особенно полезна, если вы хотите скомпилировать программу как с профилированием, так и без него, в одном каталоге. Ты можешь сказать:</target>
        </trans-unit>
        <trans-unit id="9cfd0028b8c4e48cc0b0a43a4c0d4e8fc3d08a43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-no-hs-main&lt;/code&gt; flag can also be used to persuade the compiler to do the link step in &lt;a href=&quot;using#ghc-flag---make&quot;&gt;&lt;code&gt;--make&lt;/code&gt;&lt;/a&gt; mode when there is no Haskell &lt;code&gt;Main&lt;/code&gt; module present (normally the compiler will not attempt linking when there is no &lt;code&gt;Main&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;-no-hs-main&lt;/code&gt; флаг может также использоваться , чтобы убедить компилятор , чтобы сделать шаг ссылки в &lt;a href=&quot;using#ghc-flag---make&quot;&gt; &lt;code&gt;--make&lt;/code&gt; &lt;/a&gt; режима , когда нет Haskell &lt;code&gt;Main&lt;/code&gt; модуля присутствует ( как правило , компилятор не будет пытаться связью , когда нет &lt;code&gt;Main&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="cfb7b69d0673862e9ddfa0a4b5f54819de95e5d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-osuf&lt;/code&gt; ⟨suffix⟩ will change the &lt;code&gt;.o&lt;/code&gt; file suffix for object files to whatever you specify. We use this when compiling libraries, so that objects for the profiling versions of the libraries don&amp;rsquo;t clobber the normal ones.</source>
          <target state="translated">&lt;code&gt;-osuf&lt;/code&gt; ⟨suffix⟩ изменит &lt;code&gt;.o&lt;/code&gt; суффикс файла для объектных файлов , что вы укажете. Мы используем это при компиляции библиотек, чтобы объекты для профилирующих версий библиотек не затирали обычные.</target>
        </trans-unit>
        <trans-unit id="58fc191cffb134d6d4bcb21e65f27ae26e638ff7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-outputdir&lt;/code&gt; option is shorthand for the combination of &lt;a href=&quot;#ghc-flag--odir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt;&lt;code&gt;-odir ⟨dir⟩&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghc-flag--hidir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt;&lt;code&gt;-hidir ⟨dir⟩&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghc-flag--stubdir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt;&lt;code&gt;-stubdir
⟨dir⟩&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#ghc-flag--dumpdir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt;&lt;code&gt;-dumpdir ⟨dir⟩&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Параметр &lt;code&gt;-outputdir&lt;/code&gt; является сокращением для комбинации &lt;a href=&quot;#ghc-flag--odir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt; &lt;code&gt;-odir ⟨dir⟩&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghc-flag--hidir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt; &lt;code&gt;-hidir ⟨dir⟩&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghc-flag--stubdir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt; &lt;code&gt;-stubdir ⟨dir⟩&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#ghc-flag--dumpdir%20%E2%9F%A8dir%E2%9F%A9&quot;&gt; &lt;code&gt;-dumpdir ⟨dir⟩&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ae93959276ca239dd5463c43ee8f6f822a7abcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-package ⟨pkg⟩&lt;/code&gt; option also causes package ⟨pkg⟩ to be linked into the resulting executable or shared object. Whether a packages&amp;rsquo; library is linked statically or dynamically is controlled by the flag pair &lt;a href=&quot;phases#ghc-flag--static&quot;&gt;&lt;code&gt;-static&lt;/code&gt;&lt;/a&gt;/ &lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt;&lt;code&gt;-dynamic&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Опция &lt;code&gt;-package ⟨pkg⟩&lt;/code&gt; также приводит к тому, что пакет &amp;laquo;pkg&amp;raquo; связывается с результирующим исполняемым или общим объектом. Независимо от того, связана ли библиотека пакетов статически или динамически, используется пара флагов &lt;a href=&quot;phases#ghc-flag--static&quot;&gt; &lt;code&gt;-static&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;phases#ghc-flag--dynamic&quot;&gt; &lt;code&gt;-dynamic&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="712c183f0262639bdefc67f670ef5786d9f9839d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-qn&lt;/code&gt; flag may be useful when running with a large &lt;code&gt;-A&lt;/code&gt; value (so that GC is infrequent), and a large &lt;code&gt;-N&lt;/code&gt; value (so as to make use of hyperthreaded cores, for example). For example, on a 24-core machine with 2 hyperthreads per core, we might use &lt;code&gt;-N48 -qn24 -A128m&lt;/code&gt; to specify that the mutator should use hyperthreads but the GC should only use real cores. Note that this configuration would use 6GB for the allocation area.</source>
          <target state="translated">&lt;code&gt;-qn&lt;/code&gt; флаг может быть полезно при работе с большим &lt;code&gt;-A&lt;/code&gt; значением (таким образом , что ГК является нечастым), и большим &lt;code&gt;-N&lt;/code&gt; значением (таким образом , чтобы использование hyperthreaded ядер, например). Например, на 24-ядерной машине с 2 гиперпотоками на ядро ​​мы можем использовать &lt;code&gt;-N48 -qn24 -A128m&lt;/code&gt; , чтобы указать, что мутатор должен использовать гиперпотоки, а сборщик мусора должен использовать только реальные ядра. Обратите внимание, что эта конфигурация будет использовать 6 ГБ для области распределения.</target>
        </trans-unit>
        <trans-unit id="b8f8cb8014da701a79e6b46cb3e225b86d226612" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;..&lt;/code&gt; is meant literally &amp;ndash; you should write two dots in your file. Note that the &lt;code&gt;where&lt;/code&gt; clause is still necessary to distinguish closed families from open ones. If you give any equations of a closed family, you must give all of them, in the same order as they appear in the accompanying Haskell file.</source>
          <target state="translated">Символ &lt;code&gt;..&lt;/code&gt; означает буквально - вы должны написать две точки в вашем файле. Обратите внимание, что предложение &lt;code&gt;where&lt;/code&gt; по-прежнему необходимо, чтобы отличать закрытые семейства от открытых. Если вы приводите какие-либо уравнения замкнутого семейства, вы должны указывать их все в том же порядке, в каком они указаны в прилагаемом файле Haskell.</target>
        </trans-unit>
        <trans-unit id="83164f5917a7372adba9f0624f17681c738f05e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;..&lt;/code&gt; is meant literally &amp;ndash; you should write two dots in your file. The &lt;code&gt;where&lt;/code&gt; clause distinguishes closed families from open ones.</source>
          <target state="translated">Символ &lt;code&gt;..&lt;/code&gt; означает буквально - вы должны написать две точки в вашем файле. Предложение &lt;code&gt;where&lt;/code&gt; отличает закрытые семейства от открытых.</target>
        </trans-unit>
        <trans-unit id="dcb0143d4440c731a3c677d373f63d932883b86d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.hp&lt;/code&gt; file is generated incrementally as your program runs. In principle, running &lt;strong&gt;hp2ps&lt;/strong&gt; on the incomplete file should produce a snapshot of your program&amp;rsquo;s heap usage. However, the last sample in the file may be incomplete, causing &lt;strong&gt;hp2ps&lt;/strong&gt; to fail. If you are using a machine with UNIX utilities installed, it&amp;rsquo;s not too hard to work around this problem (though the resulting command line looks rather Byzantine):</source>
          <target state="translated">&lt;code&gt;.hp&lt;/code&gt; файл создается постепенно , как ваши прогонов программы. В принципе, запуск &lt;strong&gt;hp2ps&lt;/strong&gt; для неполного файла должен создать моментальный снимок использования кучи вашей программы. Однако последний образец в файле может быть неполным, что &lt;strong&gt;приведет&lt;/strong&gt; к сбою &lt;strong&gt;hp2ps&lt;/strong&gt; . Если вы используете компьютер с установленными утилитами UNIX, эту проблему не так сложно решить (хотя итоговая командная строка выглядит скорее византийской):</target>
        </trans-unit>
        <trans-unit id="cc7ae67c0b8544a12cdcfe050a8d2d65b4d2d666" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:loc-at&lt;/code&gt; command requires &lt;a href=&quot;#ghci-cmd-:set%20+c&quot;&gt;&lt;code&gt;:set +c&lt;/code&gt;&lt;/a&gt; to be set.</source>
          <target state="translated">Для команды &lt;code&gt;:loc-at&lt;/code&gt; требуется &lt;a href=&quot;#ghci-cmd-:set%20+c&quot;&gt; &lt;code&gt;:set +c&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="868acbe7a67a816021798517632096beabaa53fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; methods &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-60--42-&quot;&gt;&amp;lt;*&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; методах &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#v:-60--42-&quot;&gt;&amp;lt;*&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="245cbed390fbb3e5caa7e31d436f7995b13c904c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics are included because they are valid. However, they are inefficient in many cases and should usually be avoided. The instances for &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactics should not pose any major efficiency problems.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; экземпляры для &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; тактики включена , потому что они являются действительными. Однако во многих случаях они неэффективны, и их обычно следует избегать. Экземпляры для тактики &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; не должны создавать серьезных проблем с эффективностью.</target>
        </trans-unit>
        <trans-unit id="642ea10a7ef999e759dd2a8003076f1bb542bca1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics are included because they are valid. However, they are inefficient in many cases and should usually be avoided. The instances for &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactics should not pose any major efficiency problems.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; экземпляры для &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; тактики включена , потому что они являются действительными. Однако во многих случаях они неэффективны, и их обычно следует избегать. Экземпляры для тактики &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; не должны создавать серьезных проблем с эффективностью.</target>
        </trans-unit>
        <trans-unit id="a07f81de1f86161a74a26e3f56178d074bbb9cb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics are included because they are valid. However, they are inefficient in many cases and should usually be avoided. The instances for &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactics should not pose any major efficiency problems.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; экземпляры для &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; тактики включена , потому что они являются действительными. Однако во многих случаях они неэффективны, и их обычно следует избегать. Экземпляры для тактики &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; не должны создавать серьезных проблем с эффективностью.</target>
        </trans-unit>
        <trans-unit id="2d902fab64461e51ee2d74548c6c487fbabdaebf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics are included because they are valid. However, they are inefficient in many cases and should usually be avoided. The instances for &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactics should not pose any major efficiency problems.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; экземпляры для &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; тактики включена , потому что они являются действительными. Однако во многих случаях они неэффективны, и их обычно следует избегать. Экземпляры для тактики &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; не должны создавать серьезных проблем с эффективностью.</target>
        </trans-unit>
        <trans-unit id="3c17f4dbd13e6f82990bc913e1553422faf7c0d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function ignores the environment, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; passes the inherited environment to both subcomputations.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; игнорирует среду, а &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; передает унаследованную среду обоим подвычислениям.</target>
        </trans-unit>
        <trans-unit id="51a96013d171e823610e883b0dcca6ee8756149e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function leaves the state unchanged, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; uses the final state of the first computation as the initial state of the second.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; оставляет состояние неизменным, а &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; использует конечное состояние первого вычисления как начальное состояние второго.</target>
        </trans-unit>
        <trans-unit id="d443b950974bb112ab951f3d2eeff5624ca7c870" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function produces the output &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt;, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; combines the outputs of the subcomputations using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; производит &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; , а &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; объединяет выходные данные подвычислений с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; mappend .</target>
        </trans-unit>
        <trans-unit id="a5978bf75b4f58ddc37c3dcfcb955a35e4410f24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function produces the output &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt;, while &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; combines the outputs of the subcomputations using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; производит &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; , а &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; объединяет выходные данные подвычислений с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; mappend .</target>
        </trans-unit>
        <trans-unit id="eefac33165054643d0f820e7473410a1e3ca417e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function returns a normal value, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; exits on the first exception. For a variant that continues after an error and collects all the errors, see &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-applicative-lift#v:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; возвращает нормальное значение, а &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; завершает работу при первом исключении. Для варианта, который продолжается после ошибки и собирает все ошибки, см. &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-applicative-lift#v:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="197b7d8676ceb906c4004a1522862a02b89f5e72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function returns a normal value, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; exits on the first exception. For a variant that continues after an error and collects all the errors, see &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; возвращает нормальное значение, а &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; завершает работу при первом исключении. Для варианта, который продолжается после ошибки и собирает все ошибки, см. &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e2a2bef52e7aaec2926a366a49ef4ff7f5dc015" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function yields a computation that produces that value, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; sequences two subcomputations, exiting if either computation does.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; дает вычисление, которое производит это значение, в то время как &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; последовательно выполняет два подвычисления, завершаясь, если выполняется какое-либо из вычислений.</target>
        </trans-unit>
        <trans-unit id="a772099ec423a1c20cd2f57c2352719bbfc68ad0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function yields a computation that produces the given value, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; sequences two subcomputations, exiting on the first exception.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; дает вычисление, которое дает заданное значение, а &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; последовательно выполняет два подвычисления, выходя из первого исключения.</target>
        </trans-unit>
        <trans-unit id="0c02e3b1c74fff6be8fd138b7b81638f5520f137" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function yields a successful computation, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; sequences two subcomputations, failing on the first error.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; дает успешное вычисление, в то время как &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; последовательно выполняет два подсчета, завершаясь неудачей при первой ошибке.</target>
        </trans-unit>
        <trans-unit id="591c2084b78ba16832d7264b63d440c1c164a1fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; methods &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt;, along with &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; методы &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt; , наряду с &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7fd5d1becb199aae7fcf8f5cddb1b46323f94938" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; is used for the same purposes as the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; экземпляр для &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; используется для тех же целей, что и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; , например.</target>
        </trans-unit>
        <trans-unit id="b9caf64cdefb09c64255eb7f22c88a16a5fc1ad7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; is used for the same purposes as the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; экземпляр для &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; используется для тех же целей, что и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; , например.</target>
        </trans-unit>
        <trans-unit id="d633291de962b83e64a4f5366d8780f130fabd29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; type supports about 16 decimal places of accuracy. For 94.2% of numbers, this function and &lt;code&gt;&lt;a href=&quot;data-text-lazy-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt; give identical results, but for the remaining 5.8%, this function loses precision around the 15th decimal place. For 0.001% of numbers, this function will lose precision at the 13th or 14th decimal place.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; поддерживает около 16 десятичных знаков точности. Для 94,2% чисел эта функция и &lt;code&gt;&lt;a href=&quot;data-text-lazy-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt; дают одинаковые результаты, но для остальных 5,8% эта функция теряет точность около 15-го десятичного знака. Для 0,001% чисел эта функция потеряет точность до 13-го или 14-го десятичного знака.</target>
        </trans-unit>
        <trans-unit id="d703712be7881bd93cfd2bc01dfee32118d427e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; type supports about 16 decimal places of accuracy. For 94.2% of numbers, this function and &lt;code&gt;&lt;a href=&quot;data-text-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt; give identical results, but for the remaining 5.8%, this function loses precision around the 15th decimal place. For 0.001% of numbers, this function will lose precision at the 13th or 14th decimal place.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; поддерживает около 16 десятичных знаков точности. Для 94,2% чисел эта функция и &lt;code&gt;&lt;a href=&quot;data-text-read#v:rational&quot;&gt;rational&lt;/a&gt;&lt;/code&gt; дают одинаковые результаты, но для остальных 5,8% эта функция теряет точность около 15-го десятичного знака. Для 0,001% чисел эта функция потеряет точность до 13-го или 14-го десятичного знака.</target>
        </trans-unit>
        <trans-unit id="f8c0ff807ccff9eb26062cb229ca77b0ed057850" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; is used to append the result of several parsers, for example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; экземпляр для &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; используются для добавления результата нескольких анализаторов, например:</target>
        </trans-unit>
        <trans-unit id="9c784a6d7ab10d7763556a008a4766e1b2eda4a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; is used to append the result of several parsers, for example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; экземпляр для &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; используются для добавления результата нескольких анализаторов, например:</target>
        </trans-unit>
        <trans-unit id="8d81a3f4c85b4191151075e8c67e5bf6b30eb413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; operation for &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt;, which prefers values from the left operand. If &lt;code&gt;m1&lt;/code&gt; maps a key &lt;code&gt;k&lt;/code&gt; to a value &lt;code&gt;a1&lt;/code&gt;, and &lt;code&gt;m2&lt;/code&gt; maps the same key to a different value &lt;code&gt;a2&lt;/code&gt;, then their union &lt;code&gt;m1 &amp;lt;&amp;gt; m2&lt;/code&gt; maps &lt;code&gt;k&lt;/code&gt; to &lt;code&gt;a1&lt;/code&gt;.</source>
          <target state="translated">Операция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; - это &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; , который предпочитает значения из левого операнда. Если &lt;code&gt;m1&lt;/code&gt; отображает ключ &lt;code&gt;k&lt;/code&gt; в значение &lt;code&gt;a1&lt;/code&gt; , а &lt;code&gt;m2&lt;/code&gt; отображает тот же ключ в другое значение &lt;code&gt;a2&lt;/code&gt; , то их объединение &lt;code&gt;m1 &amp;lt;&amp;gt; m2&lt;/code&gt; отображает &lt;code&gt;k&lt;/code&gt; в &lt;code&gt;a1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="886078b2aaab08d590ba45d81857ef8f5563600b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; operation for &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-map-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt;, which prefers values from the left operand. If &lt;code&gt;m1&lt;/code&gt; maps a key &lt;code&gt;k&lt;/code&gt; to a value &lt;code&gt;a1&lt;/code&gt;, and &lt;code&gt;m2&lt;/code&gt; maps the same key to a different value &lt;code&gt;a2&lt;/code&gt;, then their union &lt;code&gt;m1 &amp;lt;&amp;gt; m2&lt;/code&gt; maps &lt;code&gt;k&lt;/code&gt; to &lt;code&gt;a1&lt;/code&gt;.</source>
          <target state="translated">Операция &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; - это &lt;code&gt;&lt;a href=&quot;data-map-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; , который предпочитает значения из левого операнда. Если &lt;code&gt;m1&lt;/code&gt; отображает ключ &lt;code&gt;k&lt;/code&gt; в значение &lt;code&gt;a1&lt;/code&gt; , а &lt;code&gt;m2&lt;/code&gt; отображает тот же ключ в другое значение &lt;code&gt;a2&lt;/code&gt; , то их объединение &lt;code&gt;m1 &amp;lt;&amp;gt; m2&lt;/code&gt; отображает &lt;code&gt;k&lt;/code&gt; в &lt;code&gt;a1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="519517bb832149c99d7d65f9e38c30f74e55d8c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; argument names the executable, and is interpreted according to the platform's standard policy for searching for executables. Specifically:</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io#t:FilePath&quot;&gt;FilePath&lt;/a&gt;&lt;/code&gt; имена аргументов исполняемого файла, и интерпретируется в соответствии со стандартной политикой платформы для поиска исполняемых файлов. В частности:</target>
        </trans-unit>
        <trans-unit id="9c0ad1ae490321b15fc5c17f80550d3243babef6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt; methods &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:-60--42--62-&quot;&gt;&amp;lt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:-42--62-&quot;&gt;*&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#v:-60--42-&quot;&gt;&amp;lt;*&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dece6bc59608b974325c5124d02a6f75ef4c62d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics are included because they are valid. However, they are inefficient in many cases and should usually be avoided. The instances for &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactics should not pose any major efficiency problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a9c0b4e24f513886a0fe3de6f9f53dadcdf0d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics are included because they are valid. However, they are inefficient in many cases and should usually be avoided. The instances for &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactics should not pose any major efficiency problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc09e39326ac463b521633cc81f1ec225a8a20d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics are included because they are valid. However, they are inefficient in many cases and should usually be avoided. The instances for &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactics should not pose any major efficiency problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68eed02a9714eb35cf81751d72df7caa308a61f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-category#v:Category&quot;&gt;Category&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-applicative#t:Applicative&quot;&gt;Applicative&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instances for &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMissing&quot;&gt;WhenMissing&lt;/a&gt;&lt;/code&gt; tactics are included because they are valid. However, they are inefficient in many cases and should usually be avoided. The instances for &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#t:WhenMatched&quot;&gt;WhenMatched&lt;/a&gt;&lt;/code&gt; tactics should not pose any major efficiency problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2da1b81116404bb6e8b43cb3a0637a688bb46e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function ignores the environment, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; passes the inherited environment to both subcomputations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260fcde2dc8277fbba23a670e261449948424309" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function leaves the state unchanged, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; uses the final state of the first computation as the initial state of the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6d56b3f6d2c5e6f40ede452ae79b597fe5912c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function produces the output &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt;, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; combines the outputs of the subcomputations using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0f713409cb9cf5a1a1a5c72fd485b5db43eb31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function produces the output &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt;, while &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; combines the outputs of the subcomputations using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de8acf7cc9bc186692daa7881912af0fc23a852" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function returns a normal value, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; exits on the first exception. For a variant that continues after an error and collects all the errors, see &lt;code&gt;&lt;a href=&quot;../transformers-0.5.6.2/control-applicative-lift#v:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1706a86dea612dae3883f17c7ddf1ff83583e970" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function returns a normal value, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; exits on the first exception. For a variant that continues after an error and collects all the errors, see &lt;code&gt;&lt;a href=&quot;control-applicative-lift#v:Errors&quot;&gt;Errors&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56aecaa933008307756b2efe20503802422650bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function yields a computation that produces that value, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; sequences two subcomputations, exiting if either computation does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc201c4c6a6bfd3a1b5af7fbb6792cb6cd39609" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function yields a computation that produces the given value, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; sequences two subcomputations, exiting on the first exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d623297a7b53d6225cb0faf61fb94fa727435ae3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad#v:return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; function yields a successful computation, while &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; sequences two subcomputations, failing on the first error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ee7b9be2c0feeeaeb3c31adf4da82d6f854ddf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; methods &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:-60--36-&quot;&gt;&amp;lt;$&lt;/a&gt;&lt;/code&gt;, along with &lt;code&gt;&lt;a href=&quot;data-sequence#v:mapWithIndex&quot;&gt;mapWithIndex&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b5bc40c86fffa7a6076174b1bffbac140f29df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; is used for the same purposes as the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95780e47c020eeeda31a8c201eb535a8974578f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; is used for the same purposes as the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acb16e4a1657fdc3b4413dfd0838f6380ef5ab8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;text-parsec#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; is used to append the result of several parsers, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9de1cc1416c3082400d8b6dfbf1289ad2cbe6d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;text-parsec-prim#t:ParsecT&quot;&gt;ParsecT&lt;/a&gt;&lt;/code&gt; is used to append the result of several parsers, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d955c1b4b45545a54049a0a44af93865745803be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; operation for &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-map-lazy#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt;, which prefers values from the left operand. If &lt;code&gt;m1&lt;/code&gt; maps a key &lt;code&gt;k&lt;/code&gt; to a value &lt;code&gt;a1&lt;/code&gt;, and &lt;code&gt;m2&lt;/code&gt; maps the same key to a different value &lt;code&gt;a2&lt;/code&gt;, then their union &lt;code&gt;m1 &amp;lt;&amp;gt; m2&lt;/code&gt; maps &lt;code&gt;k&lt;/code&gt; to &lt;code&gt;a1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e8a62dc2c0577ea2e4fa388d91268432827035" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; operation for &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-map-strict#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt;, which prefers values from the left operand. If &lt;code&gt;m1&lt;/code&gt; maps a key &lt;code&gt;k&lt;/code&gt; to a value &lt;code&gt;a1&lt;/code&gt;, and &lt;code&gt;m2&lt;/code&gt; maps the same key to a different value &lt;code&gt;a2&lt;/code&gt;, then their union &lt;code&gt;m1 &amp;lt;&amp;gt; m2&lt;/code&gt; maps &lt;code&gt;k&lt;/code&gt; to &lt;code&gt;a1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ec1a27d9645ead49a8fac70722d498afadafab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-applicative#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; functor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-applicative#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; функтор.</target>
        </trans-unit>
        <trans-unit id="404d7369c3ed5cd7574fad867737a14afb444a12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowApply&quot;&gt;ArrowApply&lt;/a&gt;&lt;/code&gt; class is equivalent to &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt;: any monad gives rise to a &lt;code&gt;&lt;a href=&quot;control-arrow#t:Kleisli&quot;&gt;Kleisli&lt;/a&gt;&lt;/code&gt; arrow, and any instance of &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowApply&quot;&gt;ArrowApply&lt;/a&gt;&lt;/code&gt; defines a monad.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowApply&quot;&gt;ArrowApply&lt;/a&gt;&lt;/code&gt; эквивалентен &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; : любая монада порождает стрелку &lt;code&gt;&lt;a href=&quot;control-arrow#t:Kleisli&quot;&gt;Kleisli&lt;/a&gt;&lt;/code&gt; , а любой экземпляр &lt;code&gt;&lt;a href=&quot;control-arrow#t:ArrowApply&quot;&gt;ArrowApply&lt;/a&gt;&lt;/code&gt; определяет монаду.</target>
        </trans-unit>
        <trans-unit id="712abe7e2f78e39742519eb3d9a6b4a2f4ce365d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-arrow#v:loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; operator expresses computations in which an output value is fed back as input, although the computation occurs only once. It underlies the &lt;code&gt;rec&lt;/code&gt; value recursion construct in arrow notation. &lt;code&gt;&lt;a href=&quot;control-arrow#v:loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; should satisfy the following laws:</source>
          <target state="translated">Оператор &lt;code&gt;&lt;a href=&quot;control-arrow#v:loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; выражает вычисления, в которых выходное значение возвращается как входное, хотя вычисление происходит только один раз. Он лежит в основе конструкции рекурсии значения &lt;code&gt;rec&lt;/code&gt; в виде стрелок. &lt;code&gt;&lt;a href=&quot;control-arrow#v:loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; должна удовлетворять следующим законам:</target>
        </trans-unit>
        <trans-unit id="4d5ea08c77b20ca5949edb787e87c9bfc18d424c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-concurrent#v:yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; action allows (forces, in a co-operative multitasking implementation) a context-switch to any other currently runnable threads (if any), and is occasionally useful when implementing concurrency abstractions.</source>
          <target state="translated">Действие &lt;code&gt;&lt;a href=&quot;control-concurrent#v:yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; позволяет (принудительно в реализации совместной многозадачности) переключать контекст на любые другие выполняемые в данный момент потоки (если они есть) и иногда полезно при реализации абстракций параллелизма.</target>
        </trans-unit>
        <trans-unit id="2aecf2fbfb3505dad21f83e912f2781f57633420" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; classes, with some useful operations on monads.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;control-monad#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;control-monad#t:MonadPlus&quot;&gt;MonadPlus&lt;/a&gt;&lt;/code&gt; классы, с некоторыми полезными операциями на монады.</target>
        </trans-unit>
        <trans-unit id="e42cbe3850d6befefe426ee80a44a4c35d7e57b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class defines the basic operations over a &lt;em&gt;monad&lt;/em&gt;, a concept from a branch of mathematics known as &lt;em&gt;category theory&lt;/em&gt;. From the perspective of a Haskell programmer, however, it is best to think of a monad as an &lt;em&gt;abstract datatype&lt;/em&gt; of actions. Haskell's &lt;code&gt;do&lt;/code&gt; expressions provide a convenient syntax for writing monadic expressions.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; определяет основные операции над &lt;em&gt;монадой&lt;/em&gt; - концепцию из раздела математики, известного как &lt;em&gt;теория категорий&lt;/em&gt; . Однако с точки зрения программиста на Haskell лучше всего рассматривать монаду как &lt;em&gt;абстрактный тип данных&lt;/em&gt; действий. Выражения &lt;code&gt;do&lt;/code&gt; в Haskell обеспечивают удобный синтаксис для написания монадических выражений.</target>
        </trans-unit>
        <trans-unit id="4fc32a4cddc34ade233961b4012b777dbb17097e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; allows us to chain together multiple actions which may fail, and fail overall if any of the individual steps failed. First we'll write a function that can either parse an &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; from a &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt;, or fail.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; экземпляр для &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; позволяет связать между собой несколькими действиями , которые могут потерпеть неудачу, и не в целом , если какие - либо из отдельных шагов , не удалось. Сначала мы напишем функцию, которая может либо разбирать &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;&lt;a href=&quot;data-char#t:Char&quot;&gt;Char&lt;/a&gt;&lt;/code&gt; , либо терпеть неудачу.</target>
        </trans-unit>
        <trans-unit id="841e7fb83df459d53e389056b37c0fc15cd60e41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; operations are not strict in the state. For example,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; операции не являются строгими в государстве. Например,</target>
        </trans-unit>
        <trans-unit id="8492deac48ede758cea8f52bc65fb3e2f9ba2826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; operations are strict in the state (though not in values stored in the state). For example,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62--61-&quot;&gt;&amp;gt;&amp;gt;=&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;control-monad#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;&lt;/code&gt; операции строго в состоянии (хотя и не в значениях , хранящихся в состоянии). Например,</target>
        </trans-unit>
        <trans-unit id="27d5a6c8ea1acb5010f2c9679c264fd5c989ebdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#v:foldM&quot;&gt;foldM&lt;/a&gt;&lt;/code&gt; function is analogous to &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;, except that its result is encapsulated in a monad. Note that &lt;code&gt;&lt;a href=&quot;control-monad#v:foldM&quot;&gt;foldM&lt;/a&gt;&lt;/code&gt; works from left-to-right over the list arguments. This could be an issue where &lt;code&gt;(&lt;a href=&quot;control-monad#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; and the `folded function' are not commutative.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;control-monad#v:foldM&quot;&gt;foldM&lt;/a&gt;&lt;/code&gt; аналогична функции &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; , за исключением того, что ее результат инкапсулируется в монаду. Обратите внимание, что &lt;code&gt;&lt;a href=&quot;control-monad#v:foldM&quot;&gt;foldM&lt;/a&gt;&lt;/code&gt; работает с аргументами списка слева направо. Это может быть проблемой, когда &lt;code&gt;(&lt;a href=&quot;control-monad#v:-62--62-&quot;&gt;&amp;gt;&amp;gt;&lt;/a&gt;)&lt;/code&gt; и `свернутая функция 'не коммутативны.</target>
        </trans-unit>
        <trans-unit id="9ee235b387a6a14db33bdf2a6b2158fa66bc38c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;control-monad#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; - это обычный оператор соединения монад. Он используется для удаления одного уровня монадической структуры, проецируя связанный аргумент на внешний уровень.</target>
        </trans-unit>
        <trans-unit id="b7e9731c305b0f549055c674d9ac68832bd130e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#v:mapAndUnzipM&quot;&gt;mapAndUnzipM&lt;/a&gt;&lt;/code&gt; function maps its first argument over a list, returning the result as a pair of lists. This function is mainly used with complicated data structures or a state monad.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;control-monad#v:mapAndUnzipM&quot;&gt;mapAndUnzipM&lt;/a&gt;&lt;/code&gt; отображает свой первый аргумент по списку, возвращая результат в виде пары списков. Эта функция в основном используется со сложными структурами данных или монадой состояния.</target>
        </trans-unit>
        <trans-unit id="adfaa2036ac4e96d2cf9b7c53ce9041b46c41b72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM&quot;&gt;zipWithM&lt;/a&gt;&lt;/code&gt; function generalizes &lt;code&gt;&lt;a href=&quot;ghc-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; to arbitrary applicative functors.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;control-monad#v:zipWithM&quot;&gt;zipWithM&lt;/a&gt;&lt;/code&gt; обобщает &lt;code&gt;&lt;a href=&quot;ghc-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; на произвольные аппликативные функторы.</target>
        </trans-unit>
        <trans-unit id="9e4c77f8896de4159de2b19d91214d29c830fc9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class defines the basic operations over a &lt;em&gt;monad&lt;/em&gt;, a concept from a branch of mathematics known as &lt;em&gt;category theory&lt;/em&gt;. From the perspective of a Haskell programmer, however, it is best to think of a monad as an &lt;em&gt;abstract datatype&lt;/em&gt; of actions. Haskell's &lt;code&gt;do&lt;/code&gt; expressions provide a convenient syntax for writing monadic expressions.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;control-monad-instances#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; определяет основные операции над &lt;em&gt;монадой&lt;/em&gt; - концепцию из раздела математики, известного как &lt;em&gt;теория категорий&lt;/em&gt; . Однако с точки зрения программиста на Haskell лучше всего рассматривать монаду как &lt;em&gt;абстрактный тип данных&lt;/em&gt; действий. Выражения &lt;code&gt;do&lt;/code&gt; в Haskell обеспечивают удобный синтаксис для написания монадических выражений.</target>
        </trans-unit>
        <trans-unit id="680d557813d267dc8f3ee06e2da84590ab3ebc77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad-reader#t:Reader&quot;&gt;Reader&lt;/a&gt;&lt;/code&gt; monad (also called the Environment monad). Represents a computation, which can read values from a shared environment, pass values from function to function, and execute sub-computations in a modified environment. Using &lt;code&gt;&lt;a href=&quot;control-monad-reader#t:Reader&quot;&gt;Reader&lt;/a&gt;&lt;/code&gt; monad for such computations is often clearer and easier than using the &lt;code&gt;&lt;a href=&quot;control-monad-state#v:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-reader#t:Reader&quot;&gt;Reader&lt;/a&gt;&lt;/code&gt; монада (также называется монадой Environment). Представляет вычисление, которое может считывать значения из общей среды, передавать значения от функции к функции и выполнять подвычисления в измененной среде. Использование монады &lt;code&gt;&lt;a href=&quot;control-monad-reader#t:Reader&quot;&gt;Reader&lt;/a&gt;&lt;/code&gt; для таких вычислений часто проще и понятнее, чем использование монады &lt;code&gt;&lt;a href=&quot;control-monad-state#v:State&quot;&gt;State&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81283641c0b20f0b2748a09d602fde66cbffe272" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:catchE&quot;&gt;catchE&lt;/a&gt;&lt;/code&gt; operation has a more complex type, so we need to use the special-purpose lifting function &lt;code&gt;liftCatch&lt;/code&gt; provided by most monad transformers. Here we use the &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#v:ReaderT&quot;&gt;ReaderT&lt;/a&gt;&lt;/code&gt; version followed by the &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:StateT&quot;&gt;StateT&lt;/a&gt;&lt;/code&gt; version:</source>
          <target state="translated">Операция &lt;code&gt;&lt;a href=&quot;control-monad-trans-except#v:catchE&quot;&gt;catchE&lt;/a&gt;&lt;/code&gt; имеет более сложный тип, поэтому нам нужно использовать специальную подъемную функцию &lt;code&gt;liftCatch&lt;/code&gt; , предоставляемую большинством монадных трансформаторов. Здесь мы используем версию &lt;code&gt;&lt;a href=&quot;control-monad-trans-reader#v:ReaderT&quot;&gt;ReaderT&lt;/a&gt;&lt;/code&gt; , за которой &lt;code&gt;&lt;a href=&quot;control-monad-trans-state-lazy#v:StateT&quot;&gt;StateT&lt;/a&gt;&lt;/code&gt; версия StateT :</target>
        </trans-unit>
        <trans-unit id="545d7b475a316b28ef1da840a21adda70380c2c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;control-monad-trans-maybe#t:MaybeT&quot;&gt;MaybeT&lt;/a&gt;&lt;/code&gt; monad transformer extends a monad with the ability to exit the computation without returning a value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;control-monad-trans-maybe#t:MaybeT&quot;&gt;MaybeT&lt;/a&gt;&lt;/code&gt; монада трансформатор расширяет монаду с возможностью выхода вычисления без возвращения значения.</target>
        </trans-unit>
        <trans-unit id="a2118806ea587f5911ee90a60aa429d89bdcab96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-array#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; function deals with repeated indices in the association list using an &lt;em&gt;accumulating function&lt;/em&gt; which combines the values of associations with the same index.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-array#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; обрабатывает повторяющиеся индексы в списке ассоциаций, используя функцию &lt;em&gt;накопления,&lt;/em&gt; которая объединяет значения ассоциаций с одним и тем же индексом.</target>
        </trans-unit>
        <trans-unit id="0179248504c3fa08ab2a958c9b5147b68d6c33e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifind&quot;&gt;bifind&lt;/a&gt;&lt;/code&gt; function takes a predicate and a structure and returns the leftmost element of the structure matching the predicate, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there is no such element.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifind&quot;&gt;bifind&lt;/a&gt;&lt;/code&gt; принимает предикат и структуру и возвращает крайний левый элемент структуры, соответствующий предикату, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если такого элемента нет.</target>
        </trans-unit>
        <trans-unit id="87802a775d4245309a8eade317e7d18abe967e8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:biproduct&quot;&gt;biproduct&lt;/a&gt;&lt;/code&gt; function computes the product of the numbers of a structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:biproduct&quot;&gt;biproduct&lt;/a&gt;&lt;/code&gt; вычисляет произведение номеров конструкции.</target>
        </trans-unit>
        <trans-unit id="e6a2674d1a15617e9adc9ceb2614394b34abbb43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bisum&quot;&gt;bisum&lt;/a&gt;&lt;/code&gt; function computes the sum of the numbers of a structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bisum&quot;&gt;bisum&lt;/a&gt;&lt;/code&gt; вычисляет сумму номеров структуры.</target>
        </trans-unit>
        <trans-unit id="dc2ecd95ed8a8f0c6f2cf1d560aaa6d8aea4ed41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-binary#t:Binary&quot;&gt;Binary&lt;/a&gt;&lt;/code&gt; class provides &lt;code&gt;&lt;a href=&quot;data-binary#v:put&quot;&gt;put&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-binary#v:get&quot;&gt;get&lt;/a&gt;&lt;/code&gt;, methods to encode and decode a Haskell value to a lazy &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. It mirrors the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; classes for textual representation of Haskell types, and is suitable for serialising Haskell values to disk, over the network.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;data-binary#t:Binary&quot;&gt;Binary&lt;/a&gt;&lt;/code&gt; предоставляет методы &lt;code&gt;&lt;a href=&quot;data-binary#v:put&quot;&gt;put&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-binary#v:get&quot;&gt;get&lt;/a&gt;&lt;/code&gt; для кодирования и декодирования значения Haskell в ленивую &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Он отражает классы &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; для текстового представления типов Haskell и подходит для сериализации значений Haskell на диск по сети.</target>
        </trans-unit>
        <trans-unit id="fc3c4e321db0da5c60f5e57209330b5697cd8103" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; monad. A monad for efficiently building structures from encoded lazy ByteStrings.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-binary-get#t:Get&quot;&gt;Get&lt;/a&gt;&lt;/code&gt; монады. Монада для эффективного построения структур из закодированных ленивых байтовых строк.</target>
        </trans-unit>
        <trans-unit id="4d3613093bfbb78cd7a2a16f8922cee7681b2bed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bimapAccumL&quot;&gt;bimapAccumL&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl&quot;&gt;bifoldl&lt;/a&gt;&lt;/code&gt;; it traverses a structure from left to right, threading a state of type &lt;code&gt;a&lt;/code&gt; and using the given actions to compute new elements for the structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bimapAccumL&quot;&gt;bimapAccumL&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl&quot;&gt;bifoldl&lt;/a&gt;&lt;/code&gt; ; он проходит структуру слева направо, распределяя состояние типа &lt;code&gt;a&lt;/code&gt; и используя заданные действия для вычисления новых элементов для структуры.</target>
        </trans-unit>
        <trans-unit id="9a87ec27622ff13e398e24344f3a64ac0e1395d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bimapAccumR&quot;&gt;bimapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl&quot;&gt;bifoldl&lt;/a&gt;&lt;/code&gt;; it traverses a structure from right to left, threading a state of type &lt;code&gt;a&lt;/code&gt; and using the given actions to compute new elements for the structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bitraversable#v:bimapAccumR&quot;&gt;bimapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bifunctor#v:bimap&quot;&gt;bimap&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bifoldable#v:bifoldl&quot;&gt;bifoldl&lt;/a&gt;&lt;/code&gt; ; он проходит структуру справа налево, распределяя состояние типа &lt;code&gt;a&lt;/code&gt; и используя заданные действия для вычисления новых элементов для структуры.</target>
        </trans-unit>
        <trans-unit id="48db54c46d3aa624ae5d297b1ebeb1fa3977d71b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bits#t:Bits&quot;&gt;Bits&lt;/a&gt;&lt;/code&gt; class defines bitwise operations over integral types.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;data-bits#t:Bits&quot;&gt;Bits&lt;/a&gt;&lt;/code&gt; определяет побитовые операции над целыми типами.</target>
        </trans-unit>
        <trans-unit id="0ad9b411edb3c5e8c1b9471ab75ecc126a6721eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bits#t:FiniteBits&quot;&gt;FiniteBits&lt;/a&gt;&lt;/code&gt; class denotes types with a finite, fixed number of bits.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;data-bits#t:FiniteBits&quot;&gt;FiniteBits&lt;/a&gt;&lt;/code&gt; обозначает типы с конечным фиксированным числом битов.</target>
        </trans-unit>
        <trans-unit id="20817eeecc682279fcdb27f8168c9dc5e0bd900f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; type and related functions.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-bool#t:Bool&quot;&gt;Bool&lt;/a&gt;&lt;/code&gt; и связанные с ним функции.</target>
        </trans-unit>
        <trans-unit id="0ac698df5fa5f3ca66ad118ffad20bf3b266295d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; function takes a predicate and a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and returns the index of the first element in the ByteString satisfying the predicate.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; принимает предикат и &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; и возвращает индекс первого элемента в ByteString, удовлетворяющего предикату.</target>
        </trans-unit>
        <trans-unit id="a88a45076c0dfb13c7596a49a77c0da26a873595" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; function extends &lt;code&gt;&lt;a href=&quot;data-bytestring#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt;, by returning the indices of all elements satisfying the predicate, in ascending order.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; расширяет &lt;code&gt;&lt;a href=&quot;data-bytestring#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; , возвращая индексы всех элементов, удовлетворяющих предикату, в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="d89ae35b30db39f44c3fe60d6b3d04049f068a4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; function takes a ByteString and returns a list of ByteStrings such that the concatenation of the result is equal to the argument. Moreover, each sublist in the result contains only equal elements. For example,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; функция принимает байтовую строку и возвращает список байтовых строк таким образом, что конкатенация результата равна аргументу. Более того, каждый подсписок в результате содержит только равные элементы. Например,</target>
        </trans-unit>
        <trans-unit id="4ee4acaf8e9d95a9f5ef4c31e80b5ce11a67d031" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;data-bytestring#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e617691064b9b4b87d847163f54ff7d363170a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a ByteString, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bytestring#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу ByteString, передавая параметр накопления слева направо и возвращая окончательное значение этого аккумулятора вместе с новым списком.</target>
        </trans-unit>
        <trans-unit id="2ea34718a3c5162fce3eb666e6adf60a8a7d062c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bytestring#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a ByteString, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new ByteString.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bytestring#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу ByteString, передавая параметр накопления справа налево и возвращая окончательное значение этого аккумулятора вместе с новой ByteString.</target>
        </trans-unit>
        <trans-unit id="fd51442d30fe2b55d7fe46723f9d58913d2aa41f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; function transposes the rows and columns of its &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; argument.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; перемещает строки и столбцы своего аргумента &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c1aa92f924157b1d391e0c5573f2c097c3b5ec16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:BufferWriter&quot;&gt;BufferWriter&lt;/a&gt;&lt;/code&gt; itself is an IO action: you supply it with a buffer (as a pointer and length) and it will write data into the buffer. It returns a number indicating how many bytes were actually written (which can be &lt;code&gt;0&lt;/code&gt;). It also returns a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:Next&quot;&gt;Next&lt;/a&gt;&lt;/code&gt; which describes what comes next.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:BufferWriter&quot;&gt;BufferWriter&lt;/a&gt;&lt;/code&gt; само действие IO: вы поставляете его с буфером ( в качестве указателя и длины) , и она будет записывать данные в буфер. Он возвращает число, показывающее, сколько байтов было фактически записано (может быть &lt;code&gt;0&lt;/code&gt; ). Он также возвращает &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-extra#t:Next&quot;&gt;Next&lt;/a&gt;&lt;/code&gt; , который описывает, что будет дальше.</target>
        </trans-unit>
        <trans-unit id="ea2d270840cc8c9daa194a459da571d928cff274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting a zero-length sequence of bytes. This function is only exported for use in rewriting rules. Use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; обозначающей последовательности нулевой длины в байтах. Эта функция экспортируется только для использования в правилах перезаписи. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; противном случае используйте mempty .</target>
        </trans-unit>
        <trans-unit id="77e9d20b09fe3cb5d3e34c82f2d34d8c4d1fbd52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-internal#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; denoting a zero-length sequence of bytes. This function is only exported for use in rewriting rules. Use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-monoid#v:mempty&quot;&gt;mempty&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c6b6ed74cc07d8a8ef6b6a51e39f07fbdde207" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; that always results in the zero-length sequence.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; , что всегда приводит к последовательности нулевой длины.</target>
        </trans-unit>
        <trans-unit id="386c97767c9a0e690099a424827f366fbf618180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; that always results in the zero-length sequence.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; , что всегда приводит к последовательности нулевой длины.</target>
        </trans-unit>
        <trans-unit id="e4a29465a0ac4c8f6fffb025991665c12b63f1c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:-62--42--60-&quot;&gt;(&amp;gt;*&amp;lt;)&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:-62--36--60-&quot;&gt;(&amp;gt;$&amp;lt;)&lt;/a&gt;&lt;/code&gt; pairing and mapping operators can be used with &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Операторы сопряжения и сопоставления &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:-62--42--60-&quot;&gt;(&amp;gt;*&amp;lt;)&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#v:-62--36--60-&quot;&gt;(&amp;gt;$&amp;lt;)&lt;/a&gt;&lt;/code&gt; могут использоваться с &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdd16a4104dcd27da4c5d7c015155569458cf5d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; that always results in the zero-length sequence.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:BoundedPrim&quot;&gt;BoundedPrim&lt;/a&gt;&lt;/code&gt; , что всегда приводит к последовательности нулевой длины.</target>
        </trans-unit>
        <trans-unit id="f5ca076d9cd96bbcd373168527623c2c7280cd67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; that always results in the zero-length sequence.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-builder-prim-internal#t:FixedPrim&quot;&gt;FixedPrim&lt;/a&gt;&lt;/code&gt; , что всегда приводит к последовательности нулевой длины.</target>
        </trans-unit>
        <trans-unit id="34fcdbaf6996fe7f65d389f0c0fdfc1f2f89c754" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; function takes a predicate and a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and returns the index of the first element in the ByteString satisfying the predicate.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; принимает предикат и &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; и возвращает индекс первого элемента в ByteString, удовлетворяющего предикату.</target>
        </trans-unit>
        <trans-unit id="2808d77c990696b44b127af7d539f85921526158" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; function extends &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt;, by returning the indices of all elements satisfying the predicate, in ascending order.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; расширяет &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; , возвращая индексы всех элементов, удовлетворяющих предикату, в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="3b2f3c13460a923ec70902424b286392ebcf4ee2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; function takes a ByteString and returns a list of ByteStrings such that the concatenation of the result is equal to the argument. Moreover, each sublist in the result contains only equal elements. For example,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; функция принимает байтовую строку и возвращает список байтовых строк таким образом, что конкатенация результата равна аргументу. Более того, каждый подсписок в результате содержит только равные элементы. Например,</target>
        </trans-unit>
        <trans-unit id="011ecd68a05489bd1b20ac9d77a9cea0655b8352" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72cc5f08d56e30d247f072343ee4d0e1aa87e68f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a ByteString, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу ByteString, передавая параметр накопления слева направо и возвращая окончательное значение этого аккумулятора вместе с новым списком.</target>
        </trans-unit>
        <trans-unit id="c9e160c9ad7473babd1af40af00cbf0162bdef7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a ByteString, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new ByteString.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу ByteString, передавая параметр накопления справа налево и возвращая окончательное значение этого аккумулятора вместе с новой ByteString.</target>
        </trans-unit>
        <trans-unit id="83f55a6f846dc49344b68895528bedee225f9b95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; function transposes the rows and columns of its &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; argument.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; перемещает строки и столбцы своего аргумента &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfef4b206c70c32eec3092e778efb683d81d66b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; function is analogous to the &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; function, on words.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; аналогична функции &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; для слов.</target>
        </trans-unit>
        <trans-unit id="1d758a0f563300419f025322f07bdf29baaf99ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; function takes a predicate and a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and returns the index of the first element in the ByteString satisfying the predicate.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; принимает предикат и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; и возвращает индекс первого элемента в ByteString, удовлетворяющего предикату.</target>
        </trans-unit>
        <trans-unit id="bc3fedbb007a3889a87db49cdfcce211f6dec12f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; function extends &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt;, by returning the indices of all elements satisfying the predicate, in ascending order.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; расширяет &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; , возвращая индексы всех элементов, удовлетворяющих предикату, в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="11978bfbf1d81f38393dc6440b94501585d47dc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; function takes a ByteString and returns a list of ByteStrings such that the concatenation of the result is equal to the argument. Moreover, each sublist in the result contains only equal elements. For example,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; функция принимает байтовую строку и возвращает список байтовых строк таким образом, что конкатенация результата равна аргументу. Более того, каждый подсписок в результате содержит только равные элементы. Например,</target>
        </trans-unit>
        <trans-unit id="063223aebad86f89a99e6e89e5807a67aa057281" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de39eec2cad2fac68f9d8a352ebb2380e3936c42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:intersperse&quot;&gt;intersperse&lt;/a&gt;&lt;/code&gt; function takes a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and `intersperses' that byte between the elements of the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. It is analogous to the intersperse function on Lists.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:intersperse&quot;&gt;intersperse&lt;/a&gt;&lt;/code&gt; принимает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; и ByteString и &quot; &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; &quot; этот байт между элементами &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Это аналогично функции вкрапления списков.</target>
        </trans-unit>
        <trans-unit id="6625add11fa1e445312d92a0c6788839896adacf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:intersperse&quot;&gt;intersperse&lt;/a&gt;&lt;/code&gt; function takes a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and `intersperses' that byte between the elements of the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. It is analogous to the intersperse function on Lists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b89a766d13b74128a8333abb002900f94b6b437" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a ByteString, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new ByteString.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу ByteString, передавая параметр накопления слева направо и возвращая окончательное значение этого аккумулятора вместе с новой ByteString.</target>
        </trans-unit>
        <trans-unit id="c773ca1b34d782e061cf0d6996806a66376f97f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a ByteString, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new ByteString.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу ByteString, передавая параметр накопления справа налево и возвращая окончательное значение этого аккумулятора вместе с новой ByteString.</target>
        </trans-unit>
        <trans-unit id="612dd81abb27b510de3a02ab1ed120cd76a9a6a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; function transposes the rows and columns of its &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; argument.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; перемещает строки и столбцы своего аргумента &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b02cc89d4861343dc4906429c0519e1e575b9b01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; function takes a predicate and a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; and returns the index of the first element in the ByteString satisfying the predicate.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; принимает предикат и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; и возвращает индекс первого элемента в ByteString, удовлетворяющего предикату.</target>
        </trans-unit>
        <trans-unit id="89e6612f1c49c256bb1909e6d5ea7235d2f56477" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; function extends &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt;, by returning the indices of all elements satisfying the predicate, in ascending order.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; расширяет &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; , возвращая индексы всех элементов, удовлетворяющих предикату, в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="0683ca6fb89db86c531b2e317168c1b2a68d2259" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; function takes a ByteString and returns a list of ByteStrings such that the concatenation of the result is equal to the argument. Moreover, each sublist in the result contains only equal elements. For example,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; функция принимает байтовую строку и возвращает список байтовых строк таким образом, что конкатенация результата равна аргументу. Более того, каждый подсписок в результате содержит только равные элементы. Например,</target>
        </trans-unit>
        <trans-unit id="7f63028123ecc27ee69e82bdcdeb63da564a6078" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9318a5a01ea45d555a0875fa484d9ff476c3e0a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a ByteString, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new ByteString.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу ByteString, передавая параметр накопления слева направо и возвращая окончательное значение этого аккумулятора вместе с новой ByteString.</target>
        </trans-unit>
        <trans-unit id="e142671c8576be4ab4d32dbd1993a19bfee360ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a ByteString, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new ByteString.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу ByteString, передавая параметр накопления справа налево и возвращая окончательное значение этого аккумулятора вместе с новой ByteString.</target>
        </trans-unit>
        <trans-unit id="21e9a6162eb970619d9172486dd0b5106006c4bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; function transposes the rows and columns of its &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; argument.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; перемещает строки и столбцы своего аргумента &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="981ef85d841145750af6b8e72525229c75f0ae12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; function is analogous to the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; function, on words.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:unwords&quot;&gt;unwords&lt;/a&gt;&lt;/code&gt; аналогична функции &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:unlines&quot;&gt;unlines&lt;/a&gt;&lt;/code&gt; для слов.</target>
        </trans-unit>
        <trans-unit id="70b1e8ad66966b19620f6916e96d89ef82853d69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; class comprehends a fundamental primitive &lt;code&gt;&lt;a href=&quot;data-data#v:gfoldl&quot;&gt;gfoldl&lt;/a&gt;&lt;/code&gt; for folding over constructor applications, say terms. This primitive can be instantiated in several ways to map over the immediate subterms of a term; see the &lt;code&gt;gmap&lt;/code&gt; combinators later in this class. Indeed, a generic programmer does not necessarily need to use the ingenious gfoldl primitive but rather the intuitive &lt;code&gt;gmap&lt;/code&gt; combinators. The &lt;code&gt;&lt;a href=&quot;data-data#v:gfoldl&quot;&gt;gfoldl&lt;/a&gt;&lt;/code&gt; primitive is completed by means to query top-level constructors, to turn constructor representations into proper terms, and to list all possible datatype constructors. This completion allows us to serve generic programming scenarios like read, show, equality, term generation.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;data-data#t:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; охватывает фундаментальный примитив &lt;code&gt;&lt;a href=&quot;data-data#v:gfoldl&quot;&gt;gfoldl&lt;/a&gt;&lt;/code&gt; для свертывания приложений-конструкторов, скажем, терминов. Этот примитив может быть создан несколькими способами, чтобы отображать непосредственные подтермы термина; см. комбинаторы &lt;code&gt;gmap&lt;/code&gt; далее в этом классе. В самом деле, универсальный программист не обязательно должен использовать гениальный примитив gfoldl, а скорее интуитивные комбинаторы &lt;code&gt;gmap&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;data-data#v:gfoldl&quot;&gt;gfoldl&lt;/a&gt;&lt;/code&gt; примитивный завершаются посредством запроса к конструкторам верхнего уровня, чтобы превратить конструктор представление в соответствующие сроки, и перечислить все возможные конструктор типов данных. Это завершение позволяет нам обслуживать общие сценарии программирования, такие как чтение, показ, равенство, генерация терминов.</target>
        </trans-unit>
        <trans-unit id="2a4e313748880e797d1bcb646d76cb8547d19d57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; type is sometimes used to represent a value which is either correct or an error; by convention, the &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; constructor is used to hold an error value and the &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; constructor is used to hold a correct value (mnemonic: &quot;right&quot; also means &quot;correct&quot;).</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; иногда используется для представления значения, которое является правильным или ошибочным; по соглашению конструктор &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; используется для хранения значения ошибки, а конструктор &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; используется для хранения правильного значения (мнемоника: &amp;laquo;right&amp;raquo; также означает &amp;laquo;правильный&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="f0e4baff05206c672300bb2b38395a9530159b34" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; type represents values with two possibilities: a value of type &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt; a b&lt;/code&gt; is either &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt; a&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt; b&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; представляет значения с двумя возможностями: значение типа &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt; a b&lt;/code&gt; равно &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt; a&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt; b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c8bc066a25dbdc9345dc643976410a0121b2ada" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; class defines equality (&lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt;) and inequality (&lt;code&gt;&lt;a href=&quot;data-eq#v:-47--61-&quot;&gt;/=&lt;/a&gt;&lt;/code&gt;). All the basic datatypes exported by the &lt;a href=&quot;prelude&quot;&gt;Prelude&lt;/a&gt; are instances of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; may be derived for any datatype whose constituents are also instances of &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; определяет равенство ( &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; ) и неравенство ( &lt;code&gt;&lt;a href=&quot;data-eq#v:-47--61-&quot;&gt;/=&lt;/a&gt;&lt;/code&gt; ). Все основные типы данных, экспортируемые &lt;a href=&quot;prelude&quot;&gt;Prelude,&lt;/a&gt; являются экземплярами &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; может быть получен для любого типа данных, составные части которого также являются экземплярами &lt;code&gt;&lt;a href=&quot;data-eq#t:Eq&quot;&gt;Eq&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69af3900bc4a32d170db2d927f8de7596335e0e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-traversable#t:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; instances traverse the real part first.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;data-foldable#t:Foldable&quot;&gt;Foldable&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-traversable#t:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; экземплярах пересекают вещественную часть первыми.</target>
        </trans-unit>
        <trans-unit id="5eff372cb874b6edeef6ee4a0a04355990bb5ac2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-foldable#v:find&quot;&gt;find&lt;/a&gt;&lt;/code&gt; function takes a predicate and a structure and returns the leftmost element of the structure matching the predicate, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there is no such element.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-foldable#v:find&quot;&gt;find&lt;/a&gt;&lt;/code&gt; принимает предикат и структуру и возвращает самый левый элемент структуры, соответствующий предикату, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если такого элемента нет.</target>
        </trans-unit>
        <trans-unit id="168798718c8d67f564d095b7f2c27b1f23db19a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-foldable#v:product&quot;&gt;product&lt;/a&gt;&lt;/code&gt; function computes the product of the numbers of a structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-foldable#v:product&quot;&gt;product&lt;/a&gt;&lt;/code&gt; вычисляет произведение номеров конструкции.</target>
        </trans-unit>
        <trans-unit id="7cca4119f8a53ddfe67d87125c91cc29b78f8689" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-foldable#v:sum&quot;&gt;sum&lt;/a&gt;&lt;/code&gt; function computes the sum of the numbers of a structure.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-foldable#v:sum&quot;&gt;sum&lt;/a&gt;&lt;/code&gt; функция вычисляет сумму чисел строения.</target>
        </trans-unit>
        <trans-unit id="f9699a12c867a28d982d3293073c01ca1c9af29d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; from our &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; instance will ignore &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; values, but will apply the supplied function to values contained in a &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; из нашего &lt;code&gt;&lt;a href=&quot;data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; экземпляра будет игнорировать &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; значения, но будет применять указанную функцию к значениям , содержащимся в &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b77100b25e8a5a0820122925237280bb25f1620c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; function is also available as the infix operator &lt;code&gt;&lt;a href=&quot;data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; также доступна как инфиксный оператор &lt;code&gt;&lt;a href=&quot;data-functor#v:-60--36--62-&quot;&gt;&amp;lt;$&amp;gt;&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="75d054c2f2cab23d848c32214fa7c03446c931b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; functor.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-functor-const#t:Const&quot;&gt;Const&lt;/a&gt;&lt;/code&gt; функтор.</target>
        </trans-unit>
        <trans-unit id="91affd44c758dc656c5a465b34202e2474e6eec1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-graph#t:Graph&quot;&gt;Graph&lt;/a&gt;&lt;/code&gt; type is an adjacency list representation of a finite, directed graph with vertices of type &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-graph#t:Graph&quot;&gt;Graph&lt;/a&gt;&lt;/code&gt; - это представление списка смежности конечного ориентированного графа с вершинами типа &lt;code&gt;Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da965f8602a83550c13d9322bdab8f201adad863" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-graph#t:SCC&quot;&gt;SCC&lt;/a&gt;&lt;/code&gt; type represents a &lt;a href=&quot;https://en.wikipedia.org/wiki/Strongly_connected_component&quot;&gt;strongly-connected component&lt;/a&gt; of a graph.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-graph#t:SCC&quot;&gt;SCC&lt;/a&gt;&lt;/code&gt; представляет собой &lt;a href=&quot;https://en.wikipedia.org/wiki/Strongly_connected_component&quot;&gt;сильно связанный компонент&lt;/a&gt; графа.</target>
        </trans-unit>
        <trans-unit id="b13b673bb0340c3f60ad133cedd86aba2eebb7ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; argument specifies a &lt;em&gt;capability number&lt;/em&gt; (see &lt;code&gt;&lt;a href=&quot;control-concurrent#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt;). Typically capabilities correspond to physical processors, but the exact behaviour is implementation-dependent. The value passed to &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo the total number of capabilities as returned by &lt;code&gt;&lt;a href=&quot;control-concurrent#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; аргумент указывает &lt;em&gt;номер возможностей&lt;/em&gt; (см &lt;code&gt;&lt;a href=&quot;control-concurrent#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt; ). Обычно возможности соответствуют физическим процессорам, но точное поведение зависит от реализации. Значение, переданное в &lt;code&gt;&lt;a href=&quot;control-concurrent#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; , интерпретируется по модулю общего количества возможностей, возвращаемых &lt;code&gt;&lt;a href=&quot;control-concurrent#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f78d4fb8fef90bc420e0f272097151354016eb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; argument specifies a &lt;em&gt;capability number&lt;/em&gt; (see &lt;code&gt;&lt;a href=&quot;ghc-conc#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt;). Typically capabilities correspond to physical processors, but the exact behaviour is implementation-dependent. The value passed to &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo the total number of capabilities as returned by &lt;code&gt;&lt;a href=&quot;ghc-conc#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; аргумент указывает &lt;em&gt;номер возможностей&lt;/em&gt; (см &lt;code&gt;&lt;a href=&quot;ghc-conc#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt; ). Обычно возможности соответствуют физическим процессорам, но точное поведение зависит от реализации. Значение, переданное в &lt;code&gt;&lt;a href=&quot;ghc-conc#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; , интерпретируется по модулю общего количества возможностей, возвращаемых &lt;code&gt;&lt;a href=&quot;ghc-conc#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="990e9e27ae850a84a5975a64be27bfdd1b9f5808" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; argument specifies a &lt;em&gt;capability number&lt;/em&gt; (see &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt;). Typically capabilities correspond to physical processors, but the exact behaviour is implementation-dependent. The value passed to &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; is interpreted modulo the total number of capabilities as returned by &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; аргумент указывает &lt;em&gt;номер возможностей&lt;/em&gt; (см &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt; ). Обычно возможности соответствуют физическим процессорам, но точное поведение зависит от реализации. Значение, переданное в &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:forkOn&quot;&gt;forkOn&lt;/a&gt;&lt;/code&gt; , интерпретируется по модулю общего количества возможностей, возвращаемых &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:getNumCapabilities&quot;&gt;getNumCapabilities&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26c55fb3d34eb375b02ebba32fb7b2dd27c91fb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#t:IntMap&quot;&gt;IntMap&lt;/a&gt; v&lt;/code&gt; type represents a finite map (sometimes called a dictionary) from keys of type &lt;code&gt;Int&lt;/code&gt; to values of type &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#t:IntMap&quot;&gt;IntMap&lt;/a&gt; v&lt;/code&gt; представляет собой конечную карту (иногда называемую словарем) от ключей типа &lt;code&gt;Int&lt;/code&gt; до значений типа &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9babf39e61d88f08afacef329c45b58b748886e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; functions are shared by the lazy and strict modules. Only the choice of merge tactics determines strictness. If you use &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;data-map-merge-strict&quot;&gt;Data.Map.Merge.Strict&lt;/a&gt; then the results will be forced before they are inserted. If you use &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; from this module then they will not.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-intmap-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; используются модулями lazy и strict. Только выбор тактики слияния определяет строгость. Если вы используете &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; из &lt;a href=&quot;data-map-merge-strict&quot;&gt;Data.Map.Merge.Strict,&lt;/a&gt; тогда результаты будут принудительно перед вставкой . Если вы используете &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; из этого модуля, они не будут.</target>
        </trans-unit>
        <trans-unit id="918fcfe1bbabd9b098a3357af6b4c10845874e4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; functions are shared by the lazy and strict modules. Only the choice of merge tactics determines strictness. If you use &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; from this module then the results will be forced before they are inserted. If you use &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;data-map-merge-lazy&quot;&gt;Data.Map.Merge.Lazy&lt;/a&gt; then they will not.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-intmap-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; используются модулями lazy и strict. Только выбор тактики слияния определяет строгость. Если вы используете &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; из этого модуля, результаты будут принудительно перед вставкой . Если вы используете &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; из &lt;a href=&quot;data-map-merge-lazy&quot;&gt;Data.Map.Merge.Lazy,&lt;/a&gt; тогда они не будут.</target>
        </trans-unit>
        <trans-unit id="7e82dc1c0b8d264abe9b7b565b8cd539e1dbf5c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt; v&lt;/code&gt; type represents a finite map (sometimes called a dictionary) from key of type &lt;code&gt;Int&lt;/code&gt; to values of type &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt; v&lt;/code&gt; представляет собой конечную карту (иногда называемую словарем) от ключа типа &lt;code&gt;Int&lt;/code&gt; до значений типа &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1641ed0171bfd491e6f0e6638191a7945a81dba8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; type is shared between the lazy and strict modules, meaning that the same &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; value can be passed to functions in both modules. This means that the &lt;code&gt;Functor&lt;/code&gt;, &lt;code&gt;Traversable&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instances are the same as for the &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt; module, so if they are used the resulting map may contain suspended values (thunks).</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; является общим для ленивых и строгих модулей, что означает, что одно и то же значение &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; может быть передано функциям в обоих модулях. Это означает, что экземпляры &lt;code&gt;Functor&lt;/code&gt; , &lt;code&gt;Traversable&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; такие же, как и для модуля &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt; , поэтому, если они используются, результирующая карта может содержать приостановленные значения (преобразователи).</target>
        </trans-unit>
        <trans-unit id="5d01cac285dd99db980e4e71910e5f17ef1269f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; type is shared between the lazy and strict modules, meaning that the same &lt;code&gt;&lt;a href=&quot;data-intmap-strict#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; value can be passed to functions in both modules. This means that the &lt;code&gt;Functor&lt;/code&gt;, &lt;code&gt;Traversable&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instances are the same as for the &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt; module, so if they are used the resulting map may contain suspended values (thunks).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6e272f4b13fc32e4e87c18c5a09335a1d8e5ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt; v&lt;/code&gt; type represents a finite map (sometimes called a dictionary) from key of type &lt;code&gt;Int&lt;/code&gt; to values of type &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt; v&lt;/code&gt; представляет собой конечную карту (иногда называемую словарем) от ключа типа &lt;code&gt;Int&lt;/code&gt; до значений типа &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="318814e0b6ddaa927c58b1267d22b77390f5ece2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; type is shared between the lazy and strict modules, meaning that the same &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; value can be passed to functions in both modules. This means that the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#t:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instances are the same as for the &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt; module, so if they are used the resulting map may contain suspended values (thunks).</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; является общим для ленивых и строгих модулей, что означает, что одно и то же значение &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; может быть передано функциям в обоих модулях. Это означает, что экземпляры &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#t:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; такие же, как и для модуля &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt; , поэтому, если они используются, результирующая карта может содержать приостановленные значения (преобразователи).</target>
        </trans-unit>
        <trans-unit id="352aafc40cb132717ac79f053c1b34a159a6c7a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; type is shared between the lazy and strict modules, meaning that the same &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#t:IntMap&quot;&gt;IntMap&lt;/a&gt;&lt;/code&gt; value can be passed to functions in both modules. This means that the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#t:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#t:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instances are the same as for the &lt;a href=&quot;data-intmap-lazy&quot;&gt;Data.IntMap.Lazy&lt;/a&gt; module, so if they are used the resulting map may contain suspended values (thunks).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89f7bb2231b7f0bb854265a80968d382d2ee4a72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; type represents a set of elements of type &lt;code&gt;Int&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-intset#t:IntSet&quot;&gt;IntSet&lt;/a&gt;&lt;/code&gt; представляет собой набор элементов типа &lt;code&gt;Int&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="235975fc327cbd37e2885a32990dd1d50e6ef2a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; class is used to map a contiguous subrange of values in a type onto integers. It is used primarily for array indexing (see the array package).</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; используется для отображения непрерывного поддиапазона значений в типе на целые числа. Он используется в основном для индексации массивов (см. Пакет с массивами).</target>
        </trans-unit>
        <trans-unit id="213033fe7d1bfa8957877f18a3b95df927b829f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; class is used to map a contiguous subrange of values in type onto integers. It is used primarily for array indexing (see the array package). &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; uses row-major order.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; используется для отображения непрерывного поддиапазона значений типа в целые числа. Он используется в основном для индексации массивов (см. Пакет с массивами). &lt;code&gt;&lt;a href=&quot;data-ix#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; использует порядок строк.</target>
        </trans-unit>
        <trans-unit id="1c9726b499ba205a67e8661afa56b3f5e6610bf8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:-92--92-&quot;&gt;\\&lt;/a&gt;&lt;/code&gt; function is list difference (non-associative). In the result of &lt;code&gt;xs&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-list#v:-92--92-&quot;&gt;\\&lt;/a&gt;&lt;/code&gt;&lt;code&gt;ys&lt;/code&gt;, the first occurrence of each element of &lt;code&gt;ys&lt;/code&gt; in turn (if any) has been removed from &lt;code&gt;xs&lt;/code&gt;. Thus</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:-92--92-&quot;&gt;\\&lt;/a&gt;&lt;/code&gt; - это разность списков (неассоциативная). В результате &lt;code&gt;xs&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-list#v:-92--92-&quot;&gt;\\&lt;/a&gt;&lt;/code&gt; &lt;code&gt;ys&lt;/code&gt; первое вхождение каждого элемента &lt;code&gt;ys&lt;/code&gt; по очереди (если есть) было удалено из &lt;code&gt;xs&lt;/code&gt; . таким образом</target>
        </trans-unit>
        <trans-unit id="d02a0fb924a1fb516ed51240226d0d6e5d964fd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:deleteFirstsBy&quot;&gt;deleteFirstsBy&lt;/a&gt;&lt;/code&gt; function takes a predicate and two lists and returns the first list with the first occurrence of each element of the second list removed.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:deleteFirstsBy&quot;&gt;deleteFirstsBy&lt;/a&gt;&lt;/code&gt; принимает предикат и два списка и возвращает первый список с первым удаленным вхождением каждого элемента второго списка.</target>
        </trans-unit>
        <trans-unit id="0d81ce03e6c4879c98e79164e27980ccd4245607" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:dropWhileEnd&quot;&gt;dropWhileEnd&lt;/a&gt;&lt;/code&gt; function drops the largest suffix of a list in which the given predicate holds for all elements. For example:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:dropWhileEnd&quot;&gt;dropWhileEnd&lt;/a&gt;&lt;/code&gt; отбрасывает самый большой суффикс списка, в котором данный предикат выполняется для всех элементов. Например:</target>
        </trans-unit>
        <trans-unit id="8e6ebb6facf4e5e8507546d0730cd3d8aaa7cdbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:elemIndex&quot;&gt;elemIndex&lt;/a&gt;&lt;/code&gt; function returns the index of the first element in the given list which is equal (by &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt;) to the query element, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there is no such element.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:elemIndex&quot;&gt;elemIndex&lt;/a&gt;&lt;/code&gt; возвращает индекс первого элемента в данном списке, который равен (на &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; ) элементу запроса, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если такого элемента нет.</target>
        </trans-unit>
        <trans-unit id="35376b9066c242bc547e361977a97acd67654b38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:elemIndices&quot;&gt;elemIndices&lt;/a&gt;&lt;/code&gt; function extends &lt;code&gt;&lt;a href=&quot;data-list#v:elemIndex&quot;&gt;elemIndex&lt;/a&gt;&lt;/code&gt;, by returning the indices of all elements equal to the query element, in ascending order.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:elemIndices&quot;&gt;elemIndices&lt;/a&gt;&lt;/code&gt; расширяет &lt;code&gt;&lt;a href=&quot;data-list#v:elemIndex&quot;&gt;elemIndex&lt;/a&gt;&lt;/code&gt; , возвращая индексы всех элементов, равных элементу запроса, в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="777c2200547e9739ba52a7633b954736b9823c38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; function is just &lt;code&gt;&lt;a href=&quot;control-monad#v:mfilter&quot;&gt;mfilter&lt;/a&gt;&lt;/code&gt; specialized to the list monad:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:filter&quot;&gt;filter&lt;/a&gt;&lt;/code&gt; - это просто &lt;code&gt;&lt;a href=&quot;control-monad#v:mfilter&quot;&gt;mfilter&lt;/a&gt;&lt;/code&gt; , специализированный для монады списка:</target>
        </trans-unit>
        <trans-unit id="a5d8b6f3eaba5030a68bf5d06e480657d33033a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:find&quot;&gt;find&lt;/a&gt;&lt;/code&gt; function takes a predicate and a structure and returns the leftmost element of the structure matching the predicate, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there is no such element.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:find&quot;&gt;find&lt;/a&gt;&lt;/code&gt; принимает предикат и структуру и возвращает самый левый элемент структуры, соответствующий предикату, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если такого элемента нет.</target>
        </trans-unit>
        <trans-unit id="75b2422f251ce2039aaef3829d2dd5ca0ff38fd1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; function takes a predicate and a list and returns the index of the first element in the list satisfying the predicate, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there is no such element.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; принимает предикат и список и возвращает индекс первого элемента в списке, удовлетворяющего этому предикату, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если такого элемента нет.</target>
        </trans-unit>
        <trans-unit id="9ea9c7c9c9ab7b6e747e9ebc107dbbfddd67c972" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; function extends &lt;code&gt;&lt;a href=&quot;data-list#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt;, by returning the indices of all elements satisfying the predicate, in ascending order.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; расширяет &lt;code&gt;&lt;a href=&quot;data-list#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; , возвращая индексы всех элементов, удовлетворяющих предикату, в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="be32822442735a04d54fa68d012d24ba5b89a668" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:genericDrop&quot;&gt;genericDrop&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the number of elements to drop.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:genericDrop&quot;&gt;genericDrop&lt;/a&gt;&lt;/code&gt; - это перегруженная версия &lt;code&gt;&lt;a href=&quot;data-list#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; , которая принимает любое значение &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; в качестве количества удаляемых элементов.</target>
        </trans-unit>
        <trans-unit id="2812d742b2328d1abd314aebeef9aa75d01e9698" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:genericIndex&quot;&gt;genericIndex&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:-33--33-&quot;&gt;!!&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the index.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:genericIndex&quot;&gt;genericIndex&lt;/a&gt;&lt;/code&gt; - это перегруженная версия &lt;code&gt;&lt;a href=&quot;data-list#v:-33--33-&quot;&gt;!!&lt;/a&gt;&lt;/code&gt; , который принимает любое &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; значение в качестве индекса.</target>
        </trans-unit>
        <trans-unit id="737fc86009d880ef7008902e996d5561992367bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the number of repetitions to make.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt; - это перегруженная версия функции &lt;code&gt;&lt;a href=&quot;data-list#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; , которая принимает любое значение &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; в качестве количества выполняемых повторений.</target>
        </trans-unit>
        <trans-unit id="3402cafa3322e6ce9bc65e493a0acf1f2884672d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the position at which to split.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt; - это перегруженная версия &lt;code&gt;&lt;a href=&quot;data-list#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; , которая принимает любое значение &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; в качестве позиции, в которой выполняется разделение.</target>
        </trans-unit>
        <trans-unit id="f78c90a57d5cce824e07db93d2197f95aa21a155" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:genericTake&quot;&gt;genericTake&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the number of elements to take.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:genericTake&quot;&gt;genericTake&lt;/a&gt;&lt;/code&gt; - это перегруженная версия &lt;code&gt;&lt;a href=&quot;data-list#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; , которая принимает любое значение &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; в качестве количества принимаемых элементов.</target>
        </trans-unit>
        <trans-unit id="ca4d378c787c5b9b2a06ae77c402a921da5aae20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; function takes a list and returns a list of lists such that the concatenation of the result is equal to the argument. Moreover, each sublist in the result contains only equal elements. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; принимает список и возвращает список списков, так что объединение результата равно аргументу. Более того, каждый подсписок в результате содержит только равные элементы. Например,</target>
        </trans-unit>
        <trans-unit id="b33d3992fa75b8c5a7295f072191cef6471b5d58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;data-list#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a2aa0c2fff9d0cd85f48ee4e5c547b1e24beae0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; function returns all initial segments of the argument, shortest first. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; возвращает все начальные сегменты аргумента, сначала самые короткие. Например,</target>
        </trans-unit>
        <trans-unit id="e70f04ea60546783e780339c103b21d6a6b67467" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:intersect&quot;&gt;intersect&lt;/a&gt;&lt;/code&gt; function takes the list intersection of two lists. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:intersect&quot;&gt;intersect&lt;/a&gt;&lt;/code&gt; принимает пересечение двух списков. Например,</target>
        </trans-unit>
        <trans-unit id="a6dc46001b61fa48ad57e1c564b945db378bd949" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:intersectBy&quot;&gt;intersectBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:intersect&quot;&gt;intersect&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:intersectBy&quot;&gt;intersectBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия элемента &lt;code&gt;&lt;a href=&quot;data-list#v:intersect&quot;&gt;intersect&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1446aaefcfea8557eabaae6ea889f9011ff1bbe3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:isInfixOf&quot;&gt;isInfixOf&lt;/a&gt;&lt;/code&gt; function takes two lists and returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; iff the first list is contained, wholly and intact, anywhere within the second.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:isInfixOf&quot;&gt;isInfixOf&lt;/a&gt;&lt;/code&gt; принимает два списка и возвращает &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если первый список содержится целиком и без изменений где-нибудь во втором.</target>
        </trans-unit>
        <trans-unit id="8577e2ac2954a5de0cd6238c09ea92a58c9fb7f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:isSubsequenceOf&quot;&gt;isSubsequenceOf&lt;/a&gt;&lt;/code&gt; function takes two lists and returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if all the elements of the first list occur, in order, in the second. The elements do not have to occur consecutively.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:isSubsequenceOf&quot;&gt;isSubsequenceOf&lt;/a&gt;&lt;/code&gt; принимает два списка и возвращает &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если все элементы первого списка встречаются по порядку во втором. Элементы не обязательно должны располагаться последовательно.</target>
        </trans-unit>
        <trans-unit id="4a40ec49296ced12343a8fd18ca5c49b63aabe04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:isSuffixOf&quot;&gt;isSuffixOf&lt;/a&gt;&lt;/code&gt; function takes two lists and returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; iff the first list is a suffix of the second. The second list must be finite.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:isSuffixOf&quot;&gt;isSuffixOf&lt;/a&gt;&lt;/code&gt; принимает два списка и возвращает &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если первый список является суффиксом второго. Второй список должен быть конечным.</target>
        </trans-unit>
        <trans-unit id="1b34469353a0b037b47cce6d230cb4cb71110874" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a structure, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу структуры, передавая параметр накопления слева направо и возвращая окончательное значение этого аккумулятора вместе с новой структурой.</target>
        </trans-unit>
        <trans-unit id="b6ebf56806d59584f196cd5d11b8904d0639b1d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a structure, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу структуры, передавая параметр накопления справа налево и возвращая окончательное значение этого аккумулятора вместе с новой структурой.</target>
        </trans-unit>
        <trans-unit id="7eb6f6e78bb431c6ad213eb9d21c75fa95dc7ddf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt; function behaves just like &lt;code&gt;&lt;a href=&quot;data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt;, except it uses a user-supplied equality predicate instead of the overloaded &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt; ведет себя так же, как &lt;code&gt;&lt;a href=&quot;data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; , за исключением того, что в ней используется предикат равенства, предоставляемый пользователем, вместо перегруженной функции &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc7232b1ebffbebb739ba096d41e32596b9eedb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; function takes a predicate a list and returns the pair of lists of elements which do and do not satisfy the predicate, respectively; i.e.,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; принимает предикат список и возвращает пару списков элементов, которые удовлетворяют и не удовлетворяют предикату, соответственно; т.е.</target>
        </trans-unit>
        <trans-unit id="2b6ed649212daaa5b7d86c6ccef6bf66b085c1db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:permutations&quot;&gt;permutations&lt;/a&gt;&lt;/code&gt; function returns the list of all permutations of the argument.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:permutations&quot;&gt;permutations&lt;/a&gt;&lt;/code&gt; возвращает список всех перестановок аргумента.</target>
        </trans-unit>
        <trans-unit id="2f287658e3d55e31f32fe140091016332ce08537" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:product&quot;&gt;product&lt;/a&gt;&lt;/code&gt; function computes the product of the numbers of a structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:product&quot;&gt;product&lt;/a&gt;&lt;/code&gt; вычисляет произведение номеров конструкции.</target>
        </trans-unit>
        <trans-unit id="a463a93b298d3088c6a486752b752d20e4b0de19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; function implements a stable sorting algorithm. It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own comparison function.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; реализует стабильный алгоритм сортировки. Это частный случай &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; , который позволяет программисту предоставлять свою собственную функцию сравнения.</target>
        </trans-unit>
        <trans-unit id="095b73e07b36153b051dcf74ac3cefd56274581f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:sortBy&quot;&gt;sortBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;data-list#v:sort&quot;&gt;sort&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b88e9d47462c1b9615bcd7d7acc05eba51c65b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:subsequences&quot;&gt;subsequences&lt;/a&gt;&lt;/code&gt; function returns the list of all subsequences of the argument.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:subsequences&quot;&gt;subsequences&lt;/a&gt;&lt;/code&gt; возвращает список всех подпоследовательностей аргумента.</target>
        </trans-unit>
        <trans-unit id="eff98324d1a84c781b046e919d0b375a374d6a43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:sum&quot;&gt;sum&lt;/a&gt;&lt;/code&gt; function computes the sum of the numbers of a structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:sum&quot;&gt;sum&lt;/a&gt;&lt;/code&gt; вычисляет сумму номеров конструкции.</target>
        </trans-unit>
        <trans-unit id="ac33ccd64dfa538162e29b5368275ac3dcab2e9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; function transposes the rows and columns of its argument. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:transpose&quot;&gt;transpose&lt;/a&gt;&lt;/code&gt; перемещает строки и столбцы своего аргумента. Например,</target>
        </trans-unit>
        <trans-unit id="21074974ba0da203fdbe3139596e6c3eb82eacd7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; function is a `dual' to &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;: while &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; reduces a list to a summary value, &lt;code&gt;&lt;a href=&quot;data-list#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; builds a list from a seed value. The function takes the element and returns &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if it is done producing the list or returns &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt;&lt;code&gt;(a,b)&lt;/code&gt;, in which case, &lt;code&gt;a&lt;/code&gt; is a prepended to the list and &lt;code&gt;b&lt;/code&gt; is used as the next element in a recursive call. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; является двойной функцией &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; : в то время как &lt;code&gt;&lt;a href=&quot;ghc-list#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; сокращает список до итогового значения, &lt;code&gt;&lt;a href=&quot;data-list#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; строит список из начального значения. Функция принимает элемент и возвращает &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если она завершила создание списка, или возвращает &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; &lt;code&gt;(a,b)&lt;/code&gt; , и в этом случае &lt;code&gt;a&lt;/code&gt; добавляется к списку, а &lt;code&gt;b&lt;/code&gt; используется как следующий элемент в рекурсивном вызове. Например,</target>
        </trans-unit>
        <trans-unit id="6f5fe84f2f6e359d0b958ffdfd50c5ad6c942d08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; function returns the list union of the two lists. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; возвращает объединение двух списков. Например,</target>
        </trans-unit>
        <trans-unit id="26aa6f38df9eac11f0ca7ea5149a65e6f035439a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-list#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:unionBy&quot;&gt;unionBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;data-list#v:union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3512932a90bda2966b9c4bde2bc99fdaee65977a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:unzip3&quot;&gt;unzip3&lt;/a&gt;&lt;/code&gt; function takes a list of triples and returns three lists, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:unzip3&quot;&gt;unzip3&lt;/a&gt;&lt;/code&gt; принимает список троек и возвращает три списка, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="465b134f0e0674fc306964e8911a4c8f5a23b544" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:unzip4&quot;&gt;unzip4&lt;/a&gt;&lt;/code&gt; function takes a list of quadruples and returns four lists, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:unzip4&quot;&gt;unzip4&lt;/a&gt;&lt;/code&gt; берет список из четверок и возвращает четыре списка, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eab7f028c5e43e9c371d7627b6af73045109e75d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:unzip5&quot;&gt;unzip5&lt;/a&gt;&lt;/code&gt; function takes a list of five-tuples and returns five lists, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:unzip5&quot;&gt;unzip5&lt;/a&gt;&lt;/code&gt; принимает список из пяти кортежей и возвращает пять списков, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6934051d9d7b99ca14d42b993760a93edf9a7566" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:unzip6&quot;&gt;unzip6&lt;/a&gt;&lt;/code&gt; function takes a list of six-tuples and returns six lists, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:unzip6&quot;&gt;unzip6&lt;/a&gt;&lt;/code&gt; принимает список из шести кортежей и возвращает шесть списков, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="782bb3363a3945b001878329fde4ebb88dcb6fb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:unzip7&quot;&gt;unzip7&lt;/a&gt;&lt;/code&gt; function takes a list of seven-tuples and returns seven lists, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:unzip7&quot;&gt;unzip7&lt;/a&gt;&lt;/code&gt; принимает список из семи кортежей и возвращает семь списков, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17802af283250b2eaa32a2ecb8cb86776774ec7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zip4&quot;&gt;zip4&lt;/a&gt;&lt;/code&gt; function takes four lists and returns a list of quadruples, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zip4&quot;&gt;zip4&lt;/a&gt;&lt;/code&gt; принимает четыре списка и возвращает список из четырех элементов, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="6bce1a1341ac4dd8d73f1e68a1710aec2a623827" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zip5&quot;&gt;zip5&lt;/a&gt;&lt;/code&gt; function takes five lists and returns a list of five-tuples, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zip5&quot;&gt;zip5&lt;/a&gt;&lt;/code&gt; принимает пять списков и возвращает список из пяти кортежей, аналогичный &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="451d4d26a4f677865f2a3a707b38064fca9f4083" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zip6&quot;&gt;zip6&lt;/a&gt;&lt;/code&gt; function takes six lists and returns a list of six-tuples, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zip6&quot;&gt;zip6&lt;/a&gt;&lt;/code&gt; принимает шесть списков и возвращает список из шести кортежей, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="c305b363ee1ef77beb2a8edb13e3c0d40953e5c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zip7&quot;&gt;zip7&lt;/a&gt;&lt;/code&gt; function takes seven lists and returns a list of seven-tuples, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zip7&quot;&gt;zip7&lt;/a&gt;&lt;/code&gt; принимает семь списков и возвращает список из семи кортежей, аналогичный &lt;code&gt;&lt;a href=&quot;data-list#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="88779bb5c5d951c52ff0e703df09adaeddb2bdff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith3&quot;&gt;zipWith3&lt;/a&gt;&lt;/code&gt; function takes a function which combines three elements, as well as three lists and returns a list of their point-wise combination, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith3&quot;&gt;zipWith3&lt;/a&gt;&lt;/code&gt; принимает функцию, которая объединяет три элемента, а также три списка, и возвращает список их точечной комбинации, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="60ff42280ef2fd04c5a52b0fb6c4ced9f80d259b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith4&quot;&gt;zipWith4&lt;/a&gt;&lt;/code&gt; function takes a function which combines four elements, as well as four lists and returns a list of their point-wise combination, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith4&quot;&gt;zipWith4&lt;/a&gt;&lt;/code&gt; принимает функцию, которая объединяет четыре элемента, а также четыре списка и возвращает список их точечных комбинаций, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="9fb3b6d637e7bdf78afcd7364064abe2b747412a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith5&quot;&gt;zipWith5&lt;/a&gt;&lt;/code&gt; function takes a function which combines five elements, as well as five lists and returns a list of their point-wise combination, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith5&quot;&gt;zipWith5&lt;/a&gt;&lt;/code&gt; принимает функцию, которая объединяет пять элементов, а также пять списков, и возвращает список их точечных комбинаций, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="76824cb1a5c46cd7971e7c2fd78abbe2f0690804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith6&quot;&gt;zipWith6&lt;/a&gt;&lt;/code&gt; function takes a function which combines six elements, as well as six lists and returns a list of their point-wise combination, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith6&quot;&gt;zipWith6&lt;/a&gt;&lt;/code&gt; принимает функцию, которая объединяет шесть элементов, а также шесть списков, и возвращает список их точечной комбинации, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="c2eb2006a61b2e5916c9fa720bb30884f6a6a25d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith7&quot;&gt;zipWith7&lt;/a&gt;&lt;/code&gt; function takes a function which combines seven elements, as well as seven lists and returns a list of their point-wise combination, analogous to &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith7&quot;&gt;zipWith7&lt;/a&gt;&lt;/code&gt; принимает функцию, которая объединяет семь элементов, а также семь списков и возвращает список их точечной комбинации, аналогично &lt;code&gt;&lt;a href=&quot;data-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="657b1604cfab08f6d70ddcd61991924e84fa776b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:break&quot;&gt;break&lt;/a&gt; p&lt;/code&gt; function is equivalent to &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:span&quot;&gt;span&lt;/a&gt; (not . p)&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:break&quot;&gt;break&lt;/a&gt; p&lt;/code&gt; эквивалентна &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:span&quot;&gt;span&lt;/a&gt; (not . p)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee5bf1dc8f489bf35d33f57749203f70974c1fd9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; function takes a stream and returns a list of streams such that flattening the resulting list is equal to the argument. Moreover, each stream in the resulting list contains only equal elements. For example, in list notation:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; принимает поток и возвращает список потоков, так что сглаживание результирующего списка равно аргументу. Более того, каждый поток в результирующем списке содержит только равные элементы. Например, в обозначении списка:</target>
        </trans-unit>
        <trans-unit id="d4768abc565ec9f4747dd76eb1df6c5aed894777" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; function takes a stream &lt;code&gt;xs&lt;/code&gt; and returns all the finite prefixes of &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; принимает поток &lt;code&gt;xs&lt;/code&gt; и возвращает все конечные префиксы &lt;code&gt;xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37ce52036d19badb8eb3e19e52707cf238bc5e53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:isPrefixOf&quot;&gt;isPrefixOf&lt;/a&gt;&lt;/code&gt; function returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if the first argument is a prefix of the second.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:isPrefixOf&quot;&gt;isPrefixOf&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если первый аргумент является префиксом второго.</target>
        </trans-unit>
        <trans-unit id="bd9fc5f9beeabe2f81cfc9e7c5d9e742fa36f643" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function removes duplicate elements from a list. In particular, it keeps only the first occurrence of each element. (The name &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; means 'essence'.) It is a special case of &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own inequality test.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; удаляет повторяющиеся элементы из списка. В частности, он сохраняет только первое вхождение каждого элемента. (Название &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; означает &amp;laquo;сущность&amp;raquo;.) Это частный случай &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt; , который позволяет программисту предоставить свой собственный тест на неравенство.</target>
        </trans-unit>
        <trans-unit id="1fd2343fdb59771c84cb4f982c7246f3073f744d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt; function behaves just like &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt;, except it uses a user-supplied equality predicate instead of the overloaded &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt; ведет себя так же, как &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; , за исключением того, что в ней используется предикат равенства, предоставляемый пользователем, вместо перегруженной функции &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ca6a46f6f161da72b75fa2b96c21284bff63000" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; function takes a predicate &lt;code&gt;p&lt;/code&gt; and a stream &lt;code&gt;xs&lt;/code&gt;, and returns a pair of lists. The first list corresponds to the elements of &lt;code&gt;xs&lt;/code&gt; for which &lt;code&gt;p&lt;/code&gt; holds; the second corresponds to the elements of &lt;code&gt;xs&lt;/code&gt; for which &lt;code&gt;p&lt;/code&gt; does not hold.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; принимает предикат &lt;code&gt;p&lt;/code&gt; и поток &lt;code&gt;xs&lt;/code&gt; и возвращает пару списков. Первый список соответствует элементам &lt;code&gt;xs&lt;/code&gt; , для которых выполняется &lt;code&gt;p&lt;/code&gt; ; второй соответствует элементам &lt;code&gt;xs&lt;/code&gt; , для которых &lt;code&gt;p&lt;/code&gt; не выполняется.</target>
        </trans-unit>
        <trans-unit id="97f203f3e97c286860c77a16076e2c5ba5e804b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt; function takes a stream &lt;code&gt;xs&lt;/code&gt; and returns all the suffixes of &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:tails&quot;&gt;tails&lt;/a&gt;&lt;/code&gt; принимает поток &lt;code&gt;xs&lt;/code&gt; и возвращает все суффиксы &lt;code&gt;xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4b73a8b2bef137b1be451c67193ea1b9dd5278a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; function is analogous to &lt;a href=&quot;data-list&quot;&gt;Data.List&lt;/a&gt;'s &lt;code&gt;&lt;a href=&quot;data-list#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; функция аналогична &lt;a href=&quot;data-list&quot;&gt;Data.List&lt;/a&gt; &amp;laquo;s &lt;code&gt;&lt;a href=&quot;data-list#v:unfoldr&quot;&gt;unfoldr&lt;/a&gt;&lt;/code&gt; операции.</target>
        </trans-unit>
        <trans-unit id="2413c236691707253e811091fb05fcbb1bf0b562" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; function is the inverse of the &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; - это обратная функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce09038022ed3cd501096c0d8a1d4d43ab363fc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; function takes two streams and returns a stream of corresponding pairs.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; принимает два потока и возвращает поток соответствующих пар.</target>
        </trans-unit>
        <trans-unit id="f10666c8af44a76f18b1cbb206ccc5dbbcf92fdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; function generalizes &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt;. Rather than tupling the elements, the elements are combined using the function passed as the first argument.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; обобщает &lt;code&gt;&lt;a href=&quot;data-list-nonempty#v:zip&quot;&gt;zip&lt;/a&gt;&lt;/code&gt; . Вместо того, чтобы выбирать элементы, элементы объединяются с использованием функции, переданной в качестве первого аргумента.</target>
        </trans-unit>
        <trans-unit id="16a4e90fc05f7eb7703f8d38de0941aad54680ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt; k v&lt;/code&gt; type represents a finite map (sometimes called a dictionary) from keys of type &lt;code&gt;k&lt;/code&gt; to values of type &lt;code&gt;v&lt;/code&gt;. A &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; is strict in its keys but lazy in its values.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt; k v&lt;/code&gt; представляет собой конечную карту (иногда называемую словарем) от ключей типа &lt;code&gt;k&lt;/code&gt; до значений типа &lt;code&gt;v&lt;/code&gt; . У &lt;code&gt;&lt;a href=&quot;data-map-lazy#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; строгие ключи, но ленивые значения.</target>
        </trans-unit>
        <trans-unit id="4715b3b3e03f7ebfbfad3ed60bdf0126093bd7fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; functions are shared by the lazy and strict modules. Only the choice of merge tactics determines strictness. If you use &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;data-map-merge-strict&quot;&gt;Data.Map.Merge.Strict&lt;/a&gt; then the results will be forced before they are inserted. If you use &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; from this module then they will not.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; используются модулями lazy и strict. Только выбор тактики слияния определяет строгость. Если вы используете &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; из &lt;a href=&quot;data-map-merge-strict&quot;&gt;Data.Map.Merge.Strict,&lt;/a&gt; тогда результаты будут принудительно перед вставкой . Если вы используете &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; из этого модуля, они не будут.</target>
        </trans-unit>
        <trans-unit id="2b155238023fcafca6284b024ed0af65f6650208" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; functions are shared by the lazy and strict modules. Only the choice of merge tactics determines strictness. If you use &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; from this module then the results will be forced before they are inserted. If you use &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; from &lt;a href=&quot;data-map-merge-lazy&quot;&gt;Data.Map.Merge.Lazy&lt;/a&gt; then they will not.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:merge&quot;&gt;merge&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mergeA&quot;&gt;mergeA&lt;/a&gt;&lt;/code&gt; используются модулями lazy и strict. Только выбор тактики слияния определяет строгость. Если вы используете &lt;code&gt;&lt;a href=&quot;data-map-merge-strict#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; из этого модуля, результаты будут принудительно перед вставкой . Если вы используете &lt;code&gt;&lt;a href=&quot;data-map-merge-lazy#v:mapMissing&quot;&gt;mapMissing&lt;/a&gt;&lt;/code&gt; из &lt;a href=&quot;data-map-merge-lazy&quot;&gt;Data.Map.Merge.Lazy,&lt;/a&gt; тогда они не будут.</target>
        </trans-unit>
        <trans-unit id="662c04a7a17ee001eac580254bab8523defdb93a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt; k v&lt;/code&gt; type represents a finite map (sometimes called a dictionary) from keys of type &lt;code&gt;k&lt;/code&gt; to values of type &lt;code&gt;v&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt; k v&lt;/code&gt; представляет собой конечную карту (иногда называемую словарем) от ключей типа &lt;code&gt;k&lt;/code&gt; до значений типа &lt;code&gt;v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12662a5070f04b0d43497ea05090a5128c804911" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; type is shared between the lazy and strict modules, meaning that the same &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; value can be passed to functions in both modules. This means that the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instances are the same as for the &lt;a href=&quot;data-map-lazy&quot;&gt;Data.Map.Lazy&lt;/a&gt; module, so if they are used the resulting maps may contain suspended values (thunks).</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; является общим для ленивых и строгих модулей, что означает, что одно и то же значение &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; может быть передано функциям в обоих модулях. Это означает, что экземпляры &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-functor#v:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-traversable#v:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; такие же, как и для модуля &lt;a href=&quot;data-map-lazy&quot;&gt;Data.Map.Lazy&lt;/a&gt; , поэтому, если они используются, результирующие карты могут содержать приостановленные значения (преобразователи).</target>
        </trans-unit>
        <trans-unit id="80a0485ade9c643df5c2ea0bf0c47d55fb54166e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; type is shared between the lazy and strict modules, meaning that the same &lt;code&gt;&lt;a href=&quot;data-map-strict#t:Map&quot;&gt;Map&lt;/a&gt;&lt;/code&gt; value can be passed to functions in both modules. This means that the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-functor#v:Functor&quot;&gt;Functor&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-traversable#v:Traversable&quot;&gt;Traversable&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-data#v:Data&quot;&gt;Data&lt;/a&gt;&lt;/code&gt; instances are the same as for the &lt;a href=&quot;data-map-lazy&quot;&gt;Data.Map.Lazy&lt;/a&gt; module, so if they are used the resulting maps may contain suspended values (thunks).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f52f3aa69ba900643917df0d514ebfe7065396f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; type encapsulates an optional value. A value of type &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a&lt;/code&gt; either contains a value of type &lt;code&gt;a&lt;/code&gt; (represented as &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt;), or it is empty (represented as &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;). Using &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; is a good way to deal with errors or exceptional cases without resorting to drastic measures such as &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; инкапсулирует необязательное значение. Значение типа &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a&lt;/code&gt; либо содержит значение типа &lt;code&gt;a&lt;/code&gt; (представленное как &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; ), либо оно пустое (представлено как &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; ). Использование &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; - хороший способ справиться с ошибками или исключительными случаями, не прибегая к таким радикальным мерам, как &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f185e83cdbbc510aa029904011adfe83bd8b1220" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; type is also a monad. It is a simple kind of error monad, where all errors are represented by &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;. A richer error monad can be built using the &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; - тоже монада. Это простая монада ошибок, в которой все ошибки представлены &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; . Более богатая монада ошибок может быть построена с &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; типа Either .</target>
        </trans-unit>
        <trans-unit id="e8aa4a4fc49f7638e33b52125beaf5389284d595" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:catMaybes&quot;&gt;catMaybes&lt;/a&gt;&lt;/code&gt; function takes a list of &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;s and returns a list of all the &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; values.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-maybe#v:catMaybes&quot;&gt;catMaybes&lt;/a&gt;&lt;/code&gt; принимает список значений &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; и возвращает список всех значений &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e3cc1728b8d32e7bd6e33d7191898329f389751" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:fromJust&quot;&gt;fromJust&lt;/a&gt;&lt;/code&gt; function extracts the element out of a &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; and throws an error if its argument is &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-maybe#v:fromJust&quot;&gt;fromJust&lt;/a&gt;&lt;/code&gt; извлекает элемент из &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; и выдает ошибку, если ее аргумент равен &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de4cf2aa7df453c08de73e06681e00b3a9d47c30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:fromMaybe&quot;&gt;fromMaybe&lt;/a&gt;&lt;/code&gt; function takes a default value and and &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; value. If the &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, it returns the default values; otherwise, it returns the value contained in the &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-maybe#v:fromMaybe&quot;&gt;fromMaybe&lt;/a&gt;&lt;/code&gt; принимает значение по умолчанию и значение &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; . Если &amp;laquo; &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; равно &amp;laquo; &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , он возвращает значения по умолчанию; в противном случае возвращается значение, содержащееся в поле &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a5a7a323996766db88ca0c88884029bb8a6704d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:isJust&quot;&gt;isJust&lt;/a&gt;&lt;/code&gt; function returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; iff its argument is of the form &lt;code&gt;Just _&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-maybe#v:isJust&quot;&gt;isJust&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если ее аргумент имеет форму &lt;code&gt;Just _&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52483bf501d37712c976868bb9284af355744fac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:isNothing&quot;&gt;isNothing&lt;/a&gt;&lt;/code&gt; function returns &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; iff its argument is &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-maybe#v:isNothing&quot;&gt;isNothing&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если ее аргумент равен &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eee25b35452f5d1cfc414313539edda0a7120764" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:listToMaybe&quot;&gt;listToMaybe&lt;/a&gt;&lt;/code&gt; function returns &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; on an empty list or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; where &lt;code&gt;a&lt;/code&gt; is the first element of the list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-maybe#v:listToMaybe&quot;&gt;listToMaybe&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; в пустом списке или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; где &lt;code&gt;a&lt;/code&gt; является первым элементом списка.</target>
        </trans-unit>
        <trans-unit id="d9226f117113df71e3656c9e6013ce6d6bf13f04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:mapMaybe&quot;&gt;mapMaybe&lt;/a&gt;&lt;/code&gt; function is a version of &lt;code&gt;&lt;a href=&quot;ghc-list#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; which can throw out elements. In particular, the functional argument returns something of type &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; b&lt;/code&gt;. If this is &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, no element is added on to the result list. If it is &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; b&lt;/code&gt;, then &lt;code&gt;b&lt;/code&gt; is included in the result list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-maybe#v:mapMaybe&quot;&gt;mapMaybe&lt;/a&gt;&lt;/code&gt; - это версия &lt;code&gt;&lt;a href=&quot;ghc-list#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; которая может выбрасывать элементы. В частности, функциональный аргумент возвращает что-то типа &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; b&lt;/code&gt; . Если это &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , в список результатов не добавляется никаких элементов. Если это &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; b&lt;/code&gt; , то &lt;code&gt;b&lt;/code&gt; включается в список результатов.</target>
        </trans-unit>
        <trans-unit id="85d0ce65a11dff7a785fa5be5465e4febfc6e9a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:maybe&quot;&gt;maybe&lt;/a&gt;&lt;/code&gt; function takes a default value, a function, and a &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; value. If the &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; value is &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, the function returns the default value. Otherwise, it applies the function to the value inside the &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; and returns the result.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-maybe#v:maybe&quot;&gt;maybe&lt;/a&gt;&lt;/code&gt; функция принимает значение по умолчанию, функцию и &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; значение. Если значение &lt;code&gt;&lt;a href=&quot;data-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; равно &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , функция возвращает значение по умолчанию. В противном случае он применяет функцию к значению внутри &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; и возвращает результат.</target>
        </trans-unit>
        <trans-unit id="5c611fd7648ec2451334092c9df4afb5e19ad5d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-maybe#v:maybeToList&quot;&gt;maybeToList&lt;/a&gt;&lt;/code&gt; function returns an empty list when given &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; or a singleton list when given &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-maybe#v:maybeToList&quot;&gt;maybeToList&lt;/a&gt;&lt;/code&gt; возвращает пустой список, если задано &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , или одноэлементный список, если задано &lt;code&gt;&lt;a href=&quot;data-maybe#v:Just&quot;&gt;Just&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="795a9f9783333374a76593a231e073666138ebda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-monoid#t:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; monoid is defined by the numerical addition operator and `0` as neutral element:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-monoid#t:Sum&quot;&gt;Sum&lt;/a&gt;&lt;/code&gt; моноид определяются численным оператором сложения и '0' в качестве нейтрального элемента:</target>
        </trans-unit>
        <trans-unit id="9acde1593d8ad750d5ecbfa06d97960b56f05f43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt;&lt;/code&gt; type allows you to reverse sort order conveniently. A value of type &lt;code&gt;&lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt; a&lt;/code&gt; contains a value of type &lt;code&gt;a&lt;/code&gt; (represented as &lt;code&gt;&lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt; a&lt;/code&gt;). If &lt;code&gt;a&lt;/code&gt; has an &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance associated with it then comparing two values thus wrapped will give you the opposite of their normal sort order. This is particularly useful when sorting in generalised list comprehensions, as in: &lt;code&gt;then sortWith by &lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt; x&lt;/code&gt;</source>
          <target state="translated">Тип &amp;laquo; &lt;code&gt;&lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt;&lt;/code&gt; &amp;raquo; позволяет удобно менять порядок сортировки на обратный. Значение типа &lt;code&gt;&lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt; a&lt;/code&gt; содержит значение типа &lt;code&gt;a&lt;/code&gt; (представленное как &lt;code&gt;&lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt; a&lt;/code&gt; ). Если имеет &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; экземпляр , связанный с ним , то сравнение двух значений , таким образом , обернутые даст вам противоположное их нормального порядка сортировки. Это особенно полезно при сортировке в обобщенных представлениях списка, например: &lt;code&gt;then sortWith by &lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt; x&lt;/code&gt; &lt;a href=&quot;data-ord#t:Down&quot;&gt;Down&lt;/a&gt; x &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d480aba9ca8f558b9bab4a7470c617258413273" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; class is used for totally ordered datatypes.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; используется для полностью упорядоченных типов данных.</target>
        </trans-unit>
        <trans-unit id="9743e6ce1ccca02d84b310e0c03e3b64b006ece2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Min&quot;&gt;Min&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; instance for &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is defined to always pick the smaller number: &amp;gt;&amp;gt;&amp;gt; Min 1 &amp;lt;&amp;gt; Min 2 &amp;lt;&amp;gt; Min 3 &amp;lt;&amp;gt; Min 4 :: Min Int Min {getMin = 1}</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-semigroup#t:Min&quot;&gt;Min&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;data-semigroup#t:Semigroup&quot;&gt;Semigroup&lt;/a&gt;&lt;/code&gt; экземпляр для &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; определяется всегда выбирают меньшее число: &amp;gt;&amp;gt;&amp;gt; Min 1 &amp;lt;&amp;gt; Минимум 2 &amp;lt;&amp;gt; Минимум 3 &amp;lt;&amp;gt; Мин 4 :: Мин Int Мин {getMin = 1}</target>
        </trans-unit>
        <trans-unit id="d415a40b49223b304b71b398a708eb25f07e68ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a&lt;/code&gt; type represents a finite sequence of values of type &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-sequence#t:Seq&quot;&gt;Seq&lt;/a&gt; a&lt;/code&gt; представляет собой конечную последовательность значений типа &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13ce1c3f2600f3e2f50834c056ec8fa70e4eab37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt; e&lt;/code&gt; type represents a set of elements of type &lt;code&gt;e&lt;/code&gt;. Most operations require that &lt;code&gt;e&lt;/code&gt; be an instance of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; class. A &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; is strict in its elements.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt; e&lt;/code&gt; представляет собой набор элементов типа &lt;code&gt;e&lt;/code&gt; . Для большинства операций требуется, чтобы &lt;code&gt;e&lt;/code&gt; был экземпляром класса &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; строг в своих элементах.</target>
        </trans-unit>
        <trans-unit id="1038dcfb90af9b5c0cfcdb7ab1311da4e5ed3150" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt; e&lt;/code&gt; type represents a set of elements of type &lt;code&gt;e&lt;/code&gt;. Most operations require that &lt;code&gt;e&lt;/code&gt; be an instance of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; class. A &lt;code&gt;&lt;a href=&quot;data-set#t:Set&quot;&gt;Set&lt;/a&gt;&lt;/code&gt; is strict in its elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8881e3fb681798d7bf981e8e9d449509800437b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; type is implemented using arrays that are not guaranteed to have a fixed address in the Haskell heap. All communication with native code must thus occur by copying data back and forth.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; реализован с использованием массивов, для которых не гарантируется наличие фиксированного адреса в куче Haskell. Таким образом, вся связь с машинным кодом должна происходить путем копирования данных туда и обратно.</target>
        </trans-unit>
        <trans-unit id="9d9c2733ed15ccf0d235e8a6b100f93fe8426bb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; type's internal representation is UTF-16, using the platform's native endianness. This makes copied data suitable for use with native libraries that use a similar representation, such as ICU. To interoperate with native libraries that use different internal representations, such as UTF-8 or UTF-32, consider using the functions in the &lt;code&gt;&lt;a href=&quot;data-text#v:Encoding&quot;&gt;Encoding&lt;/a&gt;&lt;/code&gt; module.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; внутреннее представление Type является UTF-16, используя родной порядок байтов платформы. Это делает скопированные данные пригодными для использования с собственными библиотеками, которые используют аналогичное представление, например ICU. Для взаимодействия с собственными библиотеками, которые используют различные внутренние представления, такие как UTF-8 или UTF-32, рассмотрите возможность использования функций в модуле &lt;code&gt;&lt;a href=&quot;data-text#v:Encoding&quot;&gt;Encoding&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="161f7f591d2f56a095b5a6738fe11dc948f83c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-text#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and a strict &lt;code&gt;&lt;a href=&quot;data-text#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;. Performs replacement on invalid scalar values.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-text#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-text#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и строгого &lt;code&gt;&lt;a href=&quot;data-text#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; , передавая параметр накопления справа налево и возвращая окончательное значение этого аккумулятора вместе с новым &lt;code&gt;&lt;a href=&quot;data-text#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; . Выполняет замену недопустимых скалярных значений.</target>
        </trans-unit>
        <trans-unit id="c5823a0c22eaaaf0e0d80ffbc2bbde448d239204" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; constructor is exposed since &lt;code&gt;text-1.1.1.3&lt;/code&gt;</source>
          <target state="translated">Конструктор &lt;code&gt;&lt;a href=&quot;data-text-array#t:Array&quot;&gt;Array&lt;/a&gt;&lt;/code&gt; &lt;code&gt;text-1.1.1.3&lt;/code&gt; с text-1.1.1.3</target>
        </trans-unit>
        <trans-unit id="7d764c078d54b6747b82b1fb65bc90cbfdc33a9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-array#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; constructor is exposed since &lt;code&gt;text-1.1.1.3&lt;/code&gt;</source>
          <target state="translated">Конструктор &lt;code&gt;&lt;a href=&quot;data-text-array#t:MArray&quot;&gt;MArray&lt;/a&gt;&lt;/code&gt; доступен с &lt;code&gt;text-1.1.1.3&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7e4b96f6778d5f3fbaa9eb0f8c186a8f261148c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:streamDecodeUtf8&quot;&gt;streamDecodeUtf8&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:streamDecodeUtf8With&quot;&gt;streamDecodeUtf8With&lt;/a&gt;&lt;/code&gt; functions accept a &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; that represents a possibly incomplete input (e.g. a packet from a network stream) that may not end on a UTF-8 boundary.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:streamDecodeUtf8&quot;&gt;streamDecodeUtf8&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-text-encoding#v:streamDecodeUtf8With&quot;&gt;streamDecodeUtf8With&lt;/a&gt;&lt;/code&gt; принимают &lt;code&gt;&lt;a href=&quot;../bytestring-0.10.10.0/data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; , представляющую возможно неполный ввод (например, пакет из сетевого потока), который может не заканчиваться на границе UTF-8.</target>
        </trans-unit>
        <trans-unit id="d8de0eaf04140ba7158dddc8d0be85ce0ccccc4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; function takes a predicate and a stream and returns the index of the first element in the stream satisfying the predicate.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; принимает предикат и поток и возвращает индекс первого элемента в потоке, удовлетворяющего предикату.</target>
        </trans-unit>
        <trans-unit id="bf384e38dd6fd9c82df77df8975246cdedc34701" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:findIndexI&quot;&gt;findIndexI&lt;/a&gt;&lt;/code&gt; function takes a predicate and a stream and returns the index of the first element in the stream satisfying the predicate.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-common#v:findIndexI&quot;&gt;findIndexI&lt;/a&gt;&lt;/code&gt; принимает предикат и поток и возвращает индекс первого элемента в потоке, удовлетворяющего предикату.</target>
        </trans-unit>
        <trans-unit id="ee94ea37dfd7850ffc9a486e3dd92c091c5cbec7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;n&lt;/code&gt; code points.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; по &lt;code&gt;n&lt;/code&gt; кодовых точек.</target>
        </trans-unit>
        <trans-unit id="66da5760dab680492ae3a48dc3a35550be6dc4df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; of the given code point.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-internal-fusion-size#t:Size&quot;&gt;Size&lt;/a&gt;&lt;/code&gt; данной точки коды.</target>
        </trans-unit>
        <trans-unit id="a75e1f66c9b008e7ba6ff420a20501b8af837a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-io#v:interact&quot;&gt;interact&lt;/a&gt;&lt;/code&gt; function takes a function of type &lt;code&gt;Text -&amp;gt; Text&lt;/code&gt; as its argument. The entire input from the standard input device is passed to this function as its argument, and the resulting string is output on the standard output device.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-text-io#v:interact&quot;&gt;interact&lt;/a&gt;&lt;/code&gt; принимает в качестве аргумента функцию типа &lt;code&gt;Text -&amp;gt; Text&lt;/code&gt; . Весь ввод от стандартного устройства ввода передается этой функции в качестве аргумента, а результирующая строка выводится на стандартное устройство вывода.</target>
        </trans-unit>
        <trans-unit id="b417d4f678288b71d35accb0f99175761f3e1e07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; function reads a file and returns the contents of the file as a string. The entire file is read strictly, as with &lt;code&gt;&lt;a href=&quot;data-text-io#v:getContents&quot;&gt;getContents&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-text-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; считывает файл и возвращает содержимое файла в виде строки. Весь файл читается строго, как и в случае с &lt;code&gt;&lt;a href=&quot;data-text-io#v:getContents&quot;&gt;getContents&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68615baf25b8a5dabb727f9a05e4f69c95e23d72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; function takes a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; and returns a list of &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;s such that the concatenation of the result is equal to the argument. Moreover, each sublist in the result contains only equal elements. For example,</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-text-lazy#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; функция принимает &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; и возвращает список &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; s такого , что конкатенация результата равна аргументу. Более того, каждый подсписок в результате содержит только равные элементы. Например,</target>
        </trans-unit>
        <trans-unit id="448dca813f1fb16bef7c7de2c7c5fae5b0a093ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bea18231a8f3d26a5fe0119fe32dfbafea55d681" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; and a strict &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;. Performs replacement on invalid scalar values.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; и строгого &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; , передавая параметр накопления справа налево и возвращая окончательное значение этого аккумулятора вместе с новым &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; . Выполняет замену недопустимых скалярных значений.</target>
        </trans-unit>
        <trans-unit id="1a76ea813e8c21de4f80acb76647bc2ec24349f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-text-lazy-io#v:interact&quot;&gt;interact&lt;/a&gt;&lt;/code&gt; function takes a function of type &lt;code&gt;Text -&amp;gt; Text&lt;/code&gt; as its argument. The entire input from the standard input device is passed (lazily) to this function as its argument, and the resulting string is output on the standard output device.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-text-lazy-io#v:interact&quot;&gt;interact&lt;/a&gt;&lt;/code&gt; принимает в качестве аргумента функцию типа &lt;code&gt;Text -&amp;gt; Text&lt;/code&gt; . Весь ввод со стандартного устройства ввода передается (лениво) в эту функцию в качестве аргумента, а результирующая строка выводится на стандартное устройство вывода.</target>
        </trans-unit>
        <trans-unit id="0f4eb06ba150dfea2048571ec4f24a657175124e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a structure, passing an accumulating parameter from left to right, and returning a final value of this accumulator together with the new structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapAccumL&quot;&gt;mapAccumL&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldl&quot;&gt;foldl&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу структуры, передавая параметр накопления слева направо и возвращая окончательное значение этого аккумулятора вместе с новой структурой.</target>
        </trans-unit>
        <trans-unit id="7d943aed90068948d72a0d5858ba1b7944e9decb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; function behaves like a combination of &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt;; it applies a function to each element of a structure, passing an accumulating parameter from right to left, and returning a final value of this accumulator together with the new structure.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;data-traversable#v:mapAccumR&quot;&gt;mapAccumR&lt;/a&gt;&lt;/code&gt; ведет себя как комбинация &lt;code&gt;&lt;a href=&quot;data-functor#v:fmap&quot;&gt;fmap&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-foldable#v:foldr&quot;&gt;foldr&lt;/a&gt;&lt;/code&gt; ; он применяет функцию к каждому элементу структуры, передавая параметр накопления справа налево и возвращая окончательное значение этого аккумулятора вместе с новой структурой.</target>
        </trans-unit>
        <trans-unit id="6a5f7c77832ccee5dc8f444bf10cb820686c5a90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-tree#t:Forest&quot;&gt;Forest&lt;/a&gt; a&lt;/code&gt; type represents a forest of &lt;code&gt;&lt;a href=&quot;data-tree#t:Tree&quot;&gt;Tree&lt;/a&gt; a&lt;/code&gt;s.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-tree#t:Forest&quot;&gt;Forest&lt;/a&gt; a&lt;/code&gt; представляет собой лес &lt;code&gt;&lt;a href=&quot;data-tree#t:Tree&quot;&gt;Tree&lt;/a&gt; a&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="4dde0b10b0f433f8901cc6d31ae5f25b888075e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-tree#t:Tree&quot;&gt;Tree&lt;/a&gt; a&lt;/code&gt; type represents a lazy, possibly infinite, multi-way tree (also known as a &lt;em&gt;rose tree&lt;/em&gt;).</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;data-tree#t:Tree&quot;&gt;Tree&lt;/a&gt; a&lt;/code&gt; представляет собой ленивое, возможно, бесконечное, многостороннее дерево (также известное как &lt;em&gt;розовое дерево&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="8007180e7dc5a974039c84bcb837081428c5c9da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;data-typeable#t:Typeable&quot;&gt;Typeable&lt;/a&gt;&lt;/code&gt; class reifies types to some extent by associating type representations to types. These type representations can be compared, and one can in turn define a type-safe cast operation. To this end, an unsafe cast is guarded by a test for type (representation) equivalence. The module &lt;a href=&quot;data-dynamic&quot;&gt;Data.Dynamic&lt;/a&gt; uses Typeable for an implementation of dynamics. The module &lt;a href=&quot;data-data&quot;&gt;Data.Data&lt;/a&gt; uses Typeable and type-safe cast (but not dynamics) to support the &quot;Scrap your boilerplate&quot; style of generic programming.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;data-typeable#t:Typeable&quot;&gt;Typeable&lt;/a&gt;&lt;/code&gt; класс материализует типов в некоторой степени, сопоставляя представления типа типам. Эти представления типов можно сравнивать и, в свою очередь, определять безопасную для типов операцию приведения. С этой целью небезопасное приведение охраняется тестом на эквивалентность типа (представления). Модуль &lt;a href=&quot;data-dynamic&quot;&gt;Data.Dynamic&lt;/a&gt; использует Typeable для реализации динамики. Модуль &lt;a href=&quot;data-data&quot;&gt;Data.Data&lt;/a&gt; использует типизируемое и безопасное для типов приведение (но не динамическое) для поддержки стиля универсального программирования &amp;laquo;Избавьтесь от шаблона&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d043229d0aba230c46b619f1751b3e8e83785014" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; function outputs the trace message given as its first argument, before returning the second argument as its result.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; выводит сообщение трассировки, указанное в качестве ее первого аргумента, перед возвращением второго аргумента в качестве результата.</target>
        </trans-unit>
        <trans-unit id="140721e416adc2345c2c2facce319e06db5e38ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; function should &lt;em&gt;only&lt;/em&gt; be used for debugging, or for monitoring execution. The function is not referentially transparent: its type indicates that it is a pure function but it has the side effect of outputting the trace message.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; функция должна &lt;em&gt;только&lt;/em&gt; использоваться для отладки или для контроля исполнения. Функция не является ссылочно прозрачной: ее тип указывает, что это чистая функция, но имеет побочный эффект вывода сообщения трассировки.</target>
        </trans-unit>
        <trans-unit id="605bec91baff60047b066d4e1ac30c1faa493023" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceShow&quot;&gt;traceShow&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; functions print messages to an output stream. They are intended for &quot;printf debugging&quot;, that is: tracing the flow of execution and printing interesting values.</source>
          <target state="translated">Функции &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceShow&quot;&gt;traceShow&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; выводят сообщения в выходной поток. Они предназначены для &amp;laquo;отладки printf&amp;raquo;, то есть отслеживания потока выполнения и вывода интересных значений.</target>
        </trans-unit>
        <trans-unit id="a88df11e31fce4c7204e009946e93a681d719b46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEvent&quot;&gt;traceEvent&lt;/a&gt;&lt;/code&gt; function behaves like &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; with the difference that the message is emitted to the eventlog, if eventlog profiling is available and enabled at runtime.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEvent&quot;&gt;traceEvent&lt;/a&gt;&lt;/code&gt; ведет себя как &lt;code&gt;&lt;a href=&quot;debug-trace#v:trace&quot;&gt;trace&lt;/a&gt;&lt;/code&gt; с той разницей, что сообщение отправляется в журнал событий , если профилирование журнала событий доступно и включено во время выполнения.</target>
        </trans-unit>
        <trans-unit id="49d4ea0d4504acbc4d1aca32b1293ddbe4063444" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEventIO&quot;&gt;traceEventIO&lt;/a&gt;&lt;/code&gt; function emits a message to the eventlog, if eventlog profiling is available and enabled at runtime.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceEventIO&quot;&gt;traceEventIO&lt;/a&gt;&lt;/code&gt; отправляет сообщение в журнал событий , если профилирование журнала событий доступно и включено во время выполнения.</target>
        </trans-unit>
        <trans-unit id="b3a4eae130c3225cefb9efb90d8be9b83b521fab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; function outputs the trace message from the IO monad. This sequences the output with respect to other IO actions.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceIO&quot;&gt;traceIO&lt;/a&gt;&lt;/code&gt; выводит сообщение трассировки от монады ввода-вывода. Это упорядочивает вывод по отношению к другим действиям ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="d97ccf67a57dfd415eb74011cb7d1b6a77ff69bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceMarker&quot;&gt;traceMarker&lt;/a&gt;&lt;/code&gt; function emits a marker to the eventlog, if eventlog profiling is available and enabled at runtime. The &lt;code&gt;String&lt;/code&gt; is the name of the marker. The name is just used in the profiling tools to help you keep clear which marker is which.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceMarker&quot;&gt;traceMarker&lt;/a&gt;&lt;/code&gt; отправляет маркер в журнал событий , если профилирование журнала событий доступно и включено во время выполнения. &lt;code&gt;String&lt;/code&gt; это имя маркера. Название просто используется в инструментах профилирования, чтобы помочь вам понять, какой маркер какой.</target>
        </trans-unit>
        <trans-unit id="fa771e47c5e0835b60259fdc80c34fd55cfa3c38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceMarkerIO&quot;&gt;traceMarkerIO&lt;/a&gt;&lt;/code&gt; function emits a marker to the eventlog, if eventlog profiling is available and enabled at runtime.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;debug-trace#v:traceMarkerIO&quot;&gt;traceMarkerIO&lt;/a&gt;&lt;/code&gt; отправляет маркер в журнал событий , если профилирование журнала событий доступно и включено во время выполнения.</target>
        </trans-unit>
        <trans-unit id="65a90e57ddce6b3095e1eb053172e0add59b8b87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; is parameterised in the same way as &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt;. The type argument of &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; should normally be an instance of class &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; параметризуется таким же образом , как &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; . Аргумент типа &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; обычно должен быть экземпляром класса &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47f829e4b12e19d9b1b9c867b798c3d41bfa7cc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; type and operations. This module is part of the Foreign Function Interface (FFI) and will usually be imported via the &lt;a href=&quot;foreign&quot;&gt;Foreign&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; типа и операции. Этот модуль является частью интерфейса внешних функций (FFI) и обычно импортируется через &lt;a href=&quot;foreign&quot;&gt;внешний&lt;/a&gt; модуль.</target>
        </trans-unit>
        <trans-unit id="4fea14f33688c221cc4b82a2e64457f2c1daf4c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; is parameterised in the same way as &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt;. The type argument of &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; should normally be an instance of class &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; параметризуется таким же образом , как &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; . Аргумент типа &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; обычно должен быть экземпляром класса &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46ba37e75544b376d91afd7d94cc178e3d4edd60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; type and operations. This module is part of the Foreign Function Interface (FFI) and will usually be imported via the &lt;a href=&quot;foreign&quot;&gt;Foreign&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; типа и операции. Этот модуль является частью интерфейса внешних функций (FFI) и обычно импортируется через &lt;a href=&quot;foreign&quot;&gt;внешний&lt;/a&gt; модуль.</target>
        </trans-unit>
        <trans-unit id="05673b670d8de49659d7ca54ef48d3649d1c6cc9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:castPtr&quot;&gt;castPtr&lt;/a&gt;&lt;/code&gt; function casts a pointer from one type to another.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;foreign-ptr#v:castPtr&quot;&gt;castPtr&lt;/a&gt;&lt;/code&gt; переводит указатель от одного типа к другому.</target>
        </trans-unit>
        <trans-unit id="f4a69e977af812c4c1901ff0ace0b2bb4a9d9dd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-arr#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; class is used to map a contiguous subrange of values in a type onto integers. It is used primarily for array indexing (see the array package).</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;ghc-arr#t:Ix&quot;&gt;Ix&lt;/a&gt;&lt;/code&gt; используется для отображения непрерывного поддиапазона значений в типе на целые числа. Он используется в основном для индексации массивов (см. Пакет с массивами).</target>
        </trans-unit>
        <trans-unit id="e348453b816674bfaf92baa8a27076b87c3aa9bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-arr#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; function deals with repeated indices in the association list using an &lt;em&gt;accumulating function&lt;/em&gt; which combines the values of associations with the same index.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-arr#v:accumArray&quot;&gt;accumArray&lt;/a&gt;&lt;/code&gt; обрабатывает повторяющиеся индексы в списке ассоциаций, используя функцию &lt;em&gt;накопления,&lt;/em&gt; которая объединяет значения ассоциаций с одним и тем же индексом.</target>
        </trans-unit>
        <trans-unit id="7873c676664db92e7ab0f598d2d48e71762b5260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; class defines the basic operations over a &lt;em&gt;monad&lt;/em&gt;, a concept from a branch of mathematics known as &lt;em&gt;category theory&lt;/em&gt;. From the perspective of a Haskell programmer, however, it is best to think of a monad as an &lt;em&gt;abstract datatype&lt;/em&gt; of actions. Haskell's &lt;code&gt;do&lt;/code&gt; expressions provide a convenient syntax for writing monadic expressions.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;ghc-base#t:Monad&quot;&gt;Monad&lt;/a&gt;&lt;/code&gt; определяет основные операции над &lt;em&gt;монадой&lt;/em&gt; - концепцию из раздела математики, известного как &lt;em&gt;теория категорий&lt;/em&gt; . Однако с точки зрения программиста на Haskell лучше всего рассматривать монаду как &lt;em&gt;абстрактный тип данных&lt;/em&gt; действий. Выражения &lt;code&gt;do&lt;/code&gt; в Haskell обеспечивают удобный синтаксис для написания монадических выражений.</target>
        </trans-unit>
        <trans-unit id="ee50bbd3c67bae7f49e378336e2e433f6106ccf0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-base#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; function is the conventional monad join operator. It is used to remove one level of monadic structure, projecting its bound argument into the outer level.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-base#v:join&quot;&gt;join&lt;/a&gt;&lt;/code&gt; - это обычный оператор соединения монад. Он используется для удаления одного уровня монадической структуры, проецируя связанный аргумент на внешний уровень.</target>
        </trans-unit>
        <trans-unit id="27aabb232ca4b09ca8d220a432dd7f16df59a935" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-conc#v:yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; action allows (forces, in a co-operative multitasking implementation) a context-switch to any other currently runnable threads (if any), and is occasionally useful when implementing concurrency abstractions.</source>
          <target state="translated">Действие &lt;code&gt;&lt;a href=&quot;ghc-conc#v:yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; позволяет (принудительно в реализации совместной многозадачности) переключать контекст на любые другие выполняемые в данный момент потоки (если они есть) и иногда полезно при реализации абстракций параллелизма.</target>
        </trans-unit>
        <trans-unit id="4a132846a2c0d7c2c3007c1d18b85a3d84e2a398" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; action allows (forces, in a co-operative multitasking implementation) a context-switch to any other currently runnable threads (if any), and is occasionally useful when implementing concurrency abstractions.</source>
          <target state="translated">Действие &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; позволяет (принудительно в реализации совместной многозадачности) переключать контекст на любые другие выполняемые в данный момент потоки (если они есть) и иногда полезно при реализации абстракций параллелизма.</target>
        </trans-unit>
        <trans-unit id="9dd95524ffc61573839150d5ca8d3bbeafd0b7a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; class is used to name the upper and lower limits of a type. &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; is not a superclass of &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; since types that are not totally ordered may also have upper and lower bounds.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; используется для обозначения верхнего и нижнего пределов типа. &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; не является суперклассом &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; , поскольку типы, которые не являются полностью упорядоченными, могут также иметь верхнюю и нижнюю границы.</target>
        </trans-unit>
        <trans-unit id="3e4a35f48d43f24d53c5bb16b69fba56be493a94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; class may be derived for any enumeration type; &lt;code&gt;&lt;a href=&quot;ghc-enum#v:minBound&quot;&gt;minBound&lt;/a&gt;&lt;/code&gt; is the first constructor listed in the &lt;code&gt;data&lt;/code&gt; declaration and &lt;code&gt;&lt;a href=&quot;ghc-enum#v:maxBound&quot;&gt;maxBound&lt;/a&gt;&lt;/code&gt; is the last. &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; may also be derived for single-constructor datatypes whose constituent types are in &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; может быть производным от любого типа перечисления; &lt;code&gt;&lt;a href=&quot;ghc-enum#v:minBound&quot;&gt;minBound&lt;/a&gt;&lt;/code&gt; - это первый конструктор, указанный в объявлении &lt;code&gt;data&lt;/code&gt; а &lt;code&gt;&lt;a href=&quot;ghc-enum#v:maxBound&quot;&gt;maxBound&lt;/a&gt;&lt;/code&gt; - последний. &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; также может быть получен для типов данных с одним конструктором, составляющие типы которых находятся в &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="674d2d4d75029f825bd270a8d08697ebd9b70ba6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; classes.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Enum&quot;&gt;Enum&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ghc-enum#t:Bounded&quot;&gt;Bounded&lt;/a&gt;&lt;/code&gt; классы.</target>
        </trans-unit>
        <trans-unit id="c5cd6d00d90b1e061059918ba18205b11c14c002" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt;&lt;/code&gt; type allows you to reverse sort order conveniently. A value of type &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt; a&lt;/code&gt; contains a value of type &lt;code&gt;a&lt;/code&gt; (represented as &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt; a&lt;/code&gt;). If &lt;code&gt;a&lt;/code&gt; has an &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; instance associated with it then comparing two values thus wrapped will give you the opposite of their normal sort order. This is particularly useful when sorting in generalised list comprehensions, as in: &lt;code&gt;then sortWith by &lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt; x&lt;/code&gt;</source>
          <target state="translated">Тип &amp;laquo; &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt;&lt;/code&gt; &amp;raquo; позволяет удобно менять порядок сортировки на обратный. Значение типа &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt; a&lt;/code&gt; содержит значение типа &lt;code&gt;a&lt;/code&gt; (представленное как &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt; a&lt;/code&gt; ). Если имеет &lt;code&gt;&lt;a href=&quot;data-ord#t:Ord&quot;&gt;Ord&lt;/a&gt;&lt;/code&gt; экземпляр , связанный с ним , то сравнение двух значений , таким образом , обернутые даст вам противоположное их нормального порядка сортировки. Это особенно полезно при сортировке в обобщенных представлениях списка, например: &lt;code&gt;then sortWith by &lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt; x&lt;/code&gt; &lt;a href=&quot;ghc-exts#t:Down&quot;&gt;Down&lt;/a&gt; x &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf4c3fac24e8ca008ba612ac6b40c0fcd012f0f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#t:IsList&quot;&gt;IsList&lt;/a&gt;&lt;/code&gt; class and its methods are intended to be used in conjunction with the OverloadedLists extension.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;ghc-exts#t:IsList&quot;&gt;IsList&lt;/a&gt;&lt;/code&gt; и его методы предназначены для использования вместе с расширением OverloadedLists.</target>
        </trans-unit>
        <trans-unit id="d7ba5830092cef4d84647e79c69131dbc7adc059" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Item&quot;&gt;Item&lt;/a&gt;&lt;/code&gt; type function returns the type of items of the structure &lt;code&gt;l&lt;/code&gt;.</source>
          <target state="translated">Функция Тип &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Item&quot;&gt;Item&lt;/a&gt;&lt;/code&gt; возвращает тип элементов структуры &lt;code&gt;l&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f84b47ee1d124d1ca79a226e83d25027b22134b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromList&quot;&gt;fromList&lt;/a&gt;&lt;/code&gt; function constructs the structure &lt;code&gt;l&lt;/code&gt; from the given list of &lt;code&gt;Item l&lt;/code&gt;</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromList&quot;&gt;fromList&lt;/a&gt;&lt;/code&gt; создает структуру &lt;code&gt;l&lt;/code&gt; из заданного списка &lt;code&gt;Item l&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ceee73322b5e0bdd5f3091f55d6384a70d17944b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromListN&quot;&gt;fromListN&lt;/a&gt;&lt;/code&gt; function takes the input list's length as a hint. Its behaviour should be equivalent to &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromList&quot;&gt;fromList&lt;/a&gt;&lt;/code&gt;. The hint can be used to construct the structure &lt;code&gt;l&lt;/code&gt; more efficiently compared to &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromList&quot;&gt;fromList&lt;/a&gt;&lt;/code&gt;. If the given hint does not equal to the input list's length the behaviour of &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromListN&quot;&gt;fromListN&lt;/a&gt;&lt;/code&gt; is not specified.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromListN&quot;&gt;fromListN&lt;/a&gt;&lt;/code&gt; принимает длину входного списка в качестве подсказки. Его поведение должно быть эквивалентно &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromList&quot;&gt;fromList&lt;/a&gt;&lt;/code&gt; . Подсказка может быть использована для более эффективного построения структуры &lt;code&gt;l&lt;/code&gt; по сравнению с &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromList&quot;&gt;fromList&lt;/a&gt;&lt;/code&gt; . Если указанная подсказка не равна длине входного списка, поведение &lt;code&gt;&lt;a href=&quot;ghc-exts#v:fromListN&quot;&gt;fromListN&lt;/a&gt;&lt;/code&gt; не указывается.</target>
        </trans-unit>
        <trans-unit id="c5c04c12c048d0307d00092d987715f0d989db28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; function uses the user supplied function which projects an element out of every list element in order to first sort the input list and then to form groups by equality on these projected elements</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-exts#v:groupWith&quot;&gt;groupWith&lt;/a&gt;&lt;/code&gt; использует предоставленную пользователем функцию, которая проецирует элемент из каждого элемента списка, чтобы сначала отсортировать список ввода, а затем сформировать группы по равенству для этих проецируемых элементов.</target>
        </trans-unit>
        <trans-unit id="695facc226b98a2fdc94f961971c4ce121f69e9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#v:lazy&quot;&gt;lazy&lt;/a&gt;&lt;/code&gt; function restrains strictness analysis a little. The call &lt;code&gt;lazy e&lt;/code&gt; means the same as &lt;code&gt;e&lt;/code&gt;, but &lt;code&gt;&lt;a href=&quot;ghc-exts#v:lazy&quot;&gt;lazy&lt;/a&gt;&lt;/code&gt; has a magical property so far as strictness analysis is concerned: it is lazy in its first argument, even though its semantics is strict. After strictness analysis has run, calls to &lt;code&gt;&lt;a href=&quot;ghc-exts#v:lazy&quot;&gt;lazy&lt;/a&gt;&lt;/code&gt; are inlined to be the identity function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exts#v:lazy&quot;&gt;lazy&lt;/a&gt;&lt;/code&gt; специальностей ограничители строгости анализ мало. Вызов &lt;code&gt;lazy e&lt;/code&gt; означает то же самое, что и &lt;code&gt;e&lt;/code&gt; , но &lt;code&gt;&lt;a href=&quot;ghc-exts#v:lazy&quot;&gt;lazy&lt;/a&gt;&lt;/code&gt; имеет волшебное свойство в том, что касается анализа строгости: он ленив в своем первом аргументе, даже несмотря на то, что его семантика строгая. После выполнения анализа строгости вызовы &lt;code&gt;&lt;a href=&quot;ghc-exts#v:lazy&quot;&gt;lazy&lt;/a&gt;&lt;/code&gt; встроены в функцию идентификации.</target>
        </trans-unit>
        <trans-unit id="c62e040021cb66d2ce6289579ad247f811fcaf97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#v:oneShot&quot;&gt;oneShot&lt;/a&gt;&lt;/code&gt; function can be used to give a hint to the compiler that its argument will be called at most once, which may (or may not) enable certain optimizations. It can be useful to improve the performance of code in continuation passing style.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-exts#v:oneShot&quot;&gt;oneShot&lt;/a&gt;&lt;/code&gt; функция может быть использована , чтобы дать подсказку компилятору , что ее аргумент будет называться не более одного раза, что может (или не может) дать определенные оптимизации. Это может быть полезно для повышения производительности кода при продолжении передачи.</target>
        </trans-unit>
        <trans-unit id="738f70f90664f23041407e78e7481ca578a61fb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#v:sortWith&quot;&gt;sortWith&lt;/a&gt;&lt;/code&gt; function sorts a list of elements using the user supplied function to project something out of each element</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-exts#v:sortWith&quot;&gt;sortWith&lt;/a&gt;&lt;/code&gt; сортирует список элементов, используя предоставленную пользователем функцию для проецирования чего-либо из каждого элемента.</target>
        </trans-unit>
        <trans-unit id="f8c0871b5b6f8b978adbdfa4a64b81796ab60e0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-exts#v:toList&quot;&gt;toList&lt;/a&gt;&lt;/code&gt; function extracts a list of &lt;code&gt;Item l&lt;/code&gt; from the structure &lt;code&gt;l&lt;/code&gt;. It should satisfy fromList . toList = id.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-exts#v:toList&quot;&gt;toList&lt;/a&gt;&lt;/code&gt; извлекает список &lt;code&gt;Item l&lt;/code&gt; из структуры &lt;code&gt;l&lt;/code&gt; . Он должен удовлетворять fromList. toList = id.</target>
        </trans-unit>
        <trans-unit id="b18ac779aba3ac796c0284e4d2cc3bb7c69a9f44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; is parameterised in the same way as &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt;. The type argument of &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; should normally be an instance of class &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; параметризуется таким же образом , как &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:Ptr&quot;&gt;Ptr&lt;/a&gt;&lt;/code&gt; . Аргумент типа &lt;code&gt;&lt;a href=&quot;ghc-foreignptr#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; обычно должен быть экземпляром класса &lt;code&gt;&lt;a href=&quot;foreign-storable#t:Storable&quot;&gt;Storable&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5c813e0c538449c8b967f68e862c925ce84f9ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-generics#t:C1&quot;&gt;C1&lt;/a&gt; ('MetaCons &quot;Leaf&quot; 'PrefixI 'False)&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-generics#t:C1&quot;&gt;C1&lt;/a&gt; ('MetaCons &quot;Node&quot; 'PrefixI 'False)&lt;/code&gt; invocations indicate that the enclosed part is the representation of the first and second constructor of datatype &lt;code&gt;Tree&lt;/code&gt;, respectively. Here, the meta-information regarding constructor names, fixity and whether it has named fields or not is encoded at the type level. The &lt;code&gt;'MetaCons&lt;/code&gt; type is also an instance of the type class &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Constructor&quot;&gt;Constructor&lt;/a&gt;&lt;/code&gt;. This type class can be used to obtain information about the constructor at the value level.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-generics#t:C1&quot;&gt;C1&lt;/a&gt; ('MetaCons &quot;Leaf&quot; 'PrefixI 'False)&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ghc-generics#t:C1&quot;&gt;C1&lt;/a&gt; ('MetaCons &quot;Node&quot; 'PrefixI 'False)&lt;/code&gt; вызовы показывают , что прилагаемая часть является представление первого и второго конструктора типа данных &lt;code&gt;Tree&lt;/code&gt; , соответственно. Здесь метаинформация, касающаяся имен конструкторов, фиксации и того, имеет ли он именованные поля или нет, кодируется на уровне типа. Тип &lt;code&gt;'MetaCons&lt;/code&gt; также является экземпляром класса типа &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Constructor&quot;&gt;Constructor&lt;/a&gt;&lt;/code&gt; . Этот класс типа можно использовать для получения информации о конструкторе на уровне значения.</target>
        </trans-unit>
        <trans-unit id="4b3758b0106cdc9eb50e8251878d12e347f33b9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-generics#t:D1&quot;&gt;D1&lt;/a&gt; ('MetaData &quot;Tree&quot; &quot;Main&quot; &quot;package-name&quot; 'False)&lt;/code&gt; tag indicates that the enclosed part is the representation of the datatype &lt;code&gt;Tree&lt;/code&gt;. Again, the meta-information is encoded at the type level. The &lt;code&gt;'MetaData&lt;/code&gt; type is an instance of class &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Datatype&quot;&gt;Datatype&lt;/a&gt;&lt;/code&gt;, which can be used to obtain the name of a datatype, the module it has been defined in, the package it is located under, and whether it has been defined using &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;newtype&lt;/code&gt; at the value level.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-generics#t:D1&quot;&gt;D1&lt;/a&gt; ('MetaData &quot;Tree&quot; &quot;Main&quot; &quot;package-name&quot; 'False)&lt;/code&gt; тег указывает на то, что прилагаемая часть является представление типа данных &lt;code&gt;Tree&lt;/code&gt; . Опять же, метаинформация кодируется на уровне типа. Тип &lt;code&gt;'MetaData&lt;/code&gt; - это экземпляр класса &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Datatype&quot;&gt;Datatype&lt;/a&gt;&lt;/code&gt; , который можно использовать для получения имени типа данных, модуля, в котором он был определен, пакета, в котором он расположен, и того, был ли он определен с использованием &lt;code&gt;data&lt;/code&gt; или &lt;code&gt;newtype&lt;/code&gt; в уровень стоимости.</target>
        </trans-unit>
        <trans-unit id="490133c0313c9ba8b7db7fbe7e0fe5b2bf18b53d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; class can be generalized to range over types of kind &lt;code&gt;k -&amp;gt; *&lt;/code&gt;, for any kind &lt;code&gt;k&lt;/code&gt;. To do so, derive a &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; instance with the &lt;code&gt;PolyKinds&lt;/code&gt; extension enabled. For example, the declaration</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; может быть обобщен на типы типа &lt;code&gt;k -&amp;gt; *&lt;/code&gt; для любого типа &lt;code&gt;k&lt;/code&gt; . Для этого &lt;code&gt;&lt;a href=&quot;ghc-generics#t:Generic1&quot;&gt;Generic1&lt;/a&gt;&lt;/code&gt; экземпляр Generic1 с &lt;code&gt;PolyKinds&lt;/code&gt; расширением PolyKinds . Например, объявление</target>
        </trans-unit>
        <trans-unit id="b51e7af78f64d86aed93f2c4d635092dabfbb762" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-generics#t:S1&quot;&gt;S1&lt;/a&gt; ('MetaSel 'Nothing 'NoSourceUnpackedness 'NoSourceStrictness
      'DecidedLazy)&lt;/code&gt; tag indicates several things. The &lt;code&gt;'Nothing&lt;/code&gt; indicates that there is no record field selector associated with this field of the constructor (if there were, it would have been marked &lt;code&gt;'Just
      &quot;recordName&quot;&lt;/code&gt; instead). The other types contain meta-information on the field's strictness:</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;ghc-generics#t:S1&quot;&gt;S1&lt;/a&gt; ('MetaSel 'Nothing 'NoSourceUnpackedness 'NoSourceStrictness 'DecidedLazy)&lt;/code&gt; Тег указывает несколько вещей. &lt;code&gt;'Nothing&lt;/code&gt; указует на то, что нет Селектора записи поля , связанного с этим полем конструктора (если бы это было бы отмечено &lt;code&gt;'Just &quot;recordName&quot;&lt;/code&gt; вместо этого). Остальные типы содержат метаинформацию о строгости поля:</target>
        </trans-unit>
        <trans-unit id="d0cdba7fd39b9182aef4d3fd8dd460a16d152145" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-integer#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; типа.</target>
        </trans-unit>
        <trans-unit id="ccb84e64bf7ed15245460804350d5f1cb2e76cd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-io-encoding-failure#t:CodingFailureMode&quot;&gt;CodingFailureMode&lt;/a&gt;&lt;/code&gt; is used to construct &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt;s, and specifies how they handle illegal sequences.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-io-encoding-failure#t:CodingFailureMode&quot;&gt;CodingFailureMode&lt;/a&gt;&lt;/code&gt; используется для построения &lt;code&gt;&lt;a href=&quot;system-io#v:TextEncoding&quot;&gt;TextEncoding&lt;/a&gt;&lt;/code&gt; s, и определяет , как они обрабатывают незаконные последовательности.</target>
        </trans-unit>
        <trans-unit id="727269e258ca0cc1f5b84b187e061106f48b55ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-list#v:product&quot;&gt;product&lt;/a&gt;&lt;/code&gt; function computes the product of a finite list of numbers.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-list#v:product&quot;&gt;product&lt;/a&gt;&lt;/code&gt; вычисляет произведение конечного списка чисел.</target>
        </trans-unit>
        <trans-unit id="29f4142ef18f41223155d901b10e8d9efcecd6fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-list#v:sum&quot;&gt;sum&lt;/a&gt;&lt;/code&gt; function computes the sum of a finite list of numbers.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-list#v:sum&quot;&gt;sum&lt;/a&gt;&lt;/code&gt; вычисляет сумму конечного списка чисел.</target>
        </trans-unit>
        <trans-unit id="791089d56d61f4d3b56178eb7352f6df80bab567" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-list#v:unzip3&quot;&gt;unzip3&lt;/a&gt;&lt;/code&gt; function takes a list of triples and returns three lists, analogous to &lt;code&gt;&lt;a href=&quot;ghc-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-list#v:unzip3&quot;&gt;unzip3&lt;/a&gt;&lt;/code&gt; принимает список троек и возвращает три списка, аналогично &lt;code&gt;&lt;a href=&quot;ghc-list#v:unzip&quot;&gt;unzip&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7bb018b60fccf9ba007b71e9eb3d8a718941c0f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-list#v:zipWith3&quot;&gt;zipWith3&lt;/a&gt;&lt;/code&gt; function takes a function which combines three elements, as well as three lists and returns a list of their point-wise combination, analogous to &lt;code&gt;&lt;a href=&quot;ghc-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt;. It is capable of list fusion, but it is restricted to its first list argument and its resulting list.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-list#v:zipWith3&quot;&gt;zipWith3&lt;/a&gt;&lt;/code&gt; принимает функцию, которая объединяет три элемента, а также три списка, и возвращает список их точечной комбинации, аналогично &lt;code&gt;&lt;a href=&quot;ghc-list#v:zipWith&quot;&gt;zipWith&lt;/a&gt;&lt;/code&gt; . Он поддерживает объединение списков, но ограничен первым аргументом списка и его результирующим списком.</target>
        </trans-unit>
        <trans-unit id="24f96e687e4620b9109ecaf114edba80a1baa66c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; type encapsulates an optional value. A value of type &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a&lt;/code&gt; either contains a value of type &lt;code&gt;a&lt;/code&gt; (represented as &lt;code&gt;&lt;a href=&quot;ghc-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt;), or it is empty (represented as &lt;code&gt;&lt;a href=&quot;ghc-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;). Using &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; is a good way to deal with errors or exceptional cases without resorting to drastic measures such as &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; инкапсулирует необязательное значение. Значение типа &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt; a&lt;/code&gt; либо содержит значение типа &lt;code&gt;a&lt;/code&gt; (представленное как &lt;code&gt;&lt;a href=&quot;ghc-maybe#v:Just&quot;&gt;Just&lt;/a&gt; a&lt;/code&gt; ), либо оно пустое (представлено как &lt;code&gt;&lt;a href=&quot;ghc-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; ). Использование &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; - хороший способ справиться с ошибками или исключительными случаями, не прибегая к таким радикальным мерам, как &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="266e593abd43191340f9b33fd8e15a10e0dc922a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; type is also a monad. It is a simple kind of error monad, where all errors are represented by &lt;code&gt;&lt;a href=&quot;ghc-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;. A richer error monad can be built using the &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;ghc-maybe#t:Maybe&quot;&gt;Maybe&lt;/a&gt;&lt;/code&gt; - тоже монада. Это простая монада ошибок, в которой все ошибки представлены &lt;code&gt;&lt;a href=&quot;ghc-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; . Более богатая монада ошибок может быть построена с &lt;code&gt;&lt;a href=&quot;data-either#v:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; типа Either .</target>
        </trans-unit>
        <trans-unit id="b66270e05d2350973bd17982c61ae01a11e0a3f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; class and the &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;ghc-num#t:Num&quot;&gt;Num&lt;/a&gt;&lt;/code&gt; и тип &lt;code&gt;&lt;a href=&quot;prelude#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d90a8339ada736c69e4569a04518d30718bf0396" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:-92--92-&quot;&gt;\\&lt;/a&gt;&lt;/code&gt; function is list difference (non-associative). In the result of &lt;code&gt;xs&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:-92--92-&quot;&gt;\\&lt;/a&gt;&lt;/code&gt;&lt;code&gt;ys&lt;/code&gt;, the first occurrence of each element of &lt;code&gt;ys&lt;/code&gt; in turn (if any) has been removed from &lt;code&gt;xs&lt;/code&gt;. Thus</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:-92--92-&quot;&gt;\\&lt;/a&gt;&lt;/code&gt; - это разность списков (неассоциативная). В результате &lt;code&gt;xs&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:-92--92-&quot;&gt;\\&lt;/a&gt;&lt;/code&gt; &lt;code&gt;ys&lt;/code&gt; первое вхождение каждого элемента &lt;code&gt;ys&lt;/code&gt; по очереди (если есть) было удалено из &lt;code&gt;xs&lt;/code&gt; . таким образом</target>
        </trans-unit>
        <trans-unit id="5f790bce52b575010739edf6cb02aa96c2885cb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:deleteFirstsBy&quot;&gt;deleteFirstsBy&lt;/a&gt;&lt;/code&gt; function takes a predicate and two lists and returns the first list with the first occurrence of each element of the second list removed.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:deleteFirstsBy&quot;&gt;deleteFirstsBy&lt;/a&gt;&lt;/code&gt; принимает предикат и два списка и возвращает первый список с первым удаленным вхождением каждого элемента второго списка.</target>
        </trans-unit>
        <trans-unit id="a978c3a6eaa51a8f531e3682bd2d367abf6607ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:dropWhileEnd&quot;&gt;dropWhileEnd&lt;/a&gt;&lt;/code&gt; function drops the largest suffix of a list in which the given predicate holds for all elements. For example:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:dropWhileEnd&quot;&gt;dropWhileEnd&lt;/a&gt;&lt;/code&gt; отбрасывает самый большой суффикс списка, в котором данный предикат выполняется для всех элементов. Например:</target>
        </trans-unit>
        <trans-unit id="109bdc9435b830725cf189c556de56387a5634f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:elemIndex&quot;&gt;elemIndex&lt;/a&gt;&lt;/code&gt; function returns the index of the first element in the given list which is equal (by &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt;) to the query element, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there is no such element.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:elemIndex&quot;&gt;elemIndex&lt;/a&gt;&lt;/code&gt; возвращает индекс первого элемента в данном списке, который равен (на &lt;code&gt;&lt;a href=&quot;data-eq#v:-61--61-&quot;&gt;==&lt;/a&gt;&lt;/code&gt; ) элементу запроса, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если такого элемента нет.</target>
        </trans-unit>
        <trans-unit id="fadb3e5498f5526f3f541154cc26a34805337369" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:elemIndices&quot;&gt;elemIndices&lt;/a&gt;&lt;/code&gt; function extends &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:elemIndex&quot;&gt;elemIndex&lt;/a&gt;&lt;/code&gt;, by returning the indices of all elements equal to the query element, in ascending order.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:elemIndices&quot;&gt;elemIndices&lt;/a&gt;&lt;/code&gt; расширяет &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:elemIndex&quot;&gt;elemIndex&lt;/a&gt;&lt;/code&gt; , возвращая индексы всех элементов, равных элементу запроса, в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="6568db6f34d6f7a7bf8a446041bb3489740f3067" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:find&quot;&gt;find&lt;/a&gt;&lt;/code&gt; function takes a predicate and a list and returns the first element in the list matching the predicate, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there is no such element.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:find&quot;&gt;find&lt;/a&gt;&lt;/code&gt; принимает предикат и список и возвращает первый элемент в списке, соответствующий предикату, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если такого элемента нет.</target>
        </trans-unit>
        <trans-unit id="4275cc9b36aa0e4769199e754686defa1594e4b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; function takes a predicate and a list and returns the index of the first element in the list satisfying the predicate, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if there is no such element.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; принимает предикат и список и возвращает индекс первого элемента в списке, удовлетворяющего этому предикату, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если такого элемента нет.</target>
        </trans-unit>
        <trans-unit id="2f76c76695266af5e321e89b84f46bb9a822c35f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; function extends &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt;, by returning the indices of all elements satisfying the predicate, in ascending order.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:findIndices&quot;&gt;findIndices&lt;/a&gt;&lt;/code&gt; расширяет &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:findIndex&quot;&gt;findIndex&lt;/a&gt;&lt;/code&gt; , возвращая индексы всех элементов, удовлетворяющих предикату, в порядке возрастания.</target>
        </trans-unit>
        <trans-unit id="305fac941a1cc5c29fd70cdde5362cbcac036635" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericDrop&quot;&gt;genericDrop&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the number of elements to drop.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericDrop&quot;&gt;genericDrop&lt;/a&gt;&lt;/code&gt; - это перегруженная версия &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; , которая принимает любое значение &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; в качестве количества удаляемых элементов.</target>
        </trans-unit>
        <trans-unit id="acf544a13e18ba4358a78c184967bf2f876a1aec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericIndex&quot;&gt;genericIndex&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:-33--33-&quot;&gt;!!&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the index.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericIndex&quot;&gt;genericIndex&lt;/a&gt;&lt;/code&gt; - это перегруженная версия &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:-33--33-&quot;&gt;!!&lt;/a&gt;&lt;/code&gt; , который принимает любое &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; значение в качестве индекса.</target>
        </trans-unit>
        <trans-unit id="813efa98177dcd58489481e0cb89e0133d9e87e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the number of repetitions to make.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericReplicate&quot;&gt;genericReplicate&lt;/a&gt;&lt;/code&gt; - это перегруженная версия функции &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:replicate&quot;&gt;replicate&lt;/a&gt;&lt;/code&gt; , которая принимает любое значение &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; в качестве количества выполняемых повторений.</target>
        </trans-unit>
        <trans-unit id="d7d4ee3930a7434ca7c403b4565de9be9be21b9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the position at which to split.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericSplitAt&quot;&gt;genericSplitAt&lt;/a&gt;&lt;/code&gt; - это перегруженная версия &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; , которая принимает любое значение &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; в качестве позиции, в которой выполняется разделение.</target>
        </trans-unit>
        <trans-unit id="e4afafa2336fcae4601a2eaca8e96fec05a60b92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericTake&quot;&gt;genericTake&lt;/a&gt;&lt;/code&gt; function is an overloaded version of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;, which accepts any &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value as the number of elements to take.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:genericTake&quot;&gt;genericTake&lt;/a&gt;&lt;/code&gt; - это перегруженная версия &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; , которая принимает любое значение &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; в качестве количества принимаемых элементов.</target>
        </trans-unit>
        <trans-unit id="f4f6a5e91131c42f6af8de505ab848b2b5f93891" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; function takes a list and returns a list of lists such that the concatenation of the result is equal to the argument. Moreover, each sublist in the result contains only equal elements. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; принимает список и возвращает список списков, так что объединение результата равно аргументу. Более того, каждый подсписок в результате содержит только равные элементы. Например,</target>
        </trans-unit>
        <trans-unit id="d100c0bef6b2c8b32f44a08a7e7eacb8db8f8cbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:groupBy&quot;&gt;groupBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34b65659a51ccdb8baad87c00cd32d74ef9d403b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; function returns all initial segments of the argument, shortest first. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:inits&quot;&gt;inits&lt;/a&gt;&lt;/code&gt; возвращает все начальные сегменты аргумента, сначала самые короткие. Например,</target>
        </trans-unit>
        <trans-unit id="144853d03169fd7769ada44b12eba567928f0591" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:intersect&quot;&gt;intersect&lt;/a&gt;&lt;/code&gt; function takes the list intersection of two lists. For example,</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:intersect&quot;&gt;intersect&lt;/a&gt;&lt;/code&gt; принимает пересечение двух списков. Например,</target>
        </trans-unit>
        <trans-unit id="605c4315b576beab0a53cad6a48c3adba1b2f451" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:intersectBy&quot;&gt;intersectBy&lt;/a&gt;&lt;/code&gt; function is the non-overloaded version of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:intersect&quot;&gt;intersect&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:intersectBy&quot;&gt;intersectBy&lt;/a&gt;&lt;/code&gt; - это неперегруженная версия элемента &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:intersect&quot;&gt;intersect&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
