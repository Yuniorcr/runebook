<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="b7f803909184a1a75bdfd2d4f7c735bb61a3e949" translate="yes" xml:space="preserve">
          <source>Outputs indented XHTML. Because space matters in HTML, the output is quite messy.</source>
          <target state="translated">Выходы с отступом XHTML.Поскольку пространство в HTML имеет значение,вывод довольно грязный.</target>
        </trans-unit>
        <trans-unit id="eb7db7a58078fc2825bd0a031efa804f437af7c6" translate="yes" xml:space="preserve">
          <source>Outputs the command-line syntax.</source>
          <target state="translated">Выводит синтаксис командной строки.</target>
        </trans-unit>
        <trans-unit id="7119c6e28cbbe42a656bd510a3c7d9802856a05d" translate="yes" xml:space="preserve">
          <source>Outputting text</source>
          <target state="translated">Выводящий текст</target>
        </trans-unit>
        <trans-unit id="4da7bc9200c71949eae8135d4a25bb5b299cf7cc" translate="yes" xml:space="preserve">
          <source>Overflow</source>
          <target state="translated">Overflow</target>
        </trans-unit>
        <trans-unit id="86b5bfa21ad7befe5b7734642489ec9bc1748da2" translate="yes" xml:space="preserve">
          <source>Overlap</source>
          <target state="translated">Overlap</target>
        </trans-unit>
        <trans-unit id="2e8a35cfdb5657a597ecf6c9392cc4a625880c7a" translate="yes" xml:space="preserve">
          <source>Overlappable</source>
          <target state="translated">Overlappable</target>
        </trans-unit>
        <trans-unit id="4595ccd7bc9e0af583db794795f5853d40095221" translate="yes" xml:space="preserve">
          <source>Overlapping</source>
          <target state="translated">Overlapping</target>
        </trans-unit>
        <trans-unit id="66015fffae6c6a9653fc601aa127c669c9f7f142" translate="yes" xml:space="preserve">
          <source>Overlapping instances must be used with care. They can give rise to incoherence (i.e. different instance choices are made in different parts of the program) even without &lt;a href=&quot;#extension-IncoherentInstances&quot;&gt;&lt;code&gt;IncoherentInstances&lt;/code&gt;&lt;/a&gt;. Consider:</source>
          <target state="translated">Перекрывающиеся экземпляры следует использовать с осторожностью. Они могут привести к несогласованности (т. Е. В разных частях программы выполняется выбор разных экземпляров) даже без &lt;a href=&quot;#extension-IncoherentInstances&quot;&gt; &lt;code&gt;IncoherentInstances&lt;/code&gt; &lt;/a&gt; . Рассматривать:</target>
        </trans-unit>
        <trans-unit id="d1523bffa7a001e9a35e090d7fb6d2c81a06dbc6" translate="yes" xml:space="preserve">
          <source>OverlappingInstances</source>
          <target state="translated">OverlappingInstances</target>
        </trans-unit>
        <trans-unit id="a8f9e73a31d1ecafa5203f5b5c4b88f1a16e5e78" translate="yes" xml:space="preserve">
          <source>Overlaps</source>
          <target state="translated">Overlaps</target>
        </trans-unit>
        <trans-unit id="33bfb3c6026c4b45ecc7feb8aafe2ca9f3b3173c" translate="yes" xml:space="preserve">
          <source>Overlays are an experimental feature of HPC, a textual description of coverage. hpc draft is used to generate a draft overlay from a .tix file, and hpc overlay generates a .tix files from an overlay.</source>
          <target state="translated">Оверлеи-это экспериментальная функция HPC,текстовое описание покрытия.Черновик hpc используется для генерации черновика оверлея из файла .tix,а оверлей hpc генерирует файлы .tix из оверлея.</target>
        </trans-unit>
        <trans-unit id="a8b4cac7022105ed5d28059687f452f232ee8a94" translate="yes" xml:space="preserve">
          <source>Overloaded functions are not your friend:</source>
          <target state="translated">Перегруженные функции-не твой друг:</target>
        </trans-unit>
        <trans-unit id="97176dd8fcd9d1389997c9bc3e797197c3840bf4" translate="yes" xml:space="preserve">
          <source>Overloaded lists</source>
          <target state="translated">Перегруженные списки</target>
        </trans-unit>
        <trans-unit id="e8bd3aa687e1a738e55c3636a509b286641773a4" translate="yes" xml:space="preserve">
          <source>Overloaded mutable array interface</source>
          <target state="translated">Перегруженный интерфейс мутируемого массива</target>
        </trans-unit>
        <trans-unit id="e60511daee4f7111180ca7e032a2951fd849e4ee" translate="yes" xml:space="preserve">
          <source>Overloaded string literals</source>
          <target state="translated">Перегруженные строковые литералы</target>
        </trans-unit>
        <trans-unit id="d6d7cf52e6ad94223f1634444b6ca253e18d7307" translate="yes" xml:space="preserve">
          <source>OverloadedLabels</source>
          <target state="translated">OverloadedLabels</target>
        </trans-unit>
        <trans-unit id="bfc0c0637f5d2341f692e6b4349a28ae53c2ed8b" translate="yes" xml:space="preserve">
          <source>OverloadedLists</source>
          <target state="translated">OverloadedLists</target>
        </trans-unit>
        <trans-unit id="21198418d476e74157738de8ed502c9d0fdf2bb9" translate="yes" xml:space="preserve">
          <source>OverloadedStrings</source>
          <target state="translated">OverloadedStrings</target>
        </trans-unit>
        <trans-unit id="f8883c62e6c0e5fff7f6dbed0dfb6ac51a5a5e1f" translate="yes" xml:space="preserve">
          <source>Override default behaviour for source files</source>
          <target state="translated">Переопределить поведение по умолчанию для исходных файлов</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="6d84840c6065dcaf391a05992267b78411ef4230" translate="yes" xml:space="preserve">
          <source>Owing to the vagaries of DLL linking, these hooks don&amp;rsquo;t work under Windows when the program is built dynamically.</source>
          <target state="translated">Из-за капризов связывания DLL эти перехватчики не работают под Windows, когда программа построена динамически.</target>
        </trans-unit>
        <trans-unit id="32e42d7cf1d8ef849a65b5a64f751115cac94630" translate="yes" xml:space="preserve">
          <source>Owner has execute permission.</source>
          <target state="translated">Владелец имеет разрешение на исполнение.</target>
        </trans-unit>
        <trans-unit id="3602226bffa2bf2cc1004ff7d38eed8270dc876b" translate="yes" xml:space="preserve">
          <source>Owner has read permission.</source>
          <target state="translated">Владелец прочитал разрешение.</target>
        </trans-unit>
        <trans-unit id="77086e57cff582a02a6797d6af8ebc3a53898204" translate="yes" xml:space="preserve">
          <source>Owner has read, write and execute permission.</source>
          <target state="translated">Владелец прочитал,написал и выполнил разрешение.</target>
        </trans-unit>
        <trans-unit id="7347b7f7b6214962e6cdded97a0459692c3eb4cb" translate="yes" xml:space="preserve">
          <source>Owner has write permission.</source>
          <target state="translated">У владельца есть письменное разрешение.</target>
        </trans-unit>
        <trans-unit id="16f821171aa7e9231ae6975fc208a27c4266781f" translate="yes" xml:space="preserve">
          <source>Owner, group and others have read and write permission.</source>
          <target state="translated">Владелец,группа и другие имеют разрешение на чтение и запись.</target>
        </trans-unit>
        <trans-unit id="e523f78f39ca6a4d4e48aaa4794b482ae4b16989" translate="yes" xml:space="preserve">
          <source>Owner, group and others have read, write and execute permission.</source>
          <target state="translated">Владелец,группа и другие люди прочитали,написали и выполнили разрешение.</target>
        </trans-unit>
        <trans-unit id="804c55046a7d6c2cc06d260ab90e0d6beedbce3b" translate="yes" xml:space="preserve">
          <source>P's complete type is of the following form</source>
          <target state="translated">Полный тип P имеет следующую форму</target>
        </trans-unit>
        <trans-unit id="b38cb0ee15cbdc945a4dd5af71e0ea5ff7337a56" translate="yes" xml:space="preserve">
          <source>PACL</source>
          <target state="translated">PACL</target>
        </trans-unit>
        <trans-unit id="048499ce23d04eb40ace8750a382f648336913e9" translate="yes" xml:space="preserve">
          <source>PAINTSTRUCT</source>
          <target state="translated">PAINTSTRUCT</target>
        </trans-unit>
        <trans-unit id="ad09b4bfdbe4d101135fff62d526064595a08512" translate="yes" xml:space="preserve">
          <source>PHANDLE</source>
          <target state="translated">PHANDLE</target>
        </trans-unit>
        <trans-unit id="1dd2c6c79f5967008b3710173dafb5d91bf6f2af" translate="yes" xml:space="preserve">
          <source>PHANDLER_ROUTINE</source>
          <target state="translated">PHANDLER_ROUTINE</target>
        </trans-unit>
        <trans-unit id="7e7f65d76167ed1ddaafc5081c1471db12872a25" translate="yes" xml:space="preserve">
          <source>PHARDWAREINPUT</source>
          <target state="translated">PHARDWAREINPUT</target>
        </trans-unit>
        <trans-unit id="85e8f21e7df070dfbfb33b827711de398d912fd4" translate="yes" xml:space="preserve">
          <source>PINPUT</source>
          <target state="translated">PINPUT</target>
        </trans-unit>
        <trans-unit id="0b9ca3c7e43bcb3e5b2891c4396b2710f3cbde31" translate="yes" xml:space="preserve">
          <source>PKEY</source>
          <target state="translated">PKEY</target>
        </trans-unit>
        <trans-unit id="1820a15854141d70e90716d788ea58c3c229d171" translate="yes" xml:space="preserve">
          <source>PMOUSEINPUT</source>
          <target state="translated">PMOUSEINPUT</target>
        </trans-unit>
        <trans-unit id="aa6c6e71142e2a18efab6e799dedaa71f848c830" translate="yes" xml:space="preserve">
          <source>POSIX IO support. These types and functions correspond to the unix functions open(2), close(2), etc. For more portable functions which are more like fopen(3) and friends from stdio.h, see &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt;.</source>
          <target state="translated">Поддержка POSIX IO. Эти типы и функции соответствуют функциям unix open (2), close (2) и т. Д. Для получения дополнительных переносимых функций, которые больше похожи на fopen (3) и друзей из stdio.h, см. &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="977519e345c48d6b762f0fe7418ce9a32ef4bccc" translate="yes" xml:space="preserve">
          <source>POSIX IO support. These types and functions correspond to the unix functions open(2), close(2), etc. For more portable functions which are more like fopen(3) and friends from stdio.h, see &lt;a href=&quot;../base-4.14.1.0/system-io&quot;&gt;System.IO&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f8879b3d3633187e6f3b79ef18f0ce0082e0ab" translate="yes" xml:space="preserve">
          <source>POSIX IO support. These types and functions correspond to the unix functions open(2), close(2), etc. For more portable functions which are more like fopen(3) and friends from stdio.h, see &lt;a href=&quot;../base-4.15.0.0/system-io&quot;&gt;System.IO&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079d0f57f2334c2adbdc7591a011db4dd709359a" translate="yes" xml:space="preserve">
          <source>POSIX Terminal support</source>
          <target state="translated">Поддержка POSIX-терминала</target>
        </trans-unit>
        <trans-unit id="22aca2377521adf00292736ce43c51b0c7e32ea3" translate="yes" xml:space="preserve">
          <source>POSIX Time support</source>
          <target state="translated">Поддержка POSIX Time</target>
        </trans-unit>
        <trans-unit id="292baf4f2f262bc63b703e55a72343bbb3636618" translate="yes" xml:space="preserve">
          <source>POSIX data types</source>
          <target state="translated">типы данных POSIX</target>
        </trans-unit>
        <trans-unit id="318e90ecf5469e2adbc593a53864478fbcf3bad5" translate="yes" xml:space="preserve">
          <source>POSIX data types: Haskell equivalents of the types defined by the &lt;code&gt;&amp;lt;sys/types.h&amp;gt;&lt;/code&gt; C header on a POSIX system.</source>
          <target state="translated">Типы данных POSIX: эквиваленты Haskell типов, определенных заголовком C &lt;code&gt;&amp;lt;sys/types.h&amp;gt;&lt;/code&gt; в системе POSIX.</target>
        </trans-unit>
        <trans-unit id="bb81ead9bcb349c7209884ed07f7695a7f46f32c" translate="yes" xml:space="preserve">
          <source>POSIX defines operations to get information, such as owner, permissions, size and access times, about a file. This information is represented by the &lt;code&gt;&lt;a href=&quot;system-posix-files#t:FileStatus&quot;&gt;FileStatus&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">POSIX определяет операции для получения информации о файле, такой как владелец, разрешения, размер и время доступа. Эта информация представлена типом &lt;code&gt;&lt;a href=&quot;system-posix-files#t:FileStatus&quot;&gt;FileStatus&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a83136c082ba1746dcd67b3e4264fcabc3118b4" translate="yes" xml:space="preserve">
          <source>POSIX defines operations to get information, such as owner, permissions, size and access times, about a file. This information is represented by the &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#t:FileStatus&quot;&gt;FileStatus&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">POSIX определяет операции для получения информации о файле, такой как владелец, разрешения, размер и время доступа. Эта информация представлена типом &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#t:FileStatus&quot;&gt;FileStatus&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2247d636852d4974c20bc81cef3eee8f8693cb1" translate="yes" xml:space="preserve">
          <source>POSIX environment support</source>
          <target state="translated">поддержка среды POSIX</target>
        </trans-unit>
        <trans-unit id="77ab5f467c12abe5e944670123be671c69f9c1ad" translate="yes" xml:space="preserve">
          <source>POSIX error support</source>
          <target state="translated">поддержка ошибок POSIX</target>
        </trans-unit>
        <trans-unit id="577fae15c03302f9533fba712b949371600860a0" translate="yes" xml:space="preserve">
          <source>POSIX file control support</source>
          <target state="translated">поддержка управления файлами POSIX</target>
        </trans-unit>
        <trans-unit id="441cd303356e44c35c8b81962cf0dd9d836ac5e9" translate="yes" xml:space="preserve">
          <source>POSIX miscellaneous stuff, mostly from unistd.h</source>
          <target state="translated">POSIX разные вещи,в основном из unistd.h</target>
        </trans-unit>
        <trans-unit id="0f6ec8374b30a1b5c96490a77a0ceae4de07fc7d" translate="yes" xml:space="preserve">
          <source>POSIX named semaphore support.</source>
          <target state="translated">POSIX назвал семафорную поддержку.</target>
        </trans-unit>
        <trans-unit id="08bafc86e53a454435af5c1c18fc679a44dc565c" translate="yes" xml:space="preserve">
          <source>POSIX process support. See also the System.Cmd and System.Process modules in the process package.</source>
          <target state="translated">Поддержка процесса POSIX.См.также модули System.Cmd и System.Process в пакете процессов.</target>
        </trans-unit>
        <trans-unit id="654e2e0f35661132458d5d0822add53293643b2a" translate="yes" xml:space="preserve">
          <source>POSIX resource support</source>
          <target state="translated">поддержка POSIX-ресурсов</target>
        </trans-unit>
        <trans-unit id="ebcc5225834879beb7456c935b043f8860521e53" translate="yes" xml:space="preserve">
          <source>POSIX shared memory support.</source>
          <target state="translated">Поддержка разделяемой памяти POSIX.</target>
        </trans-unit>
        <trans-unit id="45920651e67f5412a47b9d8f7bc47165c18613b2" translate="yes" xml:space="preserve">
          <source>POSIX signal support</source>
          <target state="translated">поддержка сигнала POSIX</target>
        </trans-unit>
        <trans-unit id="4502a50a73e2d715093b7326bc2eb514a0e679e0" translate="yes" xml:space="preserve">
          <source>POSIX temporary file and directory creation functions.</source>
          <target state="translated">Функции создания временных файлов и каталогов POSIX.</target>
        </trans-unit>
        <trans-unit id="3fab173d191fed500e90a6dee632c803a84facb1" translate="yes" xml:space="preserve">
          <source>POSIX time is the nominal time since 1970-01-01 00:00 UTC</source>
          <target state="translated">POSIX время-это номинальное время с 1970-01-01 00:00 UTC.</target>
        </trans-unit>
        <trans-unit id="58f93d74398f0946ad737dd9368214ee4e669e99" translate="yes" xml:space="preserve">
          <source>POSIX time, if you need to deal with timestamps and the like. Most people won't need this module.</source>
          <target state="translated">POSIX время,если вам нужно иметь дело с метками времени и тому подобное.Большинству людей этот модуль не понадобится.</target>
        </trans-unit>
        <trans-unit id="b94c2396f7667c2847b93362ca54298f2a041bb0" translate="yes" xml:space="preserve">
          <source>POSIX user/group support</source>
          <target state="translated">Поддержка пользователей/групп POSIX</target>
        </trans-unit>
        <trans-unit id="1432f73e88b32fcc9fcbc2fc9541f54571421a18" translate="yes" xml:space="preserve">
          <source>POSIX: either file or directory link; Windows: file link</source>
          <target state="translated">POSIX:ссылка на файл или каталог;Windows:ссылка на файл.</target>
        </trans-unit>
        <trans-unit id="c5f7093efb2198f16b7b44117d72ea5f7c731b36" translate="yes" xml:space="preserve">
          <source>POSIXTime</source>
          <target state="translated">POSIXTime</target>
        </trans-unit>
        <trans-unit id="6fa84fb314e576ad58ab64235ec9f5692ff698e9" translate="yes" xml:space="preserve">
          <source>POSVERSIONINFOEX</source>
          <target state="translated">POSVERSIONINFOEX</target>
        </trans-unit>
        <trans-unit id="bb2083b91dbcda1acd7b19d79a3721e0e2c32aa6" translate="yes" xml:space="preserve">
          <source>PROPORTION</source>
          <target state="translated">PROPORTION</target>
        </trans-unit>
        <trans-unit id="48a6bb377c2d242262af4edce1280a39ef449e2a" translate="yes" xml:space="preserve">
          <source>PSID</source>
          <target state="translated">PSID</target>
        </trans-unit>
        <trans-unit id="3051dda3f76f70a2a56f76bf7a6055149e32138b" translate="yes" xml:space="preserve">
          <source>PUCHAR</source>
          <target state="translated">PUCHAR</target>
        </trans-unit>
        <trans-unit id="8baf870b616352faf6c7c0ecdaf54c8968a6fcff" translate="yes" xml:space="preserve">
          <source>Pack the elements of an unboxed tuple into a vector.</source>
          <target state="translated">Упакуйте элементы неупакованного кортежа в вектор.</target>
        </trans-unit>
        <trans-unit id="f1a7e630429c6941a869ac578c4e8fd6c98967d0" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;P&lt;/code&gt; is trusted by C</source>
          <target state="translated">Пакет &lt;code&gt;P&lt;/code&gt; доверяет C</target>
        </trans-unit>
        <trans-unit id="632c494fdb55eaa49a7e790eda0b61cb93138010" translate="yes" xml:space="preserve">
          <source>Package environments can be modified by further command line arguments; for example, if you specify &lt;code&gt;-package foo&lt;/code&gt; on the command line, then package ⟨foo⟩ will be visible even if it&amp;rsquo;s not listed in the currently active package environment.</source>
          <target state="translated">Среды пакетов могут быть изменены дополнительными аргументами командной строки; например, если вы укажете &lt;code&gt;-package foo&lt;/code&gt; в командной строке, то пакет &amp;laquo;foo&amp;raquo; будет виден, даже если он не указан в текущей активной среде пакета.</target>
        </trans-unit>
        <trans-unit id="909c5fa9bb52d913940480e63569e9457c322a40" translate="yes" xml:space="preserve">
          <source>Package imports with thinning/renaming do not hide other versions of the package: e.g. if containers-0.9 is already exposed, &lt;code&gt;-package &quot;containers-0.8 (Data.List as ListV8)&quot;&lt;/code&gt; will only add an additional binding to the environment. Similarly, &lt;code&gt;-package &quot;base (Data.Bool as Bool)&quot; -package &quot;base (Data.List as List)&quot;&lt;/code&gt; is equivalent to &lt;code&gt;-package &quot;base (Data.Bool as Bool, Data.List as List)&quot;&lt;/code&gt;. Literal names must refer to modules defined by the original package, so for example &lt;code&gt;-package &quot;base (Data.Bool as Bool, Bool as Baz)&quot;&lt;/code&gt; is invalid unless there was a &lt;code&gt;Bool&lt;/code&gt; module defined in the original package. Hiding a package also clears all of its renamings.</source>
          <target state="translated">Импорт пакетов с прореживанием / переименованием не скрывает другие версии пакета: например, если контейнеры-0.9 уже предоставлены, &lt;code&gt;-package &quot;containers-0.8 (Data.List as ListV8)&quot;&lt;/code&gt; только добавит дополнительную привязку к среде. Точно так же &lt;code&gt;-package &quot;base (Data.Bool as Bool)&quot; -package &quot;base (Data.List as List)&quot;&lt;/code&gt; эквивалентно &lt;code&gt;-package &quot;base (Data.Bool as Bool, Data.List as List)&quot;&lt;/code&gt; . Буквальные имена должны относиться к модулям, определенным в исходном пакете, поэтому, например, &lt;code&gt;-package &quot;base (Data.Bool as Bool, Bool as Baz)&quot;&lt;/code&gt; недействителен, если в исходном пакете не был определен модуль &lt;code&gt;Bool&lt;/code&gt; . При скрытии пакета также удаляются все его переименования.</target>
        </trans-unit>
        <trans-unit id="5c9811b51086b6dfb42e84534c5b2b28e924b044" translate="yes" xml:space="preserve">
          <source>Package key of the package where the static pointer is defined</source>
          <target state="translated">Ключ пакета,в котором определен статический указатель</target>
        </trans-unit>
        <trans-unit id="2218a05564cb586c32edc345988a8e44eb09178b" translate="yes" xml:space="preserve">
          <source>PackageImports</source>
          <target state="translated">PackageImports</target>
        </trans-unit>
        <trans-unit id="bd3f84301261878bbaaa34010d966279bf40adc1" translate="yes" xml:space="preserve">
          <source>Packed, unboxed, heap-resident arrays. Suitable for performance critical use, both in terms of large data quantities and high speed.</source>
          <target state="translated">Упакованные,неупакованные,кучевые резидентные массивы.Подходят для критически важного использования с точки зрения производительности,как с точки зрения больших объемов данных,так и с точки зрения высокой скорости.</target>
        </trans-unit>
        <trans-unit id="d300d7106bae9582af73521e611d5e25c10cb358" translate="yes" xml:space="preserve">
          <source>Packing &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/foreign-c-string#v:CString&quot;&gt;CString&lt;/a&gt;&lt;/code&gt;s and pointers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f01120d5c963de430516067cfc099589e4545ca8" translate="yes" xml:space="preserve">
          <source>Packing &lt;code&gt;CString&lt;/code&gt;s and pointers</source>
          <target state="translated">Упаковка &lt;code&gt;CString&lt;/code&gt; и указателей</target>
        </trans-unit>
        <trans-unit id="285f956c0084bc89a501b362eed07b802bf41e30" translate="yes" xml:space="preserve">
          <source>Packing CStrings and pointers</source>
          <target state="translated">Упаковка CStrings и указатели</target>
        </trans-unit>
        <trans-unit id="a0c8d65ca6bc539ca2a1b96b6e86e38a5baa9898" translate="yes" xml:space="preserve">
          <source>PageMode</source>
          <target state="translated">PageMode</target>
        </trans-unit>
        <trans-unit id="7bf87bd02ae06b49144154cc04ef67e79107b5b6" translate="yes" xml:space="preserve">
          <source>PairS</source>
          <target state="translated">PairS</target>
        </trans-unit>
        <trans-unit id="a0ef17e085dcffd83b4ea0ed40152454a057e949" translate="yes" xml:space="preserve">
          <source>Pairs of format characters and the corresponding part of the input.</source>
          <target state="translated">Пары символов формата и соответствующая часть ввода.</target>
        </trans-unit>
        <trans-unit id="fa734be254acf2623327f645a9dcb22bb473a95a" translate="yes" xml:space="preserve">
          <source>Par1</source>
          <target state="translated">Par1</target>
        </trans-unit>
        <trans-unit id="5ef24093c55e5f8c5a103b53816f97bf24faf823" translate="yes" xml:space="preserve">
          <source>ParFlags</source>
          <target state="translated">ParFlags</target>
        </trans-unit>
        <trans-unit id="c48f526b9da677a33e39fdcf90d9349b58ca51c9" translate="yes" xml:space="preserve">
          <source>ParagraphSeparator</source>
          <target state="translated">ParagraphSeparator</target>
        </trans-unit>
        <trans-unit id="9588a94b078f52bbf1493d6bc87cb1b2c5cf0b63" translate="yes" xml:space="preserve">
          <source>Parallel list comprehensions are a natural extension to list comprehensions. List comprehensions can be thought of as a nice syntax for writing maps and filters. Parallel comprehensions extend this to include the &lt;code&gt;zipWith&lt;/code&gt; family.</source>
          <target state="translated">Понимание параллельных списков - естественное расширение понимания списков. Составление списков можно рассматривать как хороший синтаксис для написания карт и фильтров. Параллельное понимание расширяет это, включая семейство &lt;code&gt;zipWith&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2e51df32c5b57a230767d0f2b8d7fdcefacc103" translate="yes" xml:space="preserve">
          <source>Parallel statements (as with &lt;a href=&quot;#extension-ParallelListComp&quot;&gt;&lt;code&gt;ParallelListComp&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Параллельные операторы (как с &lt;a href=&quot;#extension-ParallelListComp&quot;&gt; &lt;code&gt;ParallelListComp&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="157bace2b1a74bfc9c2b3216facb83675574ab22" translate="yes" xml:space="preserve">
          <source>Parallel statements (as with &lt;a href=&quot;parallel_list_comprehensions#extension-ParallelListComp&quot;&gt;&lt;code&gt;ParallelListComp&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa22e7974cf20f2b368bd4a61e7cbe29ebca7d4f" translate="yes" xml:space="preserve">
          <source>Parallel statements are translated using the &lt;code&gt;mzip&lt;/code&gt; function, which requires a &lt;code&gt;MonadZip&lt;/code&gt; instance defined in &lt;a href=&quot;../../libraries/base-4.15.0.0/control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea4bc6e4f648852182893a472b471676de0d12f" translate="yes" xml:space="preserve">
          <source>Parallel statements are translated using the &lt;code&gt;mzip&lt;/code&gt; function, which requires a &lt;code&gt;MonadZip&lt;/code&gt; instance defined in &lt;a href=&quot;../libraries/base-4.13.0.0/control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt;:</source>
          <target state="translated">Параллельные операторы переводятся с &lt;code&gt;mzip&lt;/code&gt; функции mzip , для которой требуется экземпляр &lt;code&gt;MonadZip&lt;/code&gt; , определенный в &lt;a href=&quot;../libraries/base-4.13.0.0/control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8ae51b740caaf8903073ae521aa80b2a759b050a" translate="yes" xml:space="preserve">
          <source>Parallel statements are translated using the &lt;code&gt;mzip&lt;/code&gt; function, which requires a &lt;code&gt;MonadZip&lt;/code&gt; instance defined in &lt;a href=&quot;../libraries/base-4.14.1.0/control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b857f551749600d7503643d97e6a057f00f03140" translate="yes" xml:space="preserve">
          <source>ParallelArrays</source>
          <target state="translated">ParallelArrays</target>
        </trans-unit>
        <trans-unit id="69e4ffd2f4416a199955cb75660e245acf30a524" translate="yes" xml:space="preserve">
          <source>ParallelListComp</source>
          <target state="translated">ParallelListComp</target>
        </trans-unit>
        <trans-unit id="26eaabc74e0ecdfad0e89f8cdfa1c0968e3e9ed4" translate="yes" xml:space="preserve">
          <source>Parameterizable list monad, with an inner monad.</source>
          <target state="translated">Параметрический список монады,с внутренней монадой.</target>
        </trans-unit>
        <trans-unit id="02627bceb378089ccc20d97b38e35aa601c5dccf" translate="yes" xml:space="preserve">
          <source>Parameters can also be given explicit kind signatures if needed. We call the number of parameters in a type family declaration, the family&amp;rsquo;s arity, and all applications of a type family must be fully saturated with respect to that arity. This requirement is unlike ordinary type synonyms and it implies that the kind of a type family is not sufficient to determine a family&amp;rsquo;s arity, and hence in general, also insufficient to determine whether a type family application is well formed. As an example, consider the following declaration:</source>
          <target state="translated">При необходимости параметры также могут иметь явную подпись. Мы называем количество параметров в объявлении семейства типов, арностью семейства, и все приложения семейства типов должны быть полностью насыщены по отношению к этой арности. Это требование отличается от обычных синонимов типов и подразумевает, что тип семейства типов недостаточен для определения арности семейства и, следовательно, в целом также недостаточен для определения того, правильно ли сформировано приложение семейства типов. В качестве примера рассмотрим следующее объявление:</target>
        </trans-unit>
        <trans-unit id="0a9ec76bad7b4461d4a1d8543c0eaec740e99cd7" translate="yes" xml:space="preserve">
          <source>Parameters concerning context switching</source>
          <target state="translated">Параметры,касающиеся переключения контекста</target>
        </trans-unit>
        <trans-unit id="cf4b1fc0bf92b4cc879c4bcbd45ef9ceab45e50c" translate="yes" xml:space="preserve">
          <source>Parameters of the cost-center profiler</source>
          <target state="translated">Параметры профилировщика по центру затрат</target>
        </trans-unit>
        <trans-unit id="5457041fcc4bc9dce847560d14805ad2049bc05f" translate="yes" xml:space="preserve">
          <source>Parameters of the garbage collector.</source>
          <target state="translated">Параметры сборщика мусора.</target>
        </trans-unit>
        <trans-unit id="f5c5e2b2e3b21a175ea9ad3d8e177b1de7b7db91" translate="yes" xml:space="preserve">
          <source>Parameters of the runtime system</source>
          <target state="translated">Параметры системы исполнения</target>
        </trans-unit>
        <trans-unit id="070eab54f987bb88657d5187688919e26117fb36" translate="yes" xml:space="preserve">
          <source>Parameters pertaining to event tracing</source>
          <target state="translated">Параметры,касающиеся отслеживания событий</target>
        </trans-unit>
        <trans-unit id="4c7921cf2c489ab76d8375681841d6fd080e0971" translate="yes" xml:space="preserve">
          <source>Parameters pertaining to parallelism</source>
          <target state="translated">Параметры,относящиеся к параллельности</target>
        </trans-unit>
        <trans-unit id="d33eae1bb8afa3f42df28e6f633413293fbaba1b" translate="yes" xml:space="preserve">
          <source>Parameters pertaining to the cost-center profiler.</source>
          <target state="translated">Параметры,относящиеся к профилировщику по центру затрат.</target>
        </trans-unit>
        <trans-unit id="c4c7a142cf5276b1d4ff46847b29bfe9297aa11a" translate="yes" xml:space="preserve">
          <source>Parameters pertaining to ticky-ticky profiler</source>
          <target state="translated">Параметры,относящиеся к профилировщику с тики-липучкой</target>
        </trans-unit>
        <trans-unit id="23d692f07a3fb646a8e54fcd2dc724f4ea2ed2c6" translate="yes" xml:space="preserve">
          <source>Parent</source>
          <target state="translated">Parent</target>
        </trans-unit>
        <trans-unit id="955199855b34047564f59f6340738ac93b4a24c6" translate="yes" xml:space="preserve">
          <source>Parent window, used for modal logon dialog</source>
          <target state="translated">Родительское окно,используемое для модального диалога входа в систему</target>
        </trans-unit>
        <trans-unit id="dcdb885a7f7995a4ae5f7735e2dbf7dd0df6c82b" translate="yes" xml:space="preserve">
          <source>ParentName</source>
          <target state="translated">ParentName</target>
        </trans-unit>
        <trans-unit id="fc2a5e24ef9b291c16b2d7d017af998e3868317a" translate="yes" xml:space="preserve">
          <source>Parenthesize an value if the boolean is true.</source>
          <target state="translated">Отправьте в родительский комитет значение,если булевы верны.</target>
        </trans-unit>
        <trans-unit id="f6fdd858f972c18cfc63e77f0f9f6ec35b5f5477" translate="yes" xml:space="preserve">
          <source>Parse a single lexeme</source>
          <target state="translated">Разобрать одну лексему</target>
        </trans-unit>
        <trans-unit id="7d1ffbe57b690c268aa7d881a60c206e50319514" translate="yes" xml:space="preserve">
          <source>Parse a string using the &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instance. Succeeds if there is exactly one valid result.</source>
          <target state="translated">Разберите строку с помощью экземпляра &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; . Успешно, если есть ровно один действительный результат.</target>
        </trans-unit>
        <trans-unit id="0be062266a17add68a7b668ce79822b3887a5efd" translate="yes" xml:space="preserve">
          <source>Parse a string using the &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instance. Succeeds if there is exactly one valid result. A &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; value indicates a parse error.</source>
          <target state="translated">Разберите строку с помощью экземпляра &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; . Успешно, если есть ровно один действительный результат. Значение &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; указывает на ошибку синтаксического анализа.</target>
        </trans-unit>
        <trans-unit id="89b7b9c3cafacbc3fbfa8f182d03db0eb57615a7" translate="yes" xml:space="preserve">
          <source>Parse a time value given a format string. Fails if the input could not be parsed using the given format. See &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Анализировать значение времени по строке формата. Сбой, если вход не может быть проанализирован с использованием данного формата. Подробности смотрите в &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01b9f449ab6343ea54f02e26f1e9faf3b8a4900b" translate="yes" xml:space="preserve">
          <source>Parse a time value given a format string. See &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Анализировать значение времени по строке формата. Подробности смотрите в &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bcd9fc04842aba6ce12e98373cf3b96da5c978b" translate="yes" xml:space="preserve">
          <source>Parse a value in either extended or basic format</source>
          <target state="translated">Разобрать значение в расширенном или базовом формате</target>
        </trans-unit>
        <trans-unit id="2960f380b30894cf9484ebfaf5167a7bcf5265fb" translate="yes" xml:space="preserve">
          <source>Parse a value in the format</source>
          <target state="translated">Разобрать значение в формате</target>
        </trans-unit>
        <trans-unit id="9f1ffb1644b47f32b305b727b8e2f0c4183a5335" translate="yes" xml:space="preserve">
          <source>Parse errors</source>
          <target state="translated">Ошибки при разборе</target>
        </trans-unit>
        <trans-unit id="7d315fdee5a3dc981c3a0b2bb2a2a03e5b911e53" translate="yes" xml:space="preserve">
          <source>Parse the most commonly used ISO 8601 format.</source>
          <target state="translated">Разбор наиболее часто используемого формата ISO 8601.</target>
        </trans-unit>
        <trans-unit id="ba0d4aca2cb647cf93798740ced61a0bfc954e4c" translate="yes" xml:space="preserve">
          <source>Parse the specified lexeme and continue as specified. Esp useful for nullary constructors; e.g. &lt;code&gt;choose [(&quot;A&quot;, return A), (&quot;B&quot;, return B)]&lt;/code&gt; We match both Ident and Symbol because the constructor might be an operator eg &lt;code&gt;(:~:)&lt;/code&gt;</source>
          <target state="translated">Проанализируйте указанную лексему и продолжайте, как указано. Esp полезно для нулевых конструкторов; например, &lt;code&gt;choose [(&quot;A&quot;, return A), (&quot;B&quot;, return B)]&lt;/code&gt; Мы сопоставляем как Ident, так и Symbol, потому что конструктор может быть оператором, например &lt;code&gt;(:~:)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df633b0d4b46131792d5ed485e94f872474b0ba2" translate="yes" xml:space="preserve">
          <source>ParseError</source>
          <target state="translated">ParseError</target>
        </trans-unit>
        <trans-unit id="e74c212b67cd9480fc62438093300cf8d7822087" translate="yes" xml:space="preserve">
          <source>ParseTime</source>
          <target state="translated">ParseTime</target>
        </trans-unit>
        <trans-unit id="6b8eadf238999f4577c899508ccf16700302cf3d" translate="yes" xml:space="preserve">
          <source>Parsec</source>
          <target state="translated">Parsec</target>
        </trans-unit>
        <trans-unit id="93d479a55d45ca812192b9c77cc2d7af365791e8" translate="yes" xml:space="preserve">
          <source>Parsec compatibility module</source>
          <target state="translated">Модуль совместимости Parsec</target>
        </trans-unit>
        <trans-unit id="0ebbdba417d24c756ec9c6928e541e59b0910456" translate="yes" xml:space="preserve">
          <source>ParsecT</source>
          <target state="translated">ParsecT</target>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="7a7dcdbfe4da553cb0bcd34e1518876f24101cf8" translate="yes" xml:space="preserve">
          <source>Parser from ParseLib with Hugs:</source>
          <target state="translated">Парсер из &quot;ПарсеЛиб с объятиями&quot;:</target>
        </trans-unit>
        <trans-unit id="e72f7d0405a8ed6b01d53d0eb6448cf48e5195fa" translate="yes" xml:space="preserve">
          <source>ParserT monad transformer and Parser type</source>
          <target state="translated">Трансформатор ParserT monad и тип Parser</target>
        </trans-unit>
        <trans-unit id="efdb99a054fb37fae9696b10ed15efeeb9f36b28" translate="yes" xml:space="preserve">
          <source>Parsers</source>
          <target state="translated">Parsers</target>
        </trans-unit>
        <trans-unit id="028c9661ab1e61cb4cec3408691389cf51931b07" translate="yes" xml:space="preserve">
          <source>Parses a CRLF (see &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:crlf&quot;&gt;crlf&lt;/a&gt;&lt;/code&gt;) or LF (see &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:newline&quot;&gt;newline&lt;/a&gt;&lt;/code&gt;) end-of-line. Returns a newline character ('\n').</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec-char#v:crlf&quot;&gt;crlf&lt;/a&gt;&lt;/code&gt; конец &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:newline&quot;&gt;newline&lt;/a&gt;&lt;/code&gt; CRLF (см. Crlf ) или LF (см. Новую строку). Возвращает символ новой строки ('\ n').</target>
        </trans-unit>
        <trans-unit id="8d0fe9ef051a87bd91f7557d4ccd0b8aa18260b8" translate="yes" xml:space="preserve">
          <source>Parses a alphabetic or numeric Unicode characters according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt;. Returns the parsed character.</source>
          <target state="translated">Анализирует буквенные или числовые символы Юникода в соответствии с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt; . Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="9deeeeaf087ec53d20f87cb865f75c4b16fddfbf" translate="yes" xml:space="preserve">
          <source>Parses a alphabetic or numeric Unicode characters according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt;. Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e755546d6746e1e5e0bb3770799634999a3624fe" translate="yes" xml:space="preserve">
          <source>Parses a alphabetic or numeric Unicode characters according to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt;. Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec0ce986154232212bbae5b429b845073d2f256" translate="yes" xml:space="preserve">
          <source>Parses a carriage return character ('\r') followed by a newline character ('\n'). Returns a newline character.</source>
          <target state="translated">Разбирает символ возврата каретки ('\r'),за которым следует символ новой строки ('\n').Возвращает символ новой строки.</target>
        </trans-unit>
        <trans-unit id="6fcd7bd8ab3c7f5c13d44837c892a5fb90c8df7f" translate="yes" xml:space="preserve">
          <source>Parses a hexadecimal digit (a digit or a letter between 'a' and 'f' or 'A' and 'F'). Returns the parsed character.</source>
          <target state="translated">Разбирает шестнадцатеричную цифру (цифра или буква между 'a' и 'f' или 'A' и 'F').Возвращает разобранный символ.</target>
        </trans-unit>
        <trans-unit id="dc1d6a166fc0a683ffa31ab7722f3e4d373d0800" translate="yes" xml:space="preserve">
          <source>Parses a lower case character (according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt; символ нижнего регистра (согласно isLower ). Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="bb6d66af149d4f2597f57f132fa38ff395ba24cb" translate="yes" xml:space="preserve">
          <source>Parses a lower case character (according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f311fa8437a566b8fb48248c57db9d0bf5e0bbc1" translate="yes" xml:space="preserve">
          <source>Parses a lower case character (according to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fea022f0b2ddc5b11db2fc69fd4e212597b724d" translate="yes" xml:space="preserve">
          <source>Parses a newline character ('\n'). Returns a newline character.</source>
          <target state="translated">Разбирает символ новой строки ('\n').Возвращает символ новой строки.</target>
        </trans-unit>
        <trans-unit id="eb63a33324f0ad8223e6e2bee48f6654bd369140" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the decimal system. Returns the value of the number.</source>
          <target state="translated">Разбирает целое число в десятичной системе с неотрицательным результатом.Возвращает значение числа.</target>
        </trans-unit>
        <trans-unit id="5df553864aa00be005f0685bbc7543dc85668e7b" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the hexadecimal system. The number should be prefixed with &quot;x&quot; or &quot;X&quot;. Returns the value of the number.</source>
          <target state="translated">Разбирает неотрицательное целое число в шестнадцатеричной системе.Число должно иметь префикс &quot;x&quot; или &quot;X&quot;.Возвращает значение числа.</target>
        </trans-unit>
        <trans-unit id="9fdb8835ffaf98232d803de2c75c7f642b6b9764" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the octal system. The number should be prefixed with &quot;o&quot; or &quot;O&quot;. Returns the value of the number.</source>
          <target state="translated">Обрабатывает неотрицательное целое число в восьмеричной системе.Число должно иметь префикс &quot;o&quot; или &quot;O&quot;.Возвращает значение числа.</target>
        </trans-unit>
        <trans-unit id="702ae31de69c688b66eaaac89301521608613ccc" translate="yes" xml:space="preserve">
          <source>Parses a tab character ('\t'). Returns a tab character.</source>
          <target state="translated">Разбирает символ табуляции ('\t').Возвращает символ табуляции.</target>
        </trans-unit>
        <trans-unit id="a9324545ed792c080b35aa8a66315fcacf5866ec" translate="yes" xml:space="preserve">
          <source>Parses a time value given a format string. Supports the same %-codes as &lt;code&gt;formatTime&lt;/code&gt;, including &lt;code&gt;%-&lt;/code&gt;, &lt;code&gt;%_&lt;/code&gt; and &lt;code&gt;%0&lt;/code&gt; modifiers, however padding widths are not supported. Case is not significant in the input string. Some variations in the input are accepted:</source>
          <target state="translated">Анализирует значение времени по строке формата. Поддерживает те же% -коды, что и &lt;code&gt;formatTime&lt;/code&gt; , включая модификаторы &lt;code&gt;%-&lt;/code&gt; , &lt;code&gt;%_&lt;/code&gt; и &lt;code&gt;%0&lt;/code&gt; , однако ширина заполнения не поддерживается. Регистр не имеет значения во входной строке. Допускаются некоторые вариации ввода:</target>
        </trans-unit>
        <trans-unit id="05a240ec2c4ee54b0aafba8944a0f8fd2d337fdb" translate="yes" xml:space="preserve">
          <source>Parses a white space character (any character which satisfies &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt;) Returns the parsed character.</source>
          <target state="translated">Анализирует пробельный символ (любой символ, удовлетворяющий &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt; ). Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="d903820e65a3e9a2aa9445b7aba2e9d2375393f9" translate="yes" xml:space="preserve">
          <source>Parses a white space character (any character which satisfies &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt;) Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc6c3aedd462806ffe399bf6d766bad639307dc" translate="yes" xml:space="preserve">
          <source>Parses a white space character (any character which satisfies &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt;) Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2249741f599993c9ad36b1f2a0b1cf7813b2acd1" translate="yes" xml:space="preserve">
          <source>Parses an ASCII digit. Returns the parsed character.</source>
          <target state="translated">Разбирает ASCII-цифру.Возвращает разобранный символ.</target>
        </trans-unit>
        <trans-unit id="c370ae0764a200203299326c366ffab380d2d3ab" translate="yes" xml:space="preserve">
          <source>Parses an alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">Разбирает буквенные символы Unicode (строчные, прописные и заглавные буквы, а также буквы без регистровых букв и буквы модификаторов в соответствии с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt; ). Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="d33286169144156c705451434bd3458f2c243164" translate="yes" xml:space="preserve">
          <source>Parses an alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f3b134c34d3c14026235d74f6f1686c4f04c5f" translate="yes" xml:space="preserve">
          <source>Parses an alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters according to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b02856d3ea3b460a7fe547f16d9711dbfd09488" translate="yes" xml:space="preserve">
          <source>Parses an octal digit (a character between '0' and '7'). Returns the parsed character.</source>
          <target state="translated">Разбирает восьмеричную цифру (символ между '0' и '7').Возвращает разобранный символ.</target>
        </trans-unit>
        <trans-unit id="33366516b691b44fa5ef3fef5829a9e0268ab2e5" translate="yes" xml:space="preserve">
          <source>Parses an upper case letter (according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt; букву (согласно isUpper ). Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="70ed6ac072bae182bcb0c4097a1ee90360d81c38" translate="yes" xml:space="preserve">
          <source>Parses an upper case letter (according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e17454ad2e2287ba0bd0b363754ade974706d9b" translate="yes" xml:space="preserve">
          <source>Parses an upper case letter (according to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20d25499201ff10834936ff90921a8f64cf44d5" translate="yes" xml:space="preserve">
          <source>Parses and returns the specified character.</source>
          <target state="translated">Разбирает и возвращает указанный символ.</target>
        </trans-unit>
        <trans-unit id="10734aa6302a05d65e718e02f8812ae26f28348b" translate="yes" xml:space="preserve">
          <source>Parses and returns the specified string.</source>
          <target state="translated">Обрабатывает и возвращает указанную строку.</target>
        </trans-unit>
        <trans-unit id="d6fafa4ab77dbc509075d8350b5ba85d1892f213" translate="yes" xml:space="preserve">
          <source>Parses any white space. White space consists of &lt;em&gt;zero&lt;/em&gt; or more occurrences of a &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt;, a line comment or a block (multi line) comment. Block comments may be nested. How comments are started and ended is defined in the &lt;code&gt;&lt;a href=&quot;text-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; that is passed to &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Анализирует любое пустое пространство. Пробел состоит из &lt;em&gt;нуля&lt;/em&gt; или нескольких вхождений &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt; , строчного комментария или блочного (многострочного) комментария. Комментарии блока могут быть вложенными. Как начинаются и заканчиваются комментарии, определяется в &lt;code&gt;&lt;a href=&quot;text-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; , который передается в &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7901356594fa3bfff82ffd8d1edc90fccbbbe877" translate="yes" xml:space="preserve">
          <source>Parses any white space. White space consists of &lt;em&gt;zero&lt;/em&gt; or more occurrences of a &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt;, a line comment or a block (multi line) comment. Block comments may be nested. How comments are started and ended is defined in the &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; that is passed to &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Анализирует любое пустое пространство. Пробел состоит из &lt;em&gt;нуля&lt;/em&gt; или нескольких вхождений &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt; , строчного комментария или блочного (многострочного) комментария. Комментарии блока могут быть вложенными. Как начинаются и заканчиваются комментарии, определяется в &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; , который передается в &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e703e840a13f17d4e0aa6d6407f1c2c408c1f58" translate="yes" xml:space="preserve">
          <source>Parses one or more occurrences of the given parser.</source>
          <target state="translated">Разбирает одно или несколько вхождений данного синтаксического анализатора.</target>
        </trans-unit>
        <trans-unit id="9d53b4cf7f3be2a61b0e8567c529b4e5312e73c2" translate="yes" xml:space="preserve">
          <source>Parses the first one or more characters satisfying the predicate. Fails if none, else succeeds exactly once having consumed all the characters Hence NOT the same as (many1 (satisfy p))</source>
          <target state="translated">Разбирает первый или несколько символов,удовлетворяющих предикату.Не удается,если ни один из них не удовлетворяет предикату,остальные удаются ровно один раз,потребляя все символы Следовательно,НЕ совпадают с (многие1 (удовлетворяют p))</target>
        </trans-unit>
        <trans-unit id="4ea87d4852d98a90a7eae890a816dda2be9b64c4" translate="yes" xml:space="preserve">
          <source>Parses the first zero or more characters satisfying the predicate. Always succeeds, exactly once having consumed all the characters Hence NOT the same as (many (satisfy p))</source>
          <target state="translated">Разбирает первый ноль или более символов,удовлетворяющих предикату.Всегда удается,ровно один раз потребляя все символы Следовательно,НЕ то же самое,что (много (удовлетворяет p))</target>
        </trans-unit>
        <trans-unit id="572002c6d8895463e970cc35f3fcfe00a42feb77" translate="yes" xml:space="preserve">
          <source>Parses zero or more occurrences of the given parser.</source>
          <target state="translated">Разбирает ноль и более вхождений данного синтаксического анализатора.</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="22a3a9fff72c57faae1e1019e01bc253d1b1b0fd" translate="yes" xml:space="preserve">
          <source>Parsing and counting</source>
          <target state="translated">Разбор и подсчет</target>
        </trans-unit>
        <trans-unit id="ba8c1940ba355106d471b605df97a6aaed96283a" translate="yes" xml:space="preserve">
          <source>Parsing of &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s, producing values.</source>
          <target state="translated">Разбор &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; s, получение значений.</target>
        </trans-unit>
        <trans-unit id="d9978c1c7b4b043b4e8ba4d6fd699578663835c5" translate="yes" xml:space="preserve">
          <source>Parsing of &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s, producing values.</source>
          <target state="translated">Разбор &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; s, получение значений.</target>
        </trans-unit>
        <trans-unit id="146ac34ef08d750fbdfddd6a4da5cec9cef4309b" translate="yes" xml:space="preserve">
          <source>Partial type signatures (&lt;a href=&quot;#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;) work nicely with visible type application. If you want to specify only the second type argument to &lt;code&gt;wurble&lt;/code&gt;, then you can say &lt;code&gt;wurble @_ @Int&lt;/code&gt;. The first argument is a wildcard, just like in a partial type signature. However, if used in a visible type application/visible kind application, it is &lt;em&gt;not&lt;/em&gt; necessary to specify &lt;a href=&quot;#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;PartialTypeSignatures&lt;/code&gt;&lt;/a&gt; and your code will not generate a warning informing you of the omitted type.</source>
          <target state="translated">Сигнатуры частичного типа ( &lt;a href=&quot;#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt; ) хорошо работают с приложением видимого типа. Если вы хотите указать только аргумент второго типа для &lt;code&gt;wurble&lt;/code&gt; , вы можете сказать &lt;code&gt;wurble @_ @Int&lt;/code&gt; . Первый аргумент - это подстановочный знак, как и в сигнатуре частичного типа. Однако, если используется в приложении видимого типа / приложении видимого типа, &lt;em&gt;нет&lt;/em&gt; необходимости указывать &lt;a href=&quot;#extension-PartialTypeSignatures&quot;&gt; &lt;code&gt;PartialTypeSignatures&lt;/code&gt; ,&lt;/a&gt; и ваш код не будет генерировать предупреждение, информирующее вас об опущенном типе.</target>
        </trans-unit>
        <trans-unit id="1975a5fb5e41c13003f5379b185c0692a3c0c863" translate="yes" xml:space="preserve">
          <source>Partial type signatures (&lt;a href=&quot;partial_type_signatures#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;) work nicely with visible type application. If you want to specify only the second type argument to &lt;code&gt;wurble&lt;/code&gt;, then you can say &lt;code&gt;wurble @_ @Int&lt;/code&gt;. The first argument is a wildcard, just like in a partial type signature. However, if used in a visible type application/visible kind application, it is &lt;em&gt;not&lt;/em&gt; necessary to specify &lt;a href=&quot;partial_type_signatures#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;PartialTypeSignatures&lt;/code&gt;&lt;/a&gt; and your code will not generate a warning informing you of the omitted type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fba127279063c3a22121b9b4cb6f20bc4417959" translate="yes" xml:space="preserve">
          <source>Partial type signatures are allowed for bindings, pattern and expression signatures, except that extra-constraints wildcards are not supported in pattern or expression signatures. In the following example a wildcard is used in each of the three possible contexts.</source>
          <target state="translated">Подписи частичного типа допускаются для связок,подписей шаблонов и выражений,за исключением того,что в подстановочных подстановках шаблонов и выражений не поддерживаются подстановочные подстановки с дополнительными ограничениями.В следующем примере в каждом из трех возможных контекстов используется подстановочный символ.</target>
        </trans-unit>
        <trans-unit id="99197905e62274bd86f62c48326e7d56161c0bff" translate="yes" xml:space="preserve">
          <source>Partial type signatures can also be used in &lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt; splices.</source>
          <target state="translated">Сигнатуры частичного типа также можно использовать в соединениях &lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="700b81e9a3b34b26a77627720867ff3cbb617e52" translate="yes" xml:space="preserve">
          <source>Partial type signatures can also be used in &lt;a href=&quot;template_haskell#template-haskell&quot;&gt;Template Haskell&lt;/a&gt; splices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1d72bf2e9837a6f932897368ed11b7f1f0901d" translate="yes" xml:space="preserve">
          <source>PartialTypeSignatures</source>
          <target state="translated">PartialTypeSignatures</target>
        </trans-unit>
        <trans-unit id="edf72a43b1f566581c4c8c61fcedab5c2b680b1f" translate="yes" xml:space="preserve">
          <source>Partially-applied type synonym.</source>
          <target state="translated">Частично применяемый синоним типа.</target>
        </trans-unit>
        <trans-unit id="cb737fe624c5231bedfcaa54cdb5adc3c111d709" translate="yes" xml:space="preserve">
          <source>Partitions a list of &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; into two lists. All the &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; elements are extracted, in order, to the first component of the output. Similarly the &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; elements are extracted to the second component of the output.</source>
          <target state="translated">Разбивает список &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; на два списка. Все элементы &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; извлекаются по порядку до первого компонента вывода. Точно так же элементы &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; извлекаются во второй компонент вывода.</target>
        </trans-unit>
        <trans-unit id="d7cd56f2a2a3f47830760edfb89946eb7b9e2cd1" translate="yes" xml:space="preserve">
          <source>Pass</source>
          <target state="translated">Pass</target>
        </trans-unit>
        <trans-unit id="b656895c2b247f1e0e70e028d10540d37d0e6599" translate="yes" xml:space="preserve">
          <source>Pass vector value in vector registers for function calls</source>
          <target state="translated">Передача векторного значения в векторных регистрах для вызова функций</target>
        </trans-unit>
        <trans-unit id="c54625ea849b5bef109f8ba0d861127d6f59b6f9" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to &lt;code&gt;windres&lt;/code&gt; when embedding manifests on Windows. See &lt;code&gt;-fno-embed-manifest&lt;/code&gt; in &lt;a href=&quot;#options-linker&quot;&gt;Options affecting linking&lt;/a&gt;.</source>
          <target state="translated">При встраивании манифестов в Windows передайте &amp;laquo;option&amp;raquo; в &lt;code&gt;windres&lt;/code&gt; . См. &lt;code&gt;-fno-embed-manifest&lt;/code&gt; в разделе &amp;laquo; &lt;a href=&quot;#options-linker&quot;&gt;Параметры, влияющие на связывание&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8e81975f1a1782e659196379fb59c4474c28b85" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to CPP (makes sense only if &lt;code&gt;-cpp&lt;/code&gt; is also on).</source>
          <target state="translated">Передайте ⟨option⟩ CPP (имеет смысл, только если &lt;code&gt;-cpp&lt;/code&gt; также включен ).</target>
        </trans-unit>
        <trans-unit id="1ea097fe05a9a04a2624d60c283feabd36342c47" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the C compiler.</source>
          <target state="translated">Передайте ⟨option⟩ компилятору Си.</target>
        </trans-unit>
        <trans-unit id="84280cb2173bd4a147ed2710a0aa106da9c6e256" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the C++ compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2245e044e2ee9c7852e79e8e7a89e223c413d0" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the DLL generator.</source>
          <target state="translated">Перейдите по адресу ⟨option⟩ в генератор DLL.</target>
        </trans-unit>
        <trans-unit id="3e2650a6a6f4302b3800e44c6e47bf2e4cf0ce70" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the LLVM compiler.</source>
          <target state="translated">Передайте ⟨option⟩ компилятору LLVM.</target>
        </trans-unit>
        <trans-unit id="b7042edda33fdbf17c12be5107e2f71d34b5db58" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the LLVM optimiser.</source>
          <target state="translated">Перейдите по адресу ⟨option⟩ в LLVM-оптимизатор.</target>
        </trans-unit>
        <trans-unit id="87ef00b3846b0862a7242d922be5b1f78c247481" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the assembler.</source>
          <target state="translated">Перейдите по адресу ⟨option⟩ к ассемблеру.</target>
        </trans-unit>
        <trans-unit id="e1c14b71df065b66ba63fa6a047ddbfc4df7c5f0" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the custom pre-processor (see &lt;a href=&quot;#pre-processor&quot;&gt;Options affecting a Haskell pre-processor&lt;/a&gt;).</source>
          <target state="translated">Передайте &amp;laquo;опцию&amp;raquo; пользовательскому препроцессору (см. &amp;laquo; &lt;a href=&quot;#pre-processor&quot;&gt;Опции, влияющие на препроцессор Haskell&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d4e91bac9331b7ddc74206f5303bffcecba44d00" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the interpreter sub-process (see &lt;a href=&quot;ghci#external-interpreter&quot;&gt;Running the interpreter in a separate process&lt;/a&gt;). A common use for this is to pass RTS options e.g., &lt;code&gt;-opti+RTS -opti-A64m&lt;/code&gt;, or to enable verbosity with &lt;code&gt;-opti-v&lt;/code&gt; to see what messages are being exchanged by GHC and the interpreter.</source>
          <target state="translated">Передайте &amp;laquo;опцию&amp;raquo; подпроцессу интерпретатора (см. &amp;laquo; &lt;a href=&quot;ghci#external-interpreter&quot;&gt;Запуск интерпретатора в отдельном процессе&amp;raquo;&lt;/a&gt; ). Обычно это используется для передачи параметров RTS, например, &lt;code&gt;-opti+RTS -opti-A64m&lt;/code&gt; , или для включения подробности с помощью &lt;code&gt;-opti-v&lt;/code&gt; , чтобы увидеть, какие сообщения обмениваются GHC и интерпретатором.</target>
        </trans-unit>
        <trans-unit id="123e7106bfca8a16ebd4af1ce4024a5589cb8353" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the linker when merging object files. In the case of a standard &lt;code&gt;ld&lt;/code&gt;-style linker this should generally include the &lt;code&gt;-r&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7477215f28d252ddc7702887bc7fd7f09e390008" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the linker.</source>
          <target state="translated">Перейдите по адресу ⟨option⟩ в линкер.</target>
        </trans-unit>
        <trans-unit id="ad6fb68d25dbefa94a70ca45187327b9fda1d37c" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the literate pre-processor</source>
          <target state="translated">Перейти ⟨option⟩ грамотному препроцессору.</target>
        </trans-unit>
        <trans-unit id="b3edfb19da259e0de688de612c935956f2c99d75" translate="yes" xml:space="preserve">
          <source>Passed to the C compiler.</source>
          <target state="translated">Передано компилятору Си.</target>
        </trans-unit>
        <trans-unit id="ea0ba5519147b67a3a18c0980c9d37ba54957969" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;x&lt;/code&gt; to a &lt;em&gt;linear&lt;/em&gt; function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="702f90f9120506c7fbea366d22307493c04740b3" translate="yes" xml:space="preserve">
          <source>Password -- may be empty or fake if shadow is in use (pw_passwd)</source>
          <target state="translated">Пароль --может быть пустым или поддельным,если используется тень (pw_passwd)</target>
        </trans-unit>
        <trans-unit id="22002d5b59087455e3e7a19bdb64f504fafce246" translate="yes" xml:space="preserve">
          <source>Pat</source>
          <target state="translated">Pat</target>
        </trans-unit>
        <trans-unit id="eb730bfcc87dd3826515b26e8682ec5987a8eee0" translate="yes" xml:space="preserve">
          <source>PatQ</source>
          <target state="translated">PatQ</target>
        </trans-unit>
        <trans-unit id="9b6958725be0676bc2831daffab79014db1e02d1" translate="yes" xml:space="preserve">
          <source>PatSynArgs</source>
          <target state="translated">PatSynArgs</target>
        </trans-unit>
        <trans-unit id="e528cddb6d761afbae92bc5520282c106e797b9b" translate="yes" xml:space="preserve">
          <source>PatSynArgsQ</source>
          <target state="translated">PatSynArgsQ</target>
        </trans-unit>
        <trans-unit id="04bd4c781e0911e37fd407582385ee2051fb3b1b" translate="yes" xml:space="preserve">
          <source>PatSynD</source>
          <target state="translated">PatSynD</target>
        </trans-unit>
        <trans-unit id="fe6ca4a2046e9092fc8b91acbe65f2196eafaf25" translate="yes" xml:space="preserve">
          <source>PatSynDir</source>
          <target state="translated">PatSynDir</target>
        </trans-unit>
        <trans-unit id="a00df6fba9cdb213b7e8fda3d468202a26221183" translate="yes" xml:space="preserve">
          <source>PatSynDirQ</source>
          <target state="translated">PatSynDirQ</target>
        </trans-unit>
        <trans-unit id="f84514555442628f00d3e5269a9f8b67460106af" translate="yes" xml:space="preserve">
          <source>PatSynType</source>
          <target state="translated">PatSynType</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="de556ff45621853b72f3cba9bbc16ba72c53c17f" translate="yes" xml:space="preserve">
          <source>PathNameLimit</source>
          <target state="translated">PathNameLimit</target>
        </trans-unit>
        <trans-unit id="74b7902cc01d30f193138477b0b3be38408b6f9e" translate="yes" xml:space="preserve">
          <source>PathVar</source>
          <target state="translated">PathVar</target>
        </trans-unit>
        <trans-unit id="c605d6954cb5f7d896d41bcc8529b02fa99e63c3" translate="yes" xml:space="preserve">
          <source>Pathname conventions vary from system to system. In particular, the directory separator is &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; on Unix systems and &amp;ldquo;&lt;code&gt;\&lt;/code&gt;&amp;rdquo; on Windows systems. In the sections that follow, we shall consistently use &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; as the directory separator; substitute this for the appropriate character for your system.</source>
          <target state="translated">Соглашения о путях меняются от системы к системе. В частности, разделителем каталогов является &amp;laquo; &lt;code&gt;/&lt;/code&gt; &amp;raquo; в системах Unix и &amp;laquo; &lt;code&gt;\&lt;/code&gt; &amp;raquo; в системах Windows. В следующих разделах мы будем последовательно использовать &amp;laquo; &lt;code&gt;/&lt;/code&gt; &amp;raquo; в качестве разделителя каталогов; замените его на соответствующий символ для вашей системы.</target>
        </trans-unit>
        <trans-unit id="011311874049b892a9a1e123a9582477aceacecd" translate="yes" xml:space="preserve">
          <source>Paths specified using the &lt;code&gt;-L ⟨dir⟩&lt;/code&gt; command-line option,</source>
          <target state="translated">Пути, указанные с помощью &lt;code&gt;-L ⟨dir⟩&lt;/code&gt; командной строки -L ⟨dir⟩ ,</target>
        </trans-unit>
        <trans-unit id="32c2dd7f8e76f04657fd849dcf202fe7562da7ba" translate="yes" xml:space="preserve">
          <source>Paths with a drive letter are &lt;em&gt;legacy&lt;/em&gt; paths. The drive letters are actually meaningless to the kernel. Just like Unix operating systems, drive letters are just a mount point. You can view your mount points by using the &lt;strong&gt;mountvol&lt;/strong&gt; command.</source>
          <target state="translated">Пути с буквой диска - это &lt;em&gt;устаревшие&lt;/em&gt; пути. Буквы дисков фактически не имеют значения для ядра. Как и в операционных системах Unix, буквы дисков - это всего лишь точка монтирования. Вы можете просмотреть свои точки монтирования с помощью команды &lt;strong&gt;mountvol&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="c986f82232ab7547ffc16ab2d32c4eed2d129027" translate="yes" xml:space="preserve">
          <source>Pattern &lt;code&gt;P1&lt;/code&gt; can only match against a value of type &lt;code&gt;Maybe Bool&lt;/code&gt;, so function &lt;code&gt;f&lt;/code&gt; is rejected because the type signature is &lt;code&gt;Maybe a&lt;/code&gt;. (To see this, imagine expanding the pattern synonym.)</source>
          <target state="translated">Шаблон &lt;code&gt;P1&lt;/code&gt; может соответствовать только значению типа &lt;code&gt;Maybe Bool&lt;/code&gt; , поэтому функция &lt;code&gt;f&lt;/code&gt; отклоняется, потому что сигнатура типа &lt;code&gt;Maybe a&lt;/code&gt; . (Чтобы увидеть это, представьте, что расширяете синоним шаблона.)</target>
        </trans-unit>
        <trans-unit id="77f500897e5f6bfa2060dacaae56352d7199f86a" translate="yes" xml:space="preserve">
          <source>Pattern Synonyms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02736a97b0f28b320047652ff9db6e4230fbb7da" translate="yes" xml:space="preserve">
          <source>Pattern Synonyms (sub constructs)</source>
          <target state="translated">Синонимы моделей (подконструкции)</target>
        </trans-unit>
        <trans-unit id="cc7430cf470514ab4cb77ac5dbdcb450d6be72dc" translate="yes" xml:space="preserve">
          <source>Pattern in Haskell given in &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">Шаблон в Haskell приведен в &lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="006f91db2b8fd81b325a7a341c644b6d5a498639" translate="yes" xml:space="preserve">
          <source>Pattern match on a type constructor</source>
          <target state="translated">Совпадение образов на типовом конструкторе</target>
        </trans-unit>
        <trans-unit id="429f1b07411fa0d99aa1398b100abdf4c33d79a4" translate="yes" xml:space="preserve">
          <source>Pattern match on a type constructor including its instantiated kind variables.</source>
          <target state="translated">Совпадение шаблонов на конструкторе типа,включая его инстанцированные переменные типа.</target>
        </trans-unit>
        <trans-unit id="6bca3430dd62bc5373edba36f1b7fdbacb161c1c" translate="yes" xml:space="preserve">
          <source>Pattern splices introduce variable binders but scoping of variables in expressions inside the pattern&amp;rsquo;s scope is only checked when a splice is run. Note that pattern splices that occur outside of any quotation brackets are run at compile time. Pattern splices occurring inside a quotation bracket are &lt;em&gt;not&lt;/em&gt; run at compile time; they are run when the bracket is spliced in, sometime later. For example,</source>
          <target state="translated">Соединения шаблона вводят связыватели переменных, но область видимости переменных в выражениях внутри области действия шаблона проверяется только при запуске соединения. Обратите внимание, что соединения шаблонов, которые происходят вне скобок цитат, выполняются во время компиляции. Соединения шаблонов внутри кавычек &lt;em&gt;не&lt;/em&gt; выполняются во время компиляции; они запускаются, когда скоба вставляется позже. Например,</target>
        </trans-unit>
        <trans-unit id="a6afa01cf2dd70cd7e0003f6ed14c46fc954840d" translate="yes" xml:space="preserve">
          <source>Pattern splices: anonymous and named wildcards can be used in pattern signatures. Note that &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt; has to be enabled to allow pattern signatures. Extra-constraints wildcards are not supported, just like in regular pattern signatures.</source>
          <target state="translated">Соединения шаблонов: в сигнатурах шаблонов можно использовать анонимные и именованные подстановочные знаки. Обратите внимание, что &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt; должен быть включен, чтобы разрешить подписи шаблонов. Подстановочные знаки дополнительных ограничений не поддерживаются, как и в обычных сигнатурах шаблонов.</target>
        </trans-unit>
        <trans-unit id="2ce8658da7cd25da34e9548aaeb9f301425f3397" translate="yes" xml:space="preserve">
          <source>Pattern splices: anonymous and named wildcards can be used in pattern signatures. Note that &lt;a href=&quot;scoped_type_variables#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt; has to be enabled to allow pattern signatures. Extra-constraints wildcards are not supported, just like in regular pattern signatures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f77741e8cc6b9f0b1d51a80487612daf3480f01" translate="yes" xml:space="preserve">
          <source>Pattern synonym declaration</source>
          <target state="translated">Декларация синонима шаблона</target>
        </trans-unit>
        <trans-unit id="87f1062186506aaa4f45d8a2e88afacdc300284d" translate="yes" xml:space="preserve">
          <source>Pattern synonym declarations can only occur in the top level of a module. In particular, they are not allowed as local definitions.</source>
          <target state="translated">Объявления синонимов моделей могут встречаться только на верхнем уровне модуля.В частности,они не допускаются в качестве локальных определений.</target>
        </trans-unit>
        <trans-unit id="d2c3bb10828440ff7c7e123c5c710d07e5748ac9" translate="yes" xml:space="preserve">
          <source>Pattern synonym examples</source>
          <target state="translated">Примеры синонимов моделей</target>
        </trans-unit>
        <trans-unit id="c5e40750951e5693f88641df15605c5bd88c4b78" translate="yes" xml:space="preserve">
          <source>Pattern synonym type signature</source>
          <target state="translated">Тип подписи синонима шаблона</target>
        </trans-unit>
        <trans-unit id="51c5410ff060e342b214a06f194717b99df3b318" translate="yes" xml:space="preserve">
          <source>Pattern synonym types interact with TH when (a) reifying a pattern synonym, (b) pretty printing, or (c) specifying a pattern synonym's type signature explicitly:</source>
          <target state="translated">Типы синонимов шаблонов взаимодействуют с ТН,когда (а)повторяют синоним шаблона,(б)красиво распечатывают или (в)явно указывают тип подписи синонима шаблона:</target>
        </trans-unit>
        <trans-unit id="f1ad9c9cdb2599bd5e1fe2e83cbb8368c9be95f6" translate="yes" xml:space="preserve">
          <source>Pattern synonyms</source>
          <target state="translated">Синонимы моделей</target>
        </trans-unit>
        <trans-unit id="f284b9c8384401a92e74a36de73bee9bba48c472" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are enabled by the language extension &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt;&lt;code&gt;PatternSynonyms&lt;/code&gt;&lt;/a&gt;, which is required for defining them, but &lt;em&gt;not&lt;/em&gt; for using them. More information and examples of pattern synonyms can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;Wiki page&lt;/a&gt;.</source>
          <target state="translated">Синонимы шаблонов включаются языковым расширением &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt; &lt;code&gt;PatternSynonyms&lt;/code&gt; &lt;/a&gt; , которое требуется для их определения, но &lt;em&gt;не&lt;/em&gt; для их использования. Более подробную информацию и примеры синонимов шаблонов можно найти на &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;странице Wiki&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3892448115b360ea1d603f7a781a0d734d72148a" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are enabled by the language extension &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt;&lt;code&gt;PatternSynonyms&lt;/code&gt;&lt;/a&gt;, which is required for defining them, but &lt;em&gt;not&lt;/em&gt; for using them. More information and examples of pattern synonyms can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms&quot;&gt;Wiki page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0924abc7007f369091850e500801334d4015307f" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are not supported.</source>
          <target state="translated">Синонимы моделей не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="34d581f8945b7df9b46a71872a91832ad9199e66" translate="yes" xml:space="preserve">
          <source>Pattern synonyms cannot be defined recursively.</source>
          <target state="translated">Синонимы моделей не могут быть определены рекурсивно.</target>
        </trans-unit>
        <trans-unit id="2dc90cc727d872f8ad295d8c8e70891697a625b4" translate="yes" xml:space="preserve">
          <source>Pattern synonyms enable giving names to parametrized pattern schemes. They can also be thought of as abstract constructors that don&amp;rsquo;t have a bearing on data representation. For example, in a programming language implementation, we might represent types of the language as follows:</source>
          <target state="translated">Синонимы паттернов позволяют давать имена параметризованным схемам паттернов. Их также можно рассматривать как абстрактные конструкторы, не имеющие отношения к представлению данных. Например, в реализации языка программирования мы могли бы представить типы языка следующим образом:</target>
        </trans-unit>
        <trans-unit id="f21344d9f424a665540813e111458633c97a5bdc" translate="yes" xml:space="preserve">
          <source>Pattern synonyms permit abstracting from the representation to expose matchers that behave in a constructor-like manner with respect to pattern matching. We can create pattern synonyms for the known types we care about, without committing the representation to them (note that these don&amp;rsquo;t have to be defined in the same module as the &lt;code&gt;Type&lt;/code&gt; type):</source>
          <target state="translated">Синонимы шаблонов позволяют абстрагироваться от представления, чтобы выявить средства сопоставления, которые ведут себя аналогично конструктору в отношении сопоставления с образцом. Мы можем создавать синонимы шаблонов для известных нам типов, не передавая им представление (обратите внимание, что их необязательно определять в том же модуле, что и &lt;code&gt;Type&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="0688fa514855005af7e3db664ae51d475ab8c012" translate="yes" xml:space="preserve">
          <source>Pattern-matching on &lt;code&gt;x&lt;/code&gt; and using each argument exactly once in the same fashion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1b5e68af793661029a634f35b2a59b11f9b9320" translate="yes" xml:space="preserve">
          <source>PatternGuards</source>
          <target state="translated">PatternGuards</target>
        </trans-unit>
        <trans-unit id="b082623c56fa21b4be183e2556bcea6fc12a68f9" translate="yes" xml:space="preserve">
          <source>PatternMatchFail</source>
          <target state="translated">PatternMatchFail</target>
        </trans-unit>
        <trans-unit id="8b4c340e8567284d5ccd5a9a1b9deca1c715a890" translate="yes" xml:space="preserve">
          <source>PatternSynonyms</source>
          <target state="translated">PatternSynonyms</target>
        </trans-unit>
        <trans-unit id="4d34f7a2b0b3b6df62a051917d7e7ac2de8a38df" translate="yes" xml:space="preserve">
          <source>Patterns</source>
          <target state="translated">Patterns</target>
        </trans-unit>
        <trans-unit id="5aa426e2424e04e94a5a3e7b592a1b40bfa6724a" translate="yes" xml:space="preserve">
          <source>Pc: Punctuation, Connector</source>
          <target state="translated">ПК:Пункты препинания,разъем.</target>
        </trans-unit>
        <trans-unit id="30297337298c9a17c0e9ce8ff4fbffe4052874dd" translate="yes" xml:space="preserve">
          <source>Pd: Punctuation, Dash</source>
          <target state="translated">Pd:пунктуация,Дэш</target>
        </trans-unit>
        <trans-unit id="a80098f29b2d23293bbe78beff8b9cdca1b4c011" translate="yes" xml:space="preserve">
          <source>Pe: Punctuation, Close</source>
          <target state="translated">Пи:Пунктуация,Закрыть</target>
        </trans-unit>
        <trans-unit id="d2ade9ac589ddabb36b03a6f5440ab0dd29693cc" translate="yes" xml:space="preserve">
          <source>Per default the events are written to &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; though the mechanism for writing event log data can be overridden with a custom &lt;code&gt;EventLogWriter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31566e3d063dad33b6e08c2f7f3e776d7e1473fd" translate="yes" xml:space="preserve">
          <source>Per default the events are written to &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; though the mechanism for writing event log data can be overriden with a custom &lt;code&gt;EventLogWriter&lt;/code&gt;.</source>
          <target state="translated">По умолчанию события записываются в &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; хотя механизм записи данных журнала событий можно переопределить с помощью настраиваемого &lt;code&gt;EventLogWriter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ef19e5bbcb51e651936b58513fef51416adde3" translate="yes" xml:space="preserve">
          <source>Perform a series of STM actions atomically.</source>
          <target state="translated">Выполняйте серию действий STM атоматически.</target>
        </trans-unit>
        <trans-unit id="4607f9e1b2aa67208f6265e145af0113fe0dbc2c" translate="yes" xml:space="preserve">
          <source>Perform an action with a finalizer action that is run, even if an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9ff4fe99f8968fc212ca25889a616ce793a23b" translate="yes" xml:space="preserve">
          <source>Perform compilation in parallel when possible. GHC will use up to ⟨N⟩ threads during compilation. If N is omitted, then it defaults to the number of processors. Note that compilation of a module may not begin until its dependencies have been built.</source>
          <target state="translated">По возможности выполняйте компиляцию параллельно.При компиляции GHC будет использовать до ⟨N⟩ потоков.Если N опущено,то по умолчанию это количество процессоров.Обратите внимание,что компиляция модуля может начаться только после сборки его зависимостей.</target>
        </trans-unit>
        <trans-unit id="f08a49b25677e2e61a727558011649fabe0e79a8" translate="yes" xml:space="preserve">
          <source>Perform other memory allocation, including in the GC, from node-local memory.</source>
          <target state="translated">Выполняйте другие выделения памяти,в том числе и в ГХ,из узловой локальной памяти.</target>
        </trans-unit>
        <trans-unit id="9c8aeaee99f19647da8cbc145bb54bbe2aea3ac7" translate="yes" xml:space="preserve">
          <source>Perform some computation without adding new entries to the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выполните некоторые вычисления, не добавляя новые записи в &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc6f40aca7e3932befef5ea8a6cf34162fbd455b" translate="yes" xml:space="preserve">
          <source>Perform some simplification of a built up &lt;code&gt;GDoc&lt;/code&gt;.</source>
          <target state="translated">Выполните некоторое упрощение созданного &lt;code&gt;GDoc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="a40043065024f7a1212f7fbbfa9112c036c35b22" translate="yes" xml:space="preserve">
          <source>Performance information</source>
          <target state="translated">Информация о производительности</target>
        </trans-unit>
        <trans-unit id="2195bce8153488b859e69e630a7482f89cfcc5de" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;fdatasync(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">Выполняет операцию &lt;code&gt;fdatasync(2)&lt;/code&gt; над файловым дескриптором.</target>
        </trans-unit>
        <trans-unit id="b7a0417e81aba8bc8d001bca03740cbc7548d90f" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;fsync(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">Выполняет операцию &lt;code&gt;fsync(2)&lt;/code&gt; над файловым дескриптором.</target>
        </trans-unit>
        <trans-unit id="b29525a36bb807819b75d77b028444eec3dd3744" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;posix_fadvise(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">Выполняет &lt;code&gt;posix_fadvise(2)&lt;/code&gt; над файловым дескриптором.</target>
        </trans-unit>
        <trans-unit id="abc537c00b7a43d3addf179337e100cbe868862f" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;posix_fallocate(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">Выполняет &lt;code&gt;posix_fallocate(2)&lt;/code&gt; над файловым дескриптором.</target>
        </trans-unit>
        <trans-unit id="979b1f14628086440e0d691aadba7221f17405ab" translate="yes" xml:space="preserve">
          <source>Performs completions from the given line state.</source>
          <target state="translated">Выполняет завершения из заданного состояния линии.</target>
        </trans-unit>
        <trans-unit id="d6f5806ebaf90276049ece561409944ce93d2f6e" translate="yes" xml:space="preserve">
          <source>PermParser</source>
          <target state="translated">PermParser</target>
        </trans-unit>
        <trans-unit id="4636c20125232583a78fcf9bd2b7beb3e0ee79a6" translate="yes" xml:space="preserve">
          <source>PermissionDenied</source>
          <target state="translated">PermissionDenied</target>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="d8940d325390445ba152697d12492c72d0b04785" translate="yes" xml:space="preserve">
          <source>Permit definition of instances which may lead to type-checker non-termination.</source>
          <target state="translated">Разрешение на определение инстанций,которые могут привести к нерастащиванию проверки типа.</target>
        </trans-unit>
        <trans-unit id="393bb39440da7f4d26358355203d3146a3259f99" translate="yes" xml:space="preserve">
          <source>Permute</source>
          <target state="translated">Permute</target>
        </trans-unit>
        <trans-unit id="bf005fa540ff716e77993a2f382021660a60dc6a" translate="yes" xml:space="preserve">
          <source>Pf: Punctuation, Final quote</source>
          <target state="translated">Пф:пунктуация,окончательная цитата</target>
        </trans-unit>
        <trans-unit id="130c4886394ecb032566d46f2ceb00d5633b56b7" translate="yes" xml:space="preserve">
          <source>PhantomR</source>
          <target state="translated">PhantomR</target>
        </trans-unit>
        <trans-unit id="5c5efd35d4de06a56cd9d8bce7ff35054fbfb6e4" translate="yes" xml:space="preserve">
          <source>Phase of the compilation system</source>
          <target state="translated">Фаза системы компиляции</target>
        </trans-unit>
        <trans-unit id="1299c5da4d36f7c6543acebafdc41ccf1b565939" translate="yes" xml:space="preserve">
          <source>Phases</source>
          <target state="translated">Phases</target>
        </trans-unit>
        <trans-unit id="9e4383ed7770bf7128e27cfd3770dcc6a2f9ac77" translate="yes" xml:space="preserve">
          <source>Pi: Punctuation, Initial quote</source>
          <target state="translated">Пи:пунктуация,начальная цитата</target>
        </trans-unit>
        <trans-unit id="6dc7779c6f76a5529f40811ad41c4010cc153569" translate="yes" xml:space="preserve">
          <source>Picking the right capability will help avoid unnecessary context switches. Ideally you should pass the capability that the thread that will be woken up last ran on, which you can find by calling &lt;code&gt;threadCapability&lt;/code&gt; in Haskell.</source>
          <target state="translated">Выбор правильной возможности поможет избежать ненужных переключений контекста. В идеале вы должны передать возможность, которую поток, который будет разбужен, выполнялся последним, который вы можете найти, вызвав &lt;code&gt;threadCapability&lt;/code&gt; в Haskell.</target>
        </trans-unit>
        <trans-unit id="6b18587952820d0dbe6bad15e1dae415748031e5" translate="yes" xml:space="preserve">
          <source>Pico</source>
          <target state="translated">Pico</target>
        </trans-unit>
        <trans-unit id="f298de9cea75ea5230dda5d9d28b4989aaf746f4" translate="yes" xml:space="preserve">
          <source>Pid</source>
          <target state="translated">Pid</target>
        </trans-unit>
        <trans-unit id="00dae071c082bb73eaed17b4bb3429280e110e8c" translate="yes" xml:space="preserve">
          <source>Pipe</source>
          <target state="translated">Pipe</target>
        </trans-unit>
        <trans-unit id="24a740d84ffcf739518c3074866ef1329aa79368" translate="yes" xml:space="preserve">
          <source>PipeBufferLimit</source>
          <target state="translated">PipeBufferLimit</target>
        </trans-unit>
        <trans-unit id="785af2a4ad3c4ee912623c6e0b6d4299ea305bf6" translate="yes" xml:space="preserve">
          <source>Pipes</source>
          <target state="translated">Pipes</target>
        </trans-unit>
        <trans-unit id="9e0a7d72506eac8eb62beb562cc0a99b2b58da61" translate="yes" xml:space="preserve">
          <source>PkgName</source>
          <target state="translated">PkgName</target>
        </trans-unit>
        <trans-unit id="323e26c5cebb97e7dbf03cace1de3f19bb3506f8" translate="yes" xml:space="preserve">
          <source>Place each generated function or data item into its own section in the output file if the target supports arbitrary sections. The name of the function or the name of the data item determines the section&amp;rsquo;s name in the output file.</source>
          <target state="translated">Поместите каждую сгенерированную функцию или элемент данных в отдельный раздел в выходном файле, если цель поддерживает произвольные разделы. Имя функции или имя элемента данных определяет имя раздела в выходном файле.</target>
        </trans-unit>
        <trans-unit id="93f1b5efa52a4501b9f48a9375401a8a1aa0c518" translate="yes" xml:space="preserve">
          <source>Placing &lt;code&gt;INLINE&lt;/code&gt; pragmas on certain functions that are used a lot can have a dramatic effect. See &lt;a href=&quot;exts/pragmas#inline-pragma&quot;&gt;INLINE pragma&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dccde26d3e873a5cc6c187e13a2e64082046864" translate="yes" xml:space="preserve">
          <source>Placing &lt;code&gt;INLINE&lt;/code&gt; pragmas on certain functions that are used a lot can have a dramatic effect. See &lt;a href=&quot;glasgow_exts#inline-pragma&quot;&gt;INLINE pragma&lt;/a&gt;.</source>
          <target state="translated">Размещение &lt;code&gt;INLINE&lt;/code&gt; в некоторых часто используемых функциях может иметь драматический эффект. См. &lt;a href=&quot;glasgow_exts#inline-pragma&quot;&gt;Прагму INLINE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5104db6573a7bcd152469e6c86edf365a7ccbe8" translate="yes" xml:space="preserve">
          <source>Placing a &lt;code&gt;.ghci&lt;/code&gt; file in a directory with a Haskell project is a useful way to set certain project-wide options so you don&amp;rsquo;t have to type them every time you start GHCi: eg. if your project uses multi-parameter type classes, scoped type variables, and CPP, and has source files in three subdirectories A, B and C, you might put the following lines in &lt;code&gt;.ghci&lt;/code&gt;:</source>
          <target state="translated">Размещение файла &lt;code&gt;.ghci&lt;/code&gt; в каталоге с проектом Haskell - полезный способ установить определенные параметры проекта, чтобы вам не приходилось вводить их каждый раз при запуске GHCi: например. Если в вашем проекте используются классы многопараметрических типов, переменные с ограниченным типом и CPP, а исходные файлы находятся в трех подкаталогах A, B и C, вы можете поместить следующие строки в &lt;code&gt;.ghci&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9c995f73efb3edc21d7f6d4456e31809091cc4f7" translate="yes" xml:space="preserve">
          <source>Platform differences</source>
          <target state="translated">Различия платформ</target>
        </trans-unit>
        <trans-unit id="f47156297a84abbf7baa9ecfe8129e469a19a3f7" translate="yes" xml:space="preserve">
          <source>Please advise us of other &amp;ldquo;helpful hints&amp;rdquo; that should go here!</source>
          <target state="translated">Пожалуйста, посоветуйте нам другие &amp;laquo;полезные советы&amp;raquo;, которые должны быть здесь!</target>
        </trans-unit>
        <trans-unit id="7eaa184d05b12ec4d0c22d4d64c1a97838a9baab" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation (by &lt;code&gt;ghc --make&lt;/code&gt; or &lt;code&gt;ghc -c&lt;/code&gt;), this directory is where GHC looks into to find extended interface files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f5a17562e092a639487a7dbd4558ee40520423" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation (by &lt;code&gt;ghc --make&lt;/code&gt; or &lt;code&gt;ghc -c&lt;/code&gt;), this directory is where GHC looks into to find interface files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc75381c4117eac8071f7754c526f344d1d5cfd7" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation, this directory is where GHC looks into to find object files from previous builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506c81a0d84a987facc6b6cad61df64acf77c49e" translate="yes" xml:space="preserve">
          <source>Please do not confuse &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, respectively. The latter are for exceptions built into GHC, by default, and are mostly used from within the IO monad. They do not interact with the &quot;exceptions&quot; in this package at all. This package allows you to define a new kind of exception control mechanism which does not necessarily need your code to be placed in the IO monad.</source>
          <target state="translated">Не путайте &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; соответственно. Последние предназначены для исключений, встроенных в GHC, по умолчанию, и в основном используются внутри монады ввода-вывода. Они вообще не взаимодействуют с &amp;laquo;исключениями&amp;raquo; в этом пакете. Этот пакет позволяет вам определить новый вид механизма управления исключениями, который не обязательно требует размещения вашего кода в монаде ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="c692e6e78b4a6c4d677fe5be7d6b2a1582726f5d" translate="yes" xml:space="preserve">
          <source>Please do not confuse &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, respectively. The latter are for exceptions built into GHC, by default, and are mostly used from within the IO monad. They do not interact with the &quot;exceptions&quot; in this package at all. This package allows you to define a new kind of exception control mechanism which does not necessarily need your code to be placed in the IO monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c1b94f9f65a18b2c8347c5c6959784f9b6e372" translate="yes" xml:space="preserve">
          <source>Please do not confuse &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, respectively. The latter are for exceptions built into GHC, by default, and are mostly used from within the IO monad. They do not interact with the &quot;exceptions&quot; in this package at all. This package allows you to define a new kind of exception control mechanism which does not necessarily need your code to be placed in the IO monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c73afae87542d6e8cd63fcf7f4fddd71f7004f" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">Убедитесь, что вы знаете, что происходит при использовании &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; , иначе вы можете быть удивлены неожиданным ростом кода или даже повреждением структуры данных.</target>
        </trans-unit>
        <trans-unit id="5600a929920bed98ead548566e18fe4443f663d1" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">Убедитесь, что вы знаете, что происходит при использовании &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; , иначе вы можете быть удивлены неожиданным ростом кода или даже повреждением структуры данных.</target>
        </trans-unit>
        <trans-unit id="e69690c3be83e6b82a76a0137695bb5c56adc7bc" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">Убедитесь, что вы знаете, что происходит при использовании &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; , иначе вы можете быть удивлены неожиданным ростом кода или даже повреждением структуры данных.</target>
        </trans-unit>
        <trans-unit id="11da447f43cf46de988876b5572b594db0d725d8" translate="yes" xml:space="preserve">
          <source>Please report any overly-slow GHC-compiled programs. Since GHC doesn&amp;rsquo;t have any credible competition in the performance department these days it&amp;rsquo;s hard to say what overly-slow means, so just use your judgement! Of course, if a GHC compiled program runs slower than the same program compiled with NHC or Hugs, then it&amp;rsquo;s definitely a bug.</source>
          <target state="translated">Пожалуйста, сообщайте о любых слишком медленных программах, скомпилированных с помощью GHC. Поскольку в наши дни у GHC нет достойных конкурентов в области производительности, трудно сказать, что означает чрезмерная медленность, поэтому просто используйте свое суждение! Конечно, если программа, скомпилированная GHC, работает медленнее, чем та же программа, скомпилированная с помощью NHC или Hugs, то это определенно ошибка.</target>
        </trans-unit>
        <trans-unit id="fe030bc44cd445dd18c598d2cb1edf112abb8e3c" translate="yes" xml:space="preserve">
          <source>Please report line-number errors that you find particularly unhelpful.</source>
          <target state="translated">Пожалуйста,сообщайте об ошибках с номером строки,которые вы считаете особенно бесполезными.</target>
        </trans-unit>
        <trans-unit id="4bd277cac9b50a94c530d065fbd95d2bb254e2e7" translate="yes" xml:space="preserve">
          <source>Please see the GHC API documentation for more about how to use internal APIs, etc.</source>
          <target state="translated">Подробнее об использовании внутренних API и т.д.см.документацию по GHC API.</target>
        </trans-unit>
        <trans-unit id="cda26be1b0861c9ec0b102448fed676a99b6b48e" translate="yes" xml:space="preserve">
          <source>Please, oh please, use the &lt;code&gt;-v&lt;/code&gt; option when reporting bugs! Knowing that you ran the right bits in the right order is always the first thing we want to verify.</source>
          <target state="translated">Пожалуйста, о, пожалуйста, используйте опцию &lt;code&gt;-v&lt;/code&gt; при сообщении об ошибках! Знание того, что вы запустили нужные биты в правильном порядке, - это всегда первое, что мы хотим проверить.</target>
        </trans-unit>
        <trans-unit id="6f4d3ab5a5554b6ec4bae40adfb407a50ae52738" translate="yes" xml:space="preserve">
          <source>Plugin code runs in the &lt;code&gt;TcPluginM&lt;/code&gt; monad, which provides a restricted interface to GHC API functionality that is relevant for typechecker plugins, including &lt;code&gt;IO&lt;/code&gt; and reading the environment. If you need functionality that is not exposed in the &lt;code&gt;TcPluginM&lt;/code&gt; module, you can use &lt;code&gt;unsafeTcPluginTcM :: TcM a -&amp;gt; TcPluginM a&lt;/code&gt;, but are encouraged to contact the GHC team to suggest additions to the interface. Note that &lt;code&gt;TcPluginM&lt;/code&gt; can perform arbitrary IO via &lt;code&gt;tcPluginIO :: IO a -&amp;gt; TcPluginM a&lt;/code&gt;, although some care must be taken with side effects (particularly in &lt;code&gt;tcPluginSolve&lt;/code&gt;). In general, it is up to the plugin author to make sure that any IO they do is safe.</source>
          <target state="translated">Код &lt;code&gt;TcPluginM&lt;/code&gt; выполняется в монаде TcPluginM , которая предоставляет ограниченный интерфейс для функциональности GHC API, которая актуальна для подключаемых модулей проверки типов, включая &lt;code&gt;IO&lt;/code&gt; и чтение среды. Если вам нужна функциональность, которая не представлена ​​в модуле &lt;code&gt;TcPluginM&lt;/code&gt; , вы можете использовать &lt;code&gt;unsafeTcPluginTcM :: TcM a -&amp;gt; TcPluginM a&lt;/code&gt; , но рекомендуется связаться с командой GHC, чтобы предложить дополнения к интерфейсу. Обратите внимание, что &lt;code&gt;TcPluginM&lt;/code&gt; может выполнять произвольный ввод-вывод через &lt;code&gt;tcPluginIO :: IO a -&amp;gt; TcPluginM a&lt;/code&gt; , хотя следует соблюдать осторожность с побочными эффектами (особенно в &lt;code&gt;tcPluginSolve&lt;/code&gt; ). Как правило, автор плагина должен убедиться, что любой ввод-вывод, который он выполняет, безопасен.</target>
        </trans-unit>
        <trans-unit id="0a02b13ee0dd37a4f7f44345efb7f4d0b31df1b9" translate="yes" xml:space="preserve">
          <source>Plugin modules live in a separate namespace from the user import namespace. By default, these two namespaces are the same; however, there are a few command line options which control specifically plugin packages:</source>
          <target state="translated">Модули Plugin живут в отдельном пространстве имён от пространства имён,импортируемого пользователем.По умолчанию эти два пространства имен одинаковы;однако,есть несколько опций командной строки,которые управляют конкретно пакетами плагинов:</target>
        </trans-unit>
        <trans-unit id="a16a36dca9b97ddb04911569c774e2ba2c479415" translate="yes" xml:space="preserve">
          <source>Plugins are modules that export at least a single identifier, &lt;code&gt;plugin&lt;/code&gt;, of type &lt;code&gt;GHC.Plugins.Plugin&lt;/code&gt;. All plugins should &lt;code&gt;import GHC.Plugins&lt;/code&gt; as it defines the interface to the compilation pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76e0a28ea1fdb9e9e6ad3248cf9ef3d98836e8e" translate="yes" xml:space="preserve">
          <source>Plugins are modules that export at least a single identifier, &lt;code&gt;plugin&lt;/code&gt;, of type &lt;code&gt;GhcPlugins.Plugin&lt;/code&gt;. All plugins should &lt;code&gt;import GhcPlugins&lt;/code&gt; as it defines the interface to the compilation pipeline.</source>
          <target state="translated">Плагины - это модули, которые экспортируют по крайней мере один идентификатор, &lt;code&gt;plugin&lt;/code&gt; , типа &lt;code&gt;GhcPlugins.Plugin&lt;/code&gt; . Все плагины должны &lt;code&gt;import GhcPlugins&lt;/code&gt; поскольку он определяет интерфейс конвейера компиляции.</target>
        </trans-unit>
        <trans-unit id="50a78f3b1666118502953351a9e4c0ece78555a4" translate="yes" xml:space="preserve">
          <source>Plugins are provided with all available constraints (including equalities and typeclass constraints), but it is easy for them to discard those that are not relevant to their domain, because they need return only those constraints for which they have made progress (either by solving or contradicting them).</source>
          <target state="translated">Плагины поставляются со всеми доступными ограничениями (включая ограничения на равенство и типового класса),но им легко отказаться от тех,которые не относятся к их домену,потому что им нужно вернуть только те ограничения,по которым они добились прогресса (либо решив их,либо противореча им).</target>
        </trans-unit>
        <trans-unit id="bcfecc84377584d4ad3cb1e967e83c8d968b6d81" translate="yes" xml:space="preserve">
          <source>Plugins can be added on the command line with the &lt;a href=&quot;#ghc-flag--fplugin=%E2%9F%A8module%E2%9F%A9&quot;&gt;&lt;code&gt;-fplugin=⟨module⟩&lt;/code&gt;&lt;/a&gt; option where ⟨module⟩ is a module in a registered package that exports the plugin. Arguments can be passed to the plugins with the &lt;a href=&quot;#ghc-flag--fplugin-opt=%E2%9F%A8module%E2%9F%A9:%E2%9F%A8args%E2%9F%A9&quot;&gt;&lt;code&gt;-fplugin-opt=⟨module⟩:⟨args⟩&lt;/code&gt;&lt;/a&gt; option. The list of enabled plugins can be reset with the &lt;a href=&quot;#ghc-flag--fclear-plugins&quot;&gt;&lt;code&gt;-fclear-plugins&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">Плагины можно добавить в командную строку с помощью параметра &lt;a href=&quot;#ghc-flag--fplugin=%E2%9F%A8module%E2%9F%A9&quot;&gt; &lt;code&gt;-fplugin=⟨module⟩&lt;/code&gt; &lt;/a&gt; где &amp;laquo;модуль&amp;raquo; - это модуль в зарегистрированном пакете, который экспортирует подключаемый модуль. Аргументы могут быть переданы плагинам с &lt;a href=&quot;#ghc-flag--fplugin-opt=%E2%9F%A8module%E2%9F%A9:%E2%9F%A8args%E2%9F%A9&quot;&gt; &lt;code&gt;-fplugin-opt=⟨module⟩:⟨args⟩&lt;/code&gt; &lt;/a&gt; . Список включенных плагинов можно сбросить с помощью &lt;a href=&quot;#ghc-flag--fclear-plugins&quot;&gt; &lt;code&gt;-fclear-plugins&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9dae985525fa5c1bd52094480c5fadf0801829a6" translate="yes" xml:space="preserve">
          <source>Plugins cannot optimize/inspect C--, nor can they implement things like parser/front-end modifications like GCC, apart from limited changes to the constraint solver. If you feel strongly that any of these restrictions are too onerous, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/mailing-lists-and-irc&quot;&gt;please give the GHC team a shout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c33bcc738bc3d4e4633fbe0d574f0b8c7bf15d" translate="yes" xml:space="preserve">
          <source>Plugins cannot optimize/inspect C-\-, nor can they implement things like parser/front-end modifications like GCC, apart from limited changes to the constraint solver. If you feel strongly that any of these restrictions are too onerous, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/MailingListsAndIRC&quot;&gt;please give the GHC team a shout&lt;/a&gt;.</source>
          <target state="translated">Плагины не могут оптимизировать / проверять C - \ -, а также не могут реализовывать такие вещи, как модификации синтаксического анализатора / внешнего интерфейса, такие как GCC, за исключением ограниченных изменений в решателе ограничений. Если вы уверены, что какое-либо из этих ограничений слишком обременительно, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/MailingListsAndIRC&quot;&gt;пожалуйста&lt;/a&gt; , сообщите команде GHC .</target>
        </trans-unit>
        <trans-unit id="38152a80478345577e890467dd15697fbd57687a" translate="yes" xml:space="preserve">
          <source>Plugins cannot optimize/inspect C-\-, nor can they implement things like parser/front-end modifications like GCC, apart from limited changes to the constraint solver. If you feel strongly that any of these restrictions are too onerous, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/mailing-lists-and-irc&quot;&gt;please give the GHC team a shout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657ba732d1e87d8b93008540bca513f726773ecb" translate="yes" xml:space="preserve">
          <source>Plugins do not work with &lt;code&gt;-fexternal-interpreter&lt;/code&gt;. If you need to run plugins with &lt;code&gt;-fexternal-interpreter&lt;/code&gt; let GHC developers know in &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;#14335&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acd4a0590b84ad78012a8281aa3759223cdd151" translate="yes" xml:space="preserve">
          <source>Plugins do not work with &lt;code&gt;-fexternal-interpreter&lt;/code&gt;. If you need to run plugins with &lt;code&gt;-fexternal-interpreter&lt;/code&gt; let GHC developers know in &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;Issue #14335&lt;/a&gt;.</source>
          <target state="translated">Плагины не работают с &lt;code&gt;-fexternal-interpreter&lt;/code&gt; . Если вам нужно запускать плагины с &lt;code&gt;-fexternal-interpreter&lt;/code&gt; сообщите об этом разработчикам GHC в &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;выпуске № 14335&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d1483c843780c87aec4fd3aa51d7d94a8b96a4e" translate="yes" xml:space="preserve">
          <source>Po: Punctuation, Other</source>
          <target state="translated">По:пунктуация,другое</target>
        </trans-unit>
        <trans-unit id="f79a28423ed1ae0232efb54ad41227d0955084f3" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="translated">Point</target>
        </trans-unit>
        <trans-unit id="a7f9dff21b1ddcdcf80248743f347d8d0da9bd72" translate="yes" xml:space="preserve">
          <source>Pointer equality.</source>
          <target state="translated">Равенство указателей.</target>
        </trans-unit>
        <trans-unit id="9b121b8b051ea2dd152358f19ef9a92d0061d863" translate="yes" xml:space="preserve">
          <source>Pointer to the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e8cc6922489fcddbf0a22dd3e2de7b10d8bd37" translate="yes" xml:space="preserve">
          <source>Polar form</source>
          <target state="translated">полярная форма</target>
        </trans-unit>
        <trans-unit id="08ec06c8c3d316a130a751bea478b9d8cd36463e" translate="yes" xml:space="preserve">
          <source>Poll the semaphore until it is available, then lock it. Unlike semWait, this will block only the current thread rather than the entire process.</source>
          <target state="translated">Опросите семафор,пока он не станет доступен,затем заприте его.В отличие от semWait,это заблокирует только текущий поток,а не весь процесс.</target>
        </trans-unit>
        <trans-unit id="f60030530d452b22d889af65e4dbea1ad5231ba6" translate="yes" xml:space="preserve">
          <source>PolyKinds</source>
          <target state="translated">PolyKinds</target>
        </trans-unit>
        <trans-unit id="778627418cb4b30cdfe47281afdbf30f1a173700" translate="yes" xml:space="preserve">
          <source>Pool</source>
          <target state="translated">Pool</target>
        </trans-unit>
        <trans-unit id="41b680d741ab1eaec7b7f722d04d7131ec90b3b5" translate="yes" xml:space="preserve">
          <source>Pool management</source>
          <target state="translated">Управление бассейном</target>
        </trans-unit>
        <trans-unit id="71deae26a59f4c366e9d565ae1eea4f3ace4a347" translate="yes" xml:space="preserve">
          <source>Pools are currently implemented using &lt;code&gt;malloc/free&lt;/code&gt;, so while they might be a more convenient way to structure your memory allocation than using one of the other forms of allocation, they won&amp;rsquo;t be any more efficient. We do plan to provide an improved-performance implementation of Pools in the future, however.</source>
          <target state="translated">В настоящее время &lt;code&gt;malloc/free&lt;/code&gt; реализуются с использованием malloc / free , поэтому, хотя они могут быть более удобным способом структурировать распределение памяти, чем использование одной из других форм распределения, они не будут более эффективными. Однако в будущем мы планируем предоставить пулы с улучшенной производительностью.</target>
        </trans-unit>
        <trans-unit id="2df5eed666ad15052a9c4b2714990bcfc3e1bfe4" translate="yes" xml:space="preserve">
          <source>Pop the ByteString we have constructed so far, if any, yielding a new chunk in the result ByteString.</source>
          <target state="translated">Pop The ByteString мы построили до сих пор,если таковые имеются,давая новый фрагмент в результате ByteString.</target>
        </trans-unit>
        <trans-unit id="fe9afec2cdc2c7d8517084a2d65a63864d25ccaa" translate="yes" xml:space="preserve">
          <source>Pop the most recent call-site off the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; самый последний сайт вызова из CallStack .</target>
        </trans-unit>
        <trans-unit id="184d55340a7ea9436efac0e4b30658a294cc194c" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Удалите наименьший элемент из очереди, используя предоставленный компаратор на теге, возвращаясь к исходной позиции элемента, когда компаратор возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c1beba4a0f9fa2d27717b6fdfbe4fe2c7701db7" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271a5762b7c42ed6fa8d02ca16eea309bf866f5e" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8d7b36ba997a86666ef5b0a2e955a7f3121f1d" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag.</source>
          <target state="translated">Вытащите самый маленький элемент из очереди,используя прилагаемый компаратор на метке.</target>
        </trans-unit>
        <trans-unit id="d0305355484ccbf0a5332dd6a8f21a5cc2b3e243" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Удалите наименьший элемент из очереди, используя предоставленный компаратор, возвращаясь к исходной позиции элемента, когда компаратор возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01d0a772369a2f419cd1206d689c75ab3f892dbb" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e40c51ae12dd9289f50e967a169d35f779478a6" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecde65687583e5067a6f236eb0adeaea9fb3c926" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator.</source>
          <target state="translated">Выпустите самый маленький элемент из очереди,используя компаратор,входящий в комплект поставки.</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="1bacaf21b2fe90b21bbc565ba919a04acd5baee5" translate="yes" xml:space="preserve">
          <source>Portable</source>
          <target state="translated">Portable</target>
        </trans-unit>
        <trans-unit id="89d8f29ace289b18dbbef31338d9cf587f44295f" translate="yes" xml:space="preserve">
          <source>Portable to Hugs and GHC. Requires MPTCs</source>
          <target state="translated">Перенос на обнимашки и GHC.Требуется MPTC</target>
        </trans-unit>
        <trans-unit id="d67331323a539f65439ac2219e811fa90a48d4a1" translate="yes" xml:space="preserve">
          <source>Portions Copyright : (c) Tom Harper 2008-2009, (c) Bryan O'Sullivan 2009, (c) Duncan Coutts 2009</source>
          <target state="translated">Порции Авторское право:c)Том Харпер 2008-2009,c)Брайан О'Салливан 2009,duncan Coutts 2009</target>
        </trans-unit>
        <trans-unit id="3db8887ea19a282f0bf7fbe5de701083bec25186" translate="yes" xml:space="preserve">
          <source>Portions obtained from hbc (c) Lennart Augusstson</source>
          <target state="translated">Порции,полученные от hbc c)Леннарт Огуссон</target>
        </trans-unit>
        <trans-unit id="c9b1b30d011fe2b612eff7c95b1c553cdf039f7c" translate="yes" xml:space="preserve">
          <source>Pos</source>
          <target state="translated">Pos</target>
        </trans-unit>
        <trans-unit id="cf1c85adba548e8d681255278976584a7e4a44de" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="translated">Position</target>
        </trans-unit>
        <trans-unit id="718239faf2c7ad4b5be8fc3d53f933e6298dd64c" translate="yes" xml:space="preserve">
          <source>Position in file</source>
          <target state="translated">Положение в файле</target>
        </trans-unit>
        <trans-unit id="a98f91ff888a0baac961ccc11866ac56d92f3491" translate="yes" xml:space="preserve">
          <source>Position independent executables are required by some platforms as they enable address-space layout randomization (ASLR), a common security measure. They can also be useful as they can be dynamically loaded and used as shared libraries by other executables.</source>
          <target state="translated">Для некоторых платформ требуются независимые от положения исполняемые файлы,так как они позволяют использовать рандомизацию адресного пространства (ASLR)-общую меру безопасности.Они также могут быть полезны,так как могут быть динамически загружены и использованы в качестве разделяемых библиотек другими исполняемыми файлами.</target>
        </trans-unit>
        <trans-unit id="6a42e40e7381223e58fc6699427898624e3d568b" translate="yes" xml:space="preserve">
          <source>Position independent executables should be dynamically-linked (e.g. built with &lt;a href=&quot;#ghc-flag--dynamic&quot;&gt;&lt;code&gt;-dynamic&lt;/code&gt;&lt;/a&gt; and only loaded into other dynamically-linked executables to ensure that only one &lt;code&gt;libHSrts&lt;/code&gt; is present if loaded into the address space of another Haskell process.</source>
          <target state="translated">Независимые от позиции исполняемые файлы должны быть динамически связаны (например, построены с помощью &lt;a href=&quot;#ghc-flag--dynamic&quot;&gt; &lt;code&gt;-dynamic&lt;/code&gt; &lt;/a&gt; и загружены только в другие динамически связанные исполняемые файлы, чтобы гарантировать, что присутствует только одна &lt;code&gt;libHSrts&lt;/code&gt; если она загружена в адресное пространство другого процесса Haskell.</target>
        </trans-unit>
        <trans-unit id="f21a0136d6ab8fb27cd7d944927f57c96bb35706" translate="yes" xml:space="preserve">
          <source>PosixVersion</source>
          <target state="translated">PosixVersion</target>
        </trans-unit>
        <trans-unit id="6662b9da87a72fea9bd249c0718c63c20d41c5e4" translate="yes" xml:space="preserve">
          <source>Postcomposition with a pure function (right-to-left variant).</source>
          <target state="translated">Посткомпозиция с чистой функцией (вариант справа налево).</target>
        </trans-unit>
        <trans-unit id="68b34bc77c96ccaa5d23f02c3788537d21fd9171" translate="yes" xml:space="preserve">
          <source>Postcomposition with a pure function.</source>
          <target state="translated">Посткомпозиция с чистой функцией.</target>
        </trans-unit>
        <trans-unit id="c4450a1082e97ad779541d6b592b90e8113cd10b" translate="yes" xml:space="preserve">
          <source>PostfixOperators</source>
          <target state="translated">PostfixOperators</target>
        </trans-unit>
        <trans-unit id="5190c068a9cfa9fe6dafeaa183d9b2aaef45c829" translate="yes" xml:space="preserve">
          <source>Ppr</source>
          <target state="translated">Ppr</target>
        </trans-unit>
        <trans-unit id="0c19dcec06f6c91c0f2eff83d377b3454295bda3" translate="yes" xml:space="preserve">
          <source>PprM</source>
          <target state="translated">PprM</target>
        </trans-unit>
        <trans-unit id="38f93d32853eca4603a582eb7a404079e10b855d" translate="yes" xml:space="preserve">
          <source>Pragma</source>
          <target state="translated">Pragma</target>
        </trans-unit>
        <trans-unit id="1e47ffdf3c66e2f3acab07393382905387740b5f" translate="yes" xml:space="preserve">
          <source>PragmaD</source>
          <target state="translated">PragmaD</target>
        </trans-unit>
        <trans-unit id="6a503249a0dda8aeffc97783a04cdefe488d7002" translate="yes" xml:space="preserve">
          <source>Pragmas all take the form &lt;code&gt;{-# word ... #-}&lt;/code&gt; where ⟨word⟩ indicates the type of pragma, and is followed optionally by information specific to that type of pragma. Case is ignored in ⟨word⟩. The various values for ⟨word⟩ that GHC understands are described in the following sections; any pragma encountered with an unrecognised ⟨word⟩ is ignored. The layout rule applies in pragmas, so the closing &lt;code&gt;#-}&lt;/code&gt; should start in a column to the right of the opening &lt;code&gt;{-#&lt;/code&gt;.</source>
          <target state="translated">Все прагмы имеют форму &lt;code&gt;{-# word ... #-}&lt;/code&gt; где word⟩ указывает тип прагмы, за которой, необязательно, следует информация, относящаяся к этому типу прагмы. В &amp;laquo;слове&amp;raquo; регистр игнорируется. Различные значения для &amp;laquo;слова&amp;raquo;, которые понимает GHC, описаны в следующих разделах; любая прагма, встречающаяся с нераспознанным &amp;laquo;словом&amp;raquo;, игнорируется. Правило макета применяется в прагмах, поэтому закрывающий &lt;code&gt;#-}&lt;/code&gt; должен начинаться в столбце справа от открывающего &lt;code&gt;{-#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de91c36fde9f78913dd737b3ac96a872a8cf867b" translate="yes" xml:space="preserve">
          <source>Pre-defined directories</source>
          <target state="translated">Предварительно определенные каталоги</target>
        </trans-unit>
        <trans-unit id="b7f5558e808991eda01cbcf863b6fb9f860df9c3" translate="yes" xml:space="preserve">
          <source>Pre-emption</source>
          <target state="translated">Pre-emption</target>
        </trans-unit>
        <trans-unit id="616e1d6e6f47b2dc96ac1a5ae54540016239b6ef" translate="yes" xml:space="preserve">
          <source>Pre-processing is optional, the &lt;a href=&quot;phases#ghc-flag--cpp&quot;&gt;&lt;code&gt;-cpp&lt;/code&gt;&lt;/a&gt; flag turns it on. See &lt;a href=&quot;phases#c-pre-processor&quot;&gt;Options affecting the C pre-processor&lt;/a&gt; for more details.</source>
          <target state="translated">Предварительная обработка необязательна, ее &lt;a href=&quot;phases#ghc-flag--cpp&quot;&gt; &lt;code&gt;-cpp&lt;/code&gt; &lt;/a&gt; флаг -cpp . См &lt;a href=&quot;phases#c-pre-processor&quot;&gt;Параметры влияющие на C препроцессор&lt;/a&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="b56df0dc547f1c3c9c6bdf3cf6bc836ae75d592f" translate="yes" xml:space="preserve">
          <source>Prec</source>
          <target state="translated">Prec</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="69d353b33ac29db4cf194048bdbcd68112b6f57f" translate="yes" xml:space="preserve">
          <source>Precedence operations</source>
          <target state="translated">Приоритетные операции</target>
        </trans-unit>
        <trans-unit id="6e9db1fa77d52cf522ad8a7a915070250aa06a60" translate="yes" xml:space="preserve">
          <source>Precedences</source>
          <target state="translated">Precedences</target>
        </trans-unit>
        <trans-unit id="7d4c782369e2a524fee0cc4b706316c8a2f516ce" translate="yes" xml:space="preserve">
          <source>Precomposition with a pure function (right-to-left variant).</source>
          <target state="translated">Прекомпозиция с чистой функцией (вариант справа налево).</target>
        </trans-unit>
        <trans-unit id="7efe8aecf7d7ec9a6579a56c2d3f073a07aea88e" translate="yes" xml:space="preserve">
          <source>Precomposition with a pure function.</source>
          <target state="translated">Прекомпозиция с чистой функцией.</target>
        </trans-unit>
        <trans-unit id="754ba6611e7bacba5a9fb90876697ee505efa3e8" translate="yes" xml:space="preserve">
          <source>Pred</source>
          <target state="translated">Pred</target>
        </trans-unit>
        <trans-unit id="7b11e8e297f569849de36b44d30fcbbb4fbbe8ad" translate="yes" xml:space="preserve">
          <source>PredQ</source>
          <target state="translated">PredQ</target>
        </trans-unit>
        <trans-unit id="9eee28bfd739e1debf4d3b892d013537ae16da9f" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="translated">Predicate</target>
        </trans-unit>
        <trans-unit id="5d3249c48d800f447f533f0fa317e54353a59d06" translate="yes" xml:space="preserve">
          <source>Predicate determining whether the first argument is inside the second argument.</source>
          <target state="translated">Предсказать,находится ли первый аргумент внутри второго.</target>
        </trans-unit>
        <trans-unit id="55b56b7a38f2aaf5493f86b3d26035da3508b3bb" translate="yes" xml:space="preserve">
          <source>Predicate to select exceptions</source>
          <target state="translated">Предсказать,чтобы выбрать исключения</target>
        </trans-unit>
        <trans-unit id="74ff649a3a1be6633677b33ec66e3623a45738d8" translate="yes" xml:space="preserve">
          <source>Predicates</source>
          <target state="translated">Predicates</target>
        </trans-unit>
        <trans-unit id="96b847cc7746c0d1f7662c2ba5e962da4df9bff5" translate="yes" xml:space="preserve">
          <source>Predicates on documents</source>
          <target state="translated">Предсказания на документах</target>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Prefix</target>
        </trans-unit>
        <trans-unit id="10a0703c5e9784ab6072eefca5e5d67b8bab1aea" translate="yes" xml:space="preserve">
          <source>PrefixI</source>
          <target state="translated">PrefixI</target>
        </trans-unit>
        <trans-unit id="3d7f56ffea75d06f65599fca02fef48b1a3c121a" translate="yes" xml:space="preserve">
          <source>Prefs</source>
          <target state="translated">Prefs</target>
        </trans-unit>
        <trans-unit id="2d8e8af65e69e615c74499754307d13c9b3e4bab" translate="yes" xml:space="preserve">
          <source>Prelude</source>
          <target state="translated">Prelude</target>
        </trans-unit>
        <trans-unit id="17951797c095385f82b7ed2be1b0b9cbd50b504e" translate="yes" xml:space="preserve">
          <source>Prepares an empty write buffer. This lets the device decide how to set up a write buffer: the buffer may need to point to a specific location in memory, for example. This is typically used by the client when switching from reading to writing on a buffered read/write device.</source>
          <target state="translated">Готовит пустой буфер записи.Это позволяет устройству решить,как установить буфер записи:например,буфер должен указывать на определённое место в памяти.Это обычно используется клиентом при переходе от чтения к записи на буферизованном устройстве чтения/записи.</target>
        </trans-unit>
        <trans-unit id="e756fbcebaf305207bf892820ae2fb41ad4bdd3f" translate="yes" xml:space="preserve">
          <source>Prepend an element to the stream.</source>
          <target state="translated">Подготовьте элемент к потоку.</target>
        </trans-unit>
        <trans-unit id="24451f10c39a033b9d567c3384a201089e447d0e" translate="yes" xml:space="preserve">
          <source>Present a visual alert using the &lt;code&gt;flash&lt;/code&gt; capability.</source>
          <target state="translated">Представьте визуальное предупреждение, используя функцию &lt;code&gt;flash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f1fbb34fcfce7c17bb348ece516318a4a36a3e4" translate="yes" xml:space="preserve">
          <source>Presently, only standard constraints, tuples and type synonyms for those two sorts of constraint are permitted in instance contexts and superclasses (without extra flags). The reason is that permitting more general constraints can cause type checking to loop, as it would with these two programs:</source>
          <target state="translated">В настоящее время разрешены только стандартные ограничения,кортежи и синонимы типов для этих двух типов ограничений в контекстах экземпляров и суперклассах (без дополнительных флагов).Причина в том,что разрешение более общих ограничений может привести к зацикливанию проверки типов,как это было бы в этих двух программах:</target>
        </trans-unit>
        <trans-unit id="3a533287e20f4ecff2b1e94d9ecd624990690055" translate="yes" xml:space="preserve">
          <source>Preserve, unchanged, the entries whose keys are missing from the other map.</source>
          <target state="translated">Сохранять без изменений записи,ключи которых отсутствуют на другой карте.</target>
        </trans-unit>
        <trans-unit id="b0f7adbbb69e916ea1927afb55f2ecddd2cc7a5f" translate="yes" xml:space="preserve">
          <source>Pretty</source>
          <target state="translated">Pretty</target>
        </trans-unit>
        <trans-unit id="9bfe234869187d35c7a0ae4cca314aded4bb1a5b" translate="yes" xml:space="preserve">
          <source>Pretty much anyone who uses this function is in a state of sin because whether or not a character is encodable will, in general, depend on the context in which it occurs.</source>
          <target state="translated">Почти каждый,кто использует эту функцию,находится в состоянии греха,потому что кодируемый символ или нет будет зависеть,в общем,от контекста,в котором он происходит.</target>
        </trans-unit>
        <trans-unit id="9a3ba5e8fa76ce9f1f76507bf772a40b2714f091" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Довольно распечатать &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dedd939f5eb8f17de16de0deb9579148f161282" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Довольно распечатать &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2157c3e2c2e08e7d9469e18b1d6d2509fdc1116" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Довольно распечатать &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24a5908c42be14f75c50cae9cb71fef066d896a2" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Довольно распечатать &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="296539186fb752a49f377917ff5a8b60910cd510" translate="yes" xml:space="preserve">
          <source>Pretty print a value with the &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; level.</source>
          <target state="translated">Довольно напечатайте значение с уровнем &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dee0fe2bf13d7aeaf670d551f0f8e724a8229133" translate="yes" xml:space="preserve">
          <source>Pretty print a value with the &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; level.</source>
          <target state="translated">Довольно напечатайте значение с уровнем &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3902ef81760a73ba152aafba884456ad6ae55826" translate="yes" xml:space="preserve">
          <source>Pretty print the type. &lt;code&gt;ShowType :: k -&amp;gt; ErrorMessage&lt;/code&gt;</source>
          <target state="translated">Довольно печатный шрифт. &lt;code&gt;ShowType :: k -&amp;gt; ErrorMessage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d1c61942f4d68589a44b45a71c4f04ff54f0e46" translate="yes" xml:space="preserve">
          <source>Pretty printing class, simlar to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; but nicer looking.</source>
          <target state="translated">Хороший класс печати, простой, чтобы &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; но более приятный вид.</target>
        </trans-unit>
        <trans-unit id="fb9fb477d57eb6faf402bf1e5b55cd7c5bcd432d" translate="yes" xml:space="preserve">
          <source>Pretty printing class, simlar to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; but nicer looking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de8e739fe935b04aa52b399738ac3101fb3ef3f" translate="yes" xml:space="preserve">
          <source>Pretty printing class, simlar to &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; but nicer looking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa35ad6c9b5033404eb8f0e2bfca62d78aef25b2" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Симпатичный полиграфический класс. Уровень приоритета используется так же, как в классе &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; . Минимально полное определение - это &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6003344bfaa462ef2829aa012e40d0f204fd8d4b" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Симпатичный полиграфический класс. Уровень приоритета используется так же, как в классе &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; . Минимально полное определение - это &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7605fec354fe6f4bc05aa4679861cd3ca163d486" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ed9c1885cc6441472c3a338a7ff234773679fa" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8019107b7ff8b88f63156a83931d2ba1f7929ef" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bfe4011cea2c0ef246e2983b1f3218adb75234" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0b905e0e2fe34c10df06c3257897a0d4174db5" translate="yes" xml:space="preserve">
          <source>Pretty printing via &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprPatSynType&quot;&gt;pprPatSynType&lt;/a&gt;&lt;/code&gt; abbreviates a pattern synonym's type unambiguously in concrete syntax: The rule of thumb is to print initial empty universals and the required context as &lt;code&gt;() =&amp;gt;&lt;/code&gt;, if existentials and a provided context follow. If only universals and their required context, but no existentials are specified, only the universals and their required context are printed. If both or none are specified, so both (or none) are printed.</source>
          <target state="translated">Красивая печать через &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprPatSynType&quot;&gt;pprPatSynType&lt;/a&gt;&lt;/code&gt; однозначно сокращает тип синонима шаблона в конкретном синтаксисе: практическое правило - печатать исходные пустые универсалии и требуемый контекст как &lt;code&gt;() =&amp;gt;&lt;/code&gt; , если следуют экзистенциальные и предоставленный контекст. Если указаны только универсалии и их требуемый контекст, но не экзистенциальные, печатаются только универсалии и их требуемый контекст. Если указаны оба значения или ни один, то печатаются оба (или ни один).</target>
        </trans-unit>
        <trans-unit id="913403112273ef6e2854bcf0f8c908964725c43b" translate="yes" xml:space="preserve">
          <source>Pretty prints a pattern synonym type signature</source>
          <target state="translated">Красиво печатает подпись синонима типа шаблона.</target>
        </trans-unit>
        <trans-unit id="d4e682f695f1f2c1d3c722dd6d5b3b250860bb3f" translate="yes" xml:space="preserve">
          <source>Pretty prints a pattern synonym's type; follows the usual conventions to print a pattern synonym type compactly, yet unambiguously. See the note on &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynType&quot;&gt;PatSynType&lt;/a&gt;&lt;/code&gt; and the section on pattern synonyms in the GHC user's guide for more information.</source>
          <target state="translated">Pretty печатает тип синонима шаблона; следует обычным соглашениям для компактной, но однозначной печати типа синонима шаблона. См. Примечание о &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynType&quot;&gt;PatSynType&lt;/a&gt;&lt;/code&gt; и раздел о синонимах шаблонов в руководстве пользователя GHC для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="f7763808de129b1653f86f4b6c4478b1be06d267" translate="yes" xml:space="preserve">
          <source>Pretty typeclass</source>
          <target state="translated">Симпатичный шрифт</target>
        </trans-unit>
        <trans-unit id="9e53c1cac90b48260e445d3942d8dc757e8a9ad1" translate="yes" xml:space="preserve">
          <source>Pretty-printer</source>
          <target state="translated">Pretty-printer</target>
        </trans-unit>
        <trans-unit id="299e09a4ecf7d0f0c71dd28f182c4640d6372f53" translate="yes" xml:space="preserve">
          <source>PrettyLevel</source>
          <target state="translated">PrettyLevel</target>
        </trans-unit>
        <trans-unit id="cfad1a2758e3a164bd5b4b3f7f8ff793ee9e089b" translate="yes" xml:space="preserve">
          <source>Prevent loading of the user&amp;rsquo;s local package database in the initial stack.</source>
          <target state="translated">Предотвратить загрузку локальной базы данных пакетов пользователя в начальный стек.</target>
        </trans-unit>
        <trans-unit id="82f73f32fff7781aec7b0b514e54e58cf7551ee7" translate="yes" xml:space="preserve">
          <source>Prevents the compiler from applying the monomorphism restriction to bindings lacking explicit type signatures.</source>
          <target state="translated">Предотвращает применение компилятором ограничения мономорфизма к привязкам,не имеющим явных признаков типа.</target>
        </trans-unit>
        <trans-unit id="9628fe995a8e090e6fd2edb95cb73c1eb15224d5" translate="yes" xml:space="preserve">
          <source>Previous versions of GHC accepted &lt;code&gt;OPTIONS&lt;/code&gt; rather than &lt;code&gt;OPTIONS_GHC&lt;/code&gt;, but that is now deprecated.</source>
          <target state="translated">Предыдущие версии GHC принимали &lt;code&gt;OPTIONS&lt;/code&gt; , а не &lt;code&gt;OPTIONS_GHC&lt;/code&gt; , но теперь это устарело.</target>
        </trans-unit>
        <trans-unit id="91406666c314d5f229091e983a7d1e2bee142e52" translate="yes" xml:space="preserve">
          <source>Previously we discussed annotation pragmas (&lt;a href=&quot;#annotation-pragmas&quot;&gt;Source annotations&lt;/a&gt;), which we mentioned could be used to give compiler plugins extra guidance or information. Annotations for a module can be retrieved by a plugin, but you must go through the modules &lt;code&gt;ModGuts&lt;/code&gt; in order to get it. Because annotations can be arbitrary instances of &lt;code&gt;Data&lt;/code&gt; and &lt;code&gt;Typeable&lt;/code&gt;, you need to give a type annotation specifying the proper type of data to retrieve from the interface file, and you need to make sure the annotation type used by your users is the same one your plugin uses. For this reason, we advise distributing annotations as part of the package which also provides compiler plugins if possible.</source>
          <target state="translated">Ранее мы обсуждали прагмы аннотаций ( &lt;a href=&quot;#annotation-pragmas&quot;&gt;аннотации исходного кода&lt;/a&gt; ), которые, как мы упоминали, могут использоваться для предоставления подключаемым модулям компилятора дополнительных указаний или информации. Аннотации для модуля можно получить с помощью плагина, но вы должны пройти через модули &lt;code&gt;ModGuts&lt;/code&gt; , чтобы получить его. Поскольку аннотации могут быть произвольными экземплярами &lt;code&gt;Data&lt;/code&gt; и &lt;code&gt;Typeable&lt;/code&gt; , вам необходимо предоставить аннотацию типа, указывающую правильный тип данных для извлечения из файла интерфейса, и вам необходимо убедиться, что тип аннотации, используемый вашими пользователями, совпадает с типом вашего плагина. использование. По этой причине мы рекомендуем распространять аннотации как часть пакета, который также предоставляет плагины компилятора, если это возможно.</target>
        </trans-unit>
        <trans-unit id="c4a698fc939e769737cd9fa4869e3c7f6a0dd613" translate="yes" xml:space="preserve">
          <source>Prim</source>
          <target state="translated">Prim</target>
        </trans-unit>
        <trans-unit id="097f7b8f054d460e64f528c1af758136a46531eb" translate="yes" xml:space="preserve">
          <source>PrimMVar</source>
          <target state="translated">PrimMVar</target>
        </trans-unit>
        <trans-unit id="b7683822a291cb2b58d760a6c293578f8d5053f1" translate="yes" xml:space="preserve">
          <source>Primality tests</source>
          <target state="translated">Испытания на первичность</target>
        </trans-unit>
        <trans-unit id="82232b5d4e89a2db12db9f128d9da3055f65c345" translate="yes" xml:space="preserve">
          <source>Primarily, this module consists of an interface to the C-land dynamic linker.</source>
          <target state="translated">В первую очередь,этот модуль состоит из интерфейса к C-ландшафтному динамическому линкеру.</target>
        </trans-unit>
        <trans-unit id="0889b00639729e1c129ac932d18003c7a198375f" translate="yes" xml:space="preserve">
          <source>Primary format character.</source>
          <target state="translated">Символ первичного формата.</target>
        </trans-unit>
        <trans-unit id="d2a03ab0b74a812f6fdc4dae75971c24107ba46b" translate="yes" xml:space="preserve">
          <source>Primary group ID (pw_gid)</source>
          <target state="translated">Идентификатор первичной группы (pw_gid)</target>
        </trans-unit>
        <trans-unit id="7607b51c8e1274c8fe1e933fecba18513d4f362a" translate="yes" xml:space="preserve">
          <source>PrimaryLANGID</source>
          <target state="translated">PrimaryLANGID</target>
        </trans-unit>
        <trans-unit id="cdd32e5e2d189473b1b0376cb2f1fe6ef6aad406" translate="yes" xml:space="preserve">
          <source>Primitive (unboxed) types cannot be defined in Haskell, and are therefore built into the language and compiler. Primitive types are always unlifted; that is, a value of a primitive type cannot be bottom. (Note: a &amp;ldquo;boxed&amp;rdquo; type means that a value is represented by a pointer to a heap object; a &amp;ldquo;lifted&amp;rdquo; type means that terms of that type may be bottom. See the next paragraph for an example.) We use the convention (but it is only a convention) that primitive types, values, and operations have a &lt;code&gt;#&lt;/code&gt; suffix (see &lt;a href=&quot;#magic-hash&quot;&gt;The magic hash&lt;/a&gt;). For some primitive types we have special syntax for literals, also described in the &lt;a href=&quot;#magic-hash&quot;&gt;same section&lt;/a&gt;.</source>
          <target state="translated">Примитивные (распакованные) типы не могут быть определены в Haskell, поэтому они встроены в язык и компилятор. Примитивные типы всегда не поднимаются; то есть значение примитивного типа не может быть нижним. (Примечание: тип &amp;laquo;в рамке&amp;raquo; означает, что значение представлено указателем на объект кучи; &amp;laquo;приподнятый&amp;raquo; тип означает, что элементы этого типа могут быть нижними. См. Пример в следующем абзаце.) Мы используем соглашение (но это всего лишь соглашение), что примитивные типы, значения и операции имеют суффикс &lt;code&gt;#&lt;/code&gt; (см &lt;a href=&quot;#magic-hash&quot;&gt;. Магический хеш&lt;/a&gt; ). Для некоторых примитивных типов у нас есть специальный синтаксис для литералов, также описанный в том &lt;a href=&quot;#magic-hash&quot;&gt;же разделе&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed70420a258d4d86482691d23a33b9fb05e90661" translate="yes" xml:space="preserve">
          <source>Primitive (unboxed) types cannot be defined in Haskell, and are therefore built into the language and compiler. Primitive types are always unlifted; that is, a value of a primitive type cannot be bottom. (Note: a &amp;ldquo;boxed&amp;rdquo; type means that a value is represented by a pointer to a heap object; a &amp;ldquo;lifted&amp;rdquo; type means that terms of that type may be bottom. See the next paragraph for an example.) We use the convention (but it is only a convention) that primitive types, values, and operations have a &lt;code&gt;#&lt;/code&gt; suffix (see &lt;a href=&quot;magic_hash#magic-hash&quot;&gt;The magic hash&lt;/a&gt;). For some primitive types we have special syntax for literals, also described in the &lt;a href=&quot;#magic-hash&quot;&gt;same section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e9ce0c637b5622aea322e7cbd9b861a8cb4dc6" translate="yes" xml:space="preserve">
          <source>Primitive Documents</source>
          <target state="translated">Первобытные документы</target>
        </trans-unit>
        <trans-unit id="f422d79426f666f61a7d39fe5b03b368a8e73a13" translate="yes" xml:space="preserve">
          <source>Primitive bytecode type.</source>
          <target state="translated">Примитивный тип байткода.</target>
        </trans-unit>
        <trans-unit id="c1c26c88e959f52e5cf4888bbad7bcf524b8820f" translate="yes" xml:space="preserve">
          <source>Primitive combinators</source>
          <target state="translated">Примитивные комбинаторы</target>
        </trans-unit>
        <trans-unit id="2e21eceae717d39a08de608f7fc31fb7d5627808" translate="yes" xml:space="preserve">
          <source>Primitive movement capabilities</source>
          <target state="translated">Возможности примитивного движения</target>
        </trans-unit>
        <trans-unit id="c2de126cf4ab0cd60ff18f3b3c4a2455396c348e" translate="yes" xml:space="preserve">
          <source>Primitive operations</source>
          <target state="translated">Примитивные действия</target>
        </trans-unit>
        <trans-unit id="7e8cb2eba99c97514ca435a92c7b1f3eff1bdea3" translate="yes" xml:space="preserve">
          <source>Primitive values are often represented by a simple bit-pattern, such as &lt;code&gt;Int#&lt;/code&gt;, &lt;code&gt;Float#&lt;/code&gt;, &lt;code&gt;Double#&lt;/code&gt;. But this is not necessarily the case: a primitive value might be represented by a pointer to a heap-allocated object. Examples include &lt;code&gt;Array#&lt;/code&gt;, the type of primitive arrays. Thus, &lt;code&gt;Array#&lt;/code&gt; is an unlifted, boxed type. A primitive array is heap-allocated because it is too big a value to fit in a register, and would be too expensive to copy around; in a sense, it is accidental that it is represented by a pointer. If a pointer represents a primitive value, then it really does point to that value: no unevaluated thunks, no indirections. Nothing can be at the other end of the pointer than the primitive value. A numerically-intensive program using unboxed types can go a &lt;em&gt;lot&lt;/em&gt; faster than its &amp;ldquo;standard&amp;rdquo; counterpart&amp;mdash;we saw a threefold speedup on one example.</source>
          <target state="translated">Примитивные значения часто представлены простым битовым шаблоном, например &lt;code&gt;Int#&lt;/code&gt; , &lt;code&gt;Float#&lt;/code&gt; , &lt;code&gt;Double#&lt;/code&gt; . Но это не обязательно так: примитивное значение может быть представлено указателем на объект, выделенный кучей. Примеры включают &lt;code&gt;Array#&lt;/code&gt; , тип примитивных массивов. Таким образом, &lt;code&gt;Array#&lt;/code&gt; - это неподъемный, коробочный тип. Примитивный массив выделяется в куче, потому что это слишком большое значение, чтобы поместиться в регистр, и было бы слишком дорого копировать; в некотором смысле случайно, что он представлен указателем. Если указатель представляет примитивное значение, тогда он действительно указывает на это значение: никаких неоцененных переходов, никаких косвенных указаний. На другом конце указателя не может быть ничего, кроме примитивного значения. Программа с интенсивным числовым использованием распакованных типов может работать &lt;em&gt;намного&lt;/em&gt; быстрее, чем ее &amp;laquo;стандартный&amp;raquo; аналог - мы видели трехкратное ускорение на одном примере.</target>
        </trans-unit>
        <trans-unit id="ffafa88c6f976297b9421ad4171675a387b485a2" translate="yes" xml:space="preserve">
          <source>Primitives</source>
          <target state="translated">Primitives</target>
        </trans-unit>
        <trans-unit id="66914127445228947976717f3559fb76a49308ac" translate="yes" xml:space="preserve">
          <source>Primitives and basic combinators</source>
          <target state="translated">Примитивы и основные комбинаторы</target>
        </trans-unit>
        <trans-unit id="0f20585a9b902d862530a747335f7e0f0fd615e0" translate="yes" xml:space="preserve">
          <source>Primitives are available to decode words of various sizes, both big and little endian.</source>
          <target state="translated">Примитивы доступны для декодирования слов различного размера,как больших,так и маленьких эндийцев.</target>
        </trans-unit>
        <trans-unit id="c11324a450fecb745dc9a0165fed6d81224cd078" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;RuntimeRep&lt;/code&gt; parameters as they appear; otherwise, they are defaulted to &lt;code&gt;'LiftedRep&lt;/code&gt;.</source>
          <target state="translated">Печать &lt;code&gt;RuntimeRep&lt;/code&gt; параметры , как они появляются; в противном случае по умолчанию используется значение &lt;code&gt;'LiftedRep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eeb81239159c8f60639d490579db34ba47cedde5" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;RuntimeRep&lt;/code&gt; variables in types which are runtime-representation polymorphic.</source>
          <target state="translated">Печать &lt;code&gt;RuntimeRep&lt;/code&gt; переменных типов , которые во время выполнения-представление полиморфные.</target>
        </trans-unit>
        <trans-unit id="eb7f33c02cf627c59368ecbf1b10534cd5ee7098" translate="yes" xml:space="preserve">
          <source>Print GHC&amp;rsquo;s numeric version number only.</source>
          <target state="translated">Печатайте только числовой номер версии GHC.</target>
        </trans-unit>
        <trans-unit id="5a8565f8c11652d5f9aaf3cf4b7da14d30635811" translate="yes" xml:space="preserve">
          <source>Print a full list of the module dependencies to stdout. (This is the standard verbosity flag, so the list will also be displayed with &lt;code&gt;-v3&lt;/code&gt; and &lt;code&gt;-v4&lt;/code&gt;; see &lt;a href=&quot;using#options-help&quot;&gt;Verbosity options&lt;/a&gt;.)</source>
          <target state="translated">Распечатайте полный список зависимостей модуля в stdout. (Это стандартный флаг подробности, поэтому список также будет отображаться с &lt;code&gt;-v3&lt;/code&gt; и &lt;code&gt;-v4&lt;/code&gt; ; см. &lt;a href=&quot;using#options-help&quot;&gt;Параметры подробности&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="80be7ba4189d5acb5419cc416166ad88b14a93ab" translate="yes" xml:space="preserve">
          <source>Print a one-line string including GHC&amp;rsquo;s version number.</source>
          <target state="translated">Выведите однострочную строку, включая номер версии GHC.</target>
        </trans-unit>
        <trans-unit id="2bc805e229391602d4747b2b177e7eedc95c2396" translate="yes" xml:space="preserve">
          <source>Print a one-line summary of the size of the Core program at the end of the optimisation pipeline</source>
          <target state="translated">Распечатать однолинейную сводку по размеру основной программы в конце трубопровода оптимизации</target>
        </trans-unit>
        <trans-unit id="568fb95ae04c3a3502b02cfb9ffd902745997992" translate="yes" xml:space="preserve">
          <source>Print a one-line summary of the size of the Core program at the end of the optimisation pipeline.</source>
          <target state="translated">В конце трубопровода оптимизации выведите на печать однолинейную сводку по размеру основной программы.</target>
        </trans-unit>
        <trans-unit id="6606d0f053fe23bd0db8aac9087cd16974cb24e2" translate="yes" xml:space="preserve">
          <source>Print coercions in types</source>
          <target state="translated">Принуждения к печати по типам</target>
        </trans-unit>
        <trans-unit id="0ea6948032c361e0c90acead06d47726e674342c" translate="yes" xml:space="preserve">
          <source>Print explicit &lt;code&gt;forall&lt;/code&gt; quantification in types. See also &lt;a href=&quot;exts/explicit_forall#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0432cd36a550ecbc08a2b9824c1b63189a9b6ee6" translate="yes" xml:space="preserve">
          <source>Print explicit &lt;code&gt;forall&lt;/code&gt; quantification in types. See also &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt;&lt;code&gt;-XExplicitForAll&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Печать явного &lt;code&gt;forall&lt;/code&gt; количественной оценки типов. См. Также &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt; &lt;code&gt;-XExplicitForAll&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37d21fefc9ecda651a1fad5250210b879a85ecad" translate="yes" xml:space="preserve">
          <source>Print explicit &lt;code&gt;forall&lt;/code&gt; quantification in types. See also &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85495d8d9c916ccee29d19249d67da31693ae1fc" translate="yes" xml:space="preserve">
          <source>Print explicit kind foralls and kind arguments in types. See also &lt;a href=&quot;exts/kind_signatures#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d90f3662f54252f7284d92a4b10054139a2658" translate="yes" xml:space="preserve">
          <source>Print explicit kind foralls and kind arguments in types. See also &lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt;&lt;code&gt;-XKindSignatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Выведите явные типы данных и аргументы типа в типах. См. Также &lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt; &lt;code&gt;-XKindSignatures&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e56540a92be164f6f8a1c47dd5d494997f195e34" translate="yes" xml:space="preserve">
          <source>Print explicit kind foralls and kind arguments in types. See also &lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc5df58f6562a5f05e5a96496e219a954a057a2" translate="yes" xml:space="preserve">
          <source>Print extra information from typechecker.</source>
          <target state="translated">Печатайте дополнительную информацию с помощью типографского шрифта.</target>
        </trans-unit>
        <trans-unit id="1c689b67035c8c53f98145aff3c638fb305e66de" translate="yes" xml:space="preserve">
          <source>Print information about the compiler.</source>
          <target state="translated">Распечатать информацию о компиляторе.</target>
        </trans-unit>
        <trans-unit id="c17674ed7a508bc28415982ff7aee239af184532" translate="yes" xml:space="preserve">
          <source>Print out each pass name as it happens</source>
          <target state="translated">Распечатать имя каждого прохода,как это происходит</target>
        </trans-unit>
        <trans-unit id="6346e07b56af6623e4a5cded288d10867e65bab0" translate="yes" xml:space="preserve">
          <source>Print out each pass name, its runtime and heap allocations as it happens. Note that this may come at a slight performance cost as the compiler will be a bit more eager in forcing pass results to more accurately account for their costs.</source>
          <target state="translated">Распечатайте имя каждого прохода,время его выполнения и распределение кучи,как это происходит.Обратите внимание,что это может принести небольшие затраты на производительность,так как компилятор будет немного больше стремиться заставить результаты проходов более точно учитывать их стоимость.</target>
        </trans-unit>
        <trans-unit id="5e4bdf4d18e7fa5c826928aec79e1ccb449c15ff" translate="yes" xml:space="preserve">
          <source>Print out summary of what kind of information the renamer had to bring in.</source>
          <target state="translated">Распечатайте краткое изложение того,какую информацию должен был принести переименованник.</target>
        </trans-unit>
        <trans-unit id="bc9a53e87cca6954b36dc36c0f11d367ea1e424e" translate="yes" xml:space="preserve">
          <source>Print out usage information.</source>
          <target state="translated">Распечатайте информацию об использовании.</target>
        </trans-unit>
        <trans-unit id="b2c88a9f866c4e0f0dc02f44c6ee50187a966424" translate="yes" xml:space="preserve">
          <source>Print single alternative case expressions as strict lets.</source>
          <target state="translated">Выведите единичные альтернативные регистровые выражения в строгом соответствии со строгими правилами.</target>
        </trans-unit>
        <trans-unit id="8fb7a347c6a4aa8013e70856b20c399cd1c29ff8" translate="yes" xml:space="preserve">
          <source>Print single alternative case expressions as though they were strict let expressions. This is helpful when your code does a lot of unboxing.</source>
          <target state="translated">Выведите единичные альтернативные регистровые выражения,как если бы они были строгими пустыми выражениями.Это полезно,когда ваш код делает много распаковок.</target>
        </trans-unit>
        <trans-unit id="2d376b6f72267ae8b071df5ba4178bc23f3f30f8" translate="yes" xml:space="preserve">
          <source>Print the name of each compilation phase as it is executed. (equivalent to &lt;a href=&quot;debugging#ghc-flag--dshow-passes&quot;&gt;&lt;code&gt;-dshow-passes&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Выведите название каждой фазы компиляции по мере ее выполнения. (эквивалент &lt;a href=&quot;debugging#ghc-flag--dshow-passes&quot;&gt; &lt;code&gt;-dshow-passes&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2d35a116b4eacba35aab727296180081e67d78e2" translate="yes" xml:space="preserve">
          <source>Print the path to GHC&amp;rsquo;s library directory. This is the top of the directory tree containing GHC&amp;rsquo;s libraries, interfaces, and include files (usually something like &lt;code&gt;/usr/local/lib/ghc-5.04&lt;/code&gt; on Unix). This is the value of &lt;code&gt;$libdir&lt;/code&gt; in the package configuration file (see &lt;a href=&quot;packages#packages&quot;&gt;Packages&lt;/a&gt;).</source>
          <target state="translated">Выведите путь к каталогу библиотеки GHC. Это верхняя часть дерева каталогов, содержащего библиотеки, интерфейсы и включаемые файлы GHC (обычно что-то вроде &lt;code&gt;/usr/local/lib/ghc-5.04&lt;/code&gt; в Unix). Это значение &lt;code&gt;$libdir&lt;/code&gt; в файле конфигурации пакета (см. &lt;a href=&quot;packages#packages&quot;&gt;Пакеты&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7dddff095a26ddf9987f527bca4da1fdb41bb6b7" translate="yes" xml:space="preserve">
          <source>Print the supported command line options. This flag can be used for autocompletion in a shell.</source>
          <target state="translated">Распечатайте поддерживаемые параметры командной строки.Этот флаг может быть использован для автозавершения в оболочке.</target>
        </trans-unit>
        <trans-unit id="0de10c90956a31b467677165023124cbf6667b11" translate="yes" xml:space="preserve">
          <source>Print the supported language extensions.</source>
          <target state="translated">Печать поддерживаемых языковых расширений.</target>
        </trans-unit>
        <trans-unit id="0536d584c0b1d66d30f2000068d79cde18e65738" translate="yes" xml:space="preserve">
          <source>Print values of type &lt;code&gt;Word#&lt;/code&gt; and &lt;code&gt;Word64#&lt;/code&gt; (but not values of type &lt;code&gt;Int#&lt;/code&gt; and &lt;code&gt;Int64#&lt;/code&gt;) in hexadecimal instead of decimal. The hexadecimal is zero-padded to make the length of the representation a power of two. For example: &lt;code&gt;0x0A0A##&lt;/code&gt;, &lt;code&gt;0x000FFFFF##&lt;/code&gt;, &lt;code&gt;0xC##&lt;/code&gt;. This flag may be helpful when you are producing a bit pattern that to expect to work correctly on a 32-bit or a 64-bit architecture. Dumping hexadecimal literals after optimizations and constant folding makes it easier to confirm that the generated bit pattern is correct.</source>
          <target state="translated">&lt;code&gt;Word64#&lt;/code&gt; значения типа &lt;code&gt;Word#&lt;/code&gt; и Word64 # (но не значения типа &lt;code&gt;Int#&lt;/code&gt; и &lt;code&gt;Int64#&lt;/code&gt; ) в шестнадцатеричном виде вместо десятичного. Шестнадцатеричное число дополняется нулями, чтобы длина представления была степенью двойки. Например: &lt;code&gt;0x0A0A##&lt;/code&gt; , &lt;code&gt;0x000FFFFF##&lt;/code&gt; , &lt;code&gt;0xC##&lt;/code&gt; . Этот флаг может быть полезен, когда вы создаете битовый шаблон, который должен правильно работать в 32-битной или 64-битной архитектуре. Сброс шестнадцатеричных литералов после оптимизации и сворачивания констант упрощает проверку правильности сгенерированного битового шаблона.</target>
        </trans-unit>
        <trans-unit id="3c8fc49ee76dfe430eaaae5d2c003a633432f9f0" translate="yes" xml:space="preserve">
          <source>Print values of type &lt;code&gt;Word#&lt;/code&gt; in hexadecimal.</source>
          <target state="translated">Вывести значения типа &lt;code&gt;Word#&lt;/code&gt; в шестнадцатеричном формате.</target>
        </trans-unit>
        <trans-unit id="f7be34b673808f2d48e5ab2574882b799d823a21" translate="yes" xml:space="preserve">
          <source>PrintfArg</source>
          <target state="translated">PrintfArg</target>
        </trans-unit>
        <trans-unit id="7089bc7979848c154683cd0084ff2f7d3644e64b" translate="yes" xml:space="preserve">
          <source>PrintfType</source>
          <target state="translated">PrintfType</target>
        </trans-unit>
        <trans-unit id="78c20ed70f591c5b802ec52da8af22641a65cb47" translate="yes" xml:space="preserve">
          <source>Printing Functions</source>
          <target state="translated">Функции печати</target>
        </trans-unit>
        <trans-unit id="81c35c214270ee006f5c56860fe38a2f038e3898" translate="yes" xml:space="preserve">
          <source>Prints a one-line summary of timing statistics for the GHC run. This option is equivalent to &lt;code&gt;+RTS -tstderr&lt;/code&gt;, see &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS options to control the garbage collector&lt;/a&gt;.</source>
          <target state="translated">Печатает однострочную сводку временной статистики для запуска GHC. Этот параметр эквивалентен &lt;code&gt;+RTS -tstderr&lt;/code&gt; , см. Параметры &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS для управления сборщиком мусора&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a32b1200253fea3bdcc41abafe3985fec209486" translate="yes" xml:space="preserve">
          <source>Prints a value without forcing its evaluation. &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; may be used on values whose types are unknown or partially known, which might be the case for local variables with polymorphic types at a breakpoint. While inspecting the runtime value, &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; attempts to reconstruct the type of the value, and will elaborate the type in GHCi&amp;rsquo;s environment if possible. If any unevaluated components (thunks) are encountered, then &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; binds a fresh variable with a name beginning with &lt;code&gt;_t&lt;/code&gt; to each thunk. See &lt;a href=&quot;#breakpoints&quot;&gt;Breakpoints and inspecting variables&lt;/a&gt; for more information. See also the &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt;&lt;code&gt;:sprint&lt;/code&gt;&lt;/a&gt; command, which works like &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; but does not bind new variables.</source>
          <target state="translated">Печатает значение без принудительного вычисления. &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; может использоваться для значений, типы которых неизвестны или частично известны, что может иметь место для локальных переменных с полиморфными типами в точке останова. При проверке значения времени выполнения &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; пытается восстановить тип значения и, если возможно, уточняет тип в среде GHCi. Если встречаются какие-либо неоцененные компоненты (преобразователи), то &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; связывает новую переменную с именем, начинающимся с &lt;code&gt;_t&lt;/code&gt; , с каждым преобразователем. См. &lt;a href=&quot;#breakpoints&quot;&gt;Точки останова и проверка переменных&lt;/a&gt; для получения дополнительной информации. См. Также команду &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt; &lt;code&gt;:sprint&lt;/code&gt; &lt;/a&gt; , которая работает как &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; ,&lt;/a&gt; но не связывает новые переменные.</target>
        </trans-unit>
        <trans-unit id="1901cde8b08fed8941230e3f83f1c3cf4a834d5a" translate="yes" xml:space="preserve">
          <source>Prints a value without forcing its evaluation. &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt;&lt;code&gt;:sprint&lt;/code&gt;&lt;/a&gt; is similar to &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;, with the difference that unevaluated subterms are not bound to new variables, they are simply denoted by &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">Печатает значение без принудительного вычисления. &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt; &lt;code&gt;:sprint&lt;/code&gt; &lt;/a&gt; похож на &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; , с той разницей, что неоцененные подтермы не привязаны к новым переменным, они просто обозначаются &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac4afe4944ea3331a3d2c608c60d31227edcb709" translate="yes" xml:space="preserve">
          <source>Prints the latest available version of package ⟨P⟩.</source>
          <target state="translated">Печатает последнюю доступную версию пакета ⟨P⟩.</target>
        </trans-unit>
        <trans-unit id="7595d277dda450dbba120e42b0d8f0d521de9f36" translate="yes" xml:space="preserve">
          <source>Prints the value of ⟨identifier⟩ in the same way as &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;. Unlike &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:force&quot;&gt;&lt;code&gt;:force&lt;/code&gt;&lt;/a&gt; evaluates each thunk that it encounters while traversing the value. This may cause exceptions or infinite loops, or further breakpoints (which are ignored, but displayed).</source>
          <target state="translated">Печатает значение &amp;laquo;идентификатора&amp;raquo; так же, как &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; . В отличие &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:force&quot;&gt; &lt;code&gt;:force&lt;/code&gt; &lt;/a&gt; оценивает каждый преобразователь , что он сталкивается во время прохождения значения. Это может вызвать исключения, бесконечные циклы или дополнительные точки останова (которые игнорируются, но отображаются).</target>
        </trans-unit>
        <trans-unit id="c61486fb3c29083825fc530e85db902f694779e3" translate="yes" xml:space="preserve">
          <source>PrioIOAvailable</source>
          <target state="translated">PrioIOAvailable</target>
        </trans-unit>
        <trans-unit id="cbad2d411713243f18b25f4ad0c20cdf1f597155" translate="yes" xml:space="preserve">
          <source>Prior to GHC 8.10, when passing an &lt;code&gt;ArrayArray#&lt;/code&gt; argument to a foreign function, the foreign function would see a pointer to the &lt;code&gt;StgMutArrPtrs&lt;/code&gt; rather than just the payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabfc2adbe5a1490690f6f40c6d623b433df0934" translate="yes" xml:space="preserve">
          <source>Prior to version 1.4.0.0, the default implementation of the &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; method was defined as</source>
          <target state="translated">До версии 1.4.0.0 реализация метода &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; по умолчанию была определена как</target>
        </trans-unit>
        <trans-unit id="cda4f4476ac13bb2ae7bc15ee6736ba96cc21c68" translate="yes" xml:space="preserve">
          <source>PrivateUse</source>
          <target state="translated">PrivateUse</target>
        </trans-unit>
        <trans-unit id="77a4e6819b3e432af8190d38019f1fa2de3878fb" translate="yes" xml:space="preserve">
          <source>Probalistic Miller-Rabin primality test.</source>
          <target state="translated">Тест на праймериз Миллера-Рабина.</target>
        </trans-unit>
        <trans-unit id="52ec5a32c2a80f826813962523827657c92e7c45" translate="yes" xml:space="preserve">
          <source>ProcRetHandles</source>
          <target state="translated">ProcRetHandles</target>
        </trans-unit>
        <trans-unit id="59240a07db79f390a176a1da2a0e4e73723df8cb" translate="yes" xml:space="preserve">
          <source>Proceed as normal, but do not delete any intermediate files.</source>
          <target state="translated">Действуйте как обычно,но не удаляйте промежуточные файлы.</target>
        </trans-unit>
        <trans-unit id="3413e1941d2b768b5d94e902b36b50f24a0b9e21" translate="yes" xml:space="preserve">
          <source>Process completion</source>
          <target state="translated">Завершение процесса</target>
        </trans-unit>
        <trans-unit id="78730cfe630ab980fa7c67900c84883cadf329d1" translate="yes" xml:space="preserve">
          <source>Process environment</source>
          <target state="translated">технологическая среда</target>
        </trans-unit>
        <trans-unit id="c650b71115a88a0c6c8c39f8cb70327da49c6469" translate="yes" xml:space="preserve">
          <source>Process groups</source>
          <target state="translated">Процессуальные группы</target>
        </trans-unit>
        <trans-unit id="e19a92ef9380a074cb7ab3ec33973d7ac5dd17b1" translate="yes" xml:space="preserve">
          <source>Process status</source>
          <target state="translated">Состояние процесса</target>
        </trans-unit>
        <trans-unit id="450d3838ec09ee134c6165b911e3bfce5c2da9f2" translate="yes" xml:space="preserve">
          <source>Process the command-line, and return the list of values that matched (and those that didn't). The arguments are:</source>
          <target state="translated">Обработайте командную строку и верните список соответствующих значений (и тех,которые не соответствовали).Аргументы таковы:</target>
        </trans-unit>
        <trans-unit id="165237f99277fa9f8a75372d3b27ef4e2226ebb6" translate="yes" xml:space="preserve">
          <source>Process times</source>
          <target state="translated">длительность процессов</target>
        </trans-unit>
        <trans-unit id="b8940363e3104375a16f75f2a6c0076297b5bcc8" translate="yes" xml:space="preserve">
          <source>ProcessAccessRights</source>
          <target state="translated">ProcessAccessRights</target>
        </trans-unit>
        <trans-unit id="6feb0f0bc2fdaddeeb0ce66961c31fda1b5189f4" translate="yes" xml:space="preserve">
          <source>ProcessEntry32</source>
          <target state="translated">ProcessEntry32</target>
        </trans-unit>
        <trans-unit id="3c0317db948b70e6ca821af4a8b48f2b33ee6e46" translate="yes" xml:space="preserve">
          <source>ProcessGroupID</source>
          <target state="translated">ProcessGroupID</target>
        </trans-unit>
        <trans-unit id="21e8dd5d13542f0c6a51fa47c09f48b388d00925" translate="yes" xml:space="preserve">
          <source>ProcessHandle</source>
          <target state="translated">ProcessHandle</target>
        </trans-unit>
        <trans-unit id="2f4686b1023443590b468cf68975e34698d5dce7" translate="yes" xml:space="preserve">
          <source>ProcessHandle__</source>
          <target state="translated">ProcessHandle__</target>
        </trans-unit>
        <trans-unit id="5906efeedbc929caae1ebc56efbb67f6db7d732f" translate="yes" xml:space="preserve">
          <source>ProcessID</source>
          <target state="translated">ProcessID</target>
        </trans-unit>
        <trans-unit id="0e72272456a5dfc962478aaa4cd24c7dbdabd6cf" translate="yes" xml:space="preserve">
          <source>ProcessId</source>
          <target state="translated">ProcessId</target>
        </trans-unit>
        <trans-unit id="01ccef775dbbfe8438822cf4c77cb31753b62e29" translate="yes" xml:space="preserve">
          <source>ProcessId, number of threads, parent ProcessId, process base priority, path of executable file</source>
          <target state="translated">ProcessId,количество потоков,родительский ProcessId,приоритет базы процесса,путь к исполняемому файлу</target>
        </trans-unit>
        <trans-unit id="14d4e6622d64799268058fe065228ec4cdce7733" translate="yes" xml:space="preserve">
          <source>ProcessInput</source>
          <target state="translated">ProcessInput</target>
        </trans-unit>
        <trans-unit id="b1f9a72a478a9193ff3d8c1d61ee84b82b8b55d5" translate="yes" xml:space="preserve">
          <source>ProcessOutput</source>
          <target state="translated">ProcessOutput</target>
        </trans-unit>
        <trans-unit id="b85a49842dd03687134a104f7f2c219a332fd41b" translate="yes" xml:space="preserve">
          <source>ProcessStatus</source>
          <target state="translated">ProcessStatus</target>
        </trans-unit>
        <trans-unit id="6f22a38212f7ae729981dc2920c82da11507b5bd" translate="yes" xml:space="preserve">
          <source>ProcessTimes</source>
          <target state="translated">ProcessTimes</target>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="translated">Processes</target>
        </trans-unit>
        <trans-unit id="d9138d8dd701d266606ca4c3ec53b292b58d6a6e" translate="yes" xml:space="preserve">
          <source>Processing Strings into Html friendly things.</source>
          <target state="translated">Обработка строк в Html дружественные вещи.</target>
        </trans-unit>
        <trans-unit id="31e08f0a5d6400f5a893fc895b0737af9fc1c866" translate="yes" xml:space="preserve">
          <source>Processor features</source>
          <target state="translated">Характеристики процессора</target>
        </trans-unit>
        <trans-unit id="51346a24d3f29d2ffa996e556945ed4655cf318e" translate="yes" xml:space="preserve">
          <source>ProcessorFeature</source>
          <target state="translated">ProcessorFeature</target>
        </trans-unit>
        <trans-unit id="3fb1ad2abc3a670a4b947bec2fed69232206dac4" translate="yes" xml:space="preserve">
          <source>Produce &amp;ldquo;ticky-ticky&amp;rdquo; statistics at the end of the program run (only available if the program was linked with &lt;a href=&quot;phases#ghc-flag--debug&quot;&gt;&lt;code&gt;-debug&lt;/code&gt;&lt;/a&gt;). The ⟨file⟩ business works just like on the &lt;a href=&quot;#rts-flag--S%20%5B%E2%9F%A8file%E2%9F%A9%5D&quot;&gt;&lt;code&gt;-S [⟨file⟩]&lt;/code&gt;&lt;/a&gt; RTS option, above.</source>
          <target state="translated">Производить &amp;laquo;тикающую&amp;raquo; статистику в конце выполнения программы (доступно только в том случае, если программа была связана с &lt;a href=&quot;phases#ghc-flag--debug&quot;&gt; &lt;code&gt;-debug&lt;/code&gt; &lt;/a&gt; ). Бизнес с &amp;laquo;файлом&amp;raquo; работает так же, как и для параметра &lt;a href=&quot;#rts-flag--S%20%5B%E2%9F%A8file%E2%9F%A9%5D&quot;&gt; &lt;code&gt;-S [⟨file⟩]&lt;/code&gt; &lt;/a&gt; RTS, описанного выше.</target>
        </trans-unit>
        <trans-unit id="6cf463b6f4624fb94cd58e7897c4e59d5fb1fb3f" translate="yes" xml:space="preserve">
          <source>Produce DWARF debug information in compiled object files. ⟨n⟩ can be 0, 1, or 2, with higher numbers producing richer output. If ⟨n⟩ is omitted, level 2 is assumed.</source>
          <target state="translated">Производить отладочную информацию DWARF в скомпилированных объектных файлах.⟨n⟩ может быть 0,1 или 2,с более высокими числами,что дает более богатый вывод.Если ⟨n⟩ опущена,то предполагается уровень 2.</target>
        </trans-unit>
        <trans-unit id="50a7bf4229bc32bdecd4fd87af2196913851e65c" translate="yes" xml:space="preserve">
          <source>Produce singleton list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311b86090be24794748573ba1bb8b1841bef8144" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Frameset.</source>
          <target state="translated">Вы производите XHTML 1.0 Frameset.</target>
        </trans-unit>
        <trans-unit id="f0bce322e51b0e5e1f30cc905d309ee358c3950a" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Strict.</source>
          <target state="translated">Вы производите XHTML 1.0 Strict.</target>
        </trans-unit>
        <trans-unit id="feb762b8a956256336a4059b532f2566785ff8e7" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Transitional.</source>
          <target state="translated">Вы производите XHTML 1.0 Transitional.</target>
        </trans-unit>
        <trans-unit id="3514031227d8fe4f3d212805cc6af9c2eb3a4315" translate="yes" xml:space="preserve">
          <source>Produces an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt;&lt;/code&gt; literal from the NUL-terminated C-string starting at the given memory address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d450520789c7673ba5544cd68d80f3c2b2f73eec" translate="yes" xml:space="preserve">
          <source>Produces an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt;&lt;/code&gt; literal from the NUL-terminated C-string starting at the given memory address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3b86d1ef21b9fb2e1edc30f524e7afb491b1ad" translate="yes" xml:space="preserve">
          <source>Product</source>
          <target state="translated">Product</target>
        </trans-unit>
        <trans-unit id="9436b2fdb0e7c34a33a3c91d959bba1406290a1a" translate="yes" xml:space="preserve">
          <source>ProductType</source>
          <target state="translated">ProductType</target>
        </trans-unit>
        <trans-unit id="0c7c0674cb4b4821337188133a7e093a0462c24f" translate="yes" xml:space="preserve">
          <source>Products, lifted to functors.</source>
          <target state="translated">Продукты,поднятые на веселье.</target>
        </trans-unit>
        <trans-unit id="45873739b5a096f14b6618d0351cf66a0fc902fa" translate="yes" xml:space="preserve">
          <source>Products: encode multiple arguments to constructors</source>
          <target state="translated">Продукты:кодирование множества аргументов конструкторам</target>
        </trans-unit>
        <trans-unit id="3baa38b5927954f86d772798f9128466bb7cb156" translate="yes" xml:space="preserve">
          <source>ProfFlags</source>
          <target state="translated">ProfFlags</target>
        </trans-unit>
        <trans-unit id="684ae62f53358a3d6fa087ccc73007ad4415d51e" translate="yes" xml:space="preserve">
          <source>Profiling a program is a three-step process:</source>
          <target state="translated">Профилирование программы-это трехступенчатый процесс:</target>
        </trans-unit>
        <trans-unit id="8b0bf225ec1be7116f5172952f591da561f081d7" translate="yes" xml:space="preserve">
          <source>Profiling call stacks</source>
          <target state="translated">Профилирование стеков вызовов</target>
        </trans-unit>
        <trans-unit id="182323e605505b651eaa881921e0342a44be8b4d" translate="yes" xml:space="preserve">
          <source>Program arguments</source>
          <target state="translated">Аргументы программы</target>
        </trans-unit>
        <trans-unit id="f0abc2008747749add9fef13512caaf5675a5840" translate="yes" xml:space="preserve">
          <source>Programmers using the &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API should be aware that EAGAIN exceptions may occur for non-blocking IO!</source>
          <target state="translated">Программисты, использующие &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API, должны знать, что исключения EAGAIN могут возникать для неблокирующего ввода-вывода!</target>
        </trans-unit>
        <trans-unit id="6e4856079c43518428585d9f6f55af53723c39a0" translate="yes" xml:space="preserve">
          <source>Programmers using the &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API should be aware that EAGAIN exceptions may occur for non-blocking IO!</source>
          <target state="translated">Программисты, использующие &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API, должны знать, что исключения EAGAIN могут возникать для неблокирующего ввода-вывода!</target>
        </trans-unit>
        <trans-unit id="f5db4bda11e8bec3e596786fc436f585dc33173f" translate="yes" xml:space="preserve">
          <source>Programs compiled with &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt; may fail a bit more eagerly than one might expect. For instance,</source>
          <target state="translated">Программы, скомпилированные с помощью &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; ,&lt;/a&gt; могут терпеть неудачу несколько быстрее, чем можно было бы ожидать. Например,</target>
        </trans-unit>
        <trans-unit id="ec0bc39a0924b82acddd145c4bb3e23cd22b3bc0" translate="yes" xml:space="preserve">
          <source>Progress will usually be made by skipping the first element of the &lt;code&gt;from&lt;/code&gt; buffer. This function should only be called if you are certain that you wish to do this skipping and if the &lt;code&gt;to&lt;/code&gt; buffer has at least one element of free space. Because this function deals with decoding failure, it assumes that the from buffer has at least one element.</source>
          <target state="translated">Обычно прогресс достигается путем пропуска первого элемента &lt;code&gt;from&lt;/code&gt; буфера. Эту функцию следует вызывать только в том случае, если вы уверены, что хотите выполнить этот пропуск, и если в буфере &lt;code&gt;to&lt;/code&gt; есть хотя бы один элемент свободного пространства. Поскольку эта функция имеет дело с ошибкой декодирования, она предполагает, что буфер from имеет хотя бы один элемент.</target>
        </trans-unit>
        <trans-unit id="a01e7be7e338ce65feff32bc980eb7c0c7eb6754" translate="yes" xml:space="preserve">
          <source>Projection to the other functor.</source>
          <target state="translated">Проекция на другого весельчака.</target>
        </trans-unit>
        <trans-unit id="aaf4dfbf169435dac06d1f7571397f1db30f3f9a" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right (cf. &lt;code&gt;&lt;a href=&quot;control-monad#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Превратите функцию в монаду, просматривая монадические аргументы слева направо (см. &lt;code&gt;&lt;a href=&quot;control-monad#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="90322d805d75363f5e2ba902de35d5fb3e329291" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right (cf. &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Превратите функцию в монаду, просматривая монадические аргументы слева направо (см. &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5b1e023440a1d1251cab82a65c8a674a9ce8f45f" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right. For example,</source>
          <target state="translated">Продвигайте функцию к монаде,сканируя монадские аргументы слева направо.Например,</target>
        </trans-unit>
        <trans-unit id="f05ff30359fcf6d0cd737c9742b3ce528d2a61e0" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad.</source>
          <target state="translated">Продвинуть функцию до монады.</target>
        </trans-unit>
        <trans-unit id="bb699540cce051f9cc1055d53e69e00d6ddd26ac" translate="yes" xml:space="preserve">
          <source>PromotedConsT</source>
          <target state="translated">PromotedConsT</target>
        </trans-unit>
        <trans-unit id="6c11a71a788afd02567c23eab945ff6f9118b661" translate="yes" xml:space="preserve">
          <source>PromotedNilT</source>
          <target state="translated">PromotedNilT</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="0cbea5295e2b199673171bae00d25211a4daa049" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only). The default definition uses &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;. Instances that define &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; should also define &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Предлагаемая замена &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; с использованием парсеров нового стиля (только GHC). Определение по умолчанию использует &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; . Экземпляры, которые определяют &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; , также должны определять &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; как &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c383bc233d01d9f33a1db1df2275ceb34c0bb2c" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only).</source>
          <target state="translated">Предлагаемая замена &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; с использованием парсеров нового стиля (только GHC).</target>
        </trans-unit>
        <trans-unit id="25cf3b2ae91b78e363c940dfba15d79fbbffe0a5" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only). The default definition uses &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;. Instances that define &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; should also define &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Предлагаемая замена &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; с использованием парсеров нового стиля (только GHC). Определение по умолчанию использует &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; . Экземпляры, которые определяют &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; , также должны определять &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; как &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4f8243ce4f1bb9b8bfb0f67f0f3ba9911430da3" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only).</source>
          <target state="translated">Предлагаемая замена &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; с использованием парсеров нового стиля (только GHC).</target>
        </trans-unit>
        <trans-unit id="a22e8bd59e18b97a41af964d0ba41a98b37ab76a" translate="yes" xml:space="preserve">
          <source>Propositional equality</source>
          <target state="translated">Равенство сторонников кандидатуры</target>
        </trans-unit>
        <trans-unit id="a96dd404b246333ac1350164ef1732587afa0abb" translate="yes" xml:space="preserve">
          <source>Propositional equality. If &lt;code&gt;a :~: b&lt;/code&gt; is inhabited by some terminating value, then the type &lt;code&gt;a&lt;/code&gt; is the same as the type &lt;code&gt;b&lt;/code&gt;. To use this equality in practice, pattern-match on the &lt;code&gt;a :~: b&lt;/code&gt; to get out the &lt;code&gt;Refl&lt;/code&gt; constructor; in the body of the pattern-match, the compiler knows that &lt;code&gt;a ~ b&lt;/code&gt;.</source>
          <target state="translated">Пропозициональное равенство. Если &lt;code&gt;a :~: b&lt;/code&gt; содержит какое-то завершающее значение, тогда тип &lt;code&gt;a&lt;/code&gt; совпадает с типом &lt;code&gt;b&lt;/code&gt; . Чтобы использовать это равенство на практике, сопоставьте шаблон для &lt;code&gt;a :~: b&lt;/code&gt; чтобы получить конструктор &lt;code&gt;Refl&lt;/code&gt; ; в теле сопоставления с образцом компилятор знает, что &lt;code&gt;a ~ b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcb3452df3c76dae9ccbe4cb023c0ba8d83c8c7a" translate="yes" xml:space="preserve">
          <source>ProtectSectionFlags</source>
          <target state="translated">ProtectSectionFlags</target>
        </trans-unit>
        <trans-unit id="a48acfe3b05f29ef5d32e9c4686c610f7573d3ab" translate="yes" xml:space="preserve">
          <source>ProtocolError</source>
          <target state="translated">ProtocolError</target>
        </trans-unit>
        <trans-unit id="f505fd6f5c51f1f0eb05dff31b6b08cb2672b51b" translate="yes" xml:space="preserve">
          <source>Provide a Semigroup for an arbitrary Monoid.</source>
          <target state="translated">Предоставьте полугруппу для произвольного моноида.</target>
        </trans-unit>
        <trans-unit id="f283ee30918edc6de5015fa4f97d3ed7816f7d65" translate="yes" xml:space="preserve">
          <source>Provide a handler for exceptions thrown during execution of the first action. Note that type of the type of the argument to the handler will constrain which exceptions are caught. See &lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;'s &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9866a8b50218dd96adfd52af2f2ba6829d60a22e" translate="yes" xml:space="preserve">
          <source>Provide a handler for exceptions thrown during execution of the first action. Note that type of the type of the argument to the handler will constrain which exceptions are caught. See &lt;a href=&quot;../base-4.15.0.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;'s &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/9.0.1/docs/html/libraries/base-4.15.0.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d826fc994ddc518cced2dcde7f6017e636b0aac9" translate="yes" xml:space="preserve">
          <source>Provide an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action with the current value of an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; will be empty for the duration that the action is running.</source>
          <target state="translated">Обеспечьте действие &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; с текущим значением &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; будет пустым в течение всего срока , что действие выполняется.</target>
        </trans-unit>
        <trans-unit id="d318ed93837d829decf4e305a098deca627cd45c" translate="yes" xml:space="preserve">
          <source>Provide sendInput function and INPUT types.</source>
          <target state="translated">Обеспечьте функцию sendInput и типы входов.</target>
        </trans-unit>
        <trans-unit id="79db12aa728ff32d36bfcf47680828c1e4123304" translate="yes" xml:space="preserve">
          <source>Provided &lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is strict in its left argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b1b035b9a9a2acbcca06ac2bc748267d24aace" translate="yes" xml:space="preserve">
          <source>Provided for backwards compatibility. The tok type is ignored.</source>
          <target state="translated">Обеспечивает обратную совместимость.Тип ток игнорируется.</target>
        </trans-unit>
        <trans-unit id="a7bc9561c0283aa709c213cb1d134bcbaf33279f" translate="yes" xml:space="preserve">
          <source>Provided that you also specify &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;#scoped-type-variables&quot;&gt;Lexically scoped type variables&lt;/a&gt;), the &lt;code&gt;forall b&lt;/code&gt; scopes over the definition of &lt;code&gt;foo&lt;/code&gt;, and in particular over the type signature for &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">При условии, что вы также указываете &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;#scoped-type-variables&quot;&gt;переменные типа с лексической областью видимости&lt;/a&gt; ), &lt;code&gt;forall b&lt;/code&gt; охватывает определение &lt;code&gt;foo&lt;/code&gt; и, в частности, сигнатуру типа для &lt;code&gt;xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21d6ad1d1242a28383883be7903e1363ace75a1f" translate="yes" xml:space="preserve">
          <source>Provided that you also specify &lt;a href=&quot;scoped_type_variables#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;scoped_type_variables#scoped-type-variables&quot;&gt;Lexically scoped type variables&lt;/a&gt;), the &lt;code&gt;forall b&lt;/code&gt; scopes over the definition of &lt;code&gt;foo&lt;/code&gt;, and in particular over the type signature for &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc997c67a96d90324cee62c16fc9e9e3635c9f69" translate="yes" xml:space="preserve">
          <source>Provided the &lt;code&gt;&lt;a href=&quot;data-monoid#t:Monoid&quot;&gt;Monoid&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;data-monoid#v:mappend&quot;&gt;mappend&lt;/a&gt;&lt;/code&gt; is lazy in its second argument (otherwise best to use a strict recursive reduction):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8ea9fbe9f70c5967f311c328eacb4dedd0e97f" translate="yes" xml:space="preserve">
          <source>Provided the instance is correctly defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="800fe426f71d30314eb249f94517079d65652006" translate="yes" xml:space="preserve">
          <source>Provided the operator is strict in its left argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2e1916eee9705692128734d1af09195fa3c9ac" translate="yes" xml:space="preserve">
          <source>Provided the reduction function is lazy in its second argument, (otherwise best to use a strict recursive reduction):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e2d81ac00c42bbf57971469cfadfc86bb02898" translate="yes" xml:space="preserve">
          <source>Provided you compiled this plugin and registered it in a package (with cabal for instance,) you can then use it by just specifying &lt;code&gt;-fplugin=DoNothing.Plugin&lt;/code&gt; on the command line, and during the compilation you should see GHC say &amp;lsquo;Hello&amp;rsquo;.</source>
          <target state="translated">Если вы скомпилировали этот плагин и зарегистрировали его в пакете (например, с помощью &lt;code&gt;-fplugin=DoNothing.Plugin&lt;/code&gt; ), вы можете использовать его, просто указав -fplugin = DoNothing.Plugin в командной строке, и во время компиляции вы должны увидеть, что GHC скажет &amp;laquo;Привет&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="91cdb89ab74dded95989b9c01dab7eab785914db" translate="yes" xml:space="preserve">
          <source>Provided you have compiled this plugin and registered it in a package, you can just use it by specifying &lt;code&gt;--frontend DoNothing.FrontendPlugin&lt;/code&gt; on the command line to GHC.</source>
          <target state="translated">Если вы скомпилировали этот плагин и зарегистрировали его в пакете, вы можете просто использовать его, указав &lt;code&gt;--frontend DoNothing.FrontendPlugin&lt;/code&gt; в командной строке GHC.</target>
        </trans-unit>
        <trans-unit id="97713c7be8cb2223c431b97c899d5f61eca5a254" translate="yes" xml:space="preserve">
          <source>Provides a collection of pretty printer combinators, a set of API's that provides a way to easily print out text in a consistent format of your choosing.</source>
          <target state="translated">Предоставляет коллекцию симпатичных комбинаторов принтеров,набор API,который позволяет легко распечатывать текст в едином формате по вашему выбору.</target>
        </trans-unit>
        <trans-unit id="a3569e2937eb1626a3038f9ca0b0bd6a7c4988dd" translate="yes" xml:space="preserve">
          <source>Provides one possible concrete representation for &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt;. For a version with &lt;code&gt;&lt;a href=&quot;data-version#v:versionBranch&quot;&gt;versionBranch&lt;/a&gt;&lt;/code&gt;&lt;code&gt;= [1,2,3]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt;&lt;code&gt;= [&quot;tag1&quot;,&quot;tag2&quot;]&lt;/code&gt;, the output will be &lt;code&gt;1.2.3-tag1-tag2&lt;/code&gt;.</source>
          <target state="translated">Предоставляет одно возможное конкретное представление для &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt; . Для версии с &lt;code&gt;&lt;a href=&quot;data-version#v:versionBranch&quot;&gt;versionBranch&lt;/a&gt;&lt;/code&gt; &lt;code&gt;= [1,2,3]&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt; &lt;code&gt;= [&quot;tag1&quot;,&quot;tag2&quot;]&lt;/code&gt; вывод будет &lt;code&gt;1.2.3-tag1-tag2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f537eae177b03bcfe703fb9eae32845fd317076" translate="yes" xml:space="preserve">
          <source>Provides the standard warnings plus</source>
          <target state="translated">Предоставляет стандартные предупреждения плюс</target>
        </trans-unit>
        <trans-unit id="0bd63287653bab9cbabb2d0d820a7d6b107dd1f0" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;-pgmi /path/to/iserv-proxy&lt;/code&gt;, &lt;code&gt;-pgmo ⟨option⟩&lt;/code&gt; and &lt;code&gt;-pgmo ⟨port⟩&lt;/code&gt; in addition to &lt;a href=&quot;#ghc-flag--fexternal-interpreter&quot;&gt;&lt;code&gt;-fexternal-interpreter&lt;/code&gt;&lt;/a&gt; will then make ghc go through the proxy instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e50191dc654f6bed862d3eb8013739cc74bd723" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;-pgmi ⟨/path/to/iserv-proxy⟩&lt;/code&gt; and &lt;code&gt;-opti ⟨slave-ip⟩ -opti ⟨slave-port⟩ [-opti -v]&lt;/code&gt; in addition to &lt;a href=&quot;#ghc-flag--fexternal-interpreter&quot;&gt;&lt;code&gt;-fexternal-interpreter&lt;/code&gt;&lt;/a&gt; will then make ghc go through the proxy instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e9e18be4d476228c864a05eb9ce60a2f180d98" translate="yes" xml:space="preserve">
          <source>Providing input</source>
          <target state="translated">Предоставление входных данных</target>
        </trans-unit>
        <trans-unit id="e29e8eedc748840bd27ace9f3607818fa75df015" translate="yes" xml:space="preserve">
          <source>Provisional</source>
          <target state="translated">Provisional</target>
        </trans-unit>
        <trans-unit id="d1cea344353e26ba6f1565ed661d94f610ce9e4f" translate="yes" xml:space="preserve">
          <source>Proxy</source>
          <target state="translated">Proxy</target>
        </trans-unit>
        <trans-unit id="2da1b11ef737c06a07580fdc89d729829ccbcd4b" translate="yes" xml:space="preserve">
          <source>Proxy can even hold types of higher kinds,</source>
          <target state="translated">Прокси может содержать даже более высокие типы,</target>
        </trans-unit>
        <trans-unit id="010320dc44b945f1389c719222db299dcff6de12" translate="yes" xml:space="preserve">
          <source>Proxy#</source>
          <target state="translated">Proxy#</target>
        </trans-unit>
        <trans-unit id="1ba5ef48b66f74ab8376d1e1f5b429151921ef64" translate="yes" xml:space="preserve">
          <source>Ps: Punctuation, Open</source>
          <target state="translated">Пс:Пунктуация,Открыть</target>
        </trans-unit>
        <trans-unit id="aee53da1d005df2b730db32fdeb589f79f6dcef6" translate="yes" xml:space="preserve">
          <source>Pseudoterminal operations</source>
          <target state="translated">псевдотерминальные операции</target>
        </trans-unit>
        <trans-unit id="90c83157f6f4a1cfac097841eb12dca4943e9e58" translate="yes" xml:space="preserve">
          <source>Ptr</source>
          <target state="translated">Ptr</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">Общественный API</target>
        </trans-unit>
        <trans-unit id="7f59b284c28fa26b669e4ff42d0673d94b35db1d" translate="yes" xml:space="preserve">
          <source>Public representation of constructors</source>
          <target state="translated">Общественное представительство строителей</target>
        </trans-unit>
        <trans-unit id="b6c8b265dd1cdc6347d98f2b84d442a954eb9c33" translate="yes" xml:space="preserve">
          <source>Public representation of datatypes</source>
          <target state="translated">Публичное представление типов данных</target>
        </trans-unit>
        <trans-unit id="3a2bbb378012d44dd1acf3c097c561543bbe6aa6" translate="yes" xml:space="preserve">
          <source>Punctuation or reserved symbol, e.g. &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;::&lt;/code&gt;</source>
          <target state="translated">Знаки препинания или зарезервированный символ, например &lt;code&gt;(&lt;/code&gt; , &lt;code&gt;::&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dfef0dd557351856f42ce75d6f0e19c19a4c0ef" translate="yes" xml:space="preserve">
          <source>Puns and other patterns can be mixed in the same record:</source>
          <target state="translated">Каламбуры и другие шаблоны могут быть смешаны в одной записи:</target>
        </trans-unit>
        <trans-unit id="126aca4de6cf9f540218b2f37eb0a5ee3e8ee157" translate="yes" xml:space="preserve">
          <source>Puns are not necessarily supported:</source>
          <target state="translated">Каламбуры не обязательно поддерживаются:</target>
        </trans-unit>
        <trans-unit id="f9f539fc385ba1011d4c087559f3df068ae7d719" translate="yes" xml:space="preserve">
          <source>Puns can be used wherever record patterns occur (e.g. in &lt;code&gt;let&lt;/code&gt; bindings or at the top-level).</source>
          <target state="translated">Пуны можно использовать везде, где встречаются шаблоны записи (например, в привязках &lt;code&gt;let&lt;/code&gt; или на верхнем уровне).</target>
        </trans-unit>
        <trans-unit id="6b611b1b174cd71f53f8fab72d5be8b17f1336a4" translate="yes" xml:space="preserve">
          <source>Purity</source>
          <target state="translated">Purity</target>
        </trans-unit>
        <trans-unit id="9a02d38905933d4f8be56965d4333c36eabb3bcc" translate="yes" xml:space="preserve">
          <source>Push a call-site onto the stack.</source>
          <target state="translated">Нажмите на колл-сайт в стеке.</target>
        </trans-unit>
        <trans-unit id="7fd768e4fe7bd6bb51e495079370749b0bfeabc8" translate="yes" xml:space="preserve">
          <source>Put</source>
          <target state="translated">Put</target>
        </trans-unit>
        <trans-unit id="31cfeabab1a1a50a1974ce9355eca97ad84b2ad5" translate="yes" xml:space="preserve">
          <source>Put a data item back onto a channel, where it will be the next item read.</source>
          <target state="translated">Положите элемент данных обратно в канал,где он будет следующим прочитанным элементом.</target>
        </trans-unit>
        <trans-unit id="f2671cfd2bf701d44ddbd6aed0423a20b49e9b05" translate="yes" xml:space="preserve">
          <source>Put a data item back onto a channel, where it will be the next item read. Blocks if the queue is full.</source>
          <target state="translated">Положите элемент данных обратно в канал,где он будет следующим прочитанным элементом.Блокирует,если очередь заполнена.</target>
        </trans-unit>
        <trans-unit id="0488379e7024b984e65d02dffd4763eb7cd460ed" translate="yes" xml:space="preserve">
          <source>Put a value into a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; will &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Поместите значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; в настоящее время полный, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; будет &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd93b0ceaf0ed39d5195f954abbfc8d76b2a79d6" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">Поместите значение в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; в настоящее время заполнен, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; будет ждать, пока он не станет пустым.</target>
        </trans-unit>
        <trans-unit id="42a8fc7267ae8c1ccb347fa39255e3fe7bc6ca11" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd50fbdb7efb7e9310b7f81c4a375408c96d31a" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94d281c3905d94e39b3d263b1cf9b6250c58bee" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">Поместите значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; в настоящее время заполнен, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; будет ждать, пока он не станет пустым.</target>
        </trans-unit>
        <trans-unit id="33e8d3ac33132ba689a91323286fa0c8d9cd0c54" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">Поместите значение в &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; в настоящее время заполнен, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; будет ждать, пока он не станет пустым.</target>
        </trans-unit>
        <trans-unit id="73b3278fe6bb373e8f3ee5addd3728dbee9dc19b" translate="yes" xml:space="preserve">
          <source>Put merely lifts Builder into a Writer monad, applied to ().</source>
          <target state="translated">Положите просто лифт Builder в монаду Writer,применяется к ().</target>
        </trans-unit>
        <trans-unit id="798e33a0a2f8665389e39345a5dfc2a745e465a9" translate="yes" xml:space="preserve">
          <source>Put something inside an HTML element.</source>
          <target state="translated">Положите что-нибудь внутри HTML-элемента.</target>
        </trans-unit>
        <trans-unit id="40d8d868890674e2158985b5244b5e97bbdc32ef" translate="yes" xml:space="preserve">
          <source>Put to run</source>
          <target state="translated">Запускай</target>
        </trans-unit>
        <trans-unit id="b438a3bf094fbf042e7f48cbd844a202bc700f5d" translate="yes" xml:space="preserve">
          <source>Put two pieces of error message next to each other.</source>
          <target state="translated">Положите два куска сообщения об ошибке рядом друг с другом.</target>
        </trans-unit>
        <trans-unit id="353d5eefcc26e9ede7b76010beb4c768d6085770" translate="yes" xml:space="preserve">
          <source>PutM</source>
          <target state="translated">PutM</target>
        </trans-unit>
        <trans-unit id="f84ae14fa11d241b306d7b6dacccea9c11140d12" translate="yes" xml:space="preserve">
          <source>Putting a strictness annotation (&lt;code&gt;!&lt;/code&gt;) on a constructor field helps in two ways: it adds strictness to the program, which gives the strictness analyser more to work with, and it might help to reduce space leaks.</source>
          <target state="translated">Помещение аннотации строгости ( &lt;code&gt;!&lt;/code&gt; ) В поле конструктора помогает двумя способами: оно добавляет строгости программе, что дает анализатору строгости больше возможностей для работы, и может помочь уменьшить утечку места.</target>
        </trans-unit>
        <trans-unit id="4d65a7ee4d88fd2fe1e2a7a6c25c43f4bace4b92" translate="yes" xml:space="preserve">
          <source>Putting info tables directly next to entry code is a useful performance optimisation that is not available on all platforms. This field tells you whether the program has been compiled with this optimisation. (Usually yes, except on unusual platforms.)</source>
          <target state="translated">Помещение информационных таблиц непосредственно рядом с входным кодом является полезной оптимизацией производительности,которая доступна не на всех платформах.В этом поле указывается,была ли программа скомпилирована с этой оптимизацией.(Обычно да,за исключением необычных платформ).</target>
        </trans-unit>
        <trans-unit id="fc4647bde0eb248bbe66e4e9d89dc56ee1bf2032" translate="yes" xml:space="preserve">
          <source>Putting inter-dependencies of the form &lt;code&gt;Foo.o : Bar.hi&lt;/code&gt; into your &lt;code&gt;Makefile&lt;/code&gt; by hand is rather error-prone. Don&amp;rsquo;t worry, GHC has support for automatically generating the required dependencies. Add the following to your &lt;code&gt;Makefile&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Foo.o : Bar.hi&lt;/code&gt; формы Foo.o: Bar.hi в ваш &lt;code&gt;Makefile&lt;/code&gt; вручную довольно чревато ошибками. Не волнуйтесь, GHC поддерживает автоматическое создание необходимых зависимостей. Добавьте в свой &lt;code&gt;Makefile&lt;/code&gt; следующее :</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="b1bf446133c15f6e0cfb6c252c0760ca97cc2113" translate="yes" xml:space="preserve">
          <source>QException</source>
          <target state="translated">QException</target>
        </trans-unit>
        <trans-unit id="5c3e1075bb5ff5f786a2750d2110c97ca76bdb40" translate="yes" xml:space="preserve">
          <source>QList</source>
          <target state="translated">QList</target>
        </trans-unit>
        <trans-unit id="5063349bbf20d077106dd5a047c6294b3d6faa07" translate="yes" xml:space="preserve">
          <source>QResult</source>
          <target state="translated">QResult</target>
        </trans-unit>
        <trans-unit id="1b9473a808c71ad809b076a8f41d58515d649af1" translate="yes" xml:space="preserve">
          <source>QSem</source>
          <target state="translated">QSem</target>
        </trans-unit>
        <trans-unit id="83666298382103e09a359d83713e8de361f9fe1b" translate="yes" xml:space="preserve">
          <source>QSemN</source>
          <target state="translated">QSemN</target>
        </trans-unit>
        <trans-unit id="5979a484b578a0eaaccbbaa187d6db5be875c706" translate="yes" xml:space="preserve">
          <source>QState</source>
          <target state="translated">QState</target>
        </trans-unit>
        <trans-unit id="a8e2772564815455b855b5402a2b67edaeece741" translate="yes" xml:space="preserve">
          <source>QualBinBox</source>
          <target state="translated">QualBinBox</target>
        </trans-unit>
        <trans-unit id="6e364224ed95e99cc9c0e9bc962a7e7788451d4f" translate="yes" xml:space="preserve">
          <source>Qualified names are not handled properly</source>
          <target state="translated">Квалифицированные имена не обрабатываются должным образом</target>
        </trans-unit>
        <trans-unit id="a6efcb4dfc81f0dc1db1c9a9f717801b36c05f3f" translate="yes" xml:space="preserve">
          <source>QualifiedDo</source>
          <target state="translated">QualifiedDo</target>
        </trans-unit>
        <trans-unit id="c78f05422fd2f2885a1a8363abe3991f2f66b957" translate="yes" xml:space="preserve">
          <source>Quantified</source>
          <target state="translated">Quantified</target>
        </trans-unit>
        <trans-unit id="98d966bd103c45a24b72c82c92fc882386ac5126" translate="yes" xml:space="preserve">
          <source>Quantified constraints can potentially lead to overlapping local axioms. Consider for instance the following example:</source>
          <target state="translated">Количественные ограничения могут привести к наложению локальных аксиом.Рассмотрим,например,следующий пример:</target>
        </trans-unit>
        <trans-unit id="e07c2ce6f83e492712da4fb9336c9693d0145f90" translate="yes" xml:space="preserve">
          <source>Quantified constraints enable this property to be made explicit in the &lt;code&gt;Trans&lt;/code&gt; class declaration:</source>
          <target state="translated">Количественные ограничения позволяют сделать это свойство явным в объявлении класса &lt;code&gt;Trans&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="313f18ee6bfe32a684a3623fe9ec8d0285e1564b" translate="yes" xml:space="preserve">
          <source>QuantifiedConstraints</source>
          <target state="translated">QuantifiedConstraints</target>
        </trans-unit>
        <trans-unit id="38dd040ad4dd1961b970e417a446a2cd00ec0112" translate="yes" xml:space="preserve">
          <source>Quantity semaphores in which each thread may wait for an arbitrary &quot;amount&quot;.</source>
          <target state="translated">Количество семафоров,в которых каждый поток может ждать произвольного &quot;количества&quot;.</target>
        </trans-unit>
        <trans-unit id="ef37116e9e2794514df2a30b389623e522929de7" translate="yes" xml:space="preserve">
          <source>Quasi</source>
          <target state="translated">Quasi</target>
        </trans-unit>
        <trans-unit id="78b42522f21485e6763e2011e69bf1fb6467d5cd" translate="yes" xml:space="preserve">
          <source>Quasi-quotation allows patterns and expressions to be written using programmer-defined concrete syntax; the motivation behind the extension and several examples are documented in &amp;ldquo;&lt;a href=&quot;http://www.cs.tufts.edu/comp/150FP/archive/geoff-mainland/quasiquoting.pdf&quot;&gt;Why It&amp;rsquo;s Nice to be Quoted: Quasiquoting for Haskell&lt;/a&gt;&amp;rdquo; (Proc Haskell Workshop 2007). The example below shows how to write a quasiquoter for a simple expression language.</source>
          <target state="translated">Квази-цитирование позволяет записывать шаблоны и выражения с использованием конкретного синтаксиса, определенного программистом; мотивация, стоящая за расширением, и несколько примеров задокументированы в &amp;laquo; &lt;a href=&quot;http://www.cs.tufts.edu/comp/150FP/archive/geoff-mainland/quasiquoting.pdf&quot;&gt;Почему приятно быть процитированным: квазицитатирование для Haskell&lt;/a&gt; &amp;raquo; (Proc Haskell Workshop 2007). В приведенном ниже примере показано, как написать квазицитатор для простого языка выражений.</target>
        </trans-unit>
        <trans-unit id="aeae4316f159225a12a41875ed5cda162b6be2c0" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for declarations, invoked by top-level quotes</source>
          <target state="translated">Квазиквадрат для деклараций,вызываемых котировками верхнего уровня</target>
        </trans-unit>
        <trans-unit id="7c4eccaa645a118a37207f34bc767fc3a301a004" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for expressions, invoked by quotes like &lt;code&gt;lhs = $[q|...]&lt;/code&gt;</source>
          <target state="translated">Квазиквотер для выражений, вызываемый кавычками, например &lt;code&gt;lhs = $[q|...]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdfa152b402869c6f7ce110c7260465306996f0c" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for patterns, invoked by quotes like &lt;code&gt;f $[q|...] = rhs&lt;/code&gt;</source>
          <target state="translated">Квазиквотер для шаблонов, вызываемый кавычками, например &lt;code&gt;f $[q|...] = rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f1c81121c7c915fc9fe161e70133e5fd79fdc0f" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for types, invoked by quotes like &lt;code&gt;f :: $[q|...]&lt;/code&gt;</source>
          <target state="translated">Квазиквотер для типов, вызываемый кавычками, например &lt;code&gt;f :: $[q|...]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="654d8edecc919612fe0b6f4ce5f5f07b94d042af" translate="yes" xml:space="preserve">
          <source>QuasiQuoter</source>
          <target state="translated">QuasiQuoter</target>
        </trans-unit>
        <trans-unit id="36eafab474a9ed345234950640432af8a19c94cf" translate="yes" xml:space="preserve">
          <source>QuasiQuotes</source>
          <target state="translated">QuasiQuotes</target>
        </trans-unit>
        <trans-unit id="d4a0b7daa1a07138f6cd3dd945862252eb44e73e" translate="yes" xml:space="preserve">
          <source>Quasiquoters must obey the same stage restrictions as Template Haskell, e.g., in the example, &lt;code&gt;expr&lt;/code&gt; cannot be defined in &lt;code&gt;Main.hs&lt;/code&gt; where it is used, but must be imported.</source>
          <target state="translated">Квазиквотеры должны подчиняться тем же ограничениям стадии, что и Template Haskell, например, в этом примере &lt;code&gt;expr&lt;/code&gt; не может быть определено в &lt;code&gt;Main.hs&lt;/code&gt; , где оно используется, но должно быть импортировано.</target>
        </trans-unit>
        <trans-unit id="2644b7d942f174a4bbf0bc8675c1badf9352393e" translate="yes" xml:space="preserve">
          <source>Queries</source>
          <target state="translated">Queries</target>
        </trans-unit>
        <trans-unit id="702b96b7b97e9c49a9631b74e04d25040710ddfc" translate="yes" xml:space="preserve">
          <source>Queries the current state of the stopped child flag.</source>
          <target state="translated">Задает вопрос о текущем состоянии остановленного детского флага.</target>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="translated">Query</target>
        </trans-unit>
        <trans-unit id="6fafa7df09744bce9b17c8089123f793f4571cfc" translate="yes" xml:space="preserve">
          <source>Query the status of a breakpoint (True &lt;a href=&quot;=&quot;&gt;=&lt;/a&gt; enabled)</source>
          <target state="translated">Запросить статус точки останова (True &lt;a href=&quot;=&quot;&gt;=&lt;/a&gt; включено)</target>
        </trans-unit>
        <trans-unit id="3caf953d995669733dac7e8ef33e2624ffc487eb" translate="yes" xml:space="preserve">
          <source>Query whether the current runtime system supports the eventlog (e.g. whether the current executable was linked with &lt;a href=&quot;phases#ghc-flag--eventlog&quot;&gt;&lt;code&gt;-eventlog&lt;/code&gt;&lt;/a&gt;) and, if it is supported, whether it is currently logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6aec17edf79a10c680aff1016df32c0c809598" translate="yes" xml:space="preserve">
          <source>Querying file status</source>
          <target state="translated">Статус запрашиваемого файла</target>
        </trans-unit>
        <trans-unit id="e1568d2084e4729e281ef2ad2782d446f7281246" translate="yes" xml:space="preserve">
          <source>Querying sizes</source>
          <target state="translated">Размеры по запросу</target>
        </trans-unit>
        <trans-unit id="ec159e90e6803b6d4ebd5f32c771f6ca6e6e74a9" translate="yes" xml:space="preserve">
          <source>Querying the compiler</source>
          <target state="translated">Запрос компилятора</target>
        </trans-unit>
        <trans-unit id="bfaa4612023c5d1f8ccc9c95a3472712517c8262" translate="yes" xml:space="preserve">
          <source>Querying the user environment</source>
          <target state="translated">Запрос пользовательского окружения</target>
        </trans-unit>
        <trans-unit id="18607581d63ad915cd6c4d5d3071d782b7938ac8" translate="yes" xml:space="preserve">
          <source>Question: How does GHC find the filename which contains module ⟨M⟩? Answer: it looks for the file &lt;code&gt;M.hs&lt;/code&gt;, or &lt;code&gt;M.lhs&lt;/code&gt;. This means that for most modules, the module name must match the filename. If it doesn&amp;rsquo;t, GHCi won&amp;rsquo;t be able to find it.</source>
          <target state="translated">Вопрос: Как GHC находит имя файла, содержащего модуль ⟨M⟩? Ответ: ищет файл &lt;code&gt;M.hs&lt;/code&gt; или &lt;code&gt;M.lhs&lt;/code&gt; . Это означает, что для большинства модулей имя модуля должно совпадать с именем файла. Если этого не произойдет, GHCi не сможет его найти.</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="2e03f68003ba792e4b7e5bce0358c5b5efca5a74" translate="yes" xml:space="preserve">
          <source>QueueSelector</source>
          <target state="translated">QueueSelector</target>
        </trans-unit>
        <trans-unit id="1a2285d8881f226e13430515a9dd2b9fb6294200" translate="yes" xml:space="preserve">
          <source>Quit</source>
          <target state="translated">Quit</target>
        </trans-unit>
        <trans-unit id="29a754ad4dc6f5eb686a9faa7923466078bf2956" translate="yes" xml:space="preserve">
          <source>Quits GHCi. You can also quit by typing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b074b09be2d5847dd9450d55b6f0788a6c3fd1b4" translate="yes" xml:space="preserve">
          <source>Quits GHCi. You can also quit by typing &lt;code&gt;Control-D&lt;/code&gt; at the prompt.</source>
          <target state="translated">Выходит из GHCi. Вы также можете выйти, набрав &lt;code&gt;Control-D&lt;/code&gt; в командной строке.</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="fe89b57ca741803edb678214b1b10b8b1688ab79" translate="yes" xml:space="preserve">
          <source>R. N. Horspool: Practical Fast Searching in Strings. Software - Practice and Experience 10, 501-506 (1980)</source>
          <target state="translated">R.Н.Хорспол:Практический быстрый поиск по строкам.Программное обеспечение-практика и опыт 10,501-506 (1980).</target>
        </trans-unit>
        <trans-unit id="3bb8e3918a18086493d1beb88c7c61f2cff4fd6b" translate="yes" xml:space="preserve">
          <source>R. S. Boyer, J. S. Moore: A Fast String Searching Algorithm. Communications of the ACM, 20, 10, 762-772 (1977)</source>
          <target state="translated">R.С.Бойер,Дж.С.Мур:Алгоритм поиска по быстрой струне.Связь АСМ,20,10,762-772 (1977).</target>
        </trans-unit>
        <trans-unit id="bcd7a25b27aa3490f6e6a5d52d0d7b57716a72c0" translate="yes" xml:space="preserve">
          <source>R.Paterson@city.ac.uk</source>
          <target state="translated">R.Paterson@city.ac.uk</target>
        </trans-unit>
        <trans-unit id="75248a6efd7ebc0c173be4c755f47f7ae4c4606a" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS ARROW</source>
          <target state="translated">СТРЕЛКА ВПРАВО</target>
        </trans-unit>
        <trans-unit id="81f0ce7bb79894a5b7e3f20200c1491ae057a5b6" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS ARROW-TAIL</source>
          <target state="translated">ПРАВЫЙ ХВОСТ</target>
        </trans-unit>
        <trans-unit id="d43d55d9c58cbcc25eb6620ba1f32e960004091e" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS DOUBLE ARROW</source>
          <target state="translated">ДВОЙНАЯ СТРЕЛКА ВПРАВО</target>
        </trans-unit>
        <trans-unit id="6140cdacfd2f40b8e8a4d0ef59628fa58ba4df25" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS DOUBLE ARROW-TAIL</source>
          <target state="translated">ПРАВАЯ ДВОЙНАЯ СТРЕЛКА-ХВОСТ</target>
        </trans-unit>
        <trans-unit id="54561fd891ee8d3bc3718283afdce5d24a9fb9d4" translate="yes" xml:space="preserve">
          <source>RS</source>
          <target state="translated">RS</target>
        </trans-unit>
        <trans-unit id="dff6d1ab4ff535388a3b81748b7e0a759af5b5d4" translate="yes" xml:space="preserve">
          <source>RTLDFlags</source>
          <target state="translated">RTLDFlags</target>
        </trans-unit>
        <trans-unit id="222fd2e5cef2e782850e7e961d3e145177fe55f7" translate="yes" xml:space="preserve">
          <source>RTLD_GLOBAL</source>
          <target state="translated">RTLD_GLOBAL</target>
        </trans-unit>
        <trans-unit id="596d9fed4ec6cd3691a13e454f91e5510fb9bd15" translate="yes" xml:space="preserve">
          <source>RTLD_LAZY</source>
          <target state="translated">RTLD_LAZY</target>
        </trans-unit>
        <trans-unit id="58a6bc97fe1b40864bb1226977041584bdd3246e" translate="yes" xml:space="preserve">
          <source>RTLD_LOCAL</source>
          <target state="translated">RTLD_LOCAL</target>
        </trans-unit>
        <trans-unit id="240dca00b5fccdf8eb9307a95d72a4564efd9a1f" translate="yes" xml:space="preserve">
          <source>RTLD_NOW</source>
          <target state="translated">RTLD_NOW</target>
        </trans-unit>
        <trans-unit id="21a3039e72db0527495ff86a20122cd08a41b0ee" translate="yes" xml:space="preserve">
          <source>RTS options taken from the &lt;a href=&quot;#envvar-GHCRTS&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;GHCRTS&lt;/code&gt;&lt;/a&gt; environment variable can be overridden by options given on the command line.</source>
          <target state="translated">&lt;a href=&quot;#envvar-GHCRTS&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;GHCRTS&lt;/code&gt; &lt;/a&gt; RTS, взятые из переменной среды GHCRTS, можно переопределить параметрами, указанными в командной строке.</target>
        </trans-unit>
        <trans-unit id="12038ce4fed76d468c97d3909bb5fa9da8cf36c1" translate="yes" xml:space="preserve">
          <source>RTSFlags</source>
          <target state="translated">RTSFlags</target>
        </trans-unit>
        <trans-unit id="398bdf865c486238761fe9e04c7014d7a95a8878" translate="yes" xml:space="preserve">
          <source>RTSStats</source>
          <target state="translated">RTSStats</target>
        </trans-unit>
        <trans-unit id="173ca40143a1db6b32512b7856cb8403ae881b82" translate="yes" xml:space="preserve">
          <source>RWS</source>
          <target state="translated">RWS</target>
        </trans-unit>
        <trans-unit id="5ed8266ce8d63f9438aafb5e6787b68efadeccab" translate="yes" xml:space="preserve">
          <source>RWS computation to execute</source>
          <target state="translated">RWS вычисление для выполнения</target>
        </trans-unit>
        <trans-unit id="f1d8da392a9a97e4cb7c42ad2ccf6346e818ebc4" translate="yes" xml:space="preserve">
          <source>RWST</source>
          <target state="translated">RWST</target>
        </trans-unit>
        <trans-unit id="a618f78473842a7cf11f602fffdd35c35387d1a3" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Вызов &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; в монаде &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce7820312231ab0cd45ab4d865cc302018e42e8e" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Вызов &lt;code&gt;&lt;a href=&quot;prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; в монаде &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="280c8919cbe0b13ce2a3de884857678191c0df1d" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Вызов &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; в монаде &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="933e208c50a30fc4995b36847c474fa5bd3740b5" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; with a printf-specific prefix on the message string.</source>
          <target state="translated">Вызывает &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; с префиксом, специфичным для printf, в строке сообщения.</target>
        </trans-unit>
        <trans-unit id="00474a4582227a35d8a8ed6e6d74aed95e4bfcf8" translate="yes" xml:space="preserve">
          <source>Raises an error if given an empty list.</source>
          <target state="translated">Повышает ошибку,если дать пустой список.</target>
        </trans-unit>
        <trans-unit id="a21adad3deb90b02b29a429bf48fc817d912767f" translate="yes" xml:space="preserve">
          <source>Raising Errors</source>
          <target state="translated">Повышающие ошибки</target>
        </trans-unit>
        <trans-unit id="80befa94c0796e21097bf414e22daac761f1ac3a" translate="yes" xml:space="preserve">
          <source>Ralf Hinze and Ross Paterson, &lt;a href=&quot;http://staff.city.ac.uk/~ross/papers/FingerTree.html&quot;&gt;&quot;Finger trees: a simple general-purpose data structure&quot;&lt;/a&gt;, &lt;em&gt;Journal of Functional Programming&lt;/em&gt; 16:2 (2006) pp 197-217.</source>
          <target state="translated">Ральф Хинце и Росс Патерсон, &lt;a href=&quot;http://staff.city.ac.uk/~ross/papers/FingerTree.html&quot;&gt;&amp;laquo;Деревья пальцев: простая структура данных общего назначения&amp;raquo;&lt;/a&gt; , &lt;em&gt;Журнал функционального программирования,&lt;/em&gt; 16: 2 (2006), стр. 197-217.</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="646152cf5c1a35e596164cfc5a137c57f6a78564" translate="yes" xml:space="preserve">
          <source>RangeQ</source>
          <target state="translated">RangeQ</target>
        </trans-unit>
        <trans-unit id="5f87625ea4411af78505260124c7f6d2a45e06b0" translate="yes" xml:space="preserve">
          <source>RankNTypes</source>
          <target state="translated">RankNTypes</target>
        </trans-unit>
        <trans-unit id="693f44324e1039b8be2752916af17049a0ad5dd9" translate="yes" xml:space="preserve">
          <source>Rather than generating code to call &lt;code&gt;f&lt;/code&gt; according to the platform&amp;rsquo;s ABI, we instead call &lt;code&gt;f&lt;/code&gt; using the C API defined in the header &lt;code&gt;header.h&lt;/code&gt;. Thus &lt;code&gt;f&lt;/code&gt; can be called even if it may be defined as a CPP &lt;code&gt;#define&lt;/code&gt; rather than a proper function.</source>
          <target state="translated">Вместо того, чтобы генерировать код для вызова &lt;code&gt;f&lt;/code&gt; в соответствии с ABI платформы, мы вместо этого вызываем &lt;code&gt;f&lt;/code&gt; , используя API C, определенный в заголовке &lt;code&gt;header.h&lt;/code&gt; . Таким образом, &lt;code&gt;f&lt;/code&gt; может быть вызван, даже если он может быть определен как CPP &lt;code&gt;#define&lt;/code&gt; , а не как правильная функция.</target>
        </trans-unit>
        <trans-unit id="09e0a509143e1597ce0e4b1a260f1ca99da1f7c7" translate="yes" xml:space="preserve">
          <source>Rather than using &lt;code&gt;(== &lt;a href=&quot;system-filepath-posix#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt;, use this. Test if something is a path separator.</source>
          <target state="translated">Вместо использования &lt;code&gt;(== &lt;a href=&quot;system-filepath-posix#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt; используйте это. Проверьте, является ли что-то разделителем пути.</target>
        </trans-unit>
        <trans-unit id="ed194d2af1d0512a43b9882e2bf53085c69471c2" translate="yes" xml:space="preserve">
          <source>Rather than using &lt;code&gt;(== &lt;a href=&quot;system-filepath-windows#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt;, use this. Test if something is a path separator.</source>
          <target state="translated">Вместо использования &lt;code&gt;(== &lt;a href=&quot;system-filepath-windows#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt; используйте это. Проверьте, является ли что-то разделителем пути.</target>
        </trans-unit>
        <trans-unit id="794f65e9d2064ab6bfab0fa351dcff2763db23d3" translate="yes" xml:space="preserve">
          <source>Ratio</source>
          <target state="translated">Ratio</target>
        </trans-unit>
        <trans-unit id="06abf42877351e1e2ad74c308971eb560fc0aab7" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">Отношение длины лески к длине ленты. Лента относится к символам в строке &lt;em&gt;без&lt;/em&gt; отступа. Так &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 100, с &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; от &lt;code&gt;2.0&lt;/code&gt; только позволит до 50 символов ленты , которые будут отображаться на линии, позволяя ему быть отступ до 50 символов.</target>
        </trans-unit>
        <trans-unit id="4fffe46763de726cdd41fc5ca5f40572f607297e" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">Отношение длины лески к длине ленты. Лента относится к символам в строке &lt;em&gt;без&lt;/em&gt; отступа. Так &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 100, с &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; от &lt;code&gt;2.0&lt;/code&gt; только позволит до 50 символов ленты , которые будут отображаться на линии, позволяя ему быть отступ до 50 символов.</target>
        </trans-unit>
        <trans-unit id="ed1304ccb2873b49ac5ad2857447e7d4958a9afc" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">Отношение длины лески к длине ленты. Лента относится к символам в строке &lt;em&gt;без&lt;/em&gt; отступа. Так &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 100, с &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; от &lt;code&gt;2.0&lt;/code&gt; только позволит до 50 символов ленты , которые будут отображаться на линии, позволяя ему быть отступ до 50 символов.</target>
        </trans-unit>
        <trans-unit id="4d9365e2d43f2f4d7432550032b047d13acc7dc0" translate="yes" xml:space="preserve">
          <source>RatioZeroDenominator</source>
          <target state="translated">RatioZeroDenominator</target>
        </trans-unit>
        <trans-unit id="28f8f8c0856fcd5b648ff5e28234ee17ac5b1a2e" translate="yes" xml:space="preserve">
          <source>Rational</source>
          <target state="translated">Rational</target>
        </trans-unit>
        <trans-unit id="405213edafc737f5ab6efbcc9727c7dbc43be834" translate="yes" xml:space="preserve">
          <source>Rational numbers, with numerator and denominator of some &lt;code&gt;&lt;a href=&quot;ghc-real#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">Рациональные числа с числителем и знаменателем некоторого &lt;code&gt;&lt;a href=&quot;ghc-real#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; типа.</target>
        </trans-unit>
        <trans-unit id="66898ef89145e3251520fcffa27276a730264b3d" translate="yes" xml:space="preserve">
          <source>Rational numbers, with numerator and denominator of some &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">Рациональные числа с числителем и знаменателем некоторого &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; типа.</target>
        </trans-unit>
        <trans-unit id="998e2594b8623ea11ad1729045ff4b74f17b5bbb" translate="yes" xml:space="preserve">
          <source>Raw buffers</source>
          <target state="translated">Сырые буферы</target>
        </trans-unit>
        <trans-unit id="151c7faa3b6e8d13cea407d5faf552ccd90e93ef" translate="yes" xml:space="preserve">
          <source>Raw bytes embedded into the binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fb73f383d3356e6e16bbb4088572623344a39b" translate="yes" xml:space="preserve">
          <source>Raw pointer of array version of &lt;code&gt;&lt;a href=&quot;system-win32-automation-input#v:sendInput&quot;&gt;sendInput&lt;/a&gt;&lt;/code&gt;. Use this function to support non-list sequence.</source>
          <target state="translated">Необработанный указатель версии &lt;code&gt;&lt;a href=&quot;system-win32-automation-input#v:sendInput&quot;&gt;sendInput&lt;/a&gt;&lt;/code&gt; в виде массива . Используйте эту функцию для поддержки последовательности, отличной от списка.</target>
        </trans-unit>
        <trans-unit id="cee6901eb5dcf876205fb0f25887ebe12845d3fb" translate="yes" xml:space="preserve">
          <source>Raw read/write operations on file descriptors</source>
          <target state="translated">Операции чтения/записи файловых дескрипторов в необработанном виде</target>
        </trans-unit>
        <trans-unit id="157fea958671982fd82ff04ec9ed8c09a6ef6b39" translate="yes" xml:space="preserve">
          <source>RawBuffer</source>
          <target state="translated">RawBuffer</target>
        </trans-unit>
        <trans-unit id="a8a5d4f060e1544d5944caadfd158d5a2d980db6" translate="yes" xml:space="preserve">
          <source>RawCharBuffer</source>
          <target state="translated">RawCharBuffer</target>
        </trans-unit>
        <trans-unit id="8da7c86459d153b460979db3219ab54db7fdba1e" translate="yes" xml:space="preserve">
          <source>RawDevice</source>
          <target state="translated">RawDevice</target>
        </trans-unit>
        <trans-unit id="0f11c5246f5cfda145cd94cc2026acc7a8f85d00" translate="yes" xml:space="preserve">
          <source>RawFilePath</source>
          <target state="translated">RawFilePath</target>
        </trans-unit>
        <trans-unit id="84f85043304c606b67a09190e7260a74e66b4111" translate="yes" xml:space="preserve">
          <source>RawIO</source>
          <target state="translated">RawIO</target>
        </trans-unit>
        <trans-unit id="e601d52c0dfeb733b64b16fa8cfb0f09d668768c" translate="yes" xml:space="preserve">
          <source>RawObject</source>
          <target state="translated">RawObject</target>
        </trans-unit>
        <trans-unit id="64cb694cae0bed8753db87912cef88672b156273" translate="yes" xml:space="preserve">
          <source>RcBcc</source>
          <target state="translated">RcBcc</target>
        </trans-unit>
        <trans-unit id="8c924ffc452540914b6a5f1c353b075e91bb1bc7" translate="yes" xml:space="preserve">
          <source>RcCc</source>
          <target state="translated">RcCc</target>
        </trans-unit>
        <trans-unit id="af90b8ce4325e3befb6865f737325cee4b2f3074" translate="yes" xml:space="preserve">
          <source>RcOriginal</source>
          <target state="translated">RcOriginal</target>
        </trans-unit>
        <trans-unit id="4ad7b36332eb45b360b8020417e1bfa69bfb1958" translate="yes" xml:space="preserve">
          <source>RcTo</source>
          <target state="translated">RcTo</target>
        </trans-unit>
        <trans-unit id="3407f4aa246ee23f71ca756ee8cf2ad566b1ba31" translate="yes" xml:space="preserve">
          <source>Re-compile your program for profiling with the &lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt; option, and probably one of the options for adding automatic annotations: &lt;a href=&quot;#ghc-flag--fno-prof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt; is the most common &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;1&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db15fe49edcf057a04acee4d233f6fa725ab350" translate="yes" xml:space="preserve">
          <source>Re-compile your program for profiling with the &lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt; option, and probably one of the options for adding automatic annotations: &lt;a href=&quot;#ghc-flag--fno-prof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt; is the most common &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8173c1f1a663cdea3e376c90c48dd90dcb46e19a" translate="yes" xml:space="preserve">
          <source>Re-compile your program for profiling with the &lt;a href=&quot;#ghc-flag--prof&quot;&gt;&lt;code&gt;-prof&lt;/code&gt;&lt;/a&gt; option, and probably one of the options for adding automatic annotations: &lt;a href=&quot;#ghc-flag--fprof-auto&quot;&gt;&lt;code&gt;-fprof-auto&lt;/code&gt;&lt;/a&gt; is the most common &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt;.</source>
          <target state="translated">Перекомпилируйте вашу программу для профилирования с параметром &lt;a href=&quot;#ghc-flag--prof&quot;&gt; &lt;code&gt;-prof&lt;/code&gt; &lt;/a&gt; и, возможно, одним из вариантов добавления автоматических аннотаций: &lt;a href=&quot;#ghc-flag--fprof-auto&quot;&gt; &lt;code&gt;-fprof-auto&lt;/code&gt; &lt;/a&gt; является наиболее распространенным &lt;a href=&quot;#id5&quot; id=&quot;id2&quot;&gt;[1]&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="436cf278924bc8efee40d02b4519461683e18994" translate="yes" xml:space="preserve">
          <source>Re-creates the binary cache file &lt;code&gt;package.cache&lt;/code&gt; for the selected database. This may be necessary if the cache has somehow become out-of-sync with the contents of the database (&lt;code&gt;ghc-pkg&lt;/code&gt; will warn you if this might be the case).</source>
          <target state="translated">Повторно создает файл двоичного кэша &lt;code&gt;package.cache&lt;/code&gt; для выбранной базы данных. Это может быть необходимо, если кэш каким-то образом рассинхронизировался с содержимым базы данных ( &lt;code&gt;ghc-pkg&lt;/code&gt; предупредит вас, если это может быть так).</target>
        </trans-unit>
        <trans-unit id="7ed12af550b46e901d403b9d0f93291b0cf629f6" translate="yes" xml:space="preserve">
          <source>Re-exported monoids from Data.Monoid</source>
          <target state="translated">Реэкспорт моноидов из Data.Monoid</target>
        </trans-unit>
        <trans-unit id="bde58618cf479d6d9df55e473f635c3aaa781e0a" translate="yes" xml:space="preserve">
          <source>Re-exports from Control.Exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d04bfb5540a406fa1d417f909b39524de219c43" translate="yes" xml:space="preserve">
          <source>Re-run your program with &lt;code&gt;+RTS -S&lt;/code&gt;, and remove all doubt! (You&amp;rsquo;ll see the heap usage get bigger and bigger&amp;hellip;) (Hmmm&amp;hellip; this might be even easier with the &lt;code&gt;-G1&lt;/code&gt; RTS option; so&amp;hellip; &lt;code&gt;./a.out +RTS -S -G1&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d929a541c0f1ece950e385b483a59027154870" translate="yes" xml:space="preserve">
          <source>Re-run your program with &lt;code&gt;+RTS -S&lt;/code&gt;, and remove all doubt! (You&amp;rsquo;ll see the heap usage get bigger and bigger...) (Hmmm... this might be even easier with the &lt;code&gt;-G1&lt;/code&gt; RTS option; so... &lt;code&gt;./a.out +RTS -S -G1&lt;/code&gt;)</source>
          <target state="translated">Повторно запустите вашу программу с помощью &lt;code&gt;+RTS -S&lt;/code&gt; и устраните все сомнения! (Вы увидите, что использование кучи становится все больше и больше ...) (Хммм ... это может быть еще проще с параметром &lt;code&gt;-G1&lt;/code&gt; RTS; так что ... &lt;code&gt;./a.out +RTS -S -G1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b39c69b57883ad20cea20e29a43c91838fc5dece" translate="yes" xml:space="preserve">
          <source>ReFS doesn't support hard link currently.</source>
          <target state="translated">В настоящее время ReFS не поддерживает жесткую связь.</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="7e60df3ad56b5aa492c15c3cbc3edcd1117e2890" translate="yes" xml:space="preserve">
          <source>Read 16-bit int; offset in bytes.</source>
          <target state="translated">Чтение 16-битного int;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="1a4eb9eb868bf67f4408ba141c666e2672927ff4" translate="yes" xml:space="preserve">
          <source>Read 16-bit integer; offset in 16-bit words.</source>
          <target state="translated">Чтение 16-битного целого числа;смещение в 16-битных словах.</target>
        </trans-unit>
        <trans-unit id="b0d87fc9401988038e38b59862ea5b5ccde17d68" translate="yes" xml:space="preserve">
          <source>Read 16-bit word; offset in 16-bit words.</source>
          <target state="translated">Чтение 16-битного слова;смещение в 16-битных словах.</target>
        </trans-unit>
        <trans-unit id="779a27810169b39b14218816baff4c582c906214" translate="yes" xml:space="preserve">
          <source>Read 16-bit word; offset in bytes.</source>
          <target state="translated">Чтение 16-битного слова;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="4f4589f1ce718b81895e29adc9bfbd6c1f69bec7" translate="yes" xml:space="preserve">
          <source>Read 31-bit character; offset in 4-byte words.</source>
          <target state="translated">Чтение 31-битного символа;смещение в 4-байтных словах.</target>
        </trans-unit>
        <trans-unit id="3d7bb4f3250d94c66276a215dac19da0ee208ceb" translate="yes" xml:space="preserve">
          <source>Read 31-bit character; offset in bytes.</source>
          <target state="translated">Чтение 31-битного символа;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="25ab04b7ce5915f4baa82606d8db15948630ae37" translate="yes" xml:space="preserve">
          <source>Read 32-bit int; offset in bytes.</source>
          <target state="translated">Чтение 32-битного int;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="6fe96383ba999aacbde564c1a83fb114d382eaa7" translate="yes" xml:space="preserve">
          <source>Read 32-bit integer; offset in 32-bit words.</source>
          <target state="translated">Чтение 32-битного целого числа;смещение в 32-битных словах.</target>
        </trans-unit>
        <trans-unit id="60b8324b1d2cdc5721569c3a299a8daf64f2deb2" translate="yes" xml:space="preserve">
          <source>Read 32-bit word; offset in 32-bit words.</source>
          <target state="translated">Чтение 32-битного слова;смещение в 32-битных словах.</target>
        </trans-unit>
        <trans-unit id="62fb98bafc343247ad56086482aff05792ef6f4a" translate="yes" xml:space="preserve">
          <source>Read 32-bit word; offset in bytes.</source>
          <target state="translated">Чтение 32-битного слова;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="d25a05e0ae959c82425e5422cb88b2cc0c3499b2" translate="yes" xml:space="preserve">
          <source>Read 64-bit int; offset in bytes.</source>
          <target state="translated">Чтение 64-битного int;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="5ff8b18e5826d1303bd5d1539c0e10e751fc2467" translate="yes" xml:space="preserve">
          <source>Read 64-bit integer; offset in 64-bit words.</source>
          <target state="translated">Чтение 64-битного целого числа;смещение в 64-битных словах.</target>
        </trans-unit>
        <trans-unit id="950cbae1770d68c7ff3f938a1bb875fcf874e61e" translate="yes" xml:space="preserve">
          <source>Read 64-bit word; offset in 64-bit words.</source>
          <target state="translated">Чтение 64-битного слова;смещение в 64-битных словах.</target>
        </trans-unit>
        <trans-unit id="403ce44704144796890a2dd162b7d4b6bd35606a" translate="yes" xml:space="preserve">
          <source>Read 64-bit word; offset in bytes.</source>
          <target state="translated">Чтение 64-битного слова;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="9bda208a006c005a311a9525872635ddcfb5a7e7" translate="yes" xml:space="preserve">
          <source>Read 8-bit character; offset in bytes.</source>
          <target state="translated">Чтение 8-ми битного символа;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="74ea30c59bd47b466db1dd2696f98867a27d8056" translate="yes" xml:space="preserve">
          <source>Read 8-bit integer; offset in bytes.</source>
          <target state="translated">Чтение 8-битного целого;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="66a3f6514090ac475eac95df9cd8e70ae4d2125d" translate="yes" xml:space="preserve">
          <source>Read 8-bit word; offset in bytes.</source>
          <target state="translated">Чтение 8-битного слова;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="52978387bdf57684002ff4fbf9d9b0b3152378e4" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (without sign) from byte-array in base-256 representation.</source>
          <target state="translated">Чтение &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (без знака) из байтового массива в представлении base-256.</target>
        </trans-unit>
        <trans-unit id="128adcb084eec4344924afe5344cdb69c152d311" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (without sign) from memory location at &lt;code&gt;&lt;em&gt;addr&lt;/em&gt;&lt;/code&gt; in base-256 representation.</source>
          <target state="translated">Чтение &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#t:Integer&quot;&gt;Integer&lt;/a&gt;&lt;/code&gt; (без знака) из области памяти по адресу в &lt;code&gt;&lt;em&gt;addr&lt;/em&gt;&lt;/code&gt; base-256.</target>
        </trans-unit>
        <trans-unit id="bc13cfab1d6d4894e1d0814d5699acd61f42785d" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; from a given file. If there is an error reading the file, the &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:defaultPrefs&quot;&gt;defaultPrefs&lt;/a&gt;&lt;/code&gt; will be returned.</source>
          <target state="translated">Чтение &lt;code&gt;&lt;a href=&quot;system-console-haskeline#t:Prefs&quot;&gt;Prefs&lt;/a&gt;&lt;/code&gt; из данного файла. Если при чтении файла произошла ошибка, будет возвращен &lt;code&gt;&lt;a href=&quot;system-console-haskeline#v:defaultPrefs&quot;&gt;defaultPrefs&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e82d63ab81fecdb435939dcaf6fe495b71d99f5" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Считывает &lt;code&gt;n&lt;/code&gt; байтов в &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; непосредственно из указанного &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="811c646ce78dc8053eececaa8235f624c4c104fa" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e8f8fe255ab98ab41b78bfaa2fe02242383f00" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab54e44cbd0dec1e70996cdb4b7e93cc2071d0a" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Считывает &lt;code&gt;n&lt;/code&gt; байтов в &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; непосредственно из указанного &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af24bb57706a7419040b51a8e704131723223ed4" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306f1924412822f590bdc2c3afd7be3c012832ff" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;n&lt;/code&gt; bytes into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;, directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b3e5b42103757d24b17f7c7998ff8f3f963bcd" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;.tix&lt;/code&gt; File.</source>
          <target state="translated">Прочтите файл &lt;code&gt;.tix&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d077a34945c77709ea02aa252897b606577a202" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in IEEE-754 format and host endian.</source>
          <target state="translated">Считайте &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; в формате IEEE-754 и укажите порядок байтов на хосте.</target>
        </trans-unit>
        <trans-unit id="2b511be32215f170b894b91b783fc72e7c9eff82" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="translated">Прочтите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; в формате big endian IEEE-754.</target>
        </trans-unit>
        <trans-unit id="e270fdae5bb0b921134960c127b008cca47ba123" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="translated">Прочтите &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; в формате IEEE-754 с прямым порядком байтов.</target>
        </trans-unit>
        <trans-unit id="31eb10e403ca406961ff361d1965030257ca16fd" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in IEEE-754 format and host endian.</source>
          <target state="translated">Чтение числа с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; в формате IEEE-754 и порядок байтов на хосте.</target>
        </trans-unit>
        <trans-unit id="ed181842c2d246c2be3b1cafa56c033e14b6ade7" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="translated">Прочтите число с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; порядком байтов в формате IEEE-754.</target>
        </trans-unit>
        <trans-unit id="450296dc083818a06097a7554a45768d187ae2a3" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="translated">Чтение числа с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; в формате IEEE-754 с прямым порядком байтов.</target>
        </trans-unit>
        <trans-unit id="92c42855d9fb04e4834c26c9d2b903de467f2694" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in IEEE-754 format and host endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6834a4d9fbba583bd2f8260b2ffd41e1128af92b" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594fa153e7a6530860f5d3e0c71a2d270c6497fe" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb1700715e2ebe2effbf00e3af23568dea4fc90" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in IEEE-754 format and host endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8324f9f8659628c6c2a9867c7512bbaeb8fd24e" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a68faf445351b3af4bf530cb91c4c95473d3508" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086c754dbcb9c5fb02f70511b5ec1a34aee94ffe" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in IEEE-754 format and host endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea77c7921a6bfbe8d43514a566562f42d26a18b" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3f29215d0d3a0e537ba4592b5a6390fc3ce023" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Double&quot;&gt;Double&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f21980938190798eeaef8a75f11401f66837bb8" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in IEEE-754 format and host endian.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37c0e15f6512888b3277ed534c04372dd6cc38a" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in big endian IEEE-754 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3187454c9c7ecc16644a7a4b6201c6a701d6288" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/prelude#t:Float&quot;&gt;Float&lt;/a&gt;&lt;/code&gt; in little endian IEEE-754 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed4ac78abb685c542391281d20196e4c779e56d" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="translated">Читайте &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; непосредственно из указанной &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . Это намного эффективнее, чем считывание символов в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; и последующее использование &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; . Первый аргумент - это дескриптор для чтения, а второй - количество байтов для чтения. Он возвращает считанные байты до n или &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; если EOF был достигнут.</target>
        </trans-unit>
        <trans-unit id="5234a0eeb8c72238d54687b0b6b7f23ba2958b11" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84894480b87683e55f4d3ceaa6a9e584dbbc6fd8" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc2ed709a624a8004bd6878cf10a70498433b5d" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="translated">Читайте &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; непосредственно из указанной &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . Это намного эффективнее, чем считывание символов в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; и последующее использование &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt; . Первый аргумент - это дескриптор для чтения, а второй - количество байтов для чтения. Он возвращает считанные байты до n или &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; если EOF был достигнут.</target>
        </trans-unit>
        <trans-unit id="7bbb8eb90662ec335f6b3d2f0ee3cc28e2d9fe7c" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2601a457f5f143868565a095df33fe1b94e96250" translate="yes" xml:space="preserve">
          <source>Read a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; directly from the specified &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. This is far more efficient than reading the characters into a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; and then using &lt;code&gt;&lt;a href=&quot;data-bytestring#v:pack&quot;&gt;pack&lt;/a&gt;&lt;/code&gt;. First argument is the Handle to read from, and the second is the number of bytes to read. It returns the bytes read, up to n, or &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#v:empty&quot;&gt;empty&lt;/a&gt;&lt;/code&gt; if EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41385428cb32efc10102354ba6b654e89a2182a7" translate="yes" xml:space="preserve">
          <source>Read a Word16 in big endian format</source>
          <target state="translated">Читайте Word16 в большом эндийском формате</target>
        </trans-unit>
        <trans-unit id="c7059262c6e0dd247842136bc035dbe7fac3eb07" translate="yes" xml:space="preserve">
          <source>Read a Word16 in little endian format</source>
          <target state="translated">Читайте Word16 в маленьком эндийском формате</target>
        </trans-unit>
        <trans-unit id="325ed0dff978da255c416ca5e04ee8469ca4aade" translate="yes" xml:space="preserve">
          <source>Read a Word32 in big endian format</source>
          <target state="translated">Читайте Word32 в большом эндийском формате</target>
        </trans-unit>
        <trans-unit id="9b384ff4a6ad39dcdd029a9762666669ec5b057f" translate="yes" xml:space="preserve">
          <source>Read a Word32 in little endian format</source>
          <target state="translated">Читайте Word32 в маленьком эндийском формате</target>
        </trans-unit>
        <trans-unit id="91270ca67d57bd1bdbeb755930779fcca71583f5" translate="yes" xml:space="preserve">
          <source>Read a Word64 in big endian format</source>
          <target state="translated">Читайте Word64 в большом эндийском формате</target>
        </trans-unit>
        <trans-unit id="5d9a29132fd85c218ab3569276165a1ce2167da2" translate="yes" xml:space="preserve">
          <source>Read a Word64 in little endian format</source>
          <target state="translated">Читайте Word64 в формате little endian</target>
        </trans-unit>
        <trans-unit id="1dbaa4f5cf708506376d639753739c1d852b4bf9" translate="yes" xml:space="preserve">
          <source>Read a Word8 from the monad state</source>
          <target state="translated">Читайте Слово8 из государства Монада.</target>
        </trans-unit>
        <trans-unit id="33687198d0edb29afd53e4ee85d109db96503e2f" translate="yes" xml:space="preserve">
          <source>Read a character from the standard input device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Прочтите символ со стандартного устройства ввода (то же самое, что и &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="136fa01b400f9365d8acd65e3164d1dc973ad7aa" translate="yes" xml:space="preserve">
          <source>Read a character from the standard input device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-stdhandles#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45a0fa5c6ee23b88df0d595555f79b07588df7b" translate="yes" xml:space="preserve">
          <source>Read a character from the standard input device (same as &lt;code&gt;&lt;a href=&quot;system-io#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Прочтите символ со стандартного устройства ввода (то же самое, что и &lt;code&gt;&lt;a href=&quot;system-io#v:hGetChar&quot;&gt;hGetChar&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0719ab4b706ee893ead8217fca15c3f09a2af0ce" translate="yes" xml:space="preserve">
          <source>Read a decimal integer. The input must begin with at least one decimal digit, and is consumed until a non-digit or end of string is reached.</source>
          <target state="translated">Читайте десятичное целое число.Ввод должен начинаться как минимум с одной десятичной цифры и потребляться до тех пор,пока не будет достигнута нецифровая цифра или конец строки.</target>
        </trans-unit>
        <trans-unit id="54e6d350ae56550c44862ac311a367be600fae92" translate="yes" xml:space="preserve">
          <source>Read a file and return its contents as a string. The file is read lazily, as with &lt;code&gt;&lt;a href=&quot;data-text-lazy-io#v:getContents&quot;&gt;getContents&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Прочтите файл и верните его содержимое в виде строки. Файл читается лениво, как и в случае с &lt;code&gt;&lt;a href=&quot;data-text-lazy-io#v:getContents&quot;&gt;getContents&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fa1e15b13e04e5f1ac39abc5119313ca1e82c04" translate="yes" xml:space="preserve">
          <source>Read a file strictly, as opposed to how &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; does it using lazy IO, but also disregard system locale and assume that the file is encoded in UTF-8. Haskell source files are expected to be encoded in UTF-8 by GHC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2b96d9451e6e92483ea122aadf8cfa73cef618" translate="yes" xml:space="preserve">
          <source>Read a file strictly, as opposed to how &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-io#v:readFile&quot;&gt;readFile&lt;/a&gt;&lt;/code&gt; does it using lazy IO, but also disregard system locale and assume that the file is encoded in UTF-8. Haskell source files are expected to be encoded in UTF-8 by GHC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91c0d58a076465748276893ce00cc9dcf0e0387" translate="yes" xml:space="preserve">
          <source>Read a handle's entire contents strictly into a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Считайте все содержимое дескриптора строго в &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddde23fb0886b2069060468faf3bddb7c72b3d9d" translate="yes" xml:space="preserve">
          <source>Read a handle's entire contents strictly into a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Считайте все содержимое дескриптора строго в &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7439e315f02f450400e229e67923aa01c829dd88" translate="yes" xml:space="preserve">
          <source>Read a hexadecimal integer, consisting of an optional leading &lt;code&gt;&quot;0x&quot;&lt;/code&gt; followed by at least one hexadecimal digit. Input is consumed until a non-hex-digit or end of string is reached. This function is case insensitive.</source>
          <target state="translated">Прочтите шестнадцатеричное целое число, состоящее из необязательного ведущего &lt;code&gt;&quot;0x&quot;&lt;/code&gt; за которым следует хотя бы одна шестнадцатеричная цифра. Ввод используется до тех пор, пока не будет достигнута не шестнадцатеричная цифра или не конец строки. Эта функция нечувствительна к регистру.</target>
        </trans-unit>
        <trans-unit id="4d6ef962b6540180679caac9f11ba078a87836f5" translate="yes" xml:space="preserve">
          <source>Read a line from a handle</source>
          <target state="translated">Считайте строчку с рукоятки</target>
        </trans-unit>
        <trans-unit id="5f19303cec3e7c471d3d195797816309df8f8f1f" translate="yes" xml:space="preserve">
          <source>Read a line from stdin.</source>
          <target state="translated">Прочитай строчку из Стдина.</target>
        </trans-unit>
        <trans-unit id="c0d47f6d713637753c2bcc367aaff8c0fce318ee" translate="yes" xml:space="preserve">
          <source>Read a line from the standard input device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Прочтите строку со стандартного устройства ввода (то же самое, что и &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3a80bf067bc09163d5a1ac85dc254b208ff50b78" translate="yes" xml:space="preserve">
          <source>Read a line from the standard input device (same as &lt;code&gt;&lt;a href=&quot;ghc-io-handle#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;ghc-io-stdhandles#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5743e14432024dc17ab0cc94bee7428d51f61dfb" translate="yes" xml:space="preserve">
          <source>Read a line from the standard input device (same as &lt;code&gt;&lt;a href=&quot;system-io#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Прочтите строку со стандартного устройства ввода (то же самое, что и &lt;code&gt;&lt;a href=&quot;system-io#v:hGetLine&quot;&gt;hGetLine&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;system-io#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="01c713600966b0fbf993236e350a166e304141fa" translate="yes" xml:space="preserve">
          <source>Read a mix file.</source>
          <target state="translated">Читайте смешанный файл.</target>
        </trans-unit>
        <trans-unit id="be8f10751cbc4efc5cde4e6e7e38e5094e226876" translate="yes" xml:space="preserve">
          <source>Read a rational number.</source>
          <target state="translated">Прочтите рациональное число.</target>
        </trans-unit>
        <trans-unit id="73f99dea456cdd98d70103431dec12bab6720d82" translate="yes" xml:space="preserve">
          <source>Read a single chunk of strict text from a buffer. Used by both the strict and lazy implementations of hGetContents.</source>
          <target state="translated">Чтение одного фрагмента строгого текста из буфера.Используется как в строгих,так и в ленивых реализациях hGetContents.</target>
        </trans-unit>
        <trans-unit id="3128563cca70a9b1fe0217abc816e305e4d7489c" translate="yes" xml:space="preserve">
          <source>Read a single line from a handle.</source>
          <target state="translated">Прочтите одну строчку с рукоятки.</target>
        </trans-unit>
        <trans-unit id="adf69306cc90a31c382146419718b352ccd6cad6" translate="yes" xml:space="preserve">
          <source>Read a single line of input from a handle, constructing a list of decoded chunks as we go. When we're done, transform them into the destination type.</source>
          <target state="translated">Читайте одну строку входа из дескриптора,строя список декодированных кусков по ходу работы.Когда мы закончим,преобразовываем их в тип назначения.</target>
        </trans-unit>
        <trans-unit id="25654588f3da8aeac6ef5d8db3b62a836c06fa32" translate="yes" xml:space="preserve">
          <source>Read a single line of user input from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Read единственной линии ввода пользователя из &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06d2a75a57b82d5b8fadefea0af451955aa3becd" translate="yes" xml:space="preserve">
          <source>Read a single line of user input from &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052271db72899a94b3c43a2fca0254d846f99ad7" translate="yes" xml:space="preserve">
          <source>Read a single line of user input from &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-stdhandles#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3567b42f426069b714bcc5bc523c87fce4bcee1a" translate="yes" xml:space="preserve">
          <source>Read a specific file after the usual startup files. May be specified repeatedly for multiple inputs. &lt;a href=&quot;#ghc-flag--ignore-dot-ghci&quot;&gt;&lt;code&gt;-ignore-dot-ghci&lt;/code&gt;&lt;/a&gt; does not apply to these files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdfe120d485085e70e78fc48c39eb13447bb5f0" translate="yes" xml:space="preserve">
          <source>Read a specific file after the usual startup files. Maybe be specified repeatedly for multiple inputs.</source>
          <target state="translated">Читайте определенный файл после обычного запуска.Может быть многократно задан для нескольких входов.</target>
        </trans-unit>
        <trans-unit id="fbdbb8f86925718238233077f610fe66a832424a" translate="yes" xml:space="preserve">
          <source>Read a string representation of a character, using Haskell source-language escape conventions, and convert it to the character that it encodes. For example:</source>
          <target state="translated">Читайте строковое представление символа,используя конвенции Haskell по экранированию исходного языка,и конвертируйте его в символ,который он кодирует.Например:</target>
        </trans-unit>
        <trans-unit id="f45ab2992a7f92c89c2d67b45445d7594627e828" translate="yes" xml:space="preserve">
          <source>Read a string representation of a character, using Haskell source-language escape conventions. For example:</source>
          <target state="translated">Читайте строковое представление символа,используя конвенции Haskell по экранированию исходного языка.Например:</target>
        </trans-unit>
        <trans-unit id="59574f2898f4af82703bca7202a821293d4ffcc1" translate="yes" xml:space="preserve">
          <source>Read a value from a memory area regarded as an array of values of the same kind. The first argument specifies the start address of the array and the second the index into the array (the first element of the array has index &lt;code&gt;0&lt;/code&gt;). The following equality holds,</source>
          <target state="translated">Считайте значение из области памяти, рассматриваемой как массив значений одного типа. Первый аргумент указывает начальный адрес массива, а второй - индекс в массиве (первый элемент массива имеет индекс &lt;code&gt;0&lt;/code&gt; ). Имеет место следующее равенство</target>
        </trans-unit>
        <trans-unit id="f02dae23f91c992be0064ed7d86e41766eb8e894" translate="yes" xml:space="preserve">
          <source>Read a value from a memory location given by a base address and offset. The following equality holds:</source>
          <target state="translated">Считывание значения из ячейки памяти,заданного базовым адресом и смещением.Равенство имеет следующее значение:</target>
        </trans-unit>
        <trans-unit id="a7b0aa0bd28f22ee1301ca31df70c736ff3ee306" translate="yes" xml:space="preserve">
          <source>Read a value from an &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Прочитать значение из &lt;code&gt;&lt;a href=&quot;ghc-ioarray#t:IOArray&quot;&gt;IOArray&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d64cf50eadebd9d63f648489fffc060e93dade0" translate="yes" xml:space="preserve">
          <source>Read a value from the given memory location.</source>
          <target state="translated">Считайте значение из данной ячейки памяти.</target>
        </trans-unit>
        <trans-unit id="c895abdcb0525ce203fd7be7a0c13f00f62176b5" translate="yes" xml:space="preserve">
          <source>Read a value in either extended or basic format</source>
          <target state="translated">Чтение значения в расширенном или базовом формате</target>
        </trans-unit>
        <trans-unit id="f6e13344b410105e46fe8c0c3bb31ba832250e46" translate="yes" xml:space="preserve">
          <source>Read a value in the format</source>
          <target state="translated">Прочитать значение в формате</target>
        </trans-unit>
        <trans-unit id="dd0b7cb834d846fc1947e62e526ff39953f44c07" translate="yes" xml:space="preserve">
          <source>Read a vector from specified index of immutable array of scalars; offset is in scalar elements.</source>
          <target state="translated">Считывание вектора из указанного индекса неизменяемого массива скаляров;смещение в скалярных элементах.</target>
        </trans-unit>
        <trans-unit id="f79c6c6b83c77de14c0bf3ded60c02c747a26da6" translate="yes" xml:space="preserve">
          <source>Read a vector from specified index of immutable array.</source>
          <target state="translated">Считывание вектора из указанного индекса неизменяемого массива.</target>
        </trans-unit>
        <trans-unit id="5615bbd35bd929521c39374f2e2a2232ced11f9c" translate="yes" xml:space="preserve">
          <source>Read a vector from specified index of mutable array of scalars; offset is in scalar elements.</source>
          <target state="translated">Чтение вектора из указанного индекса мутируемого массива скаляров;смещение-в скалярных элементах.</target>
        </trans-unit>
        <trans-unit id="4e9fe50a296114dc2b02bd5ca2a79c2f895b774b" translate="yes" xml:space="preserve">
          <source>Read a vector from specified index of mutable array.</source>
          <target state="translated">Считывание вектора из указанного индекса мутируемого массива.</target>
        </trans-unit>
        <trans-unit id="a7742b39ce7421c6d47b0effa4450918bdd45632" translate="yes" xml:space="preserve">
          <source>Read additional &lt;code&gt;.ghci&lt;/code&gt; files</source>
          <target state="translated">Прочтите дополнительные файлы &lt;code&gt;.ghci&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d233243d198088b2c0450f8380c909a760fb25ad" translate="yes" xml:space="preserve">
          <source>Read address; offset in bytes.</source>
          <target state="translated">Считывание адреса;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="3197b5d5666bc282a5115cbbd8185c4015503c26" translate="yes" xml:space="preserve">
          <source>Read all user input on &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; as a single string.</source>
          <target state="translated">Прочтите весь ввод пользователя на стандартный &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; как одну строку.</target>
        </trans-unit>
        <trans-unit id="4545d57aa61d6772e4516a078416817372af9607" translate="yes" xml:space="preserve">
          <source>Read all user input on &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; as a single string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeb2b363866c5f87fadf38cfb1ebff135219e5e" translate="yes" xml:space="preserve">
          <source>Read all user input on &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-stdhandles#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; as a single string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df9c1fd5f4c008b55e24b1254682c338fd5c8b5" translate="yes" xml:space="preserve">
          <source>Read an Int16 in big endian format.</source>
          <target state="translated">Читайте Int16 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="6f267e0ba7feb196316db561014fb8a100f37edc" translate="yes" xml:space="preserve">
          <source>Read an Int16 in little endian format.</source>
          <target state="translated">Читайте Int16 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="92b6e9e32f49c87b97a18f7e91eae119f1d1535e" translate="yes" xml:space="preserve">
          <source>Read an Int32 in big endian format.</source>
          <target state="translated">Читайте Int32 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="295f966253d453f4fa2a13a40bcdb60b3120732b" translate="yes" xml:space="preserve">
          <source>Read an Int32 in little endian format.</source>
          <target state="translated">Читайте Int32 в маленьком эндийском формате.</target>
        </trans-unit>
        <trans-unit id="2a4319e745da1df1fb9ab6def619894697620e21" translate="yes" xml:space="preserve">
          <source>Read an Int64 in big endian format.</source>
          <target state="translated">Читайте Int64 в большом эндийском формате.</target>
        </trans-unit>
        <trans-unit id="7bff0912bbb59ea521663a0f1057dd5874ce2fbf" translate="yes" xml:space="preserve">
          <source>Read an Int64 in little endian format.</source>
          <target state="translated">Читайте Int64 в формате little endian.</target>
        </trans-unit>
        <trans-unit id="9d00ac172a382dbde434bc4bef4d834e10046dba" translate="yes" xml:space="preserve">
          <source>Read an Int8 from the monad state</source>
          <target state="translated">Читайте Int8 из штата Монада</target>
        </trans-unit>
        <trans-unit id="29b4fc30960f16d120ae6224ddf706485760e8de" translate="yes" xml:space="preserve">
          <source>Read an element from a mutable array</source>
          <target state="translated">Чтение элемента из мутирующего массива</target>
        </trans-unit>
        <trans-unit id="184940591a216fa9ea649f7763278eb44f8d0931" translate="yes" xml:space="preserve">
          <source>Read an entire file &lt;em&gt;lazily&lt;/em&gt; into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The Handle will be held open until EOF is encountered.</source>
          <target state="translated">Прочитайте весь файл &lt;em&gt;лениво&lt;/em&gt; в &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Ручка будет оставаться открытой до тех пор, пока не встретится EOF.</target>
        </trans-unit>
        <trans-unit id="03f1e6feeff9a1725dd05ae88ec08afc7c1d72b9" translate="yes" xml:space="preserve">
          <source>Read an entire file &lt;em&gt;lazily&lt;/em&gt; into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. The Handle will be held open until EOF is encountered.</source>
          <target state="translated">Прочитайте весь файл &lt;em&gt;лениво&lt;/em&gt; в &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Ручка будет оставаться открытой до тех пор, пока не встретится EOF.</target>
        </trans-unit>
        <trans-unit id="60570cd035ce237ccf2437d4bfb920a02e53853c" translate="yes" xml:space="preserve">
          <source>Read an entire file strictly into a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Читать весь файл строго в &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="001be63528cff4e4b1bbe0b696c612c20323c3ab" translate="yes" xml:space="preserve">
          <source>Read an entire file strictly into a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Читать весь файл строго в &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf17dfd1f6fadf4d500465addd8a6f58eeb87931" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we fail to parse an integer, we want to return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="translated">Считайте целое число из строки с помощью &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt; . Если нам не удается разобрать целое число, мы хотим вернуть &lt;code&gt;0&lt;/code&gt; по умолчанию:</target>
        </trans-unit>
        <trans-unit id="be0da86fe87d3545be65bcc3b1ff13160afc8f22" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we fail to parse an integer, we want to return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab8b784f28fe05833cd8c769ddff123464e182a6" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we fail to parse an integer, we want to return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab42205d653354d10c40dc2129358edaf0340a6a" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we fail to parse an integer, we want to return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="translated">Считайте целое число из строки с помощью &lt;code&gt;&lt;a href=&quot;text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt; . Если нам не удается разобрать целое число, мы хотим вернуть &lt;code&gt;0&lt;/code&gt; по умолчанию:</target>
        </trans-unit>
        <trans-unit id="8b7be0938cfa7ae7ce0d40e3b9c4c39227699e7a" translate="yes" xml:space="preserve">
          <source>Read an integer from a string using &lt;code&gt;&lt;a href=&quot;text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt;. If we succeed, return twice the integer; that is, apply &lt;code&gt;(*2)&lt;/code&gt; to it. If instead we fail to parse an integer, return &lt;code&gt;0&lt;/code&gt; by default:</source>
          <target state="translated">Считайте целое число из строки с помощью &lt;code&gt;&lt;a href=&quot;text-read#v:readMaybe&quot;&gt;readMaybe&lt;/a&gt;&lt;/code&gt; . Если нам это удастся, вернуть удвоенное целое число; то есть применить к нему &lt;code&gt;(*2)&lt;/code&gt; . Если вместо этого нам не удается разобрать целое число, по умолчанию возвращается &lt;code&gt;0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d0e1b310d39697280b0ca5896c55c8f8ddd9e208" translate="yes" xml:space="preserve">
          <source>Read an optional leading sign character (&lt;code&gt;'-'&lt;/code&gt; or &lt;code&gt;'+'&lt;/code&gt;) and apply it to the result of applying the given reader.</source>
          <target state="translated">Прочтите необязательный начальный знак знака ( &lt;code&gt;'-'&lt;/code&gt; или &lt;code&gt;'+'&lt;/code&gt; ) и примените его к результату применения данного считывателя.</target>
        </trans-unit>
        <trans-unit id="de974586f48684c65e0aed99e88a68bca9babb04" translate="yes" xml:space="preserve">
          <source>Read an unsigned number in decimal notation.</source>
          <target state="translated">Читайте неподписанное число в десятичной системе счисления.</target>
        </trans-unit>
        <trans-unit id="edd8a422da79ea12a97bd88bd774c6fa6d5e779c" translate="yes" xml:space="preserve">
          <source>Read an unsigned number in hexadecimal notation. Both upper or lower case letters are allowed.</source>
          <target state="translated">Прочитайте неподписанное число в шестнадцатеричной системе счисления.Допускаются как заглавные,так и строчные буквы.</target>
        </trans-unit>
        <trans-unit id="5feb144c8f7999d7fc0752e59f4bdec2cd116666" translate="yes" xml:space="preserve">
          <source>Read an unsigned number in octal notation.</source>
          <target state="translated">Прочитайте неподписанное число в восьмеричной системе счисления.</target>
        </trans-unit>
        <trans-unit id="6ad141bb083704baa04592db003358950eddce08" translate="yes" xml:space="preserve">
          <source>Read contents of &lt;code&gt;MutVar#&lt;/code&gt;. Result is not yet evaluated.</source>
          <target state="translated">Прочтите содержимое &lt;code&gt;MutVar#&lt;/code&gt; . Результат еще не оценен.</target>
        </trans-unit>
        <trans-unit id="44f0e5c6fc9d1c23f9c6ed2b599b6b8d8e417ef0" translate="yes" xml:space="preserve">
          <source>Read contents of &lt;code&gt;TVar#&lt;/code&gt; outside an STM transaction</source>
          <target state="translated">Прочитать содержимое &lt;code&gt;TVar#&lt;/code&gt; вне транзакции STM</target>
        </trans-unit>
        <trans-unit id="5ff6ad28f98052f9fcd898c2d97970160ba11e64" translate="yes" xml:space="preserve">
          <source>Read contents of &lt;code&gt;TVar#&lt;/code&gt;. Result is not yet evaluated.</source>
          <target state="translated">Прочтите содержание &lt;code&gt;TVar#&lt;/code&gt; . Результат еще не оценен.</target>
        </trans-unit>
        <trans-unit id="3603a43d62483fa4679d6af07c238488c46786c9" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; and convert it to a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using the locale encoding. Throws an exception if this is an invalid descriptor, or EOF has been reached.</source>
          <target state="translated">Считайте данные из &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; и преобразуйте их в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; , используя кодировку локали. Выдает исключение, если это недопустимый дескриптор или достигнут EOF.</target>
        </trans-unit>
        <trans-unit id="43ab7f0c4f47fef128b100ea328372f14b6a3498" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; into memory. This is exactly equivalent to the POSIX &lt;code&gt;read&lt;/code&gt; function.</source>
          <target state="translated">Прочитать данные из &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; в память. Это в точности эквивалентно функции &lt;code&gt;read&lt;/code&gt; POSIX .</target>
        </trans-unit>
        <trans-unit id="944c1e8256532934e3f44d1937f7def6a13dd70a" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; and convert it to a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using the locale encoding. Throws an exception if this is an invalid descriptor, or EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b425fd701193503b88a9a082df1d09c431fc7f8" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; into memory. This is exactly equivalent to the POSIX &lt;code&gt;read&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9df2cabe944456d24b61ac4179ae95d0986d161" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; and convert it to a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; using the locale encoding. Throws an exception if this is an invalid descriptor, or EOF has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadcab793243870e011fcb7fc7eb8a52376b022d" translate="yes" xml:space="preserve">
          <source>Read data from an &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/system-posix-types#t:Fd&quot;&gt;Fd&lt;/a&gt;&lt;/code&gt; into memory. This is exactly equivalent to the POSIX &lt;code&gt;read&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bf8684c269a4820abae27741f614d296efe4c4" translate="yes" xml:space="preserve">
          <source>Read double; offset in bytes.</source>
          <target state="translated">Чтение двойное;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="b0cca27f8a9fdef6889ea37c66301c876cab8ce6" translate="yes" xml:space="preserve">
          <source>Read entire handle contents &lt;em&gt;lazily&lt;/em&gt; into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Chunks are read on demand, using the default chunk size.</source>
          <target state="translated">Читать все содержимое ручки &lt;em&gt;лениво&lt;/em&gt; в &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Чанки читаются по запросу с использованием размера блока по умолчанию.</target>
        </trans-unit>
        <trans-unit id="101b8e34a22629aafaa1a8c5025821cec283fe82" translate="yes" xml:space="preserve">
          <source>Read entire handle contents &lt;em&gt;lazily&lt;/em&gt; into a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Chunks are read on demand, using the default chunk size.</source>
          <target state="translated">Читать все содержимое ручки &lt;em&gt;лениво&lt;/em&gt; в &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; . Чанки читаются по запросу с использованием размера блока по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e54160b8e25354935fce10255c3e4543c690a8d3" translate="yes" xml:space="preserve">
          <source>Read float; offset in bytes.</source>
          <target state="translated">Чтение поплавка;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="db90f20fdb5334fdb03e7dc9053d0abf64c43f74" translate="yes" xml:space="preserve">
          <source>Read from specified index of immutable array. Result is packaged into an unboxed singleton; the result itself is not yet evaluated.</source>
          <target state="translated">Считывание из указанного индекса неизменяемого массива.Результат упаковывается в неупакованную одиночку;сам результат еще не оценен.</target>
        </trans-unit>
        <trans-unit id="0200070728a5fb343af81ee6afd180f318933176" translate="yes" xml:space="preserve">
          <source>Read from specified index of mutable array. Result is not yet evaluated.</source>
          <target state="translated">Считывание из указанного индекса мутируемого массива.Результат еще не оценен.</target>
        </trans-unit>
        <trans-unit id="d1a39c4b6ea4cc164485bd240d4bd6cf1570e05c" translate="yes" xml:space="preserve">
          <source>Read from the specified index of an immutable array. The result is packaged into an unboxed unary tuple; the result itself is not yet evaluated. Pattern matching on the tuple forces the indexing of the array to happen but does not evaluate the element itself. Evaluating the thunk prevents additional thunks from building up on the heap. Avoiding these thunks, in turn, reduces references to the argument array, allowing it to be garbage collected more promptly.</source>
          <target state="translated">Считывание из указанного индекса неизменяемого массива.Результат упаковывается в unboxed unary кортеж;сам результат еще не оценен.Сопоставление шаблонов кортежей заставляет выполнить индексацию массива,но не оценивает сам элемент.Оценка кортежа предотвращает накопление дополнительных кортежей на куче.Исключение этих &quot;фишек&quot;,в свою очередь,уменьшает количество ссылок на массив аргументов,позволяя быстрее собирать мусор.</target>
        </trans-unit>
        <trans-unit id="36061d225788479538ce96083566a66df2c49724" translate="yes" xml:space="preserve">
          <source>Read input from &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;. Use terminal-style interaction if &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; is connected to a terminal and has echoing enabled. Otherwise (e.g., if &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; is a pipe), use file-style interaction.</source>
          <target state="translated">Читайте входной сигнал от &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; . Используйте взаимодействие в стиле терминала, если &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; подключен к терминалу и для него включено эхо. В противном случае (например, если &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; - это канал) используйте взаимодействие в файловом стиле.</target>
        </trans-unit>
        <trans-unit id="bf10d57b566d85757a2f9c17303133cd522af6e5" translate="yes" xml:space="preserve">
          <source>Read input from &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;. Use terminal-style interaction if &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; is connected to a terminal and has echoing enabled. Otherwise (e.g., if &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle-fd#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; is a pipe), use file-style interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d08e9b1e16db73ab15325735486f867519ce968" translate="yes" xml:space="preserve">
          <source>Read input from &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-stdhandles#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt;. Use terminal-style interaction if &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-stdhandles#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; is connected to a terminal and has echoing enabled. Otherwise (e.g., if &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-stdhandles#v:stdin&quot;&gt;stdin&lt;/a&gt;&lt;/code&gt; is a pipe), use file-style interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b87177b15201771ca07ee6fd67e9a5fc97ac6f" translate="yes" xml:space="preserve">
          <source>Read int; offset in bytes.</source>
          <target state="translated">Читайте int;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="a9a5da1bf9c8eb7a9e984e1dcd5874b1bcef2bae" translate="yes" xml:space="preserve">
          <source>Read integer; offset in machine words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="509993ef463c0c211358fd0c0596577266fe2fb7" translate="yes" xml:space="preserve">
          <source>Read integer; offset in words.</source>
          <target state="translated">Читайте целое число;смещение в словах.</target>
        </trans-unit>
        <trans-unit id="e9087047c795daa1de0e7dba3f7e080b494418f8" translate="yes" xml:space="preserve">
          <source>Read some text. If the read succeeds, return its value and the remaining text, otherwise an error message.</source>
          <target state="translated">Прочитай текст.Если чтение прошло успешно,верните его значение и оставшийся текст,в противном случае сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="385971a1139a0bdb98d1292763e2b5ce86ca29ce" translate="yes" xml:space="preserve">
          <source>Read stable pointer; offset in bytes.</source>
          <target state="translated">Чтение стабильного указателя;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="3fc7f5e6a842e6c7c7f4d5cd93c243638c0a22c7" translate="yes" xml:space="preserve">
          <source>Read the interface in ⟨file⟩ and dump it as text to &lt;code&gt;stdout&lt;/code&gt;. For example &lt;code&gt;ghc --show-iface M.hi&lt;/code&gt;.</source>
          <target state="translated">Прочтите интерфейс в &amp;laquo;файле&amp;raquo; и выгрузите его как текст в стандартный &lt;code&gt;stdout&lt;/code&gt; . Например &lt;code&gt;ghc --show-iface M.hi&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35fd8313e4529e013617beaafbd192823c6b704e" translate="yes" xml:space="preserve">
          <source>Read the next value from the &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt;. Blocks when the channel is empty. Since the read end of a channel is an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;, this operation inherits fairness guarantees of &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;s (e.g. threads blocked in this operation are woken up in FIFO order).</source>
          <target state="translated">Прочтите следующее значение из &lt;code&gt;&lt;a href=&quot;control-concurrent-chan#t:Chan&quot;&gt;Chan&lt;/a&gt;&lt;/code&gt; . Блокируется при пустом канале. Поскольку конец чтения канала является &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; , эта операция наследует гарантии справедливости &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; (например, потоки, заблокированные в этой операции, пробуждаются в порядке FIFO).</target>
        </trans-unit>
        <trans-unit id="a3f42dd07bf605d27f73449bde07c7d88dd5a27e" translate="yes" xml:space="preserve">
          <source>Read the next value from the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Прочтите следующее значение из &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tbqueue#t:TBQueue&quot;&gt;TBQueue&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="219b4ebe09d71aecd989470d5600adac017a8f74" translate="yes" xml:space="preserve">
          <source>Read the next value from the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Прочтите следующее значение из &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tchan#t:TChan&quot;&gt;TChan&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e07d0d1882240686a99adef17b39a619c1bef0f" translate="yes" xml:space="preserve">
          <source>Read the next value from the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Прочтите следующее значение из &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tqueue#t:TQueue&quot;&gt;TQueue&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e007f69e1d890c7d542d9833535fb4b6a263ffd6" translate="yes" xml:space="preserve">
          <source>Read the remaining contents of a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; as a string. The &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is closed once the contents have been read, or if an exception is thrown.</source>
          <target state="translated">Прочтите оставшееся содержимое &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; в виде строки. &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; закрывается после того , как содержание было прочитано, или если исключение.</target>
        </trans-unit>
        <trans-unit id="7286ff5776963d1122e0e1f5d75fb6313de5f7ec" translate="yes" xml:space="preserve">
          <source>Read the remaining contents of a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; as a string. The &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is closed once the contents have been read, or if an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b728a2fc5eb8a93fd11671f987a96fe71365853" translate="yes" xml:space="preserve">
          <source>Read the remaining contents of a &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; as a string. The &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; is closed once the contents have been read, or if an exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f565788b2b9a2c3728b76cecd24c45e236a991" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Прочтите значение &lt;code&gt;&lt;a href=&quot;data-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7780aaaf7afd886eedb902ae89adf47399d57fc" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Прочтите значение &lt;code&gt;&lt;a href=&quot;data-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e675dd344452e999c38ed03687aca33c72e023cd" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Прочтите значение &lt;code&gt;&lt;a href=&quot;ghc-ioref#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8e716a6f85aeaaaa890a3308400401bdff5d70c0" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Прочтите значение &lt;code&gt;&lt;a href=&quot;ghc-stref#t:STRef&quot;&gt;STRef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01bf80e08c343263e4bb151f8cf9ca8018bbad19" translate="yes" xml:space="preserve">
          <source>Read the value of an &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Прочтите значение &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:IORef&quot;&gt;IORef&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c73f8ad34e74c5b893656d656a680f2cbb585eaf" translate="yes" xml:space="preserve">
          <source>Read up to the specified number of bytes starting from a specified offset, returning the number of bytes actually read, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the end of the stream has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a2ef0a421cbff499b2cc23a0009f163b4f2a5a" translate="yes" xml:space="preserve">
          <source>Read up to the specified number of bytes starting from a specified offset, returning the number of bytes actually read. This function should only block if there is no data available. If there is not enough data available, then the function should just return the available data. A return value of zero indicates that the end of the data stream (e.g. end of file) has been reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048e888435023fe10ac7481eb2d18a6767a2ae0e" translate="yes" xml:space="preserve">
          <source>Read up to the specified number of bytes, returning the number of bytes actually read, or &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if the end of the stream has been reached.</source>
          <target state="translated">Чтение до указанного количества байтов, возвращающее количество фактически прочитанных байтов, или &lt;code&gt;&lt;a href=&quot;data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если был достигнут конец потока.</target>
        </trans-unit>
        <trans-unit id="9ddb4092dc0454475d79a2caf656b95780da4b95" translate="yes" xml:space="preserve">
          <source>Read up to the specified number of bytes, returning the number of bytes actually read. This function should only block if there is no data available. If there is not enough data available, then the function should just return the available data. A return value of zero indicates that the end of the data stream (e.g. end of file) has been reached.</source>
          <target state="translated">Считывание до указанного количества байт,возвращая количество фактически прочитанных байт.Эта функция должна блокировать только в случае отсутствия данных.Если данных недостаточно,функция должна просто вернуть доступные данные.Возвращаемое значение нуля означает,что достигнут конец потока данных (например,конец файла).</target>
        </trans-unit>
        <trans-unit id="29b7483916a09f80924395ee0d7b83ba6ab96615" translate="yes" xml:space="preserve">
          <source>Read word; offset in bytes.</source>
          <target state="translated">Читать слово;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="b2b48abbabbc3d38780240f14830009dd341e1cd" translate="yes" xml:space="preserve">
          <source>Read word; offset in machine words.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e12038f525002402b577d6fb2889e55cff2dfbae" translate="yes" xml:space="preserve">
          <source>Read word; offset in words.</source>
          <target state="translated">Читайте слово;смещение в словах.</target>
        </trans-unit>
        <trans-unit id="1b9d7709bfb533d78fbe0b84eb0c51db68ac6e05" translate="yes" xml:space="preserve">
          <source>Read1</source>
          <target state="translated">Read1</target>
        </trans-unit>
        <trans-unit id="81d8932de84f99268c4fd5f11aa697682044fa60" translate="yes" xml:space="preserve">
          <source>Read2</source>
          <target state="translated">Read2</target>
        </trans-unit>
        <trans-unit id="f1e077638634abc3662a6f0c89d3f406f31baa23" translate="yes" xml:space="preserve">
          <source>ReadBuffer</source>
          <target state="translated">ReadBuffer</target>
        </trans-unit>
        <trans-unit id="c5020e6d3d649435fd6a8008235ac63730a66a73" translate="yes" xml:space="preserve">
          <source>ReadEnable</source>
          <target state="translated">ReadEnable</target>
        </trans-unit>
        <trans-unit id="6de7f0656dc34507427ddc07a973f98f0bcc41df" translate="yes" xml:space="preserve">
          <source>ReadHandle</source>
          <target state="translated">ReadHandle</target>
        </trans-unit>
        <trans-unit id="54556afe3251c3e593a21d925fcc337a1e508750" translate="yes" xml:space="preserve">
          <source>ReadLock</source>
          <target state="translated">ReadLock</target>
        </trans-unit>
        <trans-unit id="c2f37f72692c3515483dfa8baf2cb80b52368faa" translate="yes" xml:space="preserve">
          <source>ReadMode</source>
          <target state="translated">ReadMode</target>
        </trans-unit>
        <trans-unit id="35b71d2407f50e29058b6e84ccdbdda494394136" translate="yes" xml:space="preserve">
          <source>ReadOnly</source>
          <target state="translated">ReadOnly</target>
        </trans-unit>
        <trans-unit id="46689621a240954e944093b728ea402ca810f9e1" translate="yes" xml:space="preserve">
          <source>ReadP</source>
          <target state="translated">ReadP</target>
        </trans-unit>
        <trans-unit id="4b68042bf88ac33a1e40bfc7d7f822fcd7009e90" translate="yes" xml:space="preserve">
          <source>ReadPrec</source>
          <target state="translated">ReadPrec</target>
        </trans-unit>
        <trans-unit id="9fe9c76a65059b5111bfa003358795f86d10951b" translate="yes" xml:space="preserve">
          <source>ReadS</source>
          <target state="translated">ReadS</target>
        </trans-unit>
        <trans-unit id="934e6375acc87422b86cc2cd6088641368f302ce" translate="yes" xml:space="preserve">
          <source>ReadWrite</source>
          <target state="translated">ReadWrite</target>
        </trans-unit>
        <trans-unit id="9b64792077a2e304ad52b88e180478893f260952" translate="yes" xml:space="preserve">
          <source>ReadWriteHandle</source>
          <target state="translated">ReadWriteHandle</target>
        </trans-unit>
        <trans-unit id="52f3ccd214d97eb22352b89cf6fab70f198121a0" translate="yes" xml:space="preserve">
          <source>ReadWriteMode</source>
          <target state="translated">ReadWriteMode</target>
        </trans-unit>
        <trans-unit id="ac5bbe8292ed1b69e0f95e5bdaa035569a295fd7" translate="yes" xml:space="preserve">
          <source>Reader</source>
          <target state="translated">Reader</target>
        </trans-unit>
        <trans-unit id="c63a28bc751310feb69d6d85675c8d7417374a2f" translate="yes" xml:space="preserve">
          <source>Reader operations</source>
          <target state="translated">Чтение операций</target>
        </trans-unit>
        <trans-unit id="c6a6be791f6f7604b9585f870722f3f322f53e43" translate="yes" xml:space="preserve">
          <source>ReaderT</source>
          <target state="translated">ReaderT</target>
        </trans-unit>
        <trans-unit id="cffa2af0a3a67cf2123e3411d020161abc01fc05" translate="yes" xml:space="preserve">
          <source>Reading</source>
          <target state="translated">Reading</target>
        </trans-unit>
        <trans-unit id="c422c2c68b42e2bd58fbc1703fc83cd895932253" translate="yes" xml:space="preserve">
          <source>Reading a &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; value is always a parse error, considering &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; as a data type with no constructors.</source>
          <target state="translated">Чтение значения &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; всегда является ошибкой синтаксического анализа, поскольку &lt;code&gt;&lt;a href=&quot;data-void#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; рассматривается как тип данных без конструкторов.</target>
        </trans-unit>
        <trans-unit id="f06f44f189a8a36daa4efe052b72e715b174b17d" translate="yes" xml:space="preserve">
          <source>Reading a &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; value is always a parse error, considering &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; as a data type with no constructors.</source>
          <target state="translated">Чтение значения &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; всегда является ошибкой синтаксического анализа, поскольку &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#t:Void&quot;&gt;Void&lt;/a&gt;&lt;/code&gt; рассматривается как тип данных без конструкторов.</target>
        </trans-unit>
        <trans-unit id="ceb93f69e25dd4f67fafd5c0c9bcf1b6c00353d6" translate="yes" xml:space="preserve">
          <source>Reading and writing</source>
          <target state="translated">Чтение и письмо</target>
        </trans-unit>
        <trans-unit id="4f18826bef9dfdb927570ae8ab6b9bec70524276" translate="yes" xml:space="preserve">
          <source>Reading and writing mutable arrays</source>
          <target state="translated">Массивы для чтения и записи мутирующих массивов</target>
        </trans-unit>
        <trans-unit id="365b9ae589656ef49d750dc632c6d31ceb0c5361" translate="yes" xml:space="preserve">
          <source>Reading directories</source>
          <target state="translated">Чтение каталогов</target>
        </trans-unit>
        <trans-unit id="96b64527dbce354910bf9627caf09e2a6cfc34cf" translate="yes" xml:space="preserve">
          <source>Reading from ByteStrings</source>
          <target state="translated">Чтение из ByteStrings</target>
        </trans-unit>
        <trans-unit id="e253f6b863facf4d77e612851b75f8717edbc34a" translate="yes" xml:space="preserve">
          <source>Reading user input</source>
          <target state="translated">Чтение пользовательского ввода</target>
        </trans-unit>
        <trans-unit id="6a32d6ca2eb1805847b13bc731bea17f663fa696" translate="yes" xml:space="preserve">
          <source>Reading/writing data</source>
          <target state="translated">Чтение/запись данных</target>
        </trans-unit>
        <trans-unit id="c80f1cd51e818f0a4c3a4b8c5cf43e874d958e5a" translate="yes" xml:space="preserve">
          <source>Reads 31-bit character; offset in 4-byte words.</source>
          <target state="translated">Читает 31-битный символ;смещение в 4-байтных словах.</target>
        </trans-unit>
        <trans-unit id="921dc7c293431a3a64c3ded33915a5aa38ae62af" translate="yes" xml:space="preserve">
          <source>Reads 8-bit character; offset in bytes.</source>
          <target state="translated">Читает 8-битный символ;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="a5b991e4a4379bd9b80c3767927105724a0875a1" translate="yes" xml:space="preserve">
          <source>Reads a &lt;em&gt;signed&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; value, given a reader for an unsigned value.</source>
          <target state="translated">Считывает &lt;em&gt;подписанное &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Real&quot;&gt;Real&lt;/a&gt;&lt;/code&gt; значение, данное устройство чтения для беззнакового значения.</target>
        </trans-unit>
        <trans-unit id="1fd583060d47ecdc99e4f5f0f86aaa58223cfd92" translate="yes" xml:space="preserve">
          <source>Reads a non-empty string of decimal digits.</source>
          <target state="translated">Читает непустую строку десятичных цифр.</target>
        </trans-unit>
        <trans-unit id="cbbbba4aaf9680cf8ac1a308bdb53817ab019a45" translate="yes" xml:space="preserve">
          <source>Reads a number of &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s from the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; directly into an array.</source>
          <target state="translated">Считывает число &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt; с от указанной &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; непосредственно в массив.</target>
        </trans-unit>
        <trans-unit id="556bd04c13e60facc8066057186c581b79650a92" translate="yes" xml:space="preserve">
          <source>Reads a number of &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s from the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; directly into an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3c59e201f76fa89a7a109bbf416473d1ded031" translate="yes" xml:space="preserve">
          <source>Reads a number of &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/data-word#t:Word8&quot;&gt;Word8&lt;/a&gt;&lt;/code&gt;s from the specified &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; directly into an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07300e7dd09099ac84ef4f53f7fd7ce2c8ce883" translate="yes" xml:space="preserve">
          <source>Reads a package specification from ⟨file⟩ (which may be &amp;ldquo;&lt;code&gt;-&lt;/code&gt;&amp;rdquo; to indicate standard input), and adds it to the database of installed packages. The syntax of ⟨file⟩ is given in &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo: a package specification&lt;/a&gt;.</source>
          <target state="translated">Считывает спецификацию пакета из &amp;laquo;файла&amp;raquo; (который может быть &amp;laquo; &lt;code&gt;-&lt;/code&gt; &amp;raquo; для обозначения стандартного ввода) и добавляет его в базу данных установленных пакетов. Синтаксис &amp;laquo;файла&amp;raquo; приведен в &lt;a href=&quot;#installed-pkg-info&quot;&gt;InstalledPackageInfo: спецификации пакета&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18e64b7710b0f793ca4a73b1986230bc60e374cb" translate="yes" xml:space="preserve">
          <source>Reads an &lt;em&gt;unsigned&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; value in an arbitrary base.</source>
          <target state="translated">Считывает &lt;em&gt;беззнаковое &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; значение с произвольной базой.</target>
        </trans-unit>
        <trans-unit id="df34a2a58d81dcca7a482cd5956785905a568c3f" translate="yes" xml:space="preserve">
          <source>Reads an &lt;em&gt;unsigned&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;prelude#t:RealFrac&quot;&gt;RealFrac&lt;/a&gt;&lt;/code&gt; value, expressed in decimal scientific notation.</source>
          <target state="translated">Считывает &lt;em&gt;беззнаковое&lt;/em&gt; значение &lt;code&gt;&lt;a href=&quot;prelude#t:RealFrac&quot;&gt;RealFrac&lt;/a&gt;&lt;/code&gt; , выраженное в десятичном экспоненциальном представлении.</target>
        </trans-unit>
        <trans-unit id="ab426f1eb57de3cd53ffe87e3b87e21c773c64b0" translate="yes" xml:space="preserve">
          <source>Reads one character of input. Ignores non-printable characters.</source>
          <target state="translated">Читает один символ ввода.Игнорирует непечатаемые символы.</target>
        </trans-unit>
        <trans-unit id="8db8c0a51e77d5b8ce47a692479eb60e9ad3c1d1" translate="yes" xml:space="preserve">
          <source>Reads one line of input and fills the insertion space with initial text. When using terminal-style interaction, this function provides a rich line-editing user interface with the added ability to give the user default values.</source>
          <target state="translated">Читает одну строку ввода и заполняет пространство для вставки исходным текстом.При использовании взаимодействия в стиле терминала эта функция предоставляет богатый интерфейс пользователя с редактированием строк с добавленной возможностью задавать пользователю значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="33401a6d6df492bf1a176a021ff28fb4ff727341" translate="yes" xml:space="preserve">
          <source>Reads one line of input, without displaying the input while it is being typed. When using terminal-style interaction, the masking character (if given) will replace each typed character.</source>
          <target state="translated">Читает одну строку ввода,не отображая ее во время набора текста.При использовании взаимодействия в стиле терминала символ маскировки (если он задан)заменит каждый набранный символ.</target>
        </trans-unit>
        <trans-unit id="5e14c26e4702c8715ffc36b86faf8dd417b0a61b" translate="yes" xml:space="preserve">
          <source>Reads one line of input. The final newline (if any) is removed. When using terminal-style interaction, this function provides a rich line-editing user interface.</source>
          <target state="translated">Читает одну строку ввода.Окончательная новая строка (если таковая имеется)удаляется.При использовании взаимодействия в стиле терминала эта функция обеспечивает богатый интерфейс пользователя с редактированием строк.</target>
        </trans-unit>
        <trans-unit id="2fcf3b55305c70b8c82f22537db6b19a7a199aa5" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;FilePath&lt;/code&gt; pointed to by the symbolic link and returns it.</source>
          <target state="translated">Читает &lt;code&gt;FilePath&lt;/code&gt; , на который указывает символическая ссылка, и возвращает его.</target>
        </trans-unit>
        <trans-unit id="b52ed1233e0f5b938bb0cd5a498ea44aaf2572ed" translate="yes" xml:space="preserve">
          <source>Reads the &lt;code&gt;RawFilePath&lt;/code&gt; pointed to by the symbolic link and returns it.</source>
          <target state="translated">Читает &lt;code&gt;RawFilePath&lt;/code&gt; , на который указывает символическая ссылка, и возвращает его.</target>
        </trans-unit>
        <trans-unit id="722dfe2339359bc8455fa059b0c2ff7e3c1b3b76" translate="yes" xml:space="preserve">
          <source>Reads the line input history from the given file. Returns &lt;code&gt;&lt;a href=&quot;system-console-haskeline-history#v:emptyHistory&quot;&gt;emptyHistory&lt;/a&gt;&lt;/code&gt; if the file does not exist or could not be read.</source>
          <target state="translated">Читает историю строкового ввода из заданного файла. Возвращает &lt;code&gt;&lt;a href=&quot;system-console-haskeline-history#v:emptyHistory&quot;&gt;emptyHistory&lt;/a&gt;&lt;/code&gt; , если файл не существует или не может быть прочитан.</target>
        </trans-unit>
        <trans-unit id="ef042421d404f2b4e066a957f7c03bc5b97e85a1" translate="yes" xml:space="preserve">
          <source>Reads vector; offset in bytes.</source>
          <target state="translated">Читает вектор;смещение в байтах.</target>
        </trans-unit>
        <trans-unit id="35688a4a54ddf8e2c084064bb89a3f81c25ec6d0" translate="yes" xml:space="preserve">
          <source>Reads vector; offset in scalar elements.</source>
          <target state="translated">Читает вектор;смещение в скалярных элементах.</target>
        </trans-unit>
        <trans-unit id="8e16e5b2c446aea3b142d9320755f82932fc2cdf" translate="yes" xml:space="preserve">
          <source>Real</source>
          <target state="translated">Real</target>
        </trans-unit>
        <trans-unit id="fe1df2542911bb9bfc0a0622989aa4692d4d4925" translate="yes" xml:space="preserve">
          <source>RealFloat</source>
          <target state="translated">RealFloat</target>
        </trans-unit>
        <trans-unit id="1d59ea5cfe761d6c3eab8be5af3e930b4e9813c9" translate="yes" xml:space="preserve">
          <source>RealFrac</source>
          <target state="translated">RealFrac</target>
        </trans-unit>
        <trans-unit id="72916ca84578a33d194a32dbc91dd0f2ffc568d0" translate="yes" xml:space="preserve">
          <source>RealWorld</source>
          <target state="translated">RealWorld</target>
        </trans-unit>
        <trans-unit id="5dba1501ceaedf9b453524d857a2faa617cb3fe6" translate="yes" xml:space="preserve">
          <source>Reason: a value of type &lt;code&gt;T&lt;/code&gt; must be represented as a pair of a dictionary for &lt;code&gt;Ord t&lt;/code&gt; and a value of type &lt;code&gt;t&lt;/code&gt;. That contradicts the idea that &lt;code&gt;newtype&lt;/code&gt; should have no concrete representation. You can get just the same efficiency and effect by using &lt;code&gt;data&lt;/code&gt; instead of &lt;code&gt;newtype&lt;/code&gt;. If there is no overloading involved, then there is more of a case for allowing an existentially-quantified &lt;code&gt;newtype&lt;/code&gt;, because the &lt;code&gt;data&lt;/code&gt; version does carry an implementation cost, but single-field existentially quantified constructors aren&amp;rsquo;t much use. So the simple restriction (no existential stuff on &lt;code&gt;newtype&lt;/code&gt;) stands, unless there are convincing reasons to change it.</source>
          <target state="translated">Причина: значение типа &lt;code&gt;T&lt;/code&gt; должно быть представлено как пара словаря для &lt;code&gt;Ord t&lt;/code&gt; и значения типа &lt;code&gt;t&lt;/code&gt; . Это противоречит идее о том, что у &lt;code&gt;newtype&lt;/code&gt; не должно быть конкретного представления. Вы можете получить такую ​​же эффективность и эффект, используя &lt;code&gt;data&lt;/code&gt; вместо &lt;code&gt;newtype&lt;/code&gt; . Если нет перегрузки, то есть больше возможностей для разрешения экзистенциально квантифицированного &lt;code&gt;newtype&lt;/code&gt; , потому что версия &lt;code&gt;data&lt;/code&gt; несет в себе стоимость реализации, но экзистенциально квантифицированные конструкторы с одним полем не очень полезны. Итак, простое ограничение (никаких экзистенциальных вещей на &lt;code&gt;newtype&lt;/code&gt; ) стоит, если нет убедительных причин для его изменения.</target>
        </trans-unit>
        <trans-unit id="9a6256eaed9ea1114a2efcaedbce4cb0208a3d14" translate="yes" xml:space="preserve">
          <source>Reason: exactly which implicit parameter you pick up depends on exactly where you invoke a function. But the &amp;ldquo;invocation&amp;rdquo; of instance declarations is done behind the scenes by the compiler, so it&amp;rsquo;s hard to figure out exactly where it is done. Easiest thing is to outlaw the offending types.</source>
          <target state="translated">Причина: какой именно неявный параметр вы выбираете, зависит от того, где именно вы вызываете функцию. Но &amp;laquo;вызов&amp;raquo; объявлений экземпляров выполняется компилятором &amp;laquo;за кулисами&amp;raquo;, поэтому сложно понять, где именно это делается. Самый простой способ - объявить преступников вне закона.</target>
        </trans-unit>
        <trans-unit id="6e8a522343c13a08a63fc7d59eabf5eccb287fa2" translate="yes" xml:space="preserve">
          <source>Rebindable syntax does not play well with untyped TH quotes: applying the rebindable syntax rules would go against the lax nature of untyped quotes that are accepted even in the presence of unbound identifiers (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/18102&quot;&gt;#18102&lt;/a&gt;). Applying the rebindable syntax rules to them would force the code that defines the said quotes to have all the necessary functions (e.g &lt;code&gt;ifThenElse&lt;/code&gt; or &lt;code&gt;fromInteger&lt;/code&gt;) in scope, instead of delaying the resolution of those symbols to the code that splices the quoted Haskell syntax, as is usually done with untyped TH. For this reason, even if a module has untyped TH quotes with &lt;code&gt;RebindableSyntax&lt;/code&gt; enabled, GHC turns off rebindable syntax while processing the quotes. The code that splices the quotes is however free to turn on &lt;code&gt;RebindableSyntax&lt;/code&gt; to have the usual rules applied to the resulting code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298dc73731bc7a4749394c1ed1eaf9eac550e401" translate="yes" xml:space="preserve">
          <source>RebindableSyntax</source>
          <target state="translated">RebindableSyntax</target>
        </trans-unit>
        <trans-unit id="7b3fd32a019ac1e42cb2925f62672bed86d5adf3" translate="yes" xml:space="preserve">
          <source>Rec0</source>
          <target state="translated">Rec0</target>
        </trans-unit>
        <trans-unit id="1295aa259117100bd41b364e47ee19a8bf31b72d" translate="yes" xml:space="preserve">
          <source>Rec1</source>
          <target state="translated">Rec1</target>
        </trans-unit>
        <trans-unit id="1da832231b93d55790d520c684e009389eb2a703" translate="yes" xml:space="preserve">
          <source>RecConError</source>
          <target state="translated">RecConError</target>
        </trans-unit>
        <trans-unit id="fd95315fe03dd1800894931f422af84de4684d14" translate="yes" xml:space="preserve">
          <source>RecSelError</source>
          <target state="translated">RecSelError</target>
        </trans-unit>
        <trans-unit id="f3a0da81b45abf2b006fec20fa2d39ebbd2d4bbf" translate="yes" xml:space="preserve">
          <source>RecUpdError</source>
          <target state="translated">RecUpdError</target>
        </trans-unit>
        <trans-unit id="a335b25548f3bcd7b0fb7f79636f5e2db53c5a11" translate="yes" xml:space="preserve">
          <source>Recall our running &lt;code&gt;GMapKey&lt;/code&gt; class example:</source>
          <target state="translated">Вспомните наш &lt;code&gt;GMapKey&lt;/code&gt; работающего класса GMapKey :</target>
        </trans-unit>
        <trans-unit id="d10b6b31116686730891b22b02833d624e33a9d2" translate="yes" xml:space="preserve">
          <source>Recall that, for numeric types, &lt;code&gt;&lt;a href=&quot;ghc-enum#v:succ&quot;&gt;succ&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-enum#v:pred&quot;&gt;pred&lt;/a&gt;&lt;/code&gt; typically add and subtract &lt;code&gt;1&lt;/code&gt;, respectively. This is not true in the case of &lt;code&gt;&lt;a href=&quot;data-fixed#t:Fixed&quot;&gt;Fixed&lt;/a&gt;&lt;/code&gt;, whose successor and predecessor functions intuitively return the &quot;next&quot; and &quot;previous&quot; values in the enumeration. The results of these functions thus depend on the resolution of the &lt;code&gt;&lt;a href=&quot;data-fixed#t:Fixed&quot;&gt;Fixed&lt;/a&gt;&lt;/code&gt; value. For example, when enumerating values of resolution &lt;code&gt;10^-3&lt;/code&gt; of &lt;code&gt;type Milli = Fixed E3&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3baa0f6b98ee28254c2c57f15a0aae13cda89d30" translate="yes" xml:space="preserve">
          <source>Recall that, for numeric types, &lt;code&gt;&lt;a href=&quot;prelude#v:succ&quot;&gt;succ&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;prelude#v:pred&quot;&gt;pred&lt;/a&gt;&lt;/code&gt; typically add and subtract &lt;code&gt;1&lt;/code&gt;, respectively. This is not true in the case of &lt;code&gt;&lt;a href=&quot;data-fixed#t:Fixed&quot;&gt;Fixed&lt;/a&gt;&lt;/code&gt;, whose successor and predecessor functions intuitively return the &quot;next&quot; and &quot;previous&quot; values in the enumeration. The results of these functions thus depend on the resolution of the &lt;code&gt;&lt;a href=&quot;data-fixed#t:Fixed&quot;&gt;Fixed&lt;/a&gt;&lt;/code&gt; value. For example, when enumerating values of resolution &lt;code&gt;10^-3&lt;/code&gt; of &lt;code&gt;type Milli = Fixed E3&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903432601712147eb2434cb8c476ff0e83952cd7" translate="yes" xml:space="preserve">
          <source>Recipient</source>
          <target state="translated">Recipient</target>
        </trans-unit>
        <trans-unit id="9ef05c4a6741a87ca08b890fc7c21f33e2ad896a" translate="yes" xml:space="preserve">
          <source>RecipientClass</source>
          <target state="translated">RecipientClass</target>
        </trans-unit>
        <trans-unit id="78cbf8eb1d8fbe5db88f5c1a9c458b79c931b4c8" translate="yes" xml:space="preserve">
          <source>Recipients</source>
          <target state="translated">Recipients</target>
        </trans-unit>
        <trans-unit id="963a33a0896f0406c37381574c5bd6de3ca240a0" translate="yes" xml:space="preserve">
          <source>Reciprocal fraction.</source>
          <target state="translated">Взаимная фракция.</target>
        </trans-unit>
        <trans-unit id="1c54132b8e5a9fa44a9a1a7d30b1be36ab3c4247" translate="yes" xml:space="preserve">
          <source>Record</source>
          <target state="translated">Record</target>
        </trans-unit>
        <trans-unit id="45d008c06807b89d2865fcbc138d7ad3f636b17b" translate="yes" xml:space="preserve">
          <source>Record external files that runIO is using (dependent upon). The compiler can then recognize that it should re-compile the Haskell file when an external file changes.</source>
          <target state="translated">Записывайте внешние файлы,которые использует runIO (зависит от).Компилятор может распознать,что он должен перекомпилировать Haskell-файл при изменении внешнего файла.</target>
        </trans-unit>
        <trans-unit id="4b2f37c69064f4d60557c4a483d9e445adf20b7f" translate="yes" xml:space="preserve">
          <source>Record punning can also be used in an expression, writing, for example,</source>
          <target state="translated">Записывающая каламбура также может быть использована в выражении,например,в письме,</target>
        </trans-unit>
        <trans-unit id="b6bac77d0dae3258bae661dba81781e4a0a53223" translate="yes" xml:space="preserve">
          <source>Record punning permits the variable name to be elided, so one can simply write</source>
          <target state="translated">Пробивка записи позволяет элиминировать имя переменной,так что можно просто записать</target>
        </trans-unit>
        <trans-unit id="4d5738e1bf7489c65afdf5cf1dff634de18b8ff4" translate="yes" xml:space="preserve">
          <source>Record puns are enabled by the language extension &lt;a href=&quot;#extension-NamedFieldPuns&quot;&gt;&lt;code&gt;NamedFieldPuns&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#extension-NamedFieldPuns&quot;&gt; &lt;code&gt;NamedFieldPuns&lt;/code&gt; &lt;/a&gt; слов включается языковым расширением NamedFieldPuns .</target>
        </trans-unit>
        <trans-unit id="1e65b5bd099154053ee3160874855905008b6109" translate="yes" xml:space="preserve">
          <source>Record update syntax is supported for existentials (and GADTs):</source>
          <target state="translated">Поддерживается синтаксис обновления записей для экзистенциальных данных (и GADT):</target>
        </trans-unit>
        <trans-unit id="97ef08acc2a72cd32dfb1cf2b2819a6144dc81c7" translate="yes" xml:space="preserve">
          <source>Record updates are allowed with GADT-style declarations, only fields that have the following property: the type of the field mentions no existential type variables.</source>
          <target state="translated">Обновление записей разрешено с помощью объявлений в стиле GADT,только для полей,имеющих следующее свойство:тип поля не упоминает экзистенциальных переменных типа.</target>
        </trans-unit>
        <trans-unit id="f66d5685b07c4c5f1ed77f33423e67329db7364a" translate="yes" xml:space="preserve">
          <source>Record wildcard syntax permits a &amp;ldquo;&lt;code&gt;..&lt;/code&gt;&amp;rdquo; in a record pattern, where each elided field &lt;code&gt;f&lt;/code&gt; is replaced by the pattern &lt;code&gt;f = f&lt;/code&gt;. For example, the above pattern can be written as</source>
          <target state="translated">Синтаксис подстановочного знака записи позволяет использовать &amp;laquo; &lt;code&gt;..&lt;/code&gt; &amp;raquo; в шаблоне записи, где каждое исключенное поле &lt;code&gt;f&lt;/code&gt; заменяется шаблоном &lt;code&gt;f = f&lt;/code&gt; . Например, приведенный выше шаблон можно записать как</target>
        </trans-unit>
        <trans-unit id="d84df017928cd2888fe54c1800d0964a95c8472d" translate="yes" xml:space="preserve">
          <source>Record wildcards are enabled by the language extension &lt;a href=&quot;#extension-RecordWildCards&quot;&gt;&lt;code&gt;RecordWildCards&lt;/code&gt;&lt;/a&gt;. This exension implies &lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt;&lt;code&gt;DisambiguateRecordFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Подстановочные знаки записи включены расширением языка &lt;a href=&quot;#extension-RecordWildCards&quot;&gt; &lt;code&gt;RecordWildCards&lt;/code&gt; &lt;/a&gt; . Это расширение подразумевает &lt;a href=&quot;#extension-DisambiguateRecordFields&quot;&gt; &lt;code&gt;DisambiguateRecordFields&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51b7886f9c312fb2d10f6b00b8429c797c06be0b" translate="yes" xml:space="preserve">
          <source>Record wildcards are enabled by the language extension &lt;a href=&quot;#extension-RecordWildCards&quot;&gt;&lt;code&gt;RecordWildCards&lt;/code&gt;&lt;/a&gt;. This extension implies &lt;a href=&quot;disambiguate_record_fields#extension-DisambiguateRecordFields&quot;&gt;&lt;code&gt;DisambiguateRecordFields&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1ff47d4cf5dcf2f6329432ce3f29be7e4ab2c66" translate="yes" xml:space="preserve">
          <source>Record wildcards can also be used in an expression, when constructing a record. For example,</source>
          <target state="translated">Символы подстановки записи также могут быть использованы в выражении,при построении записи.Например,</target>
        </trans-unit>
        <trans-unit id="9336bd8c227cff18636f075435644bdb01f6a34f" translate="yes" xml:space="preserve">
          <source>Record wildcards cannot be used (a) in a record update construct, and (b) for data constructors that are not declared with record fields. For example:</source>
          <target state="translated">Символы подстановки записей не могут использоваться (a)в конструкции обновления записей и (b)для конструкторов данных,которые не объявлены с полями записи.Например:</target>
        </trans-unit>
        <trans-unit id="edd96f87f6d5e76d68e7b04dc0fd9a0c6dbb1f87" translate="yes" xml:space="preserve">
          <source>Record wildcards in patterns can be mixed with other patterns, including puns (&lt;a href=&quot;#record-puns&quot;&gt;Record puns&lt;/a&gt;); for example, in a pattern &lt;code&gt;(C {a = 1, b, ..})&lt;/code&gt;. Additionally, record wildcards can be used wherever record patterns occur, including in &lt;code&gt;let&lt;/code&gt; bindings and at the top-level. For example, the top-level binding</source>
          <target state="translated">Подстановочные знаки записи в шаблонах можно смешивать с другими шаблонами, включая каламбуры ( &lt;a href=&quot;#record-puns&quot;&gt;каламбуры записи&lt;/a&gt; ); например, в шаблоне &lt;code&gt;(C {a = 1, b, ..})&lt;/code&gt; . Кроме того, шаблоны записей можно использовать везде, где встречаются шаблоны записей, в том числе в привязках &lt;code&gt;let&lt;/code&gt; и на верхнем уровне. Например, привязка верхнего уровня</target>
        </trans-unit>
        <trans-unit id="4e59830f626e9eac6b4f2ae4ffd66ff9f5a7101e" translate="yes" xml:space="preserve">
          <source>Record wildcards in patterns can be mixed with other patterns, including puns (&lt;a href=&quot;record_puns#record-puns&quot;&gt;Record puns&lt;/a&gt;); for example, in a pattern &lt;code&gt;(C {a = 1, b, ..})&lt;/code&gt;. Additionally, record wildcards can be used wherever record patterns occur, including in &lt;code&gt;let&lt;/code&gt; bindings and at the top-level. For example, the top-level binding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51710a4a1d384e827a832ae47b51f21552a87d3d" translate="yes" xml:space="preserve">
          <source>RecordPuns</source>
          <target state="translated">RecordPuns</target>
        </trans-unit>
        <trans-unit id="97d6c35fb960d0aa87a71bff4ce123711c88fffa" translate="yes" xml:space="preserve">
          <source>RecordWildCards</source>
          <target state="translated">RecordWildCards</target>
        </trans-unit>
        <trans-unit id="2eeb2a517c2c3eb4abfae9862f77f4fe5dd0c9c7" translate="yes" xml:space="preserve">
          <source>Recover from errors raised by &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Восстановление после ошибок, вызванных &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06835f6ffa8f75a6d16c095378a50b93271250de" translate="yes" xml:space="preserve">
          <source>Recover from errors raised by &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3993eeaeb1b4f43c11f70b5bb90f6e3217e9cec2" translate="yes" xml:space="preserve">
          <source>Recover from errors raised by &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704ab362682b8edb6407654f5c2a1ef4eb552a64" translate="yes" xml:space="preserve">
          <source>Recover from errors raised by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Восстановление после ошибок, вызванных &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="187e69e5456f44f8c0de2b946c4b57486a5ee203" translate="yes" xml:space="preserve">
          <source>Recover from errors raised by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0c60d4093f3653563d3c3caf5e5a6e0350c2f0" translate="yes" xml:space="preserve">
          <source>Recover from errors raised by &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reportError&quot;&gt;reportError&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd04839409ff12019afbb419b342d461f21fedc9" translate="yes" xml:space="preserve">
          <source>Recover from the monadic &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Восстановление после монадической &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e963d68387cc97537ce70954f95670ce6ae469b5" translate="yes" xml:space="preserve">
          <source>Recover from the monadic &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbad792f6a59dda9dbad9e9e6399868f5efd9f5" translate="yes" xml:space="preserve">
          <source>Recover from the monadic &lt;code&gt;&lt;a href=&quot;../base-4.15.0.0/control-monad-fail#v:fail&quot;&gt;fail&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c339e2dbf9dd56253cac56b4a41d7147875527a" translate="yes" xml:space="preserve">
          <source>Rectangular form</source>
          <target state="translated">Прямоугольная форма</target>
        </trans-unit>
        <trans-unit id="3f83835e919f45852d22ee0e479c39ce851cbd86" translate="yes" xml:space="preserve">
          <source>Recursive &lt;code&gt;do&lt;/code&gt;-statements (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/1262&quot;&gt;#1262&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716fd56982c99c47413170dcc01f043f0ea5c5dd" translate="yes" xml:space="preserve">
          <source>Recursive &lt;code&gt;do&lt;/code&gt;-statements (see &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/1262&quot;&gt;Issue #1262&lt;/a&gt;)</source>
          <target state="translated">Рекурсивный &lt;code&gt;do&lt;/code&gt; -statements (см &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/1262&quot;&gt;Issue # 1262&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="b15e1ba44a17cfef52a44bd79e78303a225439f1" translate="yes" xml:space="preserve">
          <source>Recursive and corecursive reduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0e843943bdbb03678f7b901c80e258f54ba263" translate="yes" xml:space="preserve">
          <source>Recursive calls of kind &lt;code&gt;* -&amp;gt; *&lt;/code&gt; (or kind &lt;code&gt;k -&amp;gt; *&lt;/code&gt;, when &lt;code&gt;PolyKinds&lt;/code&gt; is enabled)</source>
          <target state="translated">Рекурсивные вызовы вида &lt;code&gt;* -&amp;gt; *&lt;/code&gt; (или вида &lt;code&gt;k -&amp;gt; *&lt;/code&gt; , когда включен &lt;code&gt;PolyKinds&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="54fc751a32ae132cec503b25942dbbe06a266bd1" translate="yes" xml:space="preserve">
          <source>RecursiveDo</source>
          <target state="translated">RecursiveDo</target>
        </trans-unit>
        <trans-unit id="600acab80a2d9688a8eedb28bec5568bfba52d13" translate="yes" xml:space="preserve">
          <source>Recursively add a closure and its transitive closure to a &lt;code&gt;Compact#&lt;/code&gt; (a CNF), evaluating any unevaluated components at the same time. Note: &lt;code&gt;compactAdd#&lt;/code&gt; is not thread-safe, so only one thread may call &lt;code&gt;compactAdd#&lt;/code&gt; with a particular &lt;code&gt;Compact#&lt;/code&gt; at any given time. The primop does not enforce any mutual exclusion; the caller is expected to arrange this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275dacbf9d7809835c038a9a00d1c21a893a8aa0" translate="yes" xml:space="preserve">
          <source>Recursively add a closure and its transitive closure to a &lt;code&gt;Compact#&lt;/code&gt;, evaluating any unevaluated components at the same time. Note: &lt;code&gt;compactAdd#&lt;/code&gt; is not thread-safe, so only one thread may call &lt;code&gt;compactAdd#&lt;/code&gt; with a particular &lt;code&gt;Compact#&lt;/code&gt; at any given time. The primop does not enforce any mutual exclusion; the caller is expected to arrange this.</source>
          <target state="translated">Рекурсивно добавьте замыкание и его транзитивное замыкание в &lt;code&gt;Compact#&lt;/code&gt; , одновременно оценивая все неоцененные компоненты. Примечание: &lt;code&gt;compactAdd#&lt;/code&gt; не является потокобезопасным, поэтому только один поток может вызывать &lt;code&gt;compactAdd#&lt;/code&gt; с конкретным &lt;code&gt;Compact#&lt;/code&gt; в любой момент времени. Примоп не требует взаимного исключения; ожидается, что звонящий это устроит.</target>
        </trans-unit>
        <trans-unit id="9db42c28c37a1bd7dcd5d9a57ba47b3781f19c59" translate="yes" xml:space="preserve">
          <source>Recursively loads the specified ⟨module⟩s, and all the modules they depend on. Here, each ⟨module⟩ must be a module name or filename, but may not be the name of a module in a package.</source>
          <target state="translated">Рекурсивно загружает указанный ⟨module⟩s,и все модули,от которых они зависят.Здесь каждый ⟨module⟩ должен быть именем модуля или именем файла,но не может быть именем модуля в пакете.</target>
        </trans-unit>
        <trans-unit id="cc9db3a795571c7e71f45670a1da7ff49b5f1557" translate="yes" xml:space="preserve">
          <source>Red</source>
          <target state="translated">Red</target>
        </trans-unit>
        <trans-unit id="f35448b6bee96de50ae1e8ff57c24c8d1e0d25df" translate="yes" xml:space="preserve">
          <source>Redirects all dump files into ⟨dir⟩. Dump files are generated when &lt;code&gt;-ddump-to-file&lt;/code&gt; is used with other &lt;code&gt;-ddump-*&lt;/code&gt; flags.</source>
          <target state="translated">Перенаправляет все файлы дампа в &amp;laquo;каталог&amp;raquo;. Файлы дампа создаются, когда &lt;code&gt;-ddump-to-file&lt;/code&gt; используется с другими флагами &lt;code&gt;-ddump-*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="49d50daa2fa81c1efde69dceda6175188c98976f" translate="yes" xml:space="preserve">
          <source>Redirects all generated FFI stub files into ⟨dir⟩. Stub files are generated when the Haskell source contains a &lt;code&gt;foreign export&lt;/code&gt; or &lt;code&gt;foreign import &quot;&amp;amp;wrapper&quot;&lt;/code&gt; declaration (see &lt;a href=&quot;exts/ffi#foreign-export-ghc&quot;&gt;Using foreign export and foreign import ccall &amp;ldquo;wrapper&amp;rdquo; with GHC&lt;/a&gt;). The &lt;code&gt;-stubdir&lt;/code&gt; option behaves in exactly the same way as &lt;code&gt;-odir&lt;/code&gt; and &lt;code&gt;-hidir&lt;/code&gt; with respect to hierarchical modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcee6acb573e513bf54e2fecdf8ac60da3281ec" translate="yes" xml:space="preserve">
          <source>Redirects all generated FFI stub files into ⟨dir⟩. Stub files are generated when the Haskell source contains a &lt;code&gt;foreign export&lt;/code&gt; or &lt;code&gt;foreign import &quot;&amp;amp;wrapper&quot;&lt;/code&gt; declaration (see &lt;a href=&quot;ffi-chap#foreign-export-ghc&quot;&gt;Using foreign export and foreign import ccall &quot;wrapper&quot; with GHC&lt;/a&gt;). The &lt;code&gt;-stubdir&lt;/code&gt; option behaves in exactly the same way as &lt;code&gt;-odir&lt;/code&gt; and &lt;code&gt;-hidir&lt;/code&gt; with respect to hierarchical modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b3350c72033f92144bca80ed9c6189a91698b5" translate="yes" xml:space="preserve">
          <source>Redirects all generated FFI stub files into ⟨dir⟩. Stub files are generated when the Haskell source contains a &lt;code&gt;foreign export&lt;/code&gt; or &lt;code&gt;foreign import &quot;&amp;amp;wrapper&quot;&lt;/code&gt; declaration (see &lt;a href=&quot;ffi-chap#foreign-export-ghc&quot;&gt;Using foreign export and foreign import ccall &amp;ldquo;wrapper&amp;rdquo; with GHC&lt;/a&gt;). The &lt;code&gt;-stubdir&lt;/code&gt; option behaves in exactly the same way as &lt;code&gt;-odir&lt;/code&gt; and &lt;code&gt;-hidir&lt;/code&gt; with respect to hierarchical modules.</source>
          <target state="translated">Перенаправляет все сгенерированные файлы-заглушки FFI в &amp;laquo;каталог&amp;raquo;. Файлы-заглушки генерируются, когда исходный код Haskell содержит объявление &lt;code&gt;foreign import &quot;&amp;amp;wrapper&quot;&lt;/code&gt; &lt;code&gt;foreign export&lt;/code&gt; или внешнего импорта (см. &lt;a href=&quot;ffi-chap#foreign-export-ghc&quot;&gt;Использование внешнего экспорта и внешнего импорта ccall &amp;laquo;wrapper&amp;raquo; с GHC&lt;/a&gt; ). Параметр &lt;code&gt;-stubdir&lt;/code&gt; ведет себя точно так же, как &lt;code&gt;-odir&lt;/code&gt; и &lt;code&gt;-hidir&lt;/code&gt; в отношении иерархических модулей.</target>
        </trans-unit>
        <trans-unit id="3486a9a9a04e6a11f983fe636c723b4aeb99470d" translate="yes" xml:space="preserve">
          <source>Redirects all generated extended interface files into ⟨dir⟩, instead of the default.</source>
          <target state="translated">Переадресует все сгенерированные файлы расширенного интерфейса на ⟨dir⟩,а не на ⟨dir⟩ по умолчанию.</target>
        </trans-unit>
        <trans-unit id="fafb4cb103b058c31d0ca01a68bbcf1d4a74a011" translate="yes" xml:space="preserve">
          <source>Redirects all generated interface files into ⟨dir⟩, instead of the default.</source>
          <target state="translated">Переадресует все сгенерированные файлы интерфейса на ⟨dir⟩,а не на ⟨dir⟩ по умолчанию.</target>
        </trans-unit>
        <trans-unit id="bafa491122d5e3b44d04eabce2ce9d4d9f3fe18e" translate="yes" xml:space="preserve">
          <source>Redirects object files to directory ⟨dir⟩. For example:</source>
          <target state="translated">Перенаправляет объектные файлы в каталог ⟨dir⟩.Например:</target>
        </trans-unit>
        <trans-unit id="c20bb0f7c4d78b01fa838319a2981e9b417f1f05" translate="yes" xml:space="preserve">
          <source>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ec4bae787e02e75ae9439f5fbfc851c887f70f" translate="yes" xml:space="preserve">
          <source>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7338b5245c44e48d0d288fd4ec6f22445873f8e" translate="yes" xml:space="preserve">
          <source>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb62c4540305507d65a57dcc74037f8d6c22e2bf" translate="yes" xml:space="preserve">
          <source>Reduce a non-empty list with &lt;code&gt;&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Уменьшите непустой список с помощью &lt;code&gt;&lt;a href=&quot;data-semigroup#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f669409b9317be7b6c92d9326e3ee545e967f0d9" translate="yes" xml:space="preserve">
          <source>Reduce a non-empty list with &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Уменьшите непустой список с помощью &lt;code&gt;&lt;a href=&quot;ghc-base#v:-60--62-&quot;&gt;&amp;lt;&amp;gt;&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3b0a10cb566308fbe77ba8e40a66aaf874f1d51f" translate="yes" xml:space="preserve">
          <source>Reduce to weak head normal form</source>
          <target state="translated">Снизить до слабой головы нормальную форму</target>
        </trans-unit>
        <trans-unit id="cc4741026efb7365015adcf01e2a9a9c11506ab0" translate="yes" xml:space="preserve">
          <source>Reduces a structure of lists to the concatenation of those lists.</source>
          <target state="translated">Сокращает структуру списков до конкатенирования этих списков.</target>
        </trans-unit>
        <trans-unit id="68e6f6e8e5e68a420b8551a7827770ccd24a99b7" translate="yes" xml:space="preserve">
          <source>Reducing &lt;code&gt;ByteString&lt;/code&gt;s (folds)</source>
          <target state="translated">Уменьшение &lt;code&gt;ByteString&lt;/code&gt; s (сворачивание)</target>
        </trans-unit>
        <trans-unit id="5500c49978ea320adb112aadfa31adc296c7ccd5" translate="yes" xml:space="preserve">
          <source>Reducing lists (folds)</source>
          <target state="translated">Сокращение списков (складок)</target>
        </trans-unit>
        <trans-unit id="2c4aefee968159da773bf3395f055cf516177a64" translate="yes" xml:space="preserve">
          <source>Reexports merge with local declarations; thus, the signature above would successfully merge with:</source>
          <target state="translated">Рекспорт сливается с местными декларациями;таким образом,подпись,приведенная выше,успешно сливается с:</target>
        </trans-unit>
        <trans-unit id="61f40c0f8960f42e3ec5f8930f3610a5c933f4ee" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;generics#generic-programming&quot;&gt;generic programming&lt;/a&gt; section for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93603a5396d363713d725c65e1f3008ad8c1b7a0" translate="yes" xml:space="preserve">
          <source>Refer to the &lt;a href=&quot;glasgow_exts#generic-programming&quot;&gt;generic programming&lt;/a&gt; section for more details.</source>
          <target state="translated">Обратитесь к разделу &lt;a href=&quot;glasgow_exts#generic-programming&quot;&gt;общего программирования&lt;/a&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="008c7de1b7be309f3cfe58bf315edd6c93f49696" translate="yes" xml:space="preserve">
          <source>Refer to the docs of &lt;code&gt;&lt;a href=&quot;system-directory#t:XdgDirectory&quot;&gt;XdgDirectory&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">Обратитесь к документации &lt;code&gt;&lt;a href=&quot;system-directory#t:XdgDirectory&quot;&gt;XdgDirectory&lt;/a&gt;&lt;/code&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="e74b881339b17289107509d95c7d406494002649" translate="yes" xml:space="preserve">
          <source>Refer to the docs of &lt;code&gt;&lt;a href=&quot;system-directory#t:XdgDirectoryList&quot;&gt;XdgDirectoryList&lt;/a&gt;&lt;/code&gt; for more details.</source>
          <target state="translated">Обратитесь к документации &lt;code&gt;&lt;a href=&quot;system-directory#t:XdgDirectoryList&quot;&gt;XdgDirectoryList&lt;/a&gt;&lt;/code&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="2a9435c3cde07529a15a70848b5052f1d7119dcc" translate="yes" xml:space="preserve">
          <source>References (variables) that can be used within the &lt;code&gt;ST&lt;/code&gt; monad are provided by &lt;a href=&quot;data-stref&quot;&gt;Data.STRef&lt;/a&gt;, and arrays are provided by &lt;a href=&quot;https://hackage.haskell.org/package/array/docs/Data-Array-ST.html&quot;&gt;Data.Array.ST&lt;/a&gt;.</source>
          <target state="translated">Ссылки (переменные), которые могут использоваться в монаде &lt;code&gt;ST&lt;/code&gt; , предоставляются &lt;a href=&quot;data-stref&quot;&gt;Data.STRef&lt;/a&gt; , а массивы предоставляются &lt;a href=&quot;https://hackage.haskell.org/package/array/docs/Data-Array-ST.html&quot;&gt;Data.Array.ST&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afaad511a2f264ef617c4bd5e27041cac47430f5" translate="yes" xml:space="preserve">
          <source>References from the finalizer to the key are treated in the same way as references from the value to the key: they do not keep the key alive. A finalizer may therefore ressurrect the key, perhaps by storing it in the same data structure.</source>
          <target state="translated">Ссылки от финализатора на ключ рассматриваются так же,как и ссылки от значения к ключу:они не сохраняют ключ живым.Поэтому финализатор может восстановить ключ,возможно,сохранив его в той же структуре данных.</target>
        </trans-unit>
        <trans-unit id="4ae6b3b0a70dc93123b509716449ade56205cac7" translate="yes" xml:space="preserve">
          <source>References in the &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Ссылки в монаде &lt;code&gt;&lt;a href=&quot;control-monad-st-safe#t:ST&quot;&gt;ST&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de8ec027bf3ad9a65f5743cae14aaade0d944700" translate="yes" xml:space="preserve">
          <source>References to values are usually implemented with memory addresses, and this is practical when communicating values between the different pieces of a single process.</source>
          <target state="translated">Ссылки на значения обычно реализуются с адресами памяти,и это практично при обмене значениями между различными частями одного процесса.</target>
        </trans-unit>
        <trans-unit id="9d1e4e7d27b519b1da3d7266c9c87d7861741080" translate="yes" xml:space="preserve">
          <source>References:</source>
          <target state="translated">References:</target>
        </trans-unit>
        <trans-unit id="18431dfb97e878f723ad36ab7a585ebcaa439ca3" translate="yes" xml:space="preserve">
          <source>References: [1] &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;Naming Files, Paths and Namespaces&lt;/a&gt; (Microsoft MSDN)</source>
          <target state="translated">Ссылки: [1] &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;Именование файлов, путей и пространств имен&lt;/a&gt; (Microsoft MSDN)</target>
        </trans-unit>
        <trans-unit id="26eccbf3f74efd5f0bd2a16138095ccdc901cf8a" translate="yes" xml:space="preserve">
          <source>References: [1] &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa365247.aspx&quot;&gt;Naming Files, Paths and Namespaces&lt;/a&gt; (Microsoft MSDN)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb5899faa8ef7c91fc46b8894514eaafdacffd2" translate="yes" xml:space="preserve">
          <source>References: [1] The Essence of the Iterator Pattern, Jeremy Gibbons and Bruno C. d. S. Oliveira</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf39b7c2c01888d0a805f728bbe9717c8be184e4" translate="yes" xml:space="preserve">
          <source>Reflexivity</source>
          <target state="translated">Reflexivity</target>
        </trans-unit>
        <trans-unit id="eff69fc2ab27da19596fea2f941b65a40788e4cc" translate="yes" xml:space="preserve">
          <source>RegInfoKey</source>
          <target state="translated">RegInfoKey</target>
        </trans-unit>
        <trans-unit id="1921671fa378a21fecd5903582dca373a968309c" translate="yes" xml:space="preserve">
          <source>Regard &lt;code&gt;⟨file⟩&lt;/code&gt; as &quot;stable&quot;; i.e., exclude it from having dependencies on it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d04efb9a6f71bcdf9b0e41c63b9b9158d592af" translate="yes" xml:space="preserve">
          <source>Regard &lt;code&gt;⟨file⟩&lt;/code&gt; as &amp;ldquo;stable&amp;rdquo;; i.e., exclude it from having dependencies on it.</source>
          <target state="translated">Рассматривать &lt;code&gt;⟨file⟩&lt;/code&gt; как &amp;laquo;стабильный&amp;raquo;; т.е. исключить его из зависимостей.</target>
        </trans-unit>
        <trans-unit id="0862e2ed7b6d956e6625b587fceb18c941739a9d" translate="yes" xml:space="preserve">
          <source>Regard modules imported from packages as unstable</source>
          <target state="translated">Считать модули,импортированные из пакетов,нестабильными</target>
        </trans-unit>
        <trans-unit id="019202863ab0d69f33936ecc2a2b973d9fe8bc76" translate="yes" xml:space="preserve">
          <source>Regard modules imported from packages as unstable, i.e., generate dependencies on any imported package modules (including &lt;code&gt;Prelude&lt;/code&gt;, and all other standard Haskell libraries). Dependencies are not traced recursively into packages; dependencies are only generated for home-package modules on external-package modules directly imported by the home package module. This option is normally only used by the various system libraries.</source>
          <target state="translated">Считайте модули, импортированные из пакетов, нестабильными, т. Е. Генерирующими зависимости от любых импортированных модулей пакета (включая &lt;code&gt;Prelude&lt;/code&gt; и все другие стандартные библиотеки Haskell). Зависимости не отслеживаются рекурсивно в пакеты; зависимости создаются только для модулей домашнего пакета на модулях внешнего пакета, напрямую импортированных модулем домашнего пакета. Эта опция обычно используется только различными системными библиотеками.</target>
        </trans-unit>
        <trans-unit id="7c8723345072b355716dc59e64fea77c552c234c" translate="yes" xml:space="preserve">
          <source>Regardless of &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt;, instance declarations must conform to some rules that ensure that instance resolution will terminate. The restrictions can be lifted with &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt;&lt;code&gt;UndecidableInstances&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;#undecidable-instances&quot;&gt;Undecidable instances&lt;/a&gt;).</source>
          <target state="translated">Независимо от &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt; &lt;code&gt;FlexibleInstances&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;#extension-FlexibleContexts&quot;&gt; &lt;code&gt;FlexibleContexts&lt;/code&gt; &lt;/a&gt; , объявления экземпляров должны соответствовать некоторым правилам, обеспечивающим прекращение разрешения экземпляра. Ограничения можно снять с помощью &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt; &lt;code&gt;UndecidableInstances&lt;/code&gt; &lt;/a&gt; (см. &lt;a href=&quot;#undecidable-instances&quot;&gt;UndecidableInstances&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="291882f3969512ea29f27bf1126df1f14e229a1f" translate="yes" xml:space="preserve">
          <source>Regardless of &lt;a href=&quot;#extension-FlexibleInstances&quot;&gt;&lt;code&gt;FlexibleInstances&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;flexible_contexts#extension-FlexibleContexts&quot;&gt;&lt;code&gt;FlexibleContexts&lt;/code&gt;&lt;/a&gt;, instance declarations must conform to some rules that ensure that instance resolution will terminate. The restrictions can be lifted with &lt;a href=&quot;#extension-UndecidableInstances&quot;&gt;&lt;code&gt;UndecidableInstances&lt;/code&gt;&lt;/a&gt; (see &lt;a href=&quot;#undecidable-instances&quot;&gt;Undecidable instances&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7189eefa1e3c6484fdace23f3d98f24bbfcd39e2" translate="yes" xml:space="preserve">
          <source>Register a timeout in the given number of microseconds. The returned &lt;code&gt;&lt;a href=&quot;ghc-event#t:TimeoutKey&quot;&gt;TimeoutKey&lt;/a&gt;&lt;/code&gt; can be used to later unregister or update the timeout. The timeout is automatically unregistered after the given time has passed.</source>
          <target state="translated">Зарегистрируйте тайм-аут в указанном количестве микросекунд. Возвращенный &lt;code&gt;&lt;a href=&quot;ghc-event#t:TimeoutKey&quot;&gt;TimeoutKey&lt;/a&gt;&lt;/code&gt; может быть использован для последующего UNREGISTER или обновить тайм - аут. Тайм-аут автоматически отменяется по истечении заданного времени.</target>
        </trans-unit>
        <trans-unit id="ed9c07ccabe87a6a9007fc8cf055b8d53c52c17d" translate="yes" xml:space="preserve">
          <source>Registering interest in I/O events</source>
          <target state="translated">Регистрация интереса к событиям ввода/вывода</target>
        </trans-unit>
        <trans-unit id="54bddb98d2f657e2c79f06e4e172971579927de0" translate="yes" xml:space="preserve">
          <source>Registering interest in timeout events</source>
          <target state="translated">Регистрация интереса к тайм-аутам</target>
        </trans-unit>
        <trans-unit id="adf918739536fb0b0aeadbe1e82a7486651388cb" translate="yes" xml:space="preserve">
          <source>RegularFile</source>
          <target state="translated">RegularFile</target>
        </trans-unit>
        <trans-unit id="edc7ba7cf8b346f1f896a17a01f9d5133beec7fc" translate="yes" xml:space="preserve">
          <source>Reification always returns a pattern synonym's &lt;em&gt;fully&lt;/em&gt; specified type in abstract syntax.</source>
          <target state="translated">Reification всегда возвращает &lt;em&gt;полностью&lt;/em&gt; указанный тип синонима шаблона в абстрактном синтаксисе.</target>
        </trans-unit>
        <trans-unit id="5bf8562f4d732fe1a6c21b59731f146166f9ff53" translate="yes" xml:space="preserve">
          <source>Reify</source>
          <target state="translated">Reify</target>
        </trans-unit>
        <trans-unit id="160ccd8e3e0272de9fda8f66a106738c34da1113" translate="yes" xml:space="preserve">
          <source>Relate the keys of one map to the values of the other, by using the values of the former as keys for lookups in the latter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f962ad51f159e8557fb498cb39e85f2ac566701" translate="yes" xml:space="preserve">
          <source>Related utilities</source>
          <target state="translated">Сопутствующие утилиты</target>
        </trans-unit>
        <trans-unit id="73f01ad7eb3510ed60e70d9f2520b22efaee1381" translate="yes" xml:space="preserve">
          <source>Relative cursor movements</source>
          <target state="translated">относительные движения курсора</target>
        </trans-unit>
        <trans-unit id="1c57e196778cc938a34ed9979a01ca63f8bc5b5a" translate="yes" xml:space="preserve">
          <source>RelativeSeek</source>
          <target state="translated">RelativeSeek</target>
        </trans-unit>
        <trans-unit id="922f646acf7186971e6f5ad3405009de06151459" translate="yes" xml:space="preserve">
          <source>Relax many of the Haskell 98 rules on type synonym definitions.</source>
          <target state="translated">Расслабьтесь многие из правил Хаскелла 98 по определению синонимов типов.</target>
        </trans-unit>
        <trans-unit id="c6448e9010ce738714d5f43f5ecfb4be301d62a4" translate="yes" xml:space="preserve">
          <source>Relax restrictions on the decidability of type synonym family instances.</source>
          <target state="translated">Снять ограничения на разрешаемость экземпляров семейства синонимов типов.</target>
        </trans-unit>
        <trans-unit id="e90a12b3f26debfd7118805fe63817f39ff4e8fd" translate="yes" xml:space="preserve">
          <source>RelaxedLayout</source>
          <target state="translated">RelaxedLayout</target>
        </trans-unit>
        <trans-unit id="9844dfcb0240e7df480fd384606acd4ece12f354" translate="yes" xml:space="preserve">
          <source>RelaxedPolyRec</source>
          <target state="translated">RelaxedPolyRec</target>
        </trans-unit>
        <trans-unit id="c5033c11bde2f550a77d7d9e2a73f78a23e0b707" translate="yes" xml:space="preserve">
          <source>Release &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt;s</source>
          <target state="translated">Выпуск &lt;code&gt;&lt;a href=&quot;ghci-remotetypes#t:HValueRef&quot;&gt;HValueRef&lt;/a&gt;&lt;/code&gt; s</target>
        </trans-unit>
        <trans-unit id="0eab4b131f1b19fe164b700fad7f1ab96e1f803d" translate="yes" xml:space="preserve">
          <source>Release a lock taken with &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hLock&quot;&gt;hLock&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hTryLock&quot;&gt;hTryLock&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Снимите блокировку, взятую с помощью &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hLock&quot;&gt;hLock&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;ghc-io-handle-lock#v:hTryLock&quot;&gt;hTryLock&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ebb203461a0aa4dd07920b5d21f54c9db54c7ae" translate="yes" xml:space="preserve">
          <source>Release an HValueRef that originated in this process</source>
          <target state="translated">Выпустите HValueRef,который появился в этом процессе.</target>
        </trans-unit>
        <trans-unit id="a6d0a27c957a07066e9e8f08e838df96108bbbc5" translate="yes" xml:space="preserve">
          <source>Release the storage associated with the given &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:FunPtr&quot;&gt;FunPtr&lt;/a&gt;&lt;/code&gt;, which must have been obtained from a wrapper stub. This should be called whenever the return value from a foreign import wrapper function is no longer required; otherwise, the storage it uses will leak.</source>
          <target state="translated">Освободите хранилище, связанное с данным &lt;code&gt;&lt;a href=&quot;foreign-ptr#t:FunPtr&quot;&gt;FunPtr&lt;/a&gt;&lt;/code&gt; , которое должно быть получено из заглушки оболочки. Его следует вызывать всякий раз, когда возвращаемое значение из внешней функции-оболочки импорта больше не требуется; в противном случае будет происходить утечка используемого хранилища.</target>
        </trans-unit>
        <trans-unit id="d47a9e9056df774e5b6b3ffa7eaf1216310e0274" translate="yes" xml:space="preserve">
          <source>Remember, a top-level splice still requires its argument to be of type &lt;code&gt;Q Exp&lt;/code&gt;. So then splicing in &lt;code&gt;g&lt;/code&gt; will cause &lt;code&gt;m&lt;/code&gt; to be instantiated to &lt;code&gt;Q&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c43bb248aeb7b0967ec7b99ac7ca9c40c0839b9" translate="yes" xml:space="preserve">
          <source>Remote GHCi message types and serialization.</source>
          <target state="translated">Удаленные типы GHCi-сообщений и сериализация.</target>
        </trans-unit>
        <trans-unit id="2d1f5938098d57afebae29c3469844d3f945ff39" translate="yes" xml:space="preserve">
          <source>Remote interface to GHC.Exts.Heap.getClosureData. This is used by the GHCi debugger to inspect values in the heap for :print and type reconstruction.</source>
          <target state="translated">Удаленный интерфейс к GHC.Exts.Heap.getClosureData.Он используется отладчиком GHCi для проверки значений в куче для :печати и восстановления типов.</target>
        </trans-unit>
        <trans-unit id="0cd648c6ca3fe3114aa1f6f720f459d7276ee033" translate="yes" xml:space="preserve">
          <source>RemotePtr</source>
          <target state="translated">RemotePtr</target>
        </trans-unit>
        <trans-unit id="187a245e1a8b6a27415032217dc5a06a99cd68c0" translate="yes" xml:space="preserve">
          <source>RemoteRef</source>
          <target state="translated">RemoteRef</target>
        </trans-unit>
        <trans-unit id="85785f66358814b69df1c70621bcdd7e763d273b" translate="yes" xml:space="preserve">
          <source>Remove an existing &lt;em&gt;directory&lt;/em&gt; symbolic link.</source>
          <target state="translated">Удалить существующую символическую ссылку на &lt;em&gt;каталог&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0673999ce87506fb5cef09cfbc8dadd5f55cc367" translate="yes" xml:space="preserve">
          <source>Remove any trailing path separators</source>
          <target state="translated">Удалить все разделители траектории движения</target>
        </trans-unit>
        <trans-unit id="8beb6c3c391ddccec77b63bbbde93caf11d17ff0" translate="yes" xml:space="preserve">
          <source>Remove last extension, and the &quot;.&quot; preceding it.</source>
          <target state="translated">Удалите последнее расширение и &quot;...&quot;,предшествующее ему.</target>
        </trans-unit>
        <trans-unit id="5357b545b76e6fcea3a96191bc862d1d328c2526" translate="yes" xml:space="preserve">
          <source>Remove leading and trailing white space from a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c187b401a36b809081bde68b4c2aea820fadae" translate="yes" xml:space="preserve">
          <source>Remove redundant trailing slashes and pick the right kind of slash.</source>
          <target state="translated">Удалите лишние трейлеры и выберите правильный тип трейлера.</target>
        </trans-unit>
        <trans-unit id="c9e36bf68473eb7f3968e4856066a37060f5834e" translate="yes" xml:space="preserve">
          <source>Remove the current extension and add another, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Удалите текущее расширение и добавьте другое, эквивалентное &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eec592bd28fecce5e8f5d2be48f7668f7794a216" translate="yes" xml:space="preserve">
          <source>Remove the current extension and add another, equivalent to &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Удалите текущее расширение и добавьте другое, эквивалентное &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:replaceExtension&quot;&gt;replaceExtension&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="17578b00b37aed0982773868dca74948f1bfdae5" translate="yes" xml:space="preserve">
          <source>Remove the global package database from the package database stack.</source>
          <target state="translated">Удалить глобальную базу данных пакетов из стека базы данных пакетов.</target>
        </trans-unit>
        <trans-unit id="7bd9c8003f540a0748e2a3ac9a5b859dc7cdda77" translate="yes" xml:space="preserve">
          <source>Remove the global package db from the stack.</source>
          <target state="translated">Удалить из стека глобальный пакет db.</target>
        </trans-unit>
        <trans-unit id="f10c6fc20b38689163ee373e60892416930fb37e" translate="yes" xml:space="preserve">
          <source>Remove the specified package from the database.</source>
          <target state="translated">Удалить указанный пакет из базы данных.</target>
        </trans-unit>
        <trans-unit id="11145f3391ca6d052a2bbe930ffcdde0a5e0e622" translate="yes" xml:space="preserve">
          <source>Remove the user&amp;rsquo;s package db from the stack.</source>
          <target state="translated">Удалите из стека пакет пользователя db.</target>
        </trans-unit>
        <trans-unit id="4cfc9b66e86496c9a43261651fd6bc11bc6aba2f" translate="yes" xml:space="preserve">
          <source>Remove the user's package db from the stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75a1d14db76bff13b9d83408f48419f4032867f1" translate="yes" xml:space="preserve">
          <source>Removes a file or directory at &lt;em&gt;path&lt;/em&gt; together with its contents and subdirectories. Symbolic links are removed without affecting their targets. If the path does not exist, nothing happens.</source>
          <target state="translated">Удаляет файл или каталог по &lt;em&gt;пути&lt;/em&gt; вместе с его содержимым и подкаталогами. Символические ссылки удаляются, не влияя на их цели. Если путь не существует, ничего не происходит.</target>
        </trans-unit>
        <trans-unit id="dddbede7e13f9ce87fd5bc843c1cc2df052efa66" translate="yes" xml:space="preserve">
          <source>Rename a file or directory. If the destination path already exists, it is replaced atomically. The destination path must not point to an existing directory. A conformant implementation need not support renaming files in all situations (e.g. renaming across different physical devices), but the constraints must be documented.</source>
          <target state="translated">Переименовать файл или каталог.Если путь назначения уже существует,он заменяется атоматически.Путь назначения не должен указывать на существующую директорию.Соответствующая реализация не обязательно должна поддерживать переименование файлов во всех ситуациях (например,переименование на различных физических устройствах),но ограничения должны быть документированы.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
