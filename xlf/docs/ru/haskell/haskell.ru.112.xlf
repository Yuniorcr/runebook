<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="haskell">
    <body>
      <group id="haskell">
        <trans-unit id="2b175850b2b4c7b73920a2bd09ee395823dfe991" translate="yes" xml:space="preserve">
          <source>O(n+m). Difference between two sets.</source>
          <target state="translated">O(n+m).Разница между двумя сетами.</target>
        </trans-unit>
        <trans-unit id="642024d6eebec205fb5e23871df26affc526f51e" translate="yes" xml:space="preserve">
          <source>O(n+m). Difference with a combining function.</source>
          <target state="translated">O(n+m).Различие с комбинированной функцией.</target>
        </trans-unit>
        <trans-unit id="e82cae1cbcc151c7d43da06a29f3d4c4dd638d8d" translate="yes" xml:space="preserve">
          <source>O(n+m). Difference with a combining function. When two equal keys are encountered, the combining function is applied to the key and both values. If it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, the element is discarded (proper set difference). If it returns (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; y&lt;/code&gt;), the element is updated with a new value &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">O (N + M). Разница с функцией комбинирования. Когда встречаются два одинаковых ключа, функция комбинирования применяется к ключу и обоим значениям. Если он возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , элемент отбрасывается (правильная разница в наборе). Если он возвращает ( &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; y&lt;/code&gt; ), элемент обновляется с новым значением &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d78a59691af3a1f463fcc648f48e7aa9af5140a2" translate="yes" xml:space="preserve">
          <source>O(n+m). Difference with a combining function. When two equal keys are encountered, the combining function is applied to the key and both values. If it returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, the element is discarded (proper set difference). If it returns (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; y&lt;/code&gt;), the element is updated with a new value &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a8defb5abb9dc37227acdef0ddf8e9086576b96" translate="yes" xml:space="preserve">
          <source>O(n+m). Difference with a combining function. When two equal keys are encountered, the combining function is applied to the values of these keys. If it returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, the element is discarded (proper set difference). If it returns (&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; y&lt;/code&gt;), the element is updated with a new value &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">O (N + M). Разница с функцией комбинирования. Когда встречаются два одинаковых ключа, к значениям этих ключей применяется функция объединения. Если он возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , элемент отбрасывается (правильная разница в наборе). Если он возвращает ( &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; y&lt;/code&gt; ), элемент обновляется с новым значением &lt;code&gt;y&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b9232eb6da84be956de3d86b2f9a3596b670d07" translate="yes" xml:space="preserve">
          <source>O(n+m). Difference with a combining function. When two equal keys are encountered, the combining function is applied to the values of these keys. If it returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt;, the element is discarded (proper set difference). If it returns (&lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Just&quot;&gt;Just&lt;/a&gt; y&lt;/code&gt;), the element is updated with a new value &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1893b5539e545690e9ffd683494151968ad95c91" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). Defined as (&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isProperSubmapOf&quot;&gt;isProperSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-lazy#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt;).</source>
          <target state="translated">O (N + M). Это правильная подкарта? (т.е. подкарту, но не равно). Определено как ( &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isProperSubmapOf&quot;&gt;isProperSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-lazy#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d0bcad9d148cb43a988e5d81559c7f98bfd4f571" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). Defined as (&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isProperSubmapOf&quot;&gt;isProperSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-strict#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt;).</source>
          <target state="translated">O (N + M). Это правильная подкарта? (т.е. подкарту, но не равно). Определено как ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isProperSubmapOf&quot;&gt;isProperSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-strict#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="259d7f16c8ef5c42b712b6bd1b6d835707d3fc6f" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). Defined as (&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isProperSubmapOf&quot;&gt;isProperSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-strict-internal#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt;).</source>
          <target state="translated">O (N + M). Это правильная подкарта? (т.е. подкарту, но не равно). Определено как ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isProperSubmapOf&quot;&gt;isProperSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-strict-internal#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="fa500881115a261c32e171d67351b5d2ec39a167" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when &lt;code&gt;m1&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; are not equal, all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">O (N + M). Это правильная подкарта? (т.е. подкарту, но не равно). Выражение ( &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt; ) возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , когда &lt;code&gt;m1&lt;/code&gt; и &lt;code&gt;m2&lt;/code&gt; не равны, все ключи в &lt;code&gt;m1&lt;/code&gt; находятся в &lt;code&gt;m2&lt;/code&gt; , а когда &lt;code&gt;f&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; при применении к их соответствующим значениям. Например, все следующие выражения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="086a4885e056a23c714c075d705073db4b763166" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when &lt;code&gt;m1&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; are not equal, all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f52f4b27c74c68545875153116cd3df8e8618e" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when &lt;code&gt;m1&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; are not equal, all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">O (N + M). Это правильная подкарта? (т.е. подкарту, но не равно). Выражение ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt; ) возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , когда &lt;code&gt;m1&lt;/code&gt; и &lt;code&gt;m2&lt;/code&gt; не равны, все ключи в &lt;code&gt;m1&lt;/code&gt; находятся в &lt;code&gt;m2&lt;/code&gt; , а когда &lt;code&gt;f&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; при применении к их соответствующим значениям. Например, все следующие выражения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="15f91d0ab0f998067f2adeb93623344211d85bda" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when &lt;code&gt;m1&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; are not equal, all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36e66134f49baa74c16748aa4fb1bc2f1b590a7" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when &lt;code&gt;m1&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; are not equal, all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">O (N + M). Это правильная подкарта? (т.е. подкарту, но не равно). Выражение ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt; ) возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , когда &lt;code&gt;m1&lt;/code&gt; и &lt;code&gt;m2&lt;/code&gt; не равны, все ключи в &lt;code&gt;m1&lt;/code&gt; находятся в &lt;code&gt;m2&lt;/code&gt; , а когда &lt;code&gt;f&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; при применении к их соответствующим значениям. Например, все следующие выражения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e04f7f18a1ae2e5b701ed54d8ae7d55bbc518436" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper submap? (ie. a submap but not equal). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isProperSubmapOfBy&quot;&gt;isProperSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when &lt;code&gt;m1&lt;/code&gt; and &lt;code&gt;m2&lt;/code&gt; are not equal, all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a631953f81d0e447c8fdc69cf069142667e281d" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a proper subset? (ie. a subset but not equal).</source>
          <target state="translated">O(n+m).Это подходящее подмножество? (т.е.подмножество,но не равное).</target>
        </trans-unit>
        <trans-unit id="eebc330ada31dc89576a052f1291e0814e19b344" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a submap? Defined as (&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isSubmapOf&quot;&gt;isSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-lazy#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt;).</source>
          <target state="translated">O (N + M). Это подкарта? Определяется как ( &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isSubmapOf&quot;&gt;isSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-lazy#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="77cf7a69469399af955924e2279784b9e2604e7f" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a submap? Defined as (&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isSubmapOf&quot;&gt;isSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-strict#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt;).</source>
          <target state="translated">O (N + M). Это подкарта? Определяется как ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isSubmapOf&quot;&gt;isSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-strict#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4431560a42f73900705f2d8f975011e0f9131735" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a submap? Defined as (&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isSubmapOf&quot;&gt;isSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-strict-internal#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt;).</source>
          <target state="translated">O (N + M). Это подкарта? Определяется как ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isSubmapOf&quot;&gt;isSubmapOf&lt;/a&gt; = &lt;a href=&quot;data-intmap-strict-internal#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; (==)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="95f1327cbb34c7f0d462f61ec2eb2bdb693eb58b" translate="yes" xml:space="preserve">
          <source>O(n+m). Is this a subset? &lt;code&gt;(s1 `isSubsetOf` s2)&lt;/code&gt; tells whether &lt;code&gt;s1&lt;/code&gt; is a subset of &lt;code&gt;s2&lt;/code&gt;.</source>
          <target state="translated">O (N + M). Это подмножество? &lt;code&gt;(s1 `isSubsetOf` s2)&lt;/code&gt; сообщает, является ли &lt;code&gt;s1&lt;/code&gt; подмножеством &lt;code&gt;s2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="853dab43bcbe16991732c6d4b28495ea5732e019" translate="yes" xml:space="preserve">
          <source>O(n+m). Remove all the keys in a given set from a map.</source>
          <target state="translated">O(n+m).Удалить все ключи данного набора с карты.</target>
        </trans-unit>
        <trans-unit id="c1b95d70a81d94d1b2f2943a9a8a879ae12ca499" translate="yes" xml:space="preserve">
          <source>O(n+m). See &lt;code&gt;&lt;a href=&quot;data-intset#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">O (N + M). Увидеть &lt;code&gt;&lt;a href=&quot;data-intset#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c0c033e78b5f044fb2891d9b4979b5fb0a3e771" translate="yes" xml:space="preserve">
          <source>O(n+m). See &lt;code&gt;&lt;a href=&quot;data-intset-internal#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">O (N + M). Увидеть &lt;code&gt;&lt;a href=&quot;data-intset-internal#v:difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aabc7bfe4185073a15a5de307d4e92518cd380a6" translate="yes" xml:space="preserve">
          <source>O(n+m). The (left-biased) intersection of two maps (based on keys).</source>
          <target state="translated">O(n+m).(левостороннее)пересечение двух карт (на основе клавиш).</target>
        </trans-unit>
        <trans-unit id="06961d5d1ab5fa2c8570a9d85046d4a05dc7eb63" translate="yes" xml:space="preserve">
          <source>O(n+m). The (left-biased) union of two maps. It prefers the first map when duplicate keys are encountered, i.e. (&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">O (N + M). (Смещенное влево) объединение двух карт. Он предпочитает первую карту, когда встречаются повторяющиеся ключи, то есть ( &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c8af9eb1020703ed741e76dfbd54678ef12ddfe5" translate="yes" xml:space="preserve">
          <source>O(n+m). The (left-biased) union of two maps. It prefers the first map when duplicate keys are encountered, i.e. (&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.14.1.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafc90ea33c8a530d3beef31c5367384af63f7c0" translate="yes" xml:space="preserve">
          <source>O(n+m). The (left-biased) union of two maps. It prefers the first map when duplicate keys are encountered, i.e. (&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">O (N + M). (Смещенное влево) объединение двух карт. Он предпочитает первую карту, когда встречаются повторяющиеся ключи, то есть ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="06cca18a9ea62d448cb2ae8ce6046a32a6eeb7e5" translate="yes" xml:space="preserve">
          <source>O(n+m). The (left-biased) union of two maps. It prefers the first map when duplicate keys are encountered, i.e. (&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.14.1.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ad0a244b4a8b2f49ef3d414deb4d187f9a6cc2" translate="yes" xml:space="preserve">
          <source>O(n+m). The (left-biased) union of two maps. It prefers the first map when duplicate keys are encountered, i.e. (&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">O (N + M). (Смещенное влево) объединение двух карт. Он предпочитает первую карту, когда встречаются повторяющиеся ключи, то есть ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.13.0.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="31e89469c4001a829fde3233e342d7e9eec1929b" translate="yes" xml:space="preserve">
          <source>O(n+m). The (left-biased) union of two maps. It prefers the first map when duplicate keys are encountered, i.e. (&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:union&quot;&gt;union&lt;/a&gt; == &lt;a href=&quot;data-intmap-lazy#v:unionWith&quot;&gt;unionWith&lt;/a&gt; &lt;a href=&quot;../base-4.14.1.0/data-function#v:const&quot;&gt;const&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2918486dc9d1b3d88c95caecdcf91f0062806a" translate="yes" xml:space="preserve">
          <source>O(n+m). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">O (N + M). Выражение ( &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt; ) возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если все ключи в &lt;code&gt;m1&lt;/code&gt; находятся в &lt;code&gt;m2&lt;/code&gt; , и когда &lt;code&gt;f&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; при применении к их соответствующим значениям. Например, все следующие выражения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0a51544441efda5b774bf5ba7135522fa07aeb34" translate="yes" xml:space="preserve">
          <source>O(n+m). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c682f84ef41f26c41a860753eec9a7c1df03b072" translate="yes" xml:space="preserve">
          <source>O(n+m). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">O (N + M). Выражение ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt; ) возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если все ключи в &lt;code&gt;m1&lt;/code&gt; находятся в &lt;code&gt;m2&lt;/code&gt; , и когда &lt;code&gt;f&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; при применении к их соответствующим значениям. Например, все следующие выражения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d46f07e5f2d5ba28c84ab4450e5f9330078bcc3c" translate="yes" xml:space="preserve">
          <source>O(n+m). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28c133c2820ef14ec3aca95b5da1617ff047b0eb" translate="yes" xml:space="preserve">
          <source>O(n+m). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">O (N + M). Выражение ( &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt; ) возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , если все ключи в &lt;code&gt;m1&lt;/code&gt; находятся в &lt;code&gt;m2&lt;/code&gt; , и когда &lt;code&gt;f&lt;/code&gt; возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; при применении к их соответствующим значениям. Например, все следующие выражения &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3c133848b5c3643fa590368299465506d198f3bc" translate="yes" xml:space="preserve">
          <source>O(n+m). The expression (&lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:isSubmapOfBy&quot;&gt;isSubmapOfBy&lt;/a&gt; f m1 m2&lt;/code&gt;) returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; if all keys in &lt;code&gt;m1&lt;/code&gt; are in &lt;code&gt;m2&lt;/code&gt;, and when &lt;code&gt;f&lt;/code&gt; returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; when applied to their respective values. For example, the following expressions are all &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f82649fd48787dfa3f6fb48e8009b24ac636f79" translate="yes" xml:space="preserve">
          <source>O(n+m). The intersection of two sets.</source>
          <target state="translated">O(n+m).Пересечение двух множеств.</target>
        </trans-unit>
        <trans-unit id="9cc718bb4770b7a90006261329b003135139c8ad" translate="yes" xml:space="preserve">
          <source>O(n+m). The intersection with a combining function.</source>
          <target state="translated">O(n+m).Пересечение с комбинированной функцией.</target>
        </trans-unit>
        <trans-unit id="890f8c2b1acfa581b0c7f7e114b78e7d23366ee0" translate="yes" xml:space="preserve">
          <source>O(n+m). The restriction of a map to the keys in a set.</source>
          <target state="translated">O(n+m).Ограничение карты ключами в наборе.</target>
        </trans-unit>
        <trans-unit id="5016a3d0debf2b50c789dd9e1a7b6671faab6a15" translate="yes" xml:space="preserve">
          <source>O(n+m). The union of two sets.</source>
          <target state="translated">O(n+m).Объединение двух наборов.</target>
        </trans-unit>
        <trans-unit id="fd2cc7317cafb69298079beaf97e19917cd839b3" translate="yes" xml:space="preserve">
          <source>O(n+m). The union with a combining function.</source>
          <target state="translated">O(n+m).Объединение с комбинированной функцией.</target>
        </trans-unit>
        <trans-unit id="7d7e0023469558d3f70102c921ee4c3a9e3395fd" translate="yes" xml:space="preserve">
          <source>O(n/c) Append a byte to the end of a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">O (n / c) Добавить байт в конец &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6cc37b0e22800234ef3f07b1490484598d0573ab" translate="yes" xml:space="preserve">
          <source>O(n/c) Append two ByteStrings</source>
          <target state="translated">O(n/c)Добавить два ByteStrings</target>
        </trans-unit>
        <trans-unit id="2d16b77d7608c5b05bf8bdfa8224cce8737fe128" translate="yes" xml:space="preserve">
          <source>O(n/c) Appends one &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; to another. Subject to fusion.</source>
          <target state="translated">O (n / c) Добавляет один &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; к другому. При условии слияния.</target>
        </trans-unit>
        <trans-unit id="83e9729beee8e50770bb2d1f1ad5ed715db824b2" translate="yes" xml:space="preserve">
          <source>O(n/c) Extract the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; of a ByteString, returning Nothing if it is empty.</source>
          <target state="translated">O (n / c) Извлечь &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; строку ByteString, возвращая Nothing, если она пуста.</target>
        </trans-unit>
        <trans-unit id="8d9647ec0d877c0b2b247e8f277a0813bb9fa700" translate="yes" xml:space="preserve">
          <source>O(n/c) Extract the &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; of a ByteString, returning Nothing if it is empty.</source>
          <target state="translated">O (n / c) Извлечь &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; строку ByteString, возвращая Nothing, если она пуста.</target>
        </trans-unit>
        <trans-unit id="9b60c39448cd17dc08f0f768a3a97ebd3de0381d" translate="yes" xml:space="preserve">
          <source>O(n/c) Extract the last element of a ByteString, which must be finite and non-empty.</source>
          <target state="translated">O(n/c)Извлекает последний элемент ByteString,который должен быть конечным и непустым.</target>
        </trans-unit>
        <trans-unit id="37b6278fe47a64e98a0bf8147cadf1bb592f7472" translate="yes" xml:space="preserve">
          <source>O(n/c) Return all the elements of a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; except the last one.</source>
          <target state="translated">O (n / c) Возвращает все элементы &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; , кроме последнего.</target>
        </trans-unit>
        <trans-unit id="6a2b4a041ecc6ab0616448e8c20b0c5a37880038" translate="yes" xml:space="preserve">
          <source>O(n/c) Return all the elements of a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; except the last one.</source>
          <target state="translated">O (n / c) Возвращает все элементы &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; , кроме последнего.</target>
        </trans-unit>
        <trans-unit id="0e3ad70873ec194a1a39a69714dd21042af5e5ad" translate="yes" xml:space="preserve">
          <source>O(n/c) Returns all but the last character of a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;, which must be non-empty. Subject to fusion.</source>
          <target state="translated">O (n / c) Возвращает все символы &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; , кроме последнего , который не должен быть пустым. При условии слияния.</target>
        </trans-unit>
        <trans-unit id="27f439a72af29ea013e45190eb466312a751e58a" translate="yes" xml:space="preserve">
          <source>O(n/c) Returns the &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; of a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if empty.</source>
          <target state="translated">O (п / с) Возвращает &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; , или &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; , если пусто.</target>
        </trans-unit>
        <trans-unit id="1a9291bf9c091b55b1328473e44f843705375f3a" translate="yes" xml:space="preserve">
          <source>O(n/c) Returns the &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:init&quot;&gt;init&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-text-lazy#v:last&quot;&gt;last&lt;/a&gt;&lt;/code&gt; of a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-maybe#v:Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/code&gt; if empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e459c0133a7fa1d77589eafc5ac9befb3f26dfe" translate="yes" xml:space="preserve">
          <source>O(n/c) Returns the last character of a &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt;, which must be non-empty. Subject to fusion.</source>
          <target state="translated">O (n / c) Возвращает последний символ &lt;code&gt;&lt;a href=&quot;data-text-lazy#t:Text&quot;&gt;Text&lt;/a&gt;&lt;/code&gt; , который не должен быть пустым. При условии слияния.</target>
        </trans-unit>
        <trans-unit id="4b739d6be59fd1e3bd8ffa28a8cf4f0e86b46fcc" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns the suffix of &lt;code&gt;xs&lt;/code&gt; after the first &lt;code&gt;n&lt;/code&gt; elements, or &lt;code&gt;[]&lt;/code&gt; if &lt;code&gt;n &amp;gt; &lt;a href=&quot;data-bytestring-lazy#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="translated">O (n / c) &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; возвращает суффикс &lt;code&gt;xs&lt;/code&gt; после первых &lt;code&gt;n&lt;/code&gt; элементов или &lt;code&gt;[]&lt;/code&gt; , если &lt;code&gt;n &amp;gt; &lt;a href=&quot;data-bytestring-lazy#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3230bf165ab4f88bcfb24f3948a318fab7ae358c" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; returns the length of a ByteString as an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">O (n / c) &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; возвращает длину ByteString как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f33a588e4903fd21668a1f7077c81aabda2ed64" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; returns the length of a ByteString as an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279a301156ba949c3ca05606b442b0fe4820bb23" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;data-bytestring-lazy#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt;.</source>
          <target state="translated">O (n / c) &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; эквивалентно &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;data-bytestring-lazy#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="098f5344db1894ea2ce7cb94140d79449edea1d5" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;, applied to a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt;, or &lt;code&gt;xs&lt;/code&gt; itself if &lt;code&gt;n &amp;gt; &lt;a href=&quot;data-bytestring-lazy#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="translated">O (n / c) &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; , примененный к ByteString &lt;code&gt;xs&lt;/code&gt; , возвращает префикс &lt;code&gt;xs&lt;/code&gt; длины &lt;code&gt;n&lt;/code&gt; или сам &lt;code&gt;xs&lt;/code&gt; , если &lt;code&gt;n &amp;gt; &lt;a href=&quot;data-bytestring-lazy#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f36361a6522b2ae73d9a8f3d84f7bfb6f86caa03" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; returns the suffix of &lt;code&gt;xs&lt;/code&gt; after the first &lt;code&gt;n&lt;/code&gt; elements, or &lt;code&gt;[]&lt;/code&gt; if &lt;code&gt;n &amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="translated">O (n / c) &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; возвращает суффикс &lt;code&gt;xs&lt;/code&gt; после первых &lt;code&gt;n&lt;/code&gt; элементов или &lt;code&gt;[]&lt;/code&gt; , если &lt;code&gt;n &amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dca9d892c44a82be4d56f29a65e495be62351350" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; returns the length of a ByteString as an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">O (n / c) &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; возвращает длину ByteString как &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="033d5573aff7a09739e31b4140066fa4a57ad5ae" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; returns the length of a ByteString as an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int64&quot;&gt;Int64&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5306bdfe59376f62c270fc886b633e2f6e1dcd87" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n xs&lt;/code&gt; is equivalent to &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy-char8#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;data-bytestring-lazy-char8#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt;.</source>
          <target state="translated">O (n / c) &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:splitAt&quot;&gt;splitAt&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n xs&lt;/code&gt; эквивалентно &lt;code&gt;(&lt;a href=&quot;data-bytestring-lazy-char8#v:take&quot;&gt;take&lt;/a&gt; n xs, &lt;a href=&quot;data-bytestring-lazy-char8#v:drop&quot;&gt;drop&lt;/a&gt; n xs)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c57cb3fd24a15391e066d7bb4903681e1cc442e" translate="yes" xml:space="preserve">
          <source>O(n/c)&lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt;&lt;code&gt;n&lt;/code&gt;, applied to a ByteString &lt;code&gt;xs&lt;/code&gt;, returns the prefix of &lt;code&gt;xs&lt;/code&gt; of length &lt;code&gt;n&lt;/code&gt;, or &lt;code&gt;xs&lt;/code&gt; itself if &lt;code&gt;n &amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt;.</source>
          <target state="translated">O (n / c) &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:take&quot;&gt;take&lt;/a&gt;&lt;/code&gt; &lt;code&gt;n&lt;/code&gt; , примененный к ByteString &lt;code&gt;xs&lt;/code&gt; , возвращает префикс &lt;code&gt;xs&lt;/code&gt; длины &lt;code&gt;n&lt;/code&gt; или сам &lt;code&gt;xs&lt;/code&gt; , если &lt;code&gt;n &amp;gt; &lt;a href=&quot;data-bytestring-lazy-char8#v:length&quot;&gt;length&lt;/a&gt; xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fef8912f31d84073770a6dedf25eb44f12874e5" translate="yes" xml:space="preserve">
          <source>O(n^2). The &lt;code&gt;&lt;a href=&quot;data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function removes duplicate elements from a list. In particular, it keeps only the first occurrence of each element. (The name &lt;code&gt;&lt;a href=&quot;data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; means `essence'.) It is a special case of &lt;code&gt;&lt;a href=&quot;data-list#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">O (N ^ 2). Функция &lt;code&gt;&lt;a href=&quot;data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; удаляет повторяющиеся элементы из списка. В частности, он сохраняет только первое вхождение каждого элемента. (Название &lt;code&gt;&lt;a href=&quot;data-list#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; означает &amp;laquo;сущность&amp;raquo;.) Это частный случай &lt;code&gt;&lt;a href=&quot;data-list#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt; , который позволяет программисту предоставить свой собственный тест на равенство.</target>
        </trans-unit>
        <trans-unit id="92f2f94e099bb7227cfcc768bf47b8c9015c9ce7" translate="yes" xml:space="preserve">
          <source>O(n^2). The &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; function removes duplicate elements from a list. In particular, it keeps only the first occurrence of each element. (The name &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; means `essence'.) It is a special case of &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt;, which allows the programmer to supply their own equality test.</source>
          <target state="translated">O (N ^ 2). Функция &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; удаляет повторяющиеся элементы из списка. В частности, он сохраняет только первое вхождение каждого элемента. (Название &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:nub&quot;&gt;nub&lt;/a&gt;&lt;/code&gt; означает &amp;laquo;сущность&amp;raquo;.) Это частный случай &lt;code&gt;&lt;a href=&quot;ghc-oldlist#v:nubBy&quot;&gt;nubBy&lt;/a&gt;&lt;/code&gt; , который позволяет программисту предоставить свой собственный тест на равенство.</target>
        </trans-unit>
        <trans-unit id="a61ad319127b680ea53570fe744c01d959f80faf" translate="yes" xml:space="preserve">
          <source>OSVERSIONINFOEX</source>
          <target state="translated">OSVERSIONINFOEX</target>
        </trans-unit>
        <trans-unit id="9beeba965ae8dfbfff40f9bb14dd3916873ca225" translate="yes" xml:space="preserve">
          <source>O_APPEND</source>
          <target state="translated">O_APPEND</target>
        </trans-unit>
        <trans-unit id="1d359ddeab5bd0bfc7e36286fbd4b017c0306eca" translate="yes" xml:space="preserve">
          <source>O_EXCL</source>
          <target state="translated">O_EXCL</target>
        </trans-unit>
        <trans-unit id="5cb2bdb342c206ea5f6f844817a04b4faff12dc1" translate="yes" xml:space="preserve">
          <source>O_NOCTTY</source>
          <target state="translated">O_NOCTTY</target>
        </trans-unit>
        <trans-unit id="4c2fbe88ccc156499e1adb5569ddb4a71e2a0944" translate="yes" xml:space="preserve">
          <source>O_NONBLOCK</source>
          <target state="translated">O_NONBLOCK</target>
        </trans-unit>
        <trans-unit id="2ee322829f78f74d8bacf972b329ca8066c9a6c7" translate="yes" xml:space="preserve">
          <source>O_SYNC</source>
          <target state="translated">O_SYNC</target>
        </trans-unit>
        <trans-unit id="ce320f21777d59129eeca3fbf91595d9a215b3b0" translate="yes" xml:space="preserve">
          <source>O_TRUNC</source>
          <target state="translated">O_TRUNC</target>
        </trans-unit>
        <trans-unit id="fa81ee290b985173ab2f672fb935281b2d2e6c39" translate="yes" xml:space="preserve">
          <source>Object (.o)</source>
          <target state="translated">Объект (.o)</target>
        </trans-unit>
        <trans-unit id="6b2f496323a4895019ec0a9b369fe04ec7ca98eb" translate="yes" xml:space="preserve">
          <source>Object files linked into shared objects must be compiled with &lt;a href=&quot;#ghc-flag--fPIC&quot;&gt;&lt;code&gt;-fPIC&lt;/code&gt;&lt;/a&gt;, see &lt;a href=&quot;#options-codegen&quot;&gt;Options affecting code generation&lt;/a&gt;</source>
          <target state="translated">Объектные файлы, связанные с общими объектами, должны быть скомпилированы с помощью &lt;a href=&quot;#ghc-flag--fPIC&quot;&gt; &lt;code&gt;-fPIC&lt;/code&gt; &lt;/a&gt; , см. &lt;a href=&quot;#options-codegen&quot;&gt;Параметры, влияющие на генерацию кода.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47de13ee5612750157967f1515fc00db4a7c92bd" translate="yes" xml:space="preserve">
          <source>Objective C</source>
          <target state="translated">Цель С</target>
        </trans-unit>
        <trans-unit id="706f81efadad70c24efce57ea6d4e51ec7d7b3af" translate="yes" xml:space="preserve">
          <source>Objective C++</source>
          <target state="translated">Цель С++</target>
        </trans-unit>
        <trans-unit id="007aa0511eafaf62149d25010b14a8bb508fb130" translate="yes" xml:space="preserve">
          <source>Observe a type representation for the type of a value.</source>
          <target state="translated">Соблюдайте представление типа для типа значения.</target>
        </trans-unit>
        <trans-unit id="cd150df10728118f52cdf23f860179c0fad85301" translate="yes" xml:space="preserve">
          <source>Observe the &lt;code&gt;&lt;a href=&quot;ghc-fingerprint-type#t:Fingerprint&quot;&gt;Fingerprint&lt;/a&gt;&lt;/code&gt; of a type representation</source>
          <target state="translated">Наблюдайте за &lt;code&gt;&lt;a href=&quot;ghc-fingerprint-type#t:Fingerprint&quot;&gt;Fingerprint&lt;/a&gt;&lt;/code&gt; представления типа</target>
        </trans-unit>
        <trans-unit id="409bd195ee5312c03c5d82bb0a53f65357224327" translate="yes" xml:space="preserve">
          <source>Observe the argument types of a type representation</source>
          <target state="translated">Обратите внимание на типы аргументов представления типа</target>
        </trans-unit>
        <trans-unit id="b4b8289ec30f6e1a557ff9064f1f6b20543a7105" translate="yes" xml:space="preserve">
          <source>Observe the kind of a type.</source>
          <target state="translated">Следите за типом.</target>
        </trans-unit>
        <trans-unit id="053b657569ecb7e098a31a03ae84e78b99ac515b" translate="yes" xml:space="preserve">
          <source>Observe the type constructor of a quantified type representation.</source>
          <target state="translated">Соблюдайте конструктор типа квантифицированного представления типа.</target>
        </trans-unit>
        <trans-unit id="a2ccc102a2dfd9eb15f652450214c5947ce98f64" translate="yes" xml:space="preserve">
          <source>Observe the type constructor of a type representation</source>
          <target state="translated">Обратите внимание на конструктор типа представления типа</target>
        </trans-unit>
        <trans-unit id="0618a214d16e39be75c6315a11d086a7dcbea1b6" translate="yes" xml:space="preserve">
          <source>Observers</source>
          <target state="translated">Observers</target>
        </trans-unit>
        <trans-unit id="39a3a78d27464eeb6b4e25918dbf5c9b44c8072a" translate="yes" xml:space="preserve">
          <source>Observing type representations</source>
          <target state="translated">Представления типа наблюдения</target>
        </trans-unit>
        <trans-unit id="bde229174b59bd1c95b5316149d2ce6a8e8efb33" translate="yes" xml:space="preserve">
          <source>Obsolete helpers</source>
          <target state="translated">Устаревшие помощники</target>
        </trans-unit>
        <trans-unit id="0fb9100499fe89a0975e82b1a3a8f4e9d2fd735d" translate="yes" xml:space="preserve">
          <source>Obtain a temporary file path with the given suffix. The compiler will delete this file after compilation.</source>
          <target state="translated">Получить временный путь к файлу с заданным суффиксом.Компилятор удалит этот файл после компиляции.</target>
        </trans-unit>
        <trans-unit id="08504fa744e6ae985fd5e1d3159ba4d86ca141de" translate="yes" xml:space="preserve">
          <source>Obtain the Haskell value referenced by a stable pointer, i.e., the same value that was passed to the corresponding call to &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:newStablePtr&quot;&gt;newStablePtr&lt;/a&gt;&lt;/code&gt;. If the argument to &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; has already been freed using &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt;, the behaviour of &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; is undefined.</source>
          <target state="translated">Получите значение Haskell, на которое ссылается стабильный указатель, то есть такое же значение, которое было передано соответствующему вызову &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:newStablePtr&quot;&gt;newStablePtr&lt;/a&gt;&lt;/code&gt; . Если аргумент &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; уже был освобожден с помощью &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt; , поведение &lt;code&gt;&lt;a href=&quot;foreign-stableptr#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; не определено.</target>
        </trans-unit>
        <trans-unit id="700d14839cf29e3aa8bb6f2235b72aaad3a7ed94" translate="yes" xml:space="preserve">
          <source>Obtain the Haskell value referenced by a stable pointer, i.e., the same value that was passed to the corresponding call to &lt;code&gt;&lt;a href=&quot;ghc-stable#v:newStablePtr&quot;&gt;newStablePtr&lt;/a&gt;&lt;/code&gt;. If the argument to &lt;code&gt;&lt;a href=&quot;ghc-stable#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; has already been freed using &lt;code&gt;&lt;a href=&quot;ghc-stable#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt;, the behaviour of &lt;code&gt;&lt;a href=&quot;ghc-stable#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; is undefined.</source>
          <target state="translated">Получите значение Haskell, на которое ссылается стабильный указатель, то есть такое же значение, которое было передано соответствующему вызову &lt;code&gt;&lt;a href=&quot;ghc-stable#v:newStablePtr&quot;&gt;newStablePtr&lt;/a&gt;&lt;/code&gt; . Если аргумент &lt;code&gt;&lt;a href=&quot;ghc-stable#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; уже был освобожден с помощью &lt;code&gt;&lt;a href=&quot;ghc-stable#v:freeStablePtr&quot;&gt;freeStablePtr&lt;/a&gt;&lt;/code&gt; , поведение &lt;code&gt;&lt;a href=&quot;ghc-stable#v:deRefStablePtr&quot;&gt;deRefStablePtr&lt;/a&gt;&lt;/code&gt; не определено.</target>
        </trans-unit>
        <trans-unit id="a2440e4e145be4eb215fcb093e788fb9960299cd" translate="yes" xml:space="preserve">
          <source>Obtain the current working directory as an absolute path.</source>
          <target state="translated">Получить текущую рабочую директорию в виде абсолютного пути.</target>
        </trans-unit>
        <trans-unit id="c1dd9feacb8ad914196a33496bfe7966a0a186c8" translate="yes" xml:space="preserve">
          <source>Obtain the path to a special directory for storing user-specific application data (traditional Unix location). Newer applications may prefer the the XDG-conformant location provided by &lt;code&gt;&lt;a href=&quot;system-directory#v:getXdgDirectory&quot;&gt;getXdgDirectory&lt;/a&gt;&lt;/code&gt; (&lt;a href=&quot;https://github.com/haskell/directory/issues/6#issuecomment-96521020&quot;&gt;migration guide&lt;/a&gt;).</source>
          <target state="translated">Получите путь к специальному каталогу для хранения пользовательских данных приложения (традиционное расположение Unix). Более новые приложения могут предпочесть XDG-совместимое расположение, предоставляемое &lt;code&gt;&lt;a href=&quot;system-directory#v:getXdgDirectory&quot;&gt;getXdgDirectory&lt;/a&gt;&lt;/code&gt; ( &lt;a href=&quot;https://github.com/haskell/directory/issues/6#issuecomment-96521020&quot;&gt;руководство по миграции&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5c48b83679543b94189e3b3857193ee60a82c74c" translate="yes" xml:space="preserve">
          <source>Obtain the paths to special directories for storing user-specific application data, configuration, and cache files, conforming to the &lt;a href=&quot;http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;XDG Base Directory Specification&lt;/a&gt;. Compared with &lt;code&gt;&lt;a href=&quot;system-directory#v:getAppUserDataDirectory&quot;&gt;getAppUserDataDirectory&lt;/a&gt;&lt;/code&gt;, this function provides a more fine-grained hierarchy as well as greater flexibility for the user.</source>
          <target state="translated">Получите пути к специальным каталогам для хранения пользовательских данных приложения, конфигурации и файлов кэша, соответствующих &lt;a href=&quot;http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html&quot;&gt;спецификации XDG Base Directory Specification&lt;/a&gt; . По сравнению с &lt;code&gt;&lt;a href=&quot;system-directory#v:getAppUserDataDirectory&quot;&gt;getAppUserDataDirectory&lt;/a&gt;&lt;/code&gt; , эта функция обеспечивает более детальную иерархию, а также большую гибкость для пользователя.</target>
        </trans-unit>
        <trans-unit id="9ca83079153a8ef840b63ce27bb2fb8a367d26e7" translate="yes" xml:space="preserve">
          <source>Obtain the size of a file in bytes.</source>
          <target state="translated">Получить размер файла в байтах.</target>
        </trans-unit>
        <trans-unit id="9fe9c6afc02350dde6bce9905666a177cb7718a2" translate="yes" xml:space="preserve">
          <source>Obtain the time at which the file or directory was last accessed.</source>
          <target state="translated">Получить время,в течение которого файл или каталог был доступен в последний раз.</target>
        </trans-unit>
        <trans-unit id="fe02e9af07ca18b2e182f9029db868dc37a5029e" translate="yes" xml:space="preserve">
          <source>Obtain the time at which the file or directory was last modified.</source>
          <target state="translated">Получить время,в течение которого файл или каталог был последний раз изменен.</target>
        </trans-unit>
        <trans-unit id="ff7dba47666639f94394aa3dd0febd37e4ecc275" translate="yes" xml:space="preserve">
          <source>Obtained from &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reify&quot;&gt;reify&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; Monad.</source>
          <target state="translated">Получается из &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reify&quot;&gt;reify&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; - монаде.</target>
        </trans-unit>
        <trans-unit id="8d89b30a22ab542b2220d609d797437caf3a9581" translate="yes" xml:space="preserve">
          <source>Obtained from &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; Monad.</source>
          <target state="translated">Получено из &lt;code&gt;&lt;a href=&quot;language-haskell-th#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;language-haskell-th#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; Monad.</target>
        </trans-unit>
        <trans-unit id="442dc1559deffb0ef963faf7fa54adec4e60807c" translate="yes" xml:space="preserve">
          <source>Obtained from &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reify&quot;&gt;reify&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; Monad.</source>
          <target state="translated">Получается из &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reify&quot;&gt;reify&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; - монаде.</target>
        </trans-unit>
        <trans-unit id="182d8ba16b92f752f26f4563dc36a9660282111d" translate="yes" xml:space="preserve">
          <source>Obtained from &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/template-haskell-2.16.0.0/Language-Haskell-TH-Lib.html#v:thisModule&quot;&gt;thisModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808af45a8c161f66c05c30204ffc7b09a12d4c71" translate="yes" xml:space="preserve">
          <source>Obtained from &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:thisModule&quot;&gt;thisModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Получено из &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.8.3/docs/html/libraries/template-haskell-2.15.0.0/Language-Haskell-TH-Lib.html#v:thisModule&quot;&gt;thisModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d46cc88ad2b7ebeb92e27c492df182c9102b8ed0" translate="yes" xml:space="preserve">
          <source>Obtained from &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; Monad.</source>
          <target state="translated">Получено из &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#v:reifyModule&quot;&gt;reifyModule&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:Q&quot;&gt;Q&lt;/a&gt;&lt;/code&gt; Monad.</target>
        </trans-unit>
        <trans-unit id="f7e2e85147570bbfd1afb948ab5b789d3478fe86" translate="yes" xml:space="preserve">
          <source>Obtaining file status</source>
          <target state="translated">Получение статуса файла</target>
        </trans-unit>
        <trans-unit id="e3870373daca7d25421aaf721af5436c7f6ea920" translate="yes" xml:space="preserve">
          <source>Obtaining the constructor from a given datum. For proper terms, this is meant to be the top-level constructor. Primitive datatypes are here viewed as potentially infinite sets of values (i.e., constructors).</source>
          <target state="translated">Получение конструктора из заданной точки отсчета.Для правильных терминов это должен быть конструктор верхнего уровня.Примитивные типы данных здесь рассматриваются как потенциально бесконечные наборы значений (т.е.конструкторы).</target>
        </trans-unit>
        <trans-unit id="1f8c61df2bac9fbfd23bad2f0e9746f16edb8aa7" translate="yes" xml:space="preserve">
          <source>OccName</source>
          <target state="translated">OccName</target>
        </trans-unit>
        <trans-unit id="a8ecac7d31bbf740edf1b0b3ea851c89f44a5d30" translate="yes" xml:space="preserve">
          <source>Occasionally &lt;strong&gt;gv&lt;/strong&gt; will choke as it tries to read an incomplete copy of &lt;code&gt;FOO.ps&lt;/code&gt; (because &lt;strong&gt;hp2ps&lt;/strong&gt; is still running as an update occurs). A slightly more complicated script works around this problem, by using the fact that sending a SIGHUP to gv will cause it to re-read its input file:</source>
          <target state="translated">Иногда &lt;strong&gt;gv &lt;/strong&gt; &lt;code&gt;FOO.ps&lt;/code&gt; пытаясь прочитать неполную копию FOO.ps (поскольку &lt;strong&gt;hp2ps&lt;/strong&gt; все еще работает, когда происходит обновление). Немного более сложный сценарий решает эту проблему, используя тот факт, что отправка SIGHUP в gv заставит его перечитать свой входной файл:</target>
        </trans-unit>
        <trans-unit id="7d892360b7aa6e79ccbbb2db9552ec0912fed1fe" translate="yes" xml:space="preserve">
          <source>Octal and hexadecimal numerics are not recognized as a single token</source>
          <target state="translated">Октальная и шестнадцатеричная нумерация не распознаются как одна лексема.</target>
        </trans-unit>
        <trans-unit id="31ef00312f2e1ee7506655b11623866b09a38490" translate="yes" xml:space="preserve">
          <source>OddParity</source>
          <target state="translated">OddParity</target>
        </trans-unit>
        <trans-unit id="14ad9c3a886a6706b68193db972d3c2fd0f4dd48" translate="yes" xml:space="preserve">
          <source>Oddly enough, people really do use this option! Our pal in Durham (England), Paul Callaghan, writes: &amp;ldquo;Some people here use it for a variety of purposes&amp;mdash;honestly!&amp;mdash;e.g., confirmation that the code/machine is doing something, infinite loop detection, gauging cost of recently added code. Certain people can even tell what stage [the program] is in by the beep pattern. But the major use is for annoying others in the same office&amp;hellip;&amp;rdquo;</source>
          <target state="translated">Как ни странно, люди действительно пользуются этой опцией! Наш приятель из Дарема (Англия) Пол Каллаган пишет: &amp;laquo;Честно говоря, некоторые люди здесь используют его для различных целей, например, для подтверждения того, что код / ​​машина что-то делает, обнаружения бесконечного цикла, оценки стоимости недавно добавленного кода. , Некоторые люди могут даже определить, на каком этапе [программа] находится по звуковому сигналу. Но в основном они используются для того, чтобы раздражать других в том же офисе&amp;hellip; &amp;raquo;</target>
        </trans-unit>
        <trans-unit id="0c0b0b1a2080b74e19b756494638ec92162f2758" translate="yes" xml:space="preserve">
          <source>Odds and ends, mostly functions for reading and showing &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt;-like kind of values.</source>
          <target state="translated">Обсуждения, в основном функции для чтения и отображения &lt;code&gt;&lt;a href=&quot;prelude#t:RealFloat&quot;&gt;RealFloat&lt;/a&gt;&lt;/code&gt; подобных RealFloat .</target>
        </trans-unit>
        <trans-unit id="fb4aa7843d0c5581b08750305cac08a18952a151" translate="yes" xml:space="preserve">
          <source>Of course when running another interactive program in the console then we want to let that program handle Ctl-C. Under Unix however, Ctl-C sends &lt;code&gt;SIGINT&lt;/code&gt; to every process using the console. The standard solution is that while running an interactive program, ignore &lt;code&gt;SIGINT&lt;/code&gt; in the parent, and let it be handled in the child process. If that process then terminates due to the &lt;code&gt;SIGINT&lt;/code&gt; signal, then at that point treat it as if we had recieved the &lt;code&gt;SIGINT&lt;/code&gt; ourselves and begin an orderly shutdown.</source>
          <target state="translated">Конечно, при запуске другой интерактивной программы в консоли мы хотим позволить этой программе обрабатывать Ctl-C. Однако в Unix Ctl-C отправляет &lt;code&gt;SIGINT&lt;/code&gt; каждому процессу, использующему консоль. Стандартное решение заключается в том, что при запуске интерактивной программы игнорируйте &lt;code&gt;SIGINT&lt;/code&gt; в родительском процессе и позволяйте ему обрабатывать его в дочернем процессе. Если этот процесс затем завершается из-за сигнала &lt;code&gt;SIGINT&lt;/code&gt; , тогда рассматривайте его, как если бы мы сами получили &lt;code&gt;SIGINT&lt;/code&gt; , и начинаем упорядоченное завершение работы.</target>
        </trans-unit>
        <trans-unit id="13cbc7281dc8f2ba063030a73854a759868eae8d" translate="yes" xml:space="preserve">
          <source>Of course, &lt;code&gt;UndecidableInstances&lt;/code&gt; lifts the Paterson Conditions, as now.</source>
          <target state="translated">Конечно, &lt;code&gt;UndecidableInstances&lt;/code&gt; снимает условия Патерсона, как сейчас.</target>
        </trans-unit>
        <trans-unit id="bd80101b7867bda9e4de541e2013550d0cd09fca" translate="yes" xml:space="preserve">
          <source>Of course, if you have foreign calls in your program then all bets are off, because you can trash the heap, the stack, or whatever.</source>
          <target state="translated">Конечно,если у вас в программе есть иностранные звонки,то все ставки отменяются,потому что вы можете выбросить кучу,стопку или что угодно.</target>
        </trans-unit>
        <trans-unit id="a37fd12339c76f03254c6a2485812a618d645f86" translate="yes" xml:space="preserve">
          <source>Of course, in this particular situation you can do even better:</source>
          <target state="translated">Конечно,в этой конкретной ситуации можно сделать еще лучше:</target>
        </trans-unit>
        <trans-unit id="959274964b08ed6b64f4a784f4ffb9f800fb0e15" translate="yes" xml:space="preserve">
          <source>Of course, you can also bind normal non-IO expressions using the &lt;code&gt;let&lt;/code&gt;-statement:</source>
          <target state="translated">Of course, you can also bind normal non-IO expressions using the &lt;code&gt;let&lt;/code&gt; -statement:</target>
        </trans-unit>
        <trans-unit id="6b1e2c81f99bb1db90306be62673e1a90e706694" translate="yes" xml:space="preserve">
          <source>Of the form &lt;code&gt;TYPE r&lt;/code&gt; for some &lt;code&gt;r&lt;/code&gt; (see &lt;a href=&quot;#runtime-rep&quot;&gt;Levity polymorphism&lt;/a&gt;). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="translated">Offset</target>
        </trans-unit>
        <trans-unit id="1fa3c2ee363eec71d94c2c2d92dc5c6cd1bf213f" translate="yes" xml:space="preserve">
          <source>Offset from the pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2c1b968cb14580f767587f854d5b3baa84a1fa" translate="yes" xml:space="preserve">
          <source>Offset into first</source>
          <target state="translated">Смещение вперёд</target>
        </trans-unit>
        <trans-unit id="5c4232ca426c972654e6acef0e24307e9bf01cdb" translate="yes" xml:space="preserve">
          <source>Offset into second</source>
          <target state="translated">Смещение в секунду</target>
        </trans-unit>
        <trans-unit id="f8e5c2c7cae1141a37276f0a36a8a63d24f1a869" translate="yes" xml:space="preserve">
          <source>Often a particular data structure is being retained by a chain of unevaluated closures, only the nearest of which will be reported by retainer profiling - for example &lt;code&gt;A&lt;/code&gt; retains &lt;code&gt;B&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt; retains &lt;code&gt;C&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt; retains a large structure. There might be a large number of &lt;code&gt;B&lt;/code&gt;s but only a single &lt;code&gt;A&lt;/code&gt;, so &lt;code&gt;A&lt;/code&gt; is really the one we&amp;rsquo;re interested in eliminating. However, retainer profiling will in this case report &lt;code&gt;B&lt;/code&gt; as the retainer of the large structure. To move further up the chain of retainers, we can ask for another retainer profile but this time restrict the profile to &lt;code&gt;B&lt;/code&gt; objects, so we get a profile of the retainers of &lt;code&gt;B&lt;/code&gt;:</source>
          <target state="translated">Часто конкретная структура данных сохраняется цепочкой неоцененных замыканий, только ближайшее из которых будет сообщаться при профилировании фиксатора - например, &lt;code&gt;A&lt;/code&gt; сохраняет &lt;code&gt;B&lt;/code&gt; , &lt;code&gt;B&lt;/code&gt; сохраняет &lt;code&gt;C&lt;/code&gt; , а &lt;code&gt;C&lt;/code&gt; сохраняет большую структуру. Может быть большое количество &lt;code&gt;B&lt;/code&gt; , но только один &lt;code&gt;A&lt;/code&gt; , поэтому мы действительно заинтересованы в устранении &lt;code&gt;A&lt;/code&gt; . Однако профилирование фиксатора в этом случае будет указывать на &lt;code&gt;B&lt;/code&gt; как фиксатор большой конструкции. Чтобы продвинуться дальше по цепочке ретейнеров, мы можем запросить другой профиль ретейнера, но на этот раз ограничим профиль до &lt;code&gt;B&lt;/code&gt; .объектов, поэтому получаем профиль фиксаторов &lt;code&gt;B&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="69167169d72ddc29203b8842fec5ca3158c37c4a" translate="yes" xml:space="preserve">
          <source>Old API kept to avoid breaking clients</source>
          <target state="translated">Старый API сохранился,чтобы не сломать клиентов</target>
        </trans-unit>
        <trans-unit id="9ce5a70368f8243b3801e08794befe07bb9b0130" translate="yes" xml:space="preserve">
          <source>Old deprecated functions</source>
          <target state="translated">Старые устаревшие функции</target>
        </trans-unit>
        <trans-unit id="199b0ae233b01261174a40c433e452bd8e11764e" translate="yes" xml:space="preserve">
          <source>Old path</source>
          <target state="translated">Старый путь</target>
        </trans-unit>
        <trans-unit id="9b285d963737095a360d0a661d0df2fea803a4ac" translate="yes" xml:space="preserve">
          <source>Omit code generation</source>
          <target state="translated">Генерация пропущенных кодов</target>
        </trans-unit>
        <trans-unit id="06b348347f0fc6282795f8b8662b8c726c982724" translate="yes" xml:space="preserve">
          <source>Omit code generation (and all later phases) altogether. This is useful if you&amp;rsquo;re only interested in type checking code.</source>
          <target state="translated">Полностью опустите генерацию кода (и все последующие фазы). Это полезно, если вас интересует только код проверки типов.</target>
        </trans-unit>
        <trans-unit id="143759d6a82a6e782ba8b006ab52848e42762c71" translate="yes" xml:space="preserve">
          <source>Omit heap checks when no allocation is being performed.</source>
          <target state="translated">Пропустите проверку кучи,когда не выполняется распределение.</target>
        </trans-unit>
        <trans-unit id="7e25f9708b019df5d840bb95bec43db511395b29" translate="yes" xml:space="preserve">
          <source>Omits the link step. This option can be used with &lt;a href=&quot;using#ghc-flag---make&quot;&gt;&lt;code&gt;--make&lt;/code&gt;&lt;/a&gt; to avoid the automatic linking that takes place if the program contains a &lt;code&gt;Main&lt;/code&gt; module.</source>
          <target state="translated">Пропускает шаг ссылки. Этот параметр можно использовать с &lt;a href=&quot;using#ghc-flag---make&quot;&gt; &lt;code&gt;--make&lt;/code&gt; ,&lt;/a&gt; чтобы избежать автоматического связывания, которое имеет место, если программа содержит &lt;code&gt;Main&lt;/code&gt; модуль.</target>
        </trans-unit>
        <trans-unit id="60e957e3d9a735dd58ec78b95add59bf7dee68af" translate="yes" xml:space="preserve">
          <source>Omitting &lt;code&gt;-N⟨x⟩&lt;/code&gt; entirely means &lt;code&gt;-N1&lt;/code&gt;.</source>
          <target state="translated">Опуская &lt;code&gt;-N⟨x⟩&lt;/code&gt; полностью означает &lt;code&gt;-N1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="852085b8a1ca62c46bfcfacdf985dc281e39d842" translate="yes" xml:space="preserve">
          <source>Omitting generic instances</source>
          <target state="translated">Упуская общие случаи</target>
        </trans-unit>
        <trans-unit id="02a33c2d0537913c5f5350486a8c3f93ad4f4e57" translate="yes" xml:space="preserve">
          <source>Omitting ⟨x⟩, i.e. &lt;code&gt;+RTS -N -RTS&lt;/code&gt;, lets the runtime choose the value of ⟨x⟩ itself based on how many processors are in your machine.</source>
          <target state="translated">Отсутствие x⟩, то есть &lt;code&gt;+RTS -N -RTS&lt;/code&gt; , позволяет среде выполнения выбирать значение ⟨x⟨ в зависимости от количества процессоров на вашем компьютере.</target>
        </trans-unit>
        <trans-unit id="15d76fc4eb3563c85ec6bb33fc1966e50eaee83c" translate="yes" xml:space="preserve">
          <source>On 32-bit x86 platforms when using the native code generator, the &lt;a href=&quot;using-optimisation#ghc-flag--fexcess-precision&quot;&gt;&lt;code&gt;-fexcess-precision&lt;/code&gt;&lt;/a&gt; option is always on. This means that floating-point calculations are non-deterministic, because depending on how the program is compiled (optimisation settings, for example), certain calculations might be done at 80-bit precision instead of the intended 32-bit or 64-bit precision. Floating-point results may differ when optimisation is turned on. In the worst case, referential transparency is violated, because for example &lt;code&gt;let x = E1 in E2&lt;/code&gt; can evaluate to a different value than &lt;code&gt;E2[E1/x]&lt;/code&gt;.</source>
          <target state="translated">На 32-битных платформах x86 при использовании генератора &lt;a href=&quot;using-optimisation#ghc-flag--fexcess-precision&quot;&gt; &lt;code&gt;-fexcess-precision&lt;/code&gt; &lt;/a&gt; опция -fexcess-precision всегда включена . Это означает, что вычисления с плавающей запятой не являются детерминированными, потому что в зависимости от того, как скомпилирована программа (например, настройки оптимизации), определенные вычисления могут выполняться с 80-битной точностью вместо предполагаемой 32-битной или 64-битной точности. , При включенной оптимизации результаты с плавающей точкой могут отличаться. В худшем случае ссылочная прозрачность нарушается, потому что, например, &lt;code&gt;let x = E1 in E2&lt;/code&gt; может оцениваться как другое значение, чем &lt;code&gt;E2[E1/x]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1391cbd23623d8953378e909f91a6612b37b28fe" translate="yes" xml:space="preserve">
          <source>On 64-bit machines, the RTS needs to allocate memory in the low 2Gb of the address space. Support for this across different operating systems is patchy, and sometimes fails. This option is there to give the RTS a hint about where it should be able to allocate memory in the low 2Gb of the address space. For example, &lt;code&gt;+RTS -xm20000000 -RTS&lt;/code&gt; would hint that the RTS should allocate starting at the 0.5Gb mark. The default is to use the OS&amp;rsquo;s built-in support for allocating memory in the low 2Gb if available (e.g. &lt;code&gt;mmap&lt;/code&gt; with &lt;code&gt;MAP_32BIT&lt;/code&gt; on Linux), or otherwise &lt;code&gt;-xm40000000&lt;/code&gt;.</source>
          <target state="translated">На 64-битных машинах RTS необходимо выделить память в 2 Гб адресного пространства. Поддержка этого в разных операционных системах неоднородна и иногда дает сбой. Эта опция предназначена для того, чтобы дать RTS подсказку о том, где он должен иметь возможность выделять память в 2 Гб адресного пространства. Например, &lt;code&gt;+RTS -xm20000000 -RTS&lt;/code&gt; будет намекать, что RTS должен выделять, начиная с отметки 0,5 ГБ. По умолчанию используется встроенная поддержка ОС для выделения памяти в 2 &lt;code&gt;MAP_32BIT&lt;/code&gt; если она доступна (например, &lt;code&gt;mmap&lt;/code&gt; с MAP_32BIT в Linux), или иначе &lt;code&gt;-xm40000000&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="097883c1f4907fb1b521ee5631f70e7ddf86398d" translate="yes" xml:space="preserve">
          <source>On 64-bit machines, the runtime linker usually needs to map object code into the low 2Gb of the address space, due to the x86_64 small memory model where most symbol references are 32 bits. The problem is that this 2Gb of address space can fill up, especially if you&amp;rsquo;re loading a very large number of object files into GHCi.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b14479147dc851f7df3c7d9e83023d77f4f785" translate="yes" xml:space="preserve">
          <source>On Darwin/OS X, dynamic libraries are stamped at build time with an &amp;ldquo;install name&amp;rdquo;, which is the ultimate install path of the library file. Any libraries or executables that subsequently link against it will pick up that path as their runtime search location for it. By default, ghc sets the install name to the location where the library is built. This option allows you to override it with the specified file path. (It passes &lt;code&gt;-install_name&lt;/code&gt; to Apple&amp;rsquo;s linker.) Ignored on other platforms.</source>
          <target state="translated">В Darwin / OS X динамические библиотеки помечаются во время сборки &amp;laquo;именем установки&amp;raquo;, которое является окончательным путем установки файла библиотеки. Любые библиотеки или исполняемые файлы, которые впоследствии связываются с ним, будут использовать этот путь в качестве места их поиска во время выполнения. По умолчанию ghc устанавливает в качестве имени установки место, где создается библиотека. Этот параметр позволяет вам заменить его указанным путем к файлу. (Он передает &lt;code&gt;-install_name&lt;/code&gt; компоновщику Apple.) Игнорируется на других платформах.</target>
        </trans-unit>
        <trans-unit id="c502a4721745da19ad3306edaec1023d6b7312d6" translate="yes" xml:space="preserve">
          <source>On Darwin/OS X/iOS only, add ⟨dir⟩ to the list of directories searched for frameworks. This option corresponds to the &lt;code&gt;-F&lt;/code&gt; option for Apple&amp;rsquo;s Linker.</source>
          <target state="translated">Только в Darwin / OS X / iOS: добавьте &amp;laquo;каталог&amp;raquo; в список каталогов, в которых выполняется поиск фреймворков. Этот параметр соответствует параметру &lt;code&gt;-F&lt;/code&gt; для компоновщика Apple.</target>
        </trans-unit>
        <trans-unit id="f8f858556433cf6929170371cf16d1d28b70f4f0" translate="yes" xml:space="preserve">
          <source>On Darwin/OS X/iOS only, add ⟨dir⟩ to the list of directories searched for frameworks. This option corresponds to the &lt;code&gt;-F&lt;/code&gt; option for Apple's Linker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836aeb62038416ab5d18c1c4cccc6b7891cf00da" translate="yes" xml:space="preserve">
          <source>On Darwin/OS X/iOS only, link in the framework ⟨name⟩. This option corresponds to the &lt;code&gt;-framework&lt;/code&gt; option for Apple&amp;rsquo;s Linker.</source>
          <target state="translated">Только в Darwin / OS X / iOS: ссылка в framework ⟨name⟩. Этот параметр соответствует параметру &lt;code&gt;-framework&lt;/code&gt; для компоновщика Apple.</target>
        </trans-unit>
        <trans-unit id="0d2f8a49d8d4c58193d7bce9934ad90451e92201" translate="yes" xml:space="preserve">
          <source>On Darwin/OS X/iOS only, link in the framework ⟨name⟩. This option corresponds to the &lt;code&gt;-framework&lt;/code&gt; option for Apple&amp;rsquo;s Linker. Please note that frameworks and packages are two different things - frameworks don&amp;rsquo;t contain any Haskell code. Rather, they are Apple&amp;rsquo;s way of packaging shared libraries. To link to Apple&amp;rsquo;s &amp;ldquo;Carbon&amp;rdquo; API, for example, you&amp;rsquo;d use &lt;code&gt;-framework Carbon&lt;/code&gt;.</source>
          <target state="translated">Только в Darwin / OS X / iOS: ссылка в framework ⟨name⟩. Этот параметр соответствует параметру &lt;code&gt;-framework&lt;/code&gt; для компоновщика Apple. Обратите внимание, что фреймворки и пакеты - это две разные вещи: фреймворки не содержат кода Haskell. Скорее, они представляют собой способ упаковки разделяемых библиотек Apple. Например, для связи с Apple &amp;laquo;Carbon&amp;raquo; API вы должны использовать &lt;code&gt;-framework Carbon&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cccac3a36668d1fdad31c6e062fb07a44e28644" translate="yes" xml:space="preserve">
          <source>On Darwin/OS X/iOS only, link in the framework ⟨name⟩. This option corresponds to the &lt;code&gt;-framework&lt;/code&gt; option for Apple's Linker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57aabecc887720cc819888b560ff938ff24a471" translate="yes" xml:space="preserve">
          <source>On Darwin/OS X/iOS only, prepend the directory ⟨dir⟩ to the framework directories path. This option corresponds to the &lt;code&gt;-F&lt;/code&gt; option for Apple&amp;rsquo;s Linker (&lt;code&gt;-F&lt;/code&gt; already means something else for GHC).</source>
          <target state="translated">Только в Darwin / OS X / iOS добавьте каталог dir⟩ к пути к каталогам фреймворка. Эта опция соответствует опции &lt;code&gt;-F&lt;/code&gt; для компоновщика Apple ( &lt;code&gt;-F&lt;/code&gt; уже означает что-то другое для GHC).</target>
        </trans-unit>
        <trans-unit id="f6e8ba5a3fab15f9e41a75f470422c219a534bb8" translate="yes" xml:space="preserve">
          <source>On GHC, the runtime will ensure that any Haskell thread will only see &quot;its own&quot; &lt;code&gt;errno&lt;/code&gt;, by saving and restoring the value when Haskell threads are scheduled across OS threads.</source>
          <target state="translated">В GHC среда выполнения гарантирует, что любой поток Haskell увидит только &amp;laquo;свою&amp;raquo; &lt;code&gt;errno&lt;/code&gt; , сохраняя и восстанавливая значение, когда потоки Haskell запланированы для потоков ОС.</target>
        </trans-unit>
        <trans-unit id="c71882ba581cd6bc6d41d871050d79d61de4659e" translate="yes" xml:space="preserve">
          <source>On Linux, MADV_FREE is newer and faster because it can avoid zeroing pages if they are re-used by the process later (see &lt;code&gt;man 2 madvise&lt;/code&gt;), but for the trade-off that memory inspection tools like &lt;code&gt;top&lt;/code&gt; will not immediately reflect the freeing in their display of resident memory (RSS column): Only under memory pressure will Linux actually remove the freed pages from the process and update its RSS statistics. Until then, the pages show up as &lt;code&gt;LazyFree&lt;/code&gt; in &lt;code&gt;/proc/PID/smaps&lt;/code&gt; (see &lt;code&gt;man 5 proc&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cc400d7871c058aaff05bc589d341778622e21" translate="yes" xml:space="preserve">
          <source>On POSIX platforms these two new handles will always be Nothing</source>
          <target state="translated">На платформах POSIX эти две новые ручки всегда будут Ничего.</target>
        </trans-unit>
        <trans-unit id="078d3ef4757340184bdc802a0b2704173202e340" translate="yes" xml:space="preserve">
          <source>On POSIX systems, this is equivalent to &lt;code&gt;stat&lt;/code&gt; followed by &lt;code&gt;chmod&lt;/code&gt;.</source>
          <target state="translated">В системах POSIX это эквивалентно &lt;code&gt;stat&lt;/code&gt; , за которым следует &lt;code&gt;chmod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5150091903944c9e80b85e4f5491e74472f81c1" translate="yes" xml:space="preserve">
          <source>On POSIX systems, this returns the result of &lt;code&gt;access&lt;/code&gt;.</source>
          <target state="translated">В системах POSIX это возвращает результат &lt;code&gt;access&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e1256ac8aafae1c7e4adb4ddae8c68c82e5af71" translate="yes" xml:space="preserve">
          <source>On POSIX systems, this sets the &lt;em&gt;owner&lt;/em&gt; permissions.</source>
          <target state="translated">В системах POSIX это устанавливает права &lt;em&gt;владельца&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="15a6eb7d1aee9c1397492586a65a460c544dbaea" translate="yes" xml:space="preserve">
          <source>On POSIX, equivalent to &lt;code&gt;&lt;a href=&quot;system-directory-internal#v:simplifyPosix&quot;&gt;simplifyPosix&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В POSIX эквивалент &lt;code&gt;&lt;a href=&quot;system-directory-internal#v:simplifyPosix&quot;&gt;simplifyPosix&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a057a4f6c4818787b76f3467f2b22b0d6a9e3b6d" translate="yes" xml:space="preserve">
          <source>On POSIX-compatible platforms GHC&amp;rsquo;s runtime system (when built with &lt;code&gt;libdw&lt;/code&gt; support) will produce a stack trace on &lt;code&gt;stderr&lt;/code&gt; when a &lt;code&gt;SIGQUIT&lt;/code&gt; signal is received (on many systems this signal can be sent using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c168ab7b60c55fc5b0097e465ca6c5d25010787" translate="yes" xml:space="preserve">
          <source>On POSIX-compatible platforms GHC&amp;rsquo;s runtime system (when built with &lt;code&gt;libdw&lt;/code&gt; support) will produce a stack trace on &lt;code&gt;stderr&lt;/code&gt; when a &lt;code&gt;SIGQUIT&lt;/code&gt; signal is received (on many systems this signal can be sent using &lt;code&gt;Ctrl-\&lt;/code&gt;). For instance (using the same &lt;code&gt;fib.hs&lt;/code&gt; as above),</source>
          <target state="translated">На POSIX-совместимых платформах система времени выполнения GHC (если она построена с поддержкой &lt;code&gt;libdw&lt;/code&gt; ) будет генерировать трассировку стека на &lt;code&gt;stderr&lt;/code&gt; при получении сигнала &lt;code&gt;SIGQUIT&lt;/code&gt; (во многих системах этот сигнал может быть отправлен с помощью &lt;code&gt;Ctrl-\&lt;/code&gt; ). Например (используя тот же &lt;code&gt;fib.hs&lt;/code&gt; что и выше),</target>
        </trans-unit>
        <trans-unit id="0422707a616b81e28b0b133b6079462f1cb7aac1" translate="yes" xml:space="preserve">
          <source>On Unix systems, &lt;code&gt;&lt;a href=&quot;system-process#v:terminateProcess&quot;&gt;terminateProcess&lt;/a&gt;&lt;/code&gt; sends the process the SIGTERM signal. On Windows systems, if &lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; then the Win32 &lt;code&gt;TerminateJobObject&lt;/code&gt; function is called to kill all processes associated with the job and passing the exit code of 1 to each of them. Otherwise if &lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; then the Win32 &lt;code&gt;TerminateProcess&lt;/code&gt; function is called, passing an exit code of 1.</source>
          <target state="translated">В системах Unix &lt;code&gt;&lt;a href=&quot;system-process#v:terminateProcess&quot;&gt;terminateProcess&lt;/a&gt;&lt;/code&gt; отправляет процессу сигнал SIGTERM. В системах Windows, если &lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; имеет значение &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; , то вызывается функция Win32 &lt;code&gt;TerminateJobObject&lt;/code&gt; , чтобы убить все процессы, связанные с заданием, и передать каждому из них код выхода 1. В противном случае, если &lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; имеет значение &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; , вызывается функция Win32 &lt;code&gt;TerminateProcess&lt;/code&gt; с передачей кода выхода 1.</target>
        </trans-unit>
        <trans-unit id="2ee8ff777481e4647016777c942f48cad360e353" translate="yes" xml:space="preserve">
          <source>On Unix systems, &lt;code&gt;&lt;a href=&quot;system-process#v:terminateProcess&quot;&gt;terminateProcess&lt;/a&gt;&lt;/code&gt; sends the process the SIGTERM signal. On Windows systems, if &lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:True&quot;&gt;True&lt;/a&gt;&lt;/code&gt; then the Win32 &lt;code&gt;TerminateJobObject&lt;/code&gt; function is called to kill all processes associated with the job and passing the exit code of 1 to each of them. Otherwise if &lt;code&gt;&lt;a href=&quot;system-process#v:use_process_jobs&quot;&gt;use_process_jobs&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-bool#v:False&quot;&gt;False&lt;/a&gt;&lt;/code&gt; then the Win32 &lt;code&gt;TerminateProcess&lt;/code&gt; function is called, passing an exit code of 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26000ccdb50e03ab1029e35d0df1776d18e9ab0e" translate="yes" xml:space="preserve">
          <source>On Unix systems, it sends the group the SIGINT signal.</source>
          <target state="translated">На Unix-системах он посылает группе сигнал SIGINT.</target>
        </trans-unit>
        <trans-unit id="c6d0966027827b87508cf93ba9e2a42091942bf2" translate="yes" xml:space="preserve">
          <source>On Unix systems, see &lt;code&gt;&lt;a href=&quot;system-process#v:waitForProcess&quot;&gt;waitForProcess&lt;/a&gt;&lt;/code&gt; for the meaning of exit codes when the process died as the result of a signal.</source>
          <target state="translated">В системах Unix см. &lt;code&gt;&lt;a href=&quot;system-process#v:waitForProcess&quot;&gt;waitForProcess&lt;/a&gt;&lt;/code&gt; , чтобы узнать значение кодов выхода, когда процесс прекратил работу в результате сигнала.</target>
        </trans-unit>
        <trans-unit id="09629c83332620e6e6759db7b31141b99ca9c762" translate="yes" xml:space="preserve">
          <source>On Unix there are two mechanisms. Shared libraries can be installed into standard locations that the dynamic linker knows about. For example &lt;code&gt;/usr/lib&lt;/code&gt; or &lt;code&gt;/usr/local/lib&lt;/code&gt; on most systems. The other mechanism is to use a &amp;ldquo;runtime path&amp;rdquo; or &amp;ldquo;rpath&amp;rdquo; embedded into programs and libraries themselves. These paths can either be absolute paths or on at least Linux and Solaris they can be paths relative to the program or library itself. In principle this makes it possible to construct fully relocatable sets of programs and libraries.</source>
          <target state="translated">В Unix есть два механизма. Общие библиотеки могут быть установлены в стандартные места, о которых знает динамический компоновщик. Например, &lt;code&gt;/usr/lib&lt;/code&gt; или &lt;code&gt;/usr/local/lib&lt;/code&gt; в большинстве систем. Другой механизм - использовать &amp;laquo;путь времени выполнения&amp;raquo; или &amp;laquo;rpath&amp;raquo;, встроенный в сами программы и библиотеки. Эти пути могут быть либо абсолютными, либо, по крайней мере, в Linux и Solaris они могут быть путями относительно самой программы или библиотеки. В принципе, это позволяет создавать полностью перемещаемые наборы программ и библиотек.</target>
        </trans-unit>
        <trans-unit id="1aa9bf14869ffa0729b113a2919b90d3a99f83ea" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;code&gt;&lt;a href=&quot;system-directory#v:getHomeDirectory&quot;&gt;getHomeDirectory&lt;/a&gt;&lt;/code&gt; behaves as follows:</source>
          <target state="translated">В Unix &lt;code&gt;&lt;a href=&quot;system-directory#v:getHomeDirectory&quot;&gt;getHomeDirectory&lt;/a&gt;&lt;/code&gt; ведет себя следующим образом:</target>
        </trans-unit>
        <trans-unit id="dbda9eb325b9c89423ab40811c09f445058a091b" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;code&gt;&lt;a href=&quot;system-directory#v:getTemporaryDirectory&quot;&gt;getTemporaryDirectory&lt;/a&gt;&lt;/code&gt; returns the value of the &lt;code&gt;TMPDIR&lt;/code&gt; environment variable or &quot;/tmp&quot; if the variable isn't defined. On Windows, the function checks for the existence of environment variables in the following order and uses the first path found:</source>
          <target state="translated">В Unix &lt;code&gt;&lt;a href=&quot;system-directory#v:getTemporaryDirectory&quot;&gt;getTemporaryDirectory&lt;/a&gt;&lt;/code&gt; возвращает значение &lt;code&gt;TMPDIR&lt;/code&gt; среды TMPDIR или &amp;laquo;/ tmp&amp;raquo;, если переменная не определена. В Windows функция проверяет наличие переменных среды в следующем порядке и использует первый найденный путь:</target>
        </trans-unit>
        <trans-unit id="db73ed697e88171697c761e2de6ba9e3b2fdb8f6" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;code&gt;&lt;a href=&quot;system-directory#v:getUserDocumentsDirectory&quot;&gt;getUserDocumentsDirectory&lt;/a&gt;&lt;/code&gt; returns the value of the &lt;code&gt;HOME&lt;/code&gt; environment variable. On Windows, the system is queried for a suitable path; a typical path might be &lt;code&gt;C:/Users/&lt;em&gt;&amp;lt;user&amp;gt;&lt;/em&gt;/Documents&lt;/code&gt;.</source>
          <target state="translated">В Unix &lt;code&gt;&lt;a href=&quot;system-directory#v:getUserDocumentsDirectory&quot;&gt;getUserDocumentsDirectory&lt;/a&gt;&lt;/code&gt; возвращает значение переменной среды &lt;code&gt;HOME&lt;/code&gt; . В Windows система запрашивает подходящий путь; типичный путь может быть &lt;code&gt;C:/Users/&lt;em&gt;&amp;lt;user&amp;gt;&lt;/em&gt;/Documents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6aec3d6d90c1ca53af23e974fd0a1470d206561" translate="yes" xml:space="preserve">
          <source>On Unix-like systems, permissions, access time, and modification time are preserved. If possible, the owner and group are also preserved. Note that the very act of copying can change the access time of the source file, hence the access times of the two files may differ after the operation completes.</source>
          <target state="translated">На Unix-подобных системах сохраняются права доступа,время доступа и время модификации.По возможности сохраняются также владелец и группа.Обратите внимание,что сам акт копирования может изменить время доступа к исходному файлу,поэтому время доступа к двум файлам может отличаться после завершения операции.</target>
        </trans-unit>
        <trans-unit id="1f67f27323ff913fec8fc3bce6fba0553de49353" translate="yes" xml:space="preserve">
          <source>On Unix-like systems, the path is &lt;code&gt;~/.&lt;em&gt;&amp;lt;app&amp;gt;&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">В Unix-подобных системах путь &lt;code&gt;~/.&lt;em&gt;&amp;lt;app&amp;gt;&lt;/em&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2acf1d643c18794b5ab0d3288014560943c06f0b" translate="yes" xml:space="preserve">
          <source>On Unix: &lt;code&gt;$HOME/.ghc/ghci.conf&lt;/code&gt;</source>
          <target state="translated">В Unix: &lt;code&gt;$HOME/.ghc/ghci.conf&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="686bba75bbf12a7e94f3f601b8b2b6f1c767e5b6" translate="yes" xml:space="preserve">
          <source>On Win32 platforms, &lt;code&gt;renameDirectory&lt;/code&gt; fails if the &lt;em&gt;new&lt;/em&gt; directory already exists.</source>
          <target state="translated">На платформах Win32 &lt;code&gt;renameDirectory&lt;/code&gt; не удается, если &lt;em&gt;новый&lt;/em&gt; каталог уже существует.</target>
        </trans-unit>
        <trans-unit id="4cf66c11f13f8d5cfb30fa66ff975ad9d16e7224" translate="yes" xml:space="preserve">
          <source>On Windows XP or earlier systems, junction expansion is not performed due to their lack of &lt;code&gt;GetFinalPathNameByHandle&lt;/code&gt;.</source>
          <target state="translated">В Windows XP или более ранних версиях расширение соединения не выполняется из-за отсутствия &lt;code&gt;GetFinalPathNameByHandle&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e2645284c47be98a8acf2a83e433b0e66594a2f2" translate="yes" xml:space="preserve">
          <source>On Windows a second wait method can be used to block for event completion. This requires two handles. A process job handle and a events handle to monitor.</source>
          <target state="translated">В Windows можно использовать второй метод ожидания для блокировки завершения события.Для этого требуется две ручки.Ручка задания процесса и ручка событий для мониторинга.</target>
        </trans-unit>
        <trans-unit id="9658f389cd47e6221668fd22bc06e990b9d9dd68" translate="yes" xml:space="preserve">
          <source>On Windows hs_init treats argv as UTF8-encoded. Passing other encodings might lead to unexpected results. Passing NULL as argv is valid but can lead to &amp;lt;unknown&amp;gt; showing up in error messages instead of the name of the executable.</source>
          <target state="translated">В Windows hs_init обрабатывает argv как кодировку UTF8. Передача других кодировок может привести к неожиданным результатам. Передача NULL в качестве argv допустима, но может привести к отображению &amp;lt;unknown&amp;gt; в сообщениях об ошибках вместо имени исполняемого файла.</target>
        </trans-unit>
        <trans-unit id="b4698d639ab062d2aed61863bbaa5096920591d6" translate="yes" xml:space="preserve">
          <source>On Windows systems this flag indicates that we should wait for the entire process tree to finish before unblocking. On POSIX systems this flag is ignored. See $exec-on-windows for details.</source>
          <target state="translated">На системах Windows этот флаг указывает на то,что перед разблокировкой необходимо дождаться окончания всего дерева процесса.На POSIX-системах этот флаг игнорируется.Подробности см.в разделе $exec-on-windows.</target>
        </trans-unit>
        <trans-unit id="45e04fe208e77db2f230b90c671409e216534e94" translate="yes" xml:space="preserve">
          <source>On Windows systems, it generates a CTRL_BREAK_EVENT and will only work for processes created using &lt;code&gt;createProcess&lt;/code&gt; and setting the &lt;code&gt;&lt;a href=&quot;system-process#v:create_group&quot;&gt;create_group&lt;/a&gt;&lt;/code&gt; flag</source>
          <target state="translated">В системах Windows он генерирует CTRL_BREAK_EVENT и будет работать только для процессов, созданных с помощью &lt;code&gt;createProcess&lt;/code&gt; и установки флага &lt;code&gt;&lt;a href=&quot;system-process#v:create_group&quot;&gt;create_group&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d883d2ded3f33c4ac5277dea1b34c15e47204a0e" translate="yes" xml:space="preserve">
          <source>On Windows systems, it generates a CTRL_BREAK_EVENT and will only work for processes created using &lt;code&gt;createProcess&lt;/code&gt; and setting the &lt;code&gt;&lt;a href=&quot;system-process-internals#v:create_group&quot;&gt;create_group&lt;/a&gt;&lt;/code&gt; flag</source>
          <target state="translated">В системах Windows он генерирует CTRL_BREAK_EVENT и будет работать только для процессов, созданных с помощью &lt;code&gt;createProcess&lt;/code&gt; и установки флага &lt;code&gt;&lt;a href=&quot;system-process-internals#v:create_group&quot;&gt;create_group&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1311c5b9754526fe0793423a543b261c1854ae36" translate="yes" xml:space="preserve">
          <source>On Windows systems, this calls &lt;code&gt;DeviceIoControl&lt;/code&gt; with &lt;code&gt;FSCTL_GET_REPARSE_POINT&lt;/code&gt;. In addition to symbolic links, the function also works on junction points. On POSIX systems, this calls &lt;code&gt;readlink&lt;/code&gt;.</source>
          <target state="translated">В системах Windows это вызывает &lt;code&gt;DeviceIoControl&lt;/code&gt; с &lt;code&gt;FSCTL_GET_REPARSE_POINT&lt;/code&gt; . Помимо символических ссылок, функция также работает с точками соединения. В системах POSIX это вызывает &lt;code&gt;readlink&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1567544926c7445013dc0be717298582cb416b6" translate="yes" xml:space="preserve">
          <source>On Windows this has no effect.</source>
          <target state="translated">На Windows это не влияет.</target>
        </trans-unit>
        <trans-unit id="8f02d4da8e0b35ffd3d2c36f1392b357f6c5f8d8" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;&lt;a href=&quot;system-cmd#v:system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; passes the command to the Windows command interpreter (&lt;code&gt;CMD.EXE&lt;/code&gt; or &lt;code&gt;COMMAND.COM&lt;/code&gt;), hence Unixy shell tricks will not work.</source>
          <target state="translated">В Windows &lt;code&gt;&lt;a href=&quot;system-cmd#v:system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; передает команду интерпретатору команд Windows ( &lt;code&gt;CMD.EXE&lt;/code&gt; или &lt;code&gt;COMMAND.COM&lt;/code&gt; ), поэтому трюки с оболочкой Unixy не работают.</target>
        </trans-unit>
        <trans-unit id="48c350060f4cd8913452b9533ace5233eb42f47d" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;&lt;a href=&quot;system-directory#v:XdgData&quot;&gt;XdgData&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-directory#v:XdgConfig&quot;&gt;XdgConfig&lt;/a&gt;&lt;/code&gt; usually map to the same directory unless overridden.</source>
          <target state="translated">В Windows &lt;code&gt;&lt;a href=&quot;system-directory#v:XdgData&quot;&gt;XdgData&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;system-directory#v:XdgConfig&quot;&gt;XdgConfig&lt;/a&gt;&lt;/code&gt; обычно сопоставляются с одним и тем же каталогом, если не переопределены.</target>
        </trans-unit>
        <trans-unit id="b2c2a5d7334002daf6e872673bc987f5bdaaf260" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;&lt;a href=&quot;system-directory#v:XdgDataDirs&quot;&gt;XdgDataDirs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-directory#v:XdgConfigDirs&quot;&gt;XdgConfigDirs&lt;/a&gt;&lt;/code&gt; usually map to the same list of directories unless overridden.</source>
          <target state="translated">В Windows &lt;code&gt;&lt;a href=&quot;system-directory#v:XdgDataDirs&quot;&gt;XdgDataDirs&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;system-directory#v:XdgConfigDirs&quot;&gt;XdgConfigDirs&lt;/a&gt;&lt;/code&gt; обычно сопоставляются с одним и тем же списком каталогов, если они не переопределены.</target>
        </trans-unit>
        <trans-unit id="8b25994ba9790bb8044b9cc7287876fc972fce5c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;&lt;a href=&quot;system-directory#v:findExecutable&quot;&gt;findExecutable&lt;/a&gt;&lt;/code&gt; calls the Win32 function &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa365527.aspx&quot;&gt;SearchPath&lt;/a&gt;&lt;/code&gt;, which may search other places before checking the directories in the &lt;code&gt;PATH&lt;/code&gt; environment variable. Where it actually searches depends on registry settings, but notably includes the directory containing the current executable.</source>
          <target state="translated">В Windows &lt;code&gt;&lt;a href=&quot;system-directory#v:findExecutable&quot;&gt;findExecutable&lt;/a&gt;&lt;/code&gt; вызывает функцию Win32 &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/aa365527.aspx&quot;&gt;SearchPath&lt;/a&gt;&lt;/code&gt; , которая может выполнять поиск в других местах перед проверкой каталогов в &lt;code&gt;PATH&lt;/code&gt; среды PATH . Где на самом деле искать, зависит от настроек реестра, но, в частности, включает каталог, содержащий текущий исполняемый файл.</target>
        </trans-unit>
        <trans-unit id="dca5f3e83bb026318939bea1cd25a1940f11ff0f" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;code&gt;&lt;a href=&quot;system-process#v:system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; passes the command to the Windows command interpreter (&lt;code&gt;CMD.EXE&lt;/code&gt; or &lt;code&gt;COMMAND.COM&lt;/code&gt;), hence Unixy shell tricks will not work.</source>
          <target state="translated">В Windows &lt;code&gt;&lt;a href=&quot;system-process#v:system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; передает команду интерпретатору команд Windows ( &lt;code&gt;CMD.EXE&lt;/code&gt; или &lt;code&gt;COMMAND.COM&lt;/code&gt; ), поэтому трюки с оболочкой Unixy не работают.</target>
        </trans-unit>
        <trans-unit id="c8886822cdea6ae2e0b2d173208997d3a1f79f72" translate="yes" xml:space="preserve">
          <source>On Windows, GHC normally generates a manifest file when linking a binary. The manifest is placed in the file &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.exe.manifest`&lt;/code&gt; where ⟨prog.exe⟩ is the name of the executable. The manifest file currently serves just one purpose: it disables the &amp;ldquo;installer detection&amp;rdquo; in Windows Vista that attempts to elevate privileges for executables with certain names (e.g. names containing &amp;ldquo;install&amp;rdquo;, &amp;ldquo;setup&amp;rdquo; or &amp;ldquo;patch&amp;rdquo;). Without the manifest file to turn off installer detection, attempting to run an executable that Windows deems to be an installer will return a permission error code to the invoker. Depending on the invoker, the result might be a dialog box asking the user for elevated permissions, or it might simply be a permission denied error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3c28898ffda6729df899cf284892444c82605a" translate="yes" xml:space="preserve">
          <source>On Windows, GHC normally generates a manifestmanifest file when linking a binary. The manifest is placed in the file &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.exe.manifest`&lt;/code&gt; where ⟨prog.exe⟩ is the name of the executable. The manifest file currently serves just one purpose: it disables the &amp;ldquo;installer detection&amp;rdquo; in Windows Vista that attempts to elevate privileges for executables with certain names (e.g. names containing &amp;ldquo;install&amp;rdquo;, &amp;ldquo;setup&amp;rdquo; or &amp;ldquo;patch&amp;rdquo;). Without the manifest file to turn off installer detection, attempting to run an executable that Windows deems to be an installer will return a permission error code to the invoker. Depending on the invoker, the result might be a dialog box asking the user for elevated permissions, or it might simply be a permission denied error.</source>
          <target state="translated">В Windows GHC обычно создает файл manifestmanifest при компоновке двоичного файла. Манифест помещается в файл &lt;code&gt;&lt;em&gt;prog&lt;/em&gt;.exe.manifest`&lt;/code&gt; где &amp;laquo;prog.exe &amp;raquo;- это имя исполняемого файла. Файл манифеста в настоящее время служит только одной цели: он отключает &amp;laquo;обнаружение установщика&amp;raquo; в Windows Vista, которое пытается повысить привилегии для исполняемых файлов с определенными именами (например, имена, содержащие &amp;laquo;install&amp;raquo;, &amp;laquo;setup&amp;raquo; или &amp;laquo;patch&amp;raquo;). Без файла манифеста, чтобы отключить обнаружение установщика, попытка запустить исполняемый файл, который Windows считает установщиком, вернет код ошибки разрешения вызывающей стороне. В зависимости от вызывающей стороны результатом может быть диалоговое окно, запрашивающее у пользователя повышенные разрешения, или это может быть просто ошибка отказа в разрешении.</target>
        </trans-unit>
        <trans-unit id="3857f1cd71ad0bc38aa45f3e4c0b66be30d8d39f" translate="yes" xml:space="preserve">
          <source>On Windows, from [1]: &quot;If a file name begins with only a disk designator but not the backslash after the colon, it is interpreted as a relative path to the current directory on the drive with the specified letter.&quot; The current behavior of &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; is to never combine these forms.</source>
          <target state="translated">В Windows, из [1]: &amp;laquo;Если имя файла начинается только с обозначения диска, но не с обратной косой черты после двоеточия, оно интерпретируется как относительный путь к текущему каталогу на диске с указанной буквой&amp;raquo;. В настоящее время &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; никогда не объединяет эти формы.</target>
        </trans-unit>
        <trans-unit id="00fab97cf532bb811e9f99b70b73e208825c5f0f" translate="yes" xml:space="preserve">
          <source>On Windows, from [1]: &quot;If a file name begins with only a disk designator but not the backslash after the colon, it is interpreted as a relative path to the current directory on the drive with the specified letter.&quot; The current behavior of &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; is to never combine these forms.</source>
          <target state="translated">В Windows, из [1]: &amp;laquo;Если имя файла начинается только с обозначения диска, но не с обратной косой черты после двоеточия, оно интерпретируется как относительный путь к текущему каталогу на диске с указанной буквой&amp;raquo;. В настоящее время &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; никогда не объединяет эти формы.</target>
        </trans-unit>
        <trans-unit id="1a1fc027f89a30d75d09af18559914b65d210c7f" translate="yes" xml:space="preserve">
          <source>On Windows, if a filepath starts with a single slash, it is relative to the root of the current drive. In [1], this is (confusingly) referred to as an absolute path. The current behavior of &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; is to never combine these forms.</source>
          <target state="translated">В Windows, если путь к файлу начинается с одной косой черты, он указывается относительно корня текущего диска. В [1] это (что сбивает с толку) называется абсолютным путем. В настоящее время &lt;code&gt;&lt;a href=&quot;system-filepath-posix#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; никогда не объединяет эти формы.</target>
        </trans-unit>
        <trans-unit id="c91c78ad4fae4d53474ef709fdcd0ed43c7ee0a9" translate="yes" xml:space="preserve">
          <source>On Windows, if a filepath starts with a single slash, it is relative to the root of the current drive. In [1], this is (confusingly) referred to as an absolute path. The current behavior of &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; is to never combine these forms.</source>
          <target state="translated">В Windows, если путь к файлу начинается с одной косой черты, он указывается относительно корня текущего диска. В [1] это (что сбивает с толку) называется абсолютным путем. В настоящее время &lt;code&gt;&lt;a href=&quot;system-filepath-windows#v:-60--47--62-&quot;&gt;&amp;lt;/&amp;gt;&lt;/a&gt;&lt;/code&gt; никогда не объединяет эти формы.</target>
        </trans-unit>
        <trans-unit id="4d3e5aee2864678aaa60dea89f1461abcedaa812" translate="yes" xml:space="preserve">
          <source>On Windows, it behaves like the Win32 function &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363851.aspx&quot;&gt;CopyFile&lt;/a&gt;, which copies various kinds of metadata including file attributes and security resource properties.</source>
          <target state="translated">В Windows он ведет себя как функция Win32 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa363851.aspx&quot;&gt;CopyFile&lt;/a&gt; , которая копирует различные виды метаданных, включая атрибуты файлов и свойства ресурсов безопасности.</target>
        </trans-unit>
        <trans-unit id="abd019f889227ae682d9d79f35737ff6a44be1e1" translate="yes" xml:space="preserve">
          <source>On Windows, the &lt;code&gt;&lt;a href=&quot;system-directory#v:writable&quot;&gt;writable&lt;/a&gt;&lt;/code&gt; permission corresponds to the &quot;read-only&quot; attribute. The &lt;code&gt;&lt;a href=&quot;system-directory#v:executable&quot;&gt;executable&lt;/a&gt;&lt;/code&gt; permission is set if the file extension is of an executable file type. The &lt;code&gt;&lt;a href=&quot;system-directory#v:readable&quot;&gt;readable&lt;/a&gt;&lt;/code&gt; permission is always set.</source>
          <target state="translated">В Windows разрешение на &lt;code&gt;&lt;a href=&quot;system-directory#v:writable&quot;&gt;writable&lt;/a&gt;&lt;/code&gt; соответствует атрибуту &amp;laquo;только для чтения&amp;raquo;. &lt;code&gt;&lt;a href=&quot;system-directory#v:executable&quot;&gt;executable&lt;/a&gt;&lt;/code&gt; разрешение устанавливается , если файл имеет расширение исполняемого файла типа. &lt;code&gt;&lt;a href=&quot;system-directory#v:readable&quot;&gt;readable&lt;/a&gt;&lt;/code&gt; разрешение всегда устанавливаются.</target>
        </trans-unit>
        <trans-unit id="a82573349a58df428e5cf8f04f5449302de59c8f" translate="yes" xml:space="preserve">
          <source>On Windows, the &lt;code&gt;^Z&lt;/code&gt; character is interpreted as an end-of-file character, so if you read a file containing this character the file will appear to end just before it. To avoid this, use &lt;code&gt;IOExts.openFileEx&lt;/code&gt; to open a file in binary (untranslated) mode or change an already opened file handle into binary mode using &lt;code&gt;IOExts.hSetBinaryMode&lt;/code&gt;. The &lt;code&gt;IOExts&lt;/code&gt; module is part of the &lt;code&gt;lang&lt;/code&gt; package.</source>
          <target state="translated">В Windows символ &lt;code&gt;^Z&lt;/code&gt; интерпретируется как символ конца файла, поэтому, если вы читаете файл, содержащий этот символ, файл будет казаться заканчивающимся непосредственно перед ним. Чтобы этого избежать, используйте &lt;code&gt;IOExts.openFileEx&lt;/code&gt; для открытия файла в двоичном (непереведенном) режиме или измените дескриптор уже открытого файла в двоичный режим с помощью &lt;code&gt;IOExts.hSetBinaryMode&lt;/code&gt; . Модуль &lt;code&gt;IOExts&lt;/code&gt; является частью пакета &lt;code&gt;lang&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4e0faedb7eb77e9f9303b4aee6bff531c17eba6" translate="yes" xml:space="preserve">
          <source>On Windows, the function is implemented using &lt;code&gt;CreateSymbolicLink&lt;/code&gt; with &lt;code&gt;SYMBOLIC_LINK_FLAG_DIRECTORY&lt;/code&gt;. Since 1.3.3.0, the &lt;code&gt;SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE&lt;/code&gt; flag is also included if supported by the operating system. On POSIX, this is an alias for &lt;code&gt;&lt;a href=&quot;system-directory#v:createFileLink&quot;&gt;createFileLink&lt;/a&gt;&lt;/code&gt; and is therefore atomic.</source>
          <target state="translated">В Windows эта функция реализуется с помощью &lt;code&gt;CreateSymbolicLink&lt;/code&gt; с &lt;code&gt;SYMBOLIC_LINK_FLAG_DIRECTORY&lt;/code&gt; . Начиная с 1.3.3.0, также &lt;code&gt;SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE&lt;/code&gt; флаг SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE, если он поддерживается операционной системой. В POSIX это псевдоним для &lt;code&gt;&lt;a href=&quot;system-directory#v:createFileLink&quot;&gt;createFileLink&lt;/a&gt;&lt;/code&gt; и поэтому является атомарным.</target>
        </trans-unit>
        <trans-unit id="a5bae1c687cf11ec3ed5ad2f9f8ff005ae0b6dfc" translate="yes" xml:space="preserve">
          <source>On Windows, the function is implemented using &lt;code&gt;CreateSymbolicLink&lt;/code&gt;. Since 1.3.3.0, the &lt;code&gt;SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE&lt;/code&gt; flag is included if supported by the operating system. On POSIX, the function uses &lt;code&gt;symlink&lt;/code&gt; and is therefore atomic.</source>
          <target state="translated">В Windows эта функция реализована с помощью &lt;code&gt;CreateSymbolicLink&lt;/code&gt; . Начиная с 1.3.3.0, &lt;code&gt;SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE&lt;/code&gt; флаг SYMBOLIC_LINK_FLAG_ALLOW_UNPRIVILEGED_CREATE, если он поддерживается операционной системой. В POSIX функция использует &lt;code&gt;symlink&lt;/code&gt; и поэтому является атомарной.</target>
        </trans-unit>
        <trans-unit id="e855d866abccd89156106ea9ff5c5937f3c49ead" translate="yes" xml:space="preserve">
          <source>On Windows, the operation fails if &lt;em&gt;dir&lt;/em&gt; is a directory symbolic link.</source>
          <target state="translated">В Windows операция не выполняется, если &lt;em&gt;dir&lt;/em&gt; является символической ссылкой на каталог.</target>
        </trans-unit>
        <trans-unit id="e44cd211b73577bb580283a31fe9e11ec9d0f8fb" translate="yes" xml:space="preserve">
          <source>On Windows, the path is &lt;code&gt;%APPDATA%/&lt;em&gt;&amp;lt;app&amp;gt;&lt;/em&gt;&lt;/code&gt; (e.g. &lt;code&gt;C:/Users/&lt;em&gt;&amp;lt;user&amp;gt;&lt;/em&gt;/AppData/Roaming/&lt;em&gt;&amp;lt;app&amp;gt;&lt;/em&gt;&lt;/code&gt;)</source>
          <target state="translated">В Windows путь - &lt;code&gt;%APPDATA%/&lt;em&gt;&amp;lt;app&amp;gt;&lt;/em&gt;&lt;/code&gt; (например, &lt;code&gt;C:/Users/&lt;em&gt;&amp;lt;user&amp;gt;&lt;/em&gt;/AppData/Roaming/&lt;em&gt;&amp;lt;app&amp;gt;&lt;/em&gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f11f1f05f568d29a8830243c65984fa477970a3c" translate="yes" xml:space="preserve">
          <source>On Windows, the system is queried for a suitable path; a typical path might be &lt;code&gt;C:/Users/&lt;em&gt;&amp;lt;user&amp;gt;&lt;/em&gt;&lt;/code&gt;.</source>
          <target state="translated">В Windows система запрашивает подходящий путь; типичный путь может быть &lt;code&gt;C:/Users/&lt;em&gt;&amp;lt;user&amp;gt;&lt;/em&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3e77adec84060bc903e2e912e15d0de80cff520" translate="yes" xml:space="preserve">
          <source>On Windows, there&amp;rsquo;s a GNU ld/BFD bug whereby it emits bogus PE object files that have more than 0xffff relocations. When GHCi tries to load a package affected by this bug, you get an error message of the form</source>
          <target state="translated">В Windows есть ошибка GNU ld / BFD, из-за которой он генерирует поддельные объектные файлы PE, которые имеют более чем 0xffff перемещений. Когда GHCi пытается загрузить пакет, затронутый этой ошибкой, вы получаете сообщение об ошибке в форме</target>
        </trans-unit>
        <trans-unit id="85e22f23309dbf90a94129f8db64b297cbb2f916" translate="yes" xml:space="preserve">
          <source>On Windows, this &lt;em&gt;only returns the first ocurrence&lt;/em&gt;, if any. Its behavior is therefore equivalent to &lt;code&gt;&lt;a href=&quot;system-directory#v:findExecutable&quot;&gt;findExecutable&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В Windows это &lt;em&gt;возвращает только первое вхождение&lt;/em&gt; , если оно есть. Поэтому его поведение эквивалентно &lt;code&gt;&lt;a href=&quot;system-directory#v:findExecutable&quot;&gt;findExecutable&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da36f078a8e10da6023ea1ab8024e74f1183e975" translate="yes" xml:space="preserve">
          <source>On Windows, this checks for &lt;code&gt;FILE_ATTRIBUTE_REPARSE_POINT&lt;/code&gt;. In addition to symbolic links, the function also returns true on junction points. On POSIX systems, this checks for &lt;code&gt;S_IFLNK&lt;/code&gt;.</source>
          <target state="translated">В Windows это проверяет &lt;code&gt;FILE_ATTRIBUTE_REPARSE_POINT&lt;/code&gt; . Помимо символических ссылок, функция также возвращает значение true в точках соединения. В системах POSIX это проверяет &lt;code&gt;S_IFLNK&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52cfb4329fc32c0d833a61183ba7721cc4129515" translate="yes" xml:space="preserve">
          <source>On Windows, this copies only the read-only attribute.</source>
          <target state="translated">В Windows это копирует только атрибут,доступный только для чтения.</target>
        </trans-unit>
        <trans-unit id="ed105f70828ccfdebad6090636cb8dc84666d5c9" translate="yes" xml:space="preserve">
          <source>On Windows, this encoding *should not* be used if possible because the use of code pages is deprecated: Strings should be retrieved via the &quot;wide&quot; W-family of UTF-16 APIs instead</source>
          <target state="translated">В Windows эта кодировка *shshould не*должна использоваться,если это возможно,потому что использование кодовых страниц устарело:Строки должны извлекаться через &quot;широкое&quot; W-семейство UTF-16 API вместо этого</target>
        </trans-unit>
        <trans-unit id="ac2cd505b24931f86258fdc4d09b1d6d6f31c478" translate="yes" xml:space="preserve">
          <source>On Windows, this is an alias for &lt;code&gt;&lt;a href=&quot;system-directory#v:removeDirectory&quot;&gt;removeDirectory&lt;/a&gt;&lt;/code&gt;. On POSIX systems, this is an alias for &lt;code&gt;&lt;a href=&quot;system-directory#v:removeFile&quot;&gt;removeFile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В Windows это псевдоним &lt;code&gt;&lt;a href=&quot;system-directory#v:removeDirectory&quot;&gt;removeDirectory&lt;/a&gt;&lt;/code&gt; . В системах POSIX это псевдоним для &lt;code&gt;&lt;a href=&quot;system-directory#v:removeFile&quot;&gt;removeFile&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="721f4605ef1d86ca2dde42c37a045d3e3a154879" translate="yes" xml:space="preserve">
          <source>On Windows, this is only capable of changing the &lt;code&gt;&lt;a href=&quot;system-directory#v:writable&quot;&gt;writable&lt;/a&gt;&lt;/code&gt; permission, which corresponds to the &quot;read-only&quot; attribute. Changing the other permissions has no effect.</source>
          <target state="translated">В Windows это позволяет изменить только разрешение на &lt;code&gt;&lt;a href=&quot;system-directory#v:writable&quot;&gt;writable&lt;/a&gt;&lt;/code&gt; , которое соответствует атрибуту &amp;laquo;только для чтения&amp;raquo;. Изменение других разрешений не имеет никакого эффекта.</target>
        </trans-unit>
        <trans-unit id="5b5fedbf70c277d93381f0f283d73b921d80d6e3" translate="yes" xml:space="preserve">
          <source>On Windows, you can access supported code pages with the prefix &lt;code&gt;CP&lt;/code&gt;; for example, &lt;code&gt;&quot;CP1250&quot;&lt;/code&gt;.</source>
          <target state="translated">В Windows вы можете получить доступ к поддерживаемым кодовым страницам с префиксом &lt;code&gt;CP&lt;/code&gt; ; например, &lt;code&gt;&quot;CP1250&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcbabe85dcb1f0f6be8be76732501ee39274fba1" translate="yes" xml:space="preserve">
          <source>On a 64-bit platform it is not always possible to acquire the top 64 bits of the result. Therefore, a recommended implementation is to take the absolute value of both operands, and return 0 iff bits[63:31] of them are zero, since that means that their magnitudes fit within 31 bits, so the magnitude of the product must fit into 62 bits.</source>
          <target state="translated">На 64-битной платформе не всегда удается получить верхние 64 бита результата.Поэтому рекомендуемая реализация-взять абсолютное значение обоих операндов,а возвращаемые 0 iff бит[63:31]из них равны нулю,так как это означает,что их величина укладывается в 31 бит,то есть величина произведения должна укладываться в 62 бита.</target>
        </trans-unit>
        <trans-unit id="ca55a4a165c97ee87021e748a5999af653eb1351" translate="yes" xml:space="preserve">
          <source>On a Core2 Duo 2.20GHz on a 32-bit Linux, the above code takes 1ms to generate the 22'500 bytes long lazy &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt;. Looking again at the definitions above, we see that we took care to avoid intermediate data structures, as otherwise we would sacrifice performance. For example, the following (arguably simpler) definition of &lt;code&gt;renderRow&lt;/code&gt; is about 20% slower.</source>
          <target state="translated">На процессоре Core2 Duo 2,20 ГГц в 32-разрядном Linux приведенный выше код занимает 1 мс для генерации ленивой ByteString длиной &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; 500 байт . Еще раз взглянув на определения выше, мы видим, что мы постарались избежать промежуточных структур данных, иначе мы пожертвуем производительностью. Например, следующее (возможно более простое) определение &lt;code&gt;renderRow&lt;/code&gt; примерно на 20% медленнее.</target>
        </trans-unit>
        <trans-unit id="c8a5a9af1eb8c360fd6ffff320585505f281c939" translate="yes" xml:space="preserve">
          <source>On both reading and writing, the platform's native newline conversion is performed.</source>
          <target state="translated">Как при чтении,так и при записи выполняется преобразование исходной новой строки платформы.</target>
        </trans-unit>
        <trans-unit id="584fe990b6c406c5750b476c119e0a10d54a8c7d" translate="yes" xml:space="preserve">
          <source>On most UNIX platforms it is also possible to build executables that can be &lt;code&gt;dlopen&lt;/code&gt;&amp;lsquo;d like shared libraries using the &lt;a href=&quot;phases#ghc-flag--pie&quot;&gt;&lt;code&gt;-pie&lt;/code&gt;&lt;/a&gt; flag during linking.</source>
          <target state="translated">На большинстве платформ UNIX также можно создавать исполняемые файлы, которые можно &lt;code&gt;dlopen&lt;/code&gt; подобно разделяемым библиотекам, используя флаг &lt;a href=&quot;phases#ghc-flag--pie&quot;&gt; &lt;code&gt;-pie&lt;/code&gt; &lt;/a&gt; во время компоновки.</target>
        </trans-unit>
        <trans-unit id="43e3fc1e854dceae3b55c658433a092145204e78" translate="yes" xml:space="preserve">
          <source>On most UNIX platforms it is also possible to build executables that can be &lt;code&gt;dlopen&lt;/code&gt;&amp;rsquo;d like shared libraries using the &lt;a href=&quot;phases#ghc-flag--pie&quot;&gt;&lt;code&gt;-pie&lt;/code&gt;&lt;/a&gt; flag during linking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3ecb7f7003c5f8586cd3273747fd5240fdd03f" translate="yes" xml:space="preserve">
          <source>On non-Windows platforms, the behavior is equivalent to &lt;code&gt;&lt;a href=&quot;system-directory#v:findExecutablesInDirectories&quot;&gt;findExecutablesInDirectories&lt;/a&gt;&lt;/code&gt; using the search directories from the &lt;code&gt;PATH&lt;/code&gt; environment variable. Details can be found in the documentation of &lt;code&gt;&lt;a href=&quot;system-directory#v:findExecutablesInDirectories&quot;&gt;findExecutablesInDirectories&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">На платформах, отличных от Windows, поведение эквивалентно &lt;code&gt;&lt;a href=&quot;system-directory#v:findExecutablesInDirectories&quot;&gt;findExecutablesInDirectories&lt;/a&gt;&lt;/code&gt; с использованием каталогов поиска из &lt;code&gt;PATH&lt;/code&gt; среды PATH . Подробности можно найти в документации &lt;code&gt;&lt;a href=&quot;system-directory#v:findExecutablesInDirectories&quot;&gt;findExecutablesInDirectories&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fb6c020bc093fa27959e91b43bb2cec678d112f" translate="yes" xml:space="preserve">
          <source>On non-Windows platforms, the behavior is equivalent to &lt;code&gt;&lt;a href=&quot;system-directory#v:findFileWith&quot;&gt;findFileWith&lt;/a&gt;&lt;/code&gt; using the search directories from the &lt;code&gt;PATH&lt;/code&gt; environment variable and testing each file for executable permissions. Details can be found in the documentation of &lt;code&gt;&lt;a href=&quot;system-directory#v:findFileWith&quot;&gt;findFileWith&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">На платформах, отличных от Windows, поведение эквивалентно &lt;code&gt;&lt;a href=&quot;system-directory#v:findFileWith&quot;&gt;findFileWith&lt;/a&gt;&lt;/code&gt; с использованием каталогов поиска из &lt;code&gt;PATH&lt;/code&gt; среды PATH и проверкой каждого файла на наличие разрешений для исполняемых файлов. Подробности можно найти в документации &lt;code&gt;&lt;a href=&quot;system-directory#v:findFileWith&quot;&gt;findFileWith&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8188af56fd6edcf23beb2e9dcf2382a4e4902ffd" translate="yes" xml:space="preserve">
          <source>On program termination, the standard &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stderr&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt; are flushed automatically; any other buffered &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;s need to be flushed manually, otherwise the buffered data will be discarded.</source>
          <target state="translated">По окончанию программы, стандартный &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; сек &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stdout&quot;&gt;stdout&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ghc-io-handle-fd#v:stderr&quot;&gt;stderr&lt;/a&gt;&lt;/code&gt; сбрасываются автоматически; любые другие буферизованные &lt;code&gt;&lt;a href=&quot;ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; необходимо очищать вручную, иначе буферизованные данные будут отброшены.</target>
        </trans-unit>
        <trans-unit id="b458bc64e60c4d81db682d145a7fc32242bb3944" translate="yes" xml:space="preserve">
          <source>On some hosts (e.g. SuSe and Ubuntu Linux) &lt;code&gt;RTLD_NEXT&lt;/code&gt; (and &lt;code&gt;RTLD_DEFAULT&lt;/code&gt;) are not visible without setting the macro &lt;code&gt;_GNU_SOURCE&lt;/code&gt;. Since we don't want to define this macro, you can use the function &lt;code&gt;&lt;a href=&quot;system-posix#v:haveRtldNext&quot;&gt;haveRtldNext&lt;/a&gt;&lt;/code&gt; to check wether the flag &lt;code&gt;&lt;a href=&quot;system-posix#v:Next&quot;&gt;Next&lt;/a&gt;&lt;/code&gt; is available. Ideally, this will be optimized by the compiler so that it should be as efficient as an &lt;code&gt;#ifdef&lt;/code&gt;.</source>
          <target state="translated">На некоторых хостах (например, SuSe и Ubuntu Linux) &lt;code&gt;RTLD_NEXT&lt;/code&gt; (и &lt;code&gt;RTLD_DEFAULT&lt;/code&gt; ) не отображаются без установки макроса &lt;code&gt;_GNU_SOURCE&lt;/code&gt; . Поскольку мы не хотим определять этот макрос, вы можете использовать функцию &lt;code&gt;&lt;a href=&quot;system-posix#v:haveRtldNext&quot;&gt;haveRtldNext&lt;/a&gt;&lt;/code&gt; , чтобы проверить, доступен ли флаг &lt;code&gt;&lt;a href=&quot;system-posix#v:Next&quot;&gt;Next&lt;/a&gt;&lt;/code&gt; . В идеале это будет оптимизировать компилятор, чтобы он был таким же эффективным, как &lt;code&gt;#ifdef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe7652641a4b092db3389c67281410748d6204c1" translate="yes" xml:space="preserve">
          <source>On some hosts (e.g. SuSe and Ubuntu Linux) &lt;code&gt;RTLD_NEXT&lt;/code&gt; (and &lt;code&gt;RTLD_DEFAULT&lt;/code&gt;) are not visible without setting the macro &lt;code&gt;_GNU_SOURCE&lt;/code&gt;. Since we don't want to define this macro, you can use the function &lt;code&gt;&lt;a href=&quot;system-posix-bytestring#v:haveRtldNext&quot;&gt;haveRtldNext&lt;/a&gt;&lt;/code&gt; to check wether the flag &lt;code&gt;&lt;a href=&quot;system-posix-bytestring#v:Next&quot;&gt;Next&lt;/a&gt;&lt;/code&gt; is available. Ideally, this will be optimized by the compiler so that it should be as efficient as an &lt;code&gt;#ifdef&lt;/code&gt;.</source>
          <target state="translated">На некоторых хостах (например, SuSe и Ubuntu Linux) &lt;code&gt;RTLD_NEXT&lt;/code&gt; (и &lt;code&gt;RTLD_DEFAULT&lt;/code&gt; ) не отображаются без установки макроса &lt;code&gt;_GNU_SOURCE&lt;/code&gt; . Поскольку мы не хотим определять этот макрос, вы можете использовать функцию &lt;code&gt;&lt;a href=&quot;system-posix-bytestring#v:haveRtldNext&quot;&gt;haveRtldNext&lt;/a&gt;&lt;/code&gt; , чтобы проверить, доступен ли флаг &lt;code&gt;&lt;a href=&quot;system-posix-bytestring#v:Next&quot;&gt;Next&lt;/a&gt;&lt;/code&gt; . В идеале это будет оптимизировать компилятор, чтобы он был таким же эффективным, как &lt;code&gt;#ifdef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c440936ef0fa8d5c9fb4a5252385fb1aecb976b4" translate="yes" xml:space="preserve">
          <source>On some hosts (e.g. SuSe and Ubuntu Linux) &lt;code&gt;RTLD_NEXT&lt;/code&gt; (and &lt;code&gt;RTLD_DEFAULT&lt;/code&gt;) are not visible without setting the macro &lt;code&gt;_GNU_SOURCE&lt;/code&gt;. Since we don't want to define this macro, you can use the function &lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker-prim#v:haveRtldNext&quot;&gt;haveRtldNext&lt;/a&gt;&lt;/code&gt; to check wether the flag &lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker-prim#v:Next&quot;&gt;Next&lt;/a&gt;&lt;/code&gt; is available. Ideally, this will be optimized by the compiler so that it should be as efficient as an &lt;code&gt;#ifdef&lt;/code&gt;.</source>
          <target state="translated">На некоторых хостах (например, SuSe и Ubuntu Linux) &lt;code&gt;RTLD_NEXT&lt;/code&gt; (и &lt;code&gt;RTLD_DEFAULT&lt;/code&gt; ) не отображаются без установки макроса &lt;code&gt;_GNU_SOURCE&lt;/code&gt; . Поскольку мы не хотим определять этот макрос, вы можете использовать функцию &lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker-prim#v:haveRtldNext&quot;&gt;haveRtldNext&lt;/a&gt;&lt;/code&gt; , чтобы проверить, доступен ли флаг &lt;code&gt;&lt;a href=&quot;system-posix-dynamiclinker-prim#v:Next&quot;&gt;Next&lt;/a&gt;&lt;/code&gt; . В идеале это будет оптимизировать компилятор, чтобы он был таким же эффективным, как &lt;code&gt;#ifdef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15cb1a56421815ce54b1980f31648be5dff8f144" translate="yes" xml:space="preserve">
          <source>On some platforms GHC supports building Haskell code into shared libraries. Shared libraries are also sometimes known as dynamic libraries, in particular on Windows they are referred to as dynamic link libraries (DLLs).</source>
          <target state="translated">На некоторых платформах GHC поддерживает сборку кода Haskell в общие библиотеки.Общие библиотеки также иногда называют динамическими библиотеками,в частности,в Windows их называют динамическими библиотеками ссылок (DLLs).</target>
        </trans-unit>
        <trans-unit id="0d36502b7263f0b4485c96cc36bc155187135ea3" translate="yes" xml:space="preserve">
          <source>On some platforms where PIC is always the case, e.g. x86_64 MacOS X, this flag is enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb8ce4db21a6bb265eeec2e7b65240ba8199bdd" translate="yes" xml:space="preserve">
          <source>On systems with &lt;code&gt;.dll&lt;/code&gt;-style shared libraries, the actual library loaded will be &lt;code&gt;lib.dll&lt;/code&gt;, &lt;code&gt;liblib.dll&lt;/code&gt;. GHCi also has full support for import libraries, either Microsoft style &lt;code&gt;.lib&lt;/code&gt;, or GNU GCC style &lt;code&gt;.a&lt;/code&gt; and &lt;code&gt;.dll.a&lt;/code&gt; libraries. If you have an import library it is advisable to always specify the import libary instead of the &lt;code&gt;.dll&lt;/code&gt;. e.g. use &lt;code&gt;-lgcc` instead of
``-llibgcc_s_seh-1&lt;/code&gt;. Again, GHCi will signal an error if it can&amp;rsquo;t find the library.</source>
          <target state="translated">В системах с разделяемыми библиотеками в стиле &lt;code&gt;.dll&lt;/code&gt; фактически загруженной библиотекой будет &lt;code&gt;lib.dll&lt;/code&gt; , &lt;code&gt;liblib.dll&lt;/code&gt; . GHCi также имеет полную поддержку импорта библиотек, либо в стиле Microsoft &lt;code&gt;.lib&lt;/code&gt; или GNU GCC стиле &lt;code&gt;.a&lt;/code&gt; и &lt;code&gt;.dll.a&lt;/code&gt; библиотеки. Если у вас есть библиотека импорта, рекомендуется всегда указывать библиотеку импорта вместо &lt;code&gt;.dll&lt;/code&gt; . например, используйте &lt;code&gt;-lgcc` instead of ``-llibgcc_s_seh-1&lt;/code&gt; . Опять же, GHCi сообщит об ошибке, если не сможет найти библиотеку.</target>
        </trans-unit>
        <trans-unit id="79878901a3ff26ad9bef6e39ce6be8f5fbd886f1" translate="yes" xml:space="preserve">
          <source>On systems with &lt;code&gt;.so&lt;/code&gt;-style shared libraries, the actual library loaded will the &lt;code&gt;liblib.so&lt;/code&gt;. GHCi searches the following places for libraries, in this order:</source>
          <target state="translated">В системах с разделяемыми библиотеками &lt;code&gt;.so&lt;/code&gt; - стиля фактическая загруженная библиотека будет &lt;code&gt;liblib.so&lt;/code&gt; . GHCi ищет библиотеки в следующих местах в указанном порядке:</target>
        </trans-unit>
        <trans-unit id="0fdf7f76740d047b5e3edd87cc87a6a11d2158f4" translate="yes" xml:space="preserve">
          <source>On the World-Wide Web, there are several URLs of likely interest:</source>
          <target state="translated">Во всемирной паутине есть несколько URL,которые могут представлять интерес:</target>
        </trans-unit>
        <trans-unit id="d05a6ef32800b6777916856b927d4f8bd9b77ba3" translate="yes" xml:space="preserve">
          <source>On the left or right (see &lt;code&gt;f4&lt;/code&gt;, for example) of a function arrow</source>
          <target state="translated">Слева или справа (см. , Например, &lt;code&gt;f4&lt;/code&gt; ) функциональной стрелки</target>
        </trans-unit>
        <trans-unit id="4f305cc5e3cb7028da9ff3cbac52003a8cb62b20" translate="yes" xml:space="preserve">
          <source>On the other hand, a derived &lt;code&gt;Functor&lt;/code&gt; instances for the &lt;code&gt;CovFun&lt;/code&gt;s are within the realm of possibility:</source>
          <target state="translated">С другой стороны, производные экземпляры &lt;code&gt;Functor&lt;/code&gt; для &lt;code&gt;CovFun&lt;/code&gt; находятся в пределах возможного:</target>
        </trans-unit>
        <trans-unit id="a0c7bdbeeec14950364d5eba585fee5f46490af7" translate="yes" xml:space="preserve">
          <source>On the other hand, function &lt;code&gt;g&lt;/code&gt; works fine, because matching against &lt;code&gt;P2&lt;/code&gt; (which wraps the GADT &lt;code&gt;S&lt;/code&gt;) provides the local equality &lt;code&gt;(a~Bool)&lt;/code&gt;. If you were to give an explicit pattern signature &lt;code&gt;P2 :: Bool -&amp;gt; S Bool&lt;/code&gt;, then &lt;code&gt;P2&lt;/code&gt; would become less polymorphic, and would behave exactly like &lt;code&gt;P1&lt;/code&gt; so that &lt;code&gt;g&lt;/code&gt; would then be rejected.</source>
          <target state="translated">С другой стороны, функция &lt;code&gt;g&lt;/code&gt; работает нормально, потому что сопоставление с &lt;code&gt;P2&lt;/code&gt; (которое является оболочкой для GADT &lt;code&gt;S&lt;/code&gt; ) обеспечивает локальное равенство &lt;code&gt;(a~Bool)&lt;/code&gt; . Если бы вы указали явную сигнатуру шаблона &lt;code&gt;P2 :: Bool -&amp;gt; S Bool&lt;/code&gt; , тогда &lt;code&gt;P2&lt;/code&gt; стал бы менее полиморфным и вел бы себя точно так же, как &lt;code&gt;P1&lt;/code&gt; , так что тогда &lt;code&gt;g&lt;/code&gt; будет отклонен.</target>
        </trans-unit>
        <trans-unit id="1c549059d60fda45dc8528cd8c34dd2387420acc" translate="yes" xml:space="preserve">
          <source>On the other hand, type families are exempt from this rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42d363a29721400db631067ea9cb7bd7ce4d4eea" translate="yes" xml:space="preserve">
          <source>On this score, GHC usually does pretty well, especially if you &amp;ldquo;allow&amp;rdquo; it to be off by one or two. In the case of an instance or class declaration, the line number may only point you to the declaration, not to a specific method.</source>
          <target state="translated">В этом отношении GHC обычно работает довольно хорошо, особенно если вы &amp;laquo;позволяете&amp;raquo; ему отключаться на один или два. В случае объявления экземпляра или класса номер строки может указывать только на объявление, а не на конкретный метод.</target>
        </trans-unit>
        <trans-unit id="5ea755dd39d492e55b9e34b0a111d2cfb8276cb3" translate="yes" xml:space="preserve">
          <source>On transcoding errors, an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; exception is thrown. You can use the API in &lt;a href=&quot;data-text-encoding&quot;&gt;Data.Text.Encoding&lt;/a&gt; if you need more control over error handling or transcoding.</source>
          <target state="translated">При ошибках перекодирования &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; исключение IOError. Вы можете использовать API в &lt;a href=&quot;data-text-encoding&quot;&gt;Data.Text.Encoding,&lt;/a&gt; если вам нужен больший контроль над обработкой ошибок или перекодированием.</target>
        </trans-unit>
        <trans-unit id="4b575b6399010d5b474f9a9e19ba9246edb70b03" translate="yes" xml:space="preserve">
          <source>On transcoding errors, an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; exception is thrown. You can use the API in &lt;a href=&quot;data-text-encoding&quot;&gt;Data.Text.Encoding&lt;/a&gt; if you need more control over error handling or transcoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b1aac7c401101a39c4f55a428919092262060c" translate="yes" xml:space="preserve">
          <source>OnDecodeError</source>
          <target state="translated">OnDecodeError</target>
        </trans-unit>
        <trans-unit id="6f666943e43935b64269246162dcf5a1465ea5ff" translate="yes" xml:space="preserve">
          <source>OnEncodeError</source>
          <target state="translated">OnEncodeError</target>
        </trans-unit>
        <trans-unit id="1ec9c77019b9c571c284d11d62850d0be7f7d725" translate="yes" xml:space="preserve">
          <source>OnError</source>
          <target state="translated">OnError</target>
        </trans-unit>
        <trans-unit id="ed0ab25823975d83734fae1b6bd16e05190469eb" translate="yes" xml:space="preserve">
          <source>Once EOF is encountered, the Handle is closed.</source>
          <target state="translated">При столкновении с EOF рукоятка закрывается.</target>
        </trans-unit>
        <trans-unit id="60e264a17495d5948da3fde8b611b62bef7e4a18" translate="yes" xml:space="preserve">
          <source>Once a semi-closed handle becomes closed, the contents of the associated list becomes fixed. The contents of this final list is only partially specified: it will contain at least all the items of the stream that were evaluated prior to the handle becoming closed.</source>
          <target state="translated">Как только полузакрытая ручка закрывается,содержимое соответствующего списка становится фиксированным.Содержимое этого окончательного списка указывается лишь частично:оно будет содержать,по крайней мере,все элементы потока,которые были оценены до того,как хэндл станет закрытым.</target>
        </trans-unit>
        <trans-unit id="6cef81242bdb3dd15794848f47ffe89e35f13fea" translate="yes" xml:space="preserve">
          <source>Once again, the profiling facilities (&lt;a href=&quot;profiling#profiling&quot;&gt;Profiling&lt;/a&gt;) are the basic tool for demystifying the space behaviour of your program.</source>
          <target state="translated">Еще раз, средства профилирования ( &lt;a href=&quot;profiling#profiling&quot;&gt;Profiling&lt;/a&gt; ) - это основной инструмент для демистификации пространственного поведения вашей программы.</target>
        </trans-unit>
        <trans-unit id="315e28f14a5749001346c76c600fc06cf79ac069" translate="yes" xml:space="preserve">
          <source>Once the user declares type family to be injective GHC must verify that this declaration is correct, i.e., that type family equations don&amp;rsquo;t violate the injectivity annotation. A general idea is that if at least one equation (bullets (1), (2) and (3) below) or a pair of equations (bullets (4) and (5) below) violates the injectivity annotation then a type family is not injective in a way the user claims and an error is reported. In the bullets below &lt;em&gt;RHS&lt;/em&gt; refers to the right-hand side of the type family equation being checked for injectivity. &lt;em&gt;LHS&lt;/em&gt; refers to the arguments of that type family equation. Below are the rules followed when checking injectivity of a type family:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc00d55d5cade6b9732f3047fd68f9150e53462" translate="yes" xml:space="preserve">
          <source>Once the user declares type family to be injective GHC must verify that this declaration is correct, ie. type family equations don&amp;rsquo;t violate the injectivity annotation. A general idea is that if at least one equation (bullets (1), (2) and (3) below) or a pair of equations (bullets (4) and (5) below) violates the injectivity annotation then a type family is not injective in a way user claims and an error is reported. In the bullets below &lt;em&gt;RHS&lt;/em&gt; refers to the right-hand side of the type family equation being checked for injectivity. &lt;em&gt;LHS&lt;/em&gt; refers to the arguments of that type family equation. Below are the rules followed when checking injectivity of a type family:</source>
          <target state="translated">Как только пользователь объявляет семейство типов инъективным, GHC должен проверить правильность этого объявления, т.е. уравнения семейства типов не нарушают аннотацию приемистости. Общая идея состоит в том, что если хотя бы одно уравнение (пункты (1), (2) и (3) ниже) или пара уравнений (пункты (4) и (5) ниже) нарушают аннотацию инъективности, то семейство типов является не является инъективным в том смысле, в каком заявляет пользователь, и сообщается об ошибке. В маркированных &lt;em&gt;списках&lt;/em&gt; ниже &lt;em&gt;RHS&lt;/em&gt; относится к правой части уравнения семейства типов, проверяемой на приемистость. &lt;em&gt;LHS&lt;/em&gt; ссылается на аргументы уравнения семейства этого типа. Ниже приведены правила, которым следуют при проверке приемистости семейства типов:</target>
        </trans-unit>
        <trans-unit id="c50b67bca5fb4c6603a23fdfb82c3d73e171c099" translate="yes" xml:space="preserve">
          <source>Once you have a library of GHCi macros, you may want to source them from separate files, or you may want to source your &lt;code&gt;.ghci&lt;/code&gt; file into your running GHCi session while debugging it</source>
          <target state="translated">Если у вас есть библиотека макросов GHCi, вы можете захотеть получить их из отдельных файлов, или вы можете захотеть &lt;code&gt;.ghci&lt;/code&gt; свой файл .ghci в ваш запущенный сеанс GHCi во время его отладки.</target>
        </trans-unit>
        <trans-unit id="6e7e950f611ffeefb5dc8da946a455d9ce68ff45" translate="yes" xml:space="preserve">
          <source>Once you know the producer or the type of the heap in the drag or void states, the next step is usually to find the retainer(s):</source>
          <target state="translated">Как только вы узнаете производителя или тип кучи в состоянии перетаскивания или пустоты,следующим шагом обычно является поиск фиксатора (фиксаторов):</target>
        </trans-unit>
        <trans-unit id="68e926d9c748359a8152a413a626288e329b3079" translate="yes" xml:space="preserve">
          <source>One can then use functions from &lt;code&gt;GHC.Stack&lt;/code&gt; to inspect or pretty print (as is done in &lt;code&gt;f&lt;/code&gt; below) the call stack.</source>
          <target state="translated">Затем можно использовать функции из &lt;code&gt;GHC.Stack&lt;/code&gt; для проверки или красивой печати (как это сделано в &lt;code&gt;f&lt;/code&gt; ниже) стека вызовов.</target>
        </trans-unit>
        <trans-unit id="4023758f19beece83257d349668ba73b4a5f55d3" translate="yes" xml:space="preserve">
          <source>One can think of this instance being implemented with the same code as the &lt;code&gt;Num Int&lt;/code&gt; instance, but with &lt;code&gt;Dollars&lt;/code&gt; and &lt;code&gt;getDollars&lt;/code&gt; added wherever necessary in order to make it typecheck. (In practice, GHC uses a somewhat different approach to code generation. See the &lt;a href=&quot;#precise-gnd-specification&quot;&gt;A more precise specification&lt;/a&gt; section below for more details.)</source>
          <target state="translated">Можно представить, что этот экземпляр реализуется с тем же кодом, что и экземпляр &lt;code&gt;Num Int&lt;/code&gt; , но с добавлением &lt;code&gt;Dollars&lt;/code&gt; и &lt;code&gt;getDollars&lt;/code&gt; , где это необходимо, для проверки типов. (На практике GHC использует несколько иной подход к генерации кода. &lt;a href=&quot;#precise-gnd-specification&quot;&gt;Более подробную информацию&lt;/a&gt; см. В разделе &amp;laquo; Более точная спецификация &amp;raquo; ниже.)</target>
        </trans-unit>
        <trans-unit id="9743b7636df84ead47845f240cbbd477f19f70e0" translate="yes" xml:space="preserve">
          <source>One can use &lt;code&gt;&lt;a href=&quot;data-maybe#v:maybeToList&quot;&gt;maybeToList&lt;/a&gt;&lt;/code&gt; to avoid pattern matching when combined with a function that (safely) works on lists:</source>
          <target state="translated">Можно использовать &lt;code&gt;&lt;a href=&quot;data-maybe#v:maybeToList&quot;&gt;maybeToList&lt;/a&gt;&lt;/code&gt; чтобы избежать сопоставления с образцом в сочетании с функцией, которая (безопасно) работает со списками:</target>
        </trans-unit>
        <trans-unit id="4ec55bf61d8ab5d04d04ebcb2ee2159a392ea14e" translate="yes" xml:space="preserve">
          <source>One can use &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:maybeToList&quot;&gt;maybeToList&lt;/a&gt;&lt;/code&gt; to avoid pattern matching when combined with a function that (safely) works on lists:</source>
          <target state="translated">Можно использовать &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:maybeToList&quot;&gt;maybeToList&lt;/a&gt;&lt;/code&gt; чтобы избежать сопоставления с образцом в сочетании с функцией, которая (безопасно) работает со списками:</target>
        </trans-unit>
        <trans-unit id="c3d9ffa5463e1c26285c5e33a8e8a9504fd92ef8" translate="yes" xml:space="preserve">
          <source>One can write data types with no constructors using the &lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt;&lt;code&gt;-XEmptyDataDecls&lt;/code&gt;&lt;/a&gt; flag (see &lt;a href=&quot;#nullary-types&quot;&gt;Data types with no constructors&lt;/a&gt;), which is on by default in Haskell 2010. What is not on by default is the ability to derive type class instances for these types. This ability is enabled through use of the &lt;a href=&quot;#ghc-flag--XEmptyDataDeriving&quot;&gt;&lt;code&gt;-XEmptyDataDeriving&lt;/code&gt;&lt;/a&gt; flag. For instance, this lets one write:</source>
          <target state="translated">Типы данных можно записывать без конструкторов, используя флаг &lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt; &lt;code&gt;-XEmptyDataDecls&lt;/code&gt; &lt;/a&gt; (см. &lt;a href=&quot;#nullary-types&quot;&gt;Типы данных без конструкторов&lt;/a&gt; ), который включен по умолчанию в Haskell 2010. По умолчанию не включена возможность наследовать экземпляры классов типов для этих типов. Эта возможность включается с помощью флага &lt;a href=&quot;#ghc-flag--XEmptyDataDeriving&quot;&gt; &lt;code&gt;-XEmptyDataDeriving&lt;/code&gt; &lt;/a&gt; . Например, это позволяет писать:</target>
        </trans-unit>
        <trans-unit id="7322eb1a388043bfc4b465ffeaf47b177b19e690" translate="yes" xml:space="preserve">
          <source>One can write data types with no constructors using the &lt;a href=&quot;#extension-EmptyDataDecls&quot;&gt;&lt;code&gt;EmptyDataDecls&lt;/code&gt;&lt;/a&gt; flag (see &lt;a href=&quot;#nullary-types&quot;&gt;Data types with no constructors&lt;/a&gt;), which is on by default in Haskell 2010. What is not on by default is the ability to derive type class instances for these types. This ability is enabled through use of the &lt;a href=&quot;#extension-EmptyDataDeriving&quot;&gt;&lt;code&gt;EmptyDataDeriving&lt;/code&gt;&lt;/a&gt; flag. For instance, this lets one write:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d496c6b9647ae6150efda24096b39fcf9eb1a86" translate="yes" xml:space="preserve">
          <source>One consequence of the way that GHCi follows dependencies to find modules to load is that every module must have a source file. The only exception to the rule is modules that come from a package, including the &lt;code&gt;Prelude&lt;/code&gt; and standard libraries such as &lt;code&gt;IO&lt;/code&gt; and &lt;code&gt;Complex&lt;/code&gt;. If you attempt to load a module for which GHCi can&amp;rsquo;t find a source file, even if there are object and interface files for the module, you&amp;rsquo;ll get an error message.</source>
          <target state="translated">Одним из следствий того, как GHCi следует зависимостям для поиска модулей для загрузки, является то, что каждый модуль должен иметь исходный файл. Единственным исключением из правила являются модули, которые поступают из пакета, включая &lt;code&gt;Prelude&lt;/code&gt; и стандартные библиотеки, такие как &lt;code&gt;IO&lt;/code&gt; и &lt;code&gt;Complex&lt;/code&gt; . Если вы попытаетесь загрузить модуль, для которого GHCi не может найти исходный файл, даже если для модуля есть объектные и интерфейсные файлы, вы получите сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="5483c77e4f829cc17d6601c4ac4404068ce5302b" translate="yes" xml:space="preserve">
          <source>One could either pick the &lt;code&gt;DeriveAnyClass&lt;/code&gt; approach to deriving &lt;code&gt;C&lt;/code&gt; or the &lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt; approach to deriving &lt;code&gt;C&lt;/code&gt;, both of which would be equally as valid. GHC defaults to favoring &lt;code&gt;DeriveAnyClass&lt;/code&gt; in such a dispute, but this is not a satisfying solution, since that leaves users unable to use both language extensions in a single module.</source>
          <target state="translated">Можно либо выбрать подход &lt;code&gt;DeriveAnyClass&lt;/code&gt; для получения &lt;code&gt;C&lt;/code&gt; , либо подход &lt;code&gt;GeneralizedNewtypeDeriving&lt;/code&gt; для получения &lt;code&gt;C&lt;/code&gt; , оба из которых будут одинаково допустимы. По умолчанию GHC &lt;code&gt;DeriveAnyClass&lt;/code&gt; предпочтение DeriveAnyClass в таком споре, но это не удовлетворительное решение, так как это не позволяет пользователям использовать оба языковых расширения в одном модуле.</target>
        </trans-unit>
        <trans-unit id="07da619a058ee72f68e35cbedda9fed2d2008eeb" translate="yes" xml:space="preserve">
          <source>One day in &lt;code&gt;&lt;a href=&quot;data-time-clock#t:NominalDiffTime&quot;&gt;NominalDiffTime&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Один день в &lt;code&gt;&lt;a href=&quot;data-time-clock#t:NominalDiffTime&quot;&gt;NominalDiffTime&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d64ec6630f50a5fa3cc17dae6e273e1017ecb35" translate="yes" xml:space="preserve">
          <source>One equation of a type family instance or closed type family. The arguments are the left-hand-side type and the right-hand-side result.</source>
          <target state="translated">Одно уравнение экземпляра семейства типа или семейства закрытого типа.Аргументами являются левый тип и правый результат.</target>
        </trans-unit>
        <trans-unit id="8ad7e9507f922f5c3971e0839b353cb5b01d4c7f" translate="yes" xml:space="preserve">
          <source>One final note: the &lt;code&gt;aaaa&lt;/code&gt;&lt;code&gt;bbbb&lt;/code&gt; example may not work too well on GHC (see Scheduling, above), due to the locking on a &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. Only one thread may hold the lock on a &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; at any one time, so if a reschedule happens while a thread is holding the lock, the other thread won't be able to run. The upshot is that the switch from &lt;code&gt;aaaa&lt;/code&gt; to &lt;code&gt;bbbbb&lt;/code&gt; happens infrequently. It can be improved by lowering the reschedule tick period. We also have a patch that causes a reschedule whenever a thread waiting on a lock is woken up, but haven't found it to be useful for anything other than this example :-)</source>
          <target state="translated">И последнее замечание: пример &lt;code&gt;aaaa&lt;/code&gt; &lt;code&gt;bbbb&lt;/code&gt; может не слишком хорошо работать на GHC (см. Планирование выше) из-за блокировки &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . Только один поток может удерживать блокировку &lt;code&gt;&lt;a href=&quot;system-io#v:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; в любой момент времени, поэтому, если перепланирование произойдет, когда поток удерживает блокировку, другой поток не сможет работать. В результате переключение с &lt;code&gt;aaaa&lt;/code&gt; на &lt;code&gt;bbbbb&lt;/code&gt; происходит нечасто. Его можно улучшить, уменьшив период тика перепланирования. У нас также есть патч, который вызывает перепланирование всякий раз, когда поток, ожидающий блокировки, просыпается, но мы не нашли его полезным ни для чего, кроме этого примера :-)</target>
        </trans-unit>
        <trans-unit id="cca5d9a52684589d02fe67865e293c54351f48de" translate="yes" xml:space="preserve">
          <source>One of the motivating examples was the ability to register compiler hooks from a plugin. For example, one might want to modify the way Template Haskell code is executed. This is achievable by updating the &lt;code&gt;hooks&lt;/code&gt; field of the &lt;code&gt;DynFlags&lt;/code&gt; type, recording our custom &amp;ldquo;meta hook&amp;rdquo; in the right place. A simple application of this idea can be seen below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ea55d691054154f178c4188946d4c03f7e9c26" translate="yes" xml:space="preserve">
          <source>One of these new quantified constraints can appear anywhere that any other constraint can, not just in instance declarations. Notably, it can appear in a type signature for a value binding, data constructor, or expression. For example</source>
          <target state="translated">Одно из этих новых количественных ограничений может появиться где угодно,а не только в декларациях.Примечательно,что оно может появиться в сигнатуре типа для привязки значения,конструкторе данных или выражении.Например</target>
        </trans-unit>
        <trans-unit id="61fc274a467ee7617c4b73c08349e4d3c37da810" translate="yes" xml:space="preserve">
          <source>One or more.</source>
          <target state="translated">Один или несколько.</target>
        </trans-unit>
        <trans-unit id="4b9e1cd86b2ee828fde7016484a1c36fb1da2c89" translate="yes" xml:space="preserve">
          <source>One or none.</source>
          <target state="translated">Один или ни одного.</target>
        </trans-unit>
        <trans-unit id="2e17f5233f1634abadabdb2fd410bbc1afa1bc70" translate="yes" xml:space="preserve">
          <source>One simplification allowed by combining types and kinds is that the type of &lt;code&gt;Type&lt;/code&gt; is just &lt;code&gt;Type&lt;/code&gt;. It is true that the &lt;code&gt;Type :: Type&lt;/code&gt; axiom can lead to non-termination, but this is not a problem in GHC, as we already have other means of non-terminating programs in both types and expressions. This decision (among many, many others) &lt;em&gt;does&lt;/em&gt; mean that despite the expressiveness of GHC&amp;rsquo;s type system, a &amp;ldquo;proof&amp;rdquo; you write in Haskell is not an irrefutable mathematical proof. GHC promises only partial correctness, that if your programs compile and run to completion, their results indeed have the types assigned. It makes no claim about programs that do not finish in a finite amount of time.</source>
          <target state="translated">Одно упрощение, допускаемое объединением типов и видов, заключается в том, что тип &lt;code&gt;Type&lt;/code&gt; - это просто &lt;code&gt;Type&lt;/code&gt; . Верно, что аксиома &lt;code&gt;Type :: Type&lt;/code&gt; может вести к незавершению, но это не проблема GHC, поскольку у нас уже есть другие средства незавершения программ как в типах, так и в выражениях. Это решение (среди многих, многих других) &lt;em&gt;действительно&lt;/em&gt; означает, что, несмотря на выразительность системы типов GHC, &amp;laquo;доказательство&amp;raquo;, которое вы пишете на Haskell, не является неопровержимым математическим доказательством. GHC обещает лишь частичную корректность, так как если ваши программы компилируются и выполняются до завершения, их результатам действительно будут присвоены типы. Он не делает никаких заявлений о программах, которые не заканчиваются за конечное время.</target>
        </trans-unit>
        <trans-unit id="04e45da5d15f7b84f75303b148b0c58446719a7a" translate="yes" xml:space="preserve">
          <source>One solution would be to represent an occurrence of &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;/code&gt; with 'Rec0 Int' instead. With this approach, however, the programmer has no way of knowing whether the &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; is actually an &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;/code&gt; in disguise.</source>
          <target state="translated">Одним из решений было бы вместо этого представить вхождение &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;/code&gt; с помощью 'Rec0 Int'. Однако при таком подходе программист не имеет возможности узнать, является ли &lt;code&gt;&lt;a href=&quot;data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; на самом деле замаскированным &lt;code&gt;&lt;a href=&quot;ghc-exts#t:Int-35-&quot;&gt;Int#&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71086252ab12cdaa049eefe6701cf95f5fcaa5cf" translate="yes" xml:space="preserve">
          <source>One stylistic reason for wanting to write a type signature is simple documentation. Another is that you may want to bring scoped type variables into scope. For example:</source>
          <target state="translated">Одной из стилистических причин желания написать сигнатуру типа является простая документация.Другая причина заключается в том,что вы можете захотеть ввести в область видимости переменные типа scoped.Например:</target>
        </trans-unit>
        <trans-unit id="45133c20fc7ccdca10220b7b14632f7d9475ba07" translate="yes" xml:space="preserve">
          <source>One time when &lt;code&gt;Float&lt;/code&gt; might be a good idea is if you have a &lt;em&gt;lot&lt;/em&gt; of them, say a giant array of &lt;code&gt;Float&lt;/code&gt;s. They take up half the space in the heap compared to &lt;code&gt;Doubles&lt;/code&gt;. However, this isn&amp;rsquo;t true on a 64-bit machine.</source>
          <target state="translated">Один раз, когда &lt;code&gt;Float&lt;/code&gt; может быть хорошей идеей, - это если у вас их &lt;em&gt;много&lt;/em&gt; , скажем, гигантский массив &lt;code&gt;Float&lt;/code&gt; . Они занимают в куче вдвое меньше места по сравнению с &lt;code&gt;Doubles&lt;/code&gt; . Однако на 64-битной машине это не так.</target>
        </trans-unit>
        <trans-unit id="a12bfceb7507e74d1f52bf5268e41928d787ee56" translate="yes" xml:space="preserve">
          <source>One way out is to define an extended &lt;code&gt;assert&lt;/code&gt; function which also takes a descriptive string to include in the error message and perhaps combine this with the use of a pre-processor which inserts the source location where &lt;code&gt;assert&lt;/code&gt; was used.</source>
          <target state="translated">Один из выходов - определить расширенную функцию &lt;code&gt;assert&lt;/code&gt; , которая также принимает описательную строку для включения в сообщение об ошибке и, возможно, объединяет это с использованием препроцессора, который вставляет исходное местоположение, в котором использовалось &lt;code&gt;assert&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc58693ff257f4600136a2111c4960ba6926b129" translate="yes" xml:space="preserve">
          <source>One way to do this is to create a &lt;code&gt;foreign export&lt;/code&gt; that will do whatever needs to be done to wake up the Haskell thread - perhaps &lt;code&gt;putMVar&lt;/code&gt; - and then call this from our C callback. There are a couple of problems with this:</source>
          <target state="translated">Один из способов сделать это - создать &lt;code&gt;foreign export&lt;/code&gt; который будет делать все необходимое для пробуждения потока Haskell - возможно, &lt;code&gt;putMVar&lt;/code&gt; - а затем вызывать его из нашего обратного вызова C. С этим есть пара проблем:</target>
        </trans-unit>
        <trans-unit id="896496c9fe69e79ba2c5e72301d3696844b503d6" translate="yes" xml:space="preserve">
          <source>One way to use &lt;code&gt;INLINABLE&lt;/code&gt; is in conjunction with the special function &lt;code&gt;inline&lt;/code&gt; (&lt;a href=&quot;#special-ids&quot;&gt;Special built-in functions&lt;/a&gt;). The call &lt;code&gt;inline f&lt;/code&gt; tries very hard to inline &lt;code&gt;f&lt;/code&gt;. To make sure that &lt;code&gt;f&lt;/code&gt; can be inlined, it is a good idea to mark the definition of &lt;code&gt;f&lt;/code&gt; as &lt;code&gt;INLINABLE&lt;/code&gt;, so that GHC guarantees to expose an unfolding regardless of how big it is. Moreover, by annotating &lt;code&gt;f&lt;/code&gt; as &lt;code&gt;INLINABLE&lt;/code&gt;, you ensure that &lt;code&gt;f&lt;/code&gt;&amp;lsquo;s original RHS is inlined, rather than whatever random optimised version of &lt;code&gt;f&lt;/code&gt; GHC&amp;rsquo;s optimiser has produced.</source>
          <target state="translated">Один из способов использования &lt;code&gt;INLINABLE&lt;/code&gt; - это сочетание со специальной &lt;code&gt;inline&lt;/code&gt; функцией ( &lt;a href=&quot;#special-ids&quot;&gt;специальные встроенные функции&lt;/a&gt; ). Вызов &lt;code&gt;inline f&lt;/code&gt; очень старается встроить &lt;code&gt;f&lt;/code&gt; . Чтобы убедиться, что &lt;code&gt;f&lt;/code&gt; может быть встроен, рекомендуется пометить определение &lt;code&gt;f&lt;/code&gt; как &lt;code&gt;INLINABLE&lt;/code&gt; , чтобы GHC гарантировал раскрытие развертывания независимо от его размера. Более того, &lt;code&gt;INLINABLE&lt;/code&gt; &lt;code&gt;f&lt;/code&gt; как INLINABLE , вы гарантируете, что исходная RHS &lt;code&gt;f&lt;/code&gt; является встроенной, а не любая произвольная оптимизированная версия оптимизатора &lt;code&gt;f&lt;/code&gt; GHC.</target>
        </trans-unit>
        <trans-unit id="e1ca150617a20c94c6d991df08ea7fec8c13f698" translate="yes" xml:space="preserve">
          <source>One way to use &lt;code&gt;INLINABLE&lt;/code&gt; is in conjunction with the special function &lt;code&gt;inline&lt;/code&gt; (&lt;a href=&quot;#special-ids&quot;&gt;Special built-in functions&lt;/a&gt;). The call &lt;code&gt;inline f&lt;/code&gt; tries very hard to inline &lt;code&gt;f&lt;/code&gt;. To make sure that &lt;code&gt;f&lt;/code&gt; can be inlined, it is a good idea to mark the definition of &lt;code&gt;f&lt;/code&gt; as &lt;code&gt;INLINABLE&lt;/code&gt;, so that GHC guarantees to expose an unfolding regardless of how big it is. Moreover, by annotating &lt;code&gt;f&lt;/code&gt; as &lt;code&gt;INLINABLE&lt;/code&gt;, you ensure that &lt;code&gt;f&lt;/code&gt;&amp;rsquo;s original RHS is inlined, rather than whatever random optimised version of &lt;code&gt;f&lt;/code&gt; GHC&amp;rsquo;s optimiser has produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dba5747f4551a506f4292cb3c2030f7b24af891" translate="yes" xml:space="preserve">
          <source>One way to use this flag is to set a breakpoint on &lt;code&gt;LongGCSync()&lt;/code&gt; in the debugger, and find the thread that is delaying the sync. You probably want to use &lt;a href=&quot;debug-info#ghc-flag--g&quot;&gt;&lt;code&gt;-g&lt;/code&gt;&lt;/a&gt; to provide more info to the debugger.</source>
          <target state="translated">Один из способов использования этого флага - установить &lt;code&gt;LongGCSync()&lt;/code&gt; останова на LongGCSync () в отладчике и найти поток, который задерживает синхронизацию. Возможно, вы захотите использовать &lt;a href=&quot;debug-info#ghc-flag--g&quot;&gt; &lt;code&gt;-g&lt;/code&gt; ,&lt;/a&gt; чтобы предоставить отладчику дополнительную информацию.</target>
        </trans-unit>
        <trans-unit id="d2c680b63b6bef62589b5937a565537e66960d46" translate="yes" xml:space="preserve">
          <source>One workaround is to use the &lt;a href=&quot;using#ghc-flag--msse2&quot;&gt;&lt;code&gt;-msse2&lt;/code&gt;&lt;/a&gt; option (see &lt;a href=&quot;using#options-platform&quot;&gt;Platform-specific Flags&lt;/a&gt;), which generates code to use the SSE2 instruction set instead of the x87 instruction set. SSE2 code uses the correct precision for all floating-point operations, and so gives deterministic results. However, note that this only works with processors that support SSE2 (Intel Pentium 4 or AMD Athlon 64 and later), which is why the option is not enabled by default. The libraries that come with GHC are probably built without this option, unless you built GHC yourself.</source>
          <target state="translated">Один из обходных путей - использовать параметр &lt;a href=&quot;using#ghc-flag--msse2&quot;&gt; &lt;code&gt;-msse2&lt;/code&gt; &lt;/a&gt; (см. &lt;a href=&quot;using#options-platform&quot;&gt;Флаги, специфичные для платформы&lt;/a&gt; ), который генерирует код для использования набора инструкций SSE2 вместо набора инструкций x87. Код SSE2 использует правильную точность для всех операций с плавающей запятой и поэтому дает детерминированные результаты. Однако обратите внимание, что это работает только с процессорами, поддерживающими SSE2 (Intel Pentium 4 или AMD Athlon 64 и более поздние версии), поэтому по умолчанию этот параметр не включен. Библиотеки, поставляемые с GHC, вероятно, построены без этой опции, если вы не создали GHC самостоятельно.</target>
        </trans-unit>
        <trans-unit id="1dfc86abc6a3fb1a97eebda069c8175f292ebd73" translate="yes" xml:space="preserve">
          <source>OneLineGCStats</source>
          <target state="translated">OneLineGCStats</target>
        </trans-unit>
        <trans-unit id="927d5cf27de83f9a93bc0c43d5e9992d0e575568" translate="yes" xml:space="preserve">
          <source>OneLineMode</source>
          <target state="translated">OneLineMode</target>
        </trans-unit>
        <trans-unit id="293e0ad51fda89c714a301db9fbb3d1d9e6c34d7" translate="yes" xml:space="preserve">
          <source>OneShot</source>
          <target state="translated">OneShot</target>
        </trans-unit>
        <trans-unit id="92340949cbfd5f6b38df2be19df951ad335baa8c" translate="yes" xml:space="preserve">
          <source>Only &lt;em&gt;dynamic&lt;/em&gt; flags can be used in an &lt;code&gt;OPTIONS_GHC&lt;/code&gt; pragma (see &lt;a href=&quot;#mode-dynamic-flags&quot;&gt;Dynamic and Mode options&lt;/a&gt;).</source>
          <target state="translated">В &lt;code&gt;OPTIONS_GHC&lt;/code&gt; можно использовать только &lt;em&gt;динамические&lt;/em&gt; флаги (см. Параметры &lt;a href=&quot;#mode-dynamic-flags&quot;&gt;Dynamic и Mode&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5805ff05f15235a01101ac5b0cf4fe9284ddd19e" translate="yes" xml:space="preserve">
          <source>Only a subset of &lt;code&gt;.hsc&lt;/code&gt; syntax is supported by &lt;code&gt;--cross-compile&lt;/code&gt;. The following are unsupported:</source>
          <target state="translated">Только часть &lt;code&gt;.hsc&lt;/code&gt; синтаксиса поддерживается &lt;code&gt;--cross-compile&lt;/code&gt; . Следующее не поддерживается:</target>
        </trans-unit>
        <trans-unit id="c0c7ea9b4b424e7701e19b198d45f22f5ddc88ca" translate="yes" xml:space="preserve">
          <source>Only defined for &lt;code&gt;base-4.7.0.0&lt;/code&gt; and later</source>
          <target state="translated">Определен только для &lt;code&gt;base-4.7.0.0&lt;/code&gt; и новее</target>
        </trans-unit>
        <trans-unit id="4a596037bffe0627dd076aba851bf6d728006681" translate="yes" xml:space="preserve">
          <source>Only defined when &lt;code&gt;-fllvm&lt;/code&gt; is specified. When GHC is using version &lt;code&gt;x.y.z&lt;/code&gt; of LLVM, the value of &lt;code&gt;__GLASGOW_HASKELL_LLVM__&lt;/code&gt; is the integer ⟨xyy⟩ (if ⟨y⟩ is a single digit, then a leading zero is added, so for example when using version 3.7 of LLVM, &lt;code&gt;__GLASGOW_HASKELL_LLVM__==307&lt;/code&gt;).</source>
          <target state="translated">Определяется только при &lt;code&gt;-fllvm&lt;/code&gt; . Когда GHC использует версию &lt;code&gt;x.y.z&lt;/code&gt; LLVM, значение &lt;code&gt;__GLASGOW_HASKELL_LLVM__&lt;/code&gt; является целым числом ⟨xyy⟩ (если ⟨y⟩ - однозначная цифра, то добавляется начальный ноль, поэтому, например, при использовании LLVM версии 3.7, &lt;code&gt;__GLASGOW_HASKELL_LLVM__==307&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="77501c9a6b02892b95f0d3d080f47d0f67625a4e" translate="yes" xml:space="preserve">
          <source>Only defined when &lt;code&gt;-parallel&lt;/code&gt; is in use! This symbol is defined when pre-processing Haskell (input) and pre-processing C (GHC output).</source>
          <target state="translated">Определяется только при использовании &lt;code&gt;-parallel&lt;/code&gt; ! Этот символ определяется при предварительной обработке Haskell (ввод) и предварительной обработке C (вывод GHC).</target>
        </trans-unit>
        <trans-unit id="7ff1cf96778de3d5827e74815c075270e8782040" translate="yes" xml:space="preserve">
          <source>Only one of the two class parameters is a parameter to the data family. Hence, the following instance declaration is invalid:</source>
          <target state="translated">Только один из двух параметров класса является параметром семейства данных.Поэтому следующее объявление экземпляра является недействительным:</target>
        </trans-unit>
        <trans-unit id="2721baf97a0c4efdd138d61549b8c89209e4143c" translate="yes" xml:space="preserve">
          <source>Only the instance head counts. In the example above, it is not good enough for &lt;code&gt;C&lt;/code&gt;&amp;lsquo;s declaration to be in module &lt;code&gt;A&lt;/code&gt;; it must be the declaration of &lt;code&gt;D&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">Учитывается только голова экземпляра. В приведенном выше примере недостаточно, чтобы объявление &lt;code&gt;C&lt;/code&gt; было в модуле &lt;code&gt;A&lt;/code&gt; ; она должна быть декларация &lt;code&gt;D&lt;/code&gt; или &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c3f07cc6d0c90bb9379747728c0148950cf6bc3" translate="yes" xml:space="preserve">
          <source>Only the instance head counts. In the example above, it is not good enough for &lt;code&gt;C&lt;/code&gt;&amp;rsquo;s declaration to be in module &lt;code&gt;A&lt;/code&gt;; it must be the declaration of &lt;code&gt;D&lt;/code&gt; or &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7998f0bdcbff51167fe5e1c42e1067cc0272867" translate="yes" xml:space="preserve">
          <source>Only the outer constructor is taken into consideration:</source>
          <target state="translated">Учитывается только внешний конструктор:</target>
        </trans-unit>
        <trans-unit id="868f341dfb14a799178bbe260757188c4e090543" translate="yes" xml:space="preserve">
          <source>Only used internally</source>
          <target state="translated">Используется только для внутренних нужд</target>
        </trans-unit>
        <trans-unit id="1e5c03c4ca5dbc17c5a6129ff8dbe16f01a71ebd" translate="yes" xml:space="preserve">
          <source>Op</source>
          <target state="translated">Op</target>
        </trans-unit>
        <trans-unit id="c637aebe3a2825fb1f2be997a9434f3ce48a4b93" translate="yes" xml:space="preserve">
          <source>Opaque</source>
          <target state="translated">Opaque</target>
        </trans-unit>
        <trans-unit id="ab610cf3766e2ab5ebbdef1c372c6423bceb9405" translate="yes" xml:space="preserve">
          <source>Open a file and make an &lt;code&gt;&lt;a href=&quot;ghc-io-fd#t:FD&quot;&gt;FD&lt;/a&gt;&lt;/code&gt; for it. Truncates the file to zero size when the &lt;code&gt;&lt;a href=&quot;system-io#t:IOMode&quot;&gt;IOMode&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;system-io#v:WriteMode&quot;&gt;WriteMode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Откройте файл и создайте для него &lt;code&gt;&lt;a href=&quot;ghc-io-fd#t:FD&quot;&gt;FD&lt;/a&gt;&lt;/code&gt; . Обрезает файл до нулевого размера, когда &lt;code&gt;&lt;a href=&quot;system-io#t:IOMode&quot;&gt;IOMode&lt;/a&gt;&lt;/code&gt; имеет значение &lt;code&gt;&lt;a href=&quot;system-io#v:WriteMode&quot;&gt;WriteMode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb658d04e484f6ef351935e7a9b766b60debe2d4" translate="yes" xml:space="preserve">
          <source>Open a named semaphore with the given name, flags, mode, and initial value.</source>
          <target state="translated">Открыть именованный семафор с заданным именем,флагами,режимом и начальным значением.</target>
        </trans-unit>
        <trans-unit id="f57c4790f7f34a8ca95eceb331923fb2088fdde1" translate="yes" xml:space="preserve">
          <source>Open a shared memory object with the given name, flags, and mode.</source>
          <target state="translated">Открыть объект общей памяти с заданным именем,флагами и режимом.</target>
        </trans-unit>
        <trans-unit id="a4120aa06412e5adc4c600815d8ebb61aa98d422" translate="yes" xml:space="preserve">
          <source>Open and optionally create this file. See &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; for information on how to use the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">Откройте и при необходимости создайте этот файл. См. &amp;laquo; &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; для получения информации о том, как использовать тип &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea860b430753ad4955968e34ae243867a6c5fb04" translate="yes" xml:space="preserve">
          <source>Open and optionally create this file. See &lt;code&gt;&lt;a href=&quot;system-posix#v:Files&quot;&gt;Files&lt;/a&gt;&lt;/code&gt; for information on how to use the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/system-posix-types#t:FileMode&quot;&gt;FileMode&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316640348a429645fef91dfb05b3196eb965850e" translate="yes" xml:space="preserve">
          <source>Open indexed type families are introduced by a signature, such as</source>
          <target state="translated">Открытые индексированные семейства типов вводятся с помощью подписи,например</target>
        </trans-unit>
        <trans-unit id="62d19b763ce96acde6de1a0a0a137c190e97e371" translate="yes" xml:space="preserve">
          <source>Open type and data family declarations are exactly as in Haskell.</source>
          <target state="translated">Объявления открытых типов и семейства данных точно такие же,как и в Haskell.</target>
        </trans-unit>
        <trans-unit id="345592cb9cc814b84d928db32f524bd68b8e8665" translate="yes" xml:space="preserve">
          <source>OpenExtHandle</source>
          <target state="translated">OpenExtHandle</target>
        </trans-unit>
        <trans-unit id="be4ef35b845f3f8742151ba042e927f175f32d3d" translate="yes" xml:space="preserve">
          <source>OpenFileFlags</source>
          <target state="translated">OpenFileFlags</target>
        </trans-unit>
        <trans-unit id="d4c5cbf148e8ab067ee8fcd91a86a68f327e2c93" translate="yes" xml:space="preserve">
          <source>OpenFileLimit</source>
          <target state="translated">OpenFileLimit</target>
        </trans-unit>
        <trans-unit id="b2a5470d265ed406614e0d033c4ebe86bf811418" translate="yes" xml:space="preserve">
          <source>OpenHandle</source>
          <target state="translated">OpenHandle</target>
        </trans-unit>
        <trans-unit id="f3dd14171959950898b3fb604b356ae109b6e608" translate="yes" xml:space="preserve">
          <source>OpenMode</source>
          <target state="translated">OpenMode</target>
        </trans-unit>
        <trans-unit id="528d57c38374a655a269ff7a2796f6152cc2b011" translate="yes" xml:space="preserve">
          <source>OpenPunctuation</source>
          <target state="translated">OpenPunctuation</target>
        </trans-unit>
        <trans-unit id="389682fb06c2c4c783f2fcf52cb3f6b658b5e3d8" translate="yes" xml:space="preserve">
          <source>OpenSemFlags</source>
          <target state="translated">OpenSemFlags</target>
        </trans-unit>
        <trans-unit id="8b0c300483c96f9ee4308ab45551ff569e61bab4" translate="yes" xml:space="preserve">
          <source>Opening and closing files</source>
          <target state="translated">Открытие и закрытие файлов</target>
        </trans-unit>
        <trans-unit id="a535bff5bb480bbb6c0b709154409086b9fa6c12" translate="yes" xml:space="preserve">
          <source>Opening files</source>
          <target state="translated">Открытие файлов</target>
        </trans-unit>
        <trans-unit id="3ffea85c4926df7fcf793cfa4d81139f2c8578a1" translate="yes" xml:space="preserve">
          <source>Opens an editor to edit the file ⟨file⟩, or the most recently loaded module if ⟨file⟩ is omitted. If there were errors during the last loading, the cursor will be positioned at the line of the first error. The editor to invoke is taken from the &lt;code id=&quot;index-24&quot;&gt;EDITOR&lt;/code&gt; environment variable, or a default editor on your system if &lt;code id=&quot;index-25&quot;&gt;EDITOR&lt;/code&gt; is not set. You can change the editor using &lt;a href=&quot;#ghci-cmd-:set%20editor&quot;&gt;&lt;code&gt;:set editor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Открывает редактор для редактирования файла &amp;laquo;файл&amp;raquo; или последнего загруженного модуля, если &amp;laquo;файл&amp;raquo; не указан. Если при последней загрузке были ошибки, курсор будет установлен на строке первой ошибки. Вызываемый редактор берется из &lt;code id=&quot;index-24&quot;&gt;EDITOR&lt;/code&gt; среды EDITOR или редактора по умолчанию в вашей системе, если &lt;code id=&quot;index-25&quot;&gt;EDITOR&lt;/code&gt; не установлен. Вы можете изменить редактор с помощью &lt;a href=&quot;#ghci-cmd-:set%20editor&quot;&gt; &lt;code&gt;:set editor&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab766ba42381e7e73d60b327225011551bd62285" translate="yes" xml:space="preserve">
          <source>Opens an existing file and creates mapping object to it.</source>
          <target state="translated">Открывает существующий файл и создает на него объект отображения.</target>
        </trans-unit>
        <trans-unit id="b2e30baf3d135ff701a189f664d0aa02d8bc535e" translate="yes" xml:space="preserve">
          <source>Operate on the current user&amp;rsquo;s local package database. This flag affects the &lt;code&gt;register&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;unregister&lt;/code&gt;, &lt;code&gt;expose&lt;/code&gt;, and &lt;code&gt;hide&lt;/code&gt; commands.</source>
          <target state="translated">Работайте с локальной базой данных пакетов текущего пользователя. Этот флаг влияет на команды &lt;code&gt;register&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; , &lt;code&gt;unregister&lt;/code&gt; , &lt;code&gt;expose&lt;/code&gt; и &lt;code&gt;hide&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="083cd84d11675eeddb18e443e875f6b6a3d95c50" translate="yes" xml:space="preserve">
          <source>Operate on the global package database (this is the default). This flag affects the &lt;code&gt;register&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;unregister&lt;/code&gt;, &lt;code&gt;expose&lt;/code&gt;, and &lt;code&gt;hide&lt;/code&gt; commands.</source>
          <target state="translated">Работайте с глобальной базой данных пакетов (по умолчанию). Этот флаг влияет на команды &lt;code&gt;register&lt;/code&gt; , &lt;code&gt;update&lt;/code&gt; , &lt;code&gt;unregister&lt;/code&gt; , &lt;code&gt;expose&lt;/code&gt; и &lt;code&gt;hide&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf70e187ccc63f90f3e1fb5ec071ddb81220b4ff" translate="yes" xml:space="preserve">
          <source>Operating on the raw buffer as a Ptr</source>
          <target state="translated">Работает на сыром буфере как Ptr</target>
        </trans-unit>
        <trans-unit id="212e24ce1fc682d740e1dca655f0849d8ec6b1da" translate="yes" xml:space="preserve">
          <source>Operation comments contain the operation time complexity in the Big-O notation (&lt;a href=&quot;http://en.wikipedia.org/wiki/Big_O_notation&quot;&gt;http://en.wikipedia.org/wiki/Big_O_notation&lt;/a&gt;).</source>
          <target state="translated">Комментарии к операциям содержат временную сложность операции в нотации Big-O ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Big_O_notation&quot;&gt;http://en.wikipedia.org/wiki/Big_O_notation&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="30b4c034f9dfce3148616876e4eb785c3c71ce25" translate="yes" xml:space="preserve">
          <source>Operation comments contain the operation time complexity in the Big-O notation &lt;a href=&quot;http://en.wikipedia.org/wiki/Big_O_notation&quot;&gt;http://en.wikipedia.org/wiki/Big_O_notation&lt;/a&gt;. Many operations have a worst-case complexity of O(min(n,W)). This means that the operation can become linear in the number of elements with a maximum of &lt;em&gt;W&lt;/em&gt; -- the number of bits in an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 or 64).</source>
          <target state="translated">Комментарии к операциям содержат временную сложность операции в нотации Big-O &lt;a href=&quot;http://en.wikipedia.org/wiki/Big_O_notation&quot;&gt;http://en.wikipedia.org/wiki/Big_O_notation&lt;/a&gt; . Многие операции имеют сложность наихудшего случая O (min (n, W)). Это означает, что операция может стать линейной по количеству элементов с максимумом &lt;em&gt;W&lt;/em&gt; - количеством бит в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 или 64).</target>
        </trans-unit>
        <trans-unit id="cc94aba5ba9874c8ccd3a8b0bd8fc45a51ca4e90" translate="yes" xml:space="preserve">
          <source>Operation comments contain the operation time complexity in the Big-O notation &lt;a href=&quot;http://en.wikipedia.org/wiki/Big_O_notation&quot;&gt;http://en.wikipedia.org/wiki/Big_O_notation&lt;/a&gt;. Many operations have a worst-case complexity of O(min(n,W)). This means that the operation can become linear in the number of elements with a maximum of &lt;em&gt;W&lt;/em&gt; -- the number of bits in an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-int#t:Int&quot;&gt;Int&lt;/a&gt;&lt;/code&gt; (32 or 64).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1956fb1b777c2f5cb51b9aa2d865337af0a8590e" translate="yes" xml:space="preserve">
          <source>Operationally, in a dictionary-passing implementation, the constructors &lt;code&gt;Baz1&lt;/code&gt; and &lt;code&gt;Baz2&lt;/code&gt; must store the dictionaries for &lt;code&gt;Eq&lt;/code&gt; and &lt;code&gt;Show&lt;/code&gt; respectively, and extract it on pattern matching.</source>
          <target state="translated">С оперативной &lt;code&gt;Baz1&lt;/code&gt; &lt;code&gt;Baz2&lt;/code&gt; , в реализации с передачей словарей конструкторы Baz1 и Baz2 должны хранить словари для &lt;code&gt;Eq&lt;/code&gt; и &lt;code&gt;Show&lt;/code&gt; соответственно и извлекать их при сопоставлении с образцом.</target>
        </trans-unit>
        <trans-unit id="a1fdaa6b2a846c8fcf18d414bf8c61db610eda6a" translate="yes" xml:space="preserve">
          <source>Operations</source>
          <target state="translated">Operations</target>
        </trans-unit>
        <trans-unit id="010424427c51ae459956824d4f41c5856a7d7600" translate="yes" xml:space="preserve">
          <source>Operations for composing transactions: &lt;code&gt;retry&lt;/code&gt;, and &lt;code&gt;orElse&lt;/code&gt;.</source>
          <target state="translated">Операции по слагающим операциям: &lt;code&gt;retry&lt;/code&gt; , и &lt;code&gt;orElse&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="64c6bfa202489b3690a8497e85422b7af3c47ee6" translate="yes" xml:space="preserve">
          <source>Operations for creating and interacting with sub-processes.</source>
          <target state="translated">Операции по созданию и взаимодействию с подпроцессами.</target>
        </trans-unit>
        <trans-unit id="63e9af41f1576e5aa52ffaa696122d209a87d569" translate="yes" xml:space="preserve">
          <source>Operations for injecting values of arbitrary type into a dynamically typed value, Dynamic, are provided, together with operations for converting dynamic values into a concrete (monomorphic) type.</source>
          <target state="translated">Предусмотрены операции по введению значений произвольного типа в динамически типизированное значение Dynamic,а также операции по преобразованию динамических значений в бетонный (мономорфный)тип.</target>
        </trans-unit>
        <trans-unit id="dfa672f70c432a2f16141a0afca1b4ff49e644e5" translate="yes" xml:space="preserve">
          <source>Operations on &lt;code&gt;Float&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt; numbers are &lt;em&gt;unchecked&lt;/em&gt; for overflow, underflow, and other sad occurrences. (note, however, that some architectures trap floating-point overflow and loss-of-precision and report a floating-point exception, probably terminating the program)</source>
          <target state="translated">Операции по &lt;code&gt;Float&lt;/code&gt; и &lt;code&gt;Double&lt;/code&gt; чисел &lt;em&gt;бесконтрольно&lt;/em&gt; переполнения, опустошения и других печальных событий. (обратите внимание, однако, что некоторые архитектуры улавливают переполнение с плавающей запятой и потерю точности и сообщают об исключении с плавающей запятой, вероятно, завершая программу)</target>
        </trans-unit>
        <trans-unit id="70b889a0601ca0e0323fbe3001c86239d52c2976" translate="yes" xml:space="preserve">
          <source>Operations on handles</source>
          <target state="translated">Операции на ручках</target>
        </trans-unit>
        <trans-unit id="251fdb8c40a857d5de5aef3683ba18da16bd56ad" translate="yes" xml:space="preserve">
          <source>Operations on lists.</source>
          <target state="translated">Операции в списках.</target>
        </trans-unit>
        <trans-unit id="a187376dc1defee65e37c92ba05a3b6fa77db72f" translate="yes" xml:space="preserve">
          <source>Operations whose result would be negative &lt;code&gt;&lt;a href=&quot;control-exception#v:throw&quot;&gt;throw&lt;/a&gt;
 (&lt;a href=&quot;control-exception#v:Underflow&quot;&gt;Underflow&lt;/a&gt; :: &lt;a href=&quot;control-exception#v:ArithException&quot;&gt;ArithException&lt;/a&gt;)&lt;/code&gt;,</source>
          <target state="translated">Операции , чей результат будет отрицательным &lt;code&gt;&lt;a href=&quot;control-exception#v:throw&quot;&gt;throw&lt;/a&gt; (&lt;a href=&quot;control-exception#v:Underflow&quot;&gt;Underflow&lt;/a&gt; :: &lt;a href=&quot;control-exception#v:ArithException&quot;&gt;ArithException&lt;/a&gt;)&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="d0e687b079fb70f2208d1f8d2c75d64d74925496" translate="yes" xml:space="preserve">
          <source>Operator</source>
          <target state="translated">Operator</target>
        </trans-unit>
        <trans-unit id="d4f31eb6a5e978c610c6b257f8e92dc5ac9b8f36" translate="yes" xml:space="preserve">
          <source>Operator symbols become type &lt;em&gt;constructors&lt;/em&gt; rather than type &lt;em&gt;variables&lt;/em&gt;.</source>
          <target state="translated">Символы операторов становятся &lt;em&gt;конструкторами&lt;/em&gt; типов, а не &lt;em&gt;переменными&lt;/em&gt; типа .</target>
        </trans-unit>
        <trans-unit id="df4aab8de9b7c877a7baeb4198669b3c5323bb26" translate="yes" xml:space="preserve">
          <source>Operator symbols in types can be written infix, both in definitions and uses. For example:</source>
          <target state="translated">Символы оператора в типах могут быть записаны в виде инффикса,как в определениях,так и в использовании.Например:</target>
        </trans-unit>
        <trans-unit id="deefc1ebb8a6a9e9d71ba863ed305fcb6f2e73df" translate="yes" xml:space="preserve">
          <source>OperatorTable</source>
          <target state="translated">OperatorTable</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="e8b0a981c3293cd72332580a9bfaa03f3df518cf" translate="yes" xml:space="preserve">
          <source>OptDescr</source>
          <target state="translated">OptDescr</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="b293465e066906a2876636d4afb03e8ac6cf2ddc" translate="yes" xml:space="preserve">
          <source>Optional environment (otherwise inherit from the current process)</source>
          <target state="translated">Необязательная среда (в противном случае наследуется от текущего процесса)</target>
        </trans-unit>
        <trans-unit id="dd55d6c6a66ab5ddbc36d53946c786320ec3587d" translate="yes" xml:space="preserve">
          <source>Optional environment (otherwise inherit)</source>
          <target state="translated">Необязательная среда (в противном случае наследуется)</target>
        </trans-unit>
        <trans-unit id="0f14588d7b9710ada9394bfeaff05157c6f2476d" translate="yes" xml:space="preserve">
          <source>Optional path to the working directory</source>
          <target state="translated">Необязательный путь к рабочей директории</target>
        </trans-unit>
        <trans-unit id="d91392285a0151b95f54b71ab44e6f6e738b5437" translate="yes" xml:space="preserve">
          <source>Optional path to the working directory for the new process</source>
          <target state="translated">Необязательный путь к рабочей директории для нового процесса</target>
        </trans-unit>
        <trans-unit id="f439f2ba967862c2d5e67c16eed9a8d3ce132e3a" translate="yes" xml:space="preserve">
          <source>Optionally, the program may be linked with the &lt;a href=&quot;phases#ghc-flag--threaded&quot;&gt;&lt;code&gt;-threaded&lt;/code&gt;&lt;/a&gt; option (see &lt;a href=&quot;phases#options-linker&quot;&gt;Options affecting linking&lt;/a&gt;. This provides two benefits:</source>
          <target state="translated">При желании программа может быть связана с параметром &lt;a href=&quot;phases#ghc-flag--threaded&quot;&gt; &lt;code&gt;-threaded&lt;/code&gt; &lt;/a&gt; (см. &lt;a href=&quot;phases#options-linker&quot;&gt;Параметры, влияющие на связывание&lt;/a&gt; . Это дает два преимущества:</target>
        </trans-unit>
        <trans-unit id="150df3ba8f1d25b3d2442fb251bd0b8739a08f6c" translate="yes" xml:space="preserve">
          <source>Options can be forced through to a particular compilation phase, using the following flags:</source>
          <target state="translated">Опции могут быть принудительно перенесены на определенную фазу компиляции,используя следующие флаги:</target>
        </trans-unit>
        <trans-unit id="07de4eb670ca9b55e22ab8e74a884db849e506ae" translate="yes" xml:space="preserve">
          <source>Options may also be modified from within GHCi, using the &lt;a href=&quot;ghci#ghci-cmd-:set&quot;&gt;&lt;code&gt;:set&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Параметры также можно изменить из GHCi с помощью команды &lt;a href=&quot;ghci#ghci-cmd-:set&quot;&gt; &lt;code&gt;:set&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbc525524ba745988196c2cf239dca851f2646d3" translate="yes" xml:space="preserve">
          <source>Or I could define a simple way to invoke &amp;ldquo;&lt;code&gt;ghc --make Main&lt;/code&gt;&amp;rdquo; in the current directory:</source>
          <target state="translated">Или я мог бы определить простой способ вызвать &amp;laquo; &lt;code&gt;ghc --make Main&lt;/code&gt; &amp;raquo; в текущем каталоге:</target>
        </trans-unit>
        <trans-unit id="ed5f6d189422866d42c01faf2773a8db4acd9c2a" translate="yes" xml:space="preserve">
          <source>Or even simpler using applicative style:</source>
          <target state="translated">Или еще проще с использованием аппликативного стиля:</target>
        </trans-unit>
        <trans-unit id="c3af411739703165e3837288b0679427c0978621" translate="yes" xml:space="preserve">
          <source>Or in a standalone deriving declaration</source>
          <target state="translated">Или в отдельном производном заявлении</target>
        </trans-unit>
        <trans-unit id="9e0ef2f0808aa7783d6cf8e9c6f90e88d912e8e1" translate="yes" xml:space="preserve">
          <source>Or using guards:</source>
          <target state="translated">Или с помощью охранников:</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="2813ca76372ef7834dbf7b83dd19ec3f7be3b60a" translate="yes" xml:space="preserve">
          <source>Ord</source>
          <target state="translated">Ord</target>
        </trans-unit>
        <trans-unit id="f5167f3705089803c8512ac674241dfd7724cb93" translate="yes" xml:space="preserve">
          <source>Ord1</source>
          <target state="translated">Ord1</target>
        </trans-unit>
        <trans-unit id="a846bf09723a1322f808ad711f192bb56fbfbec4" translate="yes" xml:space="preserve">
          <source>Ord2</source>
          <target state="translated">Ord2</target>
        </trans-unit>
        <trans-unit id="f67c47b80d23bf9aafb12517fa70e43e75dc9ce1" translate="yes" xml:space="preserve">
          <source>Ordered ByteStrings</source>
          <target state="translated">Заказанный БайтСтрингс</target>
        </trans-unit>
        <trans-unit id="6b5d4e1e91de3c24915fa410d3ac4a21868bffb0" translate="yes" xml:space="preserve">
          <source>Ordered list</source>
          <target state="translated">Список заказов</target>
        </trans-unit>
        <trans-unit id="9bed071603b37f170248ba8799e9c1e267fbd2f5" translate="yes" xml:space="preserve">
          <source>Ordered lists</source>
          <target state="translated">Списки заказов</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="5ee1f118f806c2954ead1243461f8f5c2a0d2524" translate="yes" xml:space="preserve">
          <source>Ordering of &lt;code&gt;-l&lt;/code&gt; options matters: a library should be mentioned &lt;em&gt;before&lt;/em&gt; the libraries it depends on (see &lt;a href=&quot;phases#options-linker&quot;&gt;Options affecting linking&lt;/a&gt;).</source>
          <target state="translated">Упорядочением &lt;code&gt;-l&lt;/code&gt; вопросов опций: библиотека следует отметить , &lt;em&gt;прежде&lt;/em&gt; библиотек он зависит от (см &lt;a href=&quot;phases#options-linker&quot;&gt;Параметры , влияющие на связь&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="026197d403291a7a7c724e41228f7b3923b83a89" translate="yes" xml:space="preserve">
          <source>Orderings</source>
          <target state="translated">Orderings</target>
        </trans-unit>
        <trans-unit id="4cd6b596de672da2114ba27b5d0928eebf93910e" translate="yes" xml:space="preserve">
          <source>Ordinary inlining happens at the same time as rule rewriting, which may lead to unexpected results. Consider this (artificial) example</source>
          <target state="translated">Обычная инкрустация происходит одновременно с переписыванием правил,что может привести к неожиданным результатам.Рассмотрим этот (искусственный)пример</target>
        </trans-unit>
        <trans-unit id="04b00cb26f97f959a02aa6ce19955a72b8bd0a5f" translate="yes" xml:space="preserve">
          <source>Ordinary single-threaded Haskell programs will not benefit from enabling SMP parallelism alone: you must expose parallelism to the compiler. One way to do so is forking threads using Concurrent Haskell (&lt;a href=&quot;#concurrent-haskell&quot;&gt;Concurrent Haskell&lt;/a&gt;), but the simplest mechanism for extracting parallelism from pure code is to use the &lt;code&gt;par&lt;/code&gt; combinator, which is closely related to (and often used with) &lt;code&gt;seq&lt;/code&gt;. Both of these are available from the &lt;a href=&quot;http://hackage.haskell.org/package/parallel&quot;&gt;parallel library&lt;/a&gt;:</source>
          <target state="translated">Обычные однопоточные программы на Haskell не выиграют от включения одного SMP-параллелизма: вы должны предоставить компилятору параллелизм. Один из способов сделать это - разветвлять потоки с помощью Concurrent Haskell ( &lt;a href=&quot;#concurrent-haskell&quot;&gt;Concurrent Haskell&lt;/a&gt; ), но самый простой механизм извлечения параллелизма из чистого кода - использовать комбинатор &lt;code&gt;par&lt;/code&gt; , который тесно связан с &lt;code&gt;seq&lt;/code&gt; (и часто используется с ним) . Оба они доступны из &lt;a href=&quot;http://hackage.haskell.org/package/parallel&quot;&gt;параллельной библиотеки&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a9e54f5fa5a278d112dceef67452d2651ffb1f7b" translate="yes" xml:space="preserve">
          <source>Original GHC implementation by Bryan O'Sullivan. Rewritten to use &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; by Simon Marlow. Rewritten to support slices and use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-foreignptr#v:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; by David Roundy. Rewritten again and extended by Don Stewart and Duncan Coutts. Lazy variant by Duncan Coutts and Don Stewart.</source>
          <target state="translated">Оригинальная реализация GHC Брайаном О'Салливаном. Переписан Саймоном Марлоу для использования &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; . Переписано для поддержки ломтиков и использовать &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-foreignptr#v:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; Дэвида Рунди. Снова переписанный и расширенный Доном Стюартом и Дунканом Куттс. Ленивый вариант Дункана Куттса и Дона Стюарта.</target>
        </trans-unit>
        <trans-unit id="93598ac808fb05625f35e4f620de0f0e53817bdf" translate="yes" xml:space="preserve">
          <source>Original GHC implementation by Bryan O'Sullivan. Rewritten to use &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; by Simon Marlow. Rewritten to support slices and use &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; by David Roundy. Rewritten again and extended by Don Stewart and Duncan Coutts.</source>
          <target state="translated">Оригинальная реализация GHC Брайаном О'Салливаном. Переписан Саймоном Марлоу для использования &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; . Переписано для поддержки ломтиков и использовать &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; Дэвида Рунди. Снова переписанный и расширенный Доном Стюартом и Дунканом Куттс.</target>
        </trans-unit>
        <trans-unit id="cb8e5613ec2d48a74c172ac7aa02cac4bef17d2b" translate="yes" xml:space="preserve">
          <source>Original GHC implementation by Bryan O'Sullivan. Rewritten to use &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; by Simon Marlow. Rewritten to support slices and use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-foreignptr#v:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; by David Roundy. Rewritten again and extended by Don Stewart and Duncan Coutts. Lazy variant by Duncan Coutts and Don Stewart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c96e5b47a54e6acfda288d441c2ec8fe32131b" translate="yes" xml:space="preserve">
          <source>Original GHC implementation by Bryan O'Sullivan. Rewritten to use &lt;code&gt;&lt;a href=&quot;data-array-unboxed#v:UArray&quot;&gt;UArray&lt;/a&gt;&lt;/code&gt; by Simon Marlow. Rewritten to support slices and use &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/foreign-foreignptr-safe#t:ForeignPtr&quot;&gt;ForeignPtr&lt;/a&gt;&lt;/code&gt; by David Roundy. Rewritten again and extended by Don Stewart and Duncan Coutts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9ce637b76a3e86159754092a5bff05de23030c" translate="yes" xml:space="preserve">
          <source>Originally designed by John Hughes's and Simon Peyton Jones's.</source>
          <target state="translated">Первоначально спроектирован Джоном Хьюзом и Саймоном Пейтоном Джонсом.</target>
        </trans-unit>
        <trans-unit id="e0d11db984918c900a2e7615ec383a5f3eade238" translate="yes" xml:space="preserve">
          <source>Orphan instances</source>
          <target state="translated">сиротские случаи</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="5ad09dd090c8718838113f73d1171adb4a590c71" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; operations clash with &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt; or &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; functions however, so they should be imported &lt;code&gt;qualified&lt;/code&gt; with a different alias e.g.</source>
          <target state="translated">Другие &lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; операция конфликтовать с &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt; или &lt;a href=&quot;../base-4.13.0.0/prelude&quot;&gt;Prelude&lt;/a&gt; функциями , однако, таким образом , они должны быть импортированы &lt;code&gt;qualified&lt;/code&gt; с другим псевдонимом , например ,</target>
        </trans-unit>
        <trans-unit id="97d83121e95b29befe338184898beb90ca66afb8" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;&lt;a href=&quot;data-bytestring-short#t:ShortByteString&quot;&gt;ShortByteString&lt;/a&gt;&lt;/code&gt; operations clash with &lt;a href=&quot;data-bytestring&quot;&gt;Data.ByteString&lt;/a&gt; or &lt;a href=&quot;../base-4.14.1.0/prelude&quot;&gt;Prelude&lt;/a&gt; functions however, so they should be imported &lt;code&gt;qualified&lt;/code&gt; with a different alias e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d5fbcca333f989fd2b0f0cf8199618b39f1bd3" translate="yes" xml:space="preserve">
          <source>Other Haskell systems do not currently support multiple operating system threads.</source>
          <target state="translated">Другие системы Haskell в настоящее время не поддерживают несколько потоков операционной системы.</target>
        </trans-unit>
        <trans-unit id="778e98a9766b655c4f188fb5d617327629ecdb0a" translate="yes" xml:space="preserve">
          <source>Other applications like the graphical Concurrent Haskell Debugger (&lt;a href=&quot;http://www.informatik.uni-kiel.de/~fhu/chd/&quot;&gt;http://www.informatik.uni-kiel.de/~fhu/chd/&lt;/a&gt;) may choose to overload &lt;code&gt;&lt;a href=&quot;ghc-conc#v:labelThread&quot;&gt;labelThread&lt;/a&gt;&lt;/code&gt; for their purposes as well.</source>
          <target state="translated">Другие приложения, такие как графический Concurrent Haskell Debugger ( &lt;a href=&quot;http://www.informatik.uni-kiel.de/~fhu/chd/&quot;&gt;http://www.informatik.uni-kiel.de/~fhu/chd/&lt;/a&gt; ), также могут перегрузить &lt;code&gt;&lt;a href=&quot;ghc-conc#v:labelThread&quot;&gt;labelThread&lt;/a&gt;&lt;/code&gt; для своих целей.</target>
        </trans-unit>
        <trans-unit id="9086a30a19ab20bd7cd31262ef8e704a3c0e4890" translate="yes" xml:space="preserve">
          <source>Other applications like the graphical Concurrent Haskell Debugger (&lt;a href=&quot;http://www.informatik.uni-kiel.de/~fhu/chd/&quot;&gt;http://www.informatik.uni-kiel.de/~fhu/chd/&lt;/a&gt;) may choose to overload &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:labelThread&quot;&gt;labelThread&lt;/a&gt;&lt;/code&gt; for their purposes as well.</source>
          <target state="translated">Другие приложения, такие как графический Concurrent Haskell Debugger ( &lt;a href=&quot;http://www.informatik.uni-kiel.de/~fhu/chd/&quot;&gt;http://www.informatik.uni-kiel.de/~fhu/chd/&lt;/a&gt; ), также могут перегрузить &lt;code&gt;&lt;a href=&quot;ghc-conc-sync#v:labelThread&quot;&gt;labelThread&lt;/a&gt;&lt;/code&gt; для своих целей.</target>
        </trans-unit>
        <trans-unit id="31deb74a58fba669a7c2cb31b6bed8515ab85d00" translate="yes" xml:space="preserve">
          <source>Other combinators</source>
          <target state="translated">Другие комбинаторы</target>
        </trans-unit>
        <trans-unit id="f717c91b4ff7b4e9135a9458b2f8146b78bb74a3" translate="yes" xml:space="preserve">
          <source>Other operations</source>
          <target state="translated">Прочие операции</target>
        </trans-unit>
        <trans-unit id="82169c7fc5215cf20135048050c38ee826497c85" translate="yes" xml:space="preserve">
          <source>Other operations such as &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:quotBigNat&quot;&gt;quotBigNat&lt;/a&gt;&lt;/code&gt; may return &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:nullBigNat&quot;&gt;nullBigNat&lt;/a&gt;&lt;/code&gt; as well as a dummy/place-holder value instead of &lt;code&gt;undefined&lt;/code&gt; since we can't throw exceptions. But that behaviour should not be relied upon.</source>
          <target state="translated">Другие операции, такие как &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:quotBigNat&quot;&gt;quotBigNat&lt;/a&gt;&lt;/code&gt; , могут возвращать &lt;code&gt;&lt;a href=&quot;ghc-integer-gmp-internals#v:nullBigNat&quot;&gt;nullBigNat&lt;/a&gt;&lt;/code&gt; , а также фиктивное значение / значение-заполнитель вместо &lt;code&gt;undefined&lt;/code&gt; , поскольку мы не можем генерировать исключения. Но на такое поведение нельзя полагаться.</target>
        </trans-unit>
        <trans-unit id="9047c6f96c316a252e973efb632599db44d02ce4" translate="yes" xml:space="preserve">
          <source>Other special syntax: sequences of characters that have a different meaning when this particular option is turned on.</source>
          <target state="translated">Другой специальный синтаксис:последовательности символов,которые имеют различное значение при включении данной опции.</target>
        </trans-unit>
        <trans-unit id="91b29ffa8ce218d650e0c973969ab7a599e5a143" translate="yes" xml:space="preserve">
          <source>Other stuff</source>
          <target state="translated">Другие вещи</target>
        </trans-unit>
        <trans-unit id="4b372c318a0ac15f1e50d7fd1a01e206248a8e63" translate="yes" xml:space="preserve">
          <source>Other than these two caveats, users can always expect that a finalizer will be run after its weak pointer's object becomes unreachable. However, the second caveat means that users need to trust that all of their transitive dependencies do not throw exceptions in finalizers, since any finalizers can end up queued together.</source>
          <target state="translated">Кроме этих двух предостережений,пользователи всегда могут ожидать,что финализатор будет запущен после того,как его объект со слабым указателем станет недоступен.Однако,вторая оговорка означает,что пользователи должны верить,что все их переходные зависимости не бросают исключений в финализаторы,так как любые финализаторы могут оказаться в очереди вместе.</target>
        </trans-unit>
        <trans-unit id="8c5befcc2e0951ae7c577c186d5015110ab50c93" translate="yes" xml:space="preserve">
          <source>Other types</source>
          <target state="translated">Другие типы</target>
        </trans-unit>
        <trans-unit id="c871109d68307ac18e84ee307aacea963e4970b3" translate="yes" xml:space="preserve">
          <source>Other uses of &lt;code&gt;unsafeCoerce#&lt;/code&gt; are undefined. In particular, you should not use &lt;code&gt;unsafeCoerce#&lt;/code&gt; to cast a T to an algebraic data type D, unless T is also an algebraic data type. For example, do not cast &lt;code&gt;Int-&amp;gt;Int&lt;/code&gt; to &lt;code&gt;Bool&lt;/code&gt;, even if you later cast that &lt;code&gt;Bool&lt;/code&gt; back to &lt;code&gt;Int-&amp;gt;Int&lt;/code&gt; before applying it. The reasons have to do with GHC's internal representation details (for the cognoscenti, data values can be entered but function closures cannot). If you want a safe type to cast things to, use &lt;code&gt;Any&lt;/code&gt;, which is not an algebraic data type.</source>
          <target state="translated">Другие варианты использования &lt;code&gt;unsafeCoerce#&lt;/code&gt; не определены. В частности, вы не должны использовать &lt;code&gt;unsafeCoerce#&lt;/code&gt; для приведения T к алгебраическому типу данных D, если T также не является алгебраическим типом данных. Например, не &lt;code&gt;Int-&amp;gt;Int&lt;/code&gt; в &lt;code&gt;Bool&lt;/code&gt; , даже если позже вы &lt;code&gt;Int-&amp;gt;Int&lt;/code&gt; этот &lt;code&gt;Bool&lt;/code&gt; в Int-&amp;gt; Int перед его применением. Причины связаны с деталями внутреннего представления GHC (для знатоков можно вводить значения данных, но нельзя закрывать функции). Если вам нужен безопасный тип, к которому нужно приводить данные, используйте &lt;code&gt;Any&lt;/code&gt; , который не является алгебраическим типом данных.</target>
        </trans-unit>
        <trans-unit id="3cca89d1c6f9e6b7edb2c91666360061ed277fff" translate="yes" xml:space="preserve">
          <source>OtherError</source>
          <target state="translated">OtherError</target>
        </trans-unit>
        <trans-unit id="b004f25ba2f862ca69a0ad498024ce48dcec48b4" translate="yes" xml:space="preserve">
          <source>OtherLetter</source>
          <target state="translated">OtherLetter</target>
        </trans-unit>
        <trans-unit id="79976ff76f967e06eb59c60ae5e3d4d8d8f1dea8" translate="yes" xml:space="preserve">
          <source>OtherNumber</source>
          <target state="translated">OtherNumber</target>
        </trans-unit>
        <trans-unit id="2fe5dcff8470fff0318c0b5bff7bb23017100fe8" translate="yes" xml:space="preserve">
          <source>OtherPunctuation</source>
          <target state="translated">OtherPunctuation</target>
        </trans-unit>
        <trans-unit id="7d352f6a13bd8fb7c6cafa22cba1529a45d2c13e" translate="yes" xml:space="preserve">
          <source>OtherSymbol</source>
          <target state="translated">OtherSymbol</target>
        </trans-unit>
        <trans-unit id="a8f27da35e68a9f7a5a97f1703ac92769848a8d4" translate="yes" xml:space="preserve">
          <source>Others have execute permission.</source>
          <target state="translated">У других есть разрешение на исполнение.</target>
        </trans-unit>
        <trans-unit id="a4b5a656b29825a9211b83ccae7336ee695ce161" translate="yes" xml:space="preserve">
          <source>Others have read permission.</source>
          <target state="translated">Другие прочитали разрешение.</target>
        </trans-unit>
        <trans-unit id="25f01ea5949b3e11544a08901cd4fc6b386f3f43" translate="yes" xml:space="preserve">
          <source>Others have read, write and execute permission.</source>
          <target state="translated">Другие прочитали,написали и выполнили разрешение.</target>
        </trans-unit>
        <trans-unit id="fc0d4f6a481380e178acd3897e6a60f3ade59b6a" translate="yes" xml:space="preserve">
          <source>Others have write permission.</source>
          <target state="translated">У других есть письменное разрешение.</target>
        </trans-unit>
        <trans-unit id="49385a99644f84243228dd0e51c68c048e901bf5" translate="yes" xml:space="preserve">
          <source>Otherwise GHC will solve the &lt;code&gt;HasCallStack&lt;/code&gt; constraint for the singleton &lt;code&gt;CallStack&lt;/code&gt; containing just the current call-site.</source>
          <target state="translated">В противном случае GHC разрешит ограничение &lt;code&gt;HasCallStack&lt;/code&gt; для одноэлементного &lt;code&gt;CallStack&lt;/code&gt; , содержащего только текущий сайт вызова.</target>
        </trans-unit>
        <trans-unit id="73b9866b09caa352e14869afa4a22348cbf03067" translate="yes" xml:space="preserve">
          <source>Otherwise there is exactly one non-incoherent candidate; call it the &amp;ldquo;prime candidate&amp;rdquo;.</source>
          <target state="translated">В противном случае есть ровно один несвязный кандидат; назовем его &amp;laquo;главным кандидатом&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="fb76a4f7af9550821f6b9b31e5732f8573d196f6" translate="yes" xml:space="preserve">
          <source>Otherwise uses home directory returned by &lt;code&gt;getpwuid_r&lt;/code&gt; using the UID of the current proccesses user. This basically reads the &lt;em&gt;etc&lt;/em&gt;passwd file. An empty home directory field is considered valid.</source>
          <target state="translated">В противном случае используется домашний каталог, возвращаемый &lt;code&gt;getpwuid_r&lt;/code&gt; с использованием UID текущего пользователя процессов. Это в основном читает файл &lt;em&gt;etc&lt;/em&gt; passwd. Пустое поле домашнего каталога считается действительным.</target>
        </trans-unit>
        <trans-unit id="165546d2f6cedba70f1aef6539fe75331eec72db" translate="yes" xml:space="preserve">
          <source>Otherwise, in the common case of a simple type error such as typing &lt;code&gt;reverse True&lt;/code&gt; at the prompt, you would get a warning and then an immediately-following type error when the expression is evaluated.</source>
          <target state="translated">В противном случае, в общем случае простой ошибки типа, такой как ввод в командной строке &lt;code&gt;reverse True&lt;/code&gt; , вы получите предупреждение, а затем сразу следующую ошибку типа при вычислении выражения.</target>
        </trans-unit>
        <trans-unit id="9328699bfa5be08b83f54b0c37225de2cd8e0bd2" translate="yes" xml:space="preserve">
          <source>Otherwise, it behaves like &lt;code&gt;ghc-pkg list&lt;/code&gt;, including options.</source>
          <target state="translated">В противном случае он ведет себя как &lt;code&gt;ghc-pkg list&lt;/code&gt; , включая параметры.</target>
        </trans-unit>
        <trans-unit id="122c01da0c009875e86f7f7f7990dd90b8f65d05" translate="yes" xml:space="preserve">
          <source>Out of scope term variables</source>
          <target state="translated">Переменные,не относящиеся к области применения.</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="dcd804196c4ab4c07a7fb9d32d6dd85f499cdd67" translate="yes" xml:space="preserve">
          <source>Output a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; is executed directly on the buffer of the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. If the buffer is too small (or not present), then it is replaced with a large enough buffer.</source>
          <target state="translated">Выведите &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; выполняется непосредственно на буфер &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . Если буфер слишком мал (или отсутствует), то он заменяется достаточно большим буфером.</target>
        </trans-unit>
        <trans-unit id="ce49a024c5b74db9ad28503714f87c2bd1cb09a1" translate="yes" xml:space="preserve">
          <source>Output a &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; to a &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;data-bytestring-builder#t:Builder&quot;&gt;Builder&lt;/a&gt;&lt;/code&gt; is executed directly on the buffer of the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. If the buffer is too small (or not present), then it is replaced with a large enough buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faccf69b130383a7a701fa6e58ffeb062f573f54" translate="yes" xml:space="preserve">
          <source>Output errors in reverse order</source>
          <target state="translated">Ошибки вывода в обратном порядке</target>
        </trans-unit>
        <trans-unit id="5218d9a3d99e1852dea200794dafd520fce146d7" translate="yes" xml:space="preserve">
          <source>Output full span in error messages</source>
          <target state="translated">Выходной полный диапазон в сообщениях об ошибках</target>
        </trans-unit>
        <trans-unit id="364167f7b761668d223893cadae4f828c7c2fa44" translate="yes" xml:space="preserve">
          <source>Output functions</source>
          <target state="translated">Выходные функции</target>
        </trans-unit>
        <trans-unit id="fbd84c24ac8d22f5181f1bc88f9671c4344d5b53" translate="yes" xml:space="preserve">
          <source>Output is returned strictly, so this is not suitable for launching processes that require interaction over the standard file streams.</source>
          <target state="translated">Выходные данные возвращаются строго,поэтому они не подходят для запуска процессов,требующих взаимодействия со стандартными файловыми потоками.</target>
        </trans-unit>
        <trans-unit id="d56117c403f664c3e1ed706f67f62dcab08add06" translate="yes" xml:space="preserve">
          <source>Output preprocessor dependencies. This only has an effect when the CPP language extension is enabled. These dependencies are files included with the &lt;code&gt;#include&lt;/code&gt; preprocessor directive (as well as transitive includes) and implicitly included files such as standard c preprocessor headers and a GHC version header. One exception to this is that GHC generates a temporary header file (during compilation) containing package version macros. As this is only a temporary file that GHC will always generate, it is not output as a dependency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e103798c3274cee279fa6992b0f5932f325fa5ac" translate="yes" xml:space="preserve">
          <source>Output the &lt;code&gt;ghc-pkg&lt;/code&gt; version number.</source>
          <target state="translated">Выведите номер версии &lt;code&gt;ghc-pkg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec3a20e9b85c9c73b5f9e136d68ee50ad77983fe" translate="yes" xml:space="preserve">
          <source>Output the HTML without adding newlines or spaces within the markup. This should be the most time and space efficient way to render HTML, though the ouput is quite unreadable.</source>
          <target state="translated">Выводите HTML без добавления новых строк или пробелов в разметке.Это должен быть наиболее эффективный способ отрисовки HTML по времени и пространству,хотя оупат довольно нечитаем.</target>
        </trans-unit>
        <trans-unit id="ed8e0c3be25bb282bdb7ed21575be0568a2ea8ce" translate="yes" xml:space="preserve">
          <source>Output version information and exit successfully.</source>
          <target state="translated">Вывод информации о версии и успешный выход.</target>
        </trans-unit>
        <trans-unit id="d76b710eda6d9732ae60ae3688eb9124d03137ca" translate="yes" xml:space="preserve">
          <source>OutputCap</source>
          <target state="translated">OutputCap</target>
        </trans-unit>
        <trans-unit id="3210573c1fb5e651cb8a6253bec6053d0ba32e16" translate="yes" xml:space="preserve">
          <source>OutputQueue</source>
          <target state="translated">OutputQueue</target>
        </trans-unit>
        <trans-unit id="1478d601c03c445a904d445d7c3e8cec48d16838" translate="yes" xml:space="preserve">
          <source>OutputUnderflow</source>
          <target state="translated">OutputUnderflow</target>
        </trans-unit>
        <trans-unit id="2bbfd1ba36d0c76586f52911ecb048b6eac561d8" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выходы с &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; в указанной &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3921704966c02cc64ce4b5f314c1cf70c103f53f" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&lt;a href=&quot;data-bytestring#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdabf64a0b25e97a2bcdfbcbab9832f9fb21a8e2" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выходы с &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; в указанной &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce4268dda332085e9857fd93d80106998f5a9cf6" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&lt;a href=&quot;data-bytestring-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2be19b4f59c90e2b571c4c57a78af1c21f19989" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The chunks will be written one at a time. Other threads might write to the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; between the writes, and hence &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; alone might not be suitable for concurrent writes.</source>
          <target state="translated">Выходы с &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; в указанной &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . Чанки будут записываться по одному. Другие темы могли бы написать на &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; между записями, и , следовательно , &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; в одиночку может быть не подходит для одновременных операций записи.</target>
        </trans-unit>
        <trans-unit id="2b18f35ca8a8c8c01b6e67812f93b06a07030750" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The chunks will be written one at a time. Other threads might write to the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; between the writes, and hence &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; alone might not be suitable for concurrent writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f34b67d163777be1cfe43137e0b8aa27949758" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The chunks will be written one at a time. Other threads might write to the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; between the writes, and hence &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; alone might not be suitable for concurrent writes.</source>
          <target state="translated">Выходы с &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; в указанной &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; . Чанки будут записываться по одному. Другие темы могли бы написать на &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; между записями, и , следовательно , &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; в одиночку может быть не подходит для одновременных операций записи.</target>
        </trans-unit>
        <trans-unit id="92437970ef11779b851993774cf3f2a23f482a62" translate="yes" xml:space="preserve">
          <source>Outputs a &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#t:ByteString&quot;&gt;ByteString&lt;/a&gt;&lt;/code&gt; to the specified &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt;. The chunks will be written one at a time. Other threads might write to the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-io-handle#t:Handle&quot;&gt;Handle&lt;/a&gt;&lt;/code&gt; between the writes, and hence &lt;code&gt;&lt;a href=&quot;data-bytestring-lazy-char8#v:hPut&quot;&gt;hPut&lt;/a&gt;&lt;/code&gt; alone might not be suitable for concurrent writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437c6c5b9e71301759333f52e620b482f7d4e6a3" translate="yes" xml:space="preserve">
          <source>Outputs indented HTML, with indentation inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:showHtml&quot;&gt;showHtml&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:renderHtml&quot;&gt;renderHtml&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выводит HTML с отступом и отступом внутри элементов. Это может изменить смысл документа HTML и в основном полезно для отладки вывода HTML. Реализация неэффективна, и обычно лучше использовать &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:showHtml&quot;&gt;showHtml&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;text-xhtml-frameset#v:renderHtml&quot;&gt;renderHtml&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9342f2cf13303d6a47b5d18b92f9cf13b2e5169" translate="yes" xml:space="preserve">
          <source>Outputs indented HTML, with indentation inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:showHtml&quot;&gt;showHtml&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:renderHtml&quot;&gt;renderHtml&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выводит HTML с отступом и отступом внутри элементов. Это может изменить смысл документа HTML и в основном полезно для отладки вывода HTML. Реализация неэффективна, и обычно лучше использовать &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:showHtml&quot;&gt;showHtml&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;text-xhtml-strict#v:renderHtml&quot;&gt;renderHtml&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19430befa515c2d9064f3110f0aa35abc26dd1f3" translate="yes" xml:space="preserve">
          <source>Outputs indented HTML, with indentation inside elements. This can change the meaning of the HTML document, and is mostly useful for debugging the HTML output. The implementation is inefficient, and you are normally better off using &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:showHtml&quot;&gt;showHtml&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:renderHtml&quot;&gt;renderHtml&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выводит HTML с отступом и отступом внутри элементов. Это может изменить смысл документа HTML и в основном полезно для отладки вывода HTML. Реализация неэффективна, и обычно лучше использовать &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:showHtml&quot;&gt;showHtml&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;text-xhtml-transitional#v:renderHtml&quot;&gt;renderHtml&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="582cb8658b32442aec042d63a5cfab472fe58413" translate="yes" xml:space="preserve">
          <source>Outputs indented HTML. Because space matters in HTML, the output is quite messy.</source>
          <target state="translated">Выходит HTML с отступом.Поскольку пространство в HTML имеет значение,вывод довольно грязный.</target>
        </trans-unit>
        <trans-unit id="b7f803909184a1a75bdfd2d4f7c735bb61a3e949" translate="yes" xml:space="preserve">
          <source>Outputs indented XHTML. Because space matters in HTML, the output is quite messy.</source>
          <target state="translated">Выходы с отступом XHTML.Поскольку пространство в HTML имеет значение,вывод довольно грязный.</target>
        </trans-unit>
        <trans-unit id="eb7db7a58078fc2825bd0a031efa804f437af7c6" translate="yes" xml:space="preserve">
          <source>Outputs the command-line syntax.</source>
          <target state="translated">Выводит синтаксис командной строки.</target>
        </trans-unit>
        <trans-unit id="7119c6e28cbbe42a656bd510a3c7d9802856a05d" translate="yes" xml:space="preserve">
          <source>Outputting text</source>
          <target state="translated">Выводящий текст</target>
        </trans-unit>
        <trans-unit id="4da7bc9200c71949eae8135d4a25bb5b299cf7cc" translate="yes" xml:space="preserve">
          <source>Overflow</source>
          <target state="translated">Overflow</target>
        </trans-unit>
        <trans-unit id="86b5bfa21ad7befe5b7734642489ec9bc1748da2" translate="yes" xml:space="preserve">
          <source>Overlap</source>
          <target state="translated">Overlap</target>
        </trans-unit>
        <trans-unit id="2e8a35cfdb5657a597ecf6c9392cc4a625880c7a" translate="yes" xml:space="preserve">
          <source>Overlappable</source>
          <target state="translated">Overlappable</target>
        </trans-unit>
        <trans-unit id="4595ccd7bc9e0af583db794795f5853d40095221" translate="yes" xml:space="preserve">
          <source>Overlapping</source>
          <target state="translated">Overlapping</target>
        </trans-unit>
        <trans-unit id="66015fffae6c6a9653fc601aa127c669c9f7f142" translate="yes" xml:space="preserve">
          <source>Overlapping instances must be used with care. They can give rise to incoherence (i.e. different instance choices are made in different parts of the program) even without &lt;a href=&quot;#extension-IncoherentInstances&quot;&gt;&lt;code&gt;IncoherentInstances&lt;/code&gt;&lt;/a&gt;. Consider:</source>
          <target state="translated">Перекрывающиеся экземпляры следует использовать с осторожностью. Они могут привести к несогласованности (т. Е. В разных частях программы выполняется выбор разных экземпляров) даже без &lt;a href=&quot;#extension-IncoherentInstances&quot;&gt; &lt;code&gt;IncoherentInstances&lt;/code&gt; &lt;/a&gt; . Рассматривать:</target>
        </trans-unit>
        <trans-unit id="d1523bffa7a001e9a35e090d7fb6d2c81a06dbc6" translate="yes" xml:space="preserve">
          <source>OverlappingInstances</source>
          <target state="translated">OverlappingInstances</target>
        </trans-unit>
        <trans-unit id="a8f9e73a31d1ecafa5203f5b5c4b88f1a16e5e78" translate="yes" xml:space="preserve">
          <source>Overlaps</source>
          <target state="translated">Overlaps</target>
        </trans-unit>
        <trans-unit id="33bfb3c6026c4b45ecc7feb8aafe2ca9f3b3173c" translate="yes" xml:space="preserve">
          <source>Overlays are an experimental feature of HPC, a textual description of coverage. hpc draft is used to generate a draft overlay from a .tix file, and hpc overlay generates a .tix files from an overlay.</source>
          <target state="translated">Оверлеи-это экспериментальная функция HPC,текстовое описание покрытия.Черновик hpc используется для генерации черновика оверлея из файла .tix,а оверлей hpc генерирует файлы .tix из оверлея.</target>
        </trans-unit>
        <trans-unit id="a8b4cac7022105ed5d28059687f452f232ee8a94" translate="yes" xml:space="preserve">
          <source>Overloaded functions are not your friend:</source>
          <target state="translated">Перегруженные функции-не твой друг:</target>
        </trans-unit>
        <trans-unit id="97176dd8fcd9d1389997c9bc3e797197c3840bf4" translate="yes" xml:space="preserve">
          <source>Overloaded lists</source>
          <target state="translated">Перегруженные списки</target>
        </trans-unit>
        <trans-unit id="e8bd3aa687e1a738e55c3636a509b286641773a4" translate="yes" xml:space="preserve">
          <source>Overloaded mutable array interface</source>
          <target state="translated">Перегруженный интерфейс мутируемого массива</target>
        </trans-unit>
        <trans-unit id="e60511daee4f7111180ca7e032a2951fd849e4ee" translate="yes" xml:space="preserve">
          <source>Overloaded string literals</source>
          <target state="translated">Перегруженные строковые литералы</target>
        </trans-unit>
        <trans-unit id="d6d7cf52e6ad94223f1634444b6ca253e18d7307" translate="yes" xml:space="preserve">
          <source>OverloadedLabels</source>
          <target state="translated">OverloadedLabels</target>
        </trans-unit>
        <trans-unit id="bfc0c0637f5d2341f692e6b4349a28ae53c2ed8b" translate="yes" xml:space="preserve">
          <source>OverloadedLists</source>
          <target state="translated">OverloadedLists</target>
        </trans-unit>
        <trans-unit id="21198418d476e74157738de8ed502c9d0fdf2bb9" translate="yes" xml:space="preserve">
          <source>OverloadedStrings</source>
          <target state="translated">OverloadedStrings</target>
        </trans-unit>
        <trans-unit id="f8883c62e6c0e5fff7f6dbed0dfb6ac51a5a5e1f" translate="yes" xml:space="preserve">
          <source>Override default behaviour for source files</source>
          <target state="translated">Переопределить поведение по умолчанию для исходных файлов</target>
        </trans-unit>
        <trans-unit id="6d84840c6065dcaf391a05992267b78411ef4230" translate="yes" xml:space="preserve">
          <source>Owing to the vagaries of DLL linking, these hooks don&amp;rsquo;t work under Windows when the program is built dynamically.</source>
          <target state="translated">Из-за капризов связывания DLL эти перехватчики не работают под Windows, когда программа построена динамически.</target>
        </trans-unit>
        <trans-unit id="32e42d7cf1d8ef849a65b5a64f751115cac94630" translate="yes" xml:space="preserve">
          <source>Owner has execute permission.</source>
          <target state="translated">Владелец имеет разрешение на исполнение.</target>
        </trans-unit>
        <trans-unit id="3602226bffa2bf2cc1004ff7d38eed8270dc876b" translate="yes" xml:space="preserve">
          <source>Owner has read permission.</source>
          <target state="translated">Владелец прочитал разрешение.</target>
        </trans-unit>
        <trans-unit id="77086e57cff582a02a6797d6af8ebc3a53898204" translate="yes" xml:space="preserve">
          <source>Owner has read, write and execute permission.</source>
          <target state="translated">Владелец прочитал,написал и выполнил разрешение.</target>
        </trans-unit>
        <trans-unit id="7347b7f7b6214962e6cdded97a0459692c3eb4cb" translate="yes" xml:space="preserve">
          <source>Owner has write permission.</source>
          <target state="translated">У владельца есть письменное разрешение.</target>
        </trans-unit>
        <trans-unit id="16f821171aa7e9231ae6975fc208a27c4266781f" translate="yes" xml:space="preserve">
          <source>Owner, group and others have read and write permission.</source>
          <target state="translated">Владелец,группа и другие имеют разрешение на чтение и запись.</target>
        </trans-unit>
        <trans-unit id="e523f78f39ca6a4d4e48aaa4794b482ae4b16989" translate="yes" xml:space="preserve">
          <source>Owner, group and others have read, write and execute permission.</source>
          <target state="translated">Владелец,группа и другие люди прочитали,написали и выполнили разрешение.</target>
        </trans-unit>
        <trans-unit id="804c55046a7d6c2cc06d260ab90e0d6beedbce3b" translate="yes" xml:space="preserve">
          <source>P's complete type is of the following form</source>
          <target state="translated">Полный тип P имеет следующую форму</target>
        </trans-unit>
        <trans-unit id="b38cb0ee15cbdc945a4dd5af71e0ea5ff7337a56" translate="yes" xml:space="preserve">
          <source>PACL</source>
          <target state="translated">PACL</target>
        </trans-unit>
        <trans-unit id="048499ce23d04eb40ace8750a382f648336913e9" translate="yes" xml:space="preserve">
          <source>PAINTSTRUCT</source>
          <target state="translated">PAINTSTRUCT</target>
        </trans-unit>
        <trans-unit id="ad09b4bfdbe4d101135fff62d526064595a08512" translate="yes" xml:space="preserve">
          <source>PHANDLE</source>
          <target state="translated">PHANDLE</target>
        </trans-unit>
        <trans-unit id="1dd2c6c79f5967008b3710173dafb5d91bf6f2af" translate="yes" xml:space="preserve">
          <source>PHANDLER_ROUTINE</source>
          <target state="translated">PHANDLER_ROUTINE</target>
        </trans-unit>
        <trans-unit id="7e7f65d76167ed1ddaafc5081c1471db12872a25" translate="yes" xml:space="preserve">
          <source>PHARDWAREINPUT</source>
          <target state="translated">PHARDWAREINPUT</target>
        </trans-unit>
        <trans-unit id="85e8f21e7df070dfbfb33b827711de398d912fd4" translate="yes" xml:space="preserve">
          <source>PINPUT</source>
          <target state="translated">PINPUT</target>
        </trans-unit>
        <trans-unit id="0b9ca3c7e43bcb3e5b2891c4396b2710f3cbde31" translate="yes" xml:space="preserve">
          <source>PKEY</source>
          <target state="translated">PKEY</target>
        </trans-unit>
        <trans-unit id="1820a15854141d70e90716d788ea58c3c229d171" translate="yes" xml:space="preserve">
          <source>PMOUSEINPUT</source>
          <target state="translated">PMOUSEINPUT</target>
        </trans-unit>
        <trans-unit id="aa6c6e71142e2a18efab6e799dedaa71f848c830" translate="yes" xml:space="preserve">
          <source>POSIX IO support. These types and functions correspond to the unix functions open(2), close(2), etc. For more portable functions which are more like fopen(3) and friends from stdio.h, see &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt;.</source>
          <target state="translated">Поддержка POSIX IO. Эти типы и функции соответствуют функциям unix open (2), close (2) и т. Д. Для получения дополнительных переносимых функций, которые больше похожи на fopen (3) и друзей из stdio.h, см. &lt;a href=&quot;../base-4.13.0.0/system-io&quot;&gt;System.IO&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="977519e345c48d6b762f0fe7418ce9a32ef4bccc" translate="yes" xml:space="preserve">
          <source>POSIX IO support. These types and functions correspond to the unix functions open(2), close(2), etc. For more portable functions which are more like fopen(3) and friends from stdio.h, see &lt;a href=&quot;../base-4.14.1.0/system-io&quot;&gt;System.IO&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="079d0f57f2334c2adbdc7591a011db4dd709359a" translate="yes" xml:space="preserve">
          <source>POSIX Terminal support</source>
          <target state="translated">Поддержка POSIX-терминала</target>
        </trans-unit>
        <trans-unit id="22aca2377521adf00292736ce43c51b0c7e32ea3" translate="yes" xml:space="preserve">
          <source>POSIX Time support</source>
          <target state="translated">Поддержка POSIX Time</target>
        </trans-unit>
        <trans-unit id="292baf4f2f262bc63b703e55a72343bbb3636618" translate="yes" xml:space="preserve">
          <source>POSIX data types</source>
          <target state="translated">типы данных POSIX</target>
        </trans-unit>
        <trans-unit id="318e90ecf5469e2adbc593a53864478fbcf3bad5" translate="yes" xml:space="preserve">
          <source>POSIX data types: Haskell equivalents of the types defined by the &lt;code&gt;&amp;lt;sys/types.h&amp;gt;&lt;/code&gt; C header on a POSIX system.</source>
          <target state="translated">Типы данных POSIX: эквиваленты Haskell типов, определенных заголовком C &lt;code&gt;&amp;lt;sys/types.h&amp;gt;&lt;/code&gt; в системе POSIX.</target>
        </trans-unit>
        <trans-unit id="bb81ead9bcb349c7209884ed07f7695a7f46f32c" translate="yes" xml:space="preserve">
          <source>POSIX defines operations to get information, such as owner, permissions, size and access times, about a file. This information is represented by the &lt;code&gt;&lt;a href=&quot;system-posix-files#t:FileStatus&quot;&gt;FileStatus&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">POSIX определяет операции для получения информации о файле, такой как владелец, разрешения, размер и время доступа. Эта информация представлена типом &lt;code&gt;&lt;a href=&quot;system-posix-files#t:FileStatus&quot;&gt;FileStatus&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a83136c082ba1746dcd67b3e4264fcabc3118b4" translate="yes" xml:space="preserve">
          <source>POSIX defines operations to get information, such as owner, permissions, size and access times, about a file. This information is represented by the &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#t:FileStatus&quot;&gt;FileStatus&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">POSIX определяет операции для получения информации о файле, такой как владелец, разрешения, размер и время доступа. Эта информация представлена типом &lt;code&gt;&lt;a href=&quot;system-posix-files-bytestring#t:FileStatus&quot;&gt;FileStatus&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2247d636852d4974c20bc81cef3eee8f8693cb1" translate="yes" xml:space="preserve">
          <source>POSIX environment support</source>
          <target state="translated">поддержка среды POSIX</target>
        </trans-unit>
        <trans-unit id="77ab5f467c12abe5e944670123be671c69f9c1ad" translate="yes" xml:space="preserve">
          <source>POSIX error support</source>
          <target state="translated">поддержка ошибок POSIX</target>
        </trans-unit>
        <trans-unit id="577fae15c03302f9533fba712b949371600860a0" translate="yes" xml:space="preserve">
          <source>POSIX file control support</source>
          <target state="translated">поддержка управления файлами POSIX</target>
        </trans-unit>
        <trans-unit id="441cd303356e44c35c8b81962cf0dd9d836ac5e9" translate="yes" xml:space="preserve">
          <source>POSIX miscellaneous stuff, mostly from unistd.h</source>
          <target state="translated">POSIX разные вещи,в основном из unistd.h</target>
        </trans-unit>
        <trans-unit id="0f6ec8374b30a1b5c96490a77a0ceae4de07fc7d" translate="yes" xml:space="preserve">
          <source>POSIX named semaphore support.</source>
          <target state="translated">POSIX назвал семафорную поддержку.</target>
        </trans-unit>
        <trans-unit id="08bafc86e53a454435af5c1c18fc679a44dc565c" translate="yes" xml:space="preserve">
          <source>POSIX process support. See also the System.Cmd and System.Process modules in the process package.</source>
          <target state="translated">Поддержка процесса POSIX.См.также модули System.Cmd и System.Process в пакете процессов.</target>
        </trans-unit>
        <trans-unit id="654e2e0f35661132458d5d0822add53293643b2a" translate="yes" xml:space="preserve">
          <source>POSIX resource support</source>
          <target state="translated">поддержка POSIX-ресурсов</target>
        </trans-unit>
        <trans-unit id="ebcc5225834879beb7456c935b043f8860521e53" translate="yes" xml:space="preserve">
          <source>POSIX shared memory support.</source>
          <target state="translated">Поддержка разделяемой памяти POSIX.</target>
        </trans-unit>
        <trans-unit id="45920651e67f5412a47b9d8f7bc47165c18613b2" translate="yes" xml:space="preserve">
          <source>POSIX signal support</source>
          <target state="translated">поддержка сигнала POSIX</target>
        </trans-unit>
        <trans-unit id="4502a50a73e2d715093b7326bc2eb514a0e679e0" translate="yes" xml:space="preserve">
          <source>POSIX temporary file and directory creation functions.</source>
          <target state="translated">Функции создания временных файлов и каталогов POSIX.</target>
        </trans-unit>
        <trans-unit id="3fab173d191fed500e90a6dee632c803a84facb1" translate="yes" xml:space="preserve">
          <source>POSIX time is the nominal time since 1970-01-01 00:00 UTC</source>
          <target state="translated">POSIX время-это номинальное время с 1970-01-01 00:00 UTC.</target>
        </trans-unit>
        <trans-unit id="58f93d74398f0946ad737dd9368214ee4e669e99" translate="yes" xml:space="preserve">
          <source>POSIX time, if you need to deal with timestamps and the like. Most people won't need this module.</source>
          <target state="translated">POSIX время,если вам нужно иметь дело с метками времени и тому подобное.Большинству людей этот модуль не понадобится.</target>
        </trans-unit>
        <trans-unit id="b94c2396f7667c2847b93362ca54298f2a041bb0" translate="yes" xml:space="preserve">
          <source>POSIX user/group support</source>
          <target state="translated">Поддержка пользователей/групп POSIX</target>
        </trans-unit>
        <trans-unit id="1432f73e88b32fcc9fcbc2fc9541f54571421a18" translate="yes" xml:space="preserve">
          <source>POSIX: either file or directory link; Windows: file link</source>
          <target state="translated">POSIX:ссылка на файл или каталог;Windows:ссылка на файл.</target>
        </trans-unit>
        <trans-unit id="c5f7093efb2198f16b7b44117d72ea5f7c731b36" translate="yes" xml:space="preserve">
          <source>POSIXTime</source>
          <target state="translated">POSIXTime</target>
        </trans-unit>
        <trans-unit id="6fa84fb314e576ad58ab64235ec9f5692ff698e9" translate="yes" xml:space="preserve">
          <source>POSVERSIONINFOEX</source>
          <target state="translated">POSVERSIONINFOEX</target>
        </trans-unit>
        <trans-unit id="bb2083b91dbcda1acd7b19d79a3721e0e2c32aa6" translate="yes" xml:space="preserve">
          <source>PROPORTION</source>
          <target state="translated">PROPORTION</target>
        </trans-unit>
        <trans-unit id="48a6bb377c2d242262af4edce1280a39ef449e2a" translate="yes" xml:space="preserve">
          <source>PSID</source>
          <target state="translated">PSID</target>
        </trans-unit>
        <trans-unit id="3051dda3f76f70a2a56f76bf7a6055149e32138b" translate="yes" xml:space="preserve">
          <source>PUCHAR</source>
          <target state="translated">PUCHAR</target>
        </trans-unit>
        <trans-unit id="8baf870b616352faf6c7c0ecdaf54c8968a6fcff" translate="yes" xml:space="preserve">
          <source>Pack the elements of an unboxed tuple into a vector.</source>
          <target state="translated">Упакуйте элементы неупакованного кортежа в вектор.</target>
        </trans-unit>
        <trans-unit id="f1a7e630429c6941a869ac578c4e8fd6c98967d0" translate="yes" xml:space="preserve">
          <source>Package &lt;code&gt;P&lt;/code&gt; is trusted by C</source>
          <target state="translated">Пакет &lt;code&gt;P&lt;/code&gt; доверяет C</target>
        </trans-unit>
        <trans-unit id="632c494fdb55eaa49a7e790eda0b61cb93138010" translate="yes" xml:space="preserve">
          <source>Package environments can be modified by further command line arguments; for example, if you specify &lt;code&gt;-package foo&lt;/code&gt; on the command line, then package ⟨foo⟩ will be visible even if it&amp;rsquo;s not listed in the currently active package environment.</source>
          <target state="translated">Среды пакетов могут быть изменены дополнительными аргументами командной строки; например, если вы укажете &lt;code&gt;-package foo&lt;/code&gt; в командной строке, то пакет &amp;laquo;foo&amp;raquo; будет виден, даже если он не указан в текущей активной среде пакета.</target>
        </trans-unit>
        <trans-unit id="909c5fa9bb52d913940480e63569e9457c322a40" translate="yes" xml:space="preserve">
          <source>Package imports with thinning/renaming do not hide other versions of the package: e.g. if containers-0.9 is already exposed, &lt;code&gt;-package &quot;containers-0.8 (Data.List as ListV8)&quot;&lt;/code&gt; will only add an additional binding to the environment. Similarly, &lt;code&gt;-package &quot;base (Data.Bool as Bool)&quot; -package &quot;base (Data.List as List)&quot;&lt;/code&gt; is equivalent to &lt;code&gt;-package &quot;base (Data.Bool as Bool, Data.List as List)&quot;&lt;/code&gt;. Literal names must refer to modules defined by the original package, so for example &lt;code&gt;-package &quot;base (Data.Bool as Bool, Bool as Baz)&quot;&lt;/code&gt; is invalid unless there was a &lt;code&gt;Bool&lt;/code&gt; module defined in the original package. Hiding a package also clears all of its renamings.</source>
          <target state="translated">Импорт пакетов с прореживанием / переименованием не скрывает другие версии пакета: например, если контейнеры-0.9 уже предоставлены, &lt;code&gt;-package &quot;containers-0.8 (Data.List as ListV8)&quot;&lt;/code&gt; только добавит дополнительную привязку к среде. Точно так же &lt;code&gt;-package &quot;base (Data.Bool as Bool)&quot; -package &quot;base (Data.List as List)&quot;&lt;/code&gt; эквивалентно &lt;code&gt;-package &quot;base (Data.Bool as Bool, Data.List as List)&quot;&lt;/code&gt; . Буквальные имена должны относиться к модулям, определенным в исходном пакете, поэтому, например, &lt;code&gt;-package &quot;base (Data.Bool as Bool, Bool as Baz)&quot;&lt;/code&gt; недействителен, если в исходном пакете не был определен модуль &lt;code&gt;Bool&lt;/code&gt; . При скрытии пакета также удаляются все его переименования.</target>
        </trans-unit>
        <trans-unit id="5c9811b51086b6dfb42e84534c5b2b28e924b044" translate="yes" xml:space="preserve">
          <source>Package key of the package where the static pointer is defined</source>
          <target state="translated">Ключ пакета,в котором определен статический указатель</target>
        </trans-unit>
        <trans-unit id="2218a05564cb586c32edc345988a8e44eb09178b" translate="yes" xml:space="preserve">
          <source>PackageImports</source>
          <target state="translated">PackageImports</target>
        </trans-unit>
        <trans-unit id="bd3f84301261878bbaaa34010d966279bf40adc1" translate="yes" xml:space="preserve">
          <source>Packed, unboxed, heap-resident arrays. Suitable for performance critical use, both in terms of large data quantities and high speed.</source>
          <target state="translated">Упакованные,неупакованные,кучевые резидентные массивы.Подходят для критически важного использования с точки зрения производительности,как с точки зрения больших объемов данных,так и с точки зрения высокой скорости.</target>
        </trans-unit>
        <trans-unit id="f01120d5c963de430516067cfc099589e4545ca8" translate="yes" xml:space="preserve">
          <source>Packing &lt;code&gt;CString&lt;/code&gt;s and pointers</source>
          <target state="translated">Упаковка &lt;code&gt;CString&lt;/code&gt; и указателей</target>
        </trans-unit>
        <trans-unit id="285f956c0084bc89a501b362eed07b802bf41e30" translate="yes" xml:space="preserve">
          <source>Packing CStrings and pointers</source>
          <target state="translated">Упаковка CStrings и указатели</target>
        </trans-unit>
        <trans-unit id="a0c8d65ca6bc539ca2a1b96b6e86e38a5baa9898" translate="yes" xml:space="preserve">
          <source>PageMode</source>
          <target state="translated">PageMode</target>
        </trans-unit>
        <trans-unit id="7bf87bd02ae06b49144154cc04ef67e79107b5b6" translate="yes" xml:space="preserve">
          <source>PairS</source>
          <target state="translated">PairS</target>
        </trans-unit>
        <trans-unit id="a0ef17e085dcffd83b4ea0ed40152454a057e949" translate="yes" xml:space="preserve">
          <source>Pairs of format characters and the corresponding part of the input.</source>
          <target state="translated">Пары символов формата и соответствующая часть ввода.</target>
        </trans-unit>
        <trans-unit id="fa734be254acf2623327f645a9dcb22bb473a95a" translate="yes" xml:space="preserve">
          <source>Par1</source>
          <target state="translated">Par1</target>
        </trans-unit>
        <trans-unit id="5ef24093c55e5f8c5a103b53816f97bf24faf823" translate="yes" xml:space="preserve">
          <source>ParFlags</source>
          <target state="translated">ParFlags</target>
        </trans-unit>
        <trans-unit id="c48f526b9da677a33e39fdcf90d9349b58ca51c9" translate="yes" xml:space="preserve">
          <source>ParagraphSeparator</source>
          <target state="translated">ParagraphSeparator</target>
        </trans-unit>
        <trans-unit id="9588a94b078f52bbf1493d6bc87cb1b2c5cf0b63" translate="yes" xml:space="preserve">
          <source>Parallel list comprehensions are a natural extension to list comprehensions. List comprehensions can be thought of as a nice syntax for writing maps and filters. Parallel comprehensions extend this to include the &lt;code&gt;zipWith&lt;/code&gt; family.</source>
          <target state="translated">Понимание параллельных списков - естественное расширение понимания списков. Составление списков можно рассматривать как хороший синтаксис для написания карт и фильтров. Параллельное понимание расширяет это, включая семейство &lt;code&gt;zipWith&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2e51df32c5b57a230767d0f2b8d7fdcefacc103" translate="yes" xml:space="preserve">
          <source>Parallel statements (as with &lt;a href=&quot;#extension-ParallelListComp&quot;&gt;&lt;code&gt;ParallelListComp&lt;/code&gt;&lt;/a&gt;):</source>
          <target state="translated">Параллельные операторы (как с &lt;a href=&quot;#extension-ParallelListComp&quot;&gt; &lt;code&gt;ParallelListComp&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="fea4bc6e4f648852182893a472b471676de0d12f" translate="yes" xml:space="preserve">
          <source>Parallel statements are translated using the &lt;code&gt;mzip&lt;/code&gt; function, which requires a &lt;code&gt;MonadZip&lt;/code&gt; instance defined in &lt;a href=&quot;../libraries/base-4.13.0.0/control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt;:</source>
          <target state="translated">Параллельные операторы переводятся с &lt;code&gt;mzip&lt;/code&gt; функции mzip , для которой требуется экземпляр &lt;code&gt;MonadZip&lt;/code&gt; , определенный в &lt;a href=&quot;../libraries/base-4.13.0.0/control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8ae51b740caaf8903073ae521aa80b2a759b050a" translate="yes" xml:space="preserve">
          <source>Parallel statements are translated using the &lt;code&gt;mzip&lt;/code&gt; function, which requires a &lt;code&gt;MonadZip&lt;/code&gt; instance defined in &lt;a href=&quot;../libraries/base-4.14.1.0/control-monad-zip&quot;&gt;Control.Monad.Zip&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b857f551749600d7503643d97e6a057f00f03140" translate="yes" xml:space="preserve">
          <source>ParallelArrays</source>
          <target state="translated">ParallelArrays</target>
        </trans-unit>
        <trans-unit id="69e4ffd2f4416a199955cb75660e245acf30a524" translate="yes" xml:space="preserve">
          <source>ParallelListComp</source>
          <target state="translated">ParallelListComp</target>
        </trans-unit>
        <trans-unit id="26eaabc74e0ecdfad0e89f8cdfa1c0968e3e9ed4" translate="yes" xml:space="preserve">
          <source>Parameterizable list monad, with an inner monad.</source>
          <target state="translated">Параметрический список монады,с внутренней монадой.</target>
        </trans-unit>
        <trans-unit id="02627bceb378089ccc20d97b38e35aa601c5dccf" translate="yes" xml:space="preserve">
          <source>Parameters can also be given explicit kind signatures if needed. We call the number of parameters in a type family declaration, the family&amp;rsquo;s arity, and all applications of a type family must be fully saturated with respect to that arity. This requirement is unlike ordinary type synonyms and it implies that the kind of a type family is not sufficient to determine a family&amp;rsquo;s arity, and hence in general, also insufficient to determine whether a type family application is well formed. As an example, consider the following declaration:</source>
          <target state="translated">При необходимости параметры также могут иметь явную подпись. Мы называем количество параметров в объявлении семейства типов, арностью семейства, и все приложения семейства типов должны быть полностью насыщены по отношению к этой арности. Это требование отличается от обычных синонимов типов и подразумевает, что тип семейства типов недостаточен для определения арности семейства и, следовательно, в целом также недостаточен для определения того, правильно ли сформировано приложение семейства типов. В качестве примера рассмотрим следующее объявление:</target>
        </trans-unit>
        <trans-unit id="0a9ec76bad7b4461d4a1d8543c0eaec740e99cd7" translate="yes" xml:space="preserve">
          <source>Parameters concerning context switching</source>
          <target state="translated">Параметры,касающиеся переключения контекста</target>
        </trans-unit>
        <trans-unit id="cf4b1fc0bf92b4cc879c4bcbd45ef9ceab45e50c" translate="yes" xml:space="preserve">
          <source>Parameters of the cost-center profiler</source>
          <target state="translated">Параметры профилировщика по центру затрат</target>
        </trans-unit>
        <trans-unit id="5457041fcc4bc9dce847560d14805ad2049bc05f" translate="yes" xml:space="preserve">
          <source>Parameters of the garbage collector.</source>
          <target state="translated">Параметры сборщика мусора.</target>
        </trans-unit>
        <trans-unit id="f5c5e2b2e3b21a175ea9ad3d8e177b1de7b7db91" translate="yes" xml:space="preserve">
          <source>Parameters of the runtime system</source>
          <target state="translated">Параметры системы исполнения</target>
        </trans-unit>
        <trans-unit id="070eab54f987bb88657d5187688919e26117fb36" translate="yes" xml:space="preserve">
          <source>Parameters pertaining to event tracing</source>
          <target state="translated">Параметры,касающиеся отслеживания событий</target>
        </trans-unit>
        <trans-unit id="4c7921cf2c489ab76d8375681841d6fd080e0971" translate="yes" xml:space="preserve">
          <source>Parameters pertaining to parallelism</source>
          <target state="translated">Параметры,относящиеся к параллельности</target>
        </trans-unit>
        <trans-unit id="d33eae1bb8afa3f42df28e6f633413293fbaba1b" translate="yes" xml:space="preserve">
          <source>Parameters pertaining to the cost-center profiler.</source>
          <target state="translated">Параметры,относящиеся к профилировщику по центру затрат.</target>
        </trans-unit>
        <trans-unit id="c4c7a142cf5276b1d4ff46847b29bfe9297aa11a" translate="yes" xml:space="preserve">
          <source>Parameters pertaining to ticky-ticky profiler</source>
          <target state="translated">Параметры,относящиеся к профилировщику с тики-липучкой</target>
        </trans-unit>
        <trans-unit id="23d692f07a3fb646a8e54fcd2dc724f4ea2ed2c6" translate="yes" xml:space="preserve">
          <source>Parent</source>
          <target state="translated">Parent</target>
        </trans-unit>
        <trans-unit id="955199855b34047564f59f6340738ac93b4a24c6" translate="yes" xml:space="preserve">
          <source>Parent window, used for modal logon dialog</source>
          <target state="translated">Родительское окно,используемое для модального диалога входа в систему</target>
        </trans-unit>
        <trans-unit id="dcdb885a7f7995a4ae5f7735e2dbf7dd0df6c82b" translate="yes" xml:space="preserve">
          <source>ParentName</source>
          <target state="translated">ParentName</target>
        </trans-unit>
        <trans-unit id="fc2a5e24ef9b291c16b2d7d017af998e3868317a" translate="yes" xml:space="preserve">
          <source>Parenthesize an value if the boolean is true.</source>
          <target state="translated">Отправьте в родительский комитет значение,если булевы верны.</target>
        </trans-unit>
        <trans-unit id="f6fdd858f972c18cfc63e77f0f9f6ec35b5f5477" translate="yes" xml:space="preserve">
          <source>Parse a single lexeme</source>
          <target state="translated">Разобрать одну лексему</target>
        </trans-unit>
        <trans-unit id="7d1ffbe57b690c268aa7d881a60c206e50319514" translate="yes" xml:space="preserve">
          <source>Parse a string using the &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instance. Succeeds if there is exactly one valid result.</source>
          <target state="translated">Разберите строку с помощью экземпляра &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; . Успешно, если есть ровно один действительный результат.</target>
        </trans-unit>
        <trans-unit id="0be062266a17add68a7b668ce79822b3887a5efd" translate="yes" xml:space="preserve">
          <source>Parse a string using the &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; instance. Succeeds if there is exactly one valid result. A &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; value indicates a parse error.</source>
          <target state="translated">Разберите строку с помощью экземпляра &lt;code&gt;&lt;a href=&quot;text-read#t:Read&quot;&gt;Read&lt;/a&gt;&lt;/code&gt; . Успешно, если есть ровно один действительный результат. Значение &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; указывает на ошибку синтаксического анализа.</target>
        </trans-unit>
        <trans-unit id="89b7b9c3cafacbc3fbfa8f182d03db0eb57615a7" translate="yes" xml:space="preserve">
          <source>Parse a time value given a format string. Fails if the input could not be parsed using the given format. See &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Анализировать значение времени по строке формата. Сбой, если вход не может быть проанализирован с использованием данного формата. Подробности смотрите в &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01b9f449ab6343ea54f02e26f1e9faf3b8a4900b" translate="yes" xml:space="preserve">
          <source>Parse a time value given a format string. See &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Анализировать значение времени по строке формата. Подробности смотрите в &lt;code&gt;&lt;a href=&quot;data-time-format#v:parseTimeM&quot;&gt;parseTimeM&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bcd9fc04842aba6ce12e98373cf3b96da5c978b" translate="yes" xml:space="preserve">
          <source>Parse a value in either extended or basic format</source>
          <target state="translated">Разобрать значение в расширенном или базовом формате</target>
        </trans-unit>
        <trans-unit id="2960f380b30894cf9484ebfaf5167a7bcf5265fb" translate="yes" xml:space="preserve">
          <source>Parse a value in the format</source>
          <target state="translated">Разобрать значение в формате</target>
        </trans-unit>
        <trans-unit id="9f1ffb1644b47f32b305b727b8e2f0c4183a5335" translate="yes" xml:space="preserve">
          <source>Parse errors</source>
          <target state="translated">Ошибки при разборе</target>
        </trans-unit>
        <trans-unit id="7d315fdee5a3dc981c3a0b2bb2a2a03e5b911e53" translate="yes" xml:space="preserve">
          <source>Parse the most commonly used ISO 8601 format.</source>
          <target state="translated">Разбор наиболее часто используемого формата ISO 8601.</target>
        </trans-unit>
        <trans-unit id="ba0d4aca2cb647cf93798740ced61a0bfc954e4c" translate="yes" xml:space="preserve">
          <source>Parse the specified lexeme and continue as specified. Esp useful for nullary constructors; e.g. &lt;code&gt;choose [(&quot;A&quot;, return A), (&quot;B&quot;, return B)]&lt;/code&gt; We match both Ident and Symbol because the constructor might be an operator eg &lt;code&gt;(:~:)&lt;/code&gt;</source>
          <target state="translated">Проанализируйте указанную лексему и продолжайте, как указано. Esp полезно для нулевых конструкторов; например, &lt;code&gt;choose [(&quot;A&quot;, return A), (&quot;B&quot;, return B)]&lt;/code&gt; Мы сопоставляем как Ident, так и Symbol, потому что конструктор может быть оператором, например &lt;code&gt;(:~:)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df633b0d4b46131792d5ed485e94f872474b0ba2" translate="yes" xml:space="preserve">
          <source>ParseError</source>
          <target state="translated">ParseError</target>
        </trans-unit>
        <trans-unit id="e74c212b67cd9480fc62438093300cf8d7822087" translate="yes" xml:space="preserve">
          <source>ParseTime</source>
          <target state="translated">ParseTime</target>
        </trans-unit>
        <trans-unit id="6b8eadf238999f4577c899508ccf16700302cf3d" translate="yes" xml:space="preserve">
          <source>Parsec</source>
          <target state="translated">Parsec</target>
        </trans-unit>
        <trans-unit id="93d479a55d45ca812192b9c77cc2d7af365791e8" translate="yes" xml:space="preserve">
          <source>Parsec compatibility module</source>
          <target state="translated">Модуль совместимости Parsec</target>
        </trans-unit>
        <trans-unit id="0ebbdba417d24c756ec9c6928e541e59b0910456" translate="yes" xml:space="preserve">
          <source>ParsecT</source>
          <target state="translated">ParsecT</target>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="7a7dcdbfe4da553cb0bcd34e1518876f24101cf8" translate="yes" xml:space="preserve">
          <source>Parser from ParseLib with Hugs:</source>
          <target state="translated">Парсер из &quot;ПарсеЛиб с объятиями&quot;:</target>
        </trans-unit>
        <trans-unit id="e72f7d0405a8ed6b01d53d0eb6448cf48e5195fa" translate="yes" xml:space="preserve">
          <source>ParserT monad transformer and Parser type</source>
          <target state="translated">Трансформатор ParserT monad и тип Parser</target>
        </trans-unit>
        <trans-unit id="efdb99a054fb37fae9696b10ed15efeeb9f36b28" translate="yes" xml:space="preserve">
          <source>Parsers</source>
          <target state="translated">Parsers</target>
        </trans-unit>
        <trans-unit id="028c9661ab1e61cb4cec3408691389cf51931b07" translate="yes" xml:space="preserve">
          <source>Parses a CRLF (see &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:crlf&quot;&gt;crlf&lt;/a&gt;&lt;/code&gt;) or LF (see &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:newline&quot;&gt;newline&lt;/a&gt;&lt;/code&gt;) end-of-line. Returns a newline character ('\n').</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;text-parsec-char#v:crlf&quot;&gt;crlf&lt;/a&gt;&lt;/code&gt; конец &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:newline&quot;&gt;newline&lt;/a&gt;&lt;/code&gt; CRLF (см. Crlf ) или LF (см. Новую строку). Возвращает символ новой строки ('\ n').</target>
        </trans-unit>
        <trans-unit id="8d0fe9ef051a87bd91f7557d4ccd0b8aa18260b8" translate="yes" xml:space="preserve">
          <source>Parses a alphabetic or numeric Unicode characters according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt;. Returns the parsed character.</source>
          <target state="translated">Анализирует буквенные или числовые символы Юникода в соответствии с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt; . Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="9deeeeaf087ec53d20f87cb865f75c4b16fddfbf" translate="yes" xml:space="preserve">
          <source>Parses a alphabetic or numeric Unicode characters according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isAlphaNum&quot;&gt;isAlphaNum&lt;/a&gt;&lt;/code&gt;. Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec0ce986154232212bbae5b429b845073d2f256" translate="yes" xml:space="preserve">
          <source>Parses a carriage return character ('\r') followed by a newline character ('\n'). Returns a newline character.</source>
          <target state="translated">Разбирает символ возврата каретки ('\r'),за которым следует символ новой строки ('\n').Возвращает символ новой строки.</target>
        </trans-unit>
        <trans-unit id="6fcd7bd8ab3c7f5c13d44837c892a5fb90c8df7f" translate="yes" xml:space="preserve">
          <source>Parses a hexadecimal digit (a digit or a letter between 'a' and 'f' or 'A' and 'F'). Returns the parsed character.</source>
          <target state="translated">Разбирает шестнадцатеричную цифру (цифра или буква между 'a' и 'f' или 'A' и 'F').Возвращает разобранный символ.</target>
        </trans-unit>
        <trans-unit id="dc1d6a166fc0a683ffa31ab7722f3e4d373d0800" translate="yes" xml:space="preserve">
          <source>Parses a lower case character (according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt; символ нижнего регистра (согласно isLower ). Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="bb6d66af149d4f2597f57f132fa38ff395ba24cb" translate="yes" xml:space="preserve">
          <source>Parses a lower case character (according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isLower&quot;&gt;isLower&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fea022f0b2ddc5b11db2fc69fd4e212597b724d" translate="yes" xml:space="preserve">
          <source>Parses a newline character ('\n'). Returns a newline character.</source>
          <target state="translated">Разбирает символ новой строки ('\n').Возвращает символ новой строки.</target>
        </trans-unit>
        <trans-unit id="eb63a33324f0ad8223e6e2bee48f6654bd369140" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the decimal system. Returns the value of the number.</source>
          <target state="translated">Разбирает целое число в десятичной системе с неотрицательным результатом.Возвращает значение числа.</target>
        </trans-unit>
        <trans-unit id="5df553864aa00be005f0685bbc7543dc85668e7b" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the hexadecimal system. The number should be prefixed with &quot;x&quot; or &quot;X&quot;. Returns the value of the number.</source>
          <target state="translated">Разбирает неотрицательное целое число в шестнадцатеричной системе.Число должно иметь префикс &quot;x&quot; или &quot;X&quot;.Возвращает значение числа.</target>
        </trans-unit>
        <trans-unit id="9fdb8835ffaf98232d803de2c75c7f642b6b9764" translate="yes" xml:space="preserve">
          <source>Parses a non-negative whole number in the octal system. The number should be prefixed with &quot;o&quot; or &quot;O&quot;. Returns the value of the number.</source>
          <target state="translated">Обрабатывает неотрицательное целое число в восьмеричной системе.Число должно иметь префикс &quot;o&quot; или &quot;O&quot;.Возвращает значение числа.</target>
        </trans-unit>
        <trans-unit id="702ae31de69c688b66eaaac89301521608613ccc" translate="yes" xml:space="preserve">
          <source>Parses a tab character ('\t'). Returns a tab character.</source>
          <target state="translated">Разбирает символ табуляции ('\t').Возвращает символ табуляции.</target>
        </trans-unit>
        <trans-unit id="a9324545ed792c080b35aa8a66315fcacf5866ec" translate="yes" xml:space="preserve">
          <source>Parses a time value given a format string. Supports the same %-codes as &lt;code&gt;formatTime&lt;/code&gt;, including &lt;code&gt;%-&lt;/code&gt;, &lt;code&gt;%_&lt;/code&gt; and &lt;code&gt;%0&lt;/code&gt; modifiers, however padding widths are not supported. Case is not significant in the input string. Some variations in the input are accepted:</source>
          <target state="translated">Анализирует значение времени по строке формата. Поддерживает те же% -коды, что и &lt;code&gt;formatTime&lt;/code&gt; , включая модификаторы &lt;code&gt;%-&lt;/code&gt; , &lt;code&gt;%_&lt;/code&gt; и &lt;code&gt;%0&lt;/code&gt; , однако ширина заполнения не поддерживается. Регистр не имеет значения во входной строке. Допускаются некоторые вариации ввода:</target>
        </trans-unit>
        <trans-unit id="05a240ec2c4ee54b0aafba8944a0f8fd2d337fdb" translate="yes" xml:space="preserve">
          <source>Parses a white space character (any character which satisfies &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt;) Returns the parsed character.</source>
          <target state="translated">Анализирует пробельный символ (любой символ, удовлетворяющий &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt; ). Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="d903820e65a3e9a2aa9445b7aba2e9d2375393f9" translate="yes" xml:space="preserve">
          <source>Parses a white space character (any character which satisfies &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isSpace&quot;&gt;isSpace&lt;/a&gt;&lt;/code&gt;) Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2249741f599993c9ad36b1f2a0b1cf7813b2acd1" translate="yes" xml:space="preserve">
          <source>Parses an ASCII digit. Returns the parsed character.</source>
          <target state="translated">Разбирает ASCII-цифру.Возвращает разобранный символ.</target>
        </trans-unit>
        <trans-unit id="c370ae0764a200203299326c366ffab380d2d3ab" translate="yes" xml:space="preserve">
          <source>Parses an alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">Разбирает буквенные символы Unicode (строчные, прописные и заглавные буквы, а также буквы без регистровых букв и буквы модификаторов в соответствии с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt; ). Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="d33286169144156c705451434bd3458f2c243164" translate="yes" xml:space="preserve">
          <source>Parses an alphabetic Unicode characters (lower-case, upper-case and title-case letters, plus letters of caseless scripts and modifiers letters according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isAlpha&quot;&gt;isAlpha&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b02856d3ea3b460a7fe547f16d9711dbfd09488" translate="yes" xml:space="preserve">
          <source>Parses an octal digit (a character between '0' and '7'). Returns the parsed character.</source>
          <target state="translated">Разбирает восьмеричную цифру (символ между '0' и '7').Возвращает разобранный символ.</target>
        </trans-unit>
        <trans-unit id="33366516b691b44fa5ef3fef5829a9e0268ab2e5" translate="yes" xml:space="preserve">
          <source>Parses an upper case letter (according to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt; букву (согласно isUpper ). Возвращает проанализированный символ.</target>
        </trans-unit>
        <trans-unit id="70ed6ac072bae182bcb0c4097a1ee90360d81c38" translate="yes" xml:space="preserve">
          <source>Parses an upper case letter (according to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-char#v:isUpper&quot;&gt;isUpper&lt;/a&gt;&lt;/code&gt;). Returns the parsed character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20d25499201ff10834936ff90921a8f64cf44d5" translate="yes" xml:space="preserve">
          <source>Parses and returns the specified character.</source>
          <target state="translated">Разбирает и возвращает указанный символ.</target>
        </trans-unit>
        <trans-unit id="10734aa6302a05d65e718e02f8812ae26f28348b" translate="yes" xml:space="preserve">
          <source>Parses and returns the specified string.</source>
          <target state="translated">Обрабатывает и возвращает указанную строку.</target>
        </trans-unit>
        <trans-unit id="d6fafa4ab77dbc509075d8350b5ba85d1892f213" translate="yes" xml:space="preserve">
          <source>Parses any white space. White space consists of &lt;em&gt;zero&lt;/em&gt; or more occurrences of a &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt;, a line comment or a block (multi line) comment. Block comments may be nested. How comments are started and ended is defined in the &lt;code&gt;&lt;a href=&quot;text-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; that is passed to &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Анализирует любое пустое пространство. Пробел состоит из &lt;em&gt;нуля&lt;/em&gt; или нескольких вхождений &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt; , строчного комментария или блочного (многострочного) комментария. Комментарии блока могут быть вложенными. Как начинаются и заканчиваются комментарии, определяется в &lt;code&gt;&lt;a href=&quot;text-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; , который передается в &lt;code&gt;&lt;a href=&quot;text-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7901356594fa3bfff82ffd8d1edc90fccbbbe877" translate="yes" xml:space="preserve">
          <source>Parses any white space. White space consists of &lt;em&gt;zero&lt;/em&gt; or more occurrences of a &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt;, a line comment or a block (multi line) comment. Block comments may be nested. How comments are started and ended is defined in the &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; that is passed to &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Анализирует любое пустое пространство. Пробел состоит из &lt;em&gt;нуля&lt;/em&gt; или нескольких вхождений &lt;code&gt;&lt;a href=&quot;text-parsec-char#v:space&quot;&gt;space&lt;/a&gt;&lt;/code&gt; , строчного комментария или блочного (многострочного) комментария. Комментарии блока могут быть вложенными. Как начинаются и заканчиваются комментарии, определяется в &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#t:LanguageDef&quot;&gt;LanguageDef&lt;/a&gt;&lt;/code&gt; , который передается в &lt;code&gt;&lt;a href=&quot;text-parsercombinators-parsec-token#v:makeTokenParser&quot;&gt;makeTokenParser&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e703e840a13f17d4e0aa6d6407f1c2c408c1f58" translate="yes" xml:space="preserve">
          <source>Parses one or more occurrences of the given parser.</source>
          <target state="translated">Разбирает одно или несколько вхождений данного синтаксического анализатора.</target>
        </trans-unit>
        <trans-unit id="9d53b4cf7f3be2a61b0e8567c529b4e5312e73c2" translate="yes" xml:space="preserve">
          <source>Parses the first one or more characters satisfying the predicate. Fails if none, else succeeds exactly once having consumed all the characters Hence NOT the same as (many1 (satisfy p))</source>
          <target state="translated">Разбирает первый или несколько символов,удовлетворяющих предикату.Не удается,если ни один из них не удовлетворяет предикату,остальные удаются ровно один раз,потребляя все символы Следовательно,НЕ совпадают с (многие1 (удовлетворяют p))</target>
        </trans-unit>
        <trans-unit id="4ea87d4852d98a90a7eae890a816dda2be9b64c4" translate="yes" xml:space="preserve">
          <source>Parses the first zero or more characters satisfying the predicate. Always succeeds, exactly once having consumed all the characters Hence NOT the same as (many (satisfy p))</source>
          <target state="translated">Разбирает первый ноль или более символов,удовлетворяющих предикату.Всегда удается,ровно один раз потребляя все символы Следовательно,НЕ то же самое,что (много (удовлетворяет p))</target>
        </trans-unit>
        <trans-unit id="572002c6d8895463e970cc35f3fcfe00a42feb77" translate="yes" xml:space="preserve">
          <source>Parses zero or more occurrences of the given parser.</source>
          <target state="translated">Разбирает ноль и более вхождений данного синтаксического анализатора.</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="22a3a9fff72c57faae1e1019e01bc253d1b1b0fd" translate="yes" xml:space="preserve">
          <source>Parsing and counting</source>
          <target state="translated">Разбор и подсчет</target>
        </trans-unit>
        <trans-unit id="ba8c1940ba355106d471b605df97a6aaed96283a" translate="yes" xml:space="preserve">
          <source>Parsing of &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s, producing values.</source>
          <target state="translated">Разбор &lt;code&gt;&lt;a href=&quot;data-string#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; s, получение значений.</target>
        </trans-unit>
        <trans-unit id="d9978c1c7b4b043b4e8ba4d6fd699578663835c5" translate="yes" xml:space="preserve">
          <source>Parsing of &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt;s, producing values.</source>
          <target state="translated">Разбор &lt;code&gt;&lt;a href=&quot;prelude#t:String&quot;&gt;String&lt;/a&gt;&lt;/code&gt; s, получение значений.</target>
        </trans-unit>
        <trans-unit id="146ac34ef08d750fbdfddd6a4da5cec9cef4309b" translate="yes" xml:space="preserve">
          <source>Partial type signatures (&lt;a href=&quot;#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt;) work nicely with visible type application. If you want to specify only the second type argument to &lt;code&gt;wurble&lt;/code&gt;, then you can say &lt;code&gt;wurble @_ @Int&lt;/code&gt;. The first argument is a wildcard, just like in a partial type signature. However, if used in a visible type application/visible kind application, it is &lt;em&gt;not&lt;/em&gt; necessary to specify &lt;a href=&quot;#extension-PartialTypeSignatures&quot;&gt;&lt;code&gt;PartialTypeSignatures&lt;/code&gt;&lt;/a&gt; and your code will not generate a warning informing you of the omitted type.</source>
          <target state="translated">Сигнатуры частичного типа ( &lt;a href=&quot;#partial-type-signatures&quot;&gt;Partial Type Signatures&lt;/a&gt; ) хорошо работают с приложением видимого типа. Если вы хотите указать только аргумент второго типа для &lt;code&gt;wurble&lt;/code&gt; , вы можете сказать &lt;code&gt;wurble @_ @Int&lt;/code&gt; . Первый аргумент - это подстановочный знак, как и в сигнатуре частичного типа. Однако, если используется в приложении видимого типа / приложении видимого типа, &lt;em&gt;нет&lt;/em&gt; необходимости указывать &lt;a href=&quot;#extension-PartialTypeSignatures&quot;&gt; &lt;code&gt;PartialTypeSignatures&lt;/code&gt; ,&lt;/a&gt; и ваш код не будет генерировать предупреждение, информирующее вас об опущенном типе.</target>
        </trans-unit>
        <trans-unit id="1fba127279063c3a22121b9b4cb6f20bc4417959" translate="yes" xml:space="preserve">
          <source>Partial type signatures are allowed for bindings, pattern and expression signatures, except that extra-constraints wildcards are not supported in pattern or expression signatures. In the following example a wildcard is used in each of the three possible contexts.</source>
          <target state="translated">Подписи частичного типа допускаются для связок,подписей шаблонов и выражений,за исключением того,что в подстановочных подстановках шаблонов и выражений не поддерживаются подстановочные подстановки с дополнительными ограничениями.В следующем примере в каждом из трех возможных контекстов используется подстановочный символ.</target>
        </trans-unit>
        <trans-unit id="99197905e62274bd86f62c48326e7d56161c0bff" translate="yes" xml:space="preserve">
          <source>Partial type signatures can also be used in &lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt; splices.</source>
          <target state="translated">Сигнатуры частичного типа также можно использовать в соединениях &lt;a href=&quot;#template-haskell&quot;&gt;Template Haskell&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cd1d72bf2e9837a6f932897368ed11b7f1f0901d" translate="yes" xml:space="preserve">
          <source>PartialTypeSignatures</source>
          <target state="translated">PartialTypeSignatures</target>
        </trans-unit>
        <trans-unit id="edf72a43b1f566581c4c8c61fcedab5c2b680b1f" translate="yes" xml:space="preserve">
          <source>Partially-applied type synonym.</source>
          <target state="translated">Частично применяемый синоним типа.</target>
        </trans-unit>
        <trans-unit id="cb737fe624c5231bedfcaa54cdb5adc3c111d709" translate="yes" xml:space="preserve">
          <source>Partitions a list of &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; into two lists. All the &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; elements are extracted, in order, to the first component of the output. Similarly the &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; elements are extracted to the second component of the output.</source>
          <target state="translated">Разбивает список &lt;code&gt;&lt;a href=&quot;data-either#t:Either&quot;&gt;Either&lt;/a&gt;&lt;/code&gt; на два списка. Все элементы &lt;code&gt;&lt;a href=&quot;data-either#v:Left&quot;&gt;Left&lt;/a&gt;&lt;/code&gt; извлекаются по порядку до первого компонента вывода. Точно так же элементы &lt;code&gt;&lt;a href=&quot;data-either#v:Right&quot;&gt;Right&lt;/a&gt;&lt;/code&gt; извлекаются во второй компонент вывода.</target>
        </trans-unit>
        <trans-unit id="d7cd56f2a2a3f47830760edfb89946eb7b9e2cd1" translate="yes" xml:space="preserve">
          <source>Pass</source>
          <target state="translated">Pass</target>
        </trans-unit>
        <trans-unit id="b656895c2b247f1e0e70e028d10540d37d0e6599" translate="yes" xml:space="preserve">
          <source>Pass vector value in vector registers for function calls</source>
          <target state="translated">Передача векторного значения в векторных регистрах для вызова функций</target>
        </trans-unit>
        <trans-unit id="c54625ea849b5bef109f8ba0d861127d6f59b6f9" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to &lt;code&gt;windres&lt;/code&gt; when embedding manifests on Windows. See &lt;code&gt;-fno-embed-manifest&lt;/code&gt; in &lt;a href=&quot;#options-linker&quot;&gt;Options affecting linking&lt;/a&gt;.</source>
          <target state="translated">При встраивании манифестов в Windows передайте &amp;laquo;option&amp;raquo; в &lt;code&gt;windres&lt;/code&gt; . См. &lt;code&gt;-fno-embed-manifest&lt;/code&gt; в разделе &amp;laquo; &lt;a href=&quot;#options-linker&quot;&gt;Параметры, влияющие на связывание&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8e81975f1a1782e659196379fb59c4474c28b85" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to CPP (makes sense only if &lt;code&gt;-cpp&lt;/code&gt; is also on).</source>
          <target state="translated">Передайте ⟨option⟩ CPP (имеет смысл, только если &lt;code&gt;-cpp&lt;/code&gt; также включен ).</target>
        </trans-unit>
        <trans-unit id="1ea097fe05a9a04a2624d60c283feabd36342c47" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the C compiler.</source>
          <target state="translated">Передайте ⟨option⟩ компилятору Си.</target>
        </trans-unit>
        <trans-unit id="84280cb2173bd4a147ed2710a0aa106da9c6e256" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the C++ compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2245e044e2ee9c7852e79e8e7a89e223c413d0" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the DLL generator.</source>
          <target state="translated">Перейдите по адресу ⟨option⟩ в генератор DLL.</target>
        </trans-unit>
        <trans-unit id="3e2650a6a6f4302b3800e44c6e47bf2e4cf0ce70" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the LLVM compiler.</source>
          <target state="translated">Передайте ⟨option⟩ компилятору LLVM.</target>
        </trans-unit>
        <trans-unit id="b7042edda33fdbf17c12be5107e2f71d34b5db58" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the LLVM optimiser.</source>
          <target state="translated">Перейдите по адресу ⟨option⟩ в LLVM-оптимизатор.</target>
        </trans-unit>
        <trans-unit id="87ef00b3846b0862a7242d922be5b1f78c247481" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the assembler.</source>
          <target state="translated">Перейдите по адресу ⟨option⟩ к ассемблеру.</target>
        </trans-unit>
        <trans-unit id="e1c14b71df065b66ba63fa6a047ddbfc4df7c5f0" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the custom pre-processor (see &lt;a href=&quot;#pre-processor&quot;&gt;Options affecting a Haskell pre-processor&lt;/a&gt;).</source>
          <target state="translated">Передайте &amp;laquo;опцию&amp;raquo; пользовательскому препроцессору (см. &amp;laquo; &lt;a href=&quot;#pre-processor&quot;&gt;Опции, влияющие на препроцессор Haskell&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d4e91bac9331b7ddc74206f5303bffcecba44d00" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the interpreter sub-process (see &lt;a href=&quot;ghci#external-interpreter&quot;&gt;Running the interpreter in a separate process&lt;/a&gt;). A common use for this is to pass RTS options e.g., &lt;code&gt;-opti+RTS -opti-A64m&lt;/code&gt;, or to enable verbosity with &lt;code&gt;-opti-v&lt;/code&gt; to see what messages are being exchanged by GHC and the interpreter.</source>
          <target state="translated">Передайте &amp;laquo;опцию&amp;raquo; подпроцессу интерпретатора (см. &amp;laquo; &lt;a href=&quot;ghci#external-interpreter&quot;&gt;Запуск интерпретатора в отдельном процессе&amp;raquo;&lt;/a&gt; ). Обычно это используется для передачи параметров RTS, например, &lt;code&gt;-opti+RTS -opti-A64m&lt;/code&gt; , или для включения подробности с помощью &lt;code&gt;-opti-v&lt;/code&gt; , чтобы увидеть, какие сообщения обмениваются GHC и интерпретатором.</target>
        </trans-unit>
        <trans-unit id="123e7106bfca8a16ebd4af1ce4024a5589cb8353" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the linker when merging object files. In the case of a standard &lt;code&gt;ld&lt;/code&gt;-style linker this should generally include the &lt;code&gt;-r&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7477215f28d252ddc7702887bc7fd7f09e390008" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the linker.</source>
          <target state="translated">Перейдите по адресу ⟨option⟩ в линкер.</target>
        </trans-unit>
        <trans-unit id="ad6fb68d25dbefa94a70ca45187327b9fda1d37c" translate="yes" xml:space="preserve">
          <source>Pass ⟨option⟩ to the literate pre-processor</source>
          <target state="translated">Перейти ⟨option⟩ грамотному препроцессору.</target>
        </trans-unit>
        <trans-unit id="b3edfb19da259e0de688de612c935956f2c99d75" translate="yes" xml:space="preserve">
          <source>Passed to the C compiler.</source>
          <target state="translated">Передано компилятору Си.</target>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="702f90f9120506c7fbea366d22307493c04740b3" translate="yes" xml:space="preserve">
          <source>Password -- may be empty or fake if shadow is in use (pw_passwd)</source>
          <target state="translated">Пароль --может быть пустым или поддельным,если используется тень (pw_passwd)</target>
        </trans-unit>
        <trans-unit id="22002d5b59087455e3e7a19bdb64f504fafce246" translate="yes" xml:space="preserve">
          <source>Pat</source>
          <target state="translated">Pat</target>
        </trans-unit>
        <trans-unit id="eb730bfcc87dd3826515b26e8682ec5987a8eee0" translate="yes" xml:space="preserve">
          <source>PatQ</source>
          <target state="translated">PatQ</target>
        </trans-unit>
        <trans-unit id="9b6958725be0676bc2831daffab79014db1e02d1" translate="yes" xml:space="preserve">
          <source>PatSynArgs</source>
          <target state="translated">PatSynArgs</target>
        </trans-unit>
        <trans-unit id="e528cddb6d761afbae92bc5520282c106e797b9b" translate="yes" xml:space="preserve">
          <source>PatSynArgsQ</source>
          <target state="translated">PatSynArgsQ</target>
        </trans-unit>
        <trans-unit id="fe6ca4a2046e9092fc8b91acbe65f2196eafaf25" translate="yes" xml:space="preserve">
          <source>PatSynDir</source>
          <target state="translated">PatSynDir</target>
        </trans-unit>
        <trans-unit id="a00df6fba9cdb213b7e8fda3d468202a26221183" translate="yes" xml:space="preserve">
          <source>PatSynDirQ</source>
          <target state="translated">PatSynDirQ</target>
        </trans-unit>
        <trans-unit id="f84514555442628f00d3e5269a9f8b67460106af" translate="yes" xml:space="preserve">
          <source>PatSynType</source>
          <target state="translated">PatSynType</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="de556ff45621853b72f3cba9bbc16ba72c53c17f" translate="yes" xml:space="preserve">
          <source>PathNameLimit</source>
          <target state="translated">PathNameLimit</target>
        </trans-unit>
        <trans-unit id="74b7902cc01d30f193138477b0b3be38408b6f9e" translate="yes" xml:space="preserve">
          <source>PathVar</source>
          <target state="translated">PathVar</target>
        </trans-unit>
        <trans-unit id="c605d6954cb5f7d896d41bcc8529b02fa99e63c3" translate="yes" xml:space="preserve">
          <source>Pathname conventions vary from system to system. In particular, the directory separator is &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; on Unix systems and &amp;ldquo;&lt;code&gt;\&lt;/code&gt;&amp;rdquo; on Windows systems. In the sections that follow, we shall consistently use &amp;ldquo;&lt;code&gt;/&lt;/code&gt;&amp;rdquo; as the directory separator; substitute this for the appropriate character for your system.</source>
          <target state="translated">Соглашения о путях меняются от системы к системе. В частности, разделителем каталогов является &amp;laquo; &lt;code&gt;/&lt;/code&gt; &amp;raquo; в системах Unix и &amp;laquo; &lt;code&gt;\&lt;/code&gt; &amp;raquo; в системах Windows. В следующих разделах мы будем последовательно использовать &amp;laquo; &lt;code&gt;/&lt;/code&gt; &amp;raquo; в качестве разделителя каталогов; замените его на соответствующий символ для вашей системы.</target>
        </trans-unit>
        <trans-unit id="011311874049b892a9a1e123a9582477aceacecd" translate="yes" xml:space="preserve">
          <source>Paths specified using the &lt;code&gt;-L ⟨dir⟩&lt;/code&gt; command-line option,</source>
          <target state="translated">Пути, указанные с помощью &lt;code&gt;-L ⟨dir⟩&lt;/code&gt; командной строки -L ⟨dir⟩ ,</target>
        </trans-unit>
        <trans-unit id="32c2dd7f8e76f04657fd849dcf202fe7562da7ba" translate="yes" xml:space="preserve">
          <source>Paths with a drive letter are &lt;em&gt;legacy&lt;/em&gt; paths. The drive letters are actually meaningless to the kernel. Just like Unix operating systems, drive letters are just a mount point. You can view your mount points by using the &lt;strong&gt;mountvol&lt;/strong&gt; command.</source>
          <target state="translated">Пути с буквой диска - это &lt;em&gt;устаревшие&lt;/em&gt; пути. Буквы дисков фактически не имеют значения для ядра. Как и в операционных системах Unix, буквы дисков - это всего лишь точка монтирования. Вы можете просмотреть свои точки монтирования с помощью команды &lt;strong&gt;mountvol&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="1fff6a31661b491fc40cc9c1ad7fe5e479cb7500" translate="yes" xml:space="preserve">
          <source>Pattern</source>
          <target state="translated">Pattern</target>
        </trans-unit>
        <trans-unit id="c986f82232ab7547ffc16ab2d32c4eed2d129027" translate="yes" xml:space="preserve">
          <source>Pattern &lt;code&gt;P1&lt;/code&gt; can only match against a value of type &lt;code&gt;Maybe Bool&lt;/code&gt;, so function &lt;code&gt;f&lt;/code&gt; is rejected because the type signature is &lt;code&gt;Maybe a&lt;/code&gt;. (To see this, imagine expanding the pattern synonym.)</source>
          <target state="translated">Шаблон &lt;code&gt;P1&lt;/code&gt; может соответствовать только значению типа &lt;code&gt;Maybe Bool&lt;/code&gt; , поэтому функция &lt;code&gt;f&lt;/code&gt; отклоняется, потому что сигнатура типа &lt;code&gt;Maybe a&lt;/code&gt; . (Чтобы увидеть это, представьте, что расширяете синоним шаблона.)</target>
        </trans-unit>
        <trans-unit id="02736a97b0f28b320047652ff9db6e4230fbb7da" translate="yes" xml:space="preserve">
          <source>Pattern Synonyms (sub constructs)</source>
          <target state="translated">Синонимы моделей (подконструкции)</target>
        </trans-unit>
        <trans-unit id="cc7430cf470514ab4cb77ac5dbdcb450d6be72dc" translate="yes" xml:space="preserve">
          <source>Pattern in Haskell given in &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">Шаблон в Haskell приведен в &lt;code&gt;{}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="006f91db2b8fd81b325a7a341c644b6d5a498639" translate="yes" xml:space="preserve">
          <source>Pattern match on a type constructor</source>
          <target state="translated">Совпадение образов на типовом конструкторе</target>
        </trans-unit>
        <trans-unit id="429f1b07411fa0d99aa1398b100abdf4c33d79a4" translate="yes" xml:space="preserve">
          <source>Pattern match on a type constructor including its instantiated kind variables.</source>
          <target state="translated">Совпадение шаблонов на конструкторе типа,включая его инстанцированные переменные типа.</target>
        </trans-unit>
        <trans-unit id="6bca3430dd62bc5373edba36f1b7fdbacb161c1c" translate="yes" xml:space="preserve">
          <source>Pattern splices introduce variable binders but scoping of variables in expressions inside the pattern&amp;rsquo;s scope is only checked when a splice is run. Note that pattern splices that occur outside of any quotation brackets are run at compile time. Pattern splices occurring inside a quotation bracket are &lt;em&gt;not&lt;/em&gt; run at compile time; they are run when the bracket is spliced in, sometime later. For example,</source>
          <target state="translated">Соединения шаблона вводят связыватели переменных, но область видимости переменных в выражениях внутри области действия шаблона проверяется только при запуске соединения. Обратите внимание, что соединения шаблонов, которые происходят вне скобок цитат, выполняются во время компиляции. Соединения шаблонов внутри кавычек &lt;em&gt;не&lt;/em&gt; выполняются во время компиляции; они запускаются, когда скоба вставляется позже. Например,</target>
        </trans-unit>
        <trans-unit id="a6afa01cf2dd70cd7e0003f6ed14c46fc954840d" translate="yes" xml:space="preserve">
          <source>Pattern splices: anonymous and named wildcards can be used in pattern signatures. Note that &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt; has to be enabled to allow pattern signatures. Extra-constraints wildcards are not supported, just like in regular pattern signatures.</source>
          <target state="translated">Соединения шаблонов: в сигнатурах шаблонов можно использовать анонимные и именованные подстановочные знаки. Обратите внимание, что &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt; должен быть включен, чтобы разрешить подписи шаблонов. Подстановочные знаки дополнительных ограничений не поддерживаются, как и в обычных сигнатурах шаблонов.</target>
        </trans-unit>
        <trans-unit id="2f77741e8cc6b9f0b1d51a80487612daf3480f01" translate="yes" xml:space="preserve">
          <source>Pattern synonym declaration</source>
          <target state="translated">Декларация синонима шаблона</target>
        </trans-unit>
        <trans-unit id="87f1062186506aaa4f45d8a2e88afacdc300284d" translate="yes" xml:space="preserve">
          <source>Pattern synonym declarations can only occur in the top level of a module. In particular, they are not allowed as local definitions.</source>
          <target state="translated">Объявления синонимов моделей могут встречаться только на верхнем уровне модуля.В частности,они не допускаются в качестве локальных определений.</target>
        </trans-unit>
        <trans-unit id="d2c3bb10828440ff7c7e123c5c710d07e5748ac9" translate="yes" xml:space="preserve">
          <source>Pattern synonym examples</source>
          <target state="translated">Примеры синонимов моделей</target>
        </trans-unit>
        <trans-unit id="c5e40750951e5693f88641df15605c5bd88c4b78" translate="yes" xml:space="preserve">
          <source>Pattern synonym type signature</source>
          <target state="translated">Тип подписи синонима шаблона</target>
        </trans-unit>
        <trans-unit id="51c5410ff060e342b214a06f194717b99df3b318" translate="yes" xml:space="preserve">
          <source>Pattern synonym types interact with TH when (a) reifying a pattern synonym, (b) pretty printing, or (c) specifying a pattern synonym's type signature explicitly:</source>
          <target state="translated">Типы синонимов шаблонов взаимодействуют с ТН,когда (а)повторяют синоним шаблона,(б)красиво распечатывают или (в)явно указывают тип подписи синонима шаблона:</target>
        </trans-unit>
        <trans-unit id="f1ad9c9cdb2599bd5e1fe2e83cbb8368c9be95f6" translate="yes" xml:space="preserve">
          <source>Pattern synonyms</source>
          <target state="translated">Синонимы моделей</target>
        </trans-unit>
        <trans-unit id="f284b9c8384401a92e74a36de73bee9bba48c472" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are enabled by the language extension &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt;&lt;code&gt;PatternSynonyms&lt;/code&gt;&lt;/a&gt;, which is required for defining them, but &lt;em&gt;not&lt;/em&gt; for using them. More information and examples of pattern synonyms can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;Wiki page&lt;/a&gt;.</source>
          <target state="translated">Синонимы шаблонов включаются языковым расширением &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt; &lt;code&gt;PatternSynonyms&lt;/code&gt; &lt;/a&gt; , которое требуется для их определения, но &lt;em&gt;не&lt;/em&gt; для их использования. Более подробную информацию и примеры синонимов шаблонов можно найти на &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/PatternSynonyms&quot;&gt;странице Wiki&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3892448115b360ea1d603f7a781a0d734d72148a" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are enabled by the language extension &lt;a href=&quot;#extension-PatternSynonyms&quot;&gt;&lt;code&gt;PatternSynonyms&lt;/code&gt;&lt;/a&gt;, which is required for defining them, but &lt;em&gt;not&lt;/em&gt; for using them. More information and examples of pattern synonyms can be found on the &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/pattern-synonyms&quot;&gt;Wiki page&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0924abc7007f369091850e500801334d4015307f" translate="yes" xml:space="preserve">
          <source>Pattern synonyms are not supported.</source>
          <target state="translated">Синонимы моделей не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="34d581f8945b7df9b46a71872a91832ad9199e66" translate="yes" xml:space="preserve">
          <source>Pattern synonyms cannot be defined recursively.</source>
          <target state="translated">Синонимы моделей не могут быть определены рекурсивно.</target>
        </trans-unit>
        <trans-unit id="2dc90cc727d872f8ad295d8c8e70891697a625b4" translate="yes" xml:space="preserve">
          <source>Pattern synonyms enable giving names to parametrized pattern schemes. They can also be thought of as abstract constructors that don&amp;rsquo;t have a bearing on data representation. For example, in a programming language implementation, we might represent types of the language as follows:</source>
          <target state="translated">Синонимы паттернов позволяют давать имена параметризованным схемам паттернов. Их также можно рассматривать как абстрактные конструкторы, не имеющие отношения к представлению данных. Например, в реализации языка программирования мы могли бы представить типы языка следующим образом:</target>
        </trans-unit>
        <trans-unit id="f21344d9f424a665540813e111458633c97a5bdc" translate="yes" xml:space="preserve">
          <source>Pattern synonyms permit abstracting from the representation to expose matchers that behave in a constructor-like manner with respect to pattern matching. We can create pattern synonyms for the known types we care about, without committing the representation to them (note that these don&amp;rsquo;t have to be defined in the same module as the &lt;code&gt;Type&lt;/code&gt; type):</source>
          <target state="translated">Синонимы шаблонов позволяют абстрагироваться от представления, чтобы выявить средства сопоставления, которые ведут себя аналогично конструктору в отношении сопоставления с образцом. Мы можем создавать синонимы шаблонов для известных нам типов, не передавая им представление (обратите внимание, что их необязательно определять в том же модуле, что и &lt;code&gt;Type&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="f1b5e68af793661029a634f35b2a59b11f9b9320" translate="yes" xml:space="preserve">
          <source>PatternGuards</source>
          <target state="translated">PatternGuards</target>
        </trans-unit>
        <trans-unit id="b082623c56fa21b4be183e2556bcea6fc12a68f9" translate="yes" xml:space="preserve">
          <source>PatternMatchFail</source>
          <target state="translated">PatternMatchFail</target>
        </trans-unit>
        <trans-unit id="8b4c340e8567284d5ccd5a9a1b9deca1c715a890" translate="yes" xml:space="preserve">
          <source>PatternSynonyms</source>
          <target state="translated">PatternSynonyms</target>
        </trans-unit>
        <trans-unit id="4d34f7a2b0b3b6df62a051917d7e7ac2de8a38df" translate="yes" xml:space="preserve">
          <source>Patterns</source>
          <target state="translated">Patterns</target>
        </trans-unit>
        <trans-unit id="5aa426e2424e04e94a5a3e7b592a1b40bfa6724a" translate="yes" xml:space="preserve">
          <source>Pc: Punctuation, Connector</source>
          <target state="translated">ПК:Пункты препинания,разъем.</target>
        </trans-unit>
        <trans-unit id="30297337298c9a17c0e9ce8ff4fbffe4052874dd" translate="yes" xml:space="preserve">
          <source>Pd: Punctuation, Dash</source>
          <target state="translated">Pd:пунктуация,Дэш</target>
        </trans-unit>
        <trans-unit id="a80098f29b2d23293bbe78beff8b9cdca1b4c011" translate="yes" xml:space="preserve">
          <source>Pe: Punctuation, Close</source>
          <target state="translated">Пи:Пунктуация,Закрыть</target>
        </trans-unit>
        <trans-unit id="d2ade9ac589ddabb36b03a6f5440ab0dd29693cc" translate="yes" xml:space="preserve">
          <source>Per default the events are written to &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; though the mechanism for writing event log data can be overridden with a custom &lt;code&gt;EventLogWriter&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31566e3d063dad33b6e08c2f7f3e776d7e1473fd" translate="yes" xml:space="preserve">
          <source>Per default the events are written to &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; though the mechanism for writing event log data can be overriden with a custom &lt;code&gt;EventLogWriter&lt;/code&gt;.</source>
          <target state="translated">По умолчанию события записываются в &lt;code&gt;&lt;em&gt;program&lt;/em&gt;.eventlog&lt;/code&gt; хотя механизм записи данных журнала событий можно переопределить с помощью настраиваемого &lt;code&gt;EventLogWriter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ef19e5bbcb51e651936b58513fef51416adde3" translate="yes" xml:space="preserve">
          <source>Perform a series of STM actions atomically.</source>
          <target state="translated">Выполняйте серию действий STM атоматически.</target>
        </trans-unit>
        <trans-unit id="4607f9e1b2aa67208f6265e145af0113fe0dbc2c" translate="yes" xml:space="preserve">
          <source>Perform an action with a finalizer action that is run, even if an error occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9ff4fe99f8968fc212ca25889a616ce793a23b" translate="yes" xml:space="preserve">
          <source>Perform compilation in parallel when possible. GHC will use up to ⟨N⟩ threads during compilation. If N is omitted, then it defaults to the number of processors. Note that compilation of a module may not begin until its dependencies have been built.</source>
          <target state="translated">По возможности выполняйте компиляцию параллельно.При компиляции GHC будет использовать до ⟨N⟩ потоков.Если N опущено,то по умолчанию это количество процессоров.Обратите внимание,что компиляция модуля может начаться только после сборки его зависимостей.</target>
        </trans-unit>
        <trans-unit id="f08a49b25677e2e61a727558011649fabe0e79a8" translate="yes" xml:space="preserve">
          <source>Perform other memory allocation, including in the GC, from node-local memory.</source>
          <target state="translated">Выполняйте другие выделения памяти,в том числе и в ГХ,из узловой локальной памяти.</target>
        </trans-unit>
        <trans-unit id="9c8aeaee99f19647da8cbc145bb54bbe2aea3ac7" translate="yes" xml:space="preserve">
          <source>Perform some computation without adding new entries to the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Выполните некоторые вычисления, не добавляя новые записи в &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc6f40aca7e3932befef5ea8a6cf34162fbd455b" translate="yes" xml:space="preserve">
          <source>Perform some simplification of a built up &lt;code&gt;GDoc&lt;/code&gt;.</source>
          <target state="translated">Выполните некоторое упрощение созданного &lt;code&gt;GDoc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="a40043065024f7a1212f7fbbfa9112c036c35b22" translate="yes" xml:space="preserve">
          <source>Performance information</source>
          <target state="translated">Информация о производительности</target>
        </trans-unit>
        <trans-unit id="2195bce8153488b859e69e630a7482f89cfcc5de" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;fdatasync(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">Выполняет операцию &lt;code&gt;fdatasync(2)&lt;/code&gt; над файловым дескриптором.</target>
        </trans-unit>
        <trans-unit id="b7a0417e81aba8bc8d001bca03740cbc7548d90f" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;fsync(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">Выполняет операцию &lt;code&gt;fsync(2)&lt;/code&gt; над файловым дескриптором.</target>
        </trans-unit>
        <trans-unit id="b29525a36bb807819b75d77b028444eec3dd3744" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;posix_fadvise(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">Выполняет &lt;code&gt;posix_fadvise(2)&lt;/code&gt; над файловым дескриптором.</target>
        </trans-unit>
        <trans-unit id="abc537c00b7a43d3addf179337e100cbe868862f" translate="yes" xml:space="preserve">
          <source>Performs &lt;code&gt;posix_fallocate(2)&lt;/code&gt; operation on file-descriptor.</source>
          <target state="translated">Выполняет &lt;code&gt;posix_fallocate(2)&lt;/code&gt; над файловым дескриптором.</target>
        </trans-unit>
        <trans-unit id="979b1f14628086440e0d691aadba7221f17405ab" translate="yes" xml:space="preserve">
          <source>Performs completions from the given line state.</source>
          <target state="translated">Выполняет завершения из заданного состояния линии.</target>
        </trans-unit>
        <trans-unit id="d6f5806ebaf90276049ece561409944ce93d2f6e" translate="yes" xml:space="preserve">
          <source>PermParser</source>
          <target state="translated">PermParser</target>
        </trans-unit>
        <trans-unit id="4636c20125232583a78fcf9bd2b7beb3e0ee79a6" translate="yes" xml:space="preserve">
          <source>PermissionDenied</source>
          <target state="translated">PermissionDenied</target>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="d8940d325390445ba152697d12492c72d0b04785" translate="yes" xml:space="preserve">
          <source>Permit definition of instances which may lead to type-checker non-termination.</source>
          <target state="translated">Разрешение на определение инстанций,которые могут привести к нерастащиванию проверки типа.</target>
        </trans-unit>
        <trans-unit id="393bb39440da7f4d26358355203d3146a3259f99" translate="yes" xml:space="preserve">
          <source>Permute</source>
          <target state="translated">Permute</target>
        </trans-unit>
        <trans-unit id="bf005fa540ff716e77993a2f382021660a60dc6a" translate="yes" xml:space="preserve">
          <source>Pf: Punctuation, Final quote</source>
          <target state="translated">Пф:пунктуация,окончательная цитата</target>
        </trans-unit>
        <trans-unit id="130c4886394ecb032566d46f2ceb00d5633b56b7" translate="yes" xml:space="preserve">
          <source>PhantomR</source>
          <target state="translated">PhantomR</target>
        </trans-unit>
        <trans-unit id="5c5efd35d4de06a56cd9d8bce7ff35054fbfb6e4" translate="yes" xml:space="preserve">
          <source>Phase of the compilation system</source>
          <target state="translated">Фаза системы компиляции</target>
        </trans-unit>
        <trans-unit id="1299c5da4d36f7c6543acebafdc41ccf1b565939" translate="yes" xml:space="preserve">
          <source>Phases</source>
          <target state="translated">Phases</target>
        </trans-unit>
        <trans-unit id="9e4383ed7770bf7128e27cfd3770dcc6a2f9ac77" translate="yes" xml:space="preserve">
          <source>Pi: Punctuation, Initial quote</source>
          <target state="translated">Пи:пунктуация,начальная цитата</target>
        </trans-unit>
        <trans-unit id="6dc7779c6f76a5529f40811ad41c4010cc153569" translate="yes" xml:space="preserve">
          <source>Picking the right capability will help avoid unnecessary context switches. Ideally you should pass the capability that the thread that will be woken up last ran on, which you can find by calling &lt;code&gt;threadCapability&lt;/code&gt; in Haskell.</source>
          <target state="translated">Выбор правильной возможности поможет избежать ненужных переключений контекста. В идеале вы должны передать возможность, которую поток, который будет разбужен, выполнялся последним, который вы можете найти, вызвав &lt;code&gt;threadCapability&lt;/code&gt; в Haskell.</target>
        </trans-unit>
        <trans-unit id="6b18587952820d0dbe6bad15e1dae415748031e5" translate="yes" xml:space="preserve">
          <source>Pico</source>
          <target state="translated">Pico</target>
        </trans-unit>
        <trans-unit id="f298de9cea75ea5230dda5d9d28b4989aaf746f4" translate="yes" xml:space="preserve">
          <source>Pid</source>
          <target state="translated">Pid</target>
        </trans-unit>
        <trans-unit id="00dae071c082bb73eaed17b4bb3429280e110e8c" translate="yes" xml:space="preserve">
          <source>Pipe</source>
          <target state="translated">Pipe</target>
        </trans-unit>
        <trans-unit id="24a740d84ffcf739518c3074866ef1329aa79368" translate="yes" xml:space="preserve">
          <source>PipeBufferLimit</source>
          <target state="translated">PipeBufferLimit</target>
        </trans-unit>
        <trans-unit id="785af2a4ad3c4ee912623c6e0b6d4299ea305bf6" translate="yes" xml:space="preserve">
          <source>Pipes</source>
          <target state="translated">Pipes</target>
        </trans-unit>
        <trans-unit id="9e0a7d72506eac8eb62beb562cc0a99b2b58da61" translate="yes" xml:space="preserve">
          <source>PkgName</source>
          <target state="translated">PkgName</target>
        </trans-unit>
        <trans-unit id="323e26c5cebb97e7dbf03cace1de3f19bb3506f8" translate="yes" xml:space="preserve">
          <source>Place each generated function or data item into its own section in the output file if the target supports arbitrary sections. The name of the function or the name of the data item determines the section&amp;rsquo;s name in the output file.</source>
          <target state="translated">Поместите каждую сгенерированную функцию или элемент данных в отдельный раздел в выходном файле, если цель поддерживает произвольные разделы. Имя функции или имя элемента данных определяет имя раздела в выходном файле.</target>
        </trans-unit>
        <trans-unit id="7dccde26d3e873a5cc6c187e13a2e64082046864" translate="yes" xml:space="preserve">
          <source>Placing &lt;code&gt;INLINE&lt;/code&gt; pragmas on certain functions that are used a lot can have a dramatic effect. See &lt;a href=&quot;glasgow_exts#inline-pragma&quot;&gt;INLINE pragma&lt;/a&gt;.</source>
          <target state="translated">Размещение &lt;code&gt;INLINE&lt;/code&gt; в некоторых часто используемых функциях может иметь драматический эффект. См. &lt;a href=&quot;glasgow_exts#inline-pragma&quot;&gt;Прагму INLINE&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5104db6573a7bcd152469e6c86edf365a7ccbe8" translate="yes" xml:space="preserve">
          <source>Placing a &lt;code&gt;.ghci&lt;/code&gt; file in a directory with a Haskell project is a useful way to set certain project-wide options so you don&amp;rsquo;t have to type them every time you start GHCi: eg. if your project uses multi-parameter type classes, scoped type variables, and CPP, and has source files in three subdirectories A, B and C, you might put the following lines in &lt;code&gt;.ghci&lt;/code&gt;:</source>
          <target state="translated">Размещение файла &lt;code&gt;.ghci&lt;/code&gt; в каталоге с проектом Haskell - полезный способ установить определенные параметры проекта, чтобы вам не приходилось вводить их каждый раз при запуске GHCi: например. Если в вашем проекте используются классы многопараметрических типов, переменные с ограниченным типом и CPP, а исходные файлы находятся в трех подкаталогах A, B и C, вы можете поместить следующие строки в &lt;code&gt;.ghci&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9c995f73efb3edc21d7f6d4456e31809091cc4f7" translate="yes" xml:space="preserve">
          <source>Platform differences</source>
          <target state="translated">Различия платформ</target>
        </trans-unit>
        <trans-unit id="f47156297a84abbf7baa9ecfe8129e469a19a3f7" translate="yes" xml:space="preserve">
          <source>Please advise us of other &amp;ldquo;helpful hints&amp;rdquo; that should go here!</source>
          <target state="translated">Пожалуйста, посоветуйте нам другие &amp;laquo;полезные советы&amp;raquo;, которые должны быть здесь!</target>
        </trans-unit>
        <trans-unit id="7eaa184d05b12ec4d0c22d4d64c1a97838a9baab" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation (by &lt;code&gt;ghc --make&lt;/code&gt; or &lt;code&gt;ghc -c&lt;/code&gt;), this directory is where GHC looks into to find extended interface files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f5a17562e092a639487a7dbd4558ee40520423" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation (by &lt;code&gt;ghc --make&lt;/code&gt; or &lt;code&gt;ghc -c&lt;/code&gt;), this directory is where GHC looks into to find interface files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc75381c4117eac8071f7754c526f344d1d5cfd7" translate="yes" xml:space="preserve">
          <source>Please also note that when doing incremental compilation, this directory is where GHC looks into to find object files from previous builds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506c81a0d84a987facc6b6cad61df64acf77c49e" translate="yes" xml:space="preserve">
          <source>Please do not confuse &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, respectively. The latter are for exceptions built into GHC, by default, and are mostly used from within the IO monad. They do not interact with the &quot;exceptions&quot; in this package at all. This package allows you to define a new kind of exception control mechanism which does not necessarily need your code to be placed in the IO monad.</source>
          <target state="translated">Не путайте &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; с &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt; соответственно. Последние предназначены для исключений, встроенных в GHC, по умолчанию, и в основном используются внутри монады ввода-вывода. Они вообще не взаимодействуют с &amp;laquo;исключениями&amp;raquo; в этом пакете. Этот пакет позволяет вам определить новый вид механизма управления исключениями, который не обязательно требует размещения вашего кода в монаде ввода-вывода.</target>
        </trans-unit>
        <trans-unit id="c692e6e78b4a6c4d677fe5be7d6b2a1582726f5d" translate="yes" xml:space="preserve">
          <source>Please do not confuse &lt;code&gt;&lt;a href=&quot;control-monad-except#t:ExceptT&quot;&gt;ExceptT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;control-monad-except#v:throwError&quot;&gt;throwError&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:Exception&quot;&gt;Exception&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:SomeException&quot;&gt;SomeException&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-exception#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;, respectively. The latter are for exceptions built into GHC, by default, and are mostly used from within the IO monad. They do not interact with the &quot;exceptions&quot; in this package at all. This package allows you to define a new kind of exception control mechanism which does not necessarily need your code to be placed in the IO monad.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c73afae87542d6e8cd63fcf7f4fddd71f7004f" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">Убедитесь, что вы знаете, что происходит при использовании &lt;code&gt;&lt;a href=&quot;data-intmap-lazy#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; , иначе вы можете быть удивлены неожиданным ростом кода или даже повреждением структуры данных.</target>
        </trans-unit>
        <trans-unit id="5600a929920bed98ead548566e18fe4443f663d1" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">Убедитесь, что вы знаете, что происходит при использовании &lt;code&gt;&lt;a href=&quot;data-intmap-strict#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; , иначе вы можете быть удивлены неожиданным ростом кода или даже повреждением структуры данных.</target>
        </trans-unit>
        <trans-unit id="e69690c3be83e6b82a76a0137695bb5c56adc7bc" translate="yes" xml:space="preserve">
          <source>Please make sure you know what is going on when using &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt;, otherwise you can be surprised by unexpected code growth or even corruption of the data structure.</source>
          <target state="translated">Убедитесь, что вы знаете, что происходит при использовании &lt;code&gt;&lt;a href=&quot;data-intmap-strict-internal#v:mergeWithKey&quot;&gt;mergeWithKey&lt;/a&gt;&lt;/code&gt; , иначе вы можете быть удивлены неожиданным ростом кода или даже повреждением структуры данных.</target>
        </trans-unit>
        <trans-unit id="11da447f43cf46de988876b5572b594db0d725d8" translate="yes" xml:space="preserve">
          <source>Please report any overly-slow GHC-compiled programs. Since GHC doesn&amp;rsquo;t have any credible competition in the performance department these days it&amp;rsquo;s hard to say what overly-slow means, so just use your judgement! Of course, if a GHC compiled program runs slower than the same program compiled with NHC or Hugs, then it&amp;rsquo;s definitely a bug.</source>
          <target state="translated">Пожалуйста, сообщайте о любых слишком медленных программах, скомпилированных с помощью GHC. Поскольку в наши дни у GHC нет достойных конкурентов в области производительности, трудно сказать, что означает чрезмерная медленность, поэтому просто используйте свое суждение! Конечно, если программа, скомпилированная GHC, работает медленнее, чем та же программа, скомпилированная с помощью NHC или Hugs, то это определенно ошибка.</target>
        </trans-unit>
        <trans-unit id="fe030bc44cd445dd18c598d2cb1edf112abb8e3c" translate="yes" xml:space="preserve">
          <source>Please report line-number errors that you find particularly unhelpful.</source>
          <target state="translated">Пожалуйста,сообщайте об ошибках с номером строки,которые вы считаете особенно бесполезными.</target>
        </trans-unit>
        <trans-unit id="4bd277cac9b50a94c530d065fbd95d2bb254e2e7" translate="yes" xml:space="preserve">
          <source>Please see the GHC API documentation for more about how to use internal APIs, etc.</source>
          <target state="translated">Подробнее об использовании внутренних API и т.д.см.документацию по GHC API.</target>
        </trans-unit>
        <trans-unit id="cda26be1b0861c9ec0b102448fed676a99b6b48e" translate="yes" xml:space="preserve">
          <source>Please, oh please, use the &lt;code&gt;-v&lt;/code&gt; option when reporting bugs! Knowing that you ran the right bits in the right order is always the first thing we want to verify.</source>
          <target state="translated">Пожалуйста, о, пожалуйста, используйте опцию &lt;code&gt;-v&lt;/code&gt; при сообщении об ошибках! Знание того, что вы запустили нужные биты в правильном порядке, - это всегда первое, что мы хотим проверить.</target>
        </trans-unit>
        <trans-unit id="6f4d3ab5a5554b6ec4bae40adfb407a50ae52738" translate="yes" xml:space="preserve">
          <source>Plugin code runs in the &lt;code&gt;TcPluginM&lt;/code&gt; monad, which provides a restricted interface to GHC API functionality that is relevant for typechecker plugins, including &lt;code&gt;IO&lt;/code&gt; and reading the environment. If you need functionality that is not exposed in the &lt;code&gt;TcPluginM&lt;/code&gt; module, you can use &lt;code&gt;unsafeTcPluginTcM :: TcM a -&amp;gt; TcPluginM a&lt;/code&gt;, but are encouraged to contact the GHC team to suggest additions to the interface. Note that &lt;code&gt;TcPluginM&lt;/code&gt; can perform arbitrary IO via &lt;code&gt;tcPluginIO :: IO a -&amp;gt; TcPluginM a&lt;/code&gt;, although some care must be taken with side effects (particularly in &lt;code&gt;tcPluginSolve&lt;/code&gt;). In general, it is up to the plugin author to make sure that any IO they do is safe.</source>
          <target state="translated">Код &lt;code&gt;TcPluginM&lt;/code&gt; выполняется в монаде TcPluginM , которая предоставляет ограниченный интерфейс для функциональности GHC API, которая актуальна для подключаемых модулей проверки типов, включая &lt;code&gt;IO&lt;/code&gt; и чтение среды. Если вам нужна функциональность, которая не представлена ​​в модуле &lt;code&gt;TcPluginM&lt;/code&gt; , вы можете использовать &lt;code&gt;unsafeTcPluginTcM :: TcM a -&amp;gt; TcPluginM a&lt;/code&gt; , но рекомендуется связаться с командой GHC, чтобы предложить дополнения к интерфейсу. Обратите внимание, что &lt;code&gt;TcPluginM&lt;/code&gt; может выполнять произвольный ввод-вывод через &lt;code&gt;tcPluginIO :: IO a -&amp;gt; TcPluginM a&lt;/code&gt; , хотя следует соблюдать осторожность с побочными эффектами (особенно в &lt;code&gt;tcPluginSolve&lt;/code&gt; ). Как правило, автор плагина должен убедиться, что любой ввод-вывод, который он выполняет, безопасен.</target>
        </trans-unit>
        <trans-unit id="0a02b13ee0dd37a4f7f44345efb7f4d0b31df1b9" translate="yes" xml:space="preserve">
          <source>Plugin modules live in a separate namespace from the user import namespace. By default, these two namespaces are the same; however, there are a few command line options which control specifically plugin packages:</source>
          <target state="translated">Модули Plugin живут в отдельном пространстве имён от пространства имён,импортируемого пользователем.По умолчанию эти два пространства имен одинаковы;однако,есть несколько опций командной строки,которые управляют конкретно пакетами плагинов:</target>
        </trans-unit>
        <trans-unit id="f76e0a28ea1fdb9e9e6ad3248cf9ef3d98836e8e" translate="yes" xml:space="preserve">
          <source>Plugins are modules that export at least a single identifier, &lt;code&gt;plugin&lt;/code&gt;, of type &lt;code&gt;GhcPlugins.Plugin&lt;/code&gt;. All plugins should &lt;code&gt;import GhcPlugins&lt;/code&gt; as it defines the interface to the compilation pipeline.</source>
          <target state="translated">Плагины - это модули, которые экспортируют по крайней мере один идентификатор, &lt;code&gt;plugin&lt;/code&gt; , типа &lt;code&gt;GhcPlugins.Plugin&lt;/code&gt; . Все плагины должны &lt;code&gt;import GhcPlugins&lt;/code&gt; поскольку он определяет интерфейс конвейера компиляции.</target>
        </trans-unit>
        <trans-unit id="50a78f3b1666118502953351a9e4c0ece78555a4" translate="yes" xml:space="preserve">
          <source>Plugins are provided with all available constraints (including equalities and typeclass constraints), but it is easy for them to discard those that are not relevant to their domain, because they need return only those constraints for which they have made progress (either by solving or contradicting them).</source>
          <target state="translated">Плагины поставляются со всеми доступными ограничениями (включая ограничения на равенство и типового класса),но им легко отказаться от тех,которые не относятся к их домену,потому что им нужно вернуть только те ограничения,по которым они добились прогресса (либо решив их,либо противореча им).</target>
        </trans-unit>
        <trans-unit id="bcfecc84377584d4ad3cb1e967e83c8d968b6d81" translate="yes" xml:space="preserve">
          <source>Plugins can be added on the command line with the &lt;a href=&quot;#ghc-flag--fplugin=%E2%9F%A8module%E2%9F%A9&quot;&gt;&lt;code&gt;-fplugin=⟨module⟩&lt;/code&gt;&lt;/a&gt; option where ⟨module⟩ is a module in a registered package that exports the plugin. Arguments can be passed to the plugins with the &lt;a href=&quot;#ghc-flag--fplugin-opt=%E2%9F%A8module%E2%9F%A9:%E2%9F%A8args%E2%9F%A9&quot;&gt;&lt;code&gt;-fplugin-opt=⟨module⟩:⟨args⟩&lt;/code&gt;&lt;/a&gt; option. The list of enabled plugins can be reset with the &lt;a href=&quot;#ghc-flag--fclear-plugins&quot;&gt;&lt;code&gt;-fclear-plugins&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">Плагины можно добавить в командную строку с помощью параметра &lt;a href=&quot;#ghc-flag--fplugin=%E2%9F%A8module%E2%9F%A9&quot;&gt; &lt;code&gt;-fplugin=⟨module⟩&lt;/code&gt; &lt;/a&gt; где &amp;laquo;модуль&amp;raquo; - это модуль в зарегистрированном пакете, который экспортирует подключаемый модуль. Аргументы могут быть переданы плагинам с &lt;a href=&quot;#ghc-flag--fplugin-opt=%E2%9F%A8module%E2%9F%A9:%E2%9F%A8args%E2%9F%A9&quot;&gt; &lt;code&gt;-fplugin-opt=⟨module⟩:⟨args⟩&lt;/code&gt; &lt;/a&gt; . Список включенных плагинов можно сбросить с помощью &lt;a href=&quot;#ghc-flag--fclear-plugins&quot;&gt; &lt;code&gt;-fclear-plugins&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9dae985525fa5c1bd52094480c5fadf0801829a6" translate="yes" xml:space="preserve">
          <source>Plugins cannot optimize/inspect C--, nor can they implement things like parser/front-end modifications like GCC, apart from limited changes to the constraint solver. If you feel strongly that any of these restrictions are too onerous, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/mailing-lists-and-irc&quot;&gt;please give the GHC team a shout&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c33bcc738bc3d4e4633fbe0d574f0b8c7bf15d" translate="yes" xml:space="preserve">
          <source>Plugins cannot optimize/inspect C-\-, nor can they implement things like parser/front-end modifications like GCC, apart from limited changes to the constraint solver. If you feel strongly that any of these restrictions are too onerous, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/MailingListsAndIRC&quot;&gt;please give the GHC team a shout&lt;/a&gt;.</source>
          <target state="translated">Плагины не могут оптимизировать / проверять C - \ -, а также не могут реализовывать такие вещи, как модификации синтаксического анализатора / внешнего интерфейса, такие как GCC, за исключением ограниченных изменений в решателе ограничений. Если вы уверены, что какое-либо из этих ограничений слишком обременительно, &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/wikis/MailingListsAndIRC&quot;&gt;пожалуйста&lt;/a&gt; , сообщите команде GHC .</target>
        </trans-unit>
        <trans-unit id="657ba732d1e87d8b93008540bca513f726773ecb" translate="yes" xml:space="preserve">
          <source>Plugins do not work with &lt;code&gt;-fexternal-interpreter&lt;/code&gt;. If you need to run plugins with &lt;code&gt;-fexternal-interpreter&lt;/code&gt; let GHC developers know in &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;#14335&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1acd4a0590b84ad78012a8281aa3759223cdd151" translate="yes" xml:space="preserve">
          <source>Plugins do not work with &lt;code&gt;-fexternal-interpreter&lt;/code&gt;. If you need to run plugins with &lt;code&gt;-fexternal-interpreter&lt;/code&gt; let GHC developers know in &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;Issue #14335&lt;/a&gt;.</source>
          <target state="translated">Плагины не работают с &lt;code&gt;-fexternal-interpreter&lt;/code&gt; . Если вам нужно запускать плагины с &lt;code&gt;-fexternal-interpreter&lt;/code&gt; сообщите об этом разработчикам GHC в &lt;a href=&quot;https://gitlab.haskell.org/ghc/ghc/issues/14335&quot;&gt;выпуске № 14335&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d1483c843780c87aec4fd3aa51d7d94a8b96a4e" translate="yes" xml:space="preserve">
          <source>Po: Punctuation, Other</source>
          <target state="translated">По:пунктуация,другое</target>
        </trans-unit>
        <trans-unit id="f79a28423ed1ae0232efb54ad41227d0955084f3" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="translated">Point</target>
        </trans-unit>
        <trans-unit id="a7f9dff21b1ddcdcf80248743f347d8d0da9bd72" translate="yes" xml:space="preserve">
          <source>Pointer equality.</source>
          <target state="translated">Равенство указателей.</target>
        </trans-unit>
        <trans-unit id="9b121b8b051ea2dd152358f19ef9a92d0061d863" translate="yes" xml:space="preserve">
          <source>Pointer to the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e8cc6922489fcddbf0a22dd3e2de7b10d8bd37" translate="yes" xml:space="preserve">
          <source>Polar form</source>
          <target state="translated">полярная форма</target>
        </trans-unit>
        <trans-unit id="08ec06c8c3d316a130a751bea478b9d8cd36463e" translate="yes" xml:space="preserve">
          <source>Poll the semaphore until it is available, then lock it. Unlike semWait, this will block only the current thread rather than the entire process.</source>
          <target state="translated">Опросите семафор,пока он не станет доступен,затем заприте его.В отличие от semWait,это заблокирует только текущий поток,а не весь процесс.</target>
        </trans-unit>
        <trans-unit id="f60030530d452b22d889af65e4dbea1ad5231ba6" translate="yes" xml:space="preserve">
          <source>PolyKinds</source>
          <target state="translated">PolyKinds</target>
        </trans-unit>
        <trans-unit id="778627418cb4b30cdfe47281afdbf30f1a173700" translate="yes" xml:space="preserve">
          <source>Pool</source>
          <target state="translated">Pool</target>
        </trans-unit>
        <trans-unit id="41b680d741ab1eaec7b7f722d04d7131ec90b3b5" translate="yes" xml:space="preserve">
          <source>Pool management</source>
          <target state="translated">Управление бассейном</target>
        </trans-unit>
        <trans-unit id="71deae26a59f4c366e9d565ae1eea4f3ace4a347" translate="yes" xml:space="preserve">
          <source>Pools are currently implemented using &lt;code&gt;malloc/free&lt;/code&gt;, so while they might be a more convenient way to structure your memory allocation than using one of the other forms of allocation, they won&amp;rsquo;t be any more efficient. We do plan to provide an improved-performance implementation of Pools in the future, however.</source>
          <target state="translated">В настоящее время &lt;code&gt;malloc/free&lt;/code&gt; реализуются с использованием malloc / free , поэтому, хотя они могут быть более удобным способом структурировать распределение памяти, чем использование одной из других форм распределения, они не будут более эффективными. Однако в будущем мы планируем предоставить пулы с улучшенной производительностью.</target>
        </trans-unit>
        <trans-unit id="2df5eed666ad15052a9c4b2714990bcfc3e1bfe4" translate="yes" xml:space="preserve">
          <source>Pop the ByteString we have constructed so far, if any, yielding a new chunk in the result ByteString.</source>
          <target state="translated">Pop The ByteString мы построили до сих пор,если таковые имеются,давая новый фрагмент в результате ByteString.</target>
        </trans-unit>
        <trans-unit id="fe9afec2cdc2c7d8517084a2d65a63864d25ccaa" translate="yes" xml:space="preserve">
          <source>Pop the most recent call-site off the &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; самый последний сайт вызова из CallStack .</target>
        </trans-unit>
        <trans-unit id="184d55340a7ea9436efac0e4b30658a294cc194c" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Удалите наименьший элемент из очереди, используя предоставленный компаратор на теге, возвращаясь к исходной позиции элемента, когда компаратор возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c1beba4a0f9fa2d27717b6fdfbe4fe2c7701db7" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8d7b36ba997a86666ef5b0a2e955a7f3121f1d" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator on the tag.</source>
          <target state="translated">Вытащите самый маленький элемент из очереди,используя прилагаемый компаратор на метке.</target>
        </trans-unit>
        <trans-unit id="d0305355484ccbf0a5332dd6a8f21a5cc2b3e243" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Удалите наименьший элемент из очереди, используя предоставленный компаратор, возвращаясь к исходной позиции элемента, когда компаратор возвращает &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01d0a772369a2f419cd1206d689c75ab3f892dbb" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator, deferring to the item's original position when the comparator returns &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/data-ord#v:EQ&quot;&gt;EQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecde65687583e5067a6f236eb0adeaea9fb3c926" translate="yes" xml:space="preserve">
          <source>Pop the smallest element from the queue, using the supplied comparator.</source>
          <target state="translated">Выпустите самый маленький элемент из очереди,используя компаратор,входящий в комплект поставки.</target>
        </trans-unit>
        <trans-unit id="b307b88c84327b1804aee227595be53342245965" translate="yes" xml:space="preserve">
          <source>Portability</source>
          <target state="translated">Portability</target>
        </trans-unit>
        <trans-unit id="1bacaf21b2fe90b21bbc565ba919a04acd5baee5" translate="yes" xml:space="preserve">
          <source>Portable</source>
          <target state="translated">Portable</target>
        </trans-unit>
        <trans-unit id="89d8f29ace289b18dbbef31338d9cf587f44295f" translate="yes" xml:space="preserve">
          <source>Portable to Hugs and GHC. Requires MPTCs</source>
          <target state="translated">Перенос на обнимашки и GHC.Требуется MPTC</target>
        </trans-unit>
        <trans-unit id="d67331323a539f65439ac2219e811fa90a48d4a1" translate="yes" xml:space="preserve">
          <source>Portions Copyright : (c) Tom Harper 2008-2009, (c) Bryan O'Sullivan 2009, (c) Duncan Coutts 2009</source>
          <target state="translated">Порции Авторское право:c)Том Харпер 2008-2009,c)Брайан О'Салливан 2009,duncan Coutts 2009</target>
        </trans-unit>
        <trans-unit id="3db8887ea19a282f0bf7fbe5de701083bec25186" translate="yes" xml:space="preserve">
          <source>Portions obtained from hbc (c) Lennart Augusstson</source>
          <target state="translated">Порции,полученные от hbc c)Леннарт Огуссон</target>
        </trans-unit>
        <trans-unit id="c9b1b30d011fe2b612eff7c95b1c553cdf039f7c" translate="yes" xml:space="preserve">
          <source>Pos</source>
          <target state="translated">Pos</target>
        </trans-unit>
        <trans-unit id="cf1c85adba548e8d681255278976584a7e4a44de" translate="yes" xml:space="preserve">
          <source>Position</source>
          <target state="translated">Position</target>
        </trans-unit>
        <trans-unit id="718239faf2c7ad4b5be8fc3d53f933e6298dd64c" translate="yes" xml:space="preserve">
          <source>Position in file</source>
          <target state="translated">Положение в файле</target>
        </trans-unit>
        <trans-unit id="a98f91ff888a0baac961ccc11866ac56d92f3491" translate="yes" xml:space="preserve">
          <source>Position independent executables are required by some platforms as they enable address-space layout randomization (ASLR), a common security measure. They can also be useful as they can be dynamically loaded and used as shared libraries by other executables.</source>
          <target state="translated">Для некоторых платформ требуются независимые от положения исполняемые файлы,так как они позволяют использовать рандомизацию адресного пространства (ASLR)-общую меру безопасности.Они также могут быть полезны,так как могут быть динамически загружены и использованы в качестве разделяемых библиотек другими исполняемыми файлами.</target>
        </trans-unit>
        <trans-unit id="6a42e40e7381223e58fc6699427898624e3d568b" translate="yes" xml:space="preserve">
          <source>Position independent executables should be dynamically-linked (e.g. built with &lt;a href=&quot;#ghc-flag--dynamic&quot;&gt;&lt;code&gt;-dynamic&lt;/code&gt;&lt;/a&gt; and only loaded into other dynamically-linked executables to ensure that only one &lt;code&gt;libHSrts&lt;/code&gt; is present if loaded into the address space of another Haskell process.</source>
          <target state="translated">Независимые от позиции исполняемые файлы должны быть динамически связаны (например, построены с помощью &lt;a href=&quot;#ghc-flag--dynamic&quot;&gt; &lt;code&gt;-dynamic&lt;/code&gt; &lt;/a&gt; и загружены только в другие динамически связанные исполняемые файлы, чтобы гарантировать, что присутствует только одна &lt;code&gt;libHSrts&lt;/code&gt; если она загружена в адресное пространство другого процесса Haskell.</target>
        </trans-unit>
        <trans-unit id="f21a0136d6ab8fb27cd7d944927f57c96bb35706" translate="yes" xml:space="preserve">
          <source>PosixVersion</source>
          <target state="translated">PosixVersion</target>
        </trans-unit>
        <trans-unit id="6662b9da87a72fea9bd249c0718c63c20d41c5e4" translate="yes" xml:space="preserve">
          <source>Postcomposition with a pure function (right-to-left variant).</source>
          <target state="translated">Посткомпозиция с чистой функцией (вариант справа налево).</target>
        </trans-unit>
        <trans-unit id="68b34bc77c96ccaa5d23f02c3788537d21fd9171" translate="yes" xml:space="preserve">
          <source>Postcomposition with a pure function.</source>
          <target state="translated">Посткомпозиция с чистой функцией.</target>
        </trans-unit>
        <trans-unit id="c4450a1082e97ad779541d6b592b90e8113cd10b" translate="yes" xml:space="preserve">
          <source>PostfixOperators</source>
          <target state="translated">PostfixOperators</target>
        </trans-unit>
        <trans-unit id="5190c068a9cfa9fe6dafeaa183d9b2aaef45c829" translate="yes" xml:space="preserve">
          <source>Ppr</source>
          <target state="translated">Ppr</target>
        </trans-unit>
        <trans-unit id="0c19dcec06f6c91c0f2eff83d377b3454295bda3" translate="yes" xml:space="preserve">
          <source>PprM</source>
          <target state="translated">PprM</target>
        </trans-unit>
        <trans-unit id="38f93d32853eca4603a582eb7a404079e10b855d" translate="yes" xml:space="preserve">
          <source>Pragma</source>
          <target state="translated">Pragma</target>
        </trans-unit>
        <trans-unit id="6a503249a0dda8aeffc97783a04cdefe488d7002" translate="yes" xml:space="preserve">
          <source>Pragmas all take the form &lt;code&gt;{-# word ... #-}&lt;/code&gt; where ⟨word⟩ indicates the type of pragma, and is followed optionally by information specific to that type of pragma. Case is ignored in ⟨word⟩. The various values for ⟨word⟩ that GHC understands are described in the following sections; any pragma encountered with an unrecognised ⟨word⟩ is ignored. The layout rule applies in pragmas, so the closing &lt;code&gt;#-}&lt;/code&gt; should start in a column to the right of the opening &lt;code&gt;{-#&lt;/code&gt;.</source>
          <target state="translated">Все прагмы имеют форму &lt;code&gt;{-# word ... #-}&lt;/code&gt; где word⟩ указывает тип прагмы, за которой, необязательно, следует информация, относящаяся к этому типу прагмы. В &amp;laquo;слове&amp;raquo; регистр игнорируется. Различные значения для &amp;laquo;слова&amp;raquo;, которые понимает GHC, описаны в следующих разделах; любая прагма, встречающаяся с нераспознанным &amp;laquo;словом&amp;raquo;, игнорируется. Правило макета применяется в прагмах, поэтому закрывающий &lt;code&gt;#-}&lt;/code&gt; должен начинаться в столбце справа от открывающего &lt;code&gt;{-#&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de91c36fde9f78913dd737b3ac96a872a8cf867b" translate="yes" xml:space="preserve">
          <source>Pre-defined directories</source>
          <target state="translated">Предварительно определенные каталоги</target>
        </trans-unit>
        <trans-unit id="b7f5558e808991eda01cbcf863b6fb9f860df9c3" translate="yes" xml:space="preserve">
          <source>Pre-emption</source>
          <target state="translated">Pre-emption</target>
        </trans-unit>
        <trans-unit id="616e1d6e6f47b2dc96ac1a5ae54540016239b6ef" translate="yes" xml:space="preserve">
          <source>Pre-processing is optional, the &lt;a href=&quot;phases#ghc-flag--cpp&quot;&gt;&lt;code&gt;-cpp&lt;/code&gt;&lt;/a&gt; flag turns it on. See &lt;a href=&quot;phases#c-pre-processor&quot;&gt;Options affecting the C pre-processor&lt;/a&gt; for more details.</source>
          <target state="translated">Предварительная обработка необязательна, ее &lt;a href=&quot;phases#ghc-flag--cpp&quot;&gt; &lt;code&gt;-cpp&lt;/code&gt; &lt;/a&gt; флаг -cpp . См &lt;a href=&quot;phases#c-pre-processor&quot;&gt;Параметры влияющие на C препроцессор&lt;/a&gt; для получения более подробной информации.</target>
        </trans-unit>
        <trans-unit id="b56df0dc547f1c3c9c6bdf3cf6bc836ae75d592f" translate="yes" xml:space="preserve">
          <source>Prec</source>
          <target state="translated">Prec</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="69d353b33ac29db4cf194048bdbcd68112b6f57f" translate="yes" xml:space="preserve">
          <source>Precedence operations</source>
          <target state="translated">Приоритетные операции</target>
        </trans-unit>
        <trans-unit id="6e9db1fa77d52cf522ad8a7a915070250aa06a60" translate="yes" xml:space="preserve">
          <source>Precedences</source>
          <target state="translated">Precedences</target>
        </trans-unit>
        <trans-unit id="7d4c782369e2a524fee0cc4b706316c8a2f516ce" translate="yes" xml:space="preserve">
          <source>Precomposition with a pure function (right-to-left variant).</source>
          <target state="translated">Прекомпозиция с чистой функцией (вариант справа налево).</target>
        </trans-unit>
        <trans-unit id="7efe8aecf7d7ec9a6579a56c2d3f073a07aea88e" translate="yes" xml:space="preserve">
          <source>Precomposition with a pure function.</source>
          <target state="translated">Прекомпозиция с чистой функцией.</target>
        </trans-unit>
        <trans-unit id="754ba6611e7bacba5a9fb90876697ee505efa3e8" translate="yes" xml:space="preserve">
          <source>Pred</source>
          <target state="translated">Pred</target>
        </trans-unit>
        <trans-unit id="7b11e8e297f569849de36b44d30fcbbb4fbbe8ad" translate="yes" xml:space="preserve">
          <source>PredQ</source>
          <target state="translated">PredQ</target>
        </trans-unit>
        <trans-unit id="9eee28bfd739e1debf4d3b892d013537ae16da9f" translate="yes" xml:space="preserve">
          <source>Predicate</source>
          <target state="translated">Predicate</target>
        </trans-unit>
        <trans-unit id="5d3249c48d800f447f533f0fa317e54353a59d06" translate="yes" xml:space="preserve">
          <source>Predicate determining whether the first argument is inside the second argument.</source>
          <target state="translated">Предсказать,находится ли первый аргумент внутри второго.</target>
        </trans-unit>
        <trans-unit id="55b56b7a38f2aaf5493f86b3d26035da3508b3bb" translate="yes" xml:space="preserve">
          <source>Predicate to select exceptions</source>
          <target state="translated">Предсказать,чтобы выбрать исключения</target>
        </trans-unit>
        <trans-unit id="74ff649a3a1be6633677b33ec66e3623a45738d8" translate="yes" xml:space="preserve">
          <source>Predicates</source>
          <target state="translated">Predicates</target>
        </trans-unit>
        <trans-unit id="96b847cc7746c0d1f7662c2ba5e962da4df9bff5" translate="yes" xml:space="preserve">
          <source>Predicates on documents</source>
          <target state="translated">Предсказания на документах</target>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="translated">Prefix</target>
        </trans-unit>
        <trans-unit id="10a0703c5e9784ab6072eefca5e5d67b8bab1aea" translate="yes" xml:space="preserve">
          <source>PrefixI</source>
          <target state="translated">PrefixI</target>
        </trans-unit>
        <trans-unit id="3d7f56ffea75d06f65599fca02fef48b1a3c121a" translate="yes" xml:space="preserve">
          <source>Prefs</source>
          <target state="translated">Prefs</target>
        </trans-unit>
        <trans-unit id="2d8e8af65e69e615c74499754307d13c9b3e4bab" translate="yes" xml:space="preserve">
          <source>Prelude</source>
          <target state="translated">Prelude</target>
        </trans-unit>
        <trans-unit id="17951797c095385f82b7ed2be1b0b9cbd50b504e" translate="yes" xml:space="preserve">
          <source>Prepares an empty write buffer. This lets the device decide how to set up a write buffer: the buffer may need to point to a specific location in memory, for example. This is typically used by the client when switching from reading to writing on a buffered read/write device.</source>
          <target state="translated">Готовит пустой буфер записи.Это позволяет устройству решить,как установить буфер записи:например,буфер должен указывать на определённое место в памяти.Это обычно используется клиентом при переходе от чтения к записи на буферизованном устройстве чтения/записи.</target>
        </trans-unit>
        <trans-unit id="e756fbcebaf305207bf892820ae2fb41ad4bdd3f" translate="yes" xml:space="preserve">
          <source>Prepend an element to the stream.</source>
          <target state="translated">Подготовьте элемент к потоку.</target>
        </trans-unit>
        <trans-unit id="24451f10c39a033b9d567c3384a201089e447d0e" translate="yes" xml:space="preserve">
          <source>Present a visual alert using the &lt;code&gt;flash&lt;/code&gt; capability.</source>
          <target state="translated">Представьте визуальное предупреждение, используя функцию &lt;code&gt;flash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f1fbb34fcfce7c17bb348ece516318a4a36a3e4" translate="yes" xml:space="preserve">
          <source>Presently, only standard constraints, tuples and type synonyms for those two sorts of constraint are permitted in instance contexts and superclasses (without extra flags). The reason is that permitting more general constraints can cause type checking to loop, as it would with these two programs:</source>
          <target state="translated">В настоящее время разрешены только стандартные ограничения,кортежи и синонимы типов для этих двух типов ограничений в контекстах экземпляров и суперклассах (без дополнительных флагов).Причина в том,что разрешение более общих ограничений может привести к зацикливанию проверки типов,как это было бы в этих двух программах:</target>
        </trans-unit>
        <trans-unit id="3a533287e20f4ecff2b1e94d9ecd624990690055" translate="yes" xml:space="preserve">
          <source>Preserve, unchanged, the entries whose keys are missing from the other map.</source>
          <target state="translated">Сохранять без изменений записи,ключи которых отсутствуют на другой карте.</target>
        </trans-unit>
        <trans-unit id="b0f7adbbb69e916ea1927afb55f2ecddd2cc7a5f" translate="yes" xml:space="preserve">
          <source>Pretty</source>
          <target state="translated">Pretty</target>
        </trans-unit>
        <trans-unit id="9bfe234869187d35c7a0ae4cca314aded4bb1a5b" translate="yes" xml:space="preserve">
          <source>Pretty much anyone who uses this function is in a state of sin because whether or not a character is encodable will, in general, depend on the context in which it occurs.</source>
          <target state="translated">Почти каждый,кто использует эту функцию,находится в состоянии греха,потому что кодируемый символ или нет будет зависеть,в общем,от контекста,в котором он происходит.</target>
        </trans-unit>
        <trans-unit id="9a3ba5e8fa76ce9f1f76507bf772a40b2714f091" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Довольно распечатать &lt;code&gt;&lt;a href=&quot;ghc-exception#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dedd939f5eb8f17de16de0deb9579148f161282" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Довольно распечатать &lt;code&gt;&lt;a href=&quot;ghc-exception#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2157c3e2c2e08e7d9469e18b1d6d2509fdc1116" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Довольно распечатать &lt;code&gt;&lt;a href=&quot;ghc-stack#t:CallStack&quot;&gt;CallStack&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24a5908c42be14f75c50cae9cb71fef066d896a2" translate="yes" xml:space="preserve">
          <source>Pretty print a &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Довольно распечатать &lt;code&gt;&lt;a href=&quot;ghc-stack#t:SrcLoc&quot;&gt;SrcLoc&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="296539186fb752a49f377917ff5a8b60910cd510" translate="yes" xml:space="preserve">
          <source>Pretty print a value with the &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; level.</source>
          <target state="translated">Довольно напечатайте значение с уровнем &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dee0fe2bf13d7aeaf670d551f0f8e724a8229133" translate="yes" xml:space="preserve">
          <source>Pretty print a value with the &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; level.</source>
          <target state="translated">Довольно напечатайте значение с уровнем &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:prettyNormal&quot;&gt;prettyNormal&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3902ef81760a73ba152aafba884456ad6ae55826" translate="yes" xml:space="preserve">
          <source>Pretty print the type. &lt;code&gt;ShowType :: k -&amp;gt; ErrorMessage&lt;/code&gt;</source>
          <target state="translated">Довольно печатный шрифт. &lt;code&gt;ShowType :: k -&amp;gt; ErrorMessage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d1c61942f4d68589a44b45a71c4f04ff54f0e46" translate="yes" xml:space="preserve">
          <source>Pretty printing class, simlar to &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; but nicer looking.</source>
          <target state="translated">Хороший класс печати, простой, чтобы &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; но более приятный вид.</target>
        </trans-unit>
        <trans-unit id="fb9fb477d57eb6faf402bf1e5b55cd7c5bcd432d" translate="yes" xml:space="preserve">
          <source>Pretty printing class, simlar to &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; but nicer looking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa35ad6c9b5033404eb8f0e2bfca62d78aef25b2" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Симпатичный полиграфический класс. Уровень приоритета используется так же, как в классе &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; . Минимально полное определение - это &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6003344bfaa462ef2829aa012e40d0f204fd8d4b" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Симпатичный полиграфический класс. Уровень приоритета используется так же, как в классе &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; . Минимально полное определение - это &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7605fec354fe6f4bc05aa4679861cd3ca163d486" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ed9c1885cc6441472c3a338a7ff234773679fa" translate="yes" xml:space="preserve">
          <source>Pretty printing class. The precedence level is used in a similar way as in the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/text-show#t:Show&quot;&gt;Show&lt;/a&gt;&lt;/code&gt; class. Minimal complete definition is either &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrintPrec&quot;&gt;pPrintPrec&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespjclass#v:pPrint&quot;&gt;pPrint&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce0b905e0e2fe34c10df06c3257897a0d4174db5" translate="yes" xml:space="preserve">
          <source>Pretty printing via &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprPatSynType&quot;&gt;pprPatSynType&lt;/a&gt;&lt;/code&gt; abbreviates a pattern synonym's type unambiguously in concrete syntax: The rule of thumb is to print initial empty universals and the required context as &lt;code&gt;() =&amp;gt;&lt;/code&gt;, if existentials and a provided context follow. If only universals and their required context, but no existentials are specified, only the universals and their required context are printed. If both or none are specified, so both (or none) are printed.</source>
          <target state="translated">Красивая печать через &lt;code&gt;&lt;a href=&quot;language-haskell-th-ppr#v:pprPatSynType&quot;&gt;pprPatSynType&lt;/a&gt;&lt;/code&gt; однозначно сокращает тип синонима шаблона в конкретном синтаксисе: практическое правило - печатать исходные пустые универсалии и требуемый контекст как &lt;code&gt;() =&amp;gt;&lt;/code&gt; , если следуют экзистенциальные и предоставленный контекст. Если указаны только универсалии и их требуемый контекст, но не экзистенциальные, печатаются только универсалии и их требуемый контекст. Если указаны оба значения или ни один, то печатаются оба (или ни один).</target>
        </trans-unit>
        <trans-unit id="913403112273ef6e2854bcf0f8c908964725c43b" translate="yes" xml:space="preserve">
          <source>Pretty prints a pattern synonym type signature</source>
          <target state="translated">Красиво печатает подпись синонима типа шаблона.</target>
        </trans-unit>
        <trans-unit id="d4e682f695f1f2c1d3c722dd6d5b3b250860bb3f" translate="yes" xml:space="preserve">
          <source>Pretty prints a pattern synonym's type; follows the usual conventions to print a pattern synonym type compactly, yet unambiguously. See the note on &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynType&quot;&gt;PatSynType&lt;/a&gt;&lt;/code&gt; and the section on pattern synonyms in the GHC user's guide for more information.</source>
          <target state="translated">Pretty печатает тип синонима шаблона; следует обычным соглашениям для компактной, но однозначной печати типа синонима шаблона. См. Примечание о &lt;code&gt;&lt;a href=&quot;language-haskell-th-syntax#t:PatSynType&quot;&gt;PatSynType&lt;/a&gt;&lt;/code&gt; и раздел о синонимах шаблонов в руководстве пользователя GHC для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="f7763808de129b1653f86f4b6c4478b1be06d267" translate="yes" xml:space="preserve">
          <source>Pretty typeclass</source>
          <target state="translated">Симпатичный шрифт</target>
        </trans-unit>
        <trans-unit id="9e53c1cac90b48260e445d3942d8dc757e8a9ad1" translate="yes" xml:space="preserve">
          <source>Pretty-printer</source>
          <target state="translated">Pretty-printer</target>
        </trans-unit>
        <trans-unit id="299e09a4ecf7d0f0c71dd28f182c4640d6372f53" translate="yes" xml:space="preserve">
          <source>PrettyLevel</source>
          <target state="translated">PrettyLevel</target>
        </trans-unit>
        <trans-unit id="cfad1a2758e3a164bd5b4b3f7f8ff793ee9e089b" translate="yes" xml:space="preserve">
          <source>Prevent loading of the user&amp;rsquo;s local package database in the initial stack.</source>
          <target state="translated">Предотвратить загрузку локальной базы данных пакетов пользователя в начальный стек.</target>
        </trans-unit>
        <trans-unit id="82f73f32fff7781aec7b0b514e54e58cf7551ee7" translate="yes" xml:space="preserve">
          <source>Prevents the compiler from applying the monomorphism restriction to bindings lacking explicit type signatures.</source>
          <target state="translated">Предотвращает применение компилятором ограничения мономорфизма к привязкам,не имеющим явных признаков типа.</target>
        </trans-unit>
        <trans-unit id="9628fe995a8e090e6fd2edb95cb73c1eb15224d5" translate="yes" xml:space="preserve">
          <source>Previous versions of GHC accepted &lt;code&gt;OPTIONS&lt;/code&gt; rather than &lt;code&gt;OPTIONS_GHC&lt;/code&gt;, but that is now deprecated.</source>
          <target state="translated">Предыдущие версии GHC принимали &lt;code&gt;OPTIONS&lt;/code&gt; , а не &lt;code&gt;OPTIONS_GHC&lt;/code&gt; , но теперь это устарело.</target>
        </trans-unit>
        <trans-unit id="91406666c314d5f229091e983a7d1e2bee142e52" translate="yes" xml:space="preserve">
          <source>Previously we discussed annotation pragmas (&lt;a href=&quot;#annotation-pragmas&quot;&gt;Source annotations&lt;/a&gt;), which we mentioned could be used to give compiler plugins extra guidance or information. Annotations for a module can be retrieved by a plugin, but you must go through the modules &lt;code&gt;ModGuts&lt;/code&gt; in order to get it. Because annotations can be arbitrary instances of &lt;code&gt;Data&lt;/code&gt; and &lt;code&gt;Typeable&lt;/code&gt;, you need to give a type annotation specifying the proper type of data to retrieve from the interface file, and you need to make sure the annotation type used by your users is the same one your plugin uses. For this reason, we advise distributing annotations as part of the package which also provides compiler plugins if possible.</source>
          <target state="translated">Ранее мы обсуждали прагмы аннотаций ( &lt;a href=&quot;#annotation-pragmas&quot;&gt;аннотации исходного кода&lt;/a&gt; ), которые, как мы упоминали, могут использоваться для предоставления подключаемым модулям компилятора дополнительных указаний или информации. Аннотации для модуля можно получить с помощью плагина, но вы должны пройти через модули &lt;code&gt;ModGuts&lt;/code&gt; , чтобы получить его. Поскольку аннотации могут быть произвольными экземплярами &lt;code&gt;Data&lt;/code&gt; и &lt;code&gt;Typeable&lt;/code&gt; , вам необходимо предоставить аннотацию типа, указывающую правильный тип данных для извлечения из файла интерфейса, и вам необходимо убедиться, что тип аннотации, используемый вашими пользователями, совпадает с типом вашего плагина. использование. По этой причине мы рекомендуем распространять аннотации как часть пакета, который также предоставляет плагины компилятора, если это возможно.</target>
        </trans-unit>
        <trans-unit id="c4a698fc939e769737cd9fa4869e3c7f6a0dd613" translate="yes" xml:space="preserve">
          <source>Prim</source>
          <target state="translated">Prim</target>
        </trans-unit>
        <trans-unit id="097f7b8f054d460e64f528c1af758136a46531eb" translate="yes" xml:space="preserve">
          <source>PrimMVar</source>
          <target state="translated">PrimMVar</target>
        </trans-unit>
        <trans-unit id="b7683822a291cb2b58d760a6c293578f8d5053f1" translate="yes" xml:space="preserve">
          <source>Primality tests</source>
          <target state="translated">Испытания на первичность</target>
        </trans-unit>
        <trans-unit id="82232b5d4e89a2db12db9f128d9da3055f65c345" translate="yes" xml:space="preserve">
          <source>Primarily, this module consists of an interface to the C-land dynamic linker.</source>
          <target state="translated">В первую очередь,этот модуль состоит из интерфейса к C-ландшафтному динамическому линкеру.</target>
        </trans-unit>
        <trans-unit id="0889b00639729e1c129ac932d18003c7a198375f" translate="yes" xml:space="preserve">
          <source>Primary format character.</source>
          <target state="translated">Символ первичного формата.</target>
        </trans-unit>
        <trans-unit id="d2a03ab0b74a812f6fdc4dae75971c24107ba46b" translate="yes" xml:space="preserve">
          <source>Primary group ID (pw_gid)</source>
          <target state="translated">Идентификатор первичной группы (pw_gid)</target>
        </trans-unit>
        <trans-unit id="7607b51c8e1274c8fe1e933fecba18513d4f362a" translate="yes" xml:space="preserve">
          <source>PrimaryLANGID</source>
          <target state="translated">PrimaryLANGID</target>
        </trans-unit>
        <trans-unit id="cdd32e5e2d189473b1b0376cb2f1fe6ef6aad406" translate="yes" xml:space="preserve">
          <source>Primitive (unboxed) types cannot be defined in Haskell, and are therefore built into the language and compiler. Primitive types are always unlifted; that is, a value of a primitive type cannot be bottom. (Note: a &amp;ldquo;boxed&amp;rdquo; type means that a value is represented by a pointer to a heap object; a &amp;ldquo;lifted&amp;rdquo; type means that terms of that type may be bottom. See the next paragraph for an example.) We use the convention (but it is only a convention) that primitive types, values, and operations have a &lt;code&gt;#&lt;/code&gt; suffix (see &lt;a href=&quot;#magic-hash&quot;&gt;The magic hash&lt;/a&gt;). For some primitive types we have special syntax for literals, also described in the &lt;a href=&quot;#magic-hash&quot;&gt;same section&lt;/a&gt;.</source>
          <target state="translated">Примитивные (распакованные) типы не могут быть определены в Haskell, поэтому они встроены в язык и компилятор. Примитивные типы всегда не поднимаются; то есть значение примитивного типа не может быть нижним. (Примечание: тип &amp;laquo;в рамке&amp;raquo; означает, что значение представлено указателем на объект кучи; &amp;laquo;приподнятый&amp;raquo; тип означает, что элементы этого типа могут быть нижними. См. Пример в следующем абзаце.) Мы используем соглашение (но это всего лишь соглашение), что примитивные типы, значения и операции имеют суффикс &lt;code&gt;#&lt;/code&gt; (см &lt;a href=&quot;#magic-hash&quot;&gt;. Магический хеш&lt;/a&gt; ). Для некоторых примитивных типов у нас есть специальный синтаксис для литералов, также описанный в том &lt;a href=&quot;#magic-hash&quot;&gt;же разделе&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81e9ce0c637b5622aea322e7cbd9b861a8cb4dc6" translate="yes" xml:space="preserve">
          <source>Primitive Documents</source>
          <target state="translated">Первобытные документы</target>
        </trans-unit>
        <trans-unit id="f422d79426f666f61a7d39fe5b03b368a8e73a13" translate="yes" xml:space="preserve">
          <source>Primitive bytecode type.</source>
          <target state="translated">Примитивный тип байткода.</target>
        </trans-unit>
        <trans-unit id="c1c26c88e959f52e5cf4888bbad7bcf524b8820f" translate="yes" xml:space="preserve">
          <source>Primitive combinators</source>
          <target state="translated">Примитивные комбинаторы</target>
        </trans-unit>
        <trans-unit id="2e21eceae717d39a08de608f7fc31fb7d5627808" translate="yes" xml:space="preserve">
          <source>Primitive movement capabilities</source>
          <target state="translated">Возможности примитивного движения</target>
        </trans-unit>
        <trans-unit id="c2de126cf4ab0cd60ff18f3b3c4a2455396c348e" translate="yes" xml:space="preserve">
          <source>Primitive operations</source>
          <target state="translated">Примитивные действия</target>
        </trans-unit>
        <trans-unit id="7e8cb2eba99c97514ca435a92c7b1f3eff1bdea3" translate="yes" xml:space="preserve">
          <source>Primitive values are often represented by a simple bit-pattern, such as &lt;code&gt;Int#&lt;/code&gt;, &lt;code&gt;Float#&lt;/code&gt;, &lt;code&gt;Double#&lt;/code&gt;. But this is not necessarily the case: a primitive value might be represented by a pointer to a heap-allocated object. Examples include &lt;code&gt;Array#&lt;/code&gt;, the type of primitive arrays. Thus, &lt;code&gt;Array#&lt;/code&gt; is an unlifted, boxed type. A primitive array is heap-allocated because it is too big a value to fit in a register, and would be too expensive to copy around; in a sense, it is accidental that it is represented by a pointer. If a pointer represents a primitive value, then it really does point to that value: no unevaluated thunks, no indirections. Nothing can be at the other end of the pointer than the primitive value. A numerically-intensive program using unboxed types can go a &lt;em&gt;lot&lt;/em&gt; faster than its &amp;ldquo;standard&amp;rdquo; counterpart&amp;mdash;we saw a threefold speedup on one example.</source>
          <target state="translated">Примитивные значения часто представлены простым битовым шаблоном, например &lt;code&gt;Int#&lt;/code&gt; , &lt;code&gt;Float#&lt;/code&gt; , &lt;code&gt;Double#&lt;/code&gt; . Но это не обязательно так: примитивное значение может быть представлено указателем на объект, выделенный кучей. Примеры включают &lt;code&gt;Array#&lt;/code&gt; , тип примитивных массивов. Таким образом, &lt;code&gt;Array#&lt;/code&gt; - это неподъемный, коробочный тип. Примитивный массив выделяется в куче, потому что это слишком большое значение, чтобы поместиться в регистр, и было бы слишком дорого копировать; в некотором смысле случайно, что он представлен указателем. Если указатель представляет примитивное значение, тогда он действительно указывает на это значение: никаких неоцененных переходов, никаких косвенных указаний. На другом конце указателя не может быть ничего, кроме примитивного значения. Программа с интенсивным числовым использованием распакованных типов может работать &lt;em&gt;намного&lt;/em&gt; быстрее, чем ее &amp;laquo;стандартный&amp;raquo; аналог - мы видели трехкратное ускорение на одном примере.</target>
        </trans-unit>
        <trans-unit id="ffafa88c6f976297b9421ad4171675a387b485a2" translate="yes" xml:space="preserve">
          <source>Primitives</source>
          <target state="translated">Primitives</target>
        </trans-unit>
        <trans-unit id="66914127445228947976717f3559fb76a49308ac" translate="yes" xml:space="preserve">
          <source>Primitives and basic combinators</source>
          <target state="translated">Примитивы и основные комбинаторы</target>
        </trans-unit>
        <trans-unit id="0f20585a9b902d862530a747335f7e0f0fd615e0" translate="yes" xml:space="preserve">
          <source>Primitives are available to decode words of various sizes, both big and little endian.</source>
          <target state="translated">Примитивы доступны для декодирования слов различного размера,как больших,так и маленьких эндийцев.</target>
        </trans-unit>
        <trans-unit id="c11324a450fecb745dc9a0165fed6d81224cd078" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;RuntimeRep&lt;/code&gt; parameters as they appear; otherwise, they are defaulted to &lt;code&gt;'LiftedRep&lt;/code&gt;.</source>
          <target state="translated">Печать &lt;code&gt;RuntimeRep&lt;/code&gt; параметры , как они появляются; в противном случае по умолчанию используется значение &lt;code&gt;'LiftedRep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eeb81239159c8f60639d490579db34ba47cedde5" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;RuntimeRep&lt;/code&gt; variables in types which are runtime-representation polymorphic.</source>
          <target state="translated">Печать &lt;code&gt;RuntimeRep&lt;/code&gt; переменных типов , которые во время выполнения-представление полиморфные.</target>
        </trans-unit>
        <trans-unit id="eb7f33c02cf627c59368ecbf1b10534cd5ee7098" translate="yes" xml:space="preserve">
          <source>Print GHC&amp;rsquo;s numeric version number only.</source>
          <target state="translated">Печатайте только числовой номер версии GHC.</target>
        </trans-unit>
        <trans-unit id="5a8565f8c11652d5f9aaf3cf4b7da14d30635811" translate="yes" xml:space="preserve">
          <source>Print a full list of the module dependencies to stdout. (This is the standard verbosity flag, so the list will also be displayed with &lt;code&gt;-v3&lt;/code&gt; and &lt;code&gt;-v4&lt;/code&gt;; see &lt;a href=&quot;using#options-help&quot;&gt;Verbosity options&lt;/a&gt;.)</source>
          <target state="translated">Распечатайте полный список зависимостей модуля в stdout. (Это стандартный флаг подробности, поэтому список также будет отображаться с &lt;code&gt;-v3&lt;/code&gt; и &lt;code&gt;-v4&lt;/code&gt; ; см. &lt;a href=&quot;using#options-help&quot;&gt;Параметры подробности&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="80be7ba4189d5acb5419cc416166ad88b14a93ab" translate="yes" xml:space="preserve">
          <source>Print a one-line string including GHC&amp;rsquo;s version number.</source>
          <target state="translated">Выведите однострочную строку, включая номер версии GHC.</target>
        </trans-unit>
        <trans-unit id="2bc805e229391602d4747b2b177e7eedc95c2396" translate="yes" xml:space="preserve">
          <source>Print a one-line summary of the size of the Core program at the end of the optimisation pipeline</source>
          <target state="translated">Распечатать однолинейную сводку по размеру основной программы в конце трубопровода оптимизации</target>
        </trans-unit>
        <trans-unit id="568fb95ae04c3a3502b02cfb9ffd902745997992" translate="yes" xml:space="preserve">
          <source>Print a one-line summary of the size of the Core program at the end of the optimisation pipeline.</source>
          <target state="translated">В конце трубопровода оптимизации выведите на печать однолинейную сводку по размеру основной программы.</target>
        </trans-unit>
        <trans-unit id="6606d0f053fe23bd0db8aac9087cd16974cb24e2" translate="yes" xml:space="preserve">
          <source>Print coercions in types</source>
          <target state="translated">Принуждения к печати по типам</target>
        </trans-unit>
        <trans-unit id="0432cd36a550ecbc08a2b9824c1b63189a9b6ee6" translate="yes" xml:space="preserve">
          <source>Print explicit &lt;code&gt;forall&lt;/code&gt; quantification in types. See also &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt;&lt;code&gt;-XExplicitForAll&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Печать явного &lt;code&gt;forall&lt;/code&gt; количественной оценки типов. См. Также &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt; &lt;code&gt;-XExplicitForAll&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37d21fefc9ecda651a1fad5250210b879a85ecad" translate="yes" xml:space="preserve">
          <source>Print explicit &lt;code&gt;forall&lt;/code&gt; quantification in types. See also &lt;a href=&quot;glasgow_exts#extension-ExplicitForAll&quot;&gt;&lt;code&gt;ExplicitForAll&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43d90f3662f54252f7284d92a4b10054139a2658" translate="yes" xml:space="preserve">
          <source>Print explicit kind foralls and kind arguments in types. See also &lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt;&lt;code&gt;-XKindSignatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">Выведите явные типы данных и аргументы типа в типах. См. Также &lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt; &lt;code&gt;-XKindSignatures&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e56540a92be164f6f8a1c47dd5d494997f195e34" translate="yes" xml:space="preserve">
          <source>Print explicit kind foralls and kind arguments in types. See also &lt;a href=&quot;glasgow_exts#extension-KindSignatures&quot;&gt;&lt;code&gt;KindSignatures&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc5df58f6562a5f05e5a96496e219a954a057a2" translate="yes" xml:space="preserve">
          <source>Print extra information from typechecker.</source>
          <target state="translated">Печатайте дополнительную информацию с помощью типографского шрифта.</target>
        </trans-unit>
        <trans-unit id="1c689b67035c8c53f98145aff3c638fb305e66de" translate="yes" xml:space="preserve">
          <source>Print information about the compiler.</source>
          <target state="translated">Распечатать информацию о компиляторе.</target>
        </trans-unit>
        <trans-unit id="c17674ed7a508bc28415982ff7aee239af184532" translate="yes" xml:space="preserve">
          <source>Print out each pass name as it happens</source>
          <target state="translated">Распечатать имя каждого прохода,как это происходит</target>
        </trans-unit>
        <trans-unit id="6346e07b56af6623e4a5cded288d10867e65bab0" translate="yes" xml:space="preserve">
          <source>Print out each pass name, its runtime and heap allocations as it happens. Note that this may come at a slight performance cost as the compiler will be a bit more eager in forcing pass results to more accurately account for their costs.</source>
          <target state="translated">Распечатайте имя каждого прохода,время его выполнения и распределение кучи,как это происходит.Обратите внимание,что это может принести небольшие затраты на производительность,так как компилятор будет немного больше стремиться заставить результаты проходов более точно учитывать их стоимость.</target>
        </trans-unit>
        <trans-unit id="5e4bdf4d18e7fa5c826928aec79e1ccb449c15ff" translate="yes" xml:space="preserve">
          <source>Print out summary of what kind of information the renamer had to bring in.</source>
          <target state="translated">Распечатайте краткое изложение того,какую информацию должен был принести переименованник.</target>
        </trans-unit>
        <trans-unit id="bc9a53e87cca6954b36dc36c0f11d367ea1e424e" translate="yes" xml:space="preserve">
          <source>Print out usage information.</source>
          <target state="translated">Распечатайте информацию об использовании.</target>
        </trans-unit>
        <trans-unit id="b2c88a9f866c4e0f0dc02f44c6ee50187a966424" translate="yes" xml:space="preserve">
          <source>Print single alternative case expressions as strict lets.</source>
          <target state="translated">Выведите единичные альтернативные регистровые выражения в строгом соответствии со строгими правилами.</target>
        </trans-unit>
        <trans-unit id="8fb7a347c6a4aa8013e70856b20c399cd1c29ff8" translate="yes" xml:space="preserve">
          <source>Print single alternative case expressions as though they were strict let expressions. This is helpful when your code does a lot of unboxing.</source>
          <target state="translated">Выведите единичные альтернативные регистровые выражения,как если бы они были строгими пустыми выражениями.Это полезно,когда ваш код делает много распаковок.</target>
        </trans-unit>
        <trans-unit id="2d376b6f72267ae8b071df5ba4178bc23f3f30f8" translate="yes" xml:space="preserve">
          <source>Print the name of each compilation phase as it is executed. (equivalent to &lt;a href=&quot;debugging#ghc-flag--dshow-passes&quot;&gt;&lt;code&gt;-dshow-passes&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Выведите название каждой фазы компиляции по мере ее выполнения. (эквивалент &lt;a href=&quot;debugging#ghc-flag--dshow-passes&quot;&gt; &lt;code&gt;-dshow-passes&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2d35a116b4eacba35aab727296180081e67d78e2" translate="yes" xml:space="preserve">
          <source>Print the path to GHC&amp;rsquo;s library directory. This is the top of the directory tree containing GHC&amp;rsquo;s libraries, interfaces, and include files (usually something like &lt;code&gt;/usr/local/lib/ghc-5.04&lt;/code&gt; on Unix). This is the value of &lt;code&gt;$libdir&lt;/code&gt; in the package configuration file (see &lt;a href=&quot;packages#packages&quot;&gt;Packages&lt;/a&gt;).</source>
          <target state="translated">Выведите путь к каталогу библиотеки GHC. Это верхняя часть дерева каталогов, содержащего библиотеки, интерфейсы и включаемые файлы GHC (обычно что-то вроде &lt;code&gt;/usr/local/lib/ghc-5.04&lt;/code&gt; в Unix). Это значение &lt;code&gt;$libdir&lt;/code&gt; в файле конфигурации пакета (см. &lt;a href=&quot;packages#packages&quot;&gt;Пакеты&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="7dddff095a26ddf9987f527bca4da1fdb41bb6b7" translate="yes" xml:space="preserve">
          <source>Print the supported command line options. This flag can be used for autocompletion in a shell.</source>
          <target state="translated">Распечатайте поддерживаемые параметры командной строки.Этот флаг может быть использован для автозавершения в оболочке.</target>
        </trans-unit>
        <trans-unit id="0de10c90956a31b467677165023124cbf6667b11" translate="yes" xml:space="preserve">
          <source>Print the supported language extensions.</source>
          <target state="translated">Печать поддерживаемых языковых расширений.</target>
        </trans-unit>
        <trans-unit id="0536d584c0b1d66d30f2000068d79cde18e65738" translate="yes" xml:space="preserve">
          <source>Print values of type &lt;code&gt;Word#&lt;/code&gt; and &lt;code&gt;Word64#&lt;/code&gt; (but not values of type &lt;code&gt;Int#&lt;/code&gt; and &lt;code&gt;Int64#&lt;/code&gt;) in hexadecimal instead of decimal. The hexadecimal is zero-padded to make the length of the representation a power of two. For example: &lt;code&gt;0x0A0A##&lt;/code&gt;, &lt;code&gt;0x000FFFFF##&lt;/code&gt;, &lt;code&gt;0xC##&lt;/code&gt;. This flag may be helpful when you are producing a bit pattern that to expect to work correctly on a 32-bit or a 64-bit architecture. Dumping hexadecimal literals after optimizations and constant folding makes it easier to confirm that the generated bit pattern is correct.</source>
          <target state="translated">&lt;code&gt;Word64#&lt;/code&gt; значения типа &lt;code&gt;Word#&lt;/code&gt; и Word64 # (но не значения типа &lt;code&gt;Int#&lt;/code&gt; и &lt;code&gt;Int64#&lt;/code&gt; ) в шестнадцатеричном виде вместо десятичного. Шестнадцатеричное число дополняется нулями, чтобы длина представления была степенью двойки. Например: &lt;code&gt;0x0A0A##&lt;/code&gt; , &lt;code&gt;0x000FFFFF##&lt;/code&gt; , &lt;code&gt;0xC##&lt;/code&gt; . Этот флаг может быть полезен, когда вы создаете битовый шаблон, который должен правильно работать в 32-битной или 64-битной архитектуре. Сброс шестнадцатеричных литералов после оптимизации и сворачивания констант упрощает проверку правильности сгенерированного битового шаблона.</target>
        </trans-unit>
        <trans-unit id="3c8fc49ee76dfe430eaaae5d2c003a633432f9f0" translate="yes" xml:space="preserve">
          <source>Print values of type &lt;code&gt;Word#&lt;/code&gt; in hexadecimal.</source>
          <target state="translated">Вывести значения типа &lt;code&gt;Word#&lt;/code&gt; в шестнадцатеричном формате.</target>
        </trans-unit>
        <trans-unit id="f7be34b673808f2d48e5ab2574882b799d823a21" translate="yes" xml:space="preserve">
          <source>PrintfArg</source>
          <target state="translated">PrintfArg</target>
        </trans-unit>
        <trans-unit id="7089bc7979848c154683cd0084ff2f7d3644e64b" translate="yes" xml:space="preserve">
          <source>PrintfType</source>
          <target state="translated">PrintfType</target>
        </trans-unit>
        <trans-unit id="78c20ed70f591c5b802ec52da8af22641a65cb47" translate="yes" xml:space="preserve">
          <source>Printing Functions</source>
          <target state="translated">Функции печати</target>
        </trans-unit>
        <trans-unit id="81c35c214270ee006f5c56860fe38a2f038e3898" translate="yes" xml:space="preserve">
          <source>Prints a one-line summary of timing statistics for the GHC run. This option is equivalent to &lt;code&gt;+RTS -tstderr&lt;/code&gt;, see &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS options to control the garbage collector&lt;/a&gt;.</source>
          <target state="translated">Печатает однострочную сводку временной статистики для запуска GHC. Этот параметр эквивалентен &lt;code&gt;+RTS -tstderr&lt;/code&gt; , см. Параметры &lt;a href=&quot;runtime_control#rts-options-gc&quot;&gt;RTS для управления сборщиком мусора&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a32b1200253fea3bdcc41abafe3985fec209486" translate="yes" xml:space="preserve">
          <source>Prints a value without forcing its evaluation. &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; may be used on values whose types are unknown or partially known, which might be the case for local variables with polymorphic types at a breakpoint. While inspecting the runtime value, &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; attempts to reconstruct the type of the value, and will elaborate the type in GHCi&amp;rsquo;s environment if possible. If any unevaluated components (thunks) are encountered, then &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; binds a fresh variable with a name beginning with &lt;code&gt;_t&lt;/code&gt; to each thunk. See &lt;a href=&quot;#breakpoints&quot;&gt;Breakpoints and inspecting variables&lt;/a&gt; for more information. See also the &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt;&lt;code&gt;:sprint&lt;/code&gt;&lt;/a&gt; command, which works like &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt; but does not bind new variables.</source>
          <target state="translated">Печатает значение без принудительного вычисления. &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; может использоваться для значений, типы которых неизвестны или частично известны, что может иметь место для локальных переменных с полиморфными типами в точке останова. При проверке значения времени выполнения &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; пытается восстановить тип значения и, если возможно, уточняет тип в среде GHCi. Если встречаются какие-либо неоцененные компоненты (преобразователи), то &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; связывает новую переменную с именем, начинающимся с &lt;code&gt;_t&lt;/code&gt; , с каждым преобразователем. См. &lt;a href=&quot;#breakpoints&quot;&gt;Точки останова и проверка переменных&lt;/a&gt; для получения дополнительной информации. См. Также команду &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt; &lt;code&gt;:sprint&lt;/code&gt; &lt;/a&gt; , которая работает как &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; ,&lt;/a&gt; но не связывает новые переменные.</target>
        </trans-unit>
        <trans-unit id="1901cde8b08fed8941230e3f83f1c3cf4a834d5a" translate="yes" xml:space="preserve">
          <source>Prints a value without forcing its evaluation. &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt;&lt;code&gt;:sprint&lt;/code&gt;&lt;/a&gt; is similar to &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;, with the difference that unevaluated subterms are not bound to new variables, they are simply denoted by &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="translated">Печатает значение без принудительного вычисления. &lt;a href=&quot;#ghci-cmd-:sprint&quot;&gt; &lt;code&gt;:sprint&lt;/code&gt; &lt;/a&gt; похож на &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; , с той разницей, что неоцененные подтермы не привязаны к новым переменным, они просто обозначаются &lt;code&gt;_&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac4afe4944ea3331a3d2c608c60d31227edcb709" translate="yes" xml:space="preserve">
          <source>Prints the latest available version of package ⟨P⟩.</source>
          <target state="translated">Печатает последнюю доступную версию пакета ⟨P⟩.</target>
        </trans-unit>
        <trans-unit id="7595d277dda450dbba120e42b0d8f0d521de9f36" translate="yes" xml:space="preserve">
          <source>Prints the value of ⟨identifier⟩ in the same way as &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;. Unlike &lt;a href=&quot;#ghci-cmd-:print&quot;&gt;&lt;code&gt;:print&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#ghci-cmd-:force&quot;&gt;&lt;code&gt;:force&lt;/code&gt;&lt;/a&gt; evaluates each thunk that it encounters while traversing the value. This may cause exceptions or infinite loops, or further breakpoints (which are ignored, but displayed).</source>
          <target state="translated">Печатает значение &amp;laquo;идентификатора&amp;raquo; так же, как &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; . В отличие &lt;a href=&quot;#ghci-cmd-:print&quot;&gt; &lt;code&gt;:print&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#ghci-cmd-:force&quot;&gt; &lt;code&gt;:force&lt;/code&gt; &lt;/a&gt; оценивает каждый преобразователь , что он сталкивается во время прохождения значения. Это может вызвать исключения, бесконечные циклы или дополнительные точки останова (которые игнорируются, но отображаются).</target>
        </trans-unit>
        <trans-unit id="c61486fb3c29083825fc530e85db902f694779e3" translate="yes" xml:space="preserve">
          <source>PrioIOAvailable</source>
          <target state="translated">PrioIOAvailable</target>
        </trans-unit>
        <trans-unit id="cbad2d411713243f18b25f4ad0c20cdf1f597155" translate="yes" xml:space="preserve">
          <source>Prior to GHC 8.10, when passing an &lt;code&gt;ArrayArray#&lt;/code&gt; argument to a foreign function, the foreign function would see a pointer to the &lt;code&gt;StgMutArrPtrs&lt;/code&gt; rather than just the payload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabfc2adbe5a1490690f6f40c6d623b433df0934" translate="yes" xml:space="preserve">
          <source>Prior to version 1.4.0.0, the default implementation of the &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; method was defined as</source>
          <target state="translated">До версии 1.4.0.0 реализация метода &lt;code&gt;&lt;a href=&quot;control-deepseq#v:rnf&quot;&gt;rnf&lt;/a&gt;&lt;/code&gt; по умолчанию была определена как</target>
        </trans-unit>
        <trans-unit id="cda4f4476ac13bb2ae7bc15ee6736ba96cc21c68" translate="yes" xml:space="preserve">
          <source>PrivateUse</source>
          <target state="translated">PrivateUse</target>
        </trans-unit>
        <trans-unit id="77a4e6819b3e432af8190d38019f1fa2de3878fb" translate="yes" xml:space="preserve">
          <source>Probalistic Miller-Rabin primality test.</source>
          <target state="translated">Тест на праймериз Миллера-Рабина.</target>
        </trans-unit>
        <trans-unit id="52ec5a32c2a80f826813962523827657c92e7c45" translate="yes" xml:space="preserve">
          <source>ProcRetHandles</source>
          <target state="translated">ProcRetHandles</target>
        </trans-unit>
        <trans-unit id="59240a07db79f390a176a1da2a0e4e73723df8cb" translate="yes" xml:space="preserve">
          <source>Proceed as normal, but do not delete any intermediate files.</source>
          <target state="translated">Действуйте как обычно,но не удаляйте промежуточные файлы.</target>
        </trans-unit>
        <trans-unit id="3413e1941d2b768b5d94e902b36b50f24a0b9e21" translate="yes" xml:space="preserve">
          <source>Process completion</source>
          <target state="translated">Завершение процесса</target>
        </trans-unit>
        <trans-unit id="78730cfe630ab980fa7c67900c84883cadf329d1" translate="yes" xml:space="preserve">
          <source>Process environment</source>
          <target state="translated">технологическая среда</target>
        </trans-unit>
        <trans-unit id="c650b71115a88a0c6c8c39f8cb70327da49c6469" translate="yes" xml:space="preserve">
          <source>Process groups</source>
          <target state="translated">Процессуальные группы</target>
        </trans-unit>
        <trans-unit id="e19a92ef9380a074cb7ab3ec33973d7ac5dd17b1" translate="yes" xml:space="preserve">
          <source>Process status</source>
          <target state="translated">Состояние процесса</target>
        </trans-unit>
        <trans-unit id="450d3838ec09ee134c6165b911e3bfce5c2da9f2" translate="yes" xml:space="preserve">
          <source>Process the command-line, and return the list of values that matched (and those that didn't). The arguments are:</source>
          <target state="translated">Обработайте командную строку и верните список соответствующих значений (и тех,которые не соответствовали).Аргументы таковы:</target>
        </trans-unit>
        <trans-unit id="165237f99277fa9f8a75372d3b27ef4e2226ebb6" translate="yes" xml:space="preserve">
          <source>Process times</source>
          <target state="translated">длительность процессов</target>
        </trans-unit>
        <trans-unit id="b8940363e3104375a16f75f2a6c0076297b5bcc8" translate="yes" xml:space="preserve">
          <source>ProcessAccessRights</source>
          <target state="translated">ProcessAccessRights</target>
        </trans-unit>
        <trans-unit id="6feb0f0bc2fdaddeeb0ce66961c31fda1b5189f4" translate="yes" xml:space="preserve">
          <source>ProcessEntry32</source>
          <target state="translated">ProcessEntry32</target>
        </trans-unit>
        <trans-unit id="3c0317db948b70e6ca821af4a8b48f2b33ee6e46" translate="yes" xml:space="preserve">
          <source>ProcessGroupID</source>
          <target state="translated">ProcessGroupID</target>
        </trans-unit>
        <trans-unit id="21e8dd5d13542f0c6a51fa47c09f48b388d00925" translate="yes" xml:space="preserve">
          <source>ProcessHandle</source>
          <target state="translated">ProcessHandle</target>
        </trans-unit>
        <trans-unit id="2f4686b1023443590b468cf68975e34698d5dce7" translate="yes" xml:space="preserve">
          <source>ProcessHandle__</source>
          <target state="translated">ProcessHandle__</target>
        </trans-unit>
        <trans-unit id="5906efeedbc929caae1ebc56efbb67f6db7d732f" translate="yes" xml:space="preserve">
          <source>ProcessID</source>
          <target state="translated">ProcessID</target>
        </trans-unit>
        <trans-unit id="0e72272456a5dfc962478aaa4cd24c7dbdabd6cf" translate="yes" xml:space="preserve">
          <source>ProcessId</source>
          <target state="translated">ProcessId</target>
        </trans-unit>
        <trans-unit id="01ccef775dbbfe8438822cf4c77cb31753b62e29" translate="yes" xml:space="preserve">
          <source>ProcessId, number of threads, parent ProcessId, process base priority, path of executable file</source>
          <target state="translated">ProcessId,количество потоков,родительский ProcessId,приоритет базы процесса,путь к исполняемому файлу</target>
        </trans-unit>
        <trans-unit id="14d4e6622d64799268058fe065228ec4cdce7733" translate="yes" xml:space="preserve">
          <source>ProcessInput</source>
          <target state="translated">ProcessInput</target>
        </trans-unit>
        <trans-unit id="b1f9a72a478a9193ff3d8c1d61ee84b82b8b55d5" translate="yes" xml:space="preserve">
          <source>ProcessOutput</source>
          <target state="translated">ProcessOutput</target>
        </trans-unit>
        <trans-unit id="b85a49842dd03687134a104f7f2c219a332fd41b" translate="yes" xml:space="preserve">
          <source>ProcessStatus</source>
          <target state="translated">ProcessStatus</target>
        </trans-unit>
        <trans-unit id="6f22a38212f7ae729981dc2920c82da11507b5bd" translate="yes" xml:space="preserve">
          <source>ProcessTimes</source>
          <target state="translated">ProcessTimes</target>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="translated">Processes</target>
        </trans-unit>
        <trans-unit id="d9138d8dd701d266606ca4c3ec53b292b58d6a6e" translate="yes" xml:space="preserve">
          <source>Processing Strings into Html friendly things.</source>
          <target state="translated">Обработка строк в Html дружественные вещи.</target>
        </trans-unit>
        <trans-unit id="31e08f0a5d6400f5a893fc895b0737af9fc1c866" translate="yes" xml:space="preserve">
          <source>Processor features</source>
          <target state="translated">Характеристики процессора</target>
        </trans-unit>
        <trans-unit id="51346a24d3f29d2ffa996e556945ed4655cf318e" translate="yes" xml:space="preserve">
          <source>ProcessorFeature</source>
          <target state="translated">ProcessorFeature</target>
        </trans-unit>
        <trans-unit id="3fb1ad2abc3a670a4b947bec2fed69232206dac4" translate="yes" xml:space="preserve">
          <source>Produce &amp;ldquo;ticky-ticky&amp;rdquo; statistics at the end of the program run (only available if the program was linked with &lt;a href=&quot;phases#ghc-flag--debug&quot;&gt;&lt;code&gt;-debug&lt;/code&gt;&lt;/a&gt;). The ⟨file⟩ business works just like on the &lt;a href=&quot;#rts-flag--S%20%5B%E2%9F%A8file%E2%9F%A9%5D&quot;&gt;&lt;code&gt;-S [⟨file⟩]&lt;/code&gt;&lt;/a&gt; RTS option, above.</source>
          <target state="translated">Производить &amp;laquo;тикающую&amp;raquo; статистику в конце выполнения программы (доступно только в том случае, если программа была связана с &lt;a href=&quot;phases#ghc-flag--debug&quot;&gt; &lt;code&gt;-debug&lt;/code&gt; &lt;/a&gt; ). Бизнес с &amp;laquo;файлом&amp;raquo; работает так же, как и для параметра &lt;a href=&quot;#rts-flag--S%20%5B%E2%9F%A8file%E2%9F%A9%5D&quot;&gt; &lt;code&gt;-S [⟨file⟩]&lt;/code&gt; &lt;/a&gt; RTS, описанного выше.</target>
        </trans-unit>
        <trans-unit id="6cf463b6f4624fb94cd58e7897c4e59d5fb1fb3f" translate="yes" xml:space="preserve">
          <source>Produce DWARF debug information in compiled object files. ⟨n⟩ can be 0, 1, or 2, with higher numbers producing richer output. If ⟨n⟩ is omitted, level 2 is assumed.</source>
          <target state="translated">Производить отладочную информацию DWARF в скомпилированных объектных файлах.⟨n⟩ может быть 0,1 или 2,с более высокими числами,что дает более богатый вывод.Если ⟨n⟩ опущена,то предполагается уровень 2.</target>
        </trans-unit>
        <trans-unit id="311b86090be24794748573ba1bb8b1841bef8144" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Frameset.</source>
          <target state="translated">Вы производите XHTML 1.0 Frameset.</target>
        </trans-unit>
        <trans-unit id="f0bce322e51b0e5e1f30cc905d309ee358c3950a" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Strict.</source>
          <target state="translated">Вы производите XHTML 1.0 Strict.</target>
        </trans-unit>
        <trans-unit id="feb762b8a956256336a4059b532f2566785ff8e7" translate="yes" xml:space="preserve">
          <source>Produces XHTML 1.0 Transitional.</source>
          <target state="translated">Вы производите XHTML 1.0 Transitional.</target>
        </trans-unit>
        <trans-unit id="3514031227d8fe4f3d212805cc6af9c2eb3a4315" translate="yes" xml:space="preserve">
          <source>Produces an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/ghc-exts#t:Addr-35-&quot;&gt;Addr#&lt;/a&gt;&lt;/code&gt; literal from the NUL-terminated C-string starting at the given memory address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3b86d1ef21b9fb2e1edc30f524e7afb491b1ad" translate="yes" xml:space="preserve">
          <source>Product</source>
          <target state="translated">Product</target>
        </trans-unit>
        <trans-unit id="9436b2fdb0e7c34a33a3c91d959bba1406290a1a" translate="yes" xml:space="preserve">
          <source>ProductType</source>
          <target state="translated">ProductType</target>
        </trans-unit>
        <trans-unit id="0c7c0674cb4b4821337188133a7e093a0462c24f" translate="yes" xml:space="preserve">
          <source>Products, lifted to functors.</source>
          <target state="translated">Продукты,поднятые на веселье.</target>
        </trans-unit>
        <trans-unit id="45873739b5a096f14b6618d0351cf66a0fc902fa" translate="yes" xml:space="preserve">
          <source>Products: encode multiple arguments to constructors</source>
          <target state="translated">Продукты:кодирование множества аргументов конструкторам</target>
        </trans-unit>
        <trans-unit id="3baa38b5927954f86d772798f9128466bb7cb156" translate="yes" xml:space="preserve">
          <source>ProfFlags</source>
          <target state="translated">ProfFlags</target>
        </trans-unit>
        <trans-unit id="684ae62f53358a3d6fa087ccc73007ad4415d51e" translate="yes" xml:space="preserve">
          <source>Profiling a program is a three-step process:</source>
          <target state="translated">Профилирование программы-это трехступенчатый процесс:</target>
        </trans-unit>
        <trans-unit id="8b0bf225ec1be7116f5172952f591da561f081d7" translate="yes" xml:space="preserve">
          <source>Profiling call stacks</source>
          <target state="translated">Профилирование стеков вызовов</target>
        </trans-unit>
        <trans-unit id="182323e605505b651eaa881921e0342a44be8b4d" translate="yes" xml:space="preserve">
          <source>Program arguments</source>
          <target state="translated">Аргументы программы</target>
        </trans-unit>
        <trans-unit id="f0abc2008747749add9fef13512caaf5675a5840" translate="yes" xml:space="preserve">
          <source>Programmers using the &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API should be aware that EAGAIN exceptions may occur for non-blocking IO!</source>
          <target state="translated">Программисты, использующие &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;system-posix-io#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API, должны знать, что исключения EAGAIN могут возникать для неблокирующего ввода-вывода!</target>
        </trans-unit>
        <trans-unit id="6e4856079c43518428585d9f6f55af53723c39a0" translate="yes" xml:space="preserve">
          <source>Programmers using the &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API should be aware that EAGAIN exceptions may occur for non-blocking IO!</source>
          <target state="translated">Программисты, использующие &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdRead&quot;&gt;fdRead&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;system-posix-io-bytestring#v:fdWrite&quot;&gt;fdWrite&lt;/a&gt;&lt;/code&gt; API, должны знать, что исключения EAGAIN могут возникать для неблокирующего ввода-вывода!</target>
        </trans-unit>
        <trans-unit id="f5db4bda11e8bec3e596786fc436f585dc33173f" translate="yes" xml:space="preserve">
          <source>Programs compiled with &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt;&lt;code&gt;-fdefer-type-errors&lt;/code&gt;&lt;/a&gt; may fail a bit more eagerly than one might expect. For instance,</source>
          <target state="translated">Программы, скомпилированные с помощью &lt;a href=&quot;using-warnings#ghc-flag--fdefer-type-errors&quot;&gt; &lt;code&gt;-fdefer-type-errors&lt;/code&gt; ,&lt;/a&gt; могут терпеть неудачу несколько быстрее, чем можно было бы ожидать. Например,</target>
        </trans-unit>
        <trans-unit id="ec0bc39a0924b82acddd145c4bb3e23cd22b3bc0" translate="yes" xml:space="preserve">
          <source>Progress will usually be made by skipping the first element of the &lt;code&gt;from&lt;/code&gt; buffer. This function should only be called if you are certain that you wish to do this skipping and if the &lt;code&gt;to&lt;/code&gt; buffer has at least one element of free space. Because this function deals with decoding failure, it assumes that the from buffer has at least one element.</source>
          <target state="translated">Обычно прогресс достигается путем пропуска первого элемента &lt;code&gt;from&lt;/code&gt; буфера. Эту функцию следует вызывать только в том случае, если вы уверены, что хотите выполнить этот пропуск, и если в буфере &lt;code&gt;to&lt;/code&gt; есть хотя бы один элемент свободного пространства. Поскольку эта функция имеет дело с ошибкой декодирования, она предполагает, что буфер from имеет хотя бы один элемент.</target>
        </trans-unit>
        <trans-unit id="a01e7be7e338ce65feff32bc980eb7c0c7eb6754" translate="yes" xml:space="preserve">
          <source>Projection to the other functor.</source>
          <target state="translated">Проекция на другого весельчака.</target>
        </trans-unit>
        <trans-unit id="aaf4dfbf169435dac06d1f7571397f1db30f3f9a" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right (cf. &lt;code&gt;&lt;a href=&quot;control-monad#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Превратите функцию в монаду, просматривая монадические аргументы слева направо (см. &lt;code&gt;&lt;a href=&quot;control-monad#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="90322d805d75363f5e2ba902de35d5fb3e329291" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right (cf. &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Превратите функцию в монаду, просматривая монадические аргументы слева направо (см. &lt;code&gt;&lt;a href=&quot;ghc-base#v:liftM2&quot;&gt;liftM2&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5b1e023440a1d1251cab82a65c8a674a9ce8f45f" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad, scanning the monadic arguments from left to right. For example,</source>
          <target state="translated">Продвигайте функцию к монаде,сканируя монадские аргументы слева направо.Например,</target>
        </trans-unit>
        <trans-unit id="f05ff30359fcf6d0cd737c9742b3ce528d2a61e0" translate="yes" xml:space="preserve">
          <source>Promote a function to a monad.</source>
          <target state="translated">Продвинуть функцию до монады.</target>
        </trans-unit>
        <trans-unit id="bb699540cce051f9cc1055d53e69e00d6ddd26ac" translate="yes" xml:space="preserve">
          <source>PromotedConsT</source>
          <target state="translated">PromotedConsT</target>
        </trans-unit>
        <trans-unit id="6c11a71a788afd02567c23eab945ff6f9118b661" translate="yes" xml:space="preserve">
          <source>PromotedNilT</source>
          <target state="translated">PromotedNilT</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="0cbea5295e2b199673171bae00d25211a4daa049" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only). The default definition uses &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;. Instances that define &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; should also define &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Предлагаемая замена &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; с использованием парсеров нового стиля (только GHC). Определение по умолчанию использует &lt;code&gt;&lt;a href=&quot;ghc-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; . Экземпляры, которые определяют &lt;code&gt;&lt;a href=&quot;ghc-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; , также должны определять &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; как &lt;code&gt;&lt;a href=&quot;ghc-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c383bc233d01d9f33a1db1df2275ceb34c0bb2c" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only).</source>
          <target state="translated">Предлагаемая замена &lt;code&gt;&lt;a href=&quot;ghc-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; с использованием парсеров нового стиля (только GHC).</target>
        </trans-unit>
        <trans-unit id="25cf3b2ae91b78e363c940dfba15d79fbbffe0a5" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only). The default definition uses &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt;. Instances that define &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; should also define &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Предлагаемая замена &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; с использованием парсеров нового стиля (только GHC). Определение по умолчанию использует &lt;code&gt;&lt;a href=&quot;text-read#v:readList&quot;&gt;readList&lt;/a&gt;&lt;/code&gt; . Экземпляры, которые определяют &lt;code&gt;&lt;a href=&quot;text-read#v:readPrec&quot;&gt;readPrec&lt;/a&gt;&lt;/code&gt; , также должны определять &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrec&quot;&gt;readListPrec&lt;/a&gt;&lt;/code&gt; как &lt;code&gt;&lt;a href=&quot;text-read#v:readListPrecDefault&quot;&gt;readListPrecDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d4f8243ce4f1bb9b8bfb0f67f0f3ba9911430da3" translate="yes" xml:space="preserve">
          <source>Proposed replacement for &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; using new-style parsers (GHC only).</source>
          <target state="translated">Предлагаемая замена &lt;code&gt;&lt;a href=&quot;text-read#v:readsPrec&quot;&gt;readsPrec&lt;/a&gt;&lt;/code&gt; с использованием парсеров нового стиля (только GHC).</target>
        </trans-unit>
        <trans-unit id="a22e8bd59e18b97a41af964d0ba41a98b37ab76a" translate="yes" xml:space="preserve">
          <source>Propositional equality</source>
          <target state="translated">Равенство сторонников кандидатуры</target>
        </trans-unit>
        <trans-unit id="a96dd404b246333ac1350164ef1732587afa0abb" translate="yes" xml:space="preserve">
          <source>Propositional equality. If &lt;code&gt;a :~: b&lt;/code&gt; is inhabited by some terminating value, then the type &lt;code&gt;a&lt;/code&gt; is the same as the type &lt;code&gt;b&lt;/code&gt;. To use this equality in practice, pattern-match on the &lt;code&gt;a :~: b&lt;/code&gt; to get out the &lt;code&gt;Refl&lt;/code&gt; constructor; in the body of the pattern-match, the compiler knows that &lt;code&gt;a ~ b&lt;/code&gt;.</source>
          <target state="translated">Пропозициональное равенство. Если &lt;code&gt;a :~: b&lt;/code&gt; содержит какое-то завершающее значение, тогда тип &lt;code&gt;a&lt;/code&gt; совпадает с типом &lt;code&gt;b&lt;/code&gt; . Чтобы использовать это равенство на практике, сопоставьте шаблон для &lt;code&gt;a :~: b&lt;/code&gt; чтобы получить конструктор &lt;code&gt;Refl&lt;/code&gt; ; в теле сопоставления с образцом компилятор знает, что &lt;code&gt;a ~ b&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fcb3452df3c76dae9ccbe4cb023c0ba8d83c8c7a" translate="yes" xml:space="preserve">
          <source>ProtectSectionFlags</source>
          <target state="translated">ProtectSectionFlags</target>
        </trans-unit>
        <trans-unit id="a48acfe3b05f29ef5d32e9c4686c610f7573d3ab" translate="yes" xml:space="preserve">
          <source>ProtocolError</source>
          <target state="translated">ProtocolError</target>
        </trans-unit>
        <trans-unit id="f505fd6f5c51f1f0eb05dff31b6b08cb2672b51b" translate="yes" xml:space="preserve">
          <source>Provide a Semigroup for an arbitrary Monoid.</source>
          <target state="translated">Предоставьте полугруппу для произвольного моноида.</target>
        </trans-unit>
        <trans-unit id="f283ee30918edc6de5015fa4f97d3ed7816f7d65" translate="yes" xml:space="preserve">
          <source>Provide a handler for exceptions thrown during execution of the first action. Note that type of the type of the argument to the handler will constrain which exceptions are caught. See &lt;a href=&quot;../base-4.14.1.0/control-exception&quot;&gt;Control.Exception&lt;/a&gt;'s &lt;code&gt;&lt;a href=&quot;https://downloads.haskell.org/~ghc/8.10.2/docs/html/libraries/base-4.14.1.0/Control-Exception-Base.html#v:catch&quot;&gt;catch&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d826fc994ddc518cced2dcde7f6017e636b0aac9" translate="yes" xml:space="preserve">
          <source>Provide an &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; action with the current value of an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; will be empty for the duration that the action is running.</source>
          <target state="translated">Обеспечьте действие &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; с текущим значением &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; будет пустым в течение всего срока , что действие выполняется.</target>
        </trans-unit>
        <trans-unit id="d318ed93837d829decf4e305a098deca627cd45c" translate="yes" xml:space="preserve">
          <source>Provide sendInput function and INPUT types.</source>
          <target state="translated">Обеспечьте функцию sendInput и типы входов.</target>
        </trans-unit>
        <trans-unit id="08b1b035b9a9a2acbcca06ac2bc748267d24aace" translate="yes" xml:space="preserve">
          <source>Provided for backwards compatibility. The tok type is ignored.</source>
          <target state="translated">Обеспечивает обратную совместимость.Тип ток игнорируется.</target>
        </trans-unit>
        <trans-unit id="a7bc9561c0283aa709c213cb1d134bcbaf33279f" translate="yes" xml:space="preserve">
          <source>Provided that you also specify &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt;&lt;code&gt;ScopedTypeVariables&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;#scoped-type-variables&quot;&gt;Lexically scoped type variables&lt;/a&gt;), the &lt;code&gt;forall b&lt;/code&gt; scopes over the definition of &lt;code&gt;foo&lt;/code&gt;, and in particular over the type signature for &lt;code&gt;xs&lt;/code&gt;.</source>
          <target state="translated">При условии, что вы также указываете &lt;a href=&quot;#extension-ScopedTypeVariables&quot;&gt; &lt;code&gt;ScopedTypeVariables&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;#scoped-type-variables&quot;&gt;переменные типа с лексической областью видимости&lt;/a&gt; ), &lt;code&gt;forall b&lt;/code&gt; охватывает определение &lt;code&gt;foo&lt;/code&gt; и, в частности, сигнатуру типа для &lt;code&gt;xs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6e2d81ac00c42bbf57971469cfadfc86bb02898" translate="yes" xml:space="preserve">
          <source>Provided you compiled this plugin and registered it in a package (with cabal for instance,) you can then use it by just specifying &lt;code&gt;-fplugin=DoNothing.Plugin&lt;/code&gt; on the command line, and during the compilation you should see GHC say &amp;lsquo;Hello&amp;rsquo;.</source>
          <target state="translated">Если вы скомпилировали этот плагин и зарегистрировали его в пакете (например, с помощью &lt;code&gt;-fplugin=DoNothing.Plugin&lt;/code&gt; ), вы можете использовать его, просто указав -fplugin = DoNothing.Plugin в командной строке, и во время компиляции вы должны увидеть, что GHC скажет &amp;laquo;Привет&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="91cdb89ab74dded95989b9c01dab7eab785914db" translate="yes" xml:space="preserve">
          <source>Provided you have compiled this plugin and registered it in a package, you can just use it by specifying &lt;code&gt;--frontend DoNothing.FrontendPlugin&lt;/code&gt; on the command line to GHC.</source>
          <target state="translated">Если вы скомпилировали этот плагин и зарегистрировали его в пакете, вы можете просто использовать его, указав &lt;code&gt;--frontend DoNothing.FrontendPlugin&lt;/code&gt; в командной строке GHC.</target>
        </trans-unit>
        <trans-unit id="97713c7be8cb2223c431b97c899d5f61eca5a254" translate="yes" xml:space="preserve">
          <source>Provides a collection of pretty printer combinators, a set of API's that provides a way to easily print out text in a consistent format of your choosing.</source>
          <target state="translated">Предоставляет коллекцию симпатичных комбинаторов принтеров,набор API,который позволяет легко распечатывать текст в едином формате по вашему выбору.</target>
        </trans-unit>
        <trans-unit id="a3569e2937eb1626a3038f9ca0b0bd6a7c4988dd" translate="yes" xml:space="preserve">
          <source>Provides one possible concrete representation for &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt;. For a version with &lt;code&gt;&lt;a href=&quot;data-version#v:versionBranch&quot;&gt;versionBranch&lt;/a&gt;&lt;/code&gt;&lt;code&gt;= [1,2,3]&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt;&lt;code&gt;= [&quot;tag1&quot;,&quot;tag2&quot;]&lt;/code&gt;, the output will be &lt;code&gt;1.2.3-tag1-tag2&lt;/code&gt;.</source>
          <target state="translated">Предоставляет одно возможное конкретное представление для &lt;code&gt;&lt;a href=&quot;data-version#t:Version&quot;&gt;Version&lt;/a&gt;&lt;/code&gt; . Для версии с &lt;code&gt;&lt;a href=&quot;data-version#v:versionBranch&quot;&gt;versionBranch&lt;/a&gt;&lt;/code&gt; &lt;code&gt;= [1,2,3]&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;data-version#v:versionTags&quot;&gt;versionTags&lt;/a&gt;&lt;/code&gt; &lt;code&gt;= [&quot;tag1&quot;,&quot;tag2&quot;]&lt;/code&gt; вывод будет &lt;code&gt;1.2.3-tag1-tag2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f537eae177b03bcfe703fb9eae32845fd317076" translate="yes" xml:space="preserve">
          <source>Provides the standard warnings plus</source>
          <target state="translated">Предоставляет стандартные предупреждения плюс</target>
        </trans-unit>
        <trans-unit id="0bd63287653bab9cbabb2d0d820a7d6b107dd1f0" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;-pgmi /path/to/iserv-proxy&lt;/code&gt;, &lt;code&gt;-pgmo ⟨option⟩&lt;/code&gt; and &lt;code&gt;-pgmo ⟨port⟩&lt;/code&gt; in addition to &lt;a href=&quot;#ghc-flag--fexternal-interpreter&quot;&gt;&lt;code&gt;-fexternal-interpreter&lt;/code&gt;&lt;/a&gt; will then make ghc go through the proxy instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e9e18be4d476228c864a05eb9ce60a2f180d98" translate="yes" xml:space="preserve">
          <source>Providing input</source>
          <target state="translated">Предоставление входных данных</target>
        </trans-unit>
        <trans-unit id="e29e8eedc748840bd27ace9f3607818fa75df015" translate="yes" xml:space="preserve">
          <source>Provisional</source>
          <target state="translated">Provisional</target>
        </trans-unit>
        <trans-unit id="d1cea344353e26ba6f1565ed661d94f610ce9e4f" translate="yes" xml:space="preserve">
          <source>Proxy</source>
          <target state="translated">Proxy</target>
        </trans-unit>
        <trans-unit id="2da1b11ef737c06a07580fdc89d729829ccbcd4b" translate="yes" xml:space="preserve">
          <source>Proxy can even hold types of higher kinds,</source>
          <target state="translated">Прокси может содержать даже более высокие типы,</target>
        </trans-unit>
        <trans-unit id="010320dc44b945f1389c719222db299dcff6de12" translate="yes" xml:space="preserve">
          <source>Proxy#</source>
          <target state="translated">Proxy#</target>
        </trans-unit>
        <trans-unit id="1ba5ef48b66f74ab8376d1e1f5b429151921ef64" translate="yes" xml:space="preserve">
          <source>Ps: Punctuation, Open</source>
          <target state="translated">Пс:Пунктуация,Открыть</target>
        </trans-unit>
        <trans-unit id="aee53da1d005df2b730db32fdeb589f79f6dcef6" translate="yes" xml:space="preserve">
          <source>Pseudoterminal operations</source>
          <target state="translated">псевдотерминальные операции</target>
        </trans-unit>
        <trans-unit id="90c83157f6f4a1cfac097841eb12dca4943e9e58" translate="yes" xml:space="preserve">
          <source>Ptr</source>
          <target state="translated">Ptr</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">Общественный API</target>
        </trans-unit>
        <trans-unit id="7f59b284c28fa26b669e4ff42d0673d94b35db1d" translate="yes" xml:space="preserve">
          <source>Public representation of constructors</source>
          <target state="translated">Общественное представительство строителей</target>
        </trans-unit>
        <trans-unit id="b6c8b265dd1cdc6347d98f2b84d442a954eb9c33" translate="yes" xml:space="preserve">
          <source>Public representation of datatypes</source>
          <target state="translated">Публичное представление типов данных</target>
        </trans-unit>
        <trans-unit id="3a2bbb378012d44dd1acf3c097c561543bbe6aa6" translate="yes" xml:space="preserve">
          <source>Punctuation or reserved symbol, e.g. &lt;code&gt;(&lt;/code&gt;, &lt;code&gt;::&lt;/code&gt;</source>
          <target state="translated">Знаки препинания или зарезервированный символ, например &lt;code&gt;(&lt;/code&gt; , &lt;code&gt;::&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dfef0dd557351856f42ce75d6f0e19c19a4c0ef" translate="yes" xml:space="preserve">
          <source>Puns and other patterns can be mixed in the same record:</source>
          <target state="translated">Каламбуры и другие шаблоны могут быть смешаны в одной записи:</target>
        </trans-unit>
        <trans-unit id="126aca4de6cf9f540218b2f37eb0a5ee3e8ee157" translate="yes" xml:space="preserve">
          <source>Puns are not necessarily supported:</source>
          <target state="translated">Каламбуры не обязательно поддерживаются:</target>
        </trans-unit>
        <trans-unit id="f9f539fc385ba1011d4c087559f3df068ae7d719" translate="yes" xml:space="preserve">
          <source>Puns can be used wherever record patterns occur (e.g. in &lt;code&gt;let&lt;/code&gt; bindings or at the top-level).</source>
          <target state="translated">Пуны можно использовать везде, где встречаются шаблоны записи (например, в привязках &lt;code&gt;let&lt;/code&gt; или на верхнем уровне).</target>
        </trans-unit>
        <trans-unit id="6b611b1b174cd71f53f8fab72d5be8b17f1336a4" translate="yes" xml:space="preserve">
          <source>Purity</source>
          <target state="translated">Purity</target>
        </trans-unit>
        <trans-unit id="9a02d38905933d4f8be56965d4333c36eabb3bcc" translate="yes" xml:space="preserve">
          <source>Push a call-site onto the stack.</source>
          <target state="translated">Нажмите на колл-сайт в стеке.</target>
        </trans-unit>
        <trans-unit id="7fd768e4fe7bd6bb51e495079370749b0bfeabc8" translate="yes" xml:space="preserve">
          <source>Put</source>
          <target state="translated">Put</target>
        </trans-unit>
        <trans-unit id="31cfeabab1a1a50a1974ce9355eca97ad84b2ad5" translate="yes" xml:space="preserve">
          <source>Put a data item back onto a channel, where it will be the next item read.</source>
          <target state="translated">Положите элемент данных обратно в канал,где он будет следующим прочитанным элементом.</target>
        </trans-unit>
        <trans-unit id="f2671cfd2bf701d44ddbd6aed0423a20b49e9b05" translate="yes" xml:space="preserve">
          <source>Put a data item back onto a channel, where it will be the next item read. Blocks if the queue is full.</source>
          <target state="translated">Положите элемент данных обратно в канал,где он будет следующим прочитанным элементом.Блокирует,если очередь заполнена.</target>
        </trans-unit>
        <trans-unit id="0488379e7024b984e65d02dffd4763eb7cd460ed" translate="yes" xml:space="preserve">
          <source>Put a value into a &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; will &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Поместите значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#t:TMVar&quot;&gt;TMVar&lt;/a&gt;&lt;/code&gt; в настоящее время полный, &lt;code&gt;&lt;a href=&quot;control-concurrent-stm-tmvar#v:putTMVar&quot;&gt;putTMVar&lt;/a&gt;&lt;/code&gt; будет &lt;code&gt;&lt;a href=&quot;control-monad-stm#v:retry&quot;&gt;retry&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd93b0ceaf0ed39d5195f954abbfc8d76b2a79d6" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">Поместите значение в &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;../base-4.13.0.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; в настоящее время заполнен, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; будет ждать, пока он не станет пустым.</target>
        </trans-unit>
        <trans-unit id="42a8fc7267ae8c1ccb347fa39255e3fe7bc6ca11" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;../base-4.14.1.0/control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;system-directory-internal-prelude#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94d281c3905d94e39b3d263b1cf9b6250c58bee" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">Поместите значение в &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; в настоящее время заполнен, &lt;code&gt;&lt;a href=&quot;control-concurrent-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; будет ждать, пока он не станет пустым.</target>
        </trans-unit>
        <trans-unit id="33e8d3ac33132ba689a91323286fa0c8d9cd0c54" translate="yes" xml:space="preserve">
          <source>Put a value into an &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt;. If the &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; is currently full, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; will wait until it becomes empty.</source>
          <target state="translated">Поместите значение в &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;&lt;a href=&quot;ghc-mvar#t:MVar&quot;&gt;MVar&lt;/a&gt;&lt;/code&gt; в настоящее время заполнен, &lt;code&gt;&lt;a href=&quot;ghc-mvar#v:putMVar&quot;&gt;putMVar&lt;/a&gt;&lt;/code&gt; будет ждать, пока он не станет пустым.</target>
        </trans-unit>
        <trans-unit id="73b3278fe6bb373e8f3ee5addd3728dbee9dc19b" translate="yes" xml:space="preserve">
          <source>Put merely lifts Builder into a Writer monad, applied to ().</source>
          <target state="translated">Положите просто лифт Builder в монаду Writer,применяется к ().</target>
        </trans-unit>
        <trans-unit id="798e33a0a2f8665389e39345a5dfc2a745e465a9" translate="yes" xml:space="preserve">
          <source>Put something inside an HTML element.</source>
          <target state="translated">Положите что-нибудь внутри HTML-элемента.</target>
        </trans-unit>
        <trans-unit id="40d8d868890674e2158985b5244b5e97bbdc32ef" translate="yes" xml:space="preserve">
          <source>Put to run</source>
          <target state="translated">Запускай</target>
        </trans-unit>
        <trans-unit id="b438a3bf094fbf042e7f48cbd844a202bc700f5d" translate="yes" xml:space="preserve">
          <source>Put two pieces of error message next to each other.</source>
          <target state="translated">Положите два куска сообщения об ошибке рядом друг с другом.</target>
        </trans-unit>
        <trans-unit id="353d5eefcc26e9ede7b76010beb4c768d6085770" translate="yes" xml:space="preserve">
          <source>PutM</source>
          <target state="translated">PutM</target>
        </trans-unit>
        <trans-unit id="f84ae14fa11d241b306d7b6dacccea9c11140d12" translate="yes" xml:space="preserve">
          <source>Putting a strictness annotation (&lt;code&gt;!&lt;/code&gt;) on a constructor field helps in two ways: it adds strictness to the program, which gives the strictness analyser more to work with, and it might help to reduce space leaks.</source>
          <target state="translated">Помещение аннотации строгости ( &lt;code&gt;!&lt;/code&gt; ) В поле конструктора помогает двумя способами: оно добавляет строгости программе, что дает анализатору строгости больше возможностей для работы, и может помочь уменьшить утечку места.</target>
        </trans-unit>
        <trans-unit id="4d65a7ee4d88fd2fe1e2a7a6c25c43f4bace4b92" translate="yes" xml:space="preserve">
          <source>Putting info tables directly next to entry code is a useful performance optimisation that is not available on all platforms. This field tells you whether the program has been compiled with this optimisation. (Usually yes, except on unusual platforms.)</source>
          <target state="translated">Помещение информационных таблиц непосредственно рядом с входным кодом является полезной оптимизацией производительности,которая доступна не на всех платформах.В этом поле указывается,была ли программа скомпилирована с этой оптимизацией.(Обычно да,за исключением необычных платформ).</target>
        </trans-unit>
        <trans-unit id="fc4647bde0eb248bbe66e4e9d89dc56ee1bf2032" translate="yes" xml:space="preserve">
          <source>Putting inter-dependencies of the form &lt;code&gt;Foo.o : Bar.hi&lt;/code&gt; into your &lt;code&gt;Makefile&lt;/code&gt; by hand is rather error-prone. Don&amp;rsquo;t worry, GHC has support for automatically generating the required dependencies. Add the following to your &lt;code&gt;Makefile&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Foo.o : Bar.hi&lt;/code&gt; формы Foo.o: Bar.hi в ваш &lt;code&gt;Makefile&lt;/code&gt; вручную довольно чревато ошибками. Не волнуйтесь, GHC поддерживает автоматическое создание необходимых зависимостей. Добавьте в свой &lt;code&gt;Makefile&lt;/code&gt; следующее :</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="b1bf446133c15f6e0cfb6c252c0760ca97cc2113" translate="yes" xml:space="preserve">
          <source>QException</source>
          <target state="translated">QException</target>
        </trans-unit>
        <trans-unit id="5c3e1075bb5ff5f786a2750d2110c97ca76bdb40" translate="yes" xml:space="preserve">
          <source>QList</source>
          <target state="translated">QList</target>
        </trans-unit>
        <trans-unit id="5063349bbf20d077106dd5a047c6294b3d6faa07" translate="yes" xml:space="preserve">
          <source>QResult</source>
          <target state="translated">QResult</target>
        </trans-unit>
        <trans-unit id="1b9473a808c71ad809b076a8f41d58515d649af1" translate="yes" xml:space="preserve">
          <source>QSem</source>
          <target state="translated">QSem</target>
        </trans-unit>
        <trans-unit id="83666298382103e09a359d83713e8de361f9fe1b" translate="yes" xml:space="preserve">
          <source>QSemN</source>
          <target state="translated">QSemN</target>
        </trans-unit>
        <trans-unit id="5979a484b578a0eaaccbbaa187d6db5be875c706" translate="yes" xml:space="preserve">
          <source>QState</source>
          <target state="translated">QState</target>
        </trans-unit>
        <trans-unit id="a8e2772564815455b855b5402a2b67edaeece741" translate="yes" xml:space="preserve">
          <source>QualBinBox</source>
          <target state="translated">QualBinBox</target>
        </trans-unit>
        <trans-unit id="6e364224ed95e99cc9c0e9bc962a7e7788451d4f" translate="yes" xml:space="preserve">
          <source>Qualified names are not handled properly</source>
          <target state="translated">Квалифицированные имена не обрабатываются должным образом</target>
        </trans-unit>
        <trans-unit id="c78f05422fd2f2885a1a8363abe3991f2f66b957" translate="yes" xml:space="preserve">
          <source>Quantified</source>
          <target state="translated">Quantified</target>
        </trans-unit>
        <trans-unit id="98d966bd103c45a24b72c82c92fc882386ac5126" translate="yes" xml:space="preserve">
          <source>Quantified constraints can potentially lead to overlapping local axioms. Consider for instance the following example:</source>
          <target state="translated">Количественные ограничения могут привести к наложению локальных аксиом.Рассмотрим,например,следующий пример:</target>
        </trans-unit>
        <trans-unit id="e07c2ce6f83e492712da4fb9336c9693d0145f90" translate="yes" xml:space="preserve">
          <source>Quantified constraints enable this property to be made explicit in the &lt;code&gt;Trans&lt;/code&gt; class declaration:</source>
          <target state="translated">Количественные ограничения позволяют сделать это свойство явным в объявлении класса &lt;code&gt;Trans&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="313f18ee6bfe32a684a3623fe9ec8d0285e1564b" translate="yes" xml:space="preserve">
          <source>QuantifiedConstraints</source>
          <target state="translated">QuantifiedConstraints</target>
        </trans-unit>
        <trans-unit id="38dd040ad4dd1961b970e417a446a2cd00ec0112" translate="yes" xml:space="preserve">
          <source>Quantity semaphores in which each thread may wait for an arbitrary &quot;amount&quot;.</source>
          <target state="translated">Количество семафоров,в которых каждый поток может ждать произвольного &quot;количества&quot;.</target>
        </trans-unit>
        <trans-unit id="ef37116e9e2794514df2a30b389623e522929de7" translate="yes" xml:space="preserve">
          <source>Quasi</source>
          <target state="translated">Quasi</target>
        </trans-unit>
        <trans-unit id="78b42522f21485e6763e2011e69bf1fb6467d5cd" translate="yes" xml:space="preserve">
          <source>Quasi-quotation allows patterns and expressions to be written using programmer-defined concrete syntax; the motivation behind the extension and several examples are documented in &amp;ldquo;&lt;a href=&quot;http://www.cs.tufts.edu/comp/150FP/archive/geoff-mainland/quasiquoting.pdf&quot;&gt;Why It&amp;rsquo;s Nice to be Quoted: Quasiquoting for Haskell&lt;/a&gt;&amp;rdquo; (Proc Haskell Workshop 2007). The example below shows how to write a quasiquoter for a simple expression language.</source>
          <target state="translated">Квази-цитирование позволяет записывать шаблоны и выражения с использованием конкретного синтаксиса, определенного программистом; мотивация, стоящая за расширением, и несколько примеров задокументированы в &amp;laquo; &lt;a href=&quot;http://www.cs.tufts.edu/comp/150FP/archive/geoff-mainland/quasiquoting.pdf&quot;&gt;Почему приятно быть процитированным: квазицитатирование для Haskell&lt;/a&gt; &amp;raquo; (Proc Haskell Workshop 2007). В приведенном ниже примере показано, как написать квазицитатор для простого языка выражений.</target>
        </trans-unit>
        <trans-unit id="aeae4316f159225a12a41875ed5cda162b6be2c0" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for declarations, invoked by top-level quotes</source>
          <target state="translated">Квазиквадрат для деклараций,вызываемых котировками верхнего уровня</target>
        </trans-unit>
        <trans-unit id="7c4eccaa645a118a37207f34bc767fc3a301a004" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for expressions, invoked by quotes like &lt;code&gt;lhs = $[q|...]&lt;/code&gt;</source>
          <target state="translated">Квазиквотер для выражений, вызываемый кавычками, например &lt;code&gt;lhs = $[q|...]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cdfa152b402869c6f7ce110c7260465306996f0c" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for patterns, invoked by quotes like &lt;code&gt;f $[q|...] = rhs&lt;/code&gt;</source>
          <target state="translated">Квазиквотер для шаблонов, вызываемый кавычками, например &lt;code&gt;f $[q|...] = rhs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2f1c81121c7c915fc9fe161e70133e5fd79fdc0f" translate="yes" xml:space="preserve">
          <source>Quasi-quoter for types, invoked by quotes like &lt;code&gt;f :: $[q|...]&lt;/code&gt;</source>
          <target state="translated">Квазиквотер для типов, вызываемый кавычками, например &lt;code&gt;f :: $[q|...]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="654d8edecc919612fe0b6f4ce5f5f07b94d042af" translate="yes" xml:space="preserve">
          <source>QuasiQuoter</source>
          <target state="translated">QuasiQuoter</target>
        </trans-unit>
        <trans-unit id="36eafab474a9ed345234950640432af8a19c94cf" translate="yes" xml:space="preserve">
          <source>QuasiQuotes</source>
          <target state="translated">QuasiQuotes</target>
        </trans-unit>
        <trans-unit id="d4a0b7daa1a07138f6cd3dd945862252eb44e73e" translate="yes" xml:space="preserve">
          <source>Quasiquoters must obey the same stage restrictions as Template Haskell, e.g., in the example, &lt;code&gt;expr&lt;/code&gt; cannot be defined in &lt;code&gt;Main.hs&lt;/code&gt; where it is used, but must be imported.</source>
          <target state="translated">Квазиквотеры должны подчиняться тем же ограничениям стадии, что и Template Haskell, например, в этом примере &lt;code&gt;expr&lt;/code&gt; не может быть определено в &lt;code&gt;Main.hs&lt;/code&gt; , где оно используется, но должно быть импортировано.</target>
        </trans-unit>
        <trans-unit id="2644b7d942f174a4bbf0bc8675c1badf9352393e" translate="yes" xml:space="preserve">
          <source>Queries</source>
          <target state="translated">Queries</target>
        </trans-unit>
        <trans-unit id="702b96b7b97e9c49a9631b74e04d25040710ddfc" translate="yes" xml:space="preserve">
          <source>Queries the current state of the stopped child flag.</source>
          <target state="translated">Задает вопрос о текущем состоянии остановленного детского флага.</target>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="translated">Query</target>
        </trans-unit>
        <trans-unit id="6fafa7df09744bce9b17c8089123f793f4571cfc" translate="yes" xml:space="preserve">
          <source>Query the status of a breakpoint (True &lt;a href=&quot;=&quot;&gt;=&lt;/a&gt; enabled)</source>
          <target state="translated">Запросить статус точки останова (True &lt;a href=&quot;=&quot;&gt;=&lt;/a&gt; включено)</target>
        </trans-unit>
        <trans-unit id="3caf953d995669733dac7e8ef33e2624ffc487eb" translate="yes" xml:space="preserve">
          <source>Query whether the current runtime system supports the eventlog (e.g. whether the current executable was linked with &lt;a href=&quot;phases#ghc-flag--eventlog&quot;&gt;&lt;code&gt;-eventlog&lt;/code&gt;&lt;/a&gt;) and, if it is supported, whether it is currently logging.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6aec17edf79a10c680aff1016df32c0c809598" translate="yes" xml:space="preserve">
          <source>Querying file status</source>
          <target state="translated">Статус запрашиваемого файла</target>
        </trans-unit>
        <trans-unit id="e1568d2084e4729e281ef2ad2782d446f7281246" translate="yes" xml:space="preserve">
          <source>Querying sizes</source>
          <target state="translated">Размеры по запросу</target>
        </trans-unit>
        <trans-unit id="ec159e90e6803b6d4ebd5f32c771f6ca6e6e74a9" translate="yes" xml:space="preserve">
          <source>Querying the compiler</source>
          <target state="translated">Запрос компилятора</target>
        </trans-unit>
        <trans-unit id="bfaa4612023c5d1f8ccc9c95a3472712517c8262" translate="yes" xml:space="preserve">
          <source>Querying the user environment</source>
          <target state="translated">Запрос пользовательского окружения</target>
        </trans-unit>
        <trans-unit id="18607581d63ad915cd6c4d5d3071d782b7938ac8" translate="yes" xml:space="preserve">
          <source>Question: How does GHC find the filename which contains module ⟨M⟩? Answer: it looks for the file &lt;code&gt;M.hs&lt;/code&gt;, or &lt;code&gt;M.lhs&lt;/code&gt;. This means that for most modules, the module name must match the filename. If it doesn&amp;rsquo;t, GHCi won&amp;rsquo;t be able to find it.</source>
          <target state="translated">Вопрос: Как GHC находит имя файла, содержащего модуль ⟨M⟩? Ответ: ищет файл &lt;code&gt;M.hs&lt;/code&gt; или &lt;code&gt;M.lhs&lt;/code&gt; . Это означает, что для большинства модулей имя модуля должно совпадать с именем файла. Если этого не произойдет, GHCi не сможет его найти.</target>
        </trans-unit>
        <trans-unit id="d325fcd919384f395c02751e03d2cd0288b98cca" translate="yes" xml:space="preserve">
          <source>Queue</source>
          <target state="translated">Queue</target>
        </trans-unit>
        <trans-unit id="2e03f68003ba792e4b7e5bce0358c5b5efca5a74" translate="yes" xml:space="preserve">
          <source>QueueSelector</source>
          <target state="translated">QueueSelector</target>
        </trans-unit>
        <trans-unit id="1a2285d8881f226e13430515a9dd2b9fb6294200" translate="yes" xml:space="preserve">
          <source>Quit</source>
          <target state="translated">Quit</target>
        </trans-unit>
        <trans-unit id="29a754ad4dc6f5eb686a9faa7923466078bf2956" translate="yes" xml:space="preserve">
          <source>Quits GHCi. You can also quit by typing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b074b09be2d5847dd9450d55b6f0788a6c3fd1b4" translate="yes" xml:space="preserve">
          <source>Quits GHCi. You can also quit by typing &lt;code&gt;Control-D&lt;/code&gt; at the prompt.</source>
          <target state="translated">Выходит из GHCi. Вы также можете выйти, набрав &lt;code&gt;Control-D&lt;/code&gt; в командной строке.</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="fe89b57ca741803edb678214b1b10b8b1688ab79" translate="yes" xml:space="preserve">
          <source>R. N. Horspool: Practical Fast Searching in Strings. Software - Practice and Experience 10, 501-506 (1980)</source>
          <target state="translated">R.Н.Хорспол:Практический быстрый поиск по строкам.Программное обеспечение-практика и опыт 10,501-506 (1980).</target>
        </trans-unit>
        <trans-unit id="3bb8e3918a18086493d1beb88c7c61f2cff4fd6b" translate="yes" xml:space="preserve">
          <source>R. S. Boyer, J. S. Moore: A Fast String Searching Algorithm. Communications of the ACM, 20, 10, 762-772 (1977)</source>
          <target state="translated">R.С.Бойер,Дж.С.Мур:Алгоритм поиска по быстрой струне.Связь АСМ,20,10,762-772 (1977).</target>
        </trans-unit>
        <trans-unit id="bcd7a25b27aa3490f6e6a5d52d0d7b57716a72c0" translate="yes" xml:space="preserve">
          <source>R.Paterson@city.ac.uk</source>
          <target state="translated">R.Paterson@city.ac.uk</target>
        </trans-unit>
        <trans-unit id="75248a6efd7ebc0c173be4c755f47f7ae4c4606a" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS ARROW</source>
          <target state="translated">СТРЕЛКА ВПРАВО</target>
        </trans-unit>
        <trans-unit id="81f0ce7bb79894a5b7e3f20200c1491ae057a5b6" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS ARROW-TAIL</source>
          <target state="translated">ПРАВЫЙ ХВОСТ</target>
        </trans-unit>
        <trans-unit id="d43d55d9c58cbcc25eb6620ba1f32e960004091e" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS DOUBLE ARROW</source>
          <target state="translated">ДВОЙНАЯ СТРЕЛКА ВПРАВО</target>
        </trans-unit>
        <trans-unit id="6140cdacfd2f40b8e8a4d0ef59628fa58ba4df25" translate="yes" xml:space="preserve">
          <source>RIGHTWARDS DOUBLE ARROW-TAIL</source>
          <target state="translated">ПРАВАЯ ДВОЙНАЯ СТРЕЛКА-ХВОСТ</target>
        </trans-unit>
        <trans-unit id="54561fd891ee8d3bc3718283afdce5d24a9fb9d4" translate="yes" xml:space="preserve">
          <source>RS</source>
          <target state="translated">RS</target>
        </trans-unit>
        <trans-unit id="dff6d1ab4ff535388a3b81748b7e0a759af5b5d4" translate="yes" xml:space="preserve">
          <source>RTLDFlags</source>
          <target state="translated">RTLDFlags</target>
        </trans-unit>
        <trans-unit id="222fd2e5cef2e782850e7e961d3e145177fe55f7" translate="yes" xml:space="preserve">
          <source>RTLD_GLOBAL</source>
          <target state="translated">RTLD_GLOBAL</target>
        </trans-unit>
        <trans-unit id="596d9fed4ec6cd3691a13e454f91e5510fb9bd15" translate="yes" xml:space="preserve">
          <source>RTLD_LAZY</source>
          <target state="translated">RTLD_LAZY</target>
        </trans-unit>
        <trans-unit id="58a6bc97fe1b40864bb1226977041584bdd3246e" translate="yes" xml:space="preserve">
          <source>RTLD_LOCAL</source>
          <target state="translated">RTLD_LOCAL</target>
        </trans-unit>
        <trans-unit id="240dca00b5fccdf8eb9307a95d72a4564efd9a1f" translate="yes" xml:space="preserve">
          <source>RTLD_NOW</source>
          <target state="translated">RTLD_NOW</target>
        </trans-unit>
        <trans-unit id="21a3039e72db0527495ff86a20122cd08a41b0ee" translate="yes" xml:space="preserve">
          <source>RTS options taken from the &lt;a href=&quot;#envvar-GHCRTS&quot; id=&quot;index-6&quot;&gt;&lt;code&gt;GHCRTS&lt;/code&gt;&lt;/a&gt; environment variable can be overridden by options given on the command line.</source>
          <target state="translated">&lt;a href=&quot;#envvar-GHCRTS&quot; id=&quot;index-6&quot;&gt; &lt;code&gt;GHCRTS&lt;/code&gt; &lt;/a&gt; RTS, взятые из переменной среды GHCRTS, можно переопределить параметрами, указанными в командной строке.</target>
        </trans-unit>
        <trans-unit id="12038ce4fed76d468c97d3909bb5fa9da8cf36c1" translate="yes" xml:space="preserve">
          <source>RTSFlags</source>
          <target state="translated">RTSFlags</target>
        </trans-unit>
        <trans-unit id="398bdf865c486238761fe9e04c7014d7a95a8878" translate="yes" xml:space="preserve">
          <source>RTSStats</source>
          <target state="translated">RTSStats</target>
        </trans-unit>
        <trans-unit id="173ca40143a1db6b32512b7856cb8403ae881b82" translate="yes" xml:space="preserve">
          <source>RWS</source>
          <target state="translated">RWS</target>
        </trans-unit>
        <trans-unit id="5ed8266ce8d63f9438aafb5e6787b68efadeccab" translate="yes" xml:space="preserve">
          <source>RWS computation to execute</source>
          <target state="translated">RWS вычисление для выполнения</target>
        </trans-unit>
        <trans-unit id="f1d8da392a9a97e4cb7c42ad2ccf6346e818ebc4" translate="yes" xml:space="preserve">
          <source>RWST</source>
          <target state="translated">RWST</target>
        </trans-unit>
        <trans-unit id="a618f78473842a7cf11f602fffdd35c35387d1a3" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Вызов &lt;code&gt;&lt;a href=&quot;ghc-io-exception#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; в монаде &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce7820312231ab0cd45ab4d865cc302018e42e8e" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Вызов &lt;code&gt;&lt;a href=&quot;prelude#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; в монаде &lt;code&gt;&lt;a href=&quot;prelude#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="280c8919cbe0b13ce2a3de884857678191c0df1d" translate="yes" xml:space="preserve">
          <source>Raise an &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; monad.</source>
          <target state="translated">Вызов &lt;code&gt;&lt;a href=&quot;system-io-error#t:IOError&quot;&gt;IOError&lt;/a&gt;&lt;/code&gt; в монаде &lt;code&gt;&lt;a href=&quot;system-io#t:IO&quot;&gt;IO&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="933e208c50a30fc4995b36847c474fa5bd3740b5" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; with a printf-specific prefix on the message string.</source>
          <target state="translated">Вызывает &lt;code&gt;&lt;a href=&quot;prelude#v:error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; с префиксом, специфичным для printf, в строке сообщения.</target>
        </trans-unit>
        <trans-unit id="00474a4582227a35d8a8ed6e6d74aed95e4bfcf8" translate="yes" xml:space="preserve">
          <source>Raises an error if given an empty list.</source>
          <target state="translated">Повышает ошибку,если дать пустой список.</target>
        </trans-unit>
        <trans-unit id="a21adad3deb90b02b29a429bf48fc817d912767f" translate="yes" xml:space="preserve">
          <source>Raising Errors</source>
          <target state="translated">Повышающие ошибки</target>
        </trans-unit>
        <trans-unit id="80befa94c0796e21097bf414e22daac761f1ac3a" translate="yes" xml:space="preserve">
          <source>Ralf Hinze and Ross Paterson, &lt;a href=&quot;http://staff.city.ac.uk/~ross/papers/FingerTree.html&quot;&gt;&quot;Finger trees: a simple general-purpose data structure&quot;&lt;/a&gt;, &lt;em&gt;Journal of Functional Programming&lt;/em&gt; 16:2 (2006) pp 197-217.</source>
          <target state="translated">Ральф Хинце и Росс Патерсон, &lt;a href=&quot;http://staff.city.ac.uk/~ross/papers/FingerTree.html&quot;&gt;&amp;laquo;Деревья пальцев: простая структура данных общего назначения&amp;raquo;&lt;/a&gt; , &lt;em&gt;Журнал функционального программирования,&lt;/em&gt; 16: 2 (2006), стр. 197-217.</target>
        </trans-unit>
        <trans-unit id="a16c5bbe4bf996740f257aa1e81bd57e4c52c8dd" translate="yes" xml:space="preserve">
          <source>Range</source>
          <target state="translated">Range</target>
        </trans-unit>
        <trans-unit id="646152cf5c1a35e596164cfc5a137c57f6a78564" translate="yes" xml:space="preserve">
          <source>RangeQ</source>
          <target state="translated">RangeQ</target>
        </trans-unit>
        <trans-unit id="5f87625ea4411af78505260124c7f6d2a45e06b0" translate="yes" xml:space="preserve">
          <source>RankNTypes</source>
          <target state="translated">RankNTypes</target>
        </trans-unit>
        <trans-unit id="693f44324e1039b8be2752916af17049a0ad5dd9" translate="yes" xml:space="preserve">
          <source>Rather than generating code to call &lt;code&gt;f&lt;/code&gt; according to the platform&amp;rsquo;s ABI, we instead call &lt;code&gt;f&lt;/code&gt; using the C API defined in the header &lt;code&gt;header.h&lt;/code&gt;. Thus &lt;code&gt;f&lt;/code&gt; can be called even if it may be defined as a CPP &lt;code&gt;#define&lt;/code&gt; rather than a proper function.</source>
          <target state="translated">Вместо того, чтобы генерировать код для вызова &lt;code&gt;f&lt;/code&gt; в соответствии с ABI платформы, мы вместо этого вызываем &lt;code&gt;f&lt;/code&gt; , используя API C, определенный в заголовке &lt;code&gt;header.h&lt;/code&gt; . Таким образом, &lt;code&gt;f&lt;/code&gt; может быть вызван, даже если он может быть определен как CPP &lt;code&gt;#define&lt;/code&gt; , а не как правильная функция.</target>
        </trans-unit>
        <trans-unit id="09e0a509143e1597ce0e4b1a260f1ca99da1f7c7" translate="yes" xml:space="preserve">
          <source>Rather than using &lt;code&gt;(== &lt;a href=&quot;system-filepath-posix#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt;, use this. Test if something is a path separator.</source>
          <target state="translated">Вместо использования &lt;code&gt;(== &lt;a href=&quot;system-filepath-posix#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt; используйте это. Проверьте, является ли что-то разделителем пути.</target>
        </trans-unit>
        <trans-unit id="ed194d2af1d0512a43b9882e2bf53085c69471c2" translate="yes" xml:space="preserve">
          <source>Rather than using &lt;code&gt;(== &lt;a href=&quot;system-filepath-windows#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt;, use this. Test if something is a path separator.</source>
          <target state="translated">Вместо использования &lt;code&gt;(== &lt;a href=&quot;system-filepath-windows#v:pathSeparator&quot;&gt;pathSeparator&lt;/a&gt;)&lt;/code&gt; используйте это. Проверьте, является ли что-то разделителем пути.</target>
        </trans-unit>
        <trans-unit id="794f65e9d2064ab6bfab0fa351dcff2763db23d3" translate="yes" xml:space="preserve">
          <source>Ratio</source>
          <target state="translated">Ratio</target>
        </trans-unit>
        <trans-unit id="06abf42877351e1e2ad74c308971eb560fc0aab7" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">Отношение длины лески к длине ленты. Лента относится к символам в строке &lt;em&gt;без&lt;/em&gt; отступа. Так &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 100, с &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; от &lt;code&gt;2.0&lt;/code&gt; только позволит до 50 символов ленты , которые будут отображаться на линии, позволяя ему быть отступ до 50 символов.</target>
        </trans-unit>
        <trans-unit id="4fffe46763de726cdd41fc5ca5f40572f607297e" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">Отношение длины лески к длине ленты. Лента относится к символам в строке &lt;em&gt;без&lt;/em&gt; отступа. Так &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 100, с &lt;code&gt;&lt;a href=&quot;text-prettyprint-annotated-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; от &lt;code&gt;2.0&lt;/code&gt; только позволит до 50 символов ленты , которые будут отображаться на линии, позволяя ему быть отступ до 50 символов.</target>
        </trans-unit>
        <trans-unit id="ed1304ccb2873b49ac5ad2857447e7d4958a9afc" translate="yes" xml:space="preserve">
          <source>Ratio of line length to ribbon length. A ribbon refers to the characters on a line &lt;em&gt;excluding&lt;/em&gt; indentation. So a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; of 100, with a &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;2.0&lt;/code&gt; would only allow up to 50 characters of ribbon to be displayed on a line, while allowing it to be indented up to 50 characters.</source>
          <target state="translated">Отношение длины лески к длине ленты. Лента относится к символам в строке &lt;em&gt;без&lt;/em&gt; отступа. Так &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:lineLength&quot;&gt;lineLength&lt;/a&gt;&lt;/code&gt; 100, с &lt;code&gt;&lt;a href=&quot;text-prettyprint-hughespj#v:ribbonsPerLine&quot;&gt;ribbonsPerLine&lt;/a&gt;&lt;/code&gt; от &lt;code&gt;2.0&lt;/code&gt; только позволит до 50 символов ленты , которые будут отображаться на линии, позволяя ему быть отступ до 50 символов.</target>
        </trans-unit>
        <trans-unit id="4d9365e2d43f2f4d7432550032b047d13acc7dc0" translate="yes" xml:space="preserve">
          <source>RatioZeroDenominator</source>
          <target state="translated">RatioZeroDenominator</target>
        </trans-unit>
        <trans-unit id="28f8f8c0856fcd5b648ff5e28234ee17ac5b1a2e" translate="yes" xml:space="preserve">
          <source>Rational</source>
          <target state="translated">Rational</target>
        </trans-unit>
        <trans-unit id="405213edafc737f5ab6efbcc9727c7dbc43be834" translate="yes" xml:space="preserve">
          <source>Rational numbers, with numerator and denominator of some &lt;code&gt;&lt;a href=&quot;ghc-real#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">Рациональные числа с числителем и знаменателем некоторого &lt;code&gt;&lt;a href=&quot;ghc-real#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; типа.</target>
        </trans-unit>
        <trans-unit id="66898ef89145e3251520fcffa27276a730264b3d" translate="yes" xml:space="preserve">
          <source>Rational numbers, with numerator and denominator of some &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; type.</source>
          <target state="translated">Рациональные числа с числителем и знаменателем некоторого &lt;code&gt;&lt;a href=&quot;prelude#t:Integral&quot;&gt;Integral&lt;/a&gt;&lt;/code&gt; типа.</target>
        </trans-unit>
        <trans-unit id="998e2594b8623ea11ad1729045ff4b74f17b5bbb" translate="yes" xml:space="preserve">
          <source>Raw buffers</source>
          <target state="translated">Сырые буферы</target>
        </trans-unit>
        <trans-unit id="151c7faa3b6e8d13cea407d5faf552ccd90e93ef" translate="yes" xml:space="preserve">
          <source>Raw bytes embedded into the binary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fb73f383d3356e6e16bbb4088572623344a39b" translate="yes" xml:space="preserve">
          <source>Raw pointer of array version of &lt;code&gt;&lt;a href=&quot;system-win32-automation-input#v:sendInput&quot;&gt;sendInput&lt;/a&gt;&lt;/code&gt;. Use this function to support non-list sequence.</source>
          <target state="translated">Необработанный указатель версии &lt;code&gt;&lt;a href=&quot;system-win32-automation-input#v:sendInput&quot;&gt;sendInput&lt;/a&gt;&lt;/code&gt; в виде массива . Используйте эту функцию для поддержки последовательности, отличной от списка.</target>
        </trans-unit>
        <trans-unit id="cee6901eb5dcf876205fb0f25887ebe12845d3fb" translate="yes" xml:space="preserve">
          <source>Raw read/write operations on file descriptors</source>
          <target state="translated">Операции чтения/записи файловых дескрипторов в необработанном виде</target>
        </trans-unit>
        <trans-unit id="157fea958671982fd82ff04ec9ed8c09a6ef6b39" translate="yes" xml:space="preserve">
          <source>RawBuffer</source>
          <target state="translated">RawBuffer</target>
        </trans-unit>
        <trans-unit id="a8a5d4f060e1544d5944caadfd158d5a2d980db6" translate="yes" xml:space="preserve">
          <source>RawCharBuffer</source>
          <target state="translated">RawCharBuffer</target>
        </trans-unit>
        <trans-unit id="8da7c86459d153b460979db3219ab54db7fdba1e" translate="yes" xml:space="preserve">
          <source>RawDevice</source>
          <target state="translated">RawDevice</target>
        </trans-unit>
        <trans-unit id="0f11c5246f5cfda145cd94cc2026acc7a8f85d00" translate="yes" xml:space="preserve">
          <source>RawFilePath</source>
          <target state="translated">RawFilePath</target>
        </trans-unit>
        <trans-unit id="84f85043304c606b67a09190e7260a74e66b4111" translate="yes" xml:space="preserve">
          <source>RawIO</source>
          <target state="translated">RawIO</target>
        </trans-unit>
        <trans-unit id="e601d52c0dfeb733b64b16fa8cfb0f09d668768c" translate="yes" xml:space="preserve">
          <source>RawObject</source>
          <target state="translated">RawObject</target>
        </trans-unit>
        <trans-unit id="64cb694cae0bed8753db87912cef88672b156273" translate="yes" xml:space="preserve">
          <source>RcBcc</source>
          <target state="translated">RcBcc</target>
        </trans-unit>
        <trans-unit id="8c924ffc452540914b6a5f1c353b075e91bb1bc7" translate="yes" xml:space="preserve">
          <source>RcCc</source>
          <target state="translated">RcCc</target>
        </trans-unit>
        <trans-unit id="af90b8ce4325e3befb6865f737325cee4b2f3074" translate="yes" xml:space="preserve">
          <source>RcOriginal</source>
          <target state="translated">RcOriginal</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
