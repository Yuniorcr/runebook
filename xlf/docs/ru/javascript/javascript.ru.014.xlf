<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="ff782796e7914cb522d339da2ed9982858565d69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse()&lt;/code&gt; method takes a date string (such as &lt;code&gt;&quot;Dec 25, 1995&quot;&lt;/code&gt;) and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC. This function is useful for setting date values based on string values, for example in conjunction with the &lt;a href=&quot;settime&quot;&gt;&lt;code&gt;setTime()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Метод &lt;code&gt;parse()&lt;/code&gt; принимает строку даты (например, &lt;code&gt;&quot;Dec 25, 1995&quot;&lt;/code&gt; ) и возвращает количество миллисекунд с 1 января 1970 г., 00:00:00 UTC. Эта функция полезна для установки значений даты на основе строковых значений, например, в сочетании с &lt;a href=&quot;settime&quot;&gt; &lt;code&gt;setTime()&lt;/code&gt; &lt;/a&gt; и объектом &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aefa58dbac2b38e433d64f17d1a342609b458b98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parseInt&lt;/code&gt; function converts its first argument to a string, parses it, and returns an integer or &lt;code&gt;NaN&lt;/code&gt;. If not &lt;code&gt;NaN&lt;/code&gt;, the returned value will be the integer that is the first argument taken as a number in the specified &lt;var&gt;radix&lt;/var&gt; (base). For example, a &lt;var&gt;radix&lt;/var&gt; of 10 indicates to convert from a decimal number, 8 octal, 16 hexadecimal, and so on. For radices above &lt;code&gt;10&lt;/code&gt;, the letters of the alphabet indicate numerals greater than &lt;code&gt;9&lt;/code&gt;. For example, for hexadecimal numbers (base 16), &lt;code&gt;A&lt;/code&gt; through &lt;code&gt;F&lt;/code&gt; are used.</source>
          <target state="translated">Функция &lt;code&gt;parseInt&lt;/code&gt; преобразует свой первый аргумент в строку, анализирует ее и возвращает целое число или &lt;code&gt;NaN&lt;/code&gt; . Если не &lt;code&gt;NaN&lt;/code&gt; , возвращаемое значение будет целым числом, которое является первым аргументом, принятым как число в указанном &lt;var&gt;radix&lt;/var&gt; (основание). Например, &lt;var&gt;radix&lt;/var&gt; системы счисления 10 указывает на преобразование из десятичного числа, восьмеричного, шестнадцатеричного и т. Д. Для основ больше &lt;code&gt;10&lt;/code&gt; буквы алфавита обозначают цифры больше &lt;code&gt;9&lt;/code&gt; . Например, для шестнадцатеричных чисел (основание 16), через &lt;code&gt;F&lt;/code&gt; используются. &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f9b36a84f03f3882e20c9bfe3db9559a57264364" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parseInt&lt;/code&gt; function converts its first argument to a string, parses that string, then returns an integer or &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e0bb0ab90ea771feccdb11142c9389f76ef1c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading white space in string is ignored. If radix is undefined or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of 16 is assumed.</source>
          <target state="translated">Функция &lt;code&gt;parseInt&lt;/code&gt; создает целочисленное значение, определяемое интерпретацией содержимого строкового аргумента в соответствии с указанным основанием системы счисления. Начальный пробел в строке игнорируется. Если основание системы счисления не определено или равно &lt;code&gt;0&lt;/code&gt; , предполагается, что оно равно &lt;code&gt;10&lt;/code&gt; , за исключением случаев, когда число начинается с пар символов &lt;code&gt;0x&lt;/code&gt; или &lt;code&gt;0X&lt;/code&gt; , и в этом случае предполагается, что основание системы счисления равно 16.</target>
        </trans-unit>
        <trans-unit id="60cb23ca2d03e1e69ba7325b8e0ecb492b1f0a3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parseInt&lt;/code&gt; function produces an integer value dictated by interpretation of the contents of the string argument according to the specified radix. Leading whitespace in string is ignored. If radix is &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt;, it is assumed to be &lt;code&gt;10&lt;/code&gt; except when the number begins with the character pairs &lt;code&gt;0x&lt;/code&gt; or &lt;code&gt;0X&lt;/code&gt;, in which case a radix of &lt;code&gt;16&lt;/code&gt; is assumed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a829630c8f2bfefb550d3b50699858ebd9dcfe7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pop()&lt;/code&gt; method removes the &lt;strong&gt;last&lt;/strong&gt; element from an array and returns that element. This method changes the length of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60f04904ead449c08e1e81c8531e7adcc2b41fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pop&lt;/code&gt; method removes the last element from an array and returns that value to the caller.</source>
          <target state="translated">Метод &lt;code&gt;pop&lt;/code&gt; удаляет последний элемент из массива и возвращает это значение вызывающей стороне.</target>
        </trans-unit>
        <trans-unit id="1d0104d079fef471434a46d2e34ba6e1be833275" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preventExtensions()&lt;/code&gt; method must return a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab16e0fc0db89306a6784360841c26c4479a73b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preventExtensions&lt;/code&gt; method must return a boolean value.</source>
          <target state="translated">Метод &lt;code&gt;preventExtensions&lt;/code&gt; должен возвращать логическое значение.</target>
        </trans-unit>
        <trans-unit id="8f32a090ceccd68383b7ba5f870e5dd9561a6baf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;products&lt;/code&gt; proxy object evaluates the passed value and converts it to an array if needed. The object also supports an extra property called &lt;code&gt;latestBrowser&lt;/code&gt; both as a getter and a setter.</source>
          <target state="translated">&lt;code&gt;products&lt;/code&gt; прокси - объект оценивает переданное значение и преобразует его в массив , если это необходимо. Объект также поддерживает дополнительное свойство с именем &lt;code&gt;latestBrowser&lt;/code&gt; как для получения, так и для установки.</target>
        </trans-unit>
        <trans-unit id="34d55bbc82b47848857e3ac616ac13cf5700cad2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;push&lt;/code&gt; method appends values to an array.</source>
          <target state="translated">Метод &lt;code&gt;push&lt;/code&gt; добавляет значения в массив.</target>
        </trans-unit>
        <trans-unit id="f2b1ac6d78b22069c75e95012819b84e262269f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;race&lt;/code&gt; function returns a &lt;code&gt;Promise&lt;/code&gt; that is settled the same way (and takes the same value) as the first promise that settles amongst the promises of the iterable passed as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633d24f997230b8d766489544feb01d87ea952bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;race&lt;/code&gt; function returns a &lt;code&gt;Promise&lt;/code&gt; that is settled the same way (and takes the same value) as the first promise that settles amongst the promises of the iterable passed as argument.</source>
          <target state="translated">Функция &lt;code&gt;race&lt;/code&gt; возвращает &lt;code&gt;Promise&lt;/code&gt; , которое устанавливается таким же образом (и принимает то же значение), что и первое обещание, которое устанавливается среди обещаний итерации, переданной в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="9394adc5bf6b564bdf7a1d54360b869364854ec9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reduce()&lt;/code&gt; method executes the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; once for each assigned value present in the array, taking four arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33aa038fc6863abbea6e118da1e8c10abf78154f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reduce&lt;/code&gt; method executes the &lt;code&gt;callback&lt;/code&gt; function once for each element present in the typed array, excluding holes in the typed array, receiving four arguments: the initial value (or value from the previous &lt;code&gt;callback&lt;/code&gt; call), the value of the current element, the current index, and the typed array over which iteration is occurring.</source>
          <target state="translated">Метод &lt;code&gt;reduce&lt;/code&gt; выполняет функцию &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента, присутствующего в типизированном массиве, исключая дыры в типизированном массиве, получая четыре аргумента: начальное значение (или значение из предыдущего &lt;code&gt;callback&lt;/code&gt; вызова), значение текущего элемента, текущий index и типизированный массив, по которому выполняется итерация.</target>
        </trans-unit>
        <trans-unit id="20ffacb4e44ab32601d9f4fb5d99c50d57cecf13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reduceRight&lt;/code&gt; method executes the callback function once for each element present in the typed array, excluding holes in the typed array, receiving four arguments: the initial value (or value from the previous callback call), the value of the current element, the current index, and the typed array over which iteration is occurring.</source>
          <target state="translated">Метод &lt;code&gt;reduceRight&lt;/code&gt; выполняет функцию обратного вызова один раз для каждого элемента, присутствующего в типизированном массиве, исключая дыры в типизированном массиве, получая четыре аргумента: начальное значение (или значение из предыдущего вызова обратного вызова), значение текущего элемента, текущий index и типизированный массив, по которому выполняется итерация.</target>
        </trans-unit>
        <trans-unit id="cce112d0bfc2ec45db566d73f44aa45323dae8bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;register()&lt;/code&gt; method registers an object with a &lt;a href=&quot;../finalizationregistry&quot;&gt;&lt;code&gt;FinalizationRegistry&lt;/code&gt;&lt;/a&gt; instance so that if the object is garbage-collected, the registry's callback may get called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9e1929ca6391ece612b3add43641e3689412f4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;repeat()&lt;/code&gt; method constructs and returns a new string which contains the specified number of copies of the string on which it was called, concatenated together.</source>
          <target state="translated">Метод &lt;code&gt;repeat()&lt;/code&gt; создает и возвращает новую строку, которая содержит указанное количество копий строки, для которой он был вызван, объединенных вместе.</target>
        </trans-unit>
        <trans-unit id="30b629a773a8dd7d41ea9e8b169140d5bf21911d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replace()&lt;/code&gt; method returns a new string with some or all matches of a &lt;code&gt;pattern&lt;/code&gt; replaced by a &lt;code&gt;replacement&lt;/code&gt;. The &lt;code&gt;pattern&lt;/code&gt; can be a string or a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;replacement&lt;/code&gt; can be a string or a function to be called for each match. If &lt;code&gt;pattern&lt;/code&gt; is a string, only the first occurrence will be replaced.</source>
          <target state="translated">Метод &lt;code&gt;replace()&lt;/code&gt; возвращает новую строку, в которой некоторые или все совпадения с &lt;code&gt;pattern&lt;/code&gt; заменены на &lt;code&gt;replacement&lt;/code&gt; . &lt;code&gt;pattern&lt;/code&gt; может быть строкой или &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; , а &lt;code&gt;replacement&lt;/code&gt; может быть строка или функция , которая будет вызываться для каждого матча. Если &lt;code&gt;pattern&lt;/code&gt; является строкой, будет заменено только первое вхождение.</target>
        </trans-unit>
        <trans-unit id="0a935ec2180c558615b2d3c4e3ec536bcd6ce4a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceAll()&lt;/code&gt; method returns a new string with all matches of a &lt;code&gt;pattern&lt;/code&gt; replaced by a &lt;code&gt;replacement&lt;/code&gt;. The &lt;code&gt;pattern&lt;/code&gt; can be a string or a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt;, and the &lt;code&gt;replacement&lt;/code&gt; can be a string or a function to be called for each match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341f412d5f7d5aab08aaa95acf74d7f837961b69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replacer&lt;/code&gt; parameter</source>
          <target state="translated">&lt;code&gt;replacer&lt;/code&gt; параметр</target>
        </trans-unit>
        <trans-unit id="0d734f45eeb768c565804623ec5ec86381be24ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replacer&lt;/code&gt; parameter can be either a function or an array.</source>
          <target state="translated">Параметр &lt;code&gt;replacer&lt;/code&gt; может быть функцией или массивом.</target>
        </trans-unit>
        <trans-unit id="c2450601fa3ac0c8bfd14c1c790d86d5d1c874f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;return()&lt;/code&gt; method returns the given value and finishes the generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78aa7130e5e55b9662aeb44be141261920014bfa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;return&lt;/code&gt; ends function execution and specifies a value to be returned to the function caller.</source>
          <target state="translated">&lt;code&gt;return&lt;/code&gt; выполнение функции завершается и определяет значение , которое должно быть возвращено к функции вызывающей.</target>
        </trans-unit>
        <trans-unit id="1825c33bdb119cbc94fc38f165d172979bab1bb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;return&lt;/code&gt; statement is affected by &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion (ASI)&lt;/a&gt;. No line terminator is allowed between the &lt;code&gt;return&lt;/code&gt; keyword and the expression.</source>
          <target state="translated">На оператор &lt;code&gt;return&lt;/code&gt; действует &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;автоматическая вставка точки с запятой (ASI)&lt;/a&gt; . Между ключевым словом &lt;code&gt;return&lt;/code&gt; и выражением не допускается использование терминатора строки .</target>
        </trans-unit>
        <trans-unit id="f6344bb8ce490f4c3788216ff92bd2a2e3e9b67d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse()&lt;/code&gt; method reverses an array &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;in place&lt;/a&gt;&lt;/em&gt;. The first array element becomes the last, and the last array element becomes the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94001dce7d6c0277531fc208a30177bf512bc983" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reverse&lt;/code&gt; method transposes the elements of the calling array object in place, mutating the array, and returning a reference to the array.</source>
          <target state="translated">&lt;code&gt;reverse&lt;/code&gt; метод переставляет элементы вызывающего объекта массива на месте, мутирует массив и возвращает ссылку на массив.</target>
        </trans-unit>
        <trans-unit id="73fda5f3ce4df46d6bd3cfa77cfdb40d794c10ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;search()&lt;/code&gt; method executes a search for a match between a regular expression and this &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Метод &lt;code&gt;search()&lt;/code&gt; выполняет поиск совпадения между регулярным выражением и этим объектом &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b2bf1a7a2982dc51e4d59127039f64d0452ca792" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set()&lt;/code&gt; method adds a new element with a specified key and value to a &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb988f78d734346b8df401a4ebf8c89daaf89b7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set()&lt;/code&gt; method adds or updates an element with a specified key and a value to a &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f45b86cf77bd6ed871bf4987ba788f5d300042d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set()&lt;/code&gt; method should return a boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b89c8ef1b28ba3db99fa2d5a508436f955931e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set()&lt;/code&gt; method stores multiple values in the typed array, reading input values from a specified array.</source>
          <target state="translated">Метод &lt;code&gt;set()&lt;/code&gt; сохраняет несколько значений в типизированном массиве, считывая входные значения из указанного массива.</target>
        </trans-unit>
        <trans-unit id="afa3d342e4bc64667929dfba353c2c5c385f97f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; method should return a boolean value. Return &lt;code&gt;true&lt;/code&gt; to indicate that assignment succeeded. If the &lt;code&gt;set&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, and the assignment happened in strict-mode code, a &lt;code&gt;TypeError&lt;/code&gt; will be thrown.</source>
          <target state="translated">Метод &lt;code&gt;set&lt;/code&gt; должен возвращать логическое значение. Верните &lt;code&gt;true&lt;/code&gt; , чтобы указать, что назначение выполнено успешно. Если метод &lt;code&gt;set&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; и присвоение произошло в коде строгого режима, будет &lt;code&gt;TypeError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01518a20f1590edf2677afb2701eab97cf0432cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set&lt;/code&gt; syntax binds an object property to a function to be called when there is an attempt to set that property.</source>
          <target state="translated">&lt;code&gt;set&lt;/code&gt; синтаксис связывает объект собственность на функцию , которая будет вызвана , когда есть попытка установить это свойство.</target>
        </trans-unit>
        <trans-unit id="454bde7d56614d3e69b61005c20f51ab755d9203" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setBigInt64()&lt;/code&gt; method stores a signed 64-bit integer (long long) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88500af63aebb81c1209731ec086f97956468ce3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setBigUint64()&lt;/code&gt; method stores an unsigned 64-bit integer (unsigned long long) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45224e723f1721f9d3c13524ff9d20d789929030" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setDate()&lt;/code&gt; method sets the day of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object relative to the beginning of the currently set month.</source>
          <target state="translated">Метод &lt;code&gt;setDate()&lt;/code&gt; устанавливает день объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; относительно начала текущего установленного месяца.</target>
        </trans-unit>
        <trans-unit id="0d9d1bae85d41120a53a7340c0bdd89b7a51db51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setFloat32()&lt;/code&gt; method stores a signed 32-bit float (float) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setFloat32()&lt;/code&gt; сохраняет 32-битное значение с плавающей запятой (float) со знаком в заданном байтовом смещении от начала &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45a036c27a787e007cc4eccd674e04938f8975b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setFloat64()&lt;/code&gt; method stores a signed 64-bit float (double) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setFloat64()&lt;/code&gt; сохраняет 64-битное значение с плавающей запятой (double) со знаком в заданном байтовом смещении от начала &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75853f0bea9dcc76f1f09901ffb1b2a24eb42803" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setFullYear()&lt;/code&gt; method sets the full year for a specified date according to local time. Returns new timestamp.</source>
          <target state="translated">Метод &lt;code&gt;setFullYear()&lt;/code&gt; устанавливает полный год для указанной даты по местному времени. Возвращает новую отметку времени.</target>
        </trans-unit>
        <trans-unit id="23428a9e37d33ce840e55033fafbd7c8676488da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setHours()&lt;/code&gt; method sets the hours for a specified date according to local time, and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented by the updated &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Метод &lt;code&gt;setHours()&lt;/code&gt; устанавливает часы для указанной даты по местному времени и возвращает количество миллисекунд с 00:00:00 UTC 1 января 1970 г. до времени, представленного обновленным экземпляром &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="73882f81fd5a0702c5c489eb2978efe759f4fd70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setInt16()&lt;/code&gt; method stores a signed 16-bit integer (short) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setInt16()&lt;/code&gt; сохраняет 16-разрядное целое (короткое) значение со знаком в заданном байтовом смещении от начала &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d77d742cec0a6991749751071a2eee256c6ef115" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setInt32()&lt;/code&gt; method stores a signed 32-bit integer (long) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setInt32()&lt;/code&gt; сохраняет 32-битное целое (длинное) значение со знаком в заданном байтовом смещении от начала &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49306e42c516b8e8fbb2eb954a0b4f9f94de178b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setInt8()&lt;/code&gt; method stores a signed 8-bit integer (byte) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setInt8()&lt;/code&gt; сохраняет 8-битовое целое (байтовое) значение со знаком в заданном байтовом смещении от начала &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6ce03c23c2628b4f043524d96a70c7ec69036c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setMilliseconds()&lt;/code&gt; method sets the milliseconds for a specified date according to local time.</source>
          <target state="translated">Метод &lt;code&gt;setMilliseconds()&lt;/code&gt; устанавливает миллисекунды указанной даты по местному времени.</target>
        </trans-unit>
        <trans-unit id="3af72fc29cdb4e1a5fde6585640fdae002c1fe46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setMinutes()&lt;/code&gt; method sets the minutes for a specified date according to local time.</source>
          <target state="translated">Метод &lt;code&gt;setMinutes()&lt;/code&gt; устанавливает минуты указанной даты по местному времени.</target>
        </trans-unit>
        <trans-unit id="403f0919425de2bcf88cd0a132b42f328c196b20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setMonth()&lt;/code&gt; method sets the month for a specified date according to the currently set year.</source>
          <target state="translated">Метод &lt;code&gt;setMonth()&lt;/code&gt; устанавливает месяц для указанной даты в соответствии с текущим установленным годом.</target>
        </trans-unit>
        <trans-unit id="a7019b7241d80776766a6e6b7abf0b2481f75568" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setPrototypeOf()&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;[[Prototype]]&lt;/code&gt; was successfully changed, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36506ea61e5bef89a285379403a21ba86c6d6375" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setPrototypeOf&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;[[Prototype]]&lt;/code&gt; was successfully changed, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setPrototypeOf&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; , если &lt;code&gt;[[Prototype]]&lt;/code&gt; был успешно изменен, в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a48af94ec3f2b112ce922a1a295738d4f6e7e17d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setSeconds()&lt;/code&gt; method sets the seconds for a specified date according to local time.</source>
          <target state="translated">Метод &lt;code&gt;setSeconds()&lt;/code&gt; устанавливает секунды указанной даты по местному времени.</target>
        </trans-unit>
        <trans-unit id="a096b9c2df07dc8063e8649cb0c5c1ab00cc6384" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setTime()&lt;/code&gt; method sets the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC.</source>
          <target state="translated">Метод &lt;code&gt;setTime()&lt;/code&gt; устанавливает для объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; время в миллисекундах с 1 января 1970 года, 00:00:00 UTC.</target>
        </trans-unit>
        <trans-unit id="de572d36f314857b2ce259d68a05e3bce5b61d39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUTCDate()&lt;/code&gt; method sets the day of the month for a specified date according to universal time.</source>
          <target state="translated">Метод &lt;code&gt;setUTCDate()&lt;/code&gt; устанавливает день месяца для указанной даты по всемирному координированному времени.</target>
        </trans-unit>
        <trans-unit id="7f38365ea2d59a1194bf5f4f42e70c72249a6323" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUTCFullYear()&lt;/code&gt; method sets the full year for a specified date according to universal time.</source>
          <target state="translated">Метод &lt;code&gt;setUTCFullYear()&lt;/code&gt; устанавливает полный год для указанной даты по всемирному координированному времени.</target>
        </trans-unit>
        <trans-unit id="a0d7e0df49c1d646e3a239a8081d192908f2580f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUTCHours()&lt;/code&gt; method sets the hour for a specified date according to universal time, and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented by the updated &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Метод &lt;code&gt;setUTCHours()&lt;/code&gt; устанавливает час для указанной даты по всемирному координированному времени и возвращает количество миллисекунд с 00:00:00 UTC 1 января 1970 г. до времени, представленного обновленным экземпляром &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7880b6e9871ab35907d380c2581378730b097670" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUTCMilliseconds()&lt;/code&gt; method sets the milliseconds for a specified date according to universal time.</source>
          <target state="translated">Метод &lt;code&gt;setUTCMilliseconds()&lt;/code&gt; устанавливает миллисекунды для указанной даты по всемирному координированному времени.</target>
        </trans-unit>
        <trans-unit id="3296b4db04455b2c6710477aa8a2735e0ac06e75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUTCMinutes()&lt;/code&gt; method sets the minutes for a specified date according to universal time.</source>
          <target state="translated">Метод &lt;code&gt;setUTCMinutes()&lt;/code&gt; устанавливает минуты указанной даты по всемирному координированному времени.</target>
        </trans-unit>
        <trans-unit id="cb9bc5f6461e116f0f810368ed4497cf904f8baa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUTCMonth()&lt;/code&gt; method sets the month for a specified date according to universal time.</source>
          <target state="translated">Метод &lt;code&gt;setUTCMonth()&lt;/code&gt; устанавливает месяц указанной даты по всемирному координированному времени.</target>
        </trans-unit>
        <trans-unit id="c1bd3a2f0adacb7676183d4f486b7a314e7ebc56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUTCSeconds()&lt;/code&gt; method sets the seconds for a specified date according to universal time.</source>
          <target state="translated">Метод &lt;code&gt;setUTCSeconds()&lt;/code&gt; устанавливает секунды указанной даты по всемирному координированному времени.</target>
        </trans-unit>
        <trans-unit id="6403066c197b602947ff39362877ae8674531421" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUint16()&lt;/code&gt; method stores an unsigned 16-bit integer (unsigned short) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setUint16()&lt;/code&gt; сохраняет 16-разрядное целое число без знака (короткое без знака) в заданном байтовом смещении от начала &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf0a945544e186d0b49c0f2b8a68511e4bd62e26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUint32()&lt;/code&gt; method stores an unsigned 32-bit integer (unsigned long) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setUint32()&lt;/code&gt; сохраняет 32-разрядное целое число без знака (беззнаковое длинное) в заданном байтовом смещении от начала &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c56402f6420e37b73178dc9c773cb8a7d5f73d33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setUint8()&lt;/code&gt; method stores an unsigned 8-bit integer (byte) value at the specified byte offset from the start of the &lt;a href=&quot;../dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;setUint8()&lt;/code&gt; сохраняет беззнаковое 8-битное целое (байтовое) значение в указанном байтовом смещении от начала &lt;a href=&quot;../dataview&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f2b9726fb54990042eae4de6ccc51b66a0f990b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setYear()&lt;/code&gt; method sets the year for a specified date according to local time. Because &lt;code&gt;setYear()&lt;/code&gt; does not set full years (&quot;year 2000 problem&quot;), it is no longer used and has been replaced by the &lt;a href=&quot;setfullyear&quot;&gt;&lt;code&gt;setFullYear()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f9ec0c3f813d1eedecab4ed7911277e6aabe77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shift&lt;/code&gt; method removes the element at the zeroeth index and shifts the values at consecutive indexes down, then returns the removed value. If the &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property is 0, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Метод &lt;code&gt;shift&lt;/code&gt; удаляет элемент в нулевом индексе и сдвигает значения в последовательных индексах вниз, а затем возвращает удаленное значение. Если свойство &lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; равно 0, возвращается &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="76a76e674e895d0e627776ee5c2bddd01fdbcb36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; accessor property returns the number of (unique) elements in a &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357254a53baf90efafd44d80dc5aa277999282a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; accessor property returns the number of elements in a &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba56819bf01868dc4d24b9357d94180b3fcb9e1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice()&lt;/code&gt; method copies up to, but not including, the byte indicated by the &lt;code&gt;end&lt;/code&gt; parameter. If either &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; is negative, it refers to an index from the end of the array, as opposed to from the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0cff95e4409ed92bc4573e6783a353a2a717a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice()&lt;/code&gt; method extracts a section of a string and returns it as a new string, without modifying the original string.</source>
          <target state="translated">Метод &lt;code&gt;slice()&lt;/code&gt; извлекает часть строки и возвращает ее как новую строку, не изменяя исходную строку.</target>
        </trans-unit>
        <trans-unit id="c04cfb2e51066e968e2dc4dabdc2113f452d2907" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice()&lt;/code&gt; method returns a new &lt;code&gt;ArrayBuffer&lt;/code&gt; whose contents are a copy of this &lt;code&gt;ArrayBuffer&lt;/code&gt;'s bytes from &lt;code&gt;begin&lt;/code&gt;, inclusive, up to &lt;code&gt;end&lt;/code&gt;, exclusive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad02044f8b702f0b12223cf5530456882f6cb629" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice()&lt;/code&gt; method returns a shallow copy of a portion of an array into a new array object selected from &lt;code&gt;start&lt;/code&gt; to &lt;code&gt;end&lt;/code&gt; (&lt;code&gt;end&lt;/code&gt; not included) where &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; represent the index of items in that array. The original array will not be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b4aadf41d545ddf2d902b3c09b49283d21b559" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice&lt;/code&gt; method copies up to, but not including, the byte indicated by the &lt;code&gt;end&lt;/code&gt; parameter. If either &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; is negative, it refers to an index from the end of the array, as opposed to from the beginning.</source>
          <target state="translated">Метод &lt;code&gt;slice&lt;/code&gt; копирует до байта, указанного параметром &lt;code&gt;end&lt;/code&gt; , но не включая его . Если значение &lt;code&gt;begin&lt;/code&gt; или &lt;code&gt;end&lt;/code&gt; отрицательно, это относится к индексу с конца массива, а не с начала.</target>
        </trans-unit>
        <trans-unit id="bc6796e69b48f93eec07acfe185d9d15372affbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slice&lt;/code&gt; method does not alter. It returns a shallow copy of elements from the original typed array.</source>
          <target state="translated">Метод &lt;code&gt;slice&lt;/code&gt; не меняется. Он возвращает неглубокую копию элементов из исходного типизированного массива.</target>
        </trans-unit>
        <trans-unit id="aaf2807ffd405cc84ac738196cd3f881d6868234" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;small()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt;&lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in a small font.</source>
          <target state="translated">Метод &lt;code&gt;small()&lt;/code&gt; создает HTML-элемент &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt; &lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt; ,&lt;/a&gt; который заставляет строку отображаться мелким шрифтом.</target>
        </trans-unit>
        <trans-unit id="f3d607529079c326abbb93cf2f3476bdd7de89b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;small()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt;&lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed in a small font.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829a872efd080f7954a56045279afd8ebbac1c5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;small()&lt;/code&gt; method embeds a string in a &lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;small&amp;gt;str&amp;lt;/small&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;small()&lt;/code&gt; вставляет строку в &lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt; : &lt;code&gt;&quot;&amp;lt;small&amp;gt;str&amp;lt;/small&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="955535d457bf6af994e19c69dfc2127a394cd444" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;some()&lt;/code&gt; method executes the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function once for each element present in the array until it finds the one where &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; returns a &lt;em&gt;truthy&lt;/em&gt; value (a value that becomes true when converted to a Boolean). If such an element is found, &lt;code&gt;some()&lt;/code&gt; immediately returns &lt;code&gt;true&lt;/code&gt;. Otherwise, &lt;code&gt;some()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is invoked only for indexes of the array with assigned values. It is not invoked for indexes which have been deleted or which have never been assigned values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba586ba7c5b96086fcc85ecb5494d182e5f4cfe0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;some()&lt;/code&gt; method tests whether at least one element in the array passes the test implemented by the provided function. It returns a Boolean value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6f400142a2c25332b87f4b99a76332641e98ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;some&lt;/code&gt; method executes the &lt;code&gt;callback&lt;/code&gt; function once for each element present in the typed array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a true value. If such an element is found, &lt;code&gt;some&lt;/code&gt; immediately returns &lt;code&gt;true&lt;/code&gt;. Otherwise, &lt;code&gt;some&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;some&lt;/code&gt; выполняет функцию &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента, присутствующего в типизированном массиве, пока не найдет тот, в котором &lt;code&gt;callback&lt;/code&gt; возвращает истинное значение. Если такой элемент найден, &lt;code&gt;some&lt;/code&gt; сразу возвращает &lt;code&gt;true&lt;/code&gt; . В противном случае &lt;code&gt;some&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9100d3ba6e1e86b77eb0b07a7f274f3e7f393fb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sort&lt;/code&gt; method can be conveniently used with &lt;a href=&quot;../../operators/function&quot;&gt;function expressions&lt;/a&gt;:</source>
          <target state="translated">Метод &lt;code&gt;sort&lt;/code&gt; удобно использовать с &lt;a href=&quot;../../operators/function&quot;&gt;функциональными выражениями&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="499e2b3f7324baaf767d11bc108fa7744d9289e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; property for empty regular expressions now returns &quot;(?:)&quot; instead of an empty string. A definition for the escaping behavior has been added.</source>
          <target state="translated">Свойство &lt;code&gt;source&lt;/code&gt; для пустых регулярных выражений теперь возвращает &amp;laquo;(? :)&amp;raquo; вместо пустой строки. Было добавлено определение поведения экранирования.</target>
        </trans-unit>
        <trans-unit id="21afb7889039c2ca365865732cb59eee7cee8f9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; property returns a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; containing the source text of the regexp object, and it doesn't contain the two forward slashes on both sides and any flags.</source>
          <target state="translated">Свойство &lt;code&gt;source&lt;/code&gt; возвращает &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; содержащую исходный текст объекта regexp, и не содержит двух косых черт с обеих сторон и каких-либо флагов.</target>
        </trans-unit>
        <trans-unit id="f081fd2fcaf00b6f4603d7f666a650d220572341" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;space&lt;/code&gt; argument</source>
          <target state="translated">&lt;code&gt;space&lt;/code&gt; аргумент</target>
        </trans-unit>
        <trans-unit id="8ccba351da674181850d390944a0dc58c3521ad3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;space&lt;/code&gt; argument may be used to control spacing in the final string.</source>
          <target state="translated">&lt;code&gt;space&lt;/code&gt; аргумент может быть использован для контроля расстояния в конечной строке.</target>
        </trans-unit>
        <trans-unit id="6a233153b50fe557fdd0379de0cbec9b71c9dcc9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; accessor property returns the default constructor for &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="translated">Свойство аксессора &lt;code&gt;species&lt;/code&gt; возвращает конструктор по умолчанию для &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;типизированных&lt;/a&gt; объектов массива . Конструкторы подкласса могут переопределить его, чтобы изменить назначение конструктора.</target>
        </trans-unit>
        <trans-unit id="e02e38b977a693d66907cf930a789a75aa95971c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; accessor property returns the default constructor for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d25b4299acbc398c6b62130c59f60822dfe859" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; accessor property returns the default constructor for &lt;code&gt;Array&lt;/code&gt; objects. Subclass constructors may override it to change the constructor assignment.</source>
          <target state="translated">Свойство аксессора &lt;code&gt;species&lt;/code&gt; возвращает конструктор по умолчанию для объектов &lt;code&gt;Array&lt;/code&gt; . Конструкторы подкласса могут переопределить его, чтобы изменить назначение конструктора.</target>
        </trans-unit>
        <trans-unit id="601b2478148eb6bd5202d1429c4e933267b52c58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; accessor property returns the default constructor for &lt;code&gt;RegExp&lt;/code&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="translated">Свойство аксессора &lt;code&gt;species&lt;/code&gt; возвращает конструктор по умолчанию для объектов &lt;code&gt;RegExp&lt;/code&gt; . Конструкторы подкласса могут переопределить его, чтобы изменить назначение конструктора.</target>
        </trans-unit>
        <trans-unit id="38d6c962d3598e321c29e628759ea6eaaca0bb2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; accessor property returns the default constructor for &lt;code&gt;Set&lt;/code&gt; objects. Subclass constructors may override it to change the constructor assignment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b363d88f771a62702012ce4aba514c3171275947" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; property returns the default constructor function, which is one of the typed array constructors for a given &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt; object:</source>
          <target state="translated">Свойство &lt;code&gt;species&lt;/code&gt; возвращает функцию конструктора по умолчанию, которая является одним из конструкторов типизированного массива для данного объекта &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;типизированного массива&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="37f8b7996427fc9b02d9c79dc009b70fb150e053" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; property returns the default constructor function, which is one of the typed array constructors for a given &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray#TypedArray_objects&quot;&gt;typed array&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e49f373d7e20e5dc5e2d161d8979912f797d82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; property returns the default constructor function, which is the &lt;code&gt;Array&lt;/code&gt; constructor for &lt;code&gt;Array&lt;/code&gt; objects:</source>
          <target state="translated">&lt;code&gt;species&lt;/code&gt; свойство возвращает функцию конструктора по умолчанию, который является &lt;code&gt;Array&lt;/code&gt; конструктором для &lt;code&gt;Array&lt;/code&gt; объектов:</target>
        </trans-unit>
        <trans-unit id="9eae346a6740d7f6886b64231691dc06c17d04e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; property returns the default constructor function, which is the &lt;code&gt;RegExp&lt;/code&gt; constructor for &lt;code&gt;RegExp&lt;/code&gt; objects:</source>
          <target state="translated">&lt;code&gt;species&lt;/code&gt; свойство возвращает функцию конструктора по умолчанию, который является &lt;code&gt;RegExp&lt;/code&gt; конструктора &lt;code&gt;RegExp&lt;/code&gt; объектов:</target>
        </trans-unit>
        <trans-unit id="0d4ac21fdbe3031bd48c81f052b32939e58926fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;species&lt;/code&gt; property returns the default constructor function, which is the &lt;code&gt;Set&lt;/code&gt; constructor for &lt;code&gt;Set&lt;/code&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db31fc87b43f5f60c0d2eb6a1b89573b2dbd8aba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;splice()&lt;/code&gt; method changes the contents of an array by removing existing elements and/or adding new elements.</source>
          <target state="translated">Метод &lt;code&gt;splice()&lt;/code&gt; изменяет содержимое массива, удаляя существующие элементы и / или добавляя новые элементы.</target>
        </trans-unit>
        <trans-unit id="ecc816530f048750e0f874602fa9bfdcb0d71e71" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;splice()&lt;/code&gt; method changes the contents of an array by removing or replacing existing elements and/or adding new elements &lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;in place&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81f9b74284ef31857915e880541aa5340e2f2cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split()&lt;/code&gt; method divides a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; into an ordered list of substrings, puts these substrings into an array, and returns the array. The division is done by searching for a pattern; where the pattern is provided as the first parameter in the method's call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95c7a0c76d1545fdde91a9fb98f9e8135ae9cff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;split()&lt;/code&gt; method splits a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object into an array of strings by separating the string into substrings, using a specified separator string to determine where to make each split.</source>
          <target state="translated">Метод &lt;code&gt;split()&lt;/code&gt; разбивает объект &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; на массив строк, разделяя строку на подстроки, используя указанную строку-разделитель, чтобы определить, где сделать каждое разделение.</target>
        </trans-unit>
        <trans-unit id="e29d8c4d782d1b004f826d77b14b3418f2814509" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startsWith()&lt;/code&gt; method determines whether a string begins with the characters of a specified string, returning &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; as appropriate.</source>
          <target state="translated">Метод &lt;code&gt;startsWith()&lt;/code&gt; определяет, начинается ли строка с символов указанной строки, возвращая при необходимости &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77d3afa15edcb61a8dd51d9fae468c30feda07d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sticky&lt;/code&gt; property reflects whether or not the search is sticky (searches in strings only from the index indicated by the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property of this regular expression). &lt;code&gt;sticky&lt;/code&gt; is a read-only property of an individual regular expression object.</source>
          <target state="translated">Свойство &lt;code&gt;sticky&lt;/code&gt; отражает, является ли поиск липким (поиск в строках только по индексу, указанному свойством &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt; этого регулярного выражения). &lt;code&gt;sticky&lt;/code&gt; - это свойство отдельного объекта регулярного выражения, доступное только для чтения.</target>
        </trans-unit>
        <trans-unit id="99043c5a32d0365d88f7489c6a8f1df22ee9d725" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strike()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt;&lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed as struck-out text.</source>
          <target state="translated">Метод &lt;code&gt;strike()&lt;/code&gt; создает HTML-элемент &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt; &lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt; ,&lt;/a&gt; который заставляет строку отображаться как зачеркнутый текст.</target>
        </trans-unit>
        <trans-unit id="ae8e82561ee8b1fa69eb67b9d8ed61f89a56a31c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strike()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/strike&quot;&gt;&lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed as struck-out text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a05bd2a1780dc31b42319ce054ece0665f1e16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strike()&lt;/code&gt; method embeds a string in a &lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;strike&amp;gt;str&amp;lt;/strike&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;strike()&lt;/code&gt; вставляет строку в &lt;code&gt;&amp;lt;strike&amp;gt;&lt;/code&gt; : &lt;code&gt;&quot;&amp;lt;strike&amp;gt;str&amp;lt;/strike&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="507fbf2cabe8cc4c38162953645bf7c1f619ac17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sub()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt;&lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed as subscript.</source>
          <target state="translated">Метод &lt;code&gt;sub()&lt;/code&gt; создает HTML-элемент &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt; &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt; ,&lt;/a&gt; который заставляет строку отображаться как нижний индекс.</target>
        </trans-unit>
        <trans-unit id="89b7b5dcab22ed96b026681d7c5421385c63342b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sub()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt;&lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed as subscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bdb3a13b34e25938fe41425b72524f0bf1cc3be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sub()&lt;/code&gt; method embeds a string in a &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;sub&amp;gt;str&amp;lt;/sub&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;sub()&lt;/code&gt; вставляет строку в &lt;code&gt;&amp;lt;sub&amp;gt;&lt;/code&gt; : &lt;code&gt;&quot;&amp;lt;sub&amp;gt;str&amp;lt;/sub&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9993ed926361be11052212435757aafd0d039ba5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subarray()&lt;/code&gt; method returns a new &lt;em&gt;TypedArray&lt;/em&gt; on the same &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; store and with the same element types as for this &lt;em&gt;TypedArray&lt;/em&gt; object. The &lt;code&gt;begin&lt;/code&gt; offset is &lt;strong&gt;inclusive&lt;/strong&gt; and the &lt;code&gt;end&lt;/code&gt; offset is &lt;strong&gt;exclusive&lt;/strong&gt;. &lt;em&gt;TypedArray&lt;/em&gt; is one of the &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;typed array types&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;subarray()&lt;/code&gt; возвращает новый &lt;em&gt;TypedArray&lt;/em&gt; в том же хранилище &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; и с теми же типами элементов, что и для этого объекта &lt;em&gt;TypedArray&lt;/em&gt; . &lt;code&gt;begin&lt;/code&gt; смещение &lt;strong&gt;включительно&lt;/strong&gt; и &lt;code&gt;end&lt;/code&gt; смещения &lt;strong&gt;эксклюзив&lt;/strong&gt; . &lt;em&gt;TypedArray&lt;/em&gt; - один из &lt;a href=&quot;../typedarray#TypedArray_objects&quot;&gt;типов типизированных массивов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2aa58fac1e632511279bc461e0096abef9f7ba06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;substr()&lt;/code&gt; method returns a portion of the string, starting at the specified index and extending for a given number of characters afterward.</source>
          <target state="translated">Метод &lt;code&gt;substr()&lt;/code&gt; возвращает часть строки, начиная с указанного индекса и затем расширяясь на заданное количество символов.</target>
        </trans-unit>
        <trans-unit id="2e1f3b796431f6d006e85b17733e34604969d641" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;substr()&lt;/code&gt; method returns a portion of the string, starting at the specified index and extending for a given number of characters afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231b94e6ee5bd8ba492d59349684dea405daa1f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;substring()&lt;/code&gt; and &lt;a href=&quot;slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; methods are almost identical, but there are a couple of subtle differences between the two, especially in the way negative arguments are dealt with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be167c8175a7d6f8833d2941a5e2fdcd944be2d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;substring()&lt;/code&gt; method returns the part of the &lt;code&gt;string&lt;/code&gt; between the start and end indexes, or to the end of the string.</source>
          <target state="translated">Метод &lt;code&gt;substring()&lt;/code&gt; возвращает часть &lt;code&gt;string&lt;/code&gt; между начальным и конечным индексами или до конца строки.</target>
        </trans-unit>
        <trans-unit id="dc87b27973ae80c886e75f60cb087e9863d38b9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;substring()&lt;/code&gt; method swaps its two arguments if &lt;code&gt;&lt;var&gt;indexStart&lt;/var&gt;&lt;/code&gt; is greater than &lt;code&gt;&lt;var&gt;indexEnd&lt;/var&gt;&lt;/code&gt;, meaning that a string is still returned. The &lt;a href=&quot;slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; method returns an empty string if this is the case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003c13ccdfd8b1a57c113ea1d6bc0e52ea29e631" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sup()&lt;/code&gt; method creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt;&lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed as superscript.</source>
          <target state="translated">Метод &lt;code&gt;sup()&lt;/code&gt; создает HTML-элемент &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt; &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; ,&lt;/a&gt; который заставляет строку отображаться как верхний индекс.</target>
        </trans-unit>
        <trans-unit id="09612e003bcb1dfb282f7ce8641ae3631e8a33db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sup()&lt;/code&gt; method creates a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt;&lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt;&lt;/a&gt; HTML element that causes a string to be displayed as superscript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff29a71a32065c70b52973a18ab04a6c17f1dff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sup()&lt;/code&gt; method embeds a string in a &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; tag: &lt;code&gt;&quot;&amp;lt;sup&amp;gt;str&amp;lt;/sup&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;sup()&lt;/code&gt; вставляет строку в &lt;code&gt;&amp;lt;sup&amp;gt;&lt;/code&gt; : &lt;code&gt;&quot;&amp;lt;sup&amp;gt;str&amp;lt;/sup&amp;gt;&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e46078bb0ba472d9375caf8339dff1c52c38414" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;super.prop&lt;/code&gt; and &lt;code&gt;super[expr]&lt;/code&gt; expressions are valid in any &lt;a href=&quot;../functions/method_definitions&quot;&gt;method definition&lt;/a&gt; in both &lt;a href=&quot;../classes&quot;&gt;classes&lt;/a&gt; and &lt;a href=&quot;object_initializer&quot;&gt;object literals&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;super.prop&lt;/code&gt; и &lt;code&gt;super[expr]&lt;/code&gt; выражения справедливы в любом &lt;a href=&quot;../functions/method_definitions&quot;&gt;определении метода&lt;/a&gt; в обоих &lt;a href=&quot;../classes&quot;&gt;классах&lt;/a&gt; и &lt;a href=&quot;object_initializer&quot;&gt;литералов объектов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58c5b386594d5e64ef24ee818cae836b2122508b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;super&lt;/code&gt; keyword calls the parent constructor.</source>
          <target state="translated">&lt;code&gt;super&lt;/code&gt; ключевое слово вызывает родительский конструктор.</target>
        </trans-unit>
        <trans-unit id="cf23e7581408a2c543577b4eda277e4b6c0822db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switch&lt;/code&gt; evaluates an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators&quot;&gt;expression&lt;/a&gt;, matching the expression's value to a &lt;code&gt;case&lt;/code&gt; clause, and executes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;statements&lt;/a&gt; associated with that &lt;code&gt;case&lt;/code&gt;, as well as statements in &lt;code&gt;case&lt;/code&gt;s that follow the matching &lt;code&gt;case&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91de460ec7fcf2753b77f48df09d0c84f211e499" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switch&lt;/code&gt; evaluates an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators&quot;&gt;expression&lt;/a&gt;, matching the expression's value to a &lt;code&gt;case&lt;/code&gt; clause, and executes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;statements&lt;/a&gt; associated with that case, as well as statements in cases that follow the matching case.</source>
          <target state="translated">&lt;code&gt;switch&lt;/code&gt; вычисляет &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators&quot;&gt;выражение&lt;/a&gt; , соответствие значения выражения в &lt;code&gt;case&lt;/code&gt; пункт, и выполняет &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;операторы&lt;/a&gt; , связанные с этим случае, а также в случаях заявления , которые следуют за случаем соответствия.</target>
        </trans-unit>
        <trans-unit id="3e53ba41760666996f98eae5a199f411ab236a83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; must be a callable itself. That is, it must be a function object.</source>
          <target state="translated">&lt;code&gt;target&lt;/code&gt; должна быть вызываемой сам. То есть это должен быть функциональный объект.</target>
        </trans-unit>
        <trans-unit id="118b70346f478cde348ec89edbef454b86b02683" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test()&lt;/code&gt; method executes a search for a match between a regular expression and a specified string. Returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;test()&lt;/code&gt; выполняет поиск совпадения между регулярным выражением и указанной строкой. Возвращает &lt;code&gt;true&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a26026e74ab32dbe930f6fe9c0eb33b2bb573b08" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;then&lt;/code&gt; method returns a &lt;code&gt;Promise&lt;/code&gt; which allows for method chaining.</source>
          <target state="translated">Метод &lt;code&gt;then&lt;/code&gt; возвращает &lt;code&gt;Promise&lt;/code&gt; которое позволяет связывать методы.</target>
        </trans-unit>
        <trans-unit id="7ecd9aa64c6663f8c89098cec663393ac40393a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; argument for the call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229c678523e1ba1af6a886873fbfc24648164e45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; keyword could be used inside functions running in non&amp;ndash;strict mode, but &lt;code&gt;this&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt; in Modules and inside functions running in strict mode. You can also use &lt;code&gt;Function('return this')()&lt;/code&gt;, but environments that disable &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;, like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/CSP&quot;&gt;CSP&lt;/a&gt; in browsers, prevent use of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; in this way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e82a86dbb3410327d5092a53deea5d6ea2eb81d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;this&lt;/code&gt; keyword refers to a special property of an execution context.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; ключевое слово относится к особому свойству контекста исполнения.</target>
        </trans-unit>
        <trans-unit id="22b040cfa1202d97ecd452be80287e3ab6cd02cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;throw()&lt;/code&gt; method resumes the execution of a generator by throwing an error into it and returns an object with two properties &lt;code&gt;done&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fd0b0cc8d2f6cd4678dd2f83f96ee25c5edd2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;throw&lt;/code&gt; throws a user-defined exception. Execution of the current function will stop (the statements after &lt;code&gt;throw&lt;/code&gt; won't be executed), and control will be passed to the first &lt;a href=&quot;try...catch&quot;&gt;&lt;code&gt;catch&lt;/code&gt;&lt;/a&gt; block in the call stack. If no &lt;code&gt;catch&lt;/code&gt; block exists among caller functions, the program will terminate.</source>
          <target state="translated">&lt;code&gt;throw&lt;/code&gt; бросает определяемое пользователем исключение. Выполнение текущей функции будет остановлено (операторы после &lt;code&gt;throw&lt;/code&gt; не будут выполнены), и управление будет передано первому блоку &lt;a href=&quot;try...catch&quot;&gt; &lt;code&gt;catch&lt;/code&gt; &lt;/a&gt; в стеке вызовов. Если среди вызывающих функций нет блока &lt;code&gt;catch&lt;/code&gt; , программа завершится.</target>
        </trans-unit>
        <trans-unit id="412cad314e9e2ce3182ddcf5c41f4f9b131718f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toDateString()&lt;/code&gt; method is especially useful because compliant engines implementing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/ECMAScript&quot;&gt;ECMA-262&lt;/a&gt; may differ in the string obtained from &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects, as the format is implementation-dependent and simple string slicing approaches may not produce consistent results across multiple engines.</source>
          <target state="translated">Метод &lt;code&gt;toDateString()&lt;/code&gt; особенно полезен, потому что совместимые механизмы, реализующие &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/ECMAScript&quot;&gt;ECMA-262,&lt;/a&gt; могут отличаться строкой, полученной из &lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; для объектов &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; , поскольку формат зависит от реализации, и простые подходы к нарезке строк могут не давать согласованных результатов для нескольких механизмов.</target>
        </trans-unit>
        <trans-unit id="44ede00f83c7bf8f4fe69d17613c6cdb1ad406ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toDateString()&lt;/code&gt; method is especially useful because compliant engines implementing &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;ECMA-262&lt;/a&gt; may differ in the string obtained from &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects, as the format is implementation-dependent and simple string slicing approaches may not produce consistent results across multiple engines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf46e4c35d7773d504f688459cc7efc76e67949" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toDateString()&lt;/code&gt; method returns the date portion of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object in English in the following format separated by spaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdc60f0324fcd00ec12f6699e2bce8320cb7592" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toDateString()&lt;/code&gt; method returns the date portion of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object in human readable form in American English.</source>
          <target state="translated">Метод &lt;code&gt;toDateString()&lt;/code&gt; возвращает часть &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; объекта Date в удобочитаемой форме на американском английском.</target>
        </trans-unit>
        <trans-unit id="54830fd411c8e227812c3e5a945920da9a8226da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toExponential()&lt;/code&gt; method returns a string representing the &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object in exponential notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f989bfca9e5f06fffcc793cf31d7367de0dde7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toExponential()&lt;/code&gt; method returns a string representing the Number object in exponential notation.</source>
          <target state="translated">Метод &lt;code&gt;toExponential()&lt;/code&gt; возвращает строку, представляющую объект Number в экспоненциальной записи.</target>
        </trans-unit>
        <trans-unit id="53d8b1c4bd3dbc794cbda4ebd5abe95d88e21507" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toFixed()&lt;/code&gt; method formats a number using fixed-point notation.</source>
          <target state="translated">Метод &lt;code&gt;toFixed()&lt;/code&gt; форматирует число с использованием записи с фиксированной точкой.</target>
        </trans-unit>
        <trans-unit id="f434b72f4baefdae7c797b9c3056838ee4b3b763" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toGMTString()&lt;/code&gt; method converts a date to a string, using Internet Greenwich Mean Time (GMT) conventions. The exact format of the value returned by &lt;code&gt;toGMTString()&lt;/code&gt; varies according to the platform and browser, in general it should represent a human readable date string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f32bb884a567e3a395878b1be4722efa1cadfea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toISOString()&lt;/code&gt; method returns a string in &lt;em&gt;simplified&lt;/em&gt; extended ISO format (&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt;), which is always 24 or 27 characters long (&lt;code&gt;YYYY-MM-DDTHH:mm:ss.sssZ&lt;/code&gt; or &lt;code&gt;&amp;plusmn;YYYYYY-MM-DDTHH:mm:ss.sssZ&lt;/code&gt;, respectively). The timezone is always zero UTC offset, as denoted by the suffix &quot;&lt;code&gt;Z&lt;/code&gt;&quot;.</source>
          <target state="translated">Метод &lt;code&gt;toISOString()&lt;/code&gt; возвращает строку в &lt;em&gt;упрощенном&lt;/em&gt; расширенном формате ISO ( &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt; ), которая всегда имеет длину 24 или 27 символов ( &lt;code&gt;YYYY-MM-DDTHH:mm:ss.sssZ&lt;/code&gt; или &lt;code&gt;&amp;plusmn;YYYYYY-MM-DDTHH:mm:ss.sssZ&lt;/code&gt; соответственно). Часовой пояс всегда равен нулю смещения UTC, что обозначается суффиксом &amp;laquo; &lt;code&gt;Z&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="65f5abfbb0478cf3263ea120977e12029ae44fb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toISOString()&lt;/code&gt; method returns a string in &lt;em&gt;simplified&lt;/em&gt; extended ISO format (&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt;), which is always 24 or 27 characters long (&lt;code&gt;&lt;var&gt;YYYY&lt;/var&gt;-&lt;var&gt;MM&lt;/var&gt;-&lt;var&gt;DD&lt;/var&gt;T&lt;var&gt;HH&lt;/var&gt;:&lt;var&gt;mm&lt;/var&gt;:&lt;var&gt;ss.sss&lt;/var&gt;Z&lt;/code&gt; or &lt;code&gt;&lt;var&gt;&amp;plusmn;&lt;/var&gt;&lt;var&gt;YYYYYY&lt;/var&gt;-&lt;var&gt;MM&lt;/var&gt;-&lt;var&gt;DD&lt;/var&gt;T&lt;var&gt;HH&lt;/var&gt;:&lt;var&gt;mm&lt;/var&gt;:&lt;var&gt;ss.sss&lt;/var&gt;Z&lt;/code&gt;, respectively). The timezone is always zero UTC offset, as denoted by the suffix &quot;&lt;code&gt;Z&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85df78873b6cf40bbfcdeb161d8c38d9baf44c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJSON()&lt;/code&gt; method returns a string representation of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Метод &lt;code&gt;toJSON()&lt;/code&gt; возвращает строковое представление объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6de692ce5d4ffa4c2464aca0c7356c940514d2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleDateString()&lt;/code&gt; method returns a string with a language sensitive representation of the date portion of this date. The new &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments let applications specify the language whose formatting conventions should be used and allow to customize the behavior of the function. In older implementations, which ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation dependent.</source>
          <target state="translated">Метод &lt;code&gt;toLocaleDateString()&lt;/code&gt; возвращает строку с чувствительным к языку представлением части даты этой даты. Новые аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; позволяют приложениям указывать язык, соглашения о форматировании которого должны использоваться, и позволяют настраивать поведение функции. В более старых реализациях, которые игнорируют аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; , используемый языковой стандарт и форма возвращаемой строки полностью зависят от реализации.</target>
        </trans-unit>
        <trans-unit id="cdc0297f0eb65109fdc9b01fc5f3443358fd86a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleLowerCase()&lt;/code&gt; method returns the calling string value converted to lower case, according to any locale-specific case mappings.</source>
          <target state="translated">Метод &lt;code&gt;toLocaleLowerCase()&lt;/code&gt; возвращает значение вызывающей строки, преобразованное в нижний регистр, в соответствии с любыми сопоставлениями регистра для конкретной локали.</target>
        </trans-unit>
        <trans-unit id="443b75095ca82d21f5ba0fd745809d9eba99b8bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleLowerCase()&lt;/code&gt; method returns the value of the string converted to lower case according to any locale-specific case mappings. &lt;code&gt;toLocaleLowerCase()&lt;/code&gt; does not affect the value of the string itself. In most cases, this will produce the same result as &lt;a href=&quot;tolowercase&quot;&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;&lt;/a&gt;, but for some locales, such as Turkish, whose case mappings do not follow the default case mappings in Unicode, there may be a different result.</source>
          <target state="translated">Метод &lt;code&gt;toLocaleLowerCase()&lt;/code&gt; возвращает значение строки, преобразованное в нижний регистр в соответствии с любыми сопоставлениями регистра для конкретной локали. &lt;code&gt;toLocaleLowerCase()&lt;/code&gt; не влияет на значение самой строки. В большинстве случаев это приведет к тому же результату, что и &lt;a href=&quot;tolowercase&quot;&gt; &lt;code&gt;toLowerCase()&lt;/code&gt; &lt;/a&gt; , но для некоторых локалей, таких как турецкий, чьи сопоставления регистра не соответствуют сопоставлениям регистра по умолчанию в Юникоде, может быть другой результат.</target>
        </trans-unit>
        <trans-unit id="7b2b1e4507d75b521dcbcece29c55a2b9bcc1e9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleString()&lt;/code&gt; method returns a string representing the elements of the array. The elements are converted to Strings using their &lt;code&gt;toLocaleString&lt;/code&gt; methods and these Strings are separated by a locale-specific String (such as a comma &amp;ldquo;,&amp;rdquo;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6703e19950b6cede2711f75d52cf5679d06bc31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleString()&lt;/code&gt; method returns a string with a language sensitive representation of this date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a5bc98b93806d7328dfd23d0e2f20fe79d9d58b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleString()&lt;/code&gt; method returns a string with a language sensitive representation of this date. The new &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments let applications specify the language whose formatting conventions should be used and customize the behavior of the function. In older implementations, which ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation dependent.</source>
          <target state="translated">Метод &lt;code&gt;toLocaleString()&lt;/code&gt; возвращает строку с чувствительным к языку представлением этой даты. Новые аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; позволяют приложениям указывать язык, соглашения о форматировании которого должны использоваться, и настраивать поведение функции. В более старых реализациях, которые игнорируют аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; , используемый языковой стандарт и форма возвращаемой строки полностью зависят от реализации.</target>
        </trans-unit>
        <trans-unit id="851b1939713b691bb9e259896b142204fa29dfb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleString()&lt;/code&gt; method returns a string with a language-sensitive representation of this BigInt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c181a78790a95d522c7d634f8dcba90d04ce862" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleString()&lt;/code&gt; method returns a string with a language-sensitive representation of this number.</source>
          <target state="translated">Метод &lt;code&gt;toLocaleString()&lt;/code&gt; возвращает строку с языковым представлением этого числа.</target>
        </trans-unit>
        <trans-unit id="ce71ded9fb47fafdc0a5c1f2bfd5f0791c1ea986" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleTimeString()&lt;/code&gt; method returns a string with a language sensitive representation of the time portion of this date. The new &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments let applications specify the language whose formatting conventions should be used and customize the behavior of the function. In older implementations, which ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation dependent.</source>
          <target state="translated">Метод &lt;code&gt;toLocaleTimeString()&lt;/code&gt; возвращает строку с чувствительным к языку представлением временной части этой даты. Новые аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; позволяют приложениям указывать язык, соглашения о форматировании которого должны использоваться, и настраивать поведение функции. В более старых реализациях, которые игнорируют аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; , используемый языковой стандарт и форма возвращаемой строки полностью зависят от реализации.</target>
        </trans-unit>
        <trans-unit id="4dddededdeaa266d4f6b4e36f1016e6d56f2759f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleUpperCase()&lt;/code&gt; method returns the calling string value converted to upper case, according to any locale-specific case mappings.</source>
          <target state="translated">Метод &lt;code&gt;toLocaleUpperCase()&lt;/code&gt; возвращает значение вызывающей строки, преобразованное в верхний регистр, в соответствии с любыми сопоставлениями регистра для конкретной локали.</target>
        </trans-unit>
        <trans-unit id="edab54eb7430a87e4e2c56f40c88fe4692fd8d48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLocaleUpperCase()&lt;/code&gt; method returns the value of the string converted to upper case according to any locale-specific case mappings. &lt;code&gt;toLocaleUpperCase()&lt;/code&gt; does not affect the value of the string itself. In most cases, this will produce the same result as &lt;a href=&quot;touppercase&quot;&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;&lt;/a&gt;, but for some locales, such as Turkish, whose case mappings do not follow the default case mappings in Unicode, there may be a different result.</source>
          <target state="translated">Метод &lt;code&gt;toLocaleUpperCase()&lt;/code&gt; возвращает значение строки, преобразованное в верхний регистр в соответствии с любыми сопоставлениями регистра для конкретной локали. &lt;code&gt;toLocaleUpperCase()&lt;/code&gt; не влияет на значение самой строки. В большинстве случаев это приведет к тому же результату, что и &lt;a href=&quot;touppercase&quot;&gt; &lt;code&gt;toUpperCase()&lt;/code&gt; &lt;/a&gt; , но для некоторых локалей, таких как турецкий, чьи сопоставления регистра не соответствуют сопоставлениям регистра по умолчанию в Юникоде, может быть другой результат.</target>
        </trans-unit>
        <trans-unit id="0cb3154ea52bee934a4a9af4298d2277e26aa187" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLowerCase()&lt;/code&gt; method returns the calling string value converted to lower case.</source>
          <target state="translated">Метод &lt;code&gt;toLowerCase()&lt;/code&gt; возвращает значение вызывающей строки, преобразованное в нижний регистр.</target>
        </trans-unit>
        <trans-unit id="1d4fc82c4ee80a96e1bdeeea889258ac210eac67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toLowerCase()&lt;/code&gt; method returns the value of the string converted to lower case. &lt;code&gt;toLowerCase()&lt;/code&gt; does not affect the value of the string &lt;code&gt;str&lt;/code&gt; itself.</source>
          <target state="translated">Метод &lt;code&gt;toLowerCase()&lt;/code&gt; возвращает значение строки, преобразованное в нижний регистр. &lt;code&gt;toLowerCase()&lt;/code&gt; не влияет на значение самой строки &lt;code&gt;str&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dceab665270eb0d894532b40e2a43d79af258c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toPrecision()&lt;/code&gt; method returns a string representing the &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object to the specified precision.</source>
          <target state="translated">Метод &lt;code&gt;toPrecision()&lt;/code&gt; возвращает строку, представляющую объект &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; с указанной точностью.</target>
        </trans-unit>
        <trans-unit id="a0d6221c62d5cad7f2f25d8dab6635b0cdf424c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method is automatically called when a date is to be represented as a text value, e.g. &lt;code&gt;console.log(new Date())&lt;/code&gt;, or when a date is used in a string concatenation, such as &lt;code&gt;var today = 'Today is ' + new Date()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3593487d782bc9e25b68ad4e96adfb00fc0890a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method is automatically called when a date is to be represented as a text value, e.g. &lt;code&gt;console.log(new Date())&lt;/code&gt;, or when a date is used in a string concatenation, such as &lt;code&gt;var today&amp;nbsp;= 'Today is ' + new Date()&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;toString()&lt;/code&gt; вызывается автоматически, когда дата должна быть представлена ​​как текстовое значение, например &lt;code&gt;console.log(new Date())&lt;/code&gt; , или когда дата используется в конкатенации строк, например &lt;code&gt;var today&amp;nbsp;= 'Today is ' + new Date()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="642670d6dbb31bc5836c091017079597f7ef4703" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method parses its first argument, and attempts to return a string representation in the specified &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; (base). For radices above &lt;code&gt;10&lt;/code&gt;, the letters of the alphabet indicate numerals greater than 9. For example, for hexadecimal numbers (base 16), &lt;code&gt;a&lt;/code&gt; through &lt;code&gt;f&lt;/code&gt; are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a454e4131af071cbec9769c58477eb9c5c409cc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method parses its first argument, and attempts to return a string representation in the specified radix (base). For radixes above 10, the letters of the alphabet indicate numerals greater than 9. For example, for hexadecimal numbers (base 16) &lt;code&gt;a&lt;/code&gt; through &lt;code&gt;f&lt;/code&gt; are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8cb91bb2a4fa972bac6025c69afe74adbc9c959" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method parses its first argument, and attempts to return a string representation in the specified radix (base). For radixes above 10, the letters of the alphabet indicate numerals greater than 9. For example, for hexadecimal numbers (base 16), &lt;code&gt;a&lt;/code&gt; through &lt;code&gt;f&lt;/code&gt; are used.</source>
          <target state="translated">Метод &lt;code&gt;toString()&lt;/code&gt; анализирует свой первый аргумент и пытается вернуть строковое представление с указанным основанием (основанием). Для систем счисления больше 10 буквы алфавита обозначают цифры больше 9. Например, для шестнадцатеричных чисел (основание 16) используются числа от &lt;code&gt;a&lt;/code&gt; до &lt;code&gt;f&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aef48c3db750fafbc9e23694d9a289d86ef5365f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method returns a string representing the regular expression.</source>
          <target state="translated">Метод &lt;code&gt;toString()&lt;/code&gt; возвращает строку, представляющую регулярное выражение.</target>
        </trans-unit>
        <trans-unit id="74887bfb01cf652dc3e68adbd159a6e6ceabcb39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method returns a string representing the specified &lt;a href=&quot;../bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; object. The trailing &quot;n&quot; is not part of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6e291ea9eb17a7ed3124b0e25d51227f3fbaef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method returns a string representing the specified &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Метод &lt;code&gt;toString()&lt;/code&gt; возвращает строку, представляющую указанный объект &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="108226db1a2ff86483cf2870fd73d0b2b13efb5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method returns a string representing the specified &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Метод &lt;code&gt;toString()&lt;/code&gt; возвращает строку, представляющую указанный объект &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b4c6fa3d38cb17e4f6b59c566d1c25ba3830d2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method returns a string representing the specified object.</source>
          <target state="translated">Метод &lt;code&gt;toString()&lt;/code&gt; возвращает строку, представляющую указанный объект.</target>
        </trans-unit>
        <trans-unit id="75509fa9dfdc986d9ed46156e4ac3bbaff78b23f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception (&quot;Function.prototype.toString called on incompatible object&quot;), if its &lt;code&gt;this&lt;/code&gt; value object is not a &lt;code&gt;Function&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97243005725f08a5812c6aa4c5b25fe95d939f4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toString()&lt;/code&gt; method will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception (&quot;Function.prototype.toString called on incompatible object&quot;), if its &lt;code&gt;this&lt;/code&gt; value object is not a &lt;code&gt;Function&lt;/code&gt; object. It will also throw for &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; objects, for example.</source>
          <target state="translated">Метод &lt;code&gt;toString()&lt;/code&gt; вызовет исключение &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; (&amp;laquo;Function.prototype.toString, вызванный несовместимым объектом&amp;raquo;), если его объект &lt;code&gt;this&lt;/code&gt; значения не является объектом &lt;code&gt;Function&lt;/code&gt; . Например, он также выбрасывает объекты &lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50872c2d5a0223153996743472e6bfd2cc8e42f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toTimeString()&lt;/code&gt; method is especially useful because compliant engines implementing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/ECMAScript&quot;&gt;ECMA-262&lt;/a&gt; may differ in the string obtained from &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects, as the format is implementation-dependent; simple string slicing approaches may not produce consistent results across multiple engines.</source>
          <target state="translated">Метод &lt;code&gt;toTimeString()&lt;/code&gt; особенно полезен, потому что совместимые движки, реализующие &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/ECMAScript&quot;&gt;ECMA-262,&lt;/a&gt; могут отличаться строкой, полученной из &lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; для объектов &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; , поскольку формат зависит от реализации; простые подходы к нарезке строк могут не давать согласованных результатов на нескольких машинах.</target>
        </trans-unit>
        <trans-unit id="216b3b43e20f631e6596b3b4c5a0280919d928d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toTimeString()&lt;/code&gt; method is especially useful because compliant engines implementing &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;ECMA-262&lt;/a&gt; may differ in the string obtained from &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects, as the format is implementation-dependent; simple string slicing approaches may not produce consistent results across multiple engines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eedbbd929be16bb6a08efc9eee825f499e9beab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toTimeString()&lt;/code&gt; method returns the time portion of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object in human readable form in American English.</source>
          <target state="translated">Метод &lt;code&gt;toTimeString()&lt;/code&gt; возвращает временную часть объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; в удобочитаемой форме на американском английском.</target>
        </trans-unit>
        <trans-unit id="1dde95453b987352dae87ecb21647f71611776b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toTimeString()&lt;/code&gt; method returns the time portion of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object in human readable form in English.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c831507f30af5e55f57b81c961372d23720a569" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toUTCString()&lt;/code&gt; method converts a date to a string, using the UTC time zone.</source>
          <target state="translated">Метод &lt;code&gt;toUTCString()&lt;/code&gt; преобразует дату в строку, используя часовой пояс UTC.</target>
        </trans-unit>
        <trans-unit id="aae475104e93c5906b6da885303c159f6bd726b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toUpperCase()&lt;/code&gt; method returns the calling string value converted to uppercase (the value will be converted to a string if it isn't one).</source>
          <target state="translated">Метод &lt;code&gt;toUpperCase()&lt;/code&gt; возвращает значение вызывающей строки, преобразованное в верхний регистр (значение будет преобразовано в строку, если это не так).</target>
        </trans-unit>
        <trans-unit id="91e9cc5eaa6597510653d6ea202a3d6fc4562f87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toUpperCase()&lt;/code&gt; method returns the value of the string converted to uppercase. This method does not affect the value of the string itself since JavaScript strings are immutable.</source>
          <target state="translated">Метод &lt;code&gt;toUpperCase()&lt;/code&gt; возвращает значение строки, преобразованное в верхний регистр. Этот метод не влияет на значение самой строки, поскольку строки JavaScript неизменяемы.</target>
        </trans-unit>
        <trans-unit id="f3ac0a8da3e9e204f8f84192c5f916cf4feeaf6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim()&lt;/code&gt; method removes whitespace from both ends of a string. Whitespace in this context is all the whitespace characters (space, tab, no-break space, etc.) and all the line terminator characters (LF, CR, etc.).</source>
          <target state="translated">Метод &lt;code&gt;trim()&lt;/code&gt; удаляет пробелы с обоих концов строки. Пробел в этом контексте - это все символы пробела (пробел, табуляция, неразрывный пробел и т. Д.) И все символы конца строки (LF, CR и т. Д.).</target>
        </trans-unit>
        <trans-unit id="4b4d033294b8f2c8dadaa99ad8ed1867d691b833" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim()&lt;/code&gt; method returns the string stripped of whitespace from both ends. &lt;code&gt;trim()&lt;/code&gt; does not affect the value of the &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77d84b3b80fca92ad2f2c44608b4f1ce7547f76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trim()&lt;/code&gt; method returns the string stripped of whitespace from both ends. &lt;code&gt;trim()&lt;/code&gt; does not affect the value of the string itself.</source>
          <target state="translated">Метод &lt;code&gt;trim()&lt;/code&gt; возвращает строку, лишенную пробелов с обоих концов. &lt;code&gt;trim()&lt;/code&gt; не влияет на значение самой строки.</target>
        </trans-unit>
        <trans-unit id="e8326ead88e4cd9c2599706946cb0d4f772330fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trimEnd()&lt;/code&gt; / &lt;code&gt;trimRight()&lt;/code&gt; methods return the string stripped of whitespace from its right end. &lt;code&gt;trimEnd()&lt;/code&gt; or &lt;code&gt;trimRight()&lt;/code&gt; do not affect the value of the string itself.</source>
          <target state="translated">В &lt;code&gt;trimEnd()&lt;/code&gt; / &lt;code&gt;trimRight()&lt;/code&gt; возвращает строку раздела неиспользованного от правого конца. &lt;code&gt;trimEnd()&lt;/code&gt; или &lt;code&gt;trimRight()&lt;/code&gt; не влияют на значение самой строки.</target>
        </trans-unit>
        <trans-unit id="d0c42df8ea8425f6289055b0685f49215590cd01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trimEnd()&lt;/code&gt; method removes whitespace from the end of a string. &lt;code&gt;trimRight()&lt;/code&gt; is an alias of this method.</source>
          <target state="translated">Метод &lt;code&gt;trimEnd()&lt;/code&gt; удаляет пробелы в конце строки. &lt;code&gt;trimRight()&lt;/code&gt; - это псевдоним этого метода.</target>
        </trans-unit>
        <trans-unit id="84d6affa61054b04ac320da53491af0255f69a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trimStart()&lt;/code&gt; / &lt;code&gt;trimLeft()&lt;/code&gt; methods return the string stripped of whitespace from its left end. &lt;code&gt;trimLeft()&lt;/code&gt; or &lt;code&gt;trimStart()&lt;/code&gt; do not affect the value of the string itself.</source>
          <target state="translated">В &lt;code&gt;trimStart()&lt;/code&gt; / &lt;code&gt;trimLeft()&lt;/code&gt; методы возвращают строку зачищенной неиспользованные от ее левого конца. &lt;code&gt;trimLeft()&lt;/code&gt; или &lt;code&gt;trimStart()&lt;/code&gt; не влияют на значение самой строки.</target>
        </trans-unit>
        <trans-unit id="a273caafe0e3f21a7d29b468ea165a0f70d1e4ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trimStart()&lt;/code&gt; method removes whitespace from the beginning of a string. &lt;code&gt;trimLeft()&lt;/code&gt; is an alias of this method.</source>
          <target state="translated">Метод &lt;code&gt;trimStart()&lt;/code&gt; удаляет пробелы в начале строки. &lt;code&gt;trimLeft()&lt;/code&gt; - это псевдоним этого метода.</target>
        </trans-unit>
        <trans-unit id="eebf8e475a70ad0fe4b18cfcf6acf4a5a93b64ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;try...catch&lt;/code&gt; statement marks a block of statements to try and specifies a response should an exception be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8dbdfa9a4dbb033289cdec8edd0c90b52dd4dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;try...catch&lt;/code&gt; statement marks a block of statements to try, and specifies a response, should an exception be thrown.</source>
          <target state="translated">Оператор &lt;code&gt;try...catch&lt;/code&gt; отмечает блок операторов для попытки и указывает ответ в случае возникновения исключения.</target>
        </trans-unit>
        <trans-unit id="769e08ea4cd1c8b66874471821aed2443abfa2a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;try&lt;/code&gt; statement consists of a &lt;code&gt;try&lt;/code&gt; block, which contains one or more statements. &lt;code&gt;{}&lt;/code&gt; must always be used, also for single statements. At least one &lt;code&gt;catch&lt;/code&gt; clause, or a &lt;code&gt;finally&lt;/code&gt; clause, must be present. This gives us three forms for the &lt;code&gt;try&lt;/code&gt; statement:</source>
          <target state="translated">Оператор &lt;code&gt;try&lt;/code&gt; состоит из блока &lt;code&gt;try&lt;/code&gt; , который содержит один или несколько операторов. &lt;code&gt;{}&lt;/code&gt; необходимо использовать всегда, даже для отдельных операторов. Должен присутствовать хотя бы один пункт &lt;code&gt;catch&lt;/code&gt; или пункт &lt;code&gt;finally&lt;/code&gt; . Это дает нам три формы для оператора &lt;code&gt;try&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="975841640c2369bf00f364df0218caa575ba682d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;try&lt;/code&gt; statement consists of a &lt;code&gt;try&lt;/code&gt;-block, which contains one or more statements. &lt;code&gt;{}&lt;/code&gt; must always be used, even for single statements. At least one &lt;code&gt;catch&lt;/code&gt;-block, or a &lt;code&gt;finally&lt;/code&gt;-block, must be present. This gives us three forms for the &lt;code&gt;try&lt;/code&gt; statement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bec62c61738f40c660dbbd07be4d2a3f373053d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeof&lt;/code&gt; operator determines the type of a given object.</source>
          <target state="translated">Оператор &lt;code&gt;typeof&lt;/code&gt; определяет тип данного объекта.</target>
        </trans-unit>
        <trans-unit id="c55560a650a9b123b737ee66a03b700f6fe1cd62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeof&lt;/code&gt; operator is followed by its operand:</source>
          <target state="translated">За оператором &lt;code&gt;typeof&lt;/code&gt; следует его операнд:</target>
        </trans-unit>
        <trans-unit id="1a23f4a9cde5079c1f99d663faf09b3511568087" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;typeof&lt;/code&gt; operator returns a string indicating the type of the unevaluated operand.</source>
          <target state="translated">Оператор &lt;code&gt;typeof&lt;/code&gt; возвращает строку, указывающую тип неоцененного операнда.</target>
        </trans-unit>
        <trans-unit id="f610c77b8f248a18fe0dc12f1ff1e1a5a0afa79c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unicode&lt;/code&gt; property indicates whether or not the &quot;&lt;code&gt;u&lt;/code&gt;&quot; flag is used with a regular expression. &lt;code&gt;unicode&lt;/code&gt; is a read-only property of an individual regular expression instance.</source>
          <target state="translated">Свойство &lt;code&gt;unicode&lt;/code&gt; указывает, используется ли флаг &amp;laquo; &lt;code&gt;u&lt;/code&gt; &amp;raquo; с регулярным выражением. &lt;code&gt;unicode&lt;/code&gt; - это свойство отдельного экземпляра регулярного выражения, доступное только для чтения.</target>
        </trans-unit>
        <trans-unit id="4e7a255e1ba3894e96414ac849932235569bc182" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unregister&lt;/code&gt; unregisters a target object from a &lt;a href=&quot;../finalizationregistry&quot;&gt;&lt;code&gt;FinalizationRegistry&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebe281bf94ee2b4c66c24905c0dbe8e1af906423" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unshift&lt;/code&gt; method inserts the given values to the beginning of an array-like object.</source>
          <target state="translated">Метод &lt;code&gt;unshift&lt;/code&gt; вставляет заданные значения в начало объекта, подобного массиву.</target>
        </trans-unit>
        <trans-unit id="ac924abd62c4ecdb7140ca95d1618526024a5797" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf()&lt;/code&gt; method of &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; returns the primitive value of a &lt;code&gt;Boolean&lt;/code&gt; object or literal &lt;code&gt;Boolean&lt;/code&gt; as a Boolean data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cad25838721f6b6affa0e29e3484611dc0437b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf()&lt;/code&gt; method of &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; returns the primitive value of a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object as a string data type. This value is equivalent to &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;String.prototype.toString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;valueOf()&lt;/code&gt; класса &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; возвращает примитивное значение объекта &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; в виде строкового типа данных. Это значение эквивалентно &lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;String.prototype.toString()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2b73ecde1dfc53d92441f91129b9e133efc59fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf()&lt;/code&gt; method returns the primitive value of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object as a number data type, the number of milliseconds since midnight 01 January, 1970 UTC.</source>
          <target state="translated">Метод &lt;code&gt;valueOf()&lt;/code&gt; возвращает примитивное значение объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; как числовой тип данных, количество миллисекунд с полуночи 1 января 1970 года по всемирному координированному времени.</target>
        </trans-unit>
        <trans-unit id="da22d1c9f68730f5c70c46b9c54ce3ad651cea55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf()&lt;/code&gt; method returns the primitive value of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Метод &lt;code&gt;valueOf()&lt;/code&gt; возвращает примитивное значение объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c14657e05277c3ae2629d97db6e277ae1e2ddf97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf()&lt;/code&gt; method returns the primitive value of a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Метод &lt;code&gt;valueOf()&lt;/code&gt; возвращает примитивное значение объекта &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="838b5313047bbb34666f3e61531649c3d13eb091" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf()&lt;/code&gt; method returns the primitive value of the specified object.</source>
          <target state="translated">Метод &lt;code&gt;valueOf()&lt;/code&gt; возвращает примитивное значение указанного объекта.</target>
        </trans-unit>
        <trans-unit id="ba9d9d634f93ed0d2b9ead2d124af07bf4d2c02e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf()&lt;/code&gt; method returns the wrapped primitive value of a &lt;a href=&quot;../bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f2a0b3c5433cf03e1339120e414cfefce5a576" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf()&lt;/code&gt; method returns the wrapped primitive value of a &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Метод &lt;code&gt;valueOf()&lt;/code&gt; возвращает обернутое примитивное значение объекта &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="38dcfa335912989ce16f78d3ad1c5e19e069e1ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf&lt;/code&gt; method of &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; returns the primitive value of a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object or literal &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; as a Boolean data type.</source>
          <target state="translated">Метод &lt;code&gt;valueOf&lt;/code&gt; типа &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; возвращает примитивное значение объекта &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; или буквальное &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; как логический тип данных.</target>
        </trans-unit>
        <trans-unit id="535be2559b3b7f2298770f875f760c417c3946ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;valueOf&lt;/code&gt; method of &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; returns the primitive value of a Symbol object as a Symbol data type.</source>
          <target state="translated">Метод &lt;code&gt;valueOf&lt;/code&gt; класса &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; возвращает примитивное значение объекта Symbol как тип данных Symbol.</target>
        </trans-unit>
        <trans-unit id="55fa1d436ded0f7743550d3d4a3a96be51625c12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values()&lt;/code&gt; method returns a new &lt;code&gt;Array Iterator&lt;/code&gt; object that contains the values for each index in the array.</source>
          <target state="translated">Метод &lt;code&gt;values()&lt;/code&gt; возвращает новый объект &lt;code&gt;Array Iterator&lt;/code&gt; , содержащий значения для каждого индекса в массиве.</target>
        </trans-unit>
        <trans-unit id="e0231a9ea179e12e662b6630901c815e35811e4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values()&lt;/code&gt; method returns a new &lt;strong&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;Iterator&lt;/a&gt;&lt;/strong&gt; object that contains the values for each element in the &lt;code&gt;Map&lt;/code&gt; object in insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe7fa8537426c000f59931eff1dd448535b18cf3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values()&lt;/code&gt; method returns a new iterator object that contains the values for each element in the &lt;code&gt;Set&lt;/code&gt; object in insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c26479611e6ade5ab557e821591eb5864a5a94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;var&lt;/code&gt; declares a function-scoped or globally-scoped variable, optionally initializing it to a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7e5202574c3bb684ad4cc90ea7079a312c949a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;var&lt;/code&gt; declares a variable, optionally initializing it to a value.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; объявляет переменную, с возможностью его инициализации до значения.</target>
        </trans-unit>
        <trans-unit id="897af01fbc7a1aeaf9f2be520c8cb53a174fd03e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;void&lt;/code&gt; evaluates the given &lt;code&gt;&lt;em&gt;expression&lt;/em&gt;&lt;/code&gt; and then returns &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В &lt;code&gt;void&lt;/code&gt; оценивает данное &lt;code&gt;&lt;em&gt;expression&lt;/em&gt;&lt;/code&gt; , а затем возвращает &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82acc2ba21ba03475bc6c3532a1ee15ad0f92f7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;void&lt;/code&gt; operator discards an expression's return value.</source>
          <target state="translated">Оператор &lt;code&gt;void&lt;/code&gt; отбрасывает возвращаемое значение выражения.</target>
        </trans-unit>
        <trans-unit id="e5db750a3354d5b639f19156e00ff8b9a3dc4cbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;void&lt;/code&gt; operator is often used merely to obtain the &lt;code&gt;undefined&lt;/code&gt; primitive value, usually using &quot;&lt;code&gt;void(0)&lt;/code&gt;&quot; (which is equivalent to &quot;&lt;code&gt;void 0&lt;/code&gt;&quot;). In these cases, the global variable &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; can be used instead (assuming it has not been assigned to a non-default value).</source>
          <target state="translated">Оператор &lt;code&gt;void&lt;/code&gt; часто используется просто для получения &lt;code&gt;undefined&lt;/code&gt; примитивного значения, обычно с использованием &amp;laquo; &lt;code&gt;void(0)&lt;/code&gt; &amp;raquo; (что эквивалентно &amp;laquo; &lt;code&gt;void 0&lt;/code&gt; &amp;raquo;). В этих случаях вместо нее можно использовать глобальную переменную &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; (при условии, что ей не присвоено значение, отличное от значения по умолчанию).</target>
        </trans-unit>
        <trans-unit id="8c305080a4667532148f739e8c7677a377759908" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;void&lt;/code&gt; operator is often used merely to obtain the &lt;code&gt;undefined&lt;/code&gt; primitive value, usually using &quot;&lt;code&gt;void(0)&lt;/code&gt;&quot; (which is equivalent to &quot;&lt;code&gt;void 0&lt;/code&gt;&quot;). In these cases, the global variable &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d13e2a5ad5de3f04bc4a1d15b6fb13b7da1253" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wait()&lt;/code&gt; and &lt;code&gt;notify()&lt;/code&gt; methods are modeled on Linux futexes (&quot;fast user-space mutex&quot;) and provide ways for waiting until a certain condition becomes true and are typically used as blocking constructs.</source>
          <target state="translated">&lt;code&gt;wait()&lt;/code&gt; и &lt;code&gt;notify()&lt;/code&gt; методы моделируются на futexes Linux ( &amp;laquo;быстро пользовательское пространство мьютекса&amp;raquo;) и обеспечивают способы для ожидания , пока некоторое условие не станет истинным , и , как правило , используется в качестве блокирующих конструкций.</target>
        </trans-unit>
        <trans-unit id="c40665399093e4817a0248d3b80c6b99f91366d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x = 2&lt;/code&gt; is limited in scope to the block in which it was defined.</source>
          <target state="translated">&lt;code&gt;x = 2&lt;/code&gt; ограничен к блоку , в котором она была определена.</target>
        </trans-unit>
        <trans-unit id="92ee9179a0339ffe93939d03abed32b4d463f439" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield*&lt;/code&gt; expression iterates over the operand and &lt;code&gt;yield&lt;/code&gt;s each value returned by it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb06a046a90f1a77d67b9b150bf36b1e7029262" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield*&lt;/code&gt; expression iterates over the operand and yields each value returned by it.</source>
          <target state="translated">&lt;code&gt;yield*&lt;/code&gt; экспрессия перебирает операнд и дает каждое значение , возвращаемое она.</target>
        </trans-unit>
        <trans-unit id="ecfbc752dbf10bd278aee60426270db4ee3e7593" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield*&lt;/code&gt; is used to delegate to another &lt;a href=&quot;../statements/function*&quot;&gt;&lt;code&gt;generator&lt;/code&gt;&lt;/a&gt; or iterable object.</source>
          <target state="translated">&lt;code&gt;yield*&lt;/code&gt; используются для делегирования другого &lt;a href=&quot;../statements/function*&quot;&gt; &lt;code&gt;generator&lt;/code&gt; &lt;/a&gt; или Iterable объекта.</target>
        </trans-unit>
        <trans-unit id="26fb3b11fb166e5aa3634e574db12005808db70d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield&lt;/code&gt; keyword actually returns an &lt;code&gt;IteratorResult&lt;/code&gt; object with two properties, &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;done&lt;/code&gt;. The &lt;code&gt;value&lt;/code&gt; property is the result of evaluating the &lt;code&gt;yield&lt;/code&gt; expression, and &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, indicating that the generator function has not fully completed.</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; ключевого слова на самом деле возвращает &lt;code&gt;IteratorResult&lt;/code&gt; объект с двумя свойствами, &lt;code&gt;value&lt;/code&gt; и &lt;code&gt;done&lt;/code&gt; . Свойство &lt;code&gt;value&lt;/code&gt; является результатом оценки выражения &lt;code&gt;yield&lt;/code&gt; , и &lt;code&gt;done&lt;/code&gt; имеет значение &lt;code&gt;false&lt;/code&gt; , что указывает на то, что функция генератора не полностью завершена.</target>
        </trans-unit>
        <trans-unit id="ca8971816267d11315112df18a69038473f47628" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield&lt;/code&gt; keyword causes the call to the generator's &lt;code&gt;next()&lt;/code&gt; method to return an &lt;code&gt;IteratorResult&lt;/code&gt; object with two properties: &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;done&lt;/code&gt;. The &lt;code&gt;value&lt;/code&gt; property is the result of evaluating the &lt;code&gt;yield&lt;/code&gt; expression, and &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, indicating that the generator function has not fully completed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df48637246cf3fa0fd6096242e9cd90e47acc90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield&lt;/code&gt; keyword is used to pause and resume a generator function (&lt;a href=&quot;../statements/function*&quot;&gt;&lt;code&gt;function*&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;legacy generator function&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; ключевое слово используется для приостановки и возобновления функции генератора ( &lt;a href=&quot;../statements/function*&quot;&gt; &lt;code&gt;function*&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/Legacy_generator_function&quot;&gt;функции генератора наследство&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="9ae86ee006331319767ea8ea1e7b47a6d042f723" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;yield&lt;/code&gt; keyword pauses generator function execution and the value of the expression following the &lt;code&gt;yield&lt;/code&gt; keyword is returned to the generator's caller. It can be thought of as a generator-based version of the &lt;code&gt;return&lt;/code&gt; keyword.</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; выполнение функции пауз ключевых слов генератора и значение выражения после &lt;code&gt;yield&lt;/code&gt; ключевого слова возвращаются к вызывающему генератора. Его можно рассматривать как основанную на генераторе версию ключевого слова &lt;code&gt;return&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c53061ccc04d449531ceb9c5e7a4f4ace5f766b5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;locale&lt;/em&gt;'s Unicode locale identifier string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065463d049b36377da14331481f7dd33b125cfc1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;n&lt;/em&gt;th string found by a parenthesized capture group, provided the first argument to &lt;code&gt;replace()&lt;/code&gt; was a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. (Corresponds to &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc. above.) For example, if &lt;code&gt;/(\a+)(\b+)/&lt;/code&gt;, was given, &lt;code&gt;p1&lt;/code&gt; is the match for &lt;code&gt;\a+&lt;/code&gt;, and &lt;code&gt;p2&lt;/code&gt; for &lt;code&gt;\b+&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;П&lt;/em&gt; - й строка , найденная в скобках группы захвата, при условии , что первый аргумент &lt;code&gt;replace()&lt;/code&gt; была &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; объектом. (Соответствует &lt;code&gt;$1&lt;/code&gt; , &lt;code&gt;$2&lt;/code&gt; , и т.д. выше). Например, если &lt;code&gt;/(\a+)(\b+)/&lt;/code&gt; , был дан, &lt;code&gt;p1&lt;/code&gt; это подходит для &lt;code&gt;\a+&lt;/code&gt; , а &lt;code&gt;p2&lt;/code&gt; для &lt;code&gt;\b+&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="afc59143cc18af9cdc27570c778510a67d50d1e6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Proxy&lt;/strong&gt; object is used to define custom behavior for fundamental operations (e.g. property lookup, assignment, enumeration, function invocation, etc).</source>
          <target state="translated">Объект &lt;strong&gt;Proxy&lt;/strong&gt; используется для определения пользовательского поведения для основных операций (например, поиска свойств, присвоения, перечисления, вызова функций и т. Д.).</target>
        </trans-unit>
        <trans-unit id="c5ef3d98d86d821ee86cd80487256c6f9f09f04a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;array comprehension&lt;/strong&gt; syntax was a JavaScript expression which allowed you to quickly assemble a new array based on an existing one. However, it has been removed from the standard and the Firefox implementation. Do not use it!</source>
          <target state="translated">&lt;strong&gt;Массив понимание&lt;/strong&gt; синтаксиса было выражение JavaScript , который позволил вам быстро собрать новый массив на основе существующего. Однако он был удален из стандарта и реализации Firefox. Не используйте это!</target>
        </trans-unit>
        <trans-unit id="d8f59a014ecb1a14707700e8eac92c0e0d267805" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;bind()&lt;/strong&gt; function creates a new &lt;strong&gt;bound function&lt;/strong&gt;&lt;strong&gt;(BF)&lt;/strong&gt;. A &lt;strong&gt;BF&lt;/strong&gt; is an &lt;strong&gt;exotic function object&lt;/strong&gt; (a term from &lt;strong&gt;ECMAScript 2015&lt;/strong&gt;) that wraps the original function object. Calling a &lt;strong&gt;BF&lt;/strong&gt; generally results in the execution of its &lt;strong&gt;wrapped function&lt;/strong&gt;.</source>
          <target state="translated">Функция &lt;strong&gt;bind ()&lt;/strong&gt; создает новую &lt;strong&gt;связанную функцию &lt;/strong&gt;&lt;strong&gt;(BF)&lt;/strong&gt; . &lt;strong&gt;BF&lt;/strong&gt; является &lt;strong&gt;экзотическим функциональным объектом&lt;/strong&gt; (термин из &lt;strong&gt;ECMAScript 2015&lt;/strong&gt; ) , который обертывает исходный объект функции. Вызов &lt;strong&gt;BF&lt;/strong&gt; обычно приводит к выполнению &lt;strong&gt;обернутой функции&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="1d733e1153af7fad236cbcb528b0288e3e22d5e4" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;break statement&lt;/strong&gt; terminates the current loop, &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt; statement and transfers program control to the statement following the terminated statement.</source>
          <target state="translated">Оператор &lt;strong&gt;break&lt;/strong&gt; завершает текущий &lt;strong&gt;оператор&lt;/strong&gt; цикла, &lt;a href=&quot;switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt; и передает управление программой оператору, следующему за завершенным оператором.</target>
        </trans-unit>
        <trans-unit id="94714384460d5950f3307e7c533970bce49359f6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;catch()&lt;/strong&gt; method returns a &lt;code&gt;Promise&lt;/code&gt; and deals with rejected cases only. It behaves the same as calling &lt;a href=&quot;then&quot;&gt;&lt;code&gt;Promise.prototype.then(undefined, onRejected)&lt;/code&gt;&lt;/a&gt; (in fact, calling &lt;code&gt;obj.catch(onRejected)&lt;/code&gt; internally calls &lt;code&gt;obj.then(undefined, onRejected)&lt;/code&gt;). This means, that you have to provide &lt;code&gt;onRejected&lt;/code&gt; function even if you want to fallback to &lt;code&gt;undefined&lt;/code&gt; result value - for example &lt;code&gt;obj.catch(() =&amp;gt; {})&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;strong&gt;catch ()&lt;/strong&gt; возвращает &lt;code&gt;Promise&lt;/code&gt; и работает только с отклоненными случаями. Он ведет себя так же, как вызов &lt;a href=&quot;then&quot;&gt; &lt;code&gt;Promise.prototype.then(undefined, onRejected)&lt;/code&gt; &lt;/a&gt; (фактически, вызов &lt;code&gt;obj.catch(onRejected)&lt;/code&gt; внутренне вызывает &lt;code&gt;obj.then(undefined, onRejected)&lt;/code&gt; ). Это означает, что вы должны предоставить функцию &lt;code&gt;onRejected&lt;/code&gt; , даже если вы хотите вернуться к &lt;code&gt;undefined&lt;/code&gt; значению результата - например, &lt;code&gt;obj.catch(() =&amp;gt; {})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="99ace5b02df9e8b779d43f17fe783c684b201a52" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;class declaration&lt;/strong&gt; creates a new class with a given name using prototype-based inheritance.</source>
          <target state="translated">&lt;strong&gt;Объявление класса&lt;/strong&gt; создает новый класс с заданным именем с использованием прототипа на основе наследования.</target>
        </trans-unit>
        <trans-unit id="4b070d15c9fff8d31d00ad8046e868b6d44dee1d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;class expression&lt;/strong&gt; is one way to define a class in ECMAScript 2015. Similar to &lt;a href=&quot;function&quot;&gt;function expressions&lt;/a&gt;, class expressions can be named or unnamed. If named, the name of the class is local to the class body only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe53faa937fc7cde1f3dbdb6693fd9e43484178" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;class expression&lt;/strong&gt; is one way to define a class in ECMAScript 2015. Similar to &lt;a href=&quot;function&quot;&gt;function expressions&lt;/a&gt;, class expressions can be named or unnamed. If named, the name of the class is local to the class body only. JavaScript classes use prototype-based inheritance.</source>
          <target state="translated">&lt;strong&gt;Выражение класса&lt;/strong&gt; является одним из способов определить класс в ECMAScript 2015. Аналогично &lt;a href=&quot;function&quot;&gt;функции выражения&lt;/a&gt; , выражение класса может быть названо или безымянными. Если указано имя, имя класса является локальным только для тела класса. Классы JavaScript используют наследование на основе прототипов.</target>
        </trans-unit>
        <trans-unit id="73225444d7e8533026618e451637c545dd6c871c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;conditional (ternary) operator&lt;/strong&gt; is the only JavaScript operator that takes three operands. This operator is frequently used as a shortcut for the &lt;a href=&quot;../statements/if...else&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">&lt;strong&gt;Условный (тройной) оператор&lt;/strong&gt; является единственным JavaScript оператора , который принимает три операнда. Этот оператор часто используется как ярлык для оператора &lt;a href=&quot;../statements/if...else&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b55eedd98ebed286049d5c125a3e70522d51d174" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;conditional (ternary) operator&lt;/strong&gt; is the only JavaScript operator that takes three operands: a condition followed by a question mark (&lt;code&gt;?&lt;/code&gt;), then an expression to execute if the condition is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; followed by a colon (&lt;code&gt;:&lt;/code&gt;), and finally the expression to execute if the condition is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;. This operator is frequently used as a shortcut for the &lt;a href=&quot;../statements/if...else&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9330c73465ea3e6ff22f7d537d670942af5fe2a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;continue statement&lt;/strong&gt; terminates execution of the statements in the current iteration of the current or labeled loop, and continues execution of the loop with the next iteration.</source>
          <target state="translated">Оператор &lt;strong&gt;continue&lt;/strong&gt; завершает выполнение операторов в текущей итерации текущего или помеченного цикла и продолжает выполнение цикла на следующей итерации.</target>
        </trans-unit>
        <trans-unit id="37a8ee20020657a18f3bca33142a67351ee49ca6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;debugger statement&lt;/strong&gt; invokes any available debugging functionality, such as setting a breakpoint. If no debugging functionality is available, this statement has no effect.</source>
          <target state="translated">Оператор &lt;strong&gt;отладчика&lt;/strong&gt; вызывает любые доступные функции отладки, такие как установка точки останова. Если функции отладки недоступны, этот оператор не действует.</target>
        </trans-unit>
        <trans-unit id="f1f8b1715d765f723a3d6b24a097ae8fc219b0e8" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;default keyword &lt;/strong&gt;can be used in two situations in JavaScript: within a &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt; statement, or with an &lt;a href=&quot;export&quot;&gt;&lt;code&gt;export&lt;/code&gt;&lt;/a&gt; statement.</source>
          <target state="translated">&lt;strong&gt;По умолчанию ключевого слово&lt;/strong&gt; может использоваться в двух ситуациях в JavaScript: в &lt;a href=&quot;switch&quot;&gt; &lt;code&gt;switch&lt;/code&gt; &lt;/a&gt; заявлении, или с &lt;a href=&quot;export&quot;&gt; &lt;code&gt;export&lt;/code&gt; &lt;/a&gt; заявлением.</target>
        </trans-unit>
        <trans-unit id="27335960563bef2cdec1223d71b74b09bdcf3633" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;destructuring assignment&lt;/strong&gt; syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.</source>
          <target state="translated">&lt;strong&gt;Назначение деструктурирующего&lt;/strong&gt; синтаксис является выражением JavaScript , который позволяет распаковывать значения из массива или свойств от объектов, в различные переменные.</target>
        </trans-unit>
        <trans-unit id="db24014295ccb881f02ef10b67d2e5dcf0fe8bce" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;for statement&lt;/strong&gt; creates a loop that consists of three optional expressions, enclosed in parentheses and separated by semicolons, followed by a statement (usually a &lt;a href=&quot;block&quot;&gt;block statement&lt;/a&gt;) to be executed in the loop.</source>
          <target state="translated">Оператор &lt;strong&gt;for&lt;/strong&gt; создает цикл, состоящий из трех необязательных выражений, заключенных в круглые скобки и разделенных точками с запятой, за которыми следует оператор (обычно оператор &lt;a href=&quot;block&quot;&gt;блока&lt;/a&gt; ), который должен выполняться в цикле.</target>
        </trans-unit>
        <trans-unit id="dbaba40e57db93ab21dee53da06becedbf4d1aa4" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;function declaration&lt;/strong&gt; (function statement) defines a function with the specified parameters.</source>
          <target state="translated">&lt;strong&gt;Объявление функции&lt;/strong&gt; (функция оператор) определяет функцию с заданными параметрами.</target>
        </trans-unit>
        <trans-unit id="5246b915eb7c85d0437344cef9ea86765b90ccb2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;if statement&lt;/strong&gt; executes a statement if a specified condition is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;. If the condition is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;, another statement can be executed.</source>
          <target state="translated">Оператор &lt;strong&gt;if&lt;/strong&gt; выполняет оператор, если заданное условие &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;истинно&lt;/a&gt; . Если условие &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;ложное&lt;/a&gt; , может быть выполнен другой оператор.</target>
        </trans-unit>
        <trans-unit id="e17438ef55a4e09a7dbcf723659c6679b84bf06f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;iterable&lt;/strong&gt; protocol allows JavaScript objects to define or customize their iteration behavior, such as what values are looped over in a &lt;a href=&quot;statements/for...of&quot;&gt;&lt;code&gt;for..of&lt;/code&gt;&lt;/a&gt; construct. Some built-in types are &lt;a href=&quot;#Built-in_iterables&quot;&gt;built-in iterables&lt;/a&gt; with a default iteration behavior, such as &lt;a href=&quot;global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, while other types (such as &lt;a href=&quot;global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;) are not.</source>
          <target state="translated">&lt;strong&gt;Итерация&lt;/strong&gt; протокол позволяет объекты JavaScript , чтобы определить или изменить их поведение итерации, например, какие значения накинут в &lt;a href=&quot;statements/for...of&quot;&gt; &lt;code&gt;for..of&lt;/code&gt; &lt;/a&gt; конструкции. Некоторые встроенные типы являются &lt;a href=&quot;#Built-in_iterables&quot;&gt;встроенными&lt;/a&gt; итерациями с поведением итерации по умолчанию, например &lt;a href=&quot;global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; , тогда как другие типы (например, &lt;a href=&quot;global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; ) - нет.</target>
        </trans-unit>
        <trans-unit id="256bf006dce59aa8632fcb126bf4510bc31e4563" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;iterator&lt;/strong&gt; protocol defines a standard way to produce a sequence of values (either finite or infinite), and potentially a return value when all values have been generated.</source>
          <target state="translated">Протокол &lt;strong&gt;итератора&lt;/strong&gt; определяет стандартный способ создания последовательности значений (конечных или бесконечных) и, возможно, возвращаемого значения, когда все значения были сгенерированы.</target>
        </trans-unit>
        <trans-unit id="1dc9001af6987d19bbd223d74b3ee5b04eac7a1e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;labeled statement&lt;/strong&gt; can be used with &lt;a href=&quot;break&quot;&gt;&lt;code&gt;break&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;continue&quot;&gt;&lt;code&gt;continue&lt;/code&gt;&lt;/a&gt; statements. It is prefixing a statement with an identifier which you can refer to.</source>
          <target state="translated">&lt;strong&gt;Помеченный оператор&lt;/strong&gt; может использоваться с &lt;a href=&quot;break&quot;&gt; &lt;code&gt;break&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;continue&quot;&gt; &lt;code&gt;continue&lt;/code&gt; &lt;/a&gt; заявления. Это префикс оператора с идентификатором, на который вы можете ссылаться.</target>
        </trans-unit>
        <trans-unit id="c4e0f32aa1a33c6925dc3ea4d6f40ca6f8515801" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;optional chaining&lt;/strong&gt; operator (&lt;code&gt;?.&lt;/code&gt;) permits reading the value of a property located deep within a chain of connected objects without having to expressly validate that each reference in the chain is valid. The &lt;code&gt;?.&lt;/code&gt; operator functions similarly to the &lt;code&gt;.&lt;/code&gt; chaining operator, except that instead of causing an error if a reference is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/nullish&quot;&gt;nullish&lt;/a&gt; (&lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;), the expression short-circuits with a return value of &lt;code&gt;undefined&lt;/code&gt;. When used with function calls, it returns &lt;code&gt;undefined&lt;/code&gt; if the given function does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5afe6c326deb45bb1c28c14ba0b8f1e9c6e7f08" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;reducer&lt;/strong&gt; function is fed four parameters:</source>
          <target state="translated">В функцию &lt;strong&gt;редуктора&lt;/strong&gt; подаются четыре параметра:</target>
        </trans-unit>
        <trans-unit id="9b6bcb7edc02f17e651ff5c8787ada8366e154a8" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;reducer&lt;/strong&gt; function takes four arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a91b7f158fd8ddfc727835a7d5c6d3fe0e61fa6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;rest parameter&lt;/strong&gt; syntax allows us to represent an indefinite number of arguments as an array.</source>
          <target state="translated">&lt;strong&gt;Параметр остального&lt;/strong&gt; синтаксис позволяет представить неограниченное число аргументов в массиве.</target>
        </trans-unit>
        <trans-unit id="38cf1e83c03988b5e1319e2f037c50f8bc3c82c5" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;super&lt;/strong&gt; keyword is used to access and call functions on an object's parent.</source>
          <target state="translated">&lt;strong&gt;Супер&lt;/strong&gt; ключевое слово используется для доступа и вызова функций на родителя объекта.</target>
        </trans-unit>
        <trans-unit id="b78672748a55807b6043e5e7895d093fd7da02a5" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;value&lt;/strong&gt; of the &lt;strong&gt;first element&lt;/strong&gt; in the array that satisfies the provided testing function. Otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9b434bf4770e269f3ed85648191f4b9db54c86" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;value&lt;/strong&gt; of the &lt;strong&gt;first element&lt;/strong&gt; in the array that satisfies the provided testing function; otherwise, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">&lt;strong&gt;Значение&lt;/strong&gt; из &lt;strong&gt;первого элемента&lt;/strong&gt; в массиве , который удовлетворяет условиям функции; в противном случае возвращается &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02842c94116a9c6809ef6eee7ec3c23722a1feab" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;while statement&lt;/strong&gt; creates a loop that executes a specified statement as long as the test condition evaluates to true. The condition is evaluated before executing the statement.</source>
          <target state="translated">Оператор &lt;strong&gt;while&lt;/strong&gt; создает цикл, который выполняет указанный оператор, пока условие проверки истинно. Условие оценивается перед выполнением оператора.</target>
        </trans-unit>
        <trans-unit id="fd60c91aefb449ecfe0c5d63d04422740e88d367" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;with statement&lt;/strong&gt; extends the scope chain for a statement.</source>
          <target state="translated">Оператор &lt;strong&gt;with&lt;/strong&gt; расширяет цепочку областей видимости для оператора.</target>
        </trans-unit>
        <trans-unit id="20de650704584a71ec1cc4bd3892d441cac81fa1" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;n&lt;/var&gt;th string found by a parenthesized capture group (including named capturing groups), provided the first argument to &lt;code&gt;replace()&lt;/code&gt; was a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. (Corresponds to &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc. above.) For example, if &lt;code&gt;/(\a+)(\b+)/&lt;/code&gt;, was given, &lt;code&gt;p1&lt;/code&gt; is the match for &lt;code&gt;\a+&lt;/code&gt;, and &lt;code&gt;p2&lt;/code&gt; for &lt;code&gt;\b+&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b566c21e73336eba47f52bacbf5bbdea42d1a7b" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;n&lt;/var&gt;th string found by a parenthesized capture group, provided the first argument to &lt;code&gt;replace()&lt;/code&gt; was a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. (Corresponds to &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, etc. above.) For example, if &lt;code&gt;/(\a+)(\b+)/&lt;/code&gt;, was given, &lt;code&gt;p1&lt;/code&gt; is the match for &lt;code&gt;\a+&lt;/code&gt;, and &lt;code&gt;p2&lt;/code&gt; for &lt;code&gt;\b+&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4b7d3e8a9687f79e6ec51636e21057aed22d25" translate="yes" xml:space="preserve">
          <source>The Array object being traversed</source>
          <target state="translated">Пересекаемый объект массива</target>
        </trans-unit>
        <trans-unit id="124954ca57725d5f3aa87356bc8cd739a5f724f9" translate="yes" xml:space="preserve">
          <source>The Atomic operations are installed on an &lt;code&gt;Atomics&lt;/code&gt; module. Unlike the other global objects, &lt;code&gt;Atomics&lt;/code&gt; is not a constructor. You cannot use it with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt; or invoke the &lt;code&gt;Atomics&lt;/code&gt; object as a function. All properties and methods of &lt;code&gt;Atomics&lt;/code&gt; are static (as is the case with the &lt;a href=&quot;math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; object, for example).</source>
          <target state="translated">Атомарные операции установлены в модуле &lt;code&gt;Atomics&lt;/code&gt; . В отличие от других глобальных объектов, &lt;code&gt;Atomics&lt;/code&gt; не является конструктором. Вы не можете использовать его с &lt;a href=&quot;../operators/new&quot;&gt;оператором &lt;/a&gt; &lt;code&gt;new&lt;/code&gt; или вызывать объект &lt;code&gt;Atomics&lt;/code&gt; как функцию. Все свойства и методы &lt;code&gt;Atomics&lt;/code&gt; статичны (как, например, в случае с объектом &lt;a href=&quot;math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c9360b8cf41eb0b67799088a47ba963c3ed2252b" translate="yes" xml:space="preserve">
          <source>The BCP 47 language tag for the locale actually used. If any Unicode extension values were requested in the input BCP 47 language tag that led to this locale, the key-value pairs that were requested and are supported for this locale are included in &lt;code&gt;locale&lt;/code&gt;.</source>
          <target state="translated">Тег языка BCP 47 для фактически используемой локали. Если какие-либо значения расширения Unicode были запрошены во входном теге языка BCP 47, который привел к этому языку, запрошенные пары ключ-значение, которые поддерживаются для этого языкового стандарта, включаются в &lt;code&gt;locale&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf28f8279826d3b43c23b8e24d4d008e353709bf" translate="yes" xml:space="preserve">
          <source>The Debugger in the Firefox Developer Tools</source>
          <target state="translated">Отладчик в инструментах для разработчиков Firefox</target>
        </trans-unit>
        <trans-unit id="999324758919789edc66930d918929098458f194" translate="yes" xml:space="preserve">
          <source>The ECMA-402 (ECMAScript Intl API) standard specifies standard objects and methods that enable language sensitive date and time formatting (available in Chrome 24+, Firefox 29+, IE11+, Safari10+).</source>
          <target state="translated">Стандарт ECMA-402 (ECMAScript Intl API)определяет стандартные объекты и методы,которые позволяют форматирование даты и времени с учетом особенностей языка (доступно в Chrome 24+,Firefox 29+,IE11+,Safari10+).</target>
        </trans-unit>
        <trans-unit id="d94e9a66058021ba2b982151b84285c419bc2f95" translate="yes" xml:space="preserve">
          <source>The ECMAScript 5 specification of the function &lt;code&gt;parseInt&lt;/code&gt; no longer allows implementations to treat Strings beginning with a &lt;code&gt;0&lt;/code&gt; character as octal values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e137fb633ed9a984aae87f772a0fc0ed4a1c417" translate="yes" xml:space="preserve">
          <source>The ECMAScript 5 specification of the function &lt;code&gt;parseInt&lt;/code&gt; no longer allows implementations to treat Strings beginning with a &lt;code&gt;0&lt;/code&gt; character as octal values. ECMAScript 5 states:</source>
          <target state="translated">Спецификация ECMAScript 5 функции &lt;code&gt;parseInt&lt;/code&gt; больше не позволяет реализациям обрабатывать строки, начинающиеся с символа &lt;code&gt;0&lt;/code&gt; , как восьмеричные значения. ECMAScript 5 утверждает:</target>
        </trans-unit>
        <trans-unit id="a983278d136c9491e485caeae90dc290a6fe56bb" translate="yes" xml:space="preserve">
          <source>The ECMAScript epoch and timestamps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66e85d25ba9cddbc980e459a583fda8ceb4e597" translate="yes" xml:space="preserve">
          <source>The ECMAScript specification mentions &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-rules-of-automatic-semicolon-insertion&quot;&gt;three rules of semicolon insertion&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3216945e8685ea4af8a3c93dd0029a0b22151b1" translate="yes" xml:space="preserve">
          <source>The ECMAScript specification mentions&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-rules-of-automatic-semicolon-insertion&quot;&gt; three rules of semicolon insertion&lt;/a&gt;.</source>
          <target state="translated">В спецификации ECMAScript упоминаются &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-rules-of-automatic-semicolon-insertion&quot;&gt;три правила вставки точки с запятой&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8208825fde42cabcd8bbb76cd476940ce51a4654" translate="yes" xml:space="preserve">
          <source>The ECMAScript specification states: If the String does not conform to the standard format the function may fall back to any implementation&amp;ndash;specific heuristics or implementation&amp;ndash;specific parsing algorithm. Unrecognizable strings or dates containing illegal element values in ISO formatted strings shall cause &lt;code&gt;Date.parse()&lt;/code&gt; to return &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Спецификация ECMAScript гласит: Если строка не соответствует стандартному формату, функция может вернуться к любой эвристике, зависящей от реализации, или алгоритму анализа, зависящему от реализации. Нераспознаваемые строки или даты, содержащие недопустимые значения элементов в форматированных строках ISO, должны вызывать &lt;code&gt;Date.parse()&lt;/code&gt; возвращать &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21b41da293c735b80d7d1ce381809c1e39621095" translate="yes" xml:space="preserve">
          <source>The Intl.Locale Polyfill</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b233be2c7e1b4878fc214af2673200e43bf469e" translate="yes" xml:space="preserve">
          <source>The Intl.RelativeTimeFormat API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab764a8c99b12a3a98198c6866656e7cedcca17" translate="yes" xml:space="preserve">
          <source>The Iterator protocol</source>
          <target state="translated">Протокол Итератора</target>
        </trans-unit>
        <trans-unit id="ebe959a9416798fdd89d0c99dc80ab2421f8037e" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;-only exception &quot;0-prefixed octal literals and octal escape sequences are deprecated; for octal literals use the &quot;0o&quot; prefix instead&quot; occurs when deprecated octal literals and octal escape sequences are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26726ad4122323705eeb44d5f930918ba56d242d" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;-only exception &quot;Assignment to undeclated variable&quot; occurs when the value has been assigned to an undeclared variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f3f3fec0af80d5357c6144f68fea00a8e0b23b" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;-only exception &quot;applying the 'delete' operator to an unqualified name is deprecated&quot; occurs when variables are attempted to be deleted using the &lt;code&gt;&lt;a href=&quot;../operators/delete&quot;&gt;delete&lt;/a&gt;&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f551f235bc7ae19ad07d34b50aeede46fc22f9b" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;-only exception &quot;deprecated caller or arguments usage&quot; occurs when the deprecated &lt;a href=&quot;../global_objects/function/caller&quot;&gt;&lt;code&gt;Function.caller&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/function/arguments&quot;&gt;&lt;code&gt;Function.arguments&lt;/code&gt;&lt;/a&gt; properties are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55463b29bb63622e2ad88ec19935747509ea7bc7" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;-only exception &quot;for-in loop head declarations may not have initializers&quot; occurs when the head of a&lt;a href=&quot;../statements/for...in&quot;&gt; for...in&lt;/a&gt; contains an initializer expression, such as |&lt;code&gt;for (var i = 0 in obj)&lt;/code&gt;|. This is not allowed in for-of loops in strict mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7414368c8d17c3ff4b3c671da5b408e939ad11" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;-only exception &quot;is read-only&quot; occurs when a global variable or object property that was assigned to is a read-only property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04cf6b93cb6724ace3e8ad55af086177f9674b0" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;-only exception &quot;setting getter-only property&quot; occurs when there is an attempt to set a new value to a property for which only a &lt;a href=&quot;../functions/get&quot;&gt;getter&lt;/a&gt; is specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d2b0817c5a59c146bb6d497e351a4c2b6bcb73" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;-only exception &quot;variable redeclares argument&quot; occurs when the same variable name occurs as a function parameter and is then redeclared using a &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; assignment in a function body again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ff54c271b03aa5af52e6d11889bb6b4fd4205d" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;code&gt;Array&lt;/code&gt; class is a global object that is used in the construction of arrays; which are high-level, list-like objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6becbd4e850d3a8a0a7babdb926cca557de3dc9c" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;code&gt;Array&lt;/code&gt; object is a global object that is used in the construction of arrays; which are high-level, list-like objects.</source>
          <target state="translated">Объект JavaScript &lt;code&gt;Array&lt;/code&gt; - это глобальный объект, который используется при построении массивов; которые представляют собой высокоуровневые объекты в виде списков.</target>
        </trans-unit>
        <trans-unit id="d93195924299629cef4916635b4b1e0990c4dbde" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;code&gt;Date&lt;/code&gt; object provides uniform behavior across platforms. The time value can be passed between systems to create a date that represents the same moment in time.</source>
          <target state="translated">Объект JavaScript &lt;code&gt;Date&lt;/code&gt; обеспечивает единообразное поведение на разных платформах. Значение времени может передаваться между системами для создания даты, представляющей один и тот же момент времени.</target>
        </trans-unit>
        <trans-unit id="bafdbb63aeaa1f07ea2da5fed805a6b7854d004c" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;code&gt;Date&lt;/code&gt; object supports a number of UTC (universal) methods, as well as local time methods. UTC, also known as Greenwich Mean Time (GMT), refers to the time as set by the World Time Standard. The local time is the time known to the computer where JavaScript is executed.</source>
          <target state="translated">Объект JavaScript &lt;code&gt;Date&lt;/code&gt; поддерживает ряд методов UTC (универсальных), а также методы местного времени. UTC, также известное как среднее время по Гринвичу (GMT), относится к времени, установленному по мировому стандарту времени. Местное время - это время, известное компьютеру, на котором выполняется JavaScript.</target>
        </trans-unit>
        <trans-unit id="ade1d2edfa85326eb7f0bf4e7c00052cb259a7aa" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;code&gt;Math.log()&lt;/code&gt; function is equivalent to &lt;em&gt;ln(x)&lt;/em&gt; in mathematics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156d00682b0b8947f00a38049180c99849ecf542" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;code&gt;Math.log()&lt;/code&gt;function is equivalent to &lt;em&gt;ln(x)&lt;/em&gt; in mathematics.</source>
          <target state="translated">Функция JavaScript &lt;code&gt;Math.log()&lt;/code&gt; эквивалентна &lt;em&gt;ln (x)&lt;/em&gt; в математике.</target>
        </trans-unit>
        <trans-unit id="dde583114572ab3af5b6024979e219b534fa142d" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;code&gt;delete&lt;/code&gt; removes a property from an object; if no more references to the same property are held, it is eventually released automatically.</source>
          <target state="translated">Операция &lt;code&gt;delete&lt;/code&gt; JavaScript удаляет свойство из объекта; если больше нет ссылок на то же свойство, оно автоматически освобождается.</target>
        </trans-unit>
        <trans-unit id="6ec138dd8b75217f1ba65c78e76baf0df10c599a" translate="yes" xml:space="preserve">
          <source>The JavaScript &lt;strong&gt;Number&lt;/strong&gt; type is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Floating-point_arithmetic&quot;&gt;double-precision 64-bit binary format IEEE 754&lt;/a&gt; value, like &lt;code&gt;double&lt;/code&gt; in Java or C#. This means it can represent fractional values, but there are some limits to what it can store. A Number only keeps about 17 decimal places of precision; arithmetic is subject to &lt;a href=&quot;https://en.wikipedia.org/wiki/Floating-point_arithmetic#Representable_numbers,_conversion_and_rounding&quot;&gt;rounding&lt;/a&gt;. The largest value a Number can hold is about 1.8&amp;times;10&lt;sup&gt;308&lt;/sup&gt;. Numbers beyond that are replaced with the special Number constant &lt;a href=&quot;infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feacf6d164087c84342adcbacb255f2b0ba72579" translate="yes" xml:space="preserve">
          <source>The JavaScript date is based on a time value that is milliseconds since midnight January 1, 1970, UTC. A day holds 86,400,000 milliseconds. The JavaScript &lt;code&gt;Date&lt;/code&gt; object range is -100,000,000 days to 100,000,000 days relative to January 1, 1970 UTC.</source>
          <target state="translated">Дата в JavaScript основана на значении времени в миллисекундах с полуночи 1 января 1970 года по всемирному координированному времени. В сутках 86 400 000 миллисекунд. Диапазон объекта JavaScript &lt;code&gt;Date&lt;/code&gt; составляет от -100000000 до 100000000 дней относительно 1 января 1970 года по всемирному координированному времени.</target>
        </trans-unit>
        <trans-unit id="b9de9c5fa9fea058719adf889a9d0bba2b33c317" translate="yes" xml:space="preserve">
          <source>The JavaScript debugger has functionality similar to that provided by this method, as well as other debugging options. For information on the debugger, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Venkman&quot;&gt;Venkman&lt;/a&gt;.</source>
          <target state="translated">Отладчик JavaScript имеет функции, аналогичные функциям этого метода, а также другие параметры отладки. Для получения информации об отладчике см. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Venkman&quot;&gt;Venkman&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="649d4375faf5a3655990f44df34ac81ef90c4499" translate="yes" xml:space="preserve">
          <source>The JavaScript engine may hold references to things which look like they are unreachable (e.g., in closures, or inline caches).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7c7adbe730ba9c8a0ebae30a77f45bdddbbb05b" translate="yes" xml:space="preserve">
          <source>The JavaScript error &quot;unterminated string literal&quot; occurs when there is an unterminated &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; somewhere. String literals must be enclosed by single (&lt;code&gt;'&lt;/code&gt;) or double (&lt;code&gt;&quot;&lt;/code&gt;) quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17f37cc4b690a7cdac7f877511ba78ff6ca05f0" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;&lt;code&gt;'use strict'&lt;/code&gt; not allowed in function&quot; occurs when a &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive is used at the top of a function with &lt;a href=&quot;../functions/default_parameters&quot;&gt;default parameters&lt;/a&gt;, &lt;a href=&quot;../functions/rest_parameters&quot;&gt;rest parameters&lt;/a&gt;, or &lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;destructuring parameters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef9f5d9116bcd850471393b2b35350a12e66246" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;&lt;em&gt;variable&lt;/em&gt; is a reserved identifier&quot; occurs when &lt;a href=&quot;../lexical_grammar#Keywords&quot;&gt;reserved keywords&lt;/a&gt; are used as identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32728f40783b2f37366bb0963cdfa0c352658b1e" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;&lt;em&gt;variable&lt;/em&gt; is not defined&quot; occurs when there is a non-existent variable referenced somewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70235774e28798618e37299c80a3cee7dc92001e" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;&lt;em&gt;x&lt;/em&gt; is (not) &lt;em&gt;y&lt;/em&gt;&quot; occurs when there was an unexpected type. Oftentimes, unexpected &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7589f5657100f70ebea49b1973f97e210bf028" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;Invalid array length&quot; occurs when creating an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../global_objects/arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; which has a length which is either negative or larger or equal to 2&lt;sup&gt;32&lt;/sup&gt;, or when setting the &lt;a href=&quot;../global_objects/array/length&quot;&gt;&lt;code&gt;Array.length&lt;/code&gt;&lt;/a&gt; property to a value which is either negative or larger or equal to 2&lt;sup&gt;32&lt;/sup&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd825f13a4d3ba2302325f1336e448e25ea70b4" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;Invalid code point&quot; occurs when &lt;a href=&quot;../global_objects/nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; values, negative Integers (-1), non-Integers (5.4), or values larger than 0x10FFFF (1114111) are used with &lt;a href=&quot;../global_objects/string/fromcodepoint&quot;&gt;&lt;code&gt;String.fromCodePoint()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b95d187b0889399979097e9eb1963caa4a63ad7" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;Permission denied to access property&quot; occurs when there was an attempt to access an object for which you have no permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ffb522328b9a7ffd7971e13adee7ff15b2f0eb" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;a declaration in the head of a for-of loop can't have an initializer&quot; occurs when the head of a&lt;a href=&quot;../statements/for...of&quot;&gt; for...of&lt;/a&gt; loop contains an initializer expression such as |&lt;code&gt;for (var i = 0 of iterable)&lt;/code&gt;|. This is not allowed in for-of loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbd012646c0864d055f4d98b503a699d5fdf363" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;called on incompatible target (or object)&quot; occurs when a function (on a given object), is called with a &lt;code&gt;this&lt;/code&gt; not corresponding to the type expected by the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd5f5b074cf882e59bc0c0f627a5eebc13509c5" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;can't access dead object&quot; occurs when Firefox disallows add-ons to keep strong references to DOM objects after their parent document has been destroyed to improve in memory usage and to prevent memory leaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dacf41bdac32870a2b6cd57b99df467b863e82c" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;can't access lexical declaration `&lt;em&gt;variable&lt;/em&gt;' before initialization&quot; occurs when a lexical variable was accessed before it was initialized. This happens within any block statement, when &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; declarations are accessed before they are defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac43f0c6b513d55950d4e079a7b27f1d7a5bcb2" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;can't access property&quot; occurs when property access was operated on &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff67e114d13cd0d3b7e8d36fdb3768108335c2b3" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;can't define property &quot;x&quot;: &quot;obj&quot; is not extensible&quot; occurs when &lt;a href=&quot;../global_objects/object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt; marked an object as no longer extensible, so that it will never have properties beyond the ones it had at the time it was marked as non-extensible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a41d9150654f60fa152822bf1abbe4f83071c79" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;can't delete non-configurable array element&quot; occurs when it was attempted to &lt;a href=&quot;../global_objects/array/length#Shortening_an_array&quot;&gt;shorten the length&lt;/a&gt; of an array, but one of the array's elements is &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25dd44d37ab5b69a8615dd787f3e9a6f84609ab5" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;can't redefine non-configurable property&quot; occurs when it was attempted to redefine a property, but that property is &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a741d3e300fd7faae8de6be7a13ff373286fe716" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;cyclic object value&quot; occurs when object references were found in &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;. &lt;a href=&quot;../global_objects/json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; doesn't try to solve them and fails accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c136f3367a83dcd4b71f702b583ad87b004c505d" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;function statement requires a name&quot; occurs when there is a &lt;a href=&quot;../statements/function&quot;&gt;function statement&lt;/a&gt; in the code that requires a name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e412c215138dd7ad9e137e57e13570822d28dbb" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;identifier starts immediately after numeric literal&quot; occurs when an identifier started with a digit. Identifiers can only start with a letter, underscore (_), or dollar sign ($).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a7cb4435592c84c592854ec0bea2d8a1565f3e" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;illegal character&quot; occurs when there is an invalid or unexpected token that doesn't belong at this position in the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a90d17cedd656430cb66873bb90e667a26dfd8" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;invalid 'instanceof' operand&quot; occurs when the right hand side operands of the &lt;a href=&quot;../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt; operator&lt;/a&gt; isn't used with a constructor object, i.e. an object which has a &lt;code&gt;prototype&lt;/code&gt; property and is callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcb9ad396fe6bd40a8df5dd927688374453a3ba" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;invalid Array.prototype.sort argument&quot; occurs when the argument of &lt;a href=&quot;../global_objects/array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt; isn't either &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or a function which compares its operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e2b89a62286e9bae74fe5753d6e89c1584d161" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;invalid arguments&quot; occurs when &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; constructors are provided with a wrong argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e75dbd0c2d13cb82bc954b718bedf77a0c5c285" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;invalid assignment left-hand side&quot; occurs when there was an unexpected assignment somewhere. For example, a single &quot;&lt;code&gt;=&lt;/code&gt;&quot; sign was used instead of &quot;&lt;code&gt;==&lt;/code&gt;&quot; or &quot;&lt;code&gt;===&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3343a525d0f093042fd21cf468588420ba8c9ec" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;invalid assignment to const&quot; occurs when it was attempted to alter a constant value. JavaScript &lt;code&gt;&lt;a href=&quot;../statements/const&quot;&gt;const&lt;/a&gt;&lt;/code&gt; declarations can't be re-assigned or redeclared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fcde2c69cfd32d5bfd6092809d415c4d45f04c" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;invalid date&quot; occurs when a string leading to an invalid date has been provided to &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/date/parse&quot;&gt;&lt;code&gt;Date.parse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da0dea69158b7c792941ba03637f040aad66d0e" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;invalid regular expression flag&quot; occurs when the flags, defined after the second slash in regular expression literal, are not one of &lt;code&gt;g&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, &lt;code&gt;m&lt;/code&gt;, &lt;code&gt;s&lt;/code&gt;, &lt;code&gt;u&lt;/code&gt;, or &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bb020260c8bc166dd013bb81ac3b38a154ca77" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;is not a constructor&quot; occurs when there was an attempt to use an object or a variable as a constructor, but that object or variable is not a constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecf8ff7532758548c77ccd9a104f1b539b5901c" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;is not a function&quot; occurs when there was an attempt to call a value from a function, but the value is not actually a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845a331aa746bd9bfb455133fb16ad92f3082e3f" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;is not a non-null object&quot; occurs when an object is expected somewhere and wasn't provided. &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is not an object and won't work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55fa680b04da3c25a38df72209d2fdcbd84e3c3" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;is not iterable&quot; occurs when the value which is given as the right hand-side of &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for&amp;hellip;of &lt;/a&gt;or as argument of a function such as &lt;a href=&quot;../global_objects/promise/all&quot;&gt;&lt;code&gt;Promise.all&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/typedarray/from&quot;&gt;&lt;code&gt;TypedArray.from&lt;/code&gt;&lt;/a&gt;, is not an &lt;a href=&quot;../iteration_protocols&quot;&gt;iterable object&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050aa114f5c51494cb128c847136ca3043d3b771" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;malformed URI sequence&quot; occurs when URI encoding or decoding wasn't successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516ff155ee786a73c9ed98789185fe4008febb50" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;malformed formal parameter&quot; occurs when the argument list of a &lt;code&gt;&lt;a href=&quot;../global_objects/function&quot;&gt;Function()&lt;/a&gt;&lt;/code&gt; constructor call is invalid somehow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e67edc5f0d04f6740d467533c00639355a1dbc" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing ) after argument list&quot; occurs when there is an error with how a function is called. This might be a typo, a missing operator, or an unescaped string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf54031100022dd38b887e6b1c59a82658843738" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing ) after condition&quot; occurs when there is an error with how an &lt;code&gt;&lt;a href=&quot;../statements/if...else&quot;&gt;if&lt;/a&gt;&lt;/code&gt; condition is written. It must appear in parenthesis after the &lt;code&gt;if&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae6eb006306c2b71ce9f7c34ede4486d34f4b50" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing : after property id&quot; occurs when objects are created using the &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer&lt;/a&gt; syntax. A colon (&lt;code&gt;:&lt;/code&gt;) separates keys and values for the object's properties. Somehow, this colon is missing or misplaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd892dbfa95827dedee1fc0544508a42c898002" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing ; before statement&quot; occurs when there is a semicolon (&lt;code&gt;;&lt;/code&gt;) missing somewhere and can't be added by &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion (ASI)&lt;/a&gt;. You need to provide a semicolon, so that JavaScript can parse the source code correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b175c52c509e230ebc890a339172f86d8e7669b5" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing = in const declaration&quot; occurs when a const declaration was not given a value in the same statement (like &lt;code&gt;const RED_FLAG;&lt;/code&gt;). You need to provide one (&lt;code&gt;const RED_FLAG = '#ff0'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1044299bd7facf05649aa1c5710b55b1474e565" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing ] after element list&quot; occurs when there is an error with the array initializer syntax somewhere. Likely there is a closing bracket (&quot;&lt;code&gt;]&lt;/code&gt;&quot;) or a comma (&quot;&lt;code&gt;,&lt;/code&gt;&quot;) missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6165ab362a043b34a453304eb723216b03b8c1" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing formal parameter&quot; occurs when your function declaration is missing valid parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7bf5439ad8e009dafc9fc12c15be85cc1d4d15" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing name after . operator&quot; occurs when there is a problem with how the dot operator (&lt;code&gt;.&lt;/code&gt;) is used for &lt;a href=&quot;../operators/property_accessors&quot;&gt;property access&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42050463eb07a2915dd80d342ed11a113352530b" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing variable name&quot; occurs way too often as naming things is so hard. Or maybe a comma is wrong. Check for typos!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dd1498651f71215a65ca91bcbef89b45ec51a1" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing } after function body&quot; occurs when there is a syntax mistake when creating a function somewhere. Check if any closing curly brackets or parenthesis are in the correct order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbece9b4658b7c4ba949079e39ac5593a2ead99" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;missing } after property list&quot; occurs when there is a mistake in the &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer&lt;/a&gt; syntax somewhere. Might be in fact a missing curly bracket, but could also be a missing comma.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b325ac47e7217e9cb494d1795daa67e508f5680" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;more arguments needed&quot; occurs when there is an error with how a function is called. More arguments need to be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e029453a0e092b42cc8d17bf72aa6017cbe372ff" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;null (or undefined) has no properties&quot; occurs when you attempt to access properties of &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. They don't have any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563815a598e5c404550528fe600de9fb7fa6c4bc" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;precision is out of range&quot; occurs when a number that's outside of the range of 0 and 20 (or 21) was passed into &lt;code&gt;toFixed&lt;/code&gt; or &lt;code&gt;toPrecision&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1019002b6e15ddfadbd2a4cbf2612467990bb551" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;property is non-configurable and can't be deleted&quot; occurs when it was attempted to delete a property, but that property is &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Properties&quot;&gt;non-configurable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6f7b435c0559582574d548898f6fe8734b8477" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;radix must be an integer at least 2 and no greater than 36&quot; occurs when the optional &lt;code&gt;radix&lt;/code&gt; parameter of the &lt;a href=&quot;../global_objects/number/tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../global_objects/bigint/tostring&quot;&gt;&lt;code&gt;BigInt.prototype.toString()&lt;/code&gt;&lt;/a&gt; method was specified and is not between 2 and 36.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afd13125c66c7568544cae442a04e1b8ddbd2e7" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;redeclaration of formal parameter&quot; occurs when the same variable name occurs as a function parameter and is then redeclared using a &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; assignment in a function body again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcbfedf7f457142e6b2a20fc3ddafa6bad28f30" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;reduce of empty array with no initial value&quot; occurs when a reduce function is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82bb0e41358f8f30b5777d5e3653cfbe58092a4" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;repeat count must be less than infinity&quot; occurs when the &lt;a href=&quot;../global_objects/string/repeat&quot;&gt;&lt;code&gt;String.prototype.repeat()&lt;/code&gt;&lt;/a&gt; method is used with a &lt;code&gt;count&lt;/code&gt; argument that is infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d44221a35070d9d5d4c5411a7606285c0f1452" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;repeat count must be non-negative&quot; occurs when the &lt;a href=&quot;../global_objects/string/repeat&quot;&gt;&lt;code&gt;String.prototype.repeat()&lt;/code&gt;&lt;/a&gt; method is used with a &lt;code&gt;count&lt;/code&gt; argument that is a negative number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adae520003f8e5b2c5b66eacbe6f936e06ed474" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;return (or yield) not in function&quot; occurs when a &lt;code&gt;&lt;a href=&quot;../statements/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../operators/yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; statement is called outside of a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be313c71b38c47299dc9c2133757c39d8ba1d075" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;right-hand side of 'in' should be an object&quot; occurs when the &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; was used to search in strings, or in numbers, or other primitive types. It can only be used to check if a property is in an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebee16f598e6e227ca591bfbe91ec1f57deaaa4" translate="yes" xml:space="preserve">
          <source>The JavaScript exception &quot;too much recursion&quot; or &quot;Maximum call stack size exceeded&quot; occurs when there are too many function calls, or a function is missing a base case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e2e617da81fa3b84084ddd00cba90355008b22" translate="yes" xml:space="preserve">
          <source>The JavaScript exceptions &quot;unexpected token&quot; occur when a specific language construct was expected, but something else was provided. This might be a simple typo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8121692b1681cda7230fd3809bb4628ffc894cef" translate="yes" xml:space="preserve">
          <source>The JavaScript exceptions thrown by &lt;a href=&quot;../global_objects/json/parse&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt; occur when string failed to be parsed as JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d28aae23ee954321752888e11c516cf9eed364d" translate="yes" xml:space="preserve">
          <source>The JavaScript language is intended to be used within some larger environment, be it a browser, server-side scripts, or similar. For the most part, this reference attempts to be environment-agnostic and does not target a web browser environment.</source>
          <target state="translated">Язык JavaScript предназначен для использования в какой-то более крупной среде,будь то браузер,серверные скрипты или подобные.По большей части эта ссылка является попыткой диагностики окружающей среды и не предназначена для окружения веб-браузера.</target>
        </trans-unit>
        <trans-unit id="69baf2e55fa7ceef3be5f6200851de4d7761bde2" translate="yes" xml:space="preserve">
          <source>The JavaScript reference serves as a repository of facts about the JavaScript language. The entire language is described here in detail. As you write JavaScript code, you'll refer to these pages often (thus the title &quot;JavaScript reference&quot;). If you're learning JavaScript, or need help understanding some of its capabilities or features, check out the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript guide&lt;/a&gt;.</source>
          <target state="translated">Справочник по JavaScript служит хранилищем фактов о языке JavaScript. Здесь подробно описан весь язык. Когда вы пишете код JavaScript, вы часто будете обращаться к этим страницам (отсюда и название &amp;laquo;Справочник по JavaScript&amp;raquo;). Если вы изучаете JavaScript или вам нужна помощь в понимании некоторых его возможностей или функций, ознакомьтесь с &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;руководством&lt;/a&gt; по JavaScript .</target>
        </trans-unit>
        <trans-unit id="928ddf3866dc4c8a9079b26684797d11237b2f6b" translate="yes" xml:space="preserve">
          <source>The JavaScript reference serves as a repository of facts about the JavaScript language. The entire language is described here in detail. As you write JavaScript code, you'll refer to these pages often (thus the title &quot;JavaScript reference&quot;). If you're learning JavaScript, or need help understanding some of its capabilities or features, check out the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a86e6d83878d168254a926a549d462895c9fc19" translate="yes" xml:space="preserve">
          <source>The JavaScript strict mode exception &quot;can't assign to property&quot; occurs when attempting to create a property on &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;primitive&lt;/a&gt; value such as a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/symbol&quot;&gt;symbol&lt;/a&gt;, a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/string&quot;&gt;string&lt;/a&gt;, a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/number&quot;&gt;number&lt;/a&gt; or a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/boolean&quot;&gt;boolean&lt;/a&gt;. &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;Primitive&lt;/a&gt; values cannot hold any &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/property/JavaScript&quot;&gt;property&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a882c96ea02d77b1d2eecb7851ab92b654c6b1" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;-file- is being assigned a //# sourceMappingURL, but already has one.&quot; occurs when a source map has been specified more than once for a given JavaScript source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a2f0567bda30e61a12dcc9fd22c38a564b2513" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;08 (or 09) is not a legal ECMA-262 octal constant&quot; occurs when &lt;code&gt;08&lt;/code&gt; or &lt;code&gt;09&lt;/code&gt; number literals are used. They can't be interpreted as an octal number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae1badad27ce8bd409f6af357a51a5fec110f6b" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;Date.prototype.toLocaleFormat is deprecated; consider using Intl.DateTimeFormat instead&quot; occurs when the non-standard &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt;&lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt;&lt;/a&gt; method is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b7038a29f656641da0bd71b655bf9ea8aee924" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;JavaScript 1.6's for-each-in loops are deprecated; consider using ES6 for-of instead&quot; occurs when a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for_each...in&quot;&gt;&lt;code&gt;for each (variable in obj)&lt;/code&gt;&lt;/a&gt; statement is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc48808220b1b2eac1d7b44a571b6b66aedc029" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;Using &lt;code&gt;//@&lt;/code&gt; to indicate sourceURL pragmas is deprecated. Use &lt;code&gt;//#&lt;/code&gt; instead&quot; occurs when there is a deprecated source map syntax in a JavaScript source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b3705c3b05fd9c2cb8fc6dd443d196253b217f" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;expression closures are deprecated&quot; occurs when the non-standard &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Expression_closures&quot;&gt;expression closure&lt;/a&gt; syntax (shorthand function syntax) is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee1cf1f243bc4e5937adddebb43ada8914847ba" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;reference to undefined property&quot; occurs when a script attempted to access an object property which doesn't exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a50f0ac94fb5146759cdab404101a5bec0361d" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;test for equality (==) mistyped as assignment (=)?&quot; occurs when there was an assignment (&lt;code&gt;=&lt;/code&gt;) when you would normally expect a test for equality (&lt;code&gt;==&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e79dbb106828c2540ea3883a4db0ce8e09ad81" translate="yes" xml:space="preserve">
          <source>The JavaScript warning &quot;unreachable code after return statement&quot; occurs when using an expression after a &lt;a href=&quot;../statements/return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; statement, or when using a semicolon-less return statement but including an expression directly after.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155d7cf4a3fa091bf436281a15947f386d5b8211" translate="yes" xml:space="preserve">
          <source>The JavaScript warning about string generics occurs in Firefox versions prior to 68. String generics have been removed starting with Firefox 68.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2875bf76ad8a6471989cac72eada74e35e46e9e0" translate="yes" xml:space="preserve">
          <source>The Modern JavaScript Tutorial(javascript.info): &lt;a href=&quot;https://javascript.info/import-export&quot;&gt;Export and Import&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919927e83ec2f24b89b0265f81550441ec6b2ae2" translate="yes" xml:space="preserve">
          <source>The Promise returned by &lt;code&gt;catch()&lt;/code&gt; is rejected if &lt;code&gt;&lt;var&gt;onRejected&lt;/var&gt;&lt;/code&gt; throws an error or returns a Promise which is itself rejected; otherwise, it is resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f84834e7660ed505621093e0e5d6c89de8cc1e" translate="yes" xml:space="preserve">
          <source>The Promise returned by &lt;code&gt;catch()&lt;/code&gt; is rejected if &lt;code&gt;onRejected&lt;/code&gt; throws an error or returns a Promise which is itself rejected; otherwise, it is resolved.</source>
          <target state="translated">Обещание, возвращаемое &lt;code&gt;onRejected&lt;/code&gt; &lt;code&gt;catch()&lt;/code&gt; , отклоняется, если onRejected вызывает ошибку или возвращает обещание, которое само отклоняется; в противном случае это решено.</target>
        </trans-unit>
        <trans-unit id="be24dd95d52c5f822180bc9fbb6030d2d74018ce" translate="yes" xml:space="preserve">
          <source>The Semantics of All JS Class Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b5af8e1532fe52df042769f7bec798553a35f2" translate="yes" xml:space="preserve">
          <source>The Set object that's being traversed.</source>
          <target state="translated">Объект &quot;Set&quot;,который пересекается.</target>
        </trans-unit>
        <trans-unit id="49e044a65fd508c1e1bf68ae413fba5886e5cb81" translate="yes" xml:space="preserve">
          <source>The UTF-16 code unit matches the Unicode code point for code points that can be represented in a single UTF-16 code unit. If the Unicode code point cannot be represented in a single UTF-16 code unit (because its value is greater than 0x10000) then the code unit returned will be the first part of a surrogate pair for the code point. If you want the entire code point value, use &lt;code&gt;codePointAt&lt;/code&gt;().</source>
          <target state="translated">Кодовая единица UTF-16 соответствует кодовой точке Unicode для кодовых точек, которые могут быть представлены в одной кодовой единице UTF-16. Если кодовая точка Unicode не может быть представлена ​​в одной кодовой единице UTF-16 (поскольку ее значение больше 0x10000), то возвращенная кодовая единица будет первой частью суррогатной пары для кодовой точки. Если вам нужно все значение кодовой точки, используйте &lt;code&gt;codePointAt&lt;/code&gt; ().</target>
        </trans-unit>
        <trans-unit id="823270a020d82838e724cdfd50f93480643b44bc" translate="yes" xml:space="preserve">
          <source>The UTF-16 code unit matches the Unicode code point for code points which can be represented in a single UTF-16 code unit. If the Unicode code point cannot be represented in a single UTF-16 code unit (because its value is greater than &lt;code&gt;0xFFFF&lt;/code&gt;) then the code unit returned will be &lt;em&gt;the first part of a surrogate pair&lt;/em&gt; for the code point. If you want the entire code point value, use &lt;a href=&quot;codepointat&quot;&gt;&lt;code&gt;codePointAt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d47b24afb0bafc4e2ef1c61796b73e12594792" translate="yes" xml:space="preserve">
          <source>The Unicode locale identifier string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08b05866ffb60163fb1c3e024218a216ee0bbba" translate="yes" xml:space="preserve">
          <source>The WebAssembly &lt;a href=&quot;https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md&quot;&gt;Threads&lt;/a&gt; proposal allows &lt;code&gt;&lt;a href=&quot;../webassembly/memory&quot;&gt;WebAssembly.Memory&lt;/a&gt;&lt;/code&gt; objects to be created with a new &lt;code&gt;&lt;a href=&quot;https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#javascript-api-changes&quot;&gt;shared&lt;/a&gt;&lt;/code&gt; constructor flag. When this flag is set to &lt;code&gt;true&lt;/code&gt;, the constructed &lt;code&gt;Memory&lt;/code&gt; object can be shared between workers via &lt;code&gt;postMessage()&lt;/code&gt;, just like &lt;code&gt;SharedArrayBuffer&lt;/code&gt;, and the backing &lt;code&gt;&lt;a href=&quot;../webassembly/memory/buffer&quot;&gt;buffer&lt;/a&gt;&lt;/code&gt; of the &lt;code&gt;Memory&lt;/code&gt; object is a &lt;code&gt;SharedArrayBuffer&lt;/code&gt;. Therefore, the requirements listed above for sharing a &lt;code&gt;SharedArrayBuffer&lt;/code&gt; between workers also apply to sharing a &lt;code&gt;WebAssembly.Memory&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32db7a0dd465bf8e97f0deb13357f0bffa810c96" translate="yes" xml:space="preserve">
          <source>The WebAssembly Threads proposal also defines a new set of &lt;a href=&quot;https://github.com/WebAssembly/threads/blob/master/proposals/threads/Overview.md#atomic-memory-accesses&quot;&gt;atomic&lt;/a&gt; instructions. Just as &lt;code&gt;SharedArrayBuffer&lt;/code&gt; and its methods are unconditionally enabled (and only sharing between threads is gated on the new headers), the WebAssembly atomic instructions are also unconditionally allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614f666e60229c8931cfcf35c7c7b7b8405c66c9" translate="yes" xml:space="preserve">
          <source>The above alert shows &lt;code&gt;button&lt;/code&gt;. Note however that only the outer code has its &lt;code&gt;this&lt;/code&gt; set this way:</source>
          <target state="translated">В приведенном выше предупреждении отображается &lt;code&gt;button&lt;/code&gt; . Обратите внимание, однако, что только внешний код имеет &lt;code&gt;this&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="48db29ca2070a265910895b83347db970012efd5" translate="yes" xml:space="preserve">
          <source>The above code creates three new symbols. Note that &lt;code&gt;Symbol(&quot;foo&quot;)&lt;/code&gt; does not coerce the string &quot;foo&quot; into a symbol. It creates a new symbol each time:</source>
          <target state="translated">Приведенный выше код создает три новых символа. Обратите внимание, что &lt;code&gt;Symbol(&quot;foo&quot;)&lt;/code&gt; не превращает строку &amp;laquo;foo&amp;raquo; в символ. Каждый раз он создает новый символ:</target>
        </trans-unit>
        <trans-unit id="590b696b826ba373a8a2a654abcb824bc9a84b26" translate="yes" xml:space="preserve">
          <source>The above code creates three new symbols. Note that &lt;code&gt;Symbol(&quot;foo&quot;)&lt;/code&gt; does not coerce the string &lt;code&gt;&quot;foo&quot;&lt;/code&gt; into a symbol. It creates a new symbol each time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc968b0e572c0c6ecd0d9dde19f65705aeb7e07" translate="yes" xml:space="preserve">
          <source>The above example uses parsing of a non&amp;ndash;standard string value that may not be correctly parsed in non&amp;ndash;Mozilla browsers.</source>
          <target state="translated">В приведенном выше примере используется синтаксический анализ нестандартного строкового значения, которое может неправильно анализироваться в браузерах, отличных от Mozilla.</target>
        </trans-unit>
        <trans-unit id="779a22b41e4e4f93cde5fd366230052879eb4ac2" translate="yes" xml:space="preserve">
          <source>The above syntax using the &lt;code&gt;Symbol()&lt;/code&gt; function will not create a global symbol that is available in your whole codebase. To create symbols available across files and even across realms (each of which has its own global scope), use the methods &lt;a href=&quot;symbol/for&quot;&gt;&lt;code&gt;Symbol.for()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;symbol/keyfor&quot;&gt;&lt;code&gt;Symbol.keyFor()&lt;/code&gt;&lt;/a&gt; to set and retrieve symbols from the global symbol registry.</source>
          <target state="translated">Приведенный выше синтаксис с использованием функции &lt;code&gt;Symbol()&lt;/code&gt; не создаст глобальный символ, доступный во всей вашей кодовой базе. Чтобы создать символы, доступные в файлах и даже в областях (каждая из которых имеет свою глобальную область действия), используйте методы &lt;a href=&quot;symbol/for&quot;&gt; &lt;code&gt;Symbol.for()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;symbol/keyfor&quot;&gt; &lt;code&gt;Symbol.keyFor()&lt;/code&gt; &lt;/a&gt; для установки и извлечения символов из глобального реестра символов.</target>
        </trans-unit>
        <trans-unit id="76c147cd9cdc395d76c4a7f61bcaf2a60decddaa" translate="yes" xml:space="preserve">
          <source>The absolute value of the given number.</source>
          <target state="translated">Абсолютное значение данного числа.</target>
        </trans-unit>
        <trans-unit id="3f6a69d21aaf347894210c65e3fc803f60e795ae" translate="yes" xml:space="preserve">
          <source>The accumulator accumulates &lt;var&gt;callback&lt;/var&gt;'s return values. It is the accumulated value previously returned in the last invocation of the callback&amp;mdash;or &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt;, if it was supplied (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eade57e467c41464ec5d8b8513d318ab94fe744" translate="yes" xml:space="preserve">
          <source>The accumulator accumulates the callback's return values; it is the accumulated value previously returned in the last invocation of the callback, or &lt;code&gt;initialValue&lt;/code&gt;, if supplied (see below).</source>
          <target state="translated">Аккумулятор накапливает возвращаемые значения обратного вызова; это накопленное значение, ранее возвращенное при последнем вызове обратного вызова, или &lt;code&gt;initialValue&lt;/code&gt; , если оно предоставлено (см. ниже).</target>
        </trans-unit>
        <trans-unit id="77ba5397f7c6e642ce23e930343dd9ec88055feb" translate="yes" xml:space="preserve">
          <source>The addition assignment operator (&lt;code&gt;+=&lt;/code&gt;) adds the value of the right operand to a variable and assigns the result to the variable. The types of the two operands determine the behavior of the addition assignment operator. Addition or concatenation is possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cb05ceed2902ab0776f2e0d4d042358e7f0a6a" translate="yes" xml:space="preserve">
          <source>The addition assignment operator &lt;strong&gt;adds&lt;/strong&gt; the value of the right operand to a variable and assigns the result to the variable. The types of the two operands determine the behavior of the addition assignment operator. Addition or concatenation is possible. See the &lt;a href=&quot;arithmetic_operators#Addition&quot;&gt;addition operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания сложения &lt;strong&gt;добавляет&lt;/strong&gt; значение правого операнда к переменной и присваивает результат переменной. Типы двух операндов определяют поведение оператора присваивания сложения. Возможно добавление или объединение. Подробнее об &lt;a href=&quot;arithmetic_operators#Addition&quot;&gt;операторе сложения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9de672547f633f05a2c640b70d9d8ce5c863f80" translate="yes" xml:space="preserve">
          <source>The addition operator (&lt;code&gt;+&lt;/code&gt;) produces the sum of numeric operands or string concatenation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9e70d115ebee62e12d028c95344707ba539dff" translate="yes" xml:space="preserve">
          <source>The addition operator produces the sum of numeric operands or string concatenation.</source>
          <target state="translated">Оператор сложения производит сумму числовых операндов или конкатенированных строк.</target>
        </trans-unit>
        <trans-unit id="45fd46de73e09649bf34e6b28fed934df6b6ff74" translate="yes" xml:space="preserve">
          <source>The allowed range for these methods is usually between 0 and 20 (or 21). However, the ECMAScript specification allows to extend this range.</source>
          <target state="translated">Допустимый диапазон для этих методов обычно составляет от 0 до 20 (или 21).Однако спецификация ECMAScript позволяет расширить этот диапазон.</target>
        </trans-unit>
        <trans-unit id="7d91e9d1788be3b3c63472bb6f2a8d4521caaf6f" translate="yes" xml:space="preserve">
          <source>The amount of bits available for the integer size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e4f23675a348a666a6bfafd7a4699120b37ced" translate="yes" xml:space="preserve">
          <source>The angle in radians (in</source>
          <target state="translated">Угол в радиусах (в</target>
        </trans-unit>
        <trans-unit id="2634c0a019d5cd1eb149d39cd1e280b4a526aa36" translate="yes" xml:space="preserve">
          <source>The angle in radians for which to return the cosine.</source>
          <target state="translated">Угол в радиусах,для которого нужно вернуть косинус.</target>
        </trans-unit>
        <trans-unit id="d3a872a0c25d02b4931e3593a12295a940af3681" translate="yes" xml:space="preserve">
          <source>The arccosine (angle in radians) of the given number if it's between &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;; otherwise, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e34c6cf0ffab0f10f4b4f8b32a6d6fee2d0835d" translate="yes" xml:space="preserve">
          <source>The arccosine (in radians) of the given number if it's between &lt;strong&gt;-1&lt;/strong&gt; and &lt;strong&gt;1&lt;/strong&gt;; otherwise, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Арккосинус (в радианах) заданного числа, если он находится между &lt;strong&gt;-1&lt;/strong&gt; и &lt;strong&gt;1&lt;/strong&gt; ; в противном случае &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddc680f871363f6e0485b6e299a25e7590efcab6" translate="yes" xml:space="preserve">
          <source>The arcsine (in radians) of the given number if it's between &lt;strong&gt;-1&lt;/strong&gt; and &lt;strong&gt;1&lt;/strong&gt;; otherwise, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Арксинус (в радианах) заданного числа, если он находится между &lt;strong&gt;-1&lt;/strong&gt; и &lt;strong&gt;1&lt;/strong&gt; ; в противном случае &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85ae76861326155a029dcf8b30f59372b5b5bdd8" translate="yes" xml:space="preserve">
          <source>The arctangent (in radians) of the given number.</source>
          <target state="translated">Аркавангент (в радианах)данного числа.</target>
        </trans-unit>
        <trans-unit id="8a7944803c62f9bf2952575c8a72fd7e52711bcc" translate="yes" xml:space="preserve">
          <source>The argument list is invalid somehow. Perhaps you accidentally picked a keyword like &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;var&lt;/code&gt; as an argument name, or perhaps there's some stray punctuation in your argument list. Or maybe you accidentally passed an invalid value, like a number or object.</source>
          <target state="translated">Список аргументов недействителен. Возможно, вы случайно выбрали ключевое слово, например &lt;code&gt;if&lt;/code&gt; или &lt;code&gt;var&lt;/code&gt; , в качестве имени аргумента, или, возможно, в вашем списке аргументов есть неправильная пунктуация. Или, может быть, вы случайно передали недопустимое значение, например число или объект.</target>
        </trans-unit>
        <trans-unit id="7cad76dfde920321524d3fa684e08460364eae69" translate="yes" xml:space="preserve">
          <source>The argument of &lt;a href=&quot;../global_objects/array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt; is expected to be either &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or a function which compares its operands.</source>
          <target state="translated">Предполагается, что аргумент &lt;a href=&quot;../global_objects/array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt; либо &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; либо функция, сравнивающая его операнды.</target>
        </trans-unit>
        <trans-unit id="6f2610db3899781e47b828d98a30ce2343116de0" translate="yes" xml:space="preserve">
          <source>The argument of the &lt;code&gt;eval()&lt;/code&gt; function is a string. If the string represents an expression, &lt;code&gt;eval()&lt;/code&gt; evaluates the expression. If the argument represents one or more JavaScript statements, &lt;code&gt;eval()&lt;/code&gt; evaluates the statements. Do not call &lt;code&gt;eval()&lt;/code&gt; to evaluate an arithmetic expression; JavaScript evaluates arithmetic expressions automatically.</source>
          <target state="translated">Аргументом функции &lt;code&gt;eval()&lt;/code&gt; является строка. Если строка представляет собой выражение, &lt;code&gt;eval()&lt;/code&gt; оценивает выражение. Если аргумент представляет один или несколько операторов JavaScript, &lt;code&gt;eval()&lt;/code&gt; оценивает эти операторы. Не вызывайте &lt;code&gt;eval()&lt;/code&gt; для вычисления арифметического выражения; JavaScript автоматически вычисляет арифметические выражения.</target>
        </trans-unit>
        <trans-unit id="86421c1a1ea2fb7e300781ab95602ea6e5e9b867" translate="yes" xml:space="preserve">
          <source>The argument passed to this function will be converted to &lt;code&gt;number&lt;/code&gt; type implicitly.</source>
          <target state="translated">Аргумент, переданный этой функции, будет неявно преобразован в &lt;code&gt;number&lt;/code&gt; тип.</target>
        </trans-unit>
        <trans-unit id="2642b281b11a45379b1899c8bfdfa20fded62cac" translate="yes" xml:space="preserve">
          <source>The argument passed to this method will be converted to number type implicitly.</source>
          <target state="translated">Аргумент,переданный этому методу,будет неявно приведен к числовому типу.</target>
        </trans-unit>
        <trans-unit id="ad8b914095fbf6c1921676be0fbe503c75e3bc36" translate="yes" xml:space="preserve">
          <source>The argument to be checked.</source>
          <target state="translated">Аргумент,который нужно проверить.</target>
        </trans-unit>
        <trans-unit id="568b31681a37df3f00fb42424598962a14f30d09" translate="yes" xml:space="preserve">
          <source>The arguments &quot;&lt;code&gt;a&lt;/code&gt;&quot; and &quot;&lt;code&gt;b&lt;/code&gt;&quot; are formal argument names that are used in the function body, &quot;&lt;code&gt;return a + b&lt;/code&gt;&quot;.</source>
          <target state="translated">Аргументы &amp;laquo; &lt;code&gt;a&lt;/code&gt; &amp;raquo; и &amp;laquo; &lt;code&gt;b&lt;/code&gt; &amp;raquo; - это формальные имена аргументов, которые используются в теле функции &amp;laquo; &lt;code&gt;return a + b&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d01f440c1503d60bc2f15078825ee9b7b4dd13f7" translate="yes" xml:space="preserve">
          <source>The arguments of &lt;code&gt;substring()&lt;/code&gt; represent the starting and ending indexes, while the arguments of &lt;code&gt;substr()&lt;/code&gt; represent the starting index and the length of characters to include in the returned string.</source>
          <target state="translated">Аргументы &lt;code&gt;substring()&lt;/code&gt; представляют собой начальный и конечный индексы, а аргументы &lt;code&gt;substr()&lt;/code&gt; представляют начальный индекс и длину символов, которые необходимо включить в возвращаемую строку.</target>
        </trans-unit>
        <trans-unit id="96e62f55bfabf27002f18dc6cc9411b91c3d89da" translate="yes" xml:space="preserve">
          <source>The arguments of &lt;code&gt;substring()&lt;/code&gt; represent the starting and ending indexes, while the arguments of &lt;code&gt;substr()&lt;/code&gt; represent the starting index and the number of characters to include in the returned string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c05bc8168ca994804516a468e85cd019d331fe5" translate="yes" xml:space="preserve">
          <source>The arguments to the function are as follows:</source>
          <target state="translated">Аргументы к функции следующие:</target>
        </trans-unit>
        <trans-unit id="ce50c2eb1731e30f651e83e65a160b7d9cb292ed" translate="yes" xml:space="preserve">
          <source>The arguments.length property provides the number of arguments actually passed to a function. This can be more or less than the defined parameter's count (see &lt;a href=&quot;../../global_objects/function/length&quot;&gt;&lt;code&gt;Function.length&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Свойство arguments.length предоставляет количество аргументов, фактически переданных функции. Это может быть больше или меньше заданного количества параметров (см. &lt;a href=&quot;../../global_objects/function/length&quot;&gt; &lt;code&gt;Function.length&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d6ace2dacc3116721ac085e0aa2ff5a3b5910fd8" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;every&lt;/code&gt; was called upon.</source>
          <target state="translated">Массив &lt;code&gt;every&lt;/code&gt; был призван.</target>
        </trans-unit>
        <trans-unit id="b0a5990c1febd7c0456b1d95c2919dd12ea41ed9" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;filter&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массивный &lt;code&gt;filter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="739231e797b44686b6cb1d90214cc6c87045d6c4" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;find&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван &lt;code&gt;find&lt;/code&gt; массива .</target>
        </trans-unit>
        <trans-unit id="cca6c09af2617cd7edc0dae16991867e9b40c49e" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;findIndex()&lt;/code&gt; was called upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd246a8490071c05ff637a363cae6c8e36958f15" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;findIndex&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массив &lt;code&gt;findIndex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab72b62dc5410c1069e9b77f96e6c04c204b365d" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;forEach()&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массив &lt;code&gt;forEach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3186a1a627eaeb3ebe86c8859078581c3a2241f" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;map&lt;/code&gt; was called upon.</source>
          <target state="translated">Была запрошена &lt;code&gt;map&lt;/code&gt; массива .</target>
        </trans-unit>
        <trans-unit id="d8556e513816f3230a6e95e0d7cca63a630bf152" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;reduce()&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массив &lt;code&gt;reduce()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4bc918402b106b22d0715b5db9cbc982610a958" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;reduce&lt;/code&gt; was called upon.</source>
          <target state="translated">Вызвано &lt;code&gt;reduce&lt;/code&gt; массива .</target>
        </trans-unit>
        <trans-unit id="f059576f65fd507515e526c54e2416467c8d0136" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;reduceRight()&lt;/code&gt; was called upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ab5cf3467b3f84dd374afb2b77922d7f6dba9d" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;some()&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массив &lt;code&gt;some()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dad5186f2394322d0d048218bd4971959e5c71d" translate="yes" xml:space="preserve">
          <source>The array &lt;strong&gt;iterator&lt;/strong&gt; function, which is the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">Функция &lt;strong&gt;итератора&lt;/strong&gt; массива , которая по умолчанию является функцией &lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="baf0ca63b09065862fb6a8e2d7fe2f07e5b3e61c" translate="yes" xml:space="preserve">
          <source>The array comprehensions syntax is non-standard and removed starting with Firefox 58. For future-facing usages, consider using &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;Array.prototype.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, and &lt;a href=&quot;spread_syntax&quot;&gt;spread syntax&lt;/a&gt;.</source>
          <target state="translated">Синтаксис &lt;a href=&quot;../global_objects/array/map&quot;&gt; &lt;code&gt;Array.prototype.map&lt;/code&gt; &lt;/a&gt; массива нестандартен и удален, начиная с Firefox 58. Для будущего использования рассмотрите возможность использования Array.prototype.map , &lt;a href=&quot;../global_objects/array/filter&quot;&gt; &lt;code&gt;Array.prototype.filter&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../functions/arrow_functions&quot;&gt;стрелочных функций&lt;/a&gt; и &lt;a href=&quot;spread_syntax&quot;&gt;синтаксиса распространения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="574cf9211229dd7de993204fbc819629088b32dd" translate="yes" xml:space="preserve">
          <source>The array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown.</source>
          <target state="translated">Массив,из которого копируются значения.Все значения из массива-источника копируются в целевой массив,если только длина массива-источника плюс смещение не превышает длину целевого массива,в этом случае бросается исключение.</target>
        </trans-unit>
        <trans-unit id="063bbc7e8b95dfb2a20635172ab4d25b248ab7b7" translate="yes" xml:space="preserve">
          <source>The array may contain fewer entries than &lt;code&gt;limit&lt;/code&gt; if the end of the string is reached before the limit is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8c296b177d1726314c8984d3dca410ee5bb07d" translate="yes" xml:space="preserve">
          <source>The array that &lt;code&gt;find&lt;/code&gt; was called on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3ea3e65da8f7c4b65c1da2a62251e8c8e8b334" translate="yes" xml:space="preserve">
          <source>The array that &lt;code&gt;forEach()&lt;/code&gt; is being applied to.</source>
          <target state="translated">Массив, к которому применяется &lt;code&gt;forEach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="518a56af12e1c2665fe6da5982dd5a9e68f5bc6c" translate="yes" xml:space="preserve">
          <source>The arrow function expression (=&amp;gt;)</source>
          <target state="translated">Выражение стрелочной функции (=&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="ec1bb50d7c8ede459b02e9171f3e6a273551bc48" translate="yes" xml:space="preserve">
          <source>The asterisk (&lt;code&gt;*&lt;/code&gt;) in the shorthand syntax must be &lt;em&gt;before&lt;/em&gt; the generator property name. (That is, &lt;code&gt;* g(){}&lt;/code&gt; will work, but &lt;code&gt;g *(){}&lt;/code&gt; will not.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59183250f0677ed86b491a4145e3847b2edb3225" translate="yes" xml:space="preserve">
          <source>The attributes for the property being defined or modified.</source>
          <target state="translated">Атрибуты определяемого или изменяемого свойства.</target>
        </trans-unit>
        <trans-unit id="f79e2a6915396dcde507e68f69aa0bcc1ad9f2b1" translate="yes" xml:space="preserve">
          <source>The base 10 logarithm of the given number. If the number is negative, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Базовый десятичный логарифм данного числа. Если число отрицательное, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19f44bd8b33b87013e304114f54f4d54ffa56d4d" translate="yes" xml:space="preserve">
          <source>The base 2 logarithm of the given number. If the number is negative, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Логарифм по основанию 2 данного числа. Если число отрицательное, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="598eb94105d30e9010db45a9322f00161e0043ff" translate="yes" xml:space="preserve">
          <source>The base number.</source>
          <target state="translated">Базовый номер.</target>
        </trans-unit>
        <trans-unit id="9138e5420219b68a65111246e358ee019b383637" translate="yes" xml:space="preserve">
          <source>The basic assignment operator is equal (&lt;code&gt;=&lt;/code&gt;), which assigns the value of its right operand to its left operand. That is, &lt;code&gt;x = y&lt;/code&gt; assigns the value of &lt;code&gt;y&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;. The other assignment operators are usually shorthand for standard operations, as shown in the following definitions and examples.</source>
          <target state="translated">Основной оператор присваивания равен ( &lt;code&gt;=&lt;/code&gt; ), который присваивает значение правого операнда левому операнду. То есть, &lt;code&gt;x = y&lt;/code&gt; присваивает значение &lt;code&gt;y&lt;/code&gt; к &lt;code&gt;x&lt;/code&gt; . Другие операторы присваивания обычно являются сокращениями для стандартных операций, как показано в следующих определениях и примерах.</target>
        </trans-unit>
        <trans-unit id="2802dc8e28fd850a2101c483c80ff9abc2cd12d3" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;this&lt;/code&gt; in &lt;a href=&quot;../classes&quot;&gt;classes&lt;/a&gt; and functions is similar, since classes are functions under the hood. But there are some differences and caveats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb02f181b59533649448d799e40c95336a7699d" translate="yes" xml:space="preserve">
          <source>The bitwise AND assignment operator (&lt;code&gt;&amp;amp;=&lt;/code&gt;) uses the binary representation of both operands, does a bitwise AND operation on them and assigns the result to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064d3957a78ce04301d5080c985ea903ba7311e2" translate="yes" xml:space="preserve">
          <source>The bitwise AND assignment operator uses the binary representation of both operands, does a bitwise AND operation on them and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Bitwise_AND&quot;&gt;bitwise AND operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор побитового И присваивания использует двоичное представление обоих операндов, выполняет над ними побитовую операцию И и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Bitwise_AND&quot;&gt;Побитовый оператор AND&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="740026f0cc3692131272c79998e3dd563a72e7a0" translate="yes" xml:space="preserve">
          <source>The bitwise AND operation only yields 1, if both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are 1. The truth table for the AND operation is:</source>
          <target state="translated">Побитовая операция И дает только 1, если и &lt;code&gt;a&lt;/code&gt; , и &lt;code&gt;b&lt;/code&gt; равны 1. Таблица истинности для операции AND:</target>
        </trans-unit>
        <trans-unit id="10a0f083ebf36cb6bd149e63540305d73deec4a1" translate="yes" xml:space="preserve">
          <source>The bitwise AND operator (&lt;code&gt;&amp;amp;&lt;/code&gt;) returns a &lt;code&gt;1&lt;/code&gt; in each bit position for which the corresponding bits of both operands are &lt;code&gt;1&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71e724cb9e3c533456a6fe916e38b4f936b077a" translate="yes" xml:space="preserve">
          <source>The bitwise NOT operator (&lt;code&gt;~&lt;/code&gt;) inverts the bits of its operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d225b21b40428cb5c59289fb17311dde28a6e9b3" translate="yes" xml:space="preserve">
          <source>The bitwise OR assignment operator (&lt;code&gt;|=&lt;/code&gt;) uses the binary representation of both operands, does a bitwise OR operation on them and assigns the result to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f6914a63e091d61d1a3d787cf628bb0b651f2b" translate="yes" xml:space="preserve">
          <source>The bitwise OR assignment operator uses the binary representation of both operands, does a bitwise OR operation on them and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Bitwise_OR&quot;&gt;bitwise OR operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания побитового ИЛИ использует двоичное представление обоих операндов, выполняет над ними побитовую операцию ИЛИ и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Bitwise_OR&quot;&gt;Побитовый оператор ИЛИ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e346339363a3470fe9e3b74cc1f4d1f99862ea69" translate="yes" xml:space="preserve">
          <source>The bitwise OR operation yields 1, if either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are 1. The truth table for the OR operation is:</source>
          <target state="translated">Побитовая операция ИЛИ дает 1, если &lt;code&gt;a&lt;/code&gt; или &lt;code&gt;b&lt;/code&gt; равны 1. Таблица истинности для операции ИЛИ:</target>
        </trans-unit>
        <trans-unit id="705eb6deb4b8616d8ad6d083a8ab1c439fbc57d3" translate="yes" xml:space="preserve">
          <source>The bitwise OR operator (&lt;code&gt;|&lt;/code&gt;) returns a &lt;code&gt;1&lt;/code&gt; in each bit position for which the corresponding bits of either or both operands are &lt;code&gt;1&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7296793f48f64363275be0af058a428c2e462773" translate="yes" xml:space="preserve">
          <source>The bitwise XOR assignment operator (&lt;code&gt;^=&lt;/code&gt;) uses the binary representation of both operands, does a bitwise XOR operation on them and assigns the result to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867db60d4f73f82b6e6d70b093e9389fd0ce51de" translate="yes" xml:space="preserve">
          <source>The bitwise XOR assignment operator uses the binary representation of both operands, does a bitwise XOR operation on them and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Bitwise_XOR&quot;&gt;bitwise XOR operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания побитового XOR использует двоичное представление обоих операндов, выполняет над ними побитовую операцию XOR и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Bitwise_XOR&quot;&gt;Побитовый оператор XOR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2136d7ce96d0b55459d54b5b473e1285c2c9cfa" translate="yes" xml:space="preserve">
          <source>The bitwise XOR operation yields 1, if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are different. The truth table for the XOR operation is:</source>
          <target state="translated">Побитовая операция XOR дает 1, если &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; различны. Таблица истинности для операции XOR:</target>
        </trans-unit>
        <trans-unit id="7b2c31b3d4fd5009a86c6b49e809f77d0f770910" translate="yes" xml:space="preserve">
          <source>The bitwise XOR operator (&lt;code&gt;^&lt;/code&gt;) returns a &lt;code&gt;1&lt;/code&gt; in each bit position for which the corresponding bits of either but not both operands are &lt;code&gt;1&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c276658178589b2b39f0ac029ac097652b8b966" translate="yes" xml:space="preserve">
          <source>The bitwise logical operators are often used to create, manipulate, and read sequences of &lt;em&gt;flags&lt;/em&gt;, which are like binary variables. Variables could be used instead of these sequences, but binary flags take much less memory (by a factor of 32).</source>
          <target state="translated">Поразрядные логические операторы часто используются для создания, управления и чтения последовательностей &lt;em&gt;флагов&lt;/em&gt; , которые подобны двоичным переменным. Вместо этих последовательностей можно использовать переменные, но двоичные флаги занимают гораздо меньше памяти (в 32 раза).</target>
        </trans-unit>
        <trans-unit id="48f10e0cc5e63026f354f72ce42f1b440b6efc91" translate="yes" xml:space="preserve">
          <source>The bitwise shift operators take two operands: the first is a quantity to be shifted, and the second specifies the number of bit positions by which the first operand is to be shifted. The direction of the shift operation is controlled by the operator used.</source>
          <target state="translated">Операторы битового сдвига берут два операндов:первый-это количество,которое должно быть сдвинуто,а второй-количество битовых позиций,на которые должен быть сдвинут первый операнд.Направление операции сдвига контролируется используемым оператором.</target>
        </trans-unit>
        <trans-unit id="175ebbaf313d101be1d46496e89b9a5e9de11c06" translate="yes" xml:space="preserve">
          <source>The block statement is often called &lt;strong&gt;compound statement&lt;/strong&gt; in other languages. It allows you to use multiple statements where JavaScript expects only one statement. Combining statements into blocks is a common practice in JavaScript. The opposite behavior is possible using an &lt;a href=&quot;empty&quot;&gt;empty statement&lt;/a&gt;, where you provide no statement, although one is required.</source>
          <target state="translated">Оператор блока часто называется &lt;strong&gt;составным оператором&lt;/strong&gt; на других языках. Это позволяет вам использовать несколько операторов, где JavaScript ожидает только один оператор. Объединение операторов в блоки - обычная практика в JavaScript. Противоположное поведение возможно при использовании &lt;a href=&quot;empty&quot;&gt;пустого оператора&lt;/a&gt; , где вы не предоставляете никакого оператора, хотя он требуется.</target>
        </trans-unit>
        <trans-unit id="7477e48593995ef9da932d151626c02fe6996b24" translate="yes" xml:space="preserve">
          <source>The body of a class is executed in &lt;a href=&quot;strict_mode&quot;&gt;strict mode&lt;/a&gt;, i.e., code written here is subject to stricter syntax for increased performance, some otherwise silent errors will be thrown, and certain keywords are reserved for future versions of ECMAScript.</source>
          <target state="translated">Тело класса выполняется в &lt;a href=&quot;strict_mode&quot;&gt;строгом режиме&lt;/a&gt; , т. Е. Для написанного здесь кода применяется более строгий синтаксис для повышения производительности, в противном случае будут возникать некоторые скрытые ошибки, а некоторые ключевые слова зарезервированы для будущих версий ECMAScript.</target>
        </trans-unit>
        <trans-unit id="4bca9151f6cc6d585fadc8a648f58c470c08c10c" translate="yes" xml:space="preserve">
          <source>The body of a class is the part that is in curly brackets &lt;code&gt;{}&lt;/code&gt;. This is where you define class members, such as methods or constructor.</source>
          <target state="translated">Тело класса - это часть, заключенная в фигурные скобки &lt;code&gt;{}&lt;/code&gt; . Здесь вы определяете члены класса, такие как методы или конструктор.</target>
        </trans-unit>
        <trans-unit id="04f2edc36f17bd99c04c802e883bde6dc207dc91" translate="yes" xml:space="preserve">
          <source>The body of an async function can be thought of as being split by zero or more await expressions. Top-level code, up to and including the first await expression (if there is one), is run synchronously. In this way, an async function without an await expression will run synchronously. If there is an await expression inside the function body, however, the async function will always complete asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf69735072234ebcbd50f368e02a05de91363f5" translate="yes" xml:space="preserve">
          <source>The brackets may look correct at first, but note how the &lt;code&gt;||&lt;/code&gt; is outside the brackets. Correct would be putting brackets around the &lt;code&gt;||&lt;/code&gt;:</source>
          <target state="translated">Поначалу скобки могут выглядеть правильно, но обратите внимание на то, как &lt;code&gt;||&lt;/code&gt; находится вне скобок. Правильно было бы заключить в скобки &lt;code&gt;||&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a60abbe84992cc75d4e2129371f5adf4277c742a" translate="yes" xml:space="preserve">
          <source>The byte length of the new &lt;code&gt;ArrayBuffer&lt;/code&gt; object.</source>
          <target state="translated">Длина в &lt;code&gt;ArrayBuffer&lt;/code&gt; нового объекта ArrayBuffer .</target>
        </trans-unit>
        <trans-unit id="c21c288ef2e0b85c532a0aaaba3bb8ac28da056c" translate="yes" xml:space="preserve">
          <source>The call to the &lt;code&gt;reduceRight&lt;/code&gt; callback would look something like this:</source>
          <target state="translated">Вызов обратного вызова &lt;code&gt;reduceRight&lt;/code&gt; будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="dfab73d51d567713a590136fee55b409dd6eb610" translate="yes" xml:space="preserve">
          <source>The call to the reduceRight &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; would look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f6077747036c2b9f4ce1ca2d356c8f847aea6d" translate="yes" xml:space="preserve">
          <source>The call to the reduceRight &lt;code&gt;callback&lt;/code&gt; would look something like this:</source>
          <target state="translated">Вызов &lt;code&gt;callback&lt;/code&gt; reduceRight будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="f9ab507df8c93d8e01ffcd2054d6b12ace1f634a" translate="yes" xml:space="preserve">
          <source>The callback function this registry should use. If provided, this must be a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dd799b0f0b49b745fa73d43d16c56e02fb34fc" translate="yes" xml:space="preserve">
          <source>The callback would be invoked four times, with the arguments and return values in each call being as follows:</source>
          <target state="translated">Обратный вызов будет вызван четыре раза,аргументы и возвращаемые значения в каждом вызове будут следующими:</target>
        </trans-unit>
        <trans-unit id="529358e5ae65198672839644ebda30bb0834f61a" translate="yes" xml:space="preserve">
          <source>The capturing groups are numbered according to the order of left parentheses of capturing groups, starting from 1. The matched substring can be recalled from the resulting array's elements &lt;code&gt;[1], ..., [n]&lt;/code&gt; or from the predefined &lt;code&gt;RegExp&lt;/code&gt; object's properties &lt;code&gt;$1, ..., $9&lt;/code&gt;.</source>
          <target state="translated">Группы захвата нумеруются в соответствии с порядком левых скобок групп захвата, начиная с 1. Соответствующая подстрока может быть вызвана из элементов результирующего массива &lt;code&gt;[1], ..., [n]&lt;/code&gt; или из свойств предопределенного объекта &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;$1, ..., $9&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7dfdaa9a05626c2e4e94877772b10e055057793" translate="yes" xml:space="preserve">
          <source>The characters to be searched for at the end of &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea4a7d34afcf6a20ca9f68e6a0423534999cad7" translate="yes" xml:space="preserve">
          <source>The characters to be searched for at the end of this string.</source>
          <target state="translated">Символы,которые необходимо искать в конце этой строки.</target>
        </trans-unit>
        <trans-unit id="ea4040c6f18cef23c2d1fe587d1104e905e7f6ab" translate="yes" xml:space="preserve">
          <source>The characters to be searched for at the start of this string.</source>
          <target state="translated">Символы,которые необходимо искать в начале этой строки.</target>
        </trans-unit>
        <trans-unit id="b47a75f9e191f52f785a5588c08b45fa6d1cf028" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to lower case while respecting the current locale. For most languages, this will return the same as &lt;a href=&quot;string/tolowercase&quot;&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Символы в строке преобразуются в нижний регистр с учетом текущей локали. Для большинства языков будет возвращено то же значение, что и &lt;a href=&quot;string/tolowercase&quot;&gt; &lt;code&gt;toLowerCase()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02a4044b5eff1ebaa85a95b61d51842f7688126c" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to lower case while respecting the current locale. For most languages, this will return the same as &lt;a href=&quot;tolowercase&quot;&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Символы в строке преобразуются в нижний регистр с учетом текущей локали. Для большинства языков будет возвращено то же значение, что и &lt;a href=&quot;tolowercase&quot;&gt; &lt;code&gt;toLowerCase()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4daba78aa07385bac2a4e581c1f5b76fe96e7b2c" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to lowercase while respecting the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9149f43ab1f76f894c71b38c8bcdfb7b581734" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to upper case while respecting the current locale. For most languages, this will return the same as &lt;a href=&quot;string/touppercase&quot;&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Символы в строке преобразуются в верхний регистр с учетом текущей локали. Для большинства языков будет возвращено то же значение, что и &lt;a href=&quot;string/touppercase&quot;&gt; &lt;code&gt;toUpperCase()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efa62672806348552a404536b413669fee7e627a" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to upper case while respecting the current locale. For most languages, this will return the same as &lt;a href=&quot;touppercase&quot;&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Символы в строке преобразуются в верхний регистр с учетом текущей локали. Для большинства языков будет возвращено то же значение, что и &lt;a href=&quot;touppercase&quot;&gt; &lt;code&gt;toUpperCase()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a9b3fe31d44429f68aa4abf79c83a3e60a997b" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to uppercase while respecting the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0427b1e20dba4046e5ffec03d2d0954bc7d3df70" translate="yes" xml:space="preserve">
          <source>The class body of a class declaration is executed in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;. The &lt;code&gt;constructor&lt;/code&gt; method is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1ed43d7a20e3b448e88650183e95808a68a1b7" translate="yes" xml:space="preserve">
          <source>The class body of a class declaration is executed in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;. The constructor property is optional.</source>
          <target state="translated">Тело класса объявления класса выполняется в &lt;a href=&quot;../strict_mode&quot;&gt;строгом режиме&lt;/a&gt; . Свойство конструктора не является обязательным.</target>
        </trans-unit>
        <trans-unit id="04bd176ecf0b4c0d2e361fed92486d9bb741b211" translate="yes" xml:space="preserve">
          <source>The code above may seem inefficiently slow because of the triple nested function, but let's analyse the benefits of the above efficient method:</source>
          <target state="translated">Вышеприведенный код может показаться неэффективно медленным из-за тройной вложенной функции,но давайте проанализируем преимущества вышеописанного эффективного метода:</target>
        </trans-unit>
        <trans-unit id="7d153594cf7d720f098751dcce41c33e4bdfab27" translate="yes" xml:space="preserve">
          <source>The code above may seem inefficiently slow because of the triple nested function, but let's analyze the benefits of the above efficient method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b06f1e2d79ed3ea44e8951423a811c3379ede8" translate="yes" xml:space="preserve">
          <source>The code above serves as an example for substring operations. If you need to replace substrings, most of the time you will want to use &lt;a href=&quot;replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Приведенный выше код служит примером операций с подстрокой. Если вам нужно заменить подстроки, большую часть времени вы захотите использовать &lt;a href=&quot;replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29efbb3fdcfaf150956a6e65df3297511df904b2" translate="yes" xml:space="preserve">
          <source>The code below shows how to import from a secondary module to assist in processing an AJAX JSON request.</source>
          <target state="translated">Код ниже показывает,как импортировать из вторичного модуля для помощи в обработке AJAX JSON запроса.</target>
        </trans-unit>
        <trans-unit id="e11f2707655ac5e8f02c2112c63f9540f1a12903" translate="yes" xml:space="preserve">
          <source>The code does not use &lt;code&gt;eval()&lt;/code&gt;, making it orders of magnitude faster than otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77babd566d6e7c423057c0cbb7be3bc8ea0af041" translate="yes" xml:space="preserve">
          <source>The code point for &lt;code&gt;&quot;n&quot;&lt;/code&gt; (U+006E) followed by the code point for the combining tilde (U+0303).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84b0cd589932cf33c346a00c77f36d47f4be22a" translate="yes" xml:space="preserve">
          <source>The comma operator allows multiple expressions to be evaluated in a single statement and returns the result of the last expression.</source>
          <target state="translated">Оператор запятая позволяет вычислить несколько выражений в одном операторе и возвращает результат последнего выражения.</target>
        </trans-unit>
        <trans-unit id="1250480c705913bbdc22c071498ae62f28af5d1a" translate="yes" xml:space="preserve">
          <source>The comma operator is fully different from the comma within arrays, objects, and function arguments and parameters.</source>
          <target state="translated">Оператор запятая полностью отличается от запятой в массивах,объектах,аргументах и параметрах функции.</target>
        </trans-unit>
        <trans-unit id="7fab18439a7793e4c9d265e0a1eb2b9a108df7ab" translate="yes" xml:space="preserve">
          <source>The completion value of evaluating the given code. If the completion value is empty, &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Значение завершения оценки данного кода. Если значение завершения пусто, возвращается &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed9f5c4fd781b14194aff34ea8d3f8fbfa23a0d9" translate="yes" xml:space="preserve">
          <source>The concept of compose function is simple it combines n functions. It&amp;rsquo;s a flowing right-to-left, calling each function with the output of the last one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0621346efbf3c869cb91624fd5861f953bb9a30a" translate="yes" xml:space="preserve">
          <source>The conditional operator returns one of two values based on the logical value of the condition.</source>
          <target state="translated">Условный оператор возвращает одно из двух значений,основанных на логическом значении условия.</target>
        </trans-unit>
        <trans-unit id="fba8e0ecfce285b4bc6ff7ab720824ece9546a9f" translate="yes" xml:space="preserve">
          <source>The console will warn &quot;unreachable code after return statement&quot;.</source>
          <target state="translated">Консоль предупредит &quot;недоступный код после оператора возврата&quot;.</target>
        </trans-unit>
        <trans-unit id="6e123d397cc379ed5365e7a4deebd0d4e9c23f0d" translate="yes" xml:space="preserve">
          <source>The constant's name, which can be any legal &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/identifier&quot;&gt;identifier&lt;/a&gt;.</source>
          <target state="translated">Имя константы, которое может быть любым допустимым &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/identifier&quot;&gt;идентификатором&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5246174ff64cef2f713e1d5ea251a47b175d8301" translate="yes" xml:space="preserve">
          <source>The constant's value. This can be any legal &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt;, including a function expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da19f405b29faa24595e62c88e9d6fc4e1d0aa7" translate="yes" xml:space="preserve">
          <source>The constant's value; this can be any legal &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt;, including a function expression.</source>
          <target state="translated">Значение константы; это может быть любое допустимое &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;выражение&lt;/a&gt; , включая выражение функции.</target>
        </trans-unit>
        <trans-unit id="9f383a65214d5dd6b3fdfafe6bb11e51d656fec8" translate="yes" xml:space="preserve">
          <source>The constructor also takes an optional configuration object argument, which can contain any of several extension types. For example, set the &lt;code&gt;&lt;a href=&quot;hourcycle&quot;&gt;hourCycle&lt;/a&gt;&lt;/code&gt; property of the configuration object to your desired hour cycle type, and then pass it into the constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c557b8e7344e31287a1538b0b5b43b926000d555" translate="yes" xml:space="preserve">
          <source>The constructor also takes an optional configuration object argument, which can contain any of several extension types. For example, set the &lt;code&gt;&lt;a href=&quot;locale/hourcycle&quot;&gt;hourCycle&lt;/a&gt;&lt;/code&gt; property of the configuration object to your desired hour cycle type, and then pass it into the constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83547aca79f778b81fe2242fe412640398fb2951" translate="yes" xml:space="preserve">
          <source>The constructor function &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; is called with the specified arguments, and with &lt;code&gt;&lt;a href=&quot;this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; bound to the newly created object. &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; is equivalent to &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;()&lt;/code&gt;, i.e. if no argument list is specified, &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; is called without arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6c865a9918ebbc467c3613c73d166c77549f56" translate="yes" xml:space="preserve">
          <source>The constructor function &lt;em&gt;&lt;code&gt;Foo&lt;/code&gt;&lt;/em&gt; is called with the specified arguments, and with &lt;code&gt;&lt;a href=&quot;this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; bound to the newly created object. &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; is equivalent to &lt;code&gt;new &lt;/code&gt;&lt;em&gt;&lt;code&gt;Foo&lt;/code&gt;&lt;/em&gt;&lt;code&gt;()&lt;/code&gt;, i.e. if no argument list is specified, &lt;em&gt;&lt;code&gt;Foo&lt;/code&gt;&lt;/em&gt; is called without arguments.</source>
          <target state="translated">Функция конструктора &lt;em&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;/em&gt; вызывается с указанными аргументами, и с &lt;code&gt;&lt;a href=&quot;this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; связаны с вновь созданным объектом. &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; эквивалентен &lt;code&gt;new &lt;/code&gt; &lt;em&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;/em&gt; &lt;code&gt;()&lt;/code&gt; , т.е. если список аргументов не указан, &lt;em&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;/em&gt; вызывается без аргументов.</target>
        </trans-unit>
        <trans-unit id="99a33382d6cbb2aba7d55f16f795e9406be2db23" translate="yes" xml:space="preserve">
          <source>The constructor function is used to create derived objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a169aedbb3ba1ad7d6dfd37dd0fae85249dc777" translate="yes" xml:space="preserve">
          <source>The constructor function that is used to create derived objects.</source>
          <target state="translated">Функция конструктора,которая используется для создания производных объектов.</target>
        </trans-unit>
        <trans-unit id="a0823006c92a5341fb65cd323ee457691765bce0" translate="yes" xml:space="preserve">
          <source>The constructor function used to create derived objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1842951147ecd29c0a9f49879fb915edc6addf" translate="yes" xml:space="preserve">
          <source>The constructor of the regular expression object&amp;mdash;for example, &lt;code&gt;new RegExp('ab+c')&lt;/code&gt;&amp;mdash;results in runtime compilation of the regular expression. Use the constructor function when you know the regular expression pattern will be changing, or you don't know the pattern and are getting it from another source, such as user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0613ad00b70286ab1934d869ea67a250ca17b390" translate="yes" xml:space="preserve">
          <source>The constructor of the regular expression object&amp;mdash;for example, &lt;code&gt;new RegExp('ab+c')&lt;/code&gt;&amp;mdash;results in runtime compilation of the regular expression. Use the constructor function when you know the regular expression pattern will be changing, or you don't know the pattern and obtain it from another source, such as user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982b985b74049b6033e81bffd9464c5eb31a7a91" translate="yes" xml:space="preserve">
          <source>The constructor of the regular expression object, for example, &lt;code&gt;new RegExp('ab+c')&lt;/code&gt;, provides runtime compilation of the regular expression. Use the constructor function when you know the regular expression pattern will be changing, or you don't know the pattern and are getting it from another source, such as user input.</source>
          <target state="translated">Конструктор объекта регулярного выражения, например &lt;code&gt;new RegExp('ab+c')&lt;/code&gt; , обеспечивает компиляцию регулярного выражения во время выполнения. Используйте функцию-конструктор, если вы знаете, что шаблон регулярного выражения будет изменяться, или если вы не знаете шаблон и получаете его из другого источника, например из пользовательского ввода.</target>
        </trans-unit>
        <trans-unit id="a07e8f40135c74bee08f43368c3a95047965ec6f" translate="yes" xml:space="preserve">
          <source>The constructor that was originally called, &lt;code&gt;&lt;var&gt;p&lt;/var&gt;&lt;/code&gt; above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416fbf4bb9cd00c0ca84cc3b37fc7b52c1bbf60f" translate="yes" xml:space="preserve">
          <source>The constructor that was originally called, &lt;code&gt;p&lt;/code&gt; above.</source>
          <target state="translated">Конструктор, который был первоначально вызван, &lt;code&gt;p&lt;/code&gt; Выше.</target>
        </trans-unit>
        <trans-unit id="93c6cb8f42276b96072df277b561d67f9ecc48f6" translate="yes" xml:space="preserve">
          <source>The constructor whose prototype should be used. See also the &lt;a href=&quot;../../operators/new.target&quot;&gt;&lt;code&gt;new.target&lt;/code&gt;&lt;/a&gt; operator. If &lt;code&gt;&lt;var&gt;newTarget&lt;/var&gt;&lt;/code&gt; is not present, its value defaults to &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0c8a18e529cda55e6b202394037a0f7a759263" translate="yes" xml:space="preserve">
          <source>The constructor whose prototype should be used. See also the &lt;code&gt;&lt;a href=&quot;../../operators/new.target&quot;&gt;new.target&lt;/a&gt;&lt;/code&gt; operator. If &lt;code&gt;newTarget&lt;/code&gt; is not present, it is &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">Конструктор, прототип которого следует использовать. См. Также оператор &lt;code&gt;&lt;a href=&quot;../../operators/new.target&quot;&gt;new.target&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;newTarget&lt;/code&gt; отсутствует, это &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ff09419e5e10e3cf52a3dbe62e4abf0918d5d1f" translate="yes" xml:space="preserve">
          <source>The corollary is that you need not do anything special to create a bound function to be called plainly, even if you would rather require the bound function to only be called using &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013d2f56a045b9e0a7a2b73d84c720cef68dd7ca" translate="yes" xml:space="preserve">
          <source>The correct function name is &lt;code&gt;getElementByI&lt;strong&gt;d&lt;/strong&gt;&lt;/code&gt;:</source>
          <target state="translated">Правильное имя функции - &lt;code&gt;getElementByI&lt;strong&gt;d&lt;/strong&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="23fb87e0180430148ebbc4575f3db9ebc6b874bb" translate="yes" xml:space="preserve">
          <source>The correct import usage (&lt;code&gt;App.js&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4b0c7f032e4cefae8338cbd162866b17419003" translate="yes" xml:space="preserve">
          <source>The correct usage for storing data in the Map is through the &lt;code&gt;set(&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8f0e6875ef581c720496aa923969901df56b65" translate="yes" xml:space="preserve">
          <source>The correct way of doing this is to rename the export:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de3945364d45317b571a832343df34f694f7d73" translate="yes" xml:space="preserve">
          <source>The cosine of the given number.</source>
          <target state="translated">Косинус данного числа.</target>
        </trans-unit>
        <trans-unit id="1c930f93fb8868cc6815569cb4309a14122dc34d" translate="yes" xml:space="preserve">
          <source>The cube root of the given number.</source>
          <target state="translated">Кубический корень данного числа.</target>
        </trans-unit>
        <trans-unit id="c114c8f5d2e6f7f010683b95d33e20f9c1b64386" translate="yes" xml:space="preserve">
          <source>The curly brackets look correct at a first glance, but this code snippet is missing a &lt;code&gt;{&lt;/code&gt; after the first &lt;code&gt;if&lt;/code&gt; statement. Correct would be:</source>
          <target state="translated">Фигурные скобки на первый взгляд выглядят правильно, но в этом фрагменте кода отсутствует &lt;code&gt;{&lt;/code&gt; после первого оператора &lt;code&gt;if&lt;/code&gt; . Правильно было бы:</target>
        </trans-unit>
        <trans-unit id="5f5245cf8dfef36fe67c21f6ce9d68b1136ece88" translate="yes" xml:space="preserve">
          <source>The currency string, such as the symbols &quot;$&quot; and &quot;&amp;euro;&quot; or the name &quot;Dollar&quot;, &quot;Euro&quot; depending on how &lt;code&gt;currencyDisplay&lt;/code&gt; is specified.</source>
          <target state="translated">Строка валюты, например символы &amp;laquo;$&amp;raquo; и &amp;laquo;&amp;euro;&amp;raquo; или имя &amp;laquo;Доллар&amp;raquo;, &amp;laquo;Евро&amp;raquo;, в зависимости от того, как указано &lt;code&gt;currencyDisplay&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5031ebd68a770403d01615e8330b1a0b635a85a2" translate="yes" xml:space="preserve">
          <source>The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as &quot;&lt;code&gt;USD&lt;/code&gt;&quot; for the US dollar, &quot;&lt;code&gt;EUR&lt;/code&gt;&quot; for the euro, or &quot;&lt;code&gt;CNY&lt;/code&gt;&quot; for the Chinese RMB &amp;mdash; see the &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;Current currency &amp;amp; funds code list&lt;/a&gt;. There is no default value; if the &lt;code&gt;style&lt;/code&gt; is &quot;&lt;code&gt;currency&lt;/code&gt;&quot;, the &lt;code&gt;currency&lt;/code&gt; property must be provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19ba0bd00ac262399d753d908b7d49bd67d4d73" translate="yes" xml:space="preserve">
          <source>The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as &lt;code&gt;&quot;USD&quot;&lt;/code&gt; for the US dollar, &lt;code&gt;&quot;EUR&quot;&lt;/code&gt; for the euro, or &lt;code&gt;&quot;CNY&quot;&lt;/code&gt; for the Chinese RMB &amp;mdash; see the &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;Current currency &amp;amp; funds code list&lt;/a&gt;. There is no default value; if the &lt;code&gt;style&lt;/code&gt; is &lt;code&gt;&quot;currency&quot;&lt;/code&gt;, the &lt;code&gt;currency&lt;/code&gt; property must be provided.</source>
          <target state="translated">Валюта, используемая при форматировании валюты. Возможные значения - коды валют ISO 4217, такие как &lt;code&gt;&quot;USD&quot;&lt;/code&gt; для доллара США, &lt;code&gt;&quot;EUR&quot;&lt;/code&gt; для евро или &lt;code&gt;&quot;CNY&quot;&lt;/code&gt; для китайского юаня - см. &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;Список кодов текущей валюты и фондов&lt;/a&gt; . Нет значения по умолчанию; если &lt;code&gt;style&lt;/code&gt; является &lt;code&gt;&quot;currency&quot;&lt;/code&gt; , то &lt;code&gt;currency&lt;/code&gt; должна быть предоставлена собственность.</target>
        </trans-unit>
        <trans-unit id="5dc9e50d81823798a643f009d726e60aa602bf91" translate="yes" xml:space="preserve">
          <source>The current day of month will have an impact on the behaviour of this method. Conceptually it will add the number of days given by the current day of the month to the 1st day of the new month specified as the parameter, to return the new date. For example, if the current value is 31st August 2016, calling setMonth with a value of 1 will return 2nd March 2016. This is because in 2016 February had 29 days.</source>
          <target state="translated">Текущий день месяца повлияет на поведение этого метода.Концептуально он прибавит к 1-му дню нового месяца,указанному в качестве параметра,количество дней,заданных текущим днем месяца,для возврата новой даты.Например,если текущее значение равно 31 августа 2016 года,то звонок в setMonth со значением 1 вернётся 2 марта 2016 года.Это связано с тем,что в 2016 году февраль имел 29 дней.</target>
        </trans-unit>
        <trans-unit id="07bc1f220d7417fecbaf41181d3f1e75442bc0de" translate="yes" xml:space="preserve">
          <source>The current element being processed in the &lt;code&gt;Set&lt;/code&gt;. As there are no keys in &lt;code&gt;Set&lt;/code&gt;, the value is passed for both arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d81a6aba37ff18bd5d8c2ff73ec50a431f3bde" translate="yes" xml:space="preserve">
          <source>The current element being processed in the array.</source>
          <target state="translated">Текущий элемент обрабатывается в массиве.</target>
        </trans-unit>
        <trans-unit id="524f1003256858d5c9cdfa90bf0c2de1c7abe3e7" translate="yes" xml:space="preserve">
          <source>The current element being processed in the typed array.</source>
          <target state="translated">Текущий элемент обрабатывается в типизированном массиве.</target>
        </trans-unit>
        <trans-unit id="5d4c2ee3a20a466583eb13b2f1a146123c0d3ed2" translate="yes" xml:space="preserve">
          <source>The current element in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60f4c692eb4dfbdfed4ca0839000a6e47bd0087" translate="yes" xml:space="preserve">
          <source>The data type &lt;strong&gt;symbol&lt;/strong&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive data type&lt;/a&gt;.</source>
          <target state="translated">Типа данных &lt;strong&gt;символы&lt;/strong&gt; являются &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;примитивным типом данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7072b9ca0edc6984be99368bfce251184b17f7c" translate="yes" xml:space="preserve">
          <source>The data type &lt;strong&gt;symbol&lt;/strong&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive data type&lt;/a&gt;. The &lt;code&gt;Symbol()&lt;/code&gt; function returns a value of type &lt;strong&gt;symbol&lt;/strong&gt;, has static properties that expose several members of built-in objects, has static methods that expose the global symbol registry, and resembles a built-in object class, but is incomplete as a constructor because it does not support the syntax &quot;&lt;code&gt;new Symbol()&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4fccd524441cf00caefa27a863039b3cf91544" translate="yes" xml:space="preserve">
          <source>The date and time formats can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Форматы даты и времени можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b7d6deeb23ea7e4f2f4a7af7e5707680addeafeb" translate="yes" xml:space="preserve">
          <source>The date formatting style to use when calling &lt;code&gt;format()&lt;/code&gt;. Possible values include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666a0d44dc5f74d5cba4609d254e995f1bf62311" translate="yes" xml:space="preserve">
          <source>The date time string may be in a simplified &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO 8601&lt;/a&gt; format. For example, &lt;code&gt;&quot;2011-10-10&quot;&lt;/code&gt; (just date) or &lt;code&gt;&quot;2011-10-10T14:48:00&quot;&lt;/code&gt; (date and time) can be passed and parsed. Where the string is ISO 8601 date only, the UTC time zone is used to interpret arguments. If the string is date and time in &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO 8601&lt;/a&gt; format, it will be treated as local.</source>
          <target state="translated">Строка даты и времени может быть в упрощенном формате &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO 8601&lt;/a&gt; . Например, &lt;code&gt;&quot;2011-10-10&quot;&lt;/code&gt; (только дата) или &lt;code&gt;&quot;2011-10-10T14:48:00&quot;&lt;/code&gt; (дата и время) можно передать и проанализировать. Если строка представляет собой только дату ISO 8601, часовой пояс UTC используется для интерпретации аргументов. Если строка представляет собой дату и время в формате &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO 8601&lt;/a&gt; , она будет рассматриваться как локальная.</target>
        </trans-unit>
        <trans-unit id="d130d221e393af90c0ed6eeecc502bde90336a08" translate="yes" xml:space="preserve">
          <source>The date to format.</source>
          <target state="translated">Дата для форматирования.</target>
        </trans-unit>
        <trans-unit id="dfa58d4d180b7df388a433a28b25b9a135add3f3" translate="yes" xml:space="preserve">
          <source>The decimal exponential literal is specified by the following format: &lt;code&gt;beN&lt;/code&gt;; where &lt;code&gt;b&lt;/code&gt; is a base number (integer or floating), followed by &lt;code&gt;e&lt;/code&gt; char (which serves as separator or &lt;em&gt;exponent indicator&lt;/em&gt;) and&lt;code&gt;N&lt;/code&gt;, which is &lt;em&gt;exponent&lt;/em&gt; or &lt;em&gt;power&lt;/em&gt; number &amp;ndash; a signed integer (as per 2019 ECMA-262 specs):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f108ef11ec4436baa6c0f00ae9e1b84307280093" translate="yes" xml:space="preserve">
          <source>The decimal separator string (&quot;.&quot;).</source>
          <target state="translated">Десятичная разделительная строка (&quot;.&quot;).</target>
        </trans-unit>
        <trans-unit id="4c8dd0c5197136a93666dbb1684087ae62934be1" translate="yes" xml:space="preserve">
          <source>The decrement operator (&lt;code&gt;--&lt;/code&gt;) decrements (subtracts one from) its operand and returns a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="910c3fbe938cfd9b387a32e9bc34f0a45b870d47" translate="yes" xml:space="preserve">
          <source>The decrement operator decrements (subtracts one from) its operand and returns a value.</source>
          <target state="translated">Оператор декремента декрементирует (вычитает один из)свой операнд и возвращает значение.</target>
        </trans-unit>
        <trans-unit id="d3a3823030018d8dfc9d13ac5d5024b596e690f5" translate="yes" xml:space="preserve">
          <source>The default Unicode collation element table order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759bfc7bc1feeabfc407984ea40226d336b9acd4" translate="yes" xml:space="preserve">
          <source>The default argument is evaluated at &lt;em&gt;call time&lt;/em&gt;. So, unlike (for example) Python, a new object is created each time the function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490855b400d057b93a21637883df08ab89c24f3f" translate="yes" xml:space="preserve">
          <source>The default argument is evaluated at call time, so unlike e.g. Python, a new object is created each time the function is called.</source>
          <target state="translated">Аргумент по умолчанию вычисляется во время вызова,поэтому в отличие от,например,Python,каждый раз при вызове функции создается новый объект.</target>
        </trans-unit>
        <trans-unit id="957b857fe9032487dca6277c4f80f6900d49b5d3" translate="yes" xml:space="preserve">
          <source>The default array properties that are excluded from &lt;code&gt;with&lt;/code&gt; bindings are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60352eea3410e84a3191b72431afaa8b6d3183fe" translate="yes" xml:space="preserve">
          <source>The default array properties that are excluded from &lt;code&gt;with&lt;/code&gt; bindings are: copyWithin, entries, fill, find, findIndex, includes, keys, and values.</source>
          <target state="translated">Свойства массива по умолчанию, которые исключены из &lt;code&gt;with&lt;/code&gt; креплениями являются: copyWithin, записей, заливка, найти, findIndex, включает в себя, ключи и значения.</target>
        </trans-unit>
        <trans-unit id="fc7be41d69f72f251344d3a32f7d3500e5b19a26" translate="yes" xml:space="preserve">
          <source>The default function just concatenates the parts into a single string. If there is an expression preceding the template literal (&lt;code&gt;&lt;var&gt;tag&lt;/var&gt;&lt;/code&gt; here), this is called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2e5c202585ddc67e01c8a15ad6c14853b1024b" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;&quot;variant&quot;&lt;/code&gt; for usage &lt;code&gt;&quot;sort&quot;&lt;/code&gt;; it's locale dependent for usage &lt;code&gt;&quot;search&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию &lt;code&gt;&quot;variant&quot;&lt;/code&gt; для использования &lt;code&gt;&quot;sort&quot;&lt;/code&gt; ; это зависит от локали для использования &lt;code&gt;&quot;search&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="575ea9e4c460d8bcd17e3b3e10695e0d5c392b70" translate="yes" xml:space="preserve">
          <source>The default line ending varies depending on the platform (Unix, Windows, etc.). The line splitting provided in this example works on all platforms.</source>
          <target state="translated">Окончание строки по умолчанию варьируется в зависимости от платформы (Unix,Windows и т.д.).Деление строк,представленное в данном примере,работает на всех платформах.</target>
        </trans-unit>
        <trans-unit id="8079d1e1b0ab48a93aa4b5699d42a3cb6e1ff842" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if all component properties are &lt;a href=&quot;../../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; are assumed to be &quot;&lt;code&gt;numeric&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51d5bc9828c9f3e697bdef77251371c861406400" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if the &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt; properties are all &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, and &lt;code&gt;second&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию для каждого свойства компонента даты и времени является &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , но если &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; , &lt;code&gt;second&lt;/code&gt; свойства все &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , то &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; , и &lt;code&gt;second&lt;/code&gt; считаются &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ddf17b02e4292879e3db354784c90cfc09a8e02" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if the &lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt; properties are all &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию для каждого свойства компонента даты и времени не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , но если все свойства &lt;code&gt;day&lt;/code&gt; &lt;code&gt;weekday&lt;/code&gt; , &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и дня не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , то предполагается , что &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; являются &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50ec5acd3f905b8f0cc746b02ed2067efd52b285" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if the &lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt; properties are all &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, and &lt;code&gt;second&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию для каждого свойства компонента даты и времени не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , но если все свойства &lt;code&gt;weekday&lt;/code&gt; , &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt; , &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; , &lt;code&gt;second&lt;/code&gt; не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , то предполагается , что &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt; , &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; и &lt;code&gt;second&lt;/code&gt; быть &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1cad2c938251528e24aa9f15953e623a4c08304" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. But, if the &lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; properties are all &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df60473a24d4fcd4ef04c265bb72340d1de6ef6c" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if all component properties are &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию для каждого свойства компонента даты и времени не &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , но если все свойства компонента не &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , то &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; считаются &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b0122a05c7a89cab56eaaa6e72bda4166aef309" translate="yes" xml:space="preserve">
          <source>The deprecated &lt;code&gt;&lt;strong&gt;compile&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; method is used to (re-)compile a regular expression during execution of a script. It is basically the same as the &lt;code&gt;RegExp&lt;/code&gt; constructor.</source>
          <target state="translated">Устаревший метод &lt;code&gt;&lt;strong&gt;compile&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; используется для (повторной) компиляции регулярного выражения во время выполнения скрипта. По сути, он такой же, как конструктор &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a6e3caec01441368ab687b0ffe79769141bf583" translate="yes" xml:space="preserve">
          <source>The depth level specifying how deep a nested array structure should be flattened. Defaults to 1.</source>
          <target state="translated">Уровень глубины,определяющий,насколько глубокой должна быть вложенная структура массива.По умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="6a1ffc0dfd620e5610e05b3f9fb111a07803fd2a" translate="yes" xml:space="preserve">
          <source>The descriptor for the property being defined or modified.</source>
          <target state="translated">Дескриптор определяемого или изменяемого свойства.</target>
        </trans-unit>
        <trans-unit id="d8912c766c52dc003027b1c9513ec42e96773a76" translate="yes" xml:space="preserve">
          <source>The destructuring assignment uses similar syntax, but on the left-hand side of the assignment to define what values to unpack from the sourced variable.</source>
          <target state="translated">Деструктивное присваивание использует аналогичный синтаксис,но в левой части присваивания для определения того,какие значения распаковывать из исходной переменной.</target>
        </trans-unit>
        <trans-unit id="aa3175f58177aea6864d139aca99112779859078" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; and the &lt;code&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/code&gt; constructor is in the handling of integer arguments: &lt;code&gt;&lt;strong&gt;Array.of(7)&lt;/strong&gt;&lt;/code&gt; creates an array with a single element, &lt;code&gt;7&lt;/code&gt;, whereas &lt;code&gt;&lt;strong&gt;Array(7)&lt;/strong&gt;&lt;/code&gt; creates an empty array with a &lt;code&gt;length&lt;/code&gt; property of 7 (&lt;strong&gt;Note:&lt;/strong&gt; this implies an array of &lt;code&gt;7&lt;/code&gt; empty slots, not slots with actual &lt;code&gt;undefined&lt;/code&gt; values).</source>
          <target state="translated">Разница между &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; и конструктором &lt;code&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/code&gt; заключается в обработке целочисленных аргументов: &lt;code&gt;&lt;strong&gt;Array.of(7)&lt;/strong&gt;&lt;/code&gt; создает массив с одним элементом, &lt;code&gt;7&lt;/code&gt; , тогда как &lt;code&gt;&lt;strong&gt;Array(7)&lt;/strong&gt;&lt;/code&gt; создает пустой массив со свойством &lt;code&gt;length&lt;/code&gt; , равным 7 ( &lt;strong&gt;Примечание:&lt;/strong&gt; это подразумевает массив из &lt;code&gt;7&lt;/code&gt; пустых слотов, а не слотов с фактическими &lt;code&gt;undefined&lt;/code&gt; значениями).</target>
        </trans-unit>
        <trans-unit id="7c253f6c8a51a3d09b9af4dfdf88febba9d717d8" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; and the &lt;code&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/code&gt; constructor is in the handling of integer arguments: &lt;code&gt;&lt;strong&gt;Array.of(7)&lt;/strong&gt;&lt;/code&gt; creates an array with a single element, &lt;code&gt;7&lt;/code&gt;, whereas &lt;code&gt;&lt;strong&gt;Array(7)&lt;/strong&gt;&lt;/code&gt; creates an empty array with a &lt;code&gt;length&lt;/code&gt; property of &lt;code&gt;7&lt;/code&gt; (&lt;strong&gt;Note:&lt;/strong&gt; this implies an array of &lt;code&gt;7&lt;/code&gt; empty slots, not slots with actual &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b16c2a8e0bc7fd5abd66647095b4ab23e4208d" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;substring()&lt;/code&gt; and &lt;code&gt;substr()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116f60e8f0a2b57e4e20e4c0a1dd8bf787152c51" translate="yes" xml:space="preserve">
          <source>The difference between the sticky flag and the global flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29060c7294aaeb4cdb06a46f8fc802bff5a30dec" translate="yes" xml:space="preserve">
          <source>The difference in associativity comes into play when there are multiple operators of the same precedence. With only one operator or operators of different precedences, associativity doesn't affect the output, as seen in the example above. In the example below, observe how associativity affects the output when multiple of the same operator are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3480a79be927bbb5f14ae973492e695c7b92b89e" translate="yes" xml:space="preserve">
          <source>The display name of the function.</source>
          <target state="translated">Отображаемое имя функции.</target>
        </trans-unit>
        <trans-unit id="aa44c9826c9ee2fe6b7b0bee767d3469740ed5c7" translate="yes" xml:space="preserve">
          <source>The division assignment operator (&lt;code&gt;/=&lt;/code&gt;) divides a variable by the value of the right operand and assigns the result to the variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bceca5f189abd8f44b0e66132ffed15f1fbbb42b" translate="yes" xml:space="preserve">
          <source>The division assignment operator &lt;strong&gt;divides&lt;/strong&gt; a variable by the value of the right operand and assigns the result to the variable. See the &lt;a href=&quot;arithmetic_operators#Division&quot;&gt;division operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присвоения деления &lt;strong&gt;делит&lt;/strong&gt; переменную на значение правого операнда и присваивает результат переменной. Подробнее см. &lt;a href=&quot;arithmetic_operators#Division&quot;&gt;Оператор деления&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0341634cfd4416d06db5a8f1a5389193620afd0f" translate="yes" xml:space="preserve">
          <source>The division operator (&lt;code&gt;/&lt;/code&gt;) produces the quotient of its operands where the left operand is the dividend and the right operand is the divisor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f7cc1394d79a2c585ebb42aab308a2519ba5bda" translate="yes" xml:space="preserve">
          <source>The division operator produces the quotient of its operands where the left operand is the dividend and the right operand is the divisor.</source>
          <target state="translated">Оператор деления производит коэффициент своих операндов,где левый операнд является дивидендом,а правый операнд-делителем.</target>
        </trans-unit>
        <trans-unit id="702e5e606f58d4f03d2c9bb6f52b7860f6794ad9" translate="yes" xml:space="preserve">
          <source>The dot operator (&lt;code&gt;.&lt;/code&gt;) is used for &lt;a href=&quot;../operators/property_accessors&quot;&gt;property access&lt;/a&gt;. You will have to specify the name of the property that you want to access. For computed property access, you might need to change your property access from using a dot to using square brackets. These will allow you to compute an expression. Maybe you intended to do concatenation instead? A plus operator (&lt;code&gt;+&lt;/code&gt;) is needed in that case. Please see the examples below.</source>
          <target state="translated">Оператор точки ( &lt;code&gt;.&lt;/code&gt; ) Используется для &lt;a href=&quot;../operators/property_accessors&quot;&gt;доступа&lt;/a&gt; к свойствам . Вам нужно будет указать имя свойства, к которому вы хотите получить доступ. Для доступа к вычисляемым свойствам вам может потребоваться изменить доступ к свойству с точки на квадратные скобки. Это позволит вам вычислить выражение. Может быть, вы вместо этого намеревались выполнить конкатенацию? В этом случае необходим оператор &amp;laquo;плюс&amp;raquo; ( &lt;code&gt;+&lt;/code&gt; ). См. Примеры ниже.</target>
        </trans-unit>
        <trans-unit id="b463ff929e9917b779b4e606caf8f57bb7992205" translate="yes" xml:space="preserve">
          <source>The element associated with the specified key in the &lt;code&gt;WeakMap&lt;/code&gt; object. If the key can't be found, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Элемент, связанный с указанным ключом в объекте &lt;code&gt;WeakMap&lt;/code&gt; . Если ключ не может быть найден, возвращается &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2669c5d093ce3ab35bb3b29e181037db1a32f431" translate="yes" xml:space="preserve">
          <source>The element associated with the specified key, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if the key can't be found in the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c984bdef63710214dd443ae7be9a3a7a954b51b3" translate="yes" xml:space="preserve">
          <source>The element to search for.</source>
          <target state="translated">Элемент для поиска.</target>
        </trans-unit>
        <trans-unit id="c9ded09aa440d2ecd650a1c98bf1dc5f92d1a085" translate="yes" xml:space="preserve">
          <source>The element(s) to add to the end of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dfe96ca0e23c5dcafb50b3016bc202759318e2" translate="yes" xml:space="preserve">
          <source>The elements interval to fill is [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;).</source>
          <target state="translated">Интервал заполнения элементов - [ &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b2f71b15736679a743df6338568998902eadb28" translate="yes" xml:space="preserve">
          <source>The elements of the array are converted to strings using their &lt;code&gt;toLocaleString&lt;/code&gt; methods.</source>
          <target state="translated">Элементы массива преобразуются в строки с помощью их методов &lt;code&gt;toLocaleString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="976857b63ffa0fa8b49868356a30331d1c7ead7f" translate="yes" xml:space="preserve">
          <source>The elements to add to the array, beginning at the &lt;code&gt;start&lt;/code&gt; index. If you don't specify any elements, &lt;code&gt;splice()&lt;/code&gt; will only remove elements from the array.</source>
          <target state="translated">Элементы, которые нужно добавить в массив, начиная с &lt;code&gt;start&lt;/code&gt; индекса. Если вы не укажете никаких элементов, &lt;code&gt;splice()&lt;/code&gt; удалит только элементы из массива.</target>
        </trans-unit>
        <trans-unit id="198667ef5375d85508c4e39fb04519665c2c61fc" translate="yes" xml:space="preserve">
          <source>The elements to add to the array, beginning from &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt;. If you do not specify any elements, &lt;code&gt;splice()&lt;/code&gt; will only remove elements from the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3edd07e7b05dfcea108ea0bcdc3aa9e974a7a9" translate="yes" xml:space="preserve">
          <source>The elements to add to the end of the array.</source>
          <target state="translated">Элементы для добавления в конец массива.</target>
        </trans-unit>
        <trans-unit id="f40d6feae1f747e51cf8f3a327e47b924b1b49ef" translate="yes" xml:space="preserve">
          <source>The elements to add to the front of the &lt;code&gt;&lt;var&gt;arr&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d8d77140911a1a18dc3282b0bb04677e86f944" translate="yes" xml:space="preserve">
          <source>The elements to add to the front of the array.</source>
          <target state="translated">Элементы для добавления во фронт массива.</target>
        </trans-unit>
        <trans-unit id="964309413cb886b8ad9a40d1f14f5d85eb64b4e5" translate="yes" xml:space="preserve">
          <source>The empty statement is a semicolon (;) indicating that no statement will be executed, even if JavaScript syntax requires one. The opposite behavior, where you want multiple statements, but JavaScript only allows a single one, is possible using a&lt;a href=&quot;block&quot;&gt; block statement&lt;/a&gt;; it combines several statements into a single one.</source>
          <target state="translated">Пустой оператор - это точка с запятой (;), указывающая, что ни один оператор не будет выполняться, даже если синтаксис JavaScript этого требует. Обратное поведение, когда вам нужно несколько операторов, а JavaScript допускает только один, возможно с использованием оператора &lt;a href=&quot;block&quot;&gt;блока&lt;/a&gt; ; он объединяет несколько утверждений в одно.</target>
        </trans-unit>
        <trans-unit id="f9c9dd7c3b2248ae60552eb4dbd9dc092a101bf8" translate="yes" xml:space="preserve">
          <source>The empty statement is a semicolon (&lt;code&gt;;&lt;/code&gt;) indicating that no statement will be executed, even if JavaScript syntax requires one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e66a9d24a75b87f328012bbcd3828a1b25f0042" translate="yes" xml:space="preserve">
          <source>The empty statement is sometimes used with loop statements. See the following example with an empty loop body:</source>
          <target state="translated">Пустой оператор иногда используется с циклами.См.следующий пример с пустым телом цикла:</target>
        </trans-unit>
        <trans-unit id="a2d4392192704672708baa27bca8082aa597d6d8" translate="yes" xml:space="preserve">
          <source>The encapsulation is enforced by the language. It is a syntax error to refer to &lt;code&gt;#&lt;/code&gt; names from out of scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5add654fda5490901940118cf18012fb2f509a" translate="yes" xml:space="preserve">
          <source>The end of the generator function is reached. In this case, execution of the generator ends and an &lt;code&gt;IteratorResult&lt;/code&gt; is returned to the caller in which the &lt;code&gt;value&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e729cba7ea56759d3b8069fa2efa9020b6cc62" translate="yes" xml:space="preserve">
          <source>The end of the generator function is reached; in this case, execution of the generator ends and an &lt;code&gt;IteratorResult&lt;/code&gt; is returned to the caller in which the &lt;code&gt;value&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Достигнут конец функции генератора; в этом случае выполнение генератора завершается, и вызывающей стороне возвращается &lt;code&gt;IteratorResult&lt;/code&gt; , в котором &lt;code&gt;value&lt;/code&gt; не &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; а &lt;code&gt;done&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56abeb854f0dcfe77fd345ff29a8379a9c57a29d" translate="yes" xml:space="preserve">
          <source>The equality operator (&lt;code&gt;==&lt;/code&gt;) checks whether its two operands are equal, returning a Boolean result. Unlike the &lt;a href=&quot;strict_equality&quot;&gt;strict equality&lt;/a&gt; operator, it attempts to convert and compare operands that are of different types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbca4f8f7dbe7cb1b69857d4c5fefd4afb8e501" translate="yes" xml:space="preserve">
          <source>The equality operator converts the operands if they are &lt;strong&gt;not of the same type&lt;/strong&gt;, then applies strict comparison. If &lt;strong&gt;both operands are objects&lt;/strong&gt;, then JavaScript compares internal references which are equal when operands refer to the same object in memory.</source>
          <target state="translated">Оператор равенства преобразует операнды, если они &lt;strong&gt;не одного типа&lt;/strong&gt; , а затем применяет строгое сравнение. Если &lt;strong&gt;оба операнда являются объектами&lt;/strong&gt; , тогда JavaScript сравнивает внутренние ссылки, которые равны, когда операнды ссылаются на один и тот же объект в памяти.</target>
        </trans-unit>
        <trans-unit id="68f7a7e8feed8f40edfa45544cb9e72d68b1f136" translate="yes" xml:space="preserve">
          <source>The equality operators (&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;) use the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;Abstract Equality Comparison Algorithm&lt;/a&gt; to compare two operands. This can be roughly summarised as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb51ee8b35550f1e821d2a598b3340865194239" translate="yes" xml:space="preserve">
          <source>The equivalent call in traditional syntax looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f25f2b97a54ffd73232014fd7417667a535120" translate="yes" xml:space="preserve">
          <source>The example below illustrates &lt;code&gt;includes()&lt;/code&gt; method called on the function's &lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e78bc7c4d863ae5f10706cc11d89d0d5f18cb90" translate="yes" xml:space="preserve">
          <source>The example below shows how to implement a self-archiving object. When &lt;code&gt;temperature&lt;/code&gt; property is set, the &lt;code&gt;archive&lt;/code&gt; array gets a log entry.</source>
          <target state="translated">В приведенном ниже примере показано, как реализовать объект самоархивирования. Когда задано свойство &lt;code&gt;temperature&lt;/code&gt; , &lt;code&gt;archive&lt;/code&gt; массив получает запись журнала.</target>
        </trans-unit>
        <trans-unit id="7d8d6dfa3c30cdcccd15cfd9b45e7e2e601d4b42" translate="yes" xml:space="preserve">
          <source>The example below shows how to set a getter for a property. It doesn't specify a &lt;a href=&quot;../functions/set&quot;&gt;setter&lt;/a&gt;, so a &lt;code&gt;TypeError&lt;/code&gt; will be thrown upon trying to set the &lt;code&gt;temperature&lt;/code&gt; property to &lt;code&gt;30&lt;/code&gt;. For more details see also the &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2faf576348d1b75c7c5750450ed07e4e5aa37c08" translate="yes" xml:space="preserve">
          <source>The example below shows how to set getter for a property. It doesn't specify a &lt;a href=&quot;../functions/set&quot;&gt;setter&lt;/a&gt;, so a &lt;code&gt;TypeError&lt;/code&gt; will be thrown upon trying to set the &lt;code&gt;temperature&lt;/code&gt; property to &lt;code&gt;30&lt;/code&gt;. For more details see also the &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">В приведенном ниже примере показано, как установить геттер для свойства. Он не указывает &lt;a href=&quot;../functions/set&quot;&gt;сеттер&lt;/a&gt; , поэтому при попытке установить для свойства &lt;code&gt;temperature&lt;/code&gt; значение &lt;code&gt;30&lt;/code&gt; будет &lt;code&gt;TypeError&lt;/code&gt; . Для получения дополнительных сведений см. Также &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f3833ca0dced6eccd9dc2686c178826f0540b65" translate="yes" xml:space="preserve">
          <source>The example function &lt;code&gt;tetheredGetNumber()&lt;/code&gt; shows that a promise generator will utilize &lt;code&gt;reject()&lt;/code&gt; while setting up an asynchronous call, or within the call-back, or both. The function &lt;code&gt;promiseGetWord()&lt;/code&gt; illustrates how an API function might generate and return a promise in a self-contained manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a543c742aa81833c02ea279d11b67484a1b79a93" translate="yes" xml:space="preserve">
          <source>The examples below are throwing strings. This is considered bad practice. Always throw an instance of &lt;a href=&quot;../error&quot;&gt;Error&lt;/a&gt;. Otherwise the part doing the catching would have to make checks to see if the argument was a string or an error, and you might lose valuable information like stack traces</source>
          <target state="translated">Примеры ниже - это бросание струн. Это считается плохой практикой. Всегда генерируйте экземпляр &lt;a href=&quot;../error&quot;&gt;Error&lt;/a&gt; . В противном случае часть, выполняющая перехват, должна будет выполнить проверки, чтобы увидеть, является ли аргумент строкой или ошибкой, и вы можете потерять ценную информацию, такую ​​как трассировки стека.</target>
        </trans-unit>
        <trans-unit id="bb1bcdbffff91b9c3ff449f3a1db34d1c49b45ab" translate="yes" xml:space="preserve">
          <source>The exception identifier</source>
          <target state="translated">Идентификатор исключения</target>
        </trans-unit>
        <trans-unit id="ce80bced1d577c0ec07cff7172c9496c59661560" translate="yes" xml:space="preserve">
          <source>The exception to throw. For debugging purposes, it is useful to make it an &lt;code&gt;instanceof&lt;/code&gt;&lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Исключение, которое нужно выбросить. В целях отладки полезно сделать его &lt;code&gt;instanceof&lt;/code&gt; &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54ac630246e15feb3e415b9e4a0af2998597121e" translate="yes" xml:space="preserve">
          <source>The expected value to test .</source>
          <target state="translated">Ожидаемое значение для проверки .</target>
        </trans-unit>
        <trans-unit id="afe3f22e84d4424195badcc3f4b24fba7253849f" translate="yes" xml:space="preserve">
          <source>The expected value to test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2746092c21a3490e05af5310de9a2a714ec48b94" translate="yes" xml:space="preserve">
          <source>The experimental pipeline operator &lt;code&gt;|&amp;gt;&lt;/code&gt; (currently at stage 1) allows the creation of chained function calls in a readable manner. Basically, the pipeline operator provides syntactic sugar on a function call with a single argument allowing you to write</source>
          <target state="translated">Экспериментальный оператор конвейера &lt;code&gt;|&amp;gt;&lt;/code&gt; (в настоящее время на этапе 1) позволяет создавать связанные вызовы функций в удобочитаемой форме. По сути, оператор конвейера обеспечивает синтаксический сахар при вызове функции с одним аргументом, позволяющим писать</target>
        </trans-unit>
        <trans-unit id="320dabf35549ff785ee3314d282478c9cf5cca62" translate="yes" xml:space="preserve">
          <source>The experimental pipeline operator &lt;code&gt;|&amp;gt;&lt;/code&gt; (currently at stage 1) pipes the value of an expression into a function. This allows the creation of chained function calls in a readable manner. The result is syntactic sugar in which a function call with a single argument can be written like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f035e240e14007c0c27a0f4417979f25ca82a137" translate="yes" xml:space="preserve">
          <source>The exponent used to raise the &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1e08828c1c1c64a2e274d4ee8e4d2a3195e57a" translate="yes" xml:space="preserve">
          <source>The exponent used to raise the &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">Показатель степени используется для увеличения &lt;code&gt;base&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="328dec7c54e1e4924d1bde45fe1a348426704b50" translate="yes" xml:space="preserve">
          <source>The exponentiation assignment operator (&lt;code&gt;**=&lt;/code&gt;) raises the value of a variable to the power of the right operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4a21ddf5867a520cbd03423b51cdda85a33100" translate="yes" xml:space="preserve">
          <source>The exponentiation assignment operator evaluates to the result of raising first operand to the &lt;strong&gt;power&lt;/strong&gt; second operand. See the &lt;a href=&quot;arithmetic_operators#Exponentiation&quot;&gt;exponentiation operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания возведения в степень оценивает результат возведения первого операнда в &lt;strong&gt;степень&lt;/strong&gt; второго операнда. Подробнее см. &lt;a href=&quot;arithmetic_operators#Exponentiation&quot;&gt;Оператор возведения&lt;/a&gt; в степень .</target>
        </trans-unit>
        <trans-unit id="bdbed242a8d30d3b1dec579acd5c38d2a78e7d80" translate="yes" xml:space="preserve">
          <source>The exponentiation operator (&lt;code&gt;**&lt;/code&gt;) returns the result of raising the first operand to the power of the second operand. It is equivalent to &lt;code&gt;Math.pow&lt;/code&gt;, except it also accepts BigInts as operands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4327e9a1fb877b9affeaa85b8d19b069f3272d0c" translate="yes" xml:space="preserve">
          <source>The exponentiation operator is right-associative: &lt;code&gt;&lt;var&gt;a&lt;/var&gt; ** &lt;var&gt;b&lt;/var&gt; ** &lt;var&gt;c&lt;/var&gt;&lt;/code&gt; is equal to &lt;code&gt;&lt;var&gt;a&lt;/var&gt; ** (&lt;var&gt;b&lt;/var&gt; ** &lt;var&gt;c&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4176a32312ff185a693c46e64c016529338241a" translate="yes" xml:space="preserve">
          <source>The exponentiation operator returns the result of raising first operand to the power second operand. that is, &lt;code&gt;var1&lt;/code&gt;&lt;sup&gt;&lt;code&gt;var2&lt;/code&gt;&lt;/sup&gt;, in the preceding statement, where &lt;code&gt;var1&lt;/code&gt; and &lt;code&gt;var2&lt;/code&gt; are variables. Exponentiation operator is right associative. &lt;code&gt;a ** b ** c&lt;/code&gt; is equal to &lt;code&gt;a ** (b ** c)&lt;/code&gt;.</source>
          <target state="translated">Оператор возведения в степень возвращает результат возведения первого операнда в степень второго операнда. то есть &lt;code&gt;var1&lt;/code&gt; &lt;sup&gt; &lt;code&gt;var2&lt;/code&gt; &lt;/sup&gt; в предыдущем операторе, где &lt;code&gt;var1&lt;/code&gt; и &lt;code&gt;var2&lt;/code&gt; - переменные. Оператор возведения в степень ассоциативен справа. &lt;code&gt;a ** b ** c&lt;/code&gt; равно &lt;code&gt;a ** (b ** c)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0ff10bc03a45ce0e9291e3e6951c8f6cb0e9efe" translate="yes" xml:space="preserve">
          <source>The expression after the &lt;code&gt;yield&lt;/code&gt; keyword is optional and omitting it no longer throws a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;function* countAppleSales() { yield; }&lt;/code&gt;</source>
          <target state="translated">Выражение после ключевого слова &lt;code&gt;yield&lt;/code&gt; является необязательным, и его &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; больше не вызывает SyntaxError : &lt;code&gt;function* countAppleSales() { yield; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6688448e60de73657152c36c5e46b89ebe52ab99" translate="yes" xml:space="preserve">
          <source>The expression closure syntax is a shorthand for writing simple function.</source>
          <target state="translated">Синтаксис закрытия выражения-это сокращение для написания простой функции.</target>
        </trans-unit>
        <trans-unit id="21383b56f31b618cf9bbdf7920f702063119a5ac" translate="yes" xml:space="preserve">
          <source>The expression is not allowed at the start of a statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96688ce440f140a42b107e921ec490d12daf7cab" translate="yes" xml:space="preserve">
          <source>The expression to throw.</source>
          <target state="translated">Выражение,чтобы бросить.</target>
        </trans-unit>
        <trans-unit id="520c80691ea2d4a4e974359ab8a8851d7f401d54" translate="yes" xml:space="preserve">
          <source>The expression which returns an iterable object.</source>
          <target state="translated">Выражение,которое возвращает итерабельный объект.</target>
        </trans-unit>
        <trans-unit id="a8bb2c9604319c8bb786e0cb1b99192e83f0a82e" translate="yes" xml:space="preserve">
          <source>The expression whose value is to be returned. If omitted, &lt;code&gt;undefined&lt;/code&gt; is returned instead.</source>
          <target state="translated">Выражение, значение которого должно быть возвращено. Если опущено, вместо этого возвращается &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b5cd4e8f8a8553917be07119437075d61bc8210" translate="yes" xml:space="preserve">
          <source>The fallback to use, the default is &lt;code&gt;&quot;code&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5c50ebb92756f0707c6ed0a09e38af923761d0" translate="yes" xml:space="preserve">
          <source>The finally-block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5dce18bb14a0cbef372bf3dc3a7962d359dcfc" translate="yes" xml:space="preserve">
          <source>The first element for comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4ed9da9983831b6e15987af90f3bd77d33de85" translate="yes" xml:space="preserve">
          <source>The first element to be searched is found at &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; for positive values of &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt;, or at &lt;code&gt;&lt;var&gt;arr&lt;/var&gt;.length + &lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; for negative values of &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; (using the &lt;a href=&quot;https://en.wikipedia.org/wiki/absolute%20value&quot;&gt;absolute value&lt;/a&gt; of &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; as the number of elements from the end of the array at which to start the search).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faf3645812e98e818a8b880cea16c9a0cd2b180" translate="yes" xml:space="preserve">
          <source>The first example creates a class called &lt;code&gt;Square&lt;/code&gt; from a class called &lt;code&gt;Polygon&lt;/code&gt;. This example is extracted from this &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;(source)&lt;/a&gt;.</source>
          <target state="translated">В первом примере создается класс &lt;code&gt;Square&lt;/code&gt; из класса &lt;code&gt;Polygon&lt;/code&gt; . Этот пример взят из этой &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;живой демонстрации &lt;/a&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;(источник)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1687b2101b8a8d269aea32aabe07e05c04201095" translate="yes" xml:space="preserve">
          <source>The first index of the element in the array; &lt;code&gt;-1&lt;/code&gt; if not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6023d482470ad1c2cdb57b2bfef6b50e5f030b1f" translate="yes" xml:space="preserve">
          <source>The first index of the element in the array; &lt;strong&gt;-1&lt;/strong&gt; if not found.</source>
          <target state="translated">Первый индекс элемента в массиве; &lt;strong&gt;-1,&lt;/strong&gt; если не найден.</target>
        </trans-unit>
        <trans-unit id="e9e21f4e3a3ffd5c425a4b62c284801bdbcc39a4" translate="yes" xml:space="preserve">
          <source>The first line of the body of function &lt;code&gt;foo&lt;/code&gt; is executed synchronously, with the await expression configured with the pending promise. Progress through &lt;code&gt;foo&lt;/code&gt; is then suspended and control is yielded back to the function that called &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b8fb4edcec4c4a905b93de6600a7d06138fb65" translate="yes" xml:space="preserve">
          <source>The first one is an &lt;em&gt;O(&lt;var&gt;n&lt;/var&gt;)&lt;/em&gt; set and search (&lt;var&gt;n&lt;/var&gt; being the number of keys in the map) since both operations must iterate through the list of keys to find a matching value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1845f10e7d138b68d6c058652b5f826e70a6408a" translate="yes" xml:space="preserve">
          <source>The first one is much smaller and more performant, but does not work when using the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875815fb2257b9e334b66f58bfb0281f9e9c9f44" translate="yes" xml:space="preserve">
          <source>The first time the callback is called, &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; can be one of two values. If &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided in the call to &lt;code&gt;reduce()&lt;/code&gt;, then &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; will be equal to &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; will be equal to the first value in the array. If no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided, then &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; will be equal to the first value in the array, and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; will be equal to the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f839bd6e11cf838ef3faf30d60b9b58c1b93524" translate="yes" xml:space="preserve">
          <source>The first time the callback is called, &lt;code&gt;accumulator&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; can be one of two values. If &lt;code&gt;initialValue&lt;/code&gt; is provided in the call to &lt;code&gt;reduce()&lt;/code&gt;, then &lt;code&gt;accumulator&lt;/code&gt; will be equal to &lt;code&gt;initialValue&lt;/code&gt;, and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the first value in the array. If no &lt;code&gt;initialValue&lt;/code&gt; is provided, then &lt;code&gt;accumulator&lt;/code&gt; will be equal to the first value in the array, and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the second.</source>
          <target state="translated">При первом вызове обратного вызова &lt;code&gt;accumulator&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; могут иметь одно из двух значений. Если &lt;code&gt;initialValue&lt;/code&gt; обеспечивается в вызове &lt;code&gt;reduce()&lt;/code&gt; , то &lt;code&gt;accumulator&lt;/code&gt; будет равен &lt;code&gt;initialValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; будет равен первым значение в массиве. Если &lt;code&gt;initialValue&lt;/code&gt; не указано, &lt;code&gt;accumulator&lt;/code&gt; будет равен первому значению в массиве, а &lt;code&gt;currentValue&lt;/code&gt; будет равно второму.</target>
        </trans-unit>
        <trans-unit id="b780c1625556bb97e02bb2df7f774177e170222b" translate="yes" xml:space="preserve">
          <source>The first time the callback is called, &lt;code&gt;previousValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; can be one of two values. If &lt;code&gt;initialValue&lt;/code&gt; is provided in the call to &lt;code&gt;reduce&lt;/code&gt;, then &lt;code&gt;previousValue&lt;/code&gt; will be equal to &lt;code&gt;initialValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the first value in the typed array. If no &lt;code&gt;initialValue&lt;/code&gt; was provided, then &lt;code&gt;previousValue&lt;/code&gt; will be equal to the first value in the typed array and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the second.</source>
          <target state="translated">При первом вызове обратного вызова &lt;code&gt;previousValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; могут быть одним из двух значений. Если &lt;code&gt;initialValue&lt;/code&gt; предусмотрено в вызове &lt;code&gt;reduce&lt;/code&gt; , то &lt;code&gt;previousValue&lt;/code&gt; будет равно &lt;code&gt;initialValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; будет равен первым значение набранного массива. Если значение &lt;code&gt;initialValue&lt;/code&gt; не указано, то &lt;code&gt;previousValue&lt;/code&gt; будет равно первому значению в типизированном массиве, а &lt;code&gt;currentValue&lt;/code&gt; будет равно второму.</target>
        </trans-unit>
        <trans-unit id="53aed0f9f0e168d572e9df10eac3b60e872c5cc5" translate="yes" xml:space="preserve">
          <source>The first time the function is called, the &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; can be one of two values. If an &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; was provided in the call to &lt;code&gt;reduceRight&lt;/code&gt;, then &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; will be equal to &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; will be equal to the last value in the array. If no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; was provided, then &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; will be equal to the last value in the array and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; will be equal to the second-to-last value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ea80c0a2f8772cd47bde2d54d604e56483dbc4" translate="yes" xml:space="preserve">
          <source>The first time the function is called, the &lt;code&gt;accumulator&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; can be one of two values. If an &lt;code&gt;initialValue&lt;/code&gt; was provided in the call to &lt;code&gt;reduceRight&lt;/code&gt;, then &lt;code&gt;accumulator&lt;/code&gt; will be equal to &lt;code&gt;initialValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the last value in the array. If no &lt;code&gt;initialValue&lt;/code&gt; was provided, then &lt;code&gt;accumulator&lt;/code&gt; will be equal to the last value in the array and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the second-to-last value.</source>
          <target state="translated">При первом вызове функции &lt;code&gt;accumulator&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; могут иметь одно из двух значений. Если &lt;code&gt;initialValue&lt;/code&gt; был предоставлен в вызове &lt;code&gt;reduceRight&lt;/code&gt; , то &lt;code&gt;accumulator&lt;/code&gt; будет равен &lt;code&gt;initialValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; будет равно последнему значению в массиве. Если значение &lt;code&gt;initialValue&lt;/code&gt; не задано , &lt;code&gt;accumulator&lt;/code&gt; будет равен последнему значению в массиве, а &lt;code&gt;currentValue&lt;/code&gt; будет равен предпоследнему значению.</target>
        </trans-unit>
        <trans-unit id="fcd4413a46ca7b4a40f9a396ef6da68bf067bd4c" translate="yes" xml:space="preserve">
          <source>The first time the function is called, the &lt;code&gt;previousValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; can be one of two values. If an &lt;code&gt;initialValue&lt;/code&gt; was provided in the call to &lt;code&gt;reduceRight&lt;/code&gt;, then &lt;code&gt;previousValue&lt;/code&gt; will be equal to &lt;code&gt;initialValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the last value in the typed array. If no &lt;code&gt;initialValue&lt;/code&gt; was provided, then &lt;code&gt;previousValue&lt;/code&gt; will be equal to the last value in the typed array and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the second-to-last value.</source>
          <target state="translated">При первом вызове функции &lt;code&gt;previousValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; могут быть одним из двух значений. Если &lt;code&gt;initialValue&lt;/code&gt; был предоставлен в вызове &lt;code&gt;reduceRight&lt;/code&gt; , то &lt;code&gt;previousValue&lt;/code&gt; будет равно &lt;code&gt;initialValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; будет равен последним значение в типизированном массиве. Если значение &lt;code&gt;initialValue&lt;/code&gt; не было указано, то &lt;code&gt;previousValue&lt;/code&gt; будет равно последнему значению в типизированном массиве, а &lt;code&gt;currentValue&lt;/code&gt; будет равно предпоследнему значению.</target>
        </trans-unit>
        <trans-unit id="56e629ccbe223be58c9a4a329f9aedcc3faf8225" translate="yes" xml:space="preserve">
          <source>The first two lines set the year to 1996. The third sets the year to 2000.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e25923e75e57fe4c8cd666578c83d081cde684" translate="yes" xml:space="preserve">
          <source>The first value to compare.</source>
          <target state="translated">Первое значение для сравнения.</target>
        </trans-unit>
        <trans-unit id="9b15ba4c6a8fb0f073e1bccafbc57018dbc9e83f" translate="yes" xml:space="preserve">
          <source>The first way is the &lt;code&gt;//&lt;/code&gt; comment; this makes all text following it on the same line into a comment. For example:</source>
          <target state="translated">Первый способ - это &lt;code&gt;//&lt;/code&gt; комментарий; это превращает весь следующий за ним текст в одной строке в комментарий. Например:</target>
        </trans-unit>
        <trans-unit id="9041df23a8ecb0dc00120e416d6e0a9bb6f9c8d7" translate="yes" xml:space="preserve">
          <source>The first way is the &lt;code&gt;//&lt;/code&gt; comment&lt;strong&gt;;&lt;/strong&gt; this makes all text following it on the same line into a comment. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb49b60e3be5a52747d92e8a22a6d16279f2fe8" translate="yes" xml:space="preserve">
          <source>The fixed version:</source>
          <target state="translated">Исправленная версия:</target>
        </trans-unit>
        <trans-unit id="c8c39436f5730eb348e872deaf1fa667ab721807" translate="yes" xml:space="preserve">
          <source>The flat method removes empty slots in arrays:</source>
          <target state="translated">Плоский метод удаляет пустые слоты в массивах:</target>
        </trans-unit>
        <trans-unit id="6b0d4d52f56cccbfbab6df299402dd57a39fb92c" translate="yes" xml:space="preserve">
          <source>The following (contrived) example updates an object's properties from each entry in the array:</source>
          <target state="translated">Следующий (нарисованный)пример обновляет свойства объекта из каждого элемента массива:</target>
        </trans-unit>
        <trans-unit id="19d94a7fc32d04cec65c6d24ddf49ca8f47ec558" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;for&lt;/code&gt; cycle calculates the offset position of a node in the &lt;code&gt;&lt;var&gt;final-expression&lt;/var&gt;&lt;/code&gt; section, and therefore it does not require the use of a &lt;code&gt;&lt;var&gt;statement&lt;/var&gt;&lt;/code&gt; section, a semicolon is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637b63e14680d42936462840375bb75b4e4b3acf" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;for&lt;/code&gt; cycle calculates the offset position of a node in the &lt;em&gt;[final-expression]&lt;/em&gt; section, and therefore it does not require the use of a &lt;code&gt;statement&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement&lt;/code&gt; section, a semicolon is used instead.</source>
          <target state="translated">Следующая команда &lt;code&gt;for&lt;/code&gt; cycle вычисляет позицию смещения узла в разделе &lt;em&gt;[final-expression]&lt;/em&gt; , и, следовательно, не требует использования секции &lt;code&gt;statement&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement&lt;/code&gt; , вместо этого используется точка с запятой.</target>
        </trans-unit>
        <trans-unit id="60d614556ee4f8fb1680ea3ab2ac38d5027c5e26" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;for&lt;/code&gt; statement starts by declaring the variable &lt;code&gt;i&lt;/code&gt; and initializing it to &lt;code&gt;0&lt;/code&gt;. It checks that &lt;code&gt;i&lt;/code&gt; is less than nine, performs the two succeeding statements, and increments &lt;code&gt;i&lt;/code&gt; by 1 after each pass through the loop.</source>
          <target state="translated">Следующий оператор &lt;code&gt;for&lt;/code&gt; начинается с объявления переменной &lt;code&gt;i&lt;/code&gt; и инициализации ее значением &lt;code&gt;0&lt;/code&gt; . Он проверяет, что &lt;code&gt;i&lt;/code&gt; меньше девяти, выполняет два последующих оператора и увеличивает &lt;code&gt;i&lt;/code&gt; на 1 после каждого прохождения цикла.</target>
        </trans-unit>
        <trans-unit id="c13b20cee0f661617bd8015d0c1f583881d10e96" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;while&lt;/code&gt; loop iterates as long as &lt;code&gt;n&lt;/code&gt; is less than three.</source>
          <target state="translated">Следующие в &lt;code&gt;while&lt;/code&gt; итерации цикла до тех пор , как &lt;code&gt;n&lt;/code&gt; меньше , чем три.</target>
        </trans-unit>
        <trans-unit id="bd682eef69193f4fdb44336fd479f91bb7ada667" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;with&lt;/code&gt; statement specifies that the &lt;a href=&quot;../global_objects/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; object is the default object. The statements following the &lt;code&gt;with&lt;/code&gt; statement refer to the &lt;a href=&quot;../global_objects/math/pi&quot;&gt;&lt;code&gt;PI&lt;/code&gt;&lt;/a&gt; property and the &lt;a href=&quot;../global_objects/math/cos&quot;&gt;&lt;code&gt;cos&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../global_objects/math/sin&quot;&gt;&lt;code&gt;sin&lt;/code&gt;&lt;/a&gt; methods, without specifying an object. JavaScript assumes the &lt;code&gt;Math&lt;/code&gt; object for these references.</source>
          <target state="translated">Следующая инструкция &lt;code&gt;with&lt;/code&gt; указывает, что объект &lt;a href=&quot;../global_objects/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; является объектом по умолчанию. Операторы, следующие за оператором &lt;code&gt;with&lt;/code&gt; , относятся к свойству &lt;a href=&quot;../global_objects/math/pi&quot;&gt; &lt;code&gt;PI&lt;/code&gt; &lt;/a&gt; и методам &lt;a href=&quot;../global_objects/math/cos&quot;&gt; &lt;code&gt;cos&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../global_objects/math/sin&quot;&gt; &lt;code&gt;sin&lt;/code&gt; &lt;/a&gt; без указания объекта. JavaScript предполагает использование объекта &lt;code&gt;Math&lt;/code&gt; для этих ссылок.</target>
        </trans-unit>
        <trans-unit id="5b9e90596ec38fff87485beade9e5f8deb49143a" translate="yes" xml:space="preserve">
          <source>The following are only reserved when they are found in module code:</source>
          <target state="translated">Следующее зарезервировано только в том случае,если оно найдено в коде модуля:</target>
        </trans-unit>
        <trans-unit id="c0c352e275f96b24c86f4d19b3dc013b58dfed6e" translate="yes" xml:space="preserve">
          <source>The following are only reserved when they are found in strict mode code:</source>
          <target state="translated">Следующее зарезервировано только в строгом режиме:</target>
        </trans-unit>
        <trans-unit id="94a1f4c078dadf907ee9c9a9ba75dd45389036ba" translate="yes" xml:space="preserve">
          <source>The following are reserved as future keywords by older ECMAScript specifications (ECMAScript 1 till 3).</source>
          <target state="translated">Следующие ключевые слова зарезервированы в качестве будущих ключевых слов старыми спецификациями ECMAScript (ECMAScript 1-3).</target>
        </trans-unit>
        <trans-unit id="14042eda201db9dbf94f4c7e43f79039471fa58d" translate="yes" xml:space="preserve">
          <source>The following are reserved as future keywords by the ECMAScript specification. They have no special functionality at present, but they might at some future time, so they cannot be used as identifiers.</source>
          <target state="translated">Следующее зарезервировано спецификацией ECMAScript в качестве будущих ключевых слов.В настоящее время они не имеют специальной функциональности,но могут в будущем использоваться в качестве идентификаторов.</target>
        </trans-unit>
        <trans-unit id="a4e1da54087efaf8adb80147425713d13e38e3f4" translate="yes" xml:space="preserve">
          <source>The following assigns the &lt;code&gt;toString()&lt;/code&gt; value of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to &lt;code&gt;myVar&lt;/code&gt;:</source>
          <target state="translated">Следующее присваивает &lt;code&gt;myVar&lt;/code&gt; значение &lt;code&gt;toString()&lt;/code&gt; объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="cae1e8968e0d8a4226ccdf6fb081349da0152b2c" translate="yes" xml:space="preserve">
          <source>The following call, which does not specify a time zone will be set to 2019-01-01 at 00:00:00 in the local timezone of the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e09e75af226c19f33d52f40e585da0f7a8b4f94" translate="yes" xml:space="preserve">
          <source>The following calls all return &lt;code&gt;1546300800000&lt;/code&gt;. The first according to ES5 will imply UTC time, and the others are specifying UTC timezone via the ISO date specification (&lt;code&gt;Z&lt;/code&gt; and &lt;code&gt;+00:00&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08ac54043b648876203b3e3803e638644ac0bbc" translate="yes" xml:space="preserve">
          <source>The following code also uses &lt;code&gt;break&lt;/code&gt; statements with labeled blocks but generates a Syntax Error because its &lt;code&gt;break&lt;/code&gt; statement is within &lt;code&gt;block_1&lt;/code&gt; but references &lt;code&gt;block_2&lt;/code&gt;. A &lt;code&gt;break&lt;/code&gt; statement must always be nested within any label it references.</source>
          <target state="translated">Следующий код также использует операторы &lt;code&gt;break&lt;/code&gt; с помеченными блоками, но генерирует синтаксическую ошибку, поскольку его оператор &lt;code&gt;break&lt;/code&gt; находится внутри &lt;code&gt;block_1&lt;/code&gt; но ссылается на &lt;code&gt;block_2&lt;/code&gt; . &lt;code&gt;break&lt;/code&gt; заявление всегда должны быть вложены в любой этикетке ссылки.</target>
        </trans-unit>
        <trans-unit id="80178a12951e6b00ea750b365c3ae966140db726" translate="yes" xml:space="preserve">
          <source>The following code also uses &lt;code&gt;break&lt;/code&gt; statements with labeled blocks, but generates a &lt;code&gt;SyntaxError&lt;/code&gt; because its &lt;code&gt;break&lt;/code&gt; statement is within &lt;code&gt;block_1&lt;/code&gt; but references &lt;code&gt;block_2&lt;/code&gt;. A &lt;code&gt;break&lt;/code&gt; statement must always be nested within any label it references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2c6bb979b31f9336e43bbb6c562ae496f90804" translate="yes" xml:space="preserve">
          <source>The following code checks the value a function's &lt;code&gt;caller&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc61c85b553d7e6d7463201fbcc2c38c73015b80" translate="yes" xml:space="preserve">
          <source>The following code concatenates nested arrays and demonstrates retention of references:</source>
          <target state="translated">Следующий код конкатенует вложенные массивы и демонстрирует сохранение ссылок:</target>
        </trans-unit>
        <trans-unit id="721189f7a2b285c23287b114247606fc04335c83" translate="yes" xml:space="preserve">
          <source>The following code concatenates three arrays:</source>
          <target state="translated">Следующий код объединяет три массива:</target>
        </trans-unit>
        <trans-unit id="88e4d6b9479b0ed44364219826710b43fc799fde" translate="yes" xml:space="preserve">
          <source>The following code concatenates three values to an array:</source>
          <target state="translated">Следующий код объединяет три значения в массив:</target>
        </trans-unit>
        <trans-unit id="d88678328d1fce2a8f610a73f6b66390f32726cb" translate="yes" xml:space="preserve">
          <source>The following code concatenates two arrays:</source>
          <target state="translated">Следующий код объединяет два массива:</target>
        </trans-unit>
        <trans-unit id="110cf46adcf71aba1fd2a9d72394b04b71419aa9" translate="yes" xml:space="preserve">
          <source>The following code creates a &lt;code&gt;Function&lt;/code&gt; object that takes two arguments.</source>
          <target state="translated">Следующий код создает объект &lt;code&gt;Function&lt;/code&gt; , который принимает два аргумента.</target>
        </trans-unit>
        <trans-unit id="46f073b8de326c165cbd60cc08891029d5c55341" translate="yes" xml:space="preserve">
          <source>The following code creates a copy of a given object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9849a78b721a404fa7122bbef9cb4e417ecb54b" translate="yes" xml:space="preserve">
          <source>The following code creates a copy of a given object. There are different ways to create a copy of an object; the following is just one way and is presented to explain how &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; works by using ECMAScript 5 &lt;code&gt;Object.*&lt;/code&gt; meta property functions.</source>
          <target state="translated">Следующий код создает копию данного объекта. Есть разные способы создать копию объекта; Следующее является лишь одним из способов и представлено для объяснения того, как &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; работает с использованием функций мета-свойств ECMAScript 5 &lt;code&gt;Object.*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71484bb1315e7ead24501719aa5731a2deb6cc7d" translate="yes" xml:space="preserve">
          <source>The following code creates an object type &lt;code&gt;Car&lt;/code&gt; and an instance of that object type, &lt;code&gt;mycar&lt;/code&gt;. The &lt;code&gt;instanceof&lt;/code&gt; operator demonstrates that the &lt;code&gt;mycar&lt;/code&gt; object is of type &lt;code&gt;Car&lt;/code&gt; and of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Следующий код создает объектный тип &lt;code&gt;Car&lt;/code&gt; и экземпляр этого объектного типа &lt;code&gt;mycar&lt;/code&gt; . Оператор &lt;code&gt;instanceof&lt;/code&gt; демонстрирует, что объект &lt;code&gt;mycar&lt;/code&gt; имеет тип &lt;code&gt;Car&lt;/code&gt; и тип &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67ba62584852fb890616fcc0a2c09fda249c7266" translate="yes" xml:space="preserve">
          <source>The following code creates an object with three properties and the keys are &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, &lt;code&gt;&quot;age&quot;&lt;/code&gt; and &lt;code&gt;&quot;baz&quot;&lt;/code&gt;. The values of these keys are a string &lt;code&gt;&quot;bar&quot;&lt;/code&gt;, the number &lt;code&gt;42&lt;/code&gt;, and another object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28fa1c2b41f239a7356294e9946fbce3f7aae1b" translate="yes" xml:space="preserve">
          <source>The following code creates and assigns &lt;code&gt;dogToString()&lt;/code&gt; to override the default &lt;code&gt;toString()&lt;/code&gt; method. This function generates a string containing the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;breed&lt;/code&gt;, &lt;code&gt;color&lt;/code&gt;, and &lt;code&gt;sex&lt;/code&gt; of the object, in the form &quot;&lt;code&gt;property = value;&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f1f0dc224fbf380d776e34e3dd118d0155b6b5" translate="yes" xml:space="preserve">
          <source>The following code creates and assigns &lt;code&gt;dogToString()&lt;/code&gt; to override the default &lt;code&gt;toString()&lt;/code&gt; method. This function generates a string containing the name, breed, color, and sex of the object, in the form &quot;&lt;code&gt;property = value;&lt;/code&gt;&quot;.</source>
          <target state="translated">Следующий код создает и назначает &lt;code&gt;dogToString()&lt;/code&gt; для переопределения метода &lt;code&gt;toString()&lt;/code&gt; по умолчанию . Эта функция генерирует строку, содержащую имя, породу, цвет и пол объекта в форме &amp;laquo; &lt;code&gt;property = value;&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f9ae4575b00eb655fe2bc58c8c2ed78bc0bf00a2" translate="yes" xml:space="preserve">
          <source>The following code creates the &lt;code&gt;myFish&lt;/code&gt; array containing four elements, then removes its last element.</source>
          <target state="translated">Следующий код создает массив &lt;code&gt;myFish&lt;/code&gt; , содержащий четыре элемента, а затем удаляет его последний элемент.</target>
        </trans-unit>
        <trans-unit id="57ea99bca4b49baa8b5033cc82ddd78a6fa41b95" translate="yes" xml:space="preserve">
          <source>The following code creates the &lt;code&gt;myFish&lt;/code&gt; array-like object containing four elements and a length parameter, then removes its last element and decrements the length parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee25846ad2f6848444fd67100bb8495aeb28612" translate="yes" xml:space="preserve">
          <source>The following code creates the &lt;code&gt;sports&lt;/code&gt; array containing two elements, then appends two elements to it. The &lt;code&gt;total&lt;/code&gt; variable contains the new length of the array.</source>
          <target state="translated">Следующий код создает массив &lt;code&gt;sports&lt;/code&gt; содержащий два элемента, а затем добавляет к нему два элемента. &lt;code&gt;total&lt;/code&gt; переменная содержит новую длину массива.</target>
        </trans-unit>
        <trans-unit id="5413c9f47f7525067295e645eb7a51acc99bc3ba" translate="yes" xml:space="preserve">
          <source>The following code declares a function that returns the total amount of sales, when given the number of units sold of products &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">Следующий код объявляет функцию, которая возвращает общий объем продаж, если задано количество проданных единиц продуктов &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; и &lt;code&gt;c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ac5f417776932fa98a727d7e5e02064aafd61d7" translate="yes" xml:space="preserve">
          <source>The following code defines the &lt;code&gt;Dog&lt;/code&gt; object type and creates &lt;code&gt;theDog&lt;/code&gt;, an object of type &lt;code&gt;Dog&lt;/code&gt;:</source>
          <target state="translated">Следующий код определяет тип объекта &lt;code&gt;Dog&lt;/code&gt; и создает &lt;code&gt;theDog&lt;/code&gt; , объект типа &lt;code&gt;Dog&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bfb04ee46c737543b1cf531796942fcab6e602ea" translate="yes" xml:space="preserve">
          <source>The following code displays the &lt;code&gt;myFish&lt;/code&gt; array before and after removing its first element. It also displays the removed element:</source>
          <target state="translated">Следующий код отображает массив &lt;code&gt;myFish&lt;/code&gt; до и после удаления его первого элемента. Также отображается удаленный элемент:</target>
        </trans-unit>
        <trans-unit id="ffdac7d52063387499a1184a4731dd0d49cf9966" translate="yes" xml:space="preserve">
          <source>The following code divides two numeric values. If the result is greater than or equal to &lt;code&gt;MIN_VALUE&lt;/code&gt;, the &lt;code&gt;func1&lt;/code&gt; function is called; otherwise, the &lt;code&gt;func2&lt;/code&gt; function is called.</source>
          <target state="translated">Следующий код делит два числовых значения. Если результат больше или равен &lt;code&gt;MIN_VALUE&lt;/code&gt; , &lt;code&gt;func1&lt;/code&gt; функция func1 ; в противном случае &lt;code&gt;func2&lt;/code&gt; функция func2 .</target>
        </trans-unit>
        <trans-unit id="34ea08a0429c988f788b3868433bf1a2db2c2010" translate="yes" xml:space="preserve">
          <source>The following code has a &lt;code&gt;break&lt;/code&gt; statement that terminates the &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt; statement when a case is matched and the corresponding code has ran</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663309fd2d791afb83983daa321c7268c1fe80e8" translate="yes" xml:space="preserve">
          <source>The following code improperly initializes the proxy. The &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; in Proxy initialization must itself be a valid constructor for the &lt;a href=&quot;../../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aebfbac775644f52742648c8188228c29aec3c2" translate="yes" xml:space="preserve">
          <source>The following code improperly initializes the proxy. The &lt;code&gt;target&lt;/code&gt; in Proxy initialization must itself be a valid constructor for the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">Следующий код неправильно инициализирует прокси. &lt;code&gt;target&lt;/code&gt; при инициализации прокси сам должен быть действительным конструктор для &lt;code&gt;new&lt;/code&gt; оператора.</target>
        </trans-unit>
        <trans-unit id="ac713b40525625199d7a101c2127f6d4f76c80da" translate="yes" xml:space="preserve">
          <source>The following code is the declaration of an example generator function.</source>
          <target state="translated">Следующий код является декларацией функции генератора примеров.</target>
        </trans-unit>
        <trans-unit id="1b2d53d50b851e948adb1e6d5da2847f3cf5987b" translate="yes" xml:space="preserve">
          <source>The following code logs a line for each element in a &lt;code&gt;Set&lt;/code&gt; object:</source>
          <target state="translated">Следующий код регистрирует строку для каждого элемента в объекте &lt;code&gt;Set&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0cbf9e164e68b93693f30543959a7f06e0dec2e9" translate="yes" xml:space="preserve">
          <source>The following code logs a line for each element in a typed array:</source>
          <target state="translated">Следующий код регистрирует строку для каждого элемента в типизированном массиве:</target>
        </trans-unit>
        <trans-unit id="9572c259a051431f4f450301d23fc521a93a28a7" translate="yes" xml:space="preserve">
          <source>The following code logs a line for each element in an &lt;code&gt;Map&lt;/code&gt; object:</source>
          <target state="translated">Следующий код регистрирует строку для каждого элемента в объекте &lt;code&gt;Map&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="05e676495dcfad5f9d42d6c2de9e3bca1f4630c4" translate="yes" xml:space="preserve">
          <source>The following code logs a line for each element in an array:</source>
          <target state="translated">Следующий код регистрирует строку для каждого элемента массива:</target>
        </trans-unit>
        <trans-unit id="555c0c32448becb397f810790a2420788ccadd71" translate="yes" xml:space="preserve">
          <source>The following code multiplies two numeric values. If the result is less than or equal to &lt;code&gt;MAX_VALUE&lt;/code&gt;, the &lt;code&gt;func1&lt;/code&gt; function is called; otherwise, the &lt;code&gt;func2&lt;/code&gt; function is called.</source>
          <target state="translated">Следующий код умножает два числовых значения. Если результат меньше или равен &lt;code&gt;MAX_VALUE&lt;/code&gt; , &lt;code&gt;func1&lt;/code&gt; функция func1 ; в противном случае &lt;code&gt;func2&lt;/code&gt; функция func2 .</target>
        </trans-unit>
        <trans-unit id="1dad9ae9491ee1eb3386f8bbf689412c9a122c35" translate="yes" xml:space="preserve">
          <source>The following code prints the values of the diagonal elements in the array:</source>
          <target state="translated">Следующий код печатает значения диагональных элементов в массиве:</target>
        </trans-unit>
        <trans-unit id="446e09962f6db0b1d8da76d9107b976aea69c91f" translate="yes" xml:space="preserve">
          <source>The following code shows examples of the &lt;code&gt;!&lt;/code&gt; (logical NOT) operator.</source>
          <target state="translated">В следующем коде показаны примеры &lt;code&gt;!&lt;/code&gt; (логическое НЕ) оператор.</target>
        </trans-unit>
        <trans-unit id="657425e8ce502911d7f0c1f47f8e38c9591acb40" translate="yes" xml:space="preserve">
          <source>The following code shows examples of the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (logical AND) operator.</source>
          <target state="translated">В следующем коде показаны примеры оператора &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (логическое И).</target>
        </trans-unit>
        <trans-unit id="087b529d19673cc07b3d2ea0403068125326b88d" translate="yes" xml:space="preserve">
          <source>The following code shows examples of the &lt;code&gt;||&lt;/code&gt; (logical OR) operator.</source>
          <target state="translated">В следующем коде показаны примеры &lt;code&gt;||&lt;/code&gt; (логическое ИЛИ) оператор.</target>
        </trans-unit>
        <trans-unit id="40c22740464b0d18057f074a4ca9a6f4c262fe5f" translate="yes" xml:space="preserve">
          <source>The following code shows how &lt;code&gt;map&lt;/code&gt; works when a function requiring one argument is used with it. The argument will automatically be assigned from each element of the array as &lt;code&gt;map&lt;/code&gt; loops through the original array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6128024108440d20cd751bb31df0569a7704752f" translate="yes" xml:space="preserve">
          <source>The following code shows how map works when a function requiring one argument is used with it. The argument will automatically be assigned from each element of the array as map loops through the original array.</source>
          <target state="translated">Следующий код показывает,как работает карта,когда с ней используется функция,требующая одного аргумента.Аргумент будет автоматически присваиваться из каждого элемента массива в виде циклов map через исходный массив.</target>
        </trans-unit>
        <trans-unit id="93cbd7a9b13ccbb2681320f45c12dc3e14c7a3b6" translate="yes" xml:space="preserve">
          <source>The following code shows how map works when a function requiring one argument is used with it. The argument will automatically be assigned to each element of the typed array as map loops through the original typed array.</source>
          <target state="translated">Следующий код показывает,как работает карта,когда с ней используется функция,требующая одного аргумента.Аргумент будет автоматически присваиваться каждому элементу типизированного массива в виде циклов map через исходный типизированный массив.</target>
        </trans-unit>
        <trans-unit id="23544ad4adcdcbd6a5e3021ebfaf4350ede55f3a" translate="yes" xml:space="preserve">
          <source>The following code takes a typed array and creates a new typed array containing the square roots of the numbers in the first typed array.</source>
          <target state="translated">Следующий код берет типизированный массив и создает новый типизированный массив,содержащий квадратные корни чисел в первом типизированном массиве.</target>
        </trans-unit>
        <trans-unit id="91dfb78c282609f0ca90e823f00a7c1bcabc053d" translate="yes" xml:space="preserve">
          <source>The following code takes an array of numbers and creates a new array containing the square roots of the numbers in the first array.</source>
          <target state="translated">Следующий код берет массив чисел и создает новый массив,содержащий квадратные корни чисел в первом массиве.</target>
        </trans-unit>
        <trans-unit id="990fbd2a82909cc731cb6de1db1e4e7e5988d7ca" translate="yes" xml:space="preserve">
          <source>The following code takes an array of objects and creates a new array containing the newly reformatted objects.</source>
          <target state="translated">Следующий код берет массив объектов и создает новый массив,содержащий вновь переформатированные объекты.</target>
        </trans-unit>
        <trans-unit id="b6a73ccf50bc94f930d475afad31b662aad507c8" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ae609986c2bf700187679a0155e67f383001d4" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7fbdba357c15d5ef4893b679bc519284fa94e89" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2316ce910c2a16a8f31a8d35f44ce184b5d5110b" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f43f449540c9caa7886889ce45d41a2cbc1b2b1d" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36b83b244b13ce0e00fbb489c5813644ab6b0abf" translate="yes" xml:space="preserve">
          <source>The following code traps a function call.</source>
          <target state="translated">Следующий код ловит вызов функции.</target>
        </trans-unit>
        <trans-unit id="4ee4a393b6cbc0d511ffdc59d8483abe6e9b1be3" translate="yes" xml:space="preserve">
          <source>The following code traps getting a property value.</source>
          <target state="translated">Следующие кодовые ловушки получают стоимость недвижимости.</target>
        </trans-unit>
        <trans-unit id="ab8ce6ea525ee3a1bd25238d16dafa8cfd2ab091" translate="yes" xml:space="preserve">
          <source>The following code traps setting a property value.</source>
          <target state="translated">Следующие кодовые ловушки устанавливают значение свойства.</target>
        </trans-unit>
        <trans-unit id="4a3d5a01f344846da6a7dad4757ca86f93853d89" translate="yes" xml:space="preserve">
          <source>The following code traps the &lt;a href=&quot;../../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">Следующий код перехватывает оператор &lt;a href=&quot;../../../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e483290e7f76f08d2648b23c16bc2204b6ff38ba" translate="yes" xml:space="preserve">
          <source>The following code traps the &lt;a href=&quot;../../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">Следующий код перехватывает оператор &lt;a href=&quot;../../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25504055279ad082d3562335a453315f18588211" translate="yes" xml:space="preserve">
          <source>The following code traps the &lt;a href=&quot;../../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператор.</target>
        </trans-unit>
        <trans-unit id="79f411fcb5d68a6edc77d42c81be12111b8fbca2" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;break&lt;/code&gt; statements with labeled blocks. A &lt;code&gt;break&lt;/code&gt; statement must be nested within any label it references. Notice that &lt;code&gt;inner_block&lt;/code&gt; is nested within &lt;code&gt;outer_block&lt;/code&gt;.</source>
          <target state="translated">В следующем коде используются операторы &lt;code&gt;break&lt;/code&gt; с помеченными блоками. &lt;code&gt;break&lt;/code&gt; оператор должен быть вложен в любой этикетке ссылки. Обратите внимание, что &lt;code&gt;inner_block&lt;/code&gt; вложен в &lt;code&gt;outer_block&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a5972c72258c23f426a231b566e63137af62bd5" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;instanceof&lt;/code&gt; to demonstrate that &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Date&lt;/code&gt; objects are also of type &lt;code&gt;Object&lt;/code&gt; (they are derived from &lt;code&gt;Object&lt;/code&gt;).</source>
          <target state="translated">В следующем коде используется &lt;code&gt;instanceof&lt;/code&gt; , чтобы продемонстрировать, что объекты &lt;code&gt;String&lt;/code&gt; и &lt;code&gt;Date&lt;/code&gt; также относятся к типу &lt;code&gt;Object&lt;/code&gt; (они являются производными от &lt;code&gt;Object&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef022a2af0822c75bf6d97a3907794c965929c70" translate="yes" xml:space="preserve">
          <source>The following code violates an invariant.</source>
          <target state="translated">Следующий код нарушает инвариант.</target>
        </trans-unit>
        <trans-unit id="2cccfb58d874a9ff644e87a991d031d323732fb2" translate="yes" xml:space="preserve">
          <source>The following code violates the invariant.</source>
          <target state="translated">Следующий код нарушает инвариант.</target>
        </trans-unit>
        <trans-unit id="be65d173a4ebcaa7bda004853274c64fd29e4be8" translate="yes" xml:space="preserve">
          <source>The following code was used to check the value of &lt;code&gt;arguments.caller&lt;/code&gt; in a function, but doesn't work anymore.</source>
          <target state="translated">Следующий код использовался для проверки значения &lt;code&gt;arguments.caller&lt;/code&gt; в функции, но больше не работает.</target>
        </trans-unit>
        <trans-unit id="f66a2585b75f449626494103e61d755dfb30114c" translate="yes" xml:space="preserve">
          <source>The following code will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Следующий код вызовет &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7814b38c4660f2f789f848f5e4d62c2ad7b2f22d" translate="yes" xml:space="preserve">
          <source>The following code works fine in ES5 and below. However, in ECMAScript 2015 and later, the &lt;a href=&quot;../array/keys&quot;&gt;&lt;code&gt;Array.prototype.keys()&lt;/code&gt;&lt;/a&gt; method was introduced. That means that inside &lt;code&gt;with&lt;/code&gt; environment &quot;keys&quot; would now be the method and not the variable. That's when the &lt;code&gt;unscopable&lt;/code&gt;s symbol was introduced. A built-in &lt;code&gt;unscopables&lt;/code&gt; setting is implemented as &lt;a href=&quot;../array/@@unscopables&quot;&gt;&lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt;&lt;/a&gt; to prevent that some of the Array methods are being scoped into the &lt;code&gt;with&lt;/code&gt; statement.</source>
          <target state="translated">Следующий код отлично работает в ES5 и ниже. Однако в ECMAScript 2015 и более поздних &lt;a href=&quot;../array/keys&quot;&gt; &lt;code&gt;Array.prototype.keys()&lt;/code&gt; &lt;/a&gt; был представлен метод Array.prototype.keys () . Это означает , что внутри &lt;code&gt;with&lt;/code&gt; &amp;laquo;ключами&amp;raquo; среды теперь будет метод , а не переменная. Именно тогда был введен &lt;code&gt;unscopable&lt;/code&gt; символ s. Встроенный параметр &lt;code&gt;unscopables&lt;/code&gt; реализован как &lt;a href=&quot;../array/@@unscopables&quot;&gt; &lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt; &lt;/a&gt; чтобы предотвратить включение некоторых методов Array в оператор &lt;code&gt;with&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65ed457c8a763018d44cf10f276cc37398e395c2" translate="yes" xml:space="preserve">
          <source>The following code works fine in ES5 and below. However, in ECMAScript 2015 and later, the &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Array.prototype.keys()&lt;/code&gt;&lt;/a&gt; method was introduced. That means that inside &lt;code&gt;with&lt;/code&gt; environments, &quot;keys&quot; would now be the method and not the variable. This is where now the built-in &lt;code&gt;@@unscopables&lt;/code&gt;&lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt; symbol property comes into play and prevents that some of the Array methods are being scoped into the &lt;code&gt;with&lt;/code&gt; statement.</source>
          <target state="translated">Следующий код отлично работает в ES5 и ниже. Однако в ECMAScript 2015 и более поздних &lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Array.prototype.keys()&lt;/code&gt; &lt;/a&gt; был представлен метод Array.prototype.keys () . Это означает , что внутри &lt;code&gt;with&lt;/code&gt; окружающей средой, &amp;laquo;ключи&amp;raquo; теперь будут метод , а не переменные. Именно здесь теперь вступает в игру &lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt; свойство символа &lt;code&gt;@@unscopables&lt;/code&gt; Array.prototype [@@ unscopables], которое предотвращает включение некоторых методов Array в оператор &lt;code&gt;with&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5be88a9ec97ad8644effea0e9ddef927a9326c34" translate="yes" xml:space="preserve">
          <source>The following composite operation involving &lt;strong&gt;booleans&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb142fc147e63e6c8e71931fb3e4597a4a15e0f3" translate="yes" xml:space="preserve">
          <source>The following composite operation involving Booleans:</source>
          <target state="translated">Следующая составная операция с участием Булеана:</target>
        </trans-unit>
        <trans-unit id="f56868c1c01d0df57c3b0204e374f8e3a30a51f9" translate="yes" xml:space="preserve">
          <source>The following comprehension takes an array of numbers and creates a new array of the double of each of those numbers.</source>
          <target state="translated">Следующее понимание берет массив чисел и создает новый массив двойника каждого из этих чисел.</target>
        </trans-unit>
        <trans-unit id="8c8184ab9029406f0c35972bd8af1634a5c88cd5" translate="yes" xml:space="preserve">
          <source>The following creates a chess board as a two-dimensional array of strings. The first move is made by copying the 'p' in (6,4) to (4,4). The old position (6,4) is made blank.</source>
          <target state="translated">Далее создается шахматная доска в виде двумерного массива строк.Первый ход выполняется путем копирования 'p' в (6,4)в (4,4).Старая позиция (6,4)делается пустой.</target>
        </trans-unit>
        <trans-unit id="2c333cf31e985dcd9c5648af15242b10417d6e7e" translate="yes" xml:space="preserve">
          <source>The following creates a chessboard as a two-dimensional array of strings. The first move is made by copying the &lt;code&gt;'p'&lt;/code&gt; in &lt;code&gt;board[6][4]&lt;/code&gt; to &lt;code&gt;board[4][4]&lt;/code&gt;. The old position at &lt;code&gt;[6][4]&lt;/code&gt; is made blank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22448211d9daeba006917d76dca51732108327f5" translate="yes" xml:space="preserve">
          <source>The following encodes &lt;code&gt;~314&lt;/code&gt;, i.e. the ones' complement of &lt;code&gt;314&lt;/code&gt;:</source>
          <target state="translated">Следующее кодирует &lt;code&gt;~314&lt;/code&gt; , то есть дополнение до &lt;code&gt;314&lt;/code&gt; единиц :</target>
        </trans-unit>
        <trans-unit id="17470c9f776b2250318b28cf1d1ffc7e6f3a5e08" translate="yes" xml:space="preserve">
          <source>The following example (see &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html&quot;&gt;memory.html&lt;/a&gt; on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/memory.html&quot;&gt;view it live also&lt;/a&gt;) fetches and instantiates the loaded memory.wasm byte code using the &lt;a href=&quot;../instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method, while importing the memory created in the line above. It then stores some values in that memory, then exports a function and uses it to sum some values.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html&quot;&gt;Memory.html&lt;/a&gt; на GitHub и также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/memory.html&quot;&gt;просмотрите его в режиме реального времени&lt;/a&gt; ) извлекает и создает экземпляр загруженного байтового кода memory.wasm с помощью метода &lt;a href=&quot;../instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; при импорте памяти, созданной в строке выше. Затем он сохраняет некоторые значения в этой памяти, затем экспортирует функцию и использует ее для суммирования некоторых значений.</target>
        </trans-unit>
        <trans-unit id="981dbbb700347ec94c9580cfc5638be5b3b0be36" translate="yes" xml:space="preserve">
          <source>The following example (see &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.html&quot;&gt;table.html&lt;/a&gt; on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table.html&quot;&gt;view it live&lt;/a&gt; also) compiles and instantiates the loaded table.wasm byte code using the &lt;a href=&quot;../instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method. It then retrieves the references stored in the exported table.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.html&quot;&gt;Table.html&lt;/a&gt; на GitHub и также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table.html&quot;&gt;просмотрите его вживую&lt;/a&gt; ) компилирует и создает экземпляр загруженного байтового кода table.wasm с помощью метода &lt;a href=&quot;../instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; . Затем он извлекает ссылки, хранящиеся в экспортированной таблице.</target>
        </trans-unit>
        <trans-unit id="7f7270c5a457873286226e276262e42332f056a3" translate="yes" xml:space="preserve">
          <source>The following example (see imports.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/imports.html&quot;&gt;source code&lt;/a&gt;; &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/imports.html&quot;&gt;see it live also&lt;/a&gt;) compiles the loaded simple.wasm module. This module is then queried for its imports.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/imports.html&quot;&gt;Исходный код&lt;/a&gt; imports.html ; также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/imports.html&quot;&gt;посмотрите его вживую&lt;/a&gt; ) компилируется загруженный модуль simple.wasm. Затем у этого модуля запрашивается его импорт.</target>
        </trans-unit>
        <trans-unit id="8be40e21a9e877159efe0525f36b240712dbcbd2" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/compile-streaming.html&quot;&gt;compile-streaming.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/compile-streaming.html&quot;&gt;view it live&lt;/a&gt; also) directly streams a .wasm module from an underlying source then compiles it to a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object. Because the &lt;code&gt;compileStreaming()&lt;/code&gt; function accepts a promise for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, you can directly pass it a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, and it will pass the response into the function when it fulfills.</source>
          <target state="translated">В следующем примере (см. Нашу демонстрацию &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/compile-streaming.html&quot;&gt;compile-streaming.html&lt;/a&gt; на GitHub, а также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/compile-streaming.html&quot;&gt;просмотрите ее вживую&lt;/a&gt; ) напрямую передает модуль .wasm из базового источника, а затем компилирует его в объект &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; . Поскольку &lt;code&gt;compileStreaming()&lt;/code&gt; принимает обещание для объекта &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; , вы можете напрямую передать ему &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt; , и он передаст ответ функции, когда она выполнится.</target>
        </trans-unit>
        <trans-unit id="a6ae5b74d8e14e8953b0f9fe248151245b6413e0" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/compile-streaming.html&quot;&gt;compile-streaming.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/compile-streaming.html&quot;&gt;view it live&lt;/a&gt; also) directly streams a .wasm module from an underlying source then compiles it to a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object. Because the &lt;code&gt;compileStreaming()&lt;/code&gt; function accepts a promise for a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, you can directly pass it a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, and it will pass the response into the function when it fulfills.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53be014f3a4cb1626bdfbf9e32e14585455937df" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded &lt;code&gt;simple.wasm&lt;/code&gt; byte code using the &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends the resulting &lt;code&gt;Module&lt;/code&gt; instance to a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbc142b33431162d5fa601429ab3ef586de33d3" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded simple.wasm byte code using the &lt;a href=&quot;../compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;Нашу&lt;/a&gt; демонстрацию index-compile.html на GitHub, а также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;просмотрите ее вживую&lt;/a&gt; ) компилирует загруженный байтовый код simple.wasm с помощью метода &lt;a href=&quot;../compilestreaming&quot;&gt; &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; &lt;/a&gt; а затем отправляет его &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;работнику&lt;/a&gt; с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="425eee5fd9b831445fafddc4cbc8f451497cb3b7" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded simple.wasm byte code using the &lt;a href=&quot;../compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4be8e69110269721fd01b14c26ce7095dc1f463" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded simple.wasm byte code using the &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;Нашу&lt;/a&gt; демонстрацию index-compile.html на GitHub, а также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;просмотрите ее вживую&lt;/a&gt; ) компилирует загруженный байтовый код simple.wasm с помощью метода &lt;a href=&quot;compilestreaming&quot;&gt; &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; &lt;/a&gt; а затем отправляет его &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;работнику&lt;/a&gt; с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99830cdcbf9155363e0babc88536b78d2f5ed898" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded simple.wasm byte code using the &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends it to a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ed400983182592d2bee361ee8810fd4e6d4f77" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;instantiate-streaming.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;view it live&lt;/a&gt; also) directly streams a .wasm module from an underlying source then compiles and instantiates it, the promise fulfilling with a &lt;code&gt;ResultObject&lt;/code&gt;. Because the &lt;code&gt;instantiateStreaming()&lt;/code&gt; function accepts a promise for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, you can directly pass it a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, and it will pass the response into the function when it fulfills.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;Нашу&lt;/a&gt; демонстрацию instantiate-streaming.html на GitHub, а также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;просмотрите ее вживую&lt;/a&gt; ) напрямую передает модуль .wasm из базового источника, затем компилирует и создает его экземпляр, обещание выполняется с помощью &lt;code&gt;ResultObject&lt;/code&gt; . Поскольку функция &lt;code&gt;instantiateStreaming()&lt;/code&gt; принимает обещание для объекта &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; , вы можете напрямую передать ему &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt; , и он передаст ответ функции, когда она выполнится.</target>
        </trans-unit>
        <trans-unit id="4f226b89a3d4aad9c212a95fed47ada052b698d3" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;instantiate-streaming.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;view it live&lt;/a&gt; also) directly streams a .wasm module from an underlying source then compiles and instantiates it, the promise fulfilling with a &lt;code&gt;ResultObject&lt;/code&gt;. Because the &lt;code&gt;instantiateStreaming()&lt;/code&gt; function accepts a promise for a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, you can directly pass it a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, and it will pass the response into the function when it fulfills.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a65ae3251766cd2a7a0fcb51f98859e86206631" translate="yes" xml:space="preserve">
          <source>The following example (see table2.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;source code&lt;/a&gt; and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;live version&lt;/a&gt;) creates a new WebAssembly Table instance with an initial size of 2 elements. We then print out the table length and contents of the two indexes (retrieved via &lt;a href=&quot;get&quot;&gt;&lt;code&gt;Table.prototype.get()&lt;/code&gt;&lt;/a&gt; to show that the length is two and both elements are &lt;a href=&quot;../../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074b310b066d2912c353138074d2c4298ef9da96" translate="yes" xml:space="preserve">
          <source>The following example (see table2.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;source code&lt;/a&gt; and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;live version&lt;/a&gt;) creates a new WebAssembly Table instance with an initial size of 2 elements. We then print out the table length and contents of the two indexes (retrieved via &lt;a href=&quot;table/get&quot;&gt;&lt;code&gt;Table.prototype.get()&lt;/code&gt;&lt;/a&gt; to show that the length is two and both elements are &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;Исходный код&lt;/a&gt; table2.html и &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;действующую версию&lt;/a&gt; ) создается новый экземпляр таблицы WebAssembly с начальным размером 2 элемента. Затем мы распечатываем длину таблицы и содержимое двух индексов (полученных с помощью &lt;a href=&quot;table/get&quot;&gt; &lt;code&gt;Table.prototype.get()&lt;/code&gt; &lt;/a&gt; чтобы показать, что длина равна двум, а оба элемента равны &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51d5684213f352c1a7b4119e2be51a68e2b42266" translate="yes" xml:space="preserve">
          <source>The following example (see table2.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;source code&lt;/a&gt; and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;live version&lt;/a&gt;) creates a new WebAssembly Table instance with an initial size of 2 references. We then print out the table length and contents of the two indexes (retrieved via &lt;a href=&quot;get&quot;&gt;&lt;code&gt;Table.prototype.get()&lt;/code&gt;&lt;/a&gt;) to show that the length is two, and the indexes currently contain no function references (they currently return &lt;a href=&quot;../../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;Исходный код&lt;/a&gt; table2.html и &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;действующую версию&lt;/a&gt; ) создается новый экземпляр таблицы WebAssembly с начальным размером 2 ссылки. Затем мы распечатываем длину таблицы и содержимое двух индексов (полученных с помощью &lt;a href=&quot;get&quot;&gt; &lt;code&gt;Table.prototype.get()&lt;/code&gt; &lt;/a&gt; ), чтобы показать, что длина равна двум, а индексы в настоящее время не содержат ссылок на функции (в настоящее время они возвращают значение &lt;a href=&quot;../../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e90898c64d263a3ab47f788727fb41a2af7847f1" translate="yes" xml:space="preserve">
          <source>The following example (see the custom-section.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/other-examples/custom-section.html&quot;&gt;source&lt;/a&gt; and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/other-examples/custom-section.html&quot;&gt;live example&lt;/a&gt;) compiles the loaded simple-name-section.wasm byte code.</source>
          <target state="translated">В следующем примере (см. Исходный &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/other-examples/custom-section.html&quot;&gt;код&lt;/a&gt; custom-section.html и &lt;a href=&quot;https://mdn.github.io/webassembly-examples/other-examples/custom-section.html&quot;&gt;живой пример&lt;/a&gt; ) компилируется загруженный байт-код simple-name-section.wasm.</target>
        </trans-unit>
        <trans-unit id="8925708cf4fd51b195340d4fd06ff264de3c4d2c" translate="yes" xml:space="preserve">
          <source>The following example (see the validate.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/validate.html&quot;&gt;source code&lt;/a&gt;, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/validate.html&quot;&gt;see it live too&lt;/a&gt;) fetches a .wasm module and converts it into a typed array. The &lt;code&gt;validate()&lt;/code&gt; method is then used to check whether the module is valid.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/validate.html&quot;&gt;Исходный код&lt;/a&gt; validate.html и также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/validate.html&quot;&gt;просмотрите его вживую&lt;/a&gt; ) извлекается модуль .wasm и преобразуется в типизированный массив. &lt;code&gt;validate()&lt;/code&gt; метод используется для проверки , является ли модуль.</target>
        </trans-unit>
        <trans-unit id="04b5c2595d411a19b733d6b6fa76801e2bd24eab" translate="yes" xml:space="preserve">
          <source>The following example assigns the day of month of the current date to the variable &lt;code&gt;dayOfMonth&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dcad8447c089842b32b6c84f713c3990f8a460" translate="yes" xml:space="preserve">
          <source>The following example assigns the day portion of the current date to the variable &lt;code&gt;day&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;day&lt;/code&gt; присваивается дневная часть текущей даты .</target>
        </trans-unit>
        <trans-unit id="329ba32469ae5d1cee5124ac53f13a8d2e5ee8c4" translate="yes" xml:space="preserve">
          <source>The following example assigns the four-digit value of the current year to the variable &lt;code&gt;year&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;year&lt;/code&gt; присваивается четырехзначное значение текущего года .</target>
        </trans-unit>
        <trans-unit id="42327da23d2132b0665c321f6e511d64099c2105" translate="yes" xml:space="preserve">
          <source>The following example assigns the hours portion of the current time to the variable &lt;code&gt;hours&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;hours&lt;/code&gt; присваивается часть часов текущего времени .</target>
        </trans-unit>
        <trans-unit id="f5cf3c20aaeef2c685c52ccdf2761f9b637b94e2" translate="yes" xml:space="preserve">
          <source>The following example assigns the milliseconds portion of the current time to the variable &lt;code&gt;milliseconds&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;milliseconds&lt;/code&gt; назначаются миллисекунды текущего времени .</target>
        </trans-unit>
        <trans-unit id="93f95efff30459ece8c91e6f0e8eea1145c0f574" translate="yes" xml:space="preserve">
          <source>The following example assigns the milliseconds portion of the current time to the variable &lt;code&gt;milliseconds&lt;/code&gt;:</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;milliseconds&lt;/code&gt; назначаются миллисекунды текущего времени :</target>
        </trans-unit>
        <trans-unit id="078d56fd7b9b4ca87d573476a1b430aaf18cc0df" translate="yes" xml:space="preserve">
          <source>The following example assigns the minutes portion of the current time to the variable &lt;code&gt;minutes&lt;/code&gt;.</source>
          <target state="translated">В следующем примере значение минут текущего времени назначается переменной &lt;code&gt;minutes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fade3624fc5f764985a36f92a2d97d640c27075" translate="yes" xml:space="preserve">
          <source>The following example assigns the month portion of the current date to the variable &lt;code&gt;month&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;month&lt;/code&gt; присваивается часть текущей даты &amp;laquo; месяц&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="ac4df3ac8ffa391b3525c78b9876dbb78d6bd995" translate="yes" xml:space="preserve">
          <source>The following example assigns the seconds portion of the current time to the variable &lt;code&gt;seconds&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;seconds&lt;/code&gt; назначается часть текущего времени в секундах .</target>
        </trans-unit>
        <trans-unit id="343545b7b29be8cda1dcf0cbd75601808cd0809f" translate="yes" xml:space="preserve">
          <source>The following example assigns the weekday portion of the current date to the variable &lt;code&gt;weekday&lt;/code&gt;.</source>
          <target state="translated">В следующем примере значение дня недели текущей даты присваивается переменной &lt;code&gt;weekday&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="767d60c06ca1ff299270f38eff52362c32dbcb7c" translate="yes" xml:space="preserve">
          <source>The following example combines strings into a new string.</source>
          <target state="translated">Следующий пример объединяет строки в новую строку.</target>
        </trans-unit>
        <trans-unit id="ce1f80f7ce973aac6a68718ef1d5ef4c0a63d97a" translate="yes" xml:space="preserve">
          <source>The following example compiles the loaded simple.wasm byte code using the &lt;code&gt;compile()&lt;/code&gt; function and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="translated">Следующий пример компилирует загруженный код simple.wasm байт с использованием &lt;code&gt;compile()&lt;/code&gt; функции , а затем посылает его к &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;рабочему&lt;/a&gt; с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;PostMessage ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e24149b342bc29c992c104b8a241bca44d6191c" translate="yes" xml:space="preserve">
          <source>The following example compiles the loaded simple.wasm byte code using the &lt;code&gt;compile()&lt;/code&gt; function and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c1aae55651ebc7d95593ee71eb5a2d80993538" translate="yes" xml:space="preserve">
          <source>The following example converts the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to a numerical value using &lt;code&gt;Number&lt;/code&gt; as a function:</source>
          <target state="translated">В следующем примере объект &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; преобразуется в числовое значение с использованием &lt;code&gt;Number&lt;/code&gt; в качестве функции:</target>
        </trans-unit>
        <trans-unit id="90bee3ba074ae4959eca3ef45c5c2b24977b7e28" translate="yes" xml:space="preserve">
          <source>The following example creates a constructor (&lt;code&gt;Tree&lt;/code&gt;) and an object of that type (&lt;code&gt;theTree&lt;/code&gt;). The example then displays the &lt;code&gt;constructor&lt;/code&gt; property for the object &lt;code&gt;theTree&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d3d920082d0c9559583ab75e2b0ed8ba94a88c" translate="yes" xml:space="preserve">
          <source>The following example creates a new WebAssembly Memory instance with an initial size of 1 page (64KiB), and a maximum size of 10 pages (640KiB).</source>
          <target state="translated">В следующем примере создается новый экземпляр WebAssembly Memory с начальным размером 1 страницы (64КиБ)и максимальным размером 10 страниц (640КиБ).</target>
        </trans-unit>
        <trans-unit id="40392ebf224f08b9413114ec5e26a7d27a004ce6" translate="yes" xml:space="preserve">
          <source>The following example creates a new WebAssembly Table instance with an initial size of 2 and a maximum size of 10.</source>
          <target state="translated">В следующем примере создается новый экземпляр WebAssembly Table с начальным размером 2 и максимальным размером 10.</target>
        </trans-unit>
        <trans-unit id="987625d9a34f6b1500f4c39852a2fcd13e8078e4" translate="yes" xml:space="preserve">
          <source>The following example creates a prototype, &lt;code&gt;Tree&lt;/code&gt;, and an object of that type, &lt;code&gt;theTree&lt;/code&gt;. The example then displays the &lt;code&gt;constructor&lt;/code&gt; property for the object &lt;code&gt;theTree&lt;/code&gt;.</source>
          <target state="translated">В следующем примере создается прототип &lt;code&gt;Tree&lt;/code&gt; и объект этого типа &lt;code&gt;theTree&lt;/code&gt; . Затем в примере отображается свойство &lt;code&gt;constructor&lt;/code&gt; для объекта &lt;code&gt;theTree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e024257f78c408de5dbe3924322f58fda0791ae" translate="yes" xml:space="preserve">
          <source>The following example creates an array &lt;code&gt;a&lt;/code&gt;, containing three elements, then reverses the array. The call to &lt;code&gt;reverse()&lt;/code&gt; returns a reference to the reversed array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">В следующем примере создается массив &lt;code&gt;a&lt;/code&gt; , содержащий три элемента, а затем массив переворачивается. Вызов функции &lt;code&gt;reverse()&lt;/code&gt; возвращает ссылку на обратный массив &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d385d069b10480e7c6f5d55e94f57807563c9d85" translate="yes" xml:space="preserve">
          <source>The following example creates an array, &lt;code&gt;&lt;var&gt;msgArray&lt;/var&gt;&lt;/code&gt;, with a length of &lt;code&gt;0&lt;/code&gt;, then assigns values to &lt;code&gt;msgArray[0]&lt;/code&gt; and &lt;code&gt;msgArray[99]&lt;/code&gt;, changing the &lt;code&gt;length&lt;/code&gt; of the array to &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7ccf2c333889f3e25b5af825d678cedd99f53b" translate="yes" xml:space="preserve">
          <source>The following example creates an array, &lt;code&gt;a&lt;/code&gt;, with three elements, then joins the array four times: using the default separator, then a comma and a space, then a plus and an empty string.</source>
          <target state="translated">В следующем примере создается массив &lt;code&gt;a&lt;/code&gt; с тремя элементами, затем он объединяется четыре раза: с использованием разделителя по умолчанию, затем запятой и пробела, затем плюс и пустая строка.</target>
        </trans-unit>
        <trans-unit id="94ed75046a42e69d01d296a24ea2163f50def55f" translate="yes" xml:space="preserve">
          <source>The following example creates an array, &lt;code&gt;msgArray&lt;/code&gt;, with a length of 0, then assigns values to &lt;code&gt;msgArray[0]&lt;/code&gt; and &lt;code&gt;msgArray[99]&lt;/code&gt;, changing the length of the array to 100.</source>
          <target state="translated">В следующем примере создается массив &lt;code&gt;msgArray&lt;/code&gt; с длиной 0, затем присваиваются значения &lt;code&gt;msgArray[0]&lt;/code&gt; и &lt;code&gt;msgArray[99]&lt;/code&gt; , изменяя длину массива на 100.</target>
        </trans-unit>
        <trans-unit id="eaea1362d9c752d1acd789d7f6adfdb9ced93027" translate="yes" xml:space="preserve">
          <source>The following example creates an array-like object &lt;code&gt;a&lt;/code&gt;, containing three elements and a length property, then reverses the array-like object. The call to &lt;code&gt;reverse()&lt;/code&gt; returns a reference to the reversed array-like object &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e3ef17d5ed26b9f90461bb26fa01c086129786" translate="yes" xml:space="preserve">
          <source>The following example creates four arrays and displays the original array, then the sorted arrays. The numeric arrays are sorted without a compare function, then sorted using one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acec17eec6a860d29cc75e011e0974ef6eecfdad" translate="yes" xml:space="preserve">
          <source>The following example creates four arrays and displays the original array, then the sorted arrays. The numeric arrays are sorted without, then with, a compare function.</source>
          <target state="translated">В следующем примере создается четыре массива и отображается исходный массив,а затем отсортированные массивы.Числовые массивы сортируются без функции сравнения,а затем с помощью функции сравнения.</target>
        </trans-unit>
        <trans-unit id="e7b9f96843bc2693d00e570144e308453edb6f01" translate="yes" xml:space="preserve">
          <source>The following example define a pseudo-property &lt;code&gt;current&lt;/code&gt; of object &lt;code&gt;language&lt;/code&gt;. When &lt;code&gt;current&lt;/code&gt; is assigned a value, it updates &lt;code&gt;log&lt;/code&gt; with that value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8659a61c736495c98b2b579b5596a17089ed728b" translate="yes" xml:space="preserve">
          <source>The following example defines a function that splits a string into an array of strings using &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt;. After splitting the string, the function logs messages indicating the original string (before the split), the separator used, the number of elements in the array, and the individual array elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac6d9979086fed726d30810239f0df73d45c5df" translate="yes" xml:space="preserve">
          <source>The following example defines a function that splits a string into an array of strings using the specified separator. After splitting the string, the function logs messages indicating the original string (before the split), the separator used, the number of elements in the array, and the individual array elements.</source>
          <target state="translated">Следующий пример определяет функцию,которая разбивает строку на массив строк с помощью указанного разделителя.После разбиения строки функция регистрирует сообщения,указывающие на исходную строку (до разбиения),используемый разделитель,количество элементов в массиве и отдельные элементы массива.</target>
        </trans-unit>
        <trans-unit id="92b53dacb75ae1e45d107fe4e0d1af48934e0a9c" translate="yes" xml:space="preserve">
          <source>The following example defines a function, which, in turn, defines and returns a factorial function. This example isn't very practical, and there are nearly no cases where the same result cannot be achieved with &lt;a href=&quot;../../operators/function&quot;&gt;named function expressions&lt;/a&gt;.</source>
          <target state="translated">В следующем примере определяется функция, которая, в свою очередь, определяет и возвращает факториальную функцию. Этот пример не очень практичен, и почти нет случаев, когда тот же результат не может быть достигнут с помощью &lt;a href=&quot;../../operators/function&quot;&gt;выражений именованных функций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab0f8b17dc95108d00ead468122ed886ad0787e7" translate="yes" xml:space="preserve">
          <source>The following example defines an unnamed function and assigns it to &lt;code&gt;x&lt;/code&gt;. The function returns the square of its argument:</source>
          <target state="translated">В следующем примере определяется безымянная функция и присваивается ей &lt;code&gt;x&lt;/code&gt; . Функция возвращает квадрат своего аргумента:</target>
        </trans-unit>
        <trans-unit id="4f8ffa34b31c533441565020a3902f90686081d1" translate="yes" xml:space="preserve">
          <source>The following example defines an unnamed generator function and assigns it to &lt;code&gt;x&lt;/code&gt;. The function yields the square of its argument:</source>
          <target state="translated">В следующем примере определяется безымянная функция-генератор и назначается ей &lt;code&gt;x&lt;/code&gt; . Функция возвращает квадрат своего аргумента:</target>
        </trans-unit>
        <trans-unit id="c24d2dc4ab700e16094a6b07ebfc466de9d9388c" translate="yes" xml:space="preserve">
          <source>The following example defines two string variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca6fb2df23581f1f3ea75626e31d34e85d25092" translate="yes" xml:space="preserve">
          <source>The following example defines two string variables. The variables contain the same string except that the second string contains uppercase letters. The first &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Console/log&quot;&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/a&gt; method displays 19. But because the &lt;code&gt;indexOf()&lt;/code&gt; method is case sensitive, the string &lt;code&gt;&quot;cheddar&quot;&lt;/code&gt; is not found in &lt;code&gt;myCapString&lt;/code&gt;, so the second &lt;code&gt;console.log()&lt;/code&gt; method displays -1.</source>
          <target state="translated">В следующем примере определяются две строковые переменные. Переменные содержат ту же строку, за исключением того, что вторая строка содержит буквы верхнего регистра. Первый метод &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Console/log&quot;&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;/a&gt; отображает 19. Но поскольку метод &lt;code&gt;indexOf()&lt;/code&gt; чувствителен к регистру, строка &lt;code&gt;&quot;cheddar&quot;&lt;/code&gt; не найдена в &lt;code&gt;myCapString&lt;/code&gt; , поэтому второй метод &lt;code&gt;console.log()&lt;/code&gt; отображает -1.</target>
        </trans-unit>
        <trans-unit id="547d34e148fee3b5c81ff45fb75c1ba9349a6db8" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how constants behave. Try this in your browser console.</source>
          <target state="translated">Следующий пример демонстрирует,как ведут себя константы.Попробуйте это в консоли браузера.</target>
        </trans-unit>
        <trans-unit id="98ff2a6ba484f518866c30fcdddf29c37ad2fdc0" translate="yes" xml:space="preserve">
          <source>The following example demonstrates several things:</source>
          <target state="translated">Следующий пример демонстрирует несколько вещей:</target>
        </trans-unit>
        <trans-unit id="4acb5dc736da7509eb051a3f3fb33a2adf5a1511" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the different potential results for a string occurring before, after, or at the same level as another:</source>
          <target state="translated">Следующий пример демонстрирует различные потенциальные результаты для строки,происходящей до,после или на том же уровне,что и другая строка:</target>
        </trans-unit>
        <trans-unit id="76991b080a89f297062fcd2b209588b4476dff9d" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the enumerability of user-defined vs. built-in properties:</source>
          <target state="translated">Следующий пример демонстрирует возможность пересчета пользовательских и встроенных свойств:</target>
        </trans-unit>
        <trans-unit id="c2e952e4b1b1ab4ce31fdb525a4580a9807c8c4e" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of the global and ignore case flags with &lt;code&gt;match()&lt;/code&gt;. All letters &lt;code&gt;A&lt;/code&gt; through &lt;code&gt;E&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; through &lt;code&gt;e&lt;/code&gt; are returned, each its own element in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535735172236e9bfa62c1b8539c90dbbb7bcde3f" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of the global and ignore case flags with &lt;code&gt;match()&lt;/code&gt;. All letters A through E and a through e are returned, each its own element in the array.</source>
          <target state="translated">В следующем примере демонстрируется использование флагов global и ignore case с &lt;code&gt;match()&lt;/code&gt; . Возвращаются все буквы от A до E и от a до e, каждый свой элемент в массиве.</target>
        </trans-unit>
        <trans-unit id="cabe28f20b2239beb68252e8521440dc3608037d" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this behaviour:</source>
          <target state="translated">Следующий пример демонстрирует такое поведение:</target>
        </trans-unit>
        <trans-unit id="f1a20b08e6b9a8caed404a5a3d2e883966a78b3f" translate="yes" xml:space="preserve">
          <source>The following example determines whether the &lt;code&gt;o&lt;/code&gt; object contains a property named &lt;code&gt;prop&lt;/code&gt;:</source>
          <target state="translated">В следующем примере определяется, содержит ли объект &lt;code&gt;o&lt;/code&gt; свойство с именем &lt;code&gt;prop&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b86a1dde5df429b8d830bc2153042ec3baf37734" translate="yes" xml:space="preserve">
          <source>The following example differentiates between direct properties and properties inherited through the prototype chain:</source>
          <target state="translated">В следующем примере различаются прямые свойства и свойства,унаследованные через цепочку прототипов:</target>
        </trans-unit>
        <trans-unit id="e28904a6f35eeb800c143e3dee50dcff00bd1737" translate="yes" xml:space="preserve">
          <source>The following example displays characters at different locations in the string &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt;:</source>
          <target state="translated">В следующем примере символы отображаются в разных местах строки &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d5069cc5724ce085e15d25e5d352954d833f1196" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;' &amp;nbsp; foo'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5458354badab7ff4adbcb6d487cdf785f3f80ce" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;' foo'&lt;/code&gt;:</source>
          <target state="translated">В следующем примере отображается строчная строка &lt;code&gt;' foo'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7e291b2b732970f23d715257c0f8a9eb7c68acc7" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;'foo &amp;nbsp;'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfcf6eed9257eea6ea96db09db7d70185bcca9b" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;'foo '&lt;/code&gt;:</source>
          <target state="translated">В следующем примере отображается строчная строка &lt;code&gt;'foo '&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5f7e0cd9f847bc1e944b777e688a83943d4b275d" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;'foo'&lt;/code&gt;:</source>
          <target state="translated">В следующем примере отображается строчная строка &lt;code&gt;'foo'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3de0baed5bb079a0ffbb4bf89fc9d1cfda35e9f0" translate="yes" xml:space="preserve">
          <source>The following example displays the string value of a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">В следующем примере отображается строковое значение объекта &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b52750760089a6c0542b8391fd7147e5b5454c38" translate="yes" xml:space="preserve">
          <source>The following example displays the string value of a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">В следующем примере отображается строковое значение объекта &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="18561723849ba2c212dfe8fbd1d0094dd72468e7" translate="yes" xml:space="preserve">
          <source>The following example displays the word &quot;MDN&quot; as a hypertext link that returns the user to the Mozilla Developer Network.</source>
          <target state="translated">В следующем примере слово &quot;MDN&quot; отображается как гипертекстовая ссылка,которая возвращает пользователя в Mozilla Developer Network.</target>
        </trans-unit>
        <trans-unit id="36f1186c333290c25b528c1d31b9417d9e9b895a" translate="yes" xml:space="preserve">
          <source>The following example finds an element in the array that is a prime number (or returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no prime number).</source>
          <target state="translated">В следующем примере выполняется поиск элемента в массиве, который является простым числом (или возвращается &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; ,&lt;/a&gt; если простого числа нет).</target>
        </trans-unit>
        <trans-unit id="d5456ae8de25799bf8c9164d723032bea5544e2e" translate="yes" xml:space="preserve">
          <source>The following example finds an element in the array that is a prime number (or returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no prime number):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71e655d2f693b29caaacf6e44d06930198e94b3" translate="yes" xml:space="preserve">
          <source>The following example finds an element in the typed array that is a prime number (or returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no prime number).</source>
          <target state="translated">В следующем примере выполняется поиск элемента в типизированном массиве, который является простым числом (или возвращается &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; ,&lt;/a&gt; если простого числа нет).</target>
        </trans-unit>
        <trans-unit id="123a7cc3c410ee8833d83619d1741b726a071c58" translate="yes" xml:space="preserve">
          <source>The following example finds the index of a fruit using an arrow function:</source>
          <target state="translated">В следующем примере индекс фрукта найден с помощью функции стрелки:</target>
        </trans-unit>
        <trans-unit id="c3043c7e35e655f7354b6f1b8d8089ebb3dcfa97" translate="yes" xml:space="preserve">
          <source>The following example finds the index of an element in the typed array that is a prime number (or returns -1 if there is no prime number).</source>
          <target state="translated">Следующий пример находит индекс элемента в типизированном массиве,который является простым числом (или возвращает -1,если простое число отсутствует).</target>
        </trans-unit>
        <trans-unit id="c5c6b7cffaee77e66f9d1e62fcb17bb0df5b0be7" translate="yes" xml:space="preserve">
          <source>The following example illustrates an alternative approach, using &lt;code&gt;forEach()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04878c2dd68886e6bf3de28ed14d3ae057e21b4a" translate="yes" xml:space="preserve">
          <source>The following example is only here for learning purpose. If you want to flatten an array using built-in methods you can use &lt;a href=&quot;flat&quot;&gt;&lt;code&gt;Array.prototype.flat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9921b6dcf2965ab71a7bbbf0b7bd58d30abfff93" translate="yes" xml:space="preserve">
          <source>The following example joins array-like object (&lt;code&gt;&lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt;&lt;/code&gt;), by calling &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;Array.prototype.join&lt;/code&gt;.</source>
          <target state="translated">В следующем примере объединяется объект, подобный массиву ( &lt;code&gt;&lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt;&lt;/code&gt; ), путем вызова &lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;Function.prototype.call&lt;/code&gt; &lt;/a&gt; для &lt;code&gt;Array.prototype.join&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fc86f8bd44257f235a0ee34207fabb06957cf4e" translate="yes" xml:space="preserve">
          <source>The following example logs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a6eb7e50a75d3ce30d69979c6deb4427e65027" translate="yes" xml:space="preserve">
          <source>The following example logs &quot;one&quot;, &quot;two&quot;, &quot;four&quot;. When the entry containing the value &quot;two&quot; is reached, the first entry of the whole array is shifted off, which results in all remaining entries moving up one position. Because element &quot;four&quot; is now at an earlier position in the array, &quot;three&quot; will be skipped. &lt;code&gt;forEach()&lt;/code&gt; does not make a copy of the array before iterating.</source>
          <target state="translated">В следующем примере регистрируются &amp;laquo;один&amp;raquo;, &amp;laquo;два&amp;raquo;, &amp;laquo;четыре&amp;raquo;. Когда достигается запись, содержащая значение &amp;laquo;два&amp;raquo;, первая запись всего массива смещается, в результате чего все оставшиеся записи перемещаются на одну позицию вверх. Поскольку элемент &amp;laquo;четыре&amp;raquo; теперь находится на более ранней позиции в массиве, &amp;laquo;три&amp;raquo; будет пропущено. &lt;code&gt;forEach()&lt;/code&gt; не делает копию массива перед повторением.</target>
        </trans-unit>
        <trans-unit id="40e228d899d08f05aeecc38dce80833d2bd90269" translate="yes" xml:space="preserve">
          <source>The following example logs a message which depends on the success of the test:</source>
          <target state="translated">В следующем примере регистрируется сообщение,которое зависит от успешности теста:</target>
        </trans-unit>
        <trans-unit id="1d7aef234432711a2e9c30b19e8ad50d7434e224" translate="yes" xml:space="preserve">
          <source>The following example opens a file and then executes statements that use the file (server-side JavaScript allows you to access files). If an exception is thrown while the file is open, the &lt;code&gt;finally&lt;/code&gt; clause closes the file before the script fails. The code in &lt;code&gt;finally&lt;/code&gt; also executes upon explicitly returning from &lt;code&gt;try&lt;/code&gt; or &lt;code&gt;catch&lt;/code&gt; block.</source>
          <target state="translated">В следующем примере открывается файл, а затем выполняются операторы, использующие этот файл (серверный JavaScript позволяет вам получить доступ к файлам). Если при открытом файле возникает исключение, предложение &lt;code&gt;finally&lt;/code&gt; закрывает файл до того, как сценарий завершится ошибкой. Код в &lt;code&gt;finally&lt;/code&gt; также выполняется после явного возврата из блока &lt;code&gt;try&lt;/code&gt; или &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ae682e556b86f0a9c680f91cf8500371aa1c3fc" translate="yes" xml:space="preserve">
          <source>The following example provides the special encoding required within UTF-8 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition&quot;&gt;&lt;code&gt;Content-Disposition&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link&quot;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt; server response header parameters (e.g., UTF-8 filenames):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b446e3f60ff448f09a2a16a2121c515e355b2ea" translate="yes" xml:space="preserve">
          <source>The following example provides the special encoding required within UTF-8 &lt;code&gt;Content-Disposition&lt;/code&gt; and &lt;code&gt;Link&lt;/code&gt; server response header parameters (e.g., UTF-8 filenames):</source>
          <target state="translated">В следующем примере представлена ​​специальная кодировка, требуемая в параметрах заголовка ответа сервера UTF-8 &lt;code&gt;Content-Disposition&lt;/code&gt; и &lt;code&gt;Link&lt;/code&gt; (например, имена файлов UTF-8):</target>
        </trans-unit>
        <trans-unit id="87039910df2dc3a9a34e9fafe993bc06eedfa65a" translate="yes" xml:space="preserve">
          <source>The following example replaces a Fahrenheit degree with its equivalent Celsius degree. The Fahrenheit degree should be a number ending with &lt;code&gt;&quot;F&quot;&lt;/code&gt;. The function returns the Celsius number ending with &lt;code&gt;&quot;C&quot;&lt;/code&gt;. For example, if the input number is &lt;code&gt;&quot;212F&quot;&lt;/code&gt;, the function returns &lt;code&gt;&quot;100C&quot;&lt;/code&gt;. If the number is &lt;code&gt;&quot;0F&quot;&lt;/code&gt;, the function returns &lt;code&gt;&quot;-17.77777777777778C&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6d94ed30d3e9137ae631064c77221c72decf99" translate="yes" xml:space="preserve">
          <source>The following example replaces a Fahrenheit degree with its equivalent Celsius degree. The Fahrenheit degree should be a number ending with F. The function returns the Celsius number ending with C. For example, if the input number is 212F, the function returns 100C. If the number is 0F, the function returns -17.77777777777778C.</source>
          <target state="translated">Следующий пример заменяет степень Фаренгейта на эквивалентную ей по Цельсию.Степень Фаренгейта должна быть числом,оканчивающимся на F.Функция возвращает число по Цельсию,оканчивающееся на C.Например,если входное число 212F,функция возвращает 100C.Если число 0F,функция возвращает -17.7777777778C.</target>
        </trans-unit>
        <trans-unit id="933f02ade97f0adfd5b355b0f382856566007dbf" translate="yes" xml:space="preserve">
          <source>The following example replaces a substring within a string. It will replace both individual characters and substrings. The function call at the end of the example changes the string &lt;code&gt;'Brave New World'&lt;/code&gt; to &lt;code&gt;'Brave New Web'&lt;/code&gt;.</source>
          <target state="translated">В следующем примере заменяется подстрока в строке. Он заменит как отдельные символы, так и подстроки. Вызов функции в конце примера меняет строку &lt;code&gt;'Brave New World'&lt;/code&gt; на &lt;code&gt;'Brave New Web'&lt;/code&gt; мир &amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="24da5523828c57db976cc0d7542f115e6815bd27" translate="yes" xml:space="preserve">
          <source>The following example replaces a substring within a string. It will replace both individual characters and substrings. The function call at the end of the example changes the string &lt;code&gt;Brave New World&lt;/code&gt; to &lt;code&gt;Brave New Web&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f8e958f94323ef8dc0f42259773df78c457ee2" translate="yes" xml:space="preserve">
          <source>The following example returns 65, the Unicode value for A.</source>
          <target state="translated">В следующем примере возвращается 65,значение Юникода для А.</target>
        </trans-unit>
        <trans-unit id="90c5cda0c96e649f69caa007d659268d33f22c88" translate="yes" xml:space="preserve">
          <source>The following example returns &lt;code&gt;224&lt;/code&gt;:</source>
          <target state="translated">В следующем примере возвращается &lt;code&gt;224&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d056fa1c9f0d837fbff2ba8b0f5d0ca6c4894ca4" translate="yes" xml:space="preserve">
          <source>The following example returns &lt;code&gt;65&lt;/code&gt;, the Unicode value for A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24de5fa4059fba34b62190fb50374f94f80ed5c0" translate="yes" xml:space="preserve">
          <source>The following example returns &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">В следующем примере возвращается &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31f6a40a3ae89d54d434b54adbad2740ade91bc9" translate="yes" xml:space="preserve">
          <source>The following example returns &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06a45e6f36f881a97a538d21281592a5f8ba252" translate="yes" xml:space="preserve">
          <source>The following example returns all prime numbers in the array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4b71ecc767d2d15324f41767df1acba8db96b8" translate="yes" xml:space="preserve">
          <source>The following example returns the index of an element in the array that is a prime number, or -1 if there is no prime number.</source>
          <target state="translated">В следующем примере возвращается индекс элемента в массиве,являющегося простым числом,или -1,если простое число отсутствует.</target>
        </trans-unit>
        <trans-unit id="e1fcf59259ff9369d86d16c1da62190398e9f9b0" translate="yes" xml:space="preserve">
          <source>The following example returns the index of the first element in the array that is a prime number, or &lt;code&gt;-1&lt;/code&gt; if there is no prime number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083a6a8c3e4bb9a9632eb9fe92d73307b122fa08" translate="yes" xml:space="preserve">
          <source>The following example returns the string &quot;ABC&quot;.</source>
          <target state="translated">Следующий пример возвращает строку &quot;ABC&quot;.</target>
        </trans-unit>
        <trans-unit id="82cdc405f088054aabe6122997be993169860e4c" translate="yes" xml:space="preserve">
          <source>The following example searches a string with 2 different regex objects to show a successful search (positive value) vs. an unsuccessful search (-1)</source>
          <target state="translated">Следующий пример ищет строку с 2 различными регекс-объектами,чтобы показать успешный поиск (положительное значение)в сравнении с неудачным поиском (-1)</target>
        </trans-unit>
        <trans-unit id="aaf3eb4f9f086aa6db911648687cea5cc758ee3d" translate="yes" xml:space="preserve">
          <source>The following example searches a string with two different regex objects to show a successful search (positive value) vs. an unsuccessful search (&lt;code&gt;-1&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7630dc749db4775b009b43ad2cba5bd2e12024" translate="yes" xml:space="preserve">
          <source>The following example sets &lt;code&gt;count&lt;/code&gt; to the number of occurrences of the letter &lt;code&gt;e&lt;/code&gt; in the string &lt;code&gt;str&lt;/code&gt;:</source>
          <target state="translated">В следующем примере &lt;code&gt;count&lt;/code&gt; устанавливается равным количеству вхождений буквы &lt;code&gt;e&lt;/code&gt; в строку &lt;code&gt;str&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="11e92c9c5fada2aa828677183258974748dd4cfa" translate="yes" xml:space="preserve">
          <source>The following example shortens the array &lt;code&gt;numbers&lt;/code&gt; to a length of 3 if the current length is greater than 3.</source>
          <target state="translated">В следующем примере &lt;code&gt;numbers&lt;/code&gt; массива сокращаются до 3, если текущая длина больше 3.</target>
        </trans-unit>
        <trans-unit id="716fdf3d5254acc41f4ed6f3a01cae908d494b0b" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; loop that has a &lt;code&gt;continue&lt;/code&gt; statement that executes when the value of &lt;code&gt;i&lt;/code&gt; is 3. Thus, &lt;code&gt;n&lt;/code&gt; takes on the values 1, 3, 7, and 12.</source>
          <target state="translated">В следующем примере показано , &lt;a href=&quot;while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt; цикл , который имеет по- &lt;code&gt;continue&lt;/code&gt; о том , что выполняется , когда значение &lt;code&gt;i&lt;/code&gt; равно 3. Таким образом, &lt;code&gt;n&lt;/code&gt; принимает значения 1, 3, 7 и 12.</target>
        </trans-unit>
        <trans-unit id="2005d00ce0209b5fceaa8ac912192339ee89a7e4" translate="yes" xml:space="preserve">
          <source>The following example shows a new global instance being created using the &lt;code&gt;WebAssembly.Global()&lt;/code&gt; constructor. It is being defined as a mutable &lt;code&gt;i32&lt;/code&gt; type, with a value of 0.</source>
          <target state="translated">В следующем примере показан новый глобальный экземпляр, создаваемый с помощью конструктора &lt;code&gt;WebAssembly.Global()&lt;/code&gt; . Он определяется как изменяемый тип &lt;code&gt;i32&lt;/code&gt; со значением 0.</target>
        </trans-unit>
        <trans-unit id="727fa2dc7c87295a2654df609e735dc343947cff" translate="yes" xml:space="preserve">
          <source>The following example shows a simple generator and an error that is thrown using the &lt;code&gt;throw&lt;/code&gt; method. An error can be caught by a &lt;a href=&quot;../../statements/try...catch&quot;&gt;&lt;code&gt;try...catch&lt;/code&gt;&lt;/a&gt; block as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7266a2391590ed65c478f38c97fa18c57a2cf6" translate="yes" xml:space="preserve">
          <source>The following example shows a simple generator and an error that is thrown using the &lt;code&gt;throw&lt;/code&gt; method. An error can be caught by a &lt;code&gt;&lt;a href=&quot;../../statements/try...catch&quot;&gt;try...catch&lt;/a&gt;&lt;/code&gt; block as usual.</source>
          <target state="translated">В следующем примере показан простой генератор и ошибка, возникающая с использованием метода &lt;code&gt;throw&lt;/code&gt; . Ошибка может быть обнаружена блоком &lt;code&gt;&lt;a href=&quot;../../statements/try...catch&quot;&gt;try...catch&lt;/a&gt;&lt;/code&gt; как обычно.</target>
        </trans-unit>
        <trans-unit id="1f7f361180b31b6042d618b49166807c6f929d75" translate="yes" xml:space="preserve">
          <source>The following example shows a simple generator and the &lt;code&gt;return&lt;/code&gt; method.</source>
          <target state="translated">В следующем примере показан простой генератор и метод &lt;code&gt;return&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b72df2105ef3ff7ff1bfba2b4454bda5b2038cff" translate="yes" xml:space="preserve">
          <source>The following example shows a simple generator and the object that the &lt;code&gt;next&lt;/code&gt; method returns:</source>
          <target state="translated">В следующем примере показан простой генератор и объект, который возвращает &lt;code&gt;next&lt;/code&gt; метод:</target>
        </trans-unit>
        <trans-unit id="d850c82a100dbc6d6a59799d003ca63c04585e27" translate="yes" xml:space="preserve">
          <source>The following example shows code where a &lt;code&gt;debugger&lt;/code&gt; statement has been inserted, to invoke a debugger (if one exists) when the function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc6be9816c449546ff2ea6de11e640bab27e489" translate="yes" xml:space="preserve">
          <source>The following example shows code where a debugger statement has been inserted, to invoke a debugger (if one exists) when the function is called.</source>
          <target state="translated">В следующем примере показан код,в который был вставлен отладочный оператор для вызова отладчика (если таковой существует)при вызове функции.</target>
        </trans-unit>
        <trans-unit id="38d40650a327908143a9507b756e781dad6e3669" translate="yes" xml:space="preserve">
          <source>The following example shows example usage of &lt;code&gt;Math.ceil()&lt;/code&gt;.</source>
          <target state="translated">В следующем примере показан пример использования &lt;code&gt;Math.ceil()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef01e5a18d9482066885e44fa1f5dc8211fee3ad" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a List formatter returning formatted parts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645b3479f15b39ee76c25d3c9b4c6e59b2b4c07b" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a List formatter using the English language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783f3fc7a632e64df7742e63f5c1cf2dbd15fcc1" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a relative time formatter returning formatted parts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15ce3ccacb0794a1e0cbf009ea58687e33512fe" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a relative time formatter using the English language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aef66a7fd07b717af62aec60881c68c4a467ffc" translate="yes" xml:space="preserve">
          <source>The following example shows how to iterate over the properties of an object without executing on inherited properties. Note that the &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop is already only iterating enumerable items, so one should not assume based on the lack of non-enumerable properties shown in the loop that &lt;code&gt;hasOwnProperty&lt;/code&gt; itself is confined strictly to enumerable items (as with &lt;a href=&quot;getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">В следующем примере показано, как перебирать свойства объекта без выполнения унаследованных свойств. Обратите внимание, что цикл &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; уже выполняет только итерацию перечисляемых элементов, поэтому не следует предполагать, что из-за отсутствия неперечислимых свойств, показанных в цикле, сам &lt;code&gt;hasOwnProperty&lt;/code&gt; ограничен строго перечисляемыми элементами (как в случае с &lt;a href=&quot;getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="05588cf5df11a1b0b917f7765e24afc5d0c27049" translate="yes" xml:space="preserve">
          <source>The following example shows how to modify constructor value of generic objects. Only &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;&quot;test&quot;&lt;/code&gt; will not be affected as they have read-only native constructors. This example shows that it is not always safe to rely on the &lt;code&gt;constructor&lt;/code&gt; property of an object.</source>
          <target state="translated">В следующем примере показано, как изменить значение конструктора универсальных объектов. Только &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;1&lt;/code&gt; и &lt;code&gt;&quot;test&quot;&lt;/code&gt; не будут затронуты, поскольку они имеют собственные конструкторы только для чтения. Этот пример показывает , что не всегда безопасно полагаться на &lt;code&gt;constructor&lt;/code&gt; свойства объекта.</target>
        </trans-unit>
        <trans-unit id="512794980e61d7b8e7fce733381b52be22b2f50f" translate="yes" xml:space="preserve">
          <source>The following example shows how to recompile a regular expression with a new pattern and a new flag.</source>
          <target state="translated">Следующий пример показывает,как перекомпилировать регулярное выражение с новым паттерном и новым флагом.</target>
        </trans-unit>
        <trans-unit id="b8b66bb707bee2222e5d1aba54a1b032b2321a74" translate="yes" xml:space="preserve">
          <source>The following example shows how to use a relative time formatter for the English language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2b53fd0c381f6602455a835cc7ce21bd9f543d" translate="yes" xml:space="preserve">
          <source>The following example shows one use case for the &lt;code&gt;finally&lt;/code&gt;-block. The code opens a file and then executes statements that use the file; the &lt;code&gt;finally&lt;/code&gt;-block makes sure the file always closes after it is used even if an exception was thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a9e7677db754327f388f87c25488c6eafb7c04" translate="yes" xml:space="preserve">
          <source>The following example shows the difference between a &lt;code&gt;for...of&lt;/code&gt; loop and a &lt;code&gt;for...in&lt;/code&gt; loop when used with an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В следующем примере показана разница между циклом &lt;code&gt;for...of&lt;/code&gt; циклом &lt;code&gt;for...in&lt;/code&gt; при использовании с &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb030f0bc0c064aa49218c4bc53dbe7177787ab2" translate="yes" xml:space="preserve">
          <source>The following example shows the minimum and maximum integer values that can be represented as &lt;code&gt;Number&lt;/code&gt; object (for details, refer to ECMAScript standard, chapter &lt;em&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type&quot;&gt;6.1.6 The Number Type&lt;/a&gt;&lt;/em&gt;):</source>
          <target state="translated">Следующий пример показывает минимальное и максимальное целые значения , которые могут быть представлены как &lt;code&gt;Number&lt;/code&gt; объекта (подробнее см стандарт ECMAScript, глава &lt;em&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type&quot;&gt;6.1.6 Номер Тип&lt;/a&gt;&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="79a5899f282772844bfdc39b15a2d76d1357f7c0" translate="yes" xml:space="preserve">
          <source>The following example shows the minimum and maximum integer values that can be represented as &lt;code&gt;Number&lt;/code&gt; object. (More details on this are described in the ECMAScript standard, chapter &lt;em&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type&quot;&gt;6.1.6 The Number Type&lt;/a&gt;.&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b668e0e307c5ee65cb2f062aacbf2cbff673850" translate="yes" xml:space="preserve">
          <source>The following example shows the use of &lt;code&gt;propertyIsEnumerable&lt;/code&gt; on objects and arrays:</source>
          <target state="translated">В следующем примере показано использование &lt;code&gt;propertyIsEnumerable&lt;/code&gt; для объектов и массивов:</target>
        </trans-unit>
        <trans-unit id="f585c8845f1eff70fb70f7c28ef793920b1cf083" translate="yes" xml:space="preserve">
          <source>The following example takes a string pattern and converts it into an array of objects.</source>
          <target state="translated">Следующий пример берет строковый шаблон и преобразует его в массив объектов.</target>
        </trans-unit>
        <trans-unit id="526ac138e4fc7f1b7bcc8fdaa130fb0ea5e63515" translate="yes" xml:space="preserve">
          <source>The following example tests an input string for a U.S. zip code. If the zip code uses an invalid format, the throw statement throws an exception by creating an object of type &lt;code&gt;ZipCodeFormatException&lt;/code&gt;.</source>
          <target state="translated">В следующем примере проверяется входная строка для почтового индекса США. Если в почтовом индексе используется недопустимый формат, инструкция throw вызывает исключение, создавая объект типа &lt;code&gt;ZipCodeFormatException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dc1382682a3dc481d70442f3a24f55d37812838" translate="yes" xml:space="preserve">
          <source>The following example tests whether all elements in the array are bigger than 10.</source>
          <target state="translated">Следующий пример проверяет,все ли элементы в массиве больше 10.</target>
        </trans-unit>
        <trans-unit id="013658f9ea00d8fe11ae283ad06c24b51bcc9655" translate="yes" xml:space="preserve">
          <source>The following example tests whether all elements in the typed array are bigger than 10.</source>
          <target state="translated">Следующий пример проверяет,все ли элементы в типизированном массиве больше 10.</target>
        </trans-unit>
        <trans-unit id="810860b8f4faa61dd02c1765fe41a001722d2b62" translate="yes" xml:space="preserve">
          <source>The following example tests whether any element in the array is bigger than 10.</source>
          <target state="translated">Следующий пример проверяет,не больше ли 10 элементов в массиве.</target>
        </trans-unit>
        <trans-unit id="5b1e373ef2933c1c4d588de3f2529dcb712e28b7" translate="yes" xml:space="preserve">
          <source>The following example tests whether any element in the typed array is bigger than 10.</source>
          <target state="translated">Следующий пример проверяет,не больше ли 10 элементов в типизированном массиве.</target>
        </trans-unit>
        <trans-unit id="44133647ac3e03eff2080839e68c70a985445297" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;a href=&quot;indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;lastIndexOf()&lt;/code&gt; to locate values in the string &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt;.</source>
          <target state="translated">В следующем примере используются &lt;a href=&quot;indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;lastIndexOf()&lt;/code&gt; для поиска значений в строке &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1ae8e3bcf29b717f3d084a3dbee7ee86f3a45f7" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;eval()&lt;/code&gt; to evaluate the string &lt;code&gt;str&lt;/code&gt;. This string consists of JavaScript statements that assigns &lt;code&gt;z&lt;/code&gt; a value of 42 if &lt;code&gt;x&lt;/code&gt; is five, and assigns 0 to &lt;code&gt;z&lt;/code&gt; otherwise. When the second statement is executed, &lt;code&gt;eval()&lt;/code&gt; will cause these statements to be performed, and it will also evaluate the set of statements and return the value that is assigned to &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8706b2456fc38fbc87d8e44f1573948714487850" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;eval()&lt;/code&gt; to evaluate the string &lt;code&gt;str&lt;/code&gt;. This string consists of JavaScript statements that open an alert dialog box and assign &lt;code&gt;z&lt;/code&gt; a value of 42 if &lt;code&gt;x&lt;/code&gt; is five, and assigns 0 to &lt;code&gt;z&lt;/code&gt; otherwise. When the second statement is executed, &lt;code&gt;eval()&lt;/code&gt; will cause these statements to be performed, and it will also evaluate the set of statements and return the value that is assigned to &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">В следующем примере &lt;code&gt;eval()&lt;/code&gt; для оценки строки &lt;code&gt;str&lt;/code&gt; . Эта строка состоит из операторов JavaScript, которые открывают диалоговое окно предупреждения и присваивают &lt;code&gt;z&lt;/code&gt; значение 42, если &lt;code&gt;x&lt;/code&gt; равно пяти, и присваивают 0 для &lt;code&gt;z&lt;/code&gt; в противном случае. Когда выполняется второй оператор, &lt;code&gt;eval()&lt;/code&gt; вызывает выполнение этих операторов, а также оценивает набор операторов и возвращает значение, присвоенное &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83750d81b6626f0f19b9c906f35d785ebdddf04c" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;filter()&lt;/code&gt; to create a filtered array that has all elements with values less than 10 removed.</source>
          <target state="translated">В следующем примере &lt;code&gt;filter()&lt;/code&gt; для создания фильтрованного массива, из которого удалены все элементы со значениями менее 10.</target>
        </trans-unit>
        <trans-unit id="ac871f7b929b9a65b972498979af9ddeef82d1a2" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;filter()&lt;/code&gt; to create a filtered array that has all elements with values less than &lt;code&gt;10&lt;/code&gt; removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca07736cd4beef1170a4d86fc01b7db4d3548e8" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;filter()&lt;/code&gt; to create a filtered json of all elements with non-zero, numeric &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">В следующем примере &lt;code&gt;filter()&lt;/code&gt; для создания отфильтрованного json всех элементов с ненулевым числовым &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c51b4796506339dc0c87c3cab6544c7dba551328" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;filter()&lt;/code&gt; to create a filtered typed array that has all elements with values less than 10 removed.</source>
          <target state="translated">В следующем примере &lt;code&gt;filter()&lt;/code&gt; для создания фильтрованного типизированного массива, в котором удалены все элементы со значениями менее 10.</target>
        </trans-unit>
        <trans-unit id="d105cc6b7d41842946081721deaa55136ba97875" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;indexOf()&lt;/code&gt; to locate values in an array.</source>
          <target state="translated">В следующем примере &lt;code&gt;indexOf()&lt;/code&gt; для поиска значений в массиве.</target>
        </trans-unit>
        <trans-unit id="33b7e82a7ae088a9da2094234cc0c9414479160f" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;indexOf()&lt;/code&gt; to locate values in the string &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt;.</source>
          <target state="translated">В следующем примере &lt;code&gt;indexOf()&lt;/code&gt; для поиска значений в строке &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3563a82dd6d10528fb8c409c142a55fe8a3d0dc1" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;lastIndexOf&lt;/code&gt; to find all the indices of an element in a given array, using &lt;a href=&quot;push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; to add them to another array as they are found.</source>
          <target state="translated">В следующем примере &lt;code&gt;lastIndexOf&lt;/code&gt; используется для поиска всех индексов элемента в данном массиве, используя &lt;a href=&quot;push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; для добавления их в другой массив по мере их нахождения.</target>
        </trans-unit>
        <trans-unit id="fa55c84d0b64c6544714e03305cd92ceaddfdd06" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;lastIndexOf&lt;/code&gt; to locate values in an array.</source>
          <target state="translated">В следующем примере &lt;code&gt;lastIndexOf&lt;/code&gt; используется для поиска значений в массиве.</target>
        </trans-unit>
        <trans-unit id="408ea0e67fa187a40dc0544085fe1a65911bf6bd" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;slice()&lt;/code&gt; to create a new string.</source>
          <target state="translated">В следующем примере &lt;code&gt;slice()&lt;/code&gt; для создания новой строки.</target>
        </trans-unit>
        <trans-unit id="c2149c5a632f0d09bdbded683bcc74118d5045fd" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;slice()&lt;/code&gt; with negative indexes.</source>
          <target state="translated">В следующем примере &lt;code&gt;slice()&lt;/code&gt; с отрицательными индексами.</target>
        </trans-unit>
        <trans-unit id="813e7509ea2b05dc5c2035b3fc62aeb74055342a" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;substring()&lt;/code&gt; to display characters from the string &lt;code&gt;'Mozilla'&lt;/code&gt;:</source>
          <target state="translated">В следующем примере &lt;code&gt;substring()&lt;/code&gt; для отображения символов из строки &lt;code&gt;'Mozilla'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ae0dc5a257ac00973dde41fe43965d487b04c877" translate="yes" xml:space="preserve">
          <source>The following example uses string methods to change the formatting of a string:</source>
          <target state="translated">В следующем примере используются методы строк для изменения форматирования строки:</target>
        </trans-unit>
        <trans-unit id="3a70f0bb2decb7901197bd26b68fdae1b9564471" translate="yes" xml:space="preserve">
          <source>The following example uses string methods to change the size of a string:</source>
          <target state="translated">В следующем примере используются методы строк для изменения размера строки:</target>
        </trans-unit>
        <trans-unit id="4180e0d970ae019777a0641952c4a65ecc2fca9e" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;a href=&quot;sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;sup()&lt;/code&gt; methods to format a string:</source>
          <target state="translated">В следующем примере для форматирования строки используются методы &lt;a href=&quot;sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;sup()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ae58843fab413870a1d38b37fcce84796d875d3e" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;Number&lt;/code&gt; object's properties to assign values to several numeric variables:</source>
          <target state="translated">В следующем примере свойства объекта &lt;code&gt;Number&lt;/code&gt; используются для присвоения значений нескольким числовым переменным:</target>
        </trans-unit>
        <trans-unit id="e553a46648eb3a34731f83c0bd5fb843b999f45a" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;fixed&lt;/code&gt; method to change the formatting of a string:</source>
          <target state="translated">В следующем примере &lt;code&gt;fixed&lt;/code&gt; метод используется для изменения форматирования строки:</target>
        </trans-unit>
        <trans-unit id="0ba649a48b369ce41e56cac9e631a466d1f3d2e6" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;fontcolor()&lt;/code&gt; method to change the color of a string by producing a string with the HTML &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">В следующем примере метод &lt;code&gt;fontcolor()&lt;/code&gt; используется для изменения цвета строки путем создания строки с тегом HTML &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2741b5548ce2b91dc9b83dc11887f2061a4fa0d7" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;sub()&lt;/code&gt; and &lt;a href=&quot;sup&quot;&gt;&lt;code&gt;sup()&lt;/code&gt;&lt;/a&gt; methods to format a string:</source>
          <target state="translated">В следующем примере для форматирования строки используются методы &lt;code&gt;sub()&lt;/code&gt; и &lt;a href=&quot;sup&quot;&gt; &lt;code&gt;sup()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d01d6d761c44f4ec20ae9515f311bfeec40bd9c7" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;substring()&lt;/code&gt; method and &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property to extract the last characters of a particular string. This method may be easier to remember, given that you don't need to know the starting and ending indices as you would in the above examples.</source>
          <target state="translated">В следующем примере используется метод &lt;code&gt;substring()&lt;/code&gt; и свойство &lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; для извлечения последних символов определенной строки. Этот метод может быть проще запомнить, поскольку вам не нужно знать начальный и конечный индексы, как в приведенных выше примерах.</target>
        </trans-unit>
        <trans-unit id="8cef8be6def4d53d9db920de695a3beb3735c5ae" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;newString&lt;/code&gt; to &lt;code&gt;'abc - 12345 - #$*%'&lt;/code&gt;:</source>
          <target state="translated">Следующий пример устанавливает &lt;code&gt;newString&lt;/code&gt; к &lt;code&gt;'abc - 12345 - #$*%'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="db073cd2d7888217720fedbda911e6c1f1f841cc" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;-15&lt;/code&gt;:</source>
          <target state="translated">Все следующие примеры возвращают &lt;code&gt;-15&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="34a1e33a7b6601f1111cf496f1432579381b9760" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;15&lt;/code&gt;:</source>
          <target state="translated">Все следующие примеры возвращают &lt;code&gt;15&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0c67575a7bbd9542216d33d9903fcb058d319fe1" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;3.14&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e06406230bdfd0929a994515fa0a52280b98d7" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f67eae0e84ccc42894c490679176dfdcad7be93" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;4&lt;/code&gt;:</source>
          <target state="translated">Все следующие примеры возвращают &lt;code&gt;4&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5ff9122e5995efca958ff02b74f1566414c905dd" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="translated">Все следующие примеры возвращают &lt;code&gt;NaN&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="711caf5a07449b66228282fa47346718e569e6c4" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;strong&gt;3.14&lt;/strong&gt;</source>
          <target state="translated">Все следующие примеры возвращают &lt;strong&gt;3.14&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10a5e7d6004c86d8ed05d5600d52cd94a7fa93cf" translate="yes" xml:space="preserve">
          <source>The following examples both return &lt;code&gt;900719925474099300&lt;/code&gt;, losing precision as the integer is too large to be represented as a float:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac5b2ffb028b3baddc1190b4432d1d1d9c12746" translate="yes" xml:space="preserve">
          <source>The following examples show how to determine the elapsed time between two JavaScript dates in milliseconds.</source>
          <target state="translated">Следующие примеры показывают,как определить прошедшее время между двумя датами JavaScript в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="d708ec64f0c9fb52e98615f0755e414a69b3bfde" translate="yes" xml:space="preserve">
          <source>The following examples show several ways to create JavaScript dates:</source>
          <target state="translated">Следующие примеры показывают несколько способов создания дат на JavaScript:</target>
        </trans-unit>
        <trans-unit id="ef8caf2cb455686379e6980d62ad84f795a1d598" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the &lt;code&gt;in&lt;/code&gt; operator.</source>
          <target state="translated">В следующих примерах показаны некоторые варианты использования оператора &lt;code&gt;in&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06307bf40766a28da868d2d0d96f0e0f81dca1e3" translate="yes" xml:space="preserve">
          <source>The following examples show that non-existent and deleted elements are visited and that the value passed to the callback is their value when visited.</source>
          <target state="translated">Следующие примеры показывают,что посещаются несуществующие и удаленные элементы,и что значение,передаваемое обратному вызову,является их значением при посещении.</target>
        </trans-unit>
        <trans-unit id="5f82acbcf60bd7e2c8c6b78cada8435dc6768ce3" translate="yes" xml:space="preserve">
          <source>The following examples show that nonexistent and deleted elements &lt;em&gt;are&lt;/em&gt; visited, and that the value passed to the callback is their value when visited:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ada68584028ec8e2b96787ed7c983c4d955b5c8" translate="yes" xml:space="preserve">
          <source>The following examples store &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;o&lt;/code&gt;:</source>
          <target state="translated">В следующих примерах &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; объекты хранятся в &lt;code&gt;o&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="008bd3049d296db93026852d2849ec7d78fd3f90" translate="yes" xml:space="preserve">
          <source>The following examples store an empty &lt;code&gt;Object&lt;/code&gt; object in &lt;code&gt;o&lt;/code&gt;:</source>
          <target state="translated">Следующие примеры хранят пустой &lt;code&gt;Object&lt;/code&gt; в &lt;code&gt;o&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8fef4b50028cdb88086c17d2aee9b09481826204" translate="yes" xml:space="preserve">
          <source>The following examples tests the behavior of the &lt;code&gt;filter&lt;/code&gt; method when the array is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caabcbd43a7a1f8ed462cc01fbd31f1ed5e2843e" translate="yes" xml:space="preserve">
          <source>The following examples tests the behaviour of the &lt;code&gt;every&lt;/code&gt; method when the array is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cecad6c167b9725ef30d3a5bc50980cde3ab0336" translate="yes" xml:space="preserve">
          <source>The following expressions might seem equivalent, but they are not, because the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator is executed before the &lt;code&gt;||&lt;/code&gt; operator (see &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff6dca67484421184735163b0fe041a33f46347" translate="yes" xml:space="preserve">
          <source>The following extends Strings to include the &lt;code&gt;codePointAt()&lt;/code&gt; function as specified in ECMAScript 2015 for browsers not supporting it natively.</source>
          <target state="translated">Следующее &lt;code&gt;codePointAt()&lt;/code&gt; Strings включает функцию codePointAt (), как указано в ECMAScript 2015, для браузеров, не поддерживающих ее изначально.</target>
        </trans-unit>
        <trans-unit id="33149eda90c352e457bb8250c4d75e7b01e69dc2" translate="yes" xml:space="preserve">
          <source>The following extends Strings to include the &lt;code&gt;codePointAt()&lt;/code&gt; function as specified in ECMAScript 2015 for browsers without native support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8a67fad53b0993639c1045b4e85fc361e708e3" translate="yes" xml:space="preserve">
          <source>The following function definition pairs are legal and equivalent to each other. Trailing commas don't affect the &lt;code&gt;length&lt;/code&gt; property of function declarations or their &lt;code&gt;arguments&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609bc9cce458f2a52665bae5b65b88626e11c48b" translate="yes" xml:space="preserve">
          <source>The following function has a &lt;code&gt;break&lt;/code&gt; statement that terminates the &lt;a href=&quot;while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; loop when &lt;code&gt;i&lt;/code&gt; is 3, and then returns the value 3 * &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Следующая функция имеет &lt;code&gt;break&lt;/code&gt; утверждение , что прерывает &lt;a href=&quot;while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt; цикл , когда &lt;code&gt;i&lt;/code&gt; равен 3, а затем возвращает значение 3 * &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="caa4bf05dc819f2ed88500d41f908336b1dcdfb1" translate="yes" xml:space="preserve">
          <source>The following function illustrates the use of &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt;: the inherited properties are not displayed.</source>
          <target state="translated">Следующая функция иллюстрирует использование &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt; &lt;code&gt;hasOwnProperty()&lt;/code&gt; &lt;/a&gt; : унаследованные свойства не отображаются.</target>
        </trans-unit>
        <trans-unit id="c1b09a24b248d657d89a9a38abf985e4480dadfb" translate="yes" xml:space="preserve">
          <source>The following function invocation pairs are legal and equivalent to each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa92ee05403e2462ea327819008ce7363daad6a8" translate="yes" xml:space="preserve">
          <source>The following function returns 1 over the square root of 2:</source>
          <target state="translated">Следующая функция возвращает 1 над квадратным корнем 2:</target>
        </trans-unit>
        <trans-unit id="931ac3d73d87ac19897a0087ce63b1954cf0539d" translate="yes" xml:space="preserve">
          <source>The following function returns a string containing the formatted representation of a number padded with leading zeros.</source>
          <target state="translated">Следующая функция возвращает строку,содержащую отформатированное представление числа,дополненное ведущими нулями.</target>
        </trans-unit>
        <trans-unit id="77e731f07946e10af167dd8396531fa4d99b8a73" translate="yes" xml:space="preserve">
          <source>The following function returns e:</source>
          <target state="translated">Следующая функция возвращает e:</target>
        </trans-unit>
        <trans-unit id="0d438216dab9bca6470fa8564949eab43f0f4a5f" translate="yes" xml:space="preserve">
          <source>The following function returns the base 10 logarithm of e:</source>
          <target state="translated">Следующая функция возвращает базовый логарифм 10 e:</target>
        </trans-unit>
        <trans-unit id="2dd0c0a9fa8c406a7feff85a2ce117a1b3b439f6" translate="yes" xml:space="preserve">
          <source>The following function returns the base 2 logarithm of e:</source>
          <target state="translated">Следующая функция возвращает базовый логарифм 2 e:</target>
        </trans-unit>
        <trans-unit id="c5b9eb8e4062a89f78e54edf94221d43ec5068cd" translate="yes" xml:space="preserve">
          <source>The following function returns the logarithm of &lt;code&gt;y&lt;/code&gt; with base &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; (ie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adfb09a340eeb80ec88a7e373cf9d30a06fd7bc" translate="yes" xml:space="preserve">
          <source>The following function returns the logarithm of &lt;code&gt;y&lt;/code&gt; with base &lt;code&gt;x&lt;/code&gt; (ie.</source>
          <target state="translated">Следующая функция возвращает логарифм &lt;code&gt;y&lt;/code&gt; с основанием &lt;code&gt;x&lt;/code&gt; (т.е.</target>
        </trans-unit>
        <trans-unit id="a25bfd8e218e8f88e0778acd6e8859d846a35ea0" translate="yes" xml:space="preserve">
          <source>The following function returns the natural log of 10:</source>
          <target state="translated">Следующая функция возвращает естественный журнал 10:</target>
        </trans-unit>
        <trans-unit id="3c3ec30f04bc1a3998ebf4f0dc81cd0c2c01b785" translate="yes" xml:space="preserve">
          <source>The following function returns the natural log of 2:</source>
          <target state="translated">Следующая функция возвращает естественный журнал 2:</target>
        </trans-unit>
        <trans-unit id="26d5ec963fd7f5f6207a9e3b41b9a2e3ab8e9042" translate="yes" xml:space="preserve">
          <source>The following function returns the square root of 2:</source>
          <target state="translated">Следующая функция возвращает квадратный корень 2:</target>
        </trans-unit>
        <trans-unit id="412a99fabb8e3c670dc34d566914e0d7fea0ae81" translate="yes" xml:space="preserve">
          <source>The following function uses &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; to get the maximum of an array. &lt;code&gt;getMaxOfArray([1, 2, 3])&lt;/code&gt; is equivalent to &lt;code&gt;Math.max(1, 2, 3)&lt;/code&gt;, but you can use &lt;code&gt;getMaxOfArray()&lt;/code&gt; on programmatically constructed arrays. This should only be used for arrays with relatively few elements.</source>
          <target state="translated">Следующая функция использует &lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt; для получения максимума массива. &lt;code&gt;getMaxOfArray([1, 2, 3])&lt;/code&gt; эквивалентен &lt;code&gt;Math.max(1, 2, 3)&lt;/code&gt; , но вы можете использовать &lt;code&gt;getMaxOfArray()&lt;/code&gt; для программно построенных массивов. Это следует использовать только для массивов с относительно небольшим количеством элементов.</target>
        </trans-unit>
        <trans-unit id="ccb0be88cc25761bcd560b56f507413ede58db69" translate="yes" xml:space="preserve">
          <source>The following function uses &lt;code&gt;Math.PI&lt;/code&gt; to calculate the circumference of a circle with a passed radius.</source>
          <target state="translated">Следующая функция использует &lt;code&gt;Math.PI&lt;/code&gt; для вычисления длины окружности с переданным радиусом.</target>
        </trans-unit>
        <trans-unit id="061834eb03b809e146925d275495f661a7f57d90" translate="yes" xml:space="preserve">
          <source>The following function will throw a &lt;code&gt;ReferenceError&lt;/code&gt; when invoked, because the default parameter value does not have access to the child scope of the function body:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ef984e932abcf03110d58a2bded6764a8dfd40" translate="yes" xml:space="preserve">
          <source>The following is a shim to provide support to non-supporting browsers:</source>
          <target state="translated">Ниже приведена шайба для обеспечения поддержки не поддерживающих браузеров:</target>
        </trans-unit>
        <trans-unit id="6fa4b8bb0d12d866c3c76c1acb8bc953706c4cb3" translate="yes" xml:space="preserve">
          <source>The following is true:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a991e5bdce827eedfb9fbfb4632dfdf03a9f3cf3" translate="yes" xml:space="preserve">
          <source>The following operation involving &lt;strong&gt;booleans&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac43cce561cd051b6c69e2663f9ab740f90b9b74" translate="yes" xml:space="preserve">
          <source>The following operators may be used with &lt;code&gt;BigInt&lt;/code&gt;s (or object-wrapped &lt;code&gt;BigInt&lt;/code&gt;s): &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;**&lt;/code&gt;, &lt;code&gt;%&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2165376579c54bb10df726975e561c721af33c0" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;getPrototypeOf()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e15c332b22241976e1db8d7e980cc1baf421b50" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;getPrototypeOf&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующий параметр передается методу &lt;code&gt;getPrototypeOf&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="168eab17f17ebe158b3f02ee3bee4f987728b237" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;isExtensible()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12eb00305c6476161a442726f9a073d4e04c0503" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;isExtensible&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующий параметр передается методу &lt;code&gt;isExtensible&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="4b904f14e78a92421d3de1b1b0bc10cd0d547bde" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;ownKeys()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f50a67a4cb80545dd6f4c711e4a32fe5d645118" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;ownKeys&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующий параметр передается методу &lt;code&gt;ownKeys&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="c9864e259a43790c45cb6b1c04de1719cbe71d65" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;preventExtensions()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1f873b3102e21ab765ec8cf3fc4c3058971a48" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;preventExtensions&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующий параметр передается методу &lt;code&gt;preventExtensions&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="adbe3bdae03535ba2d0f6073dcbbbe1b7521658a" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to &lt;code&gt;has()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f479504b2ba267fee6c0c8ed8019bd2b17c573e9" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to &lt;code&gt;has&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">В метод &lt;code&gt;has&lt;/code&gt; передаются следующие параметры . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="de4d65ad667114237ce36c76ebfae47c263524cd" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;apply()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa43a582adf98ab045cf8c54e0843d43ab6b8373" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;apply&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;apply&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="84095792665333ba0dd339a191dbbb3e35491083" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;construct()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab797515f7bfb7482091c203b75ba0da8332710" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;construct&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">В метод &lt;code&gt;construct&lt;/code&gt; передаются следующие параметры . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="98442f842ff92893cd5a88cbfc2a2cf1cf27147d" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;defineProperty()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7420398c074e030c2b2d0b274113b31eb5b2d2" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;defineProperty&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;defineProperty&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="bd9d01d8112ffdb77eed47b03b769d935d0d2d54" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;deleteProperty()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c5bf5c6d27943370526bc5d8f400e52212e0fd" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;deleteProperty&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;deleteProperty&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="c0973411126a2c8f1404e334950ce0168260b91d" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;get()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5425b4c0210ec636acf5c70a1fd4a34950ab62" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;get&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">В метод &lt;code&gt;get&lt;/code&gt; передаются следующие параметры . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="e10b2fa1f0ffe6da808a9cc985454803f6e0c0de" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;getOwnPropertyDescriptor()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c63ab197516e310b74aa729d3c01403ed918f7" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="168f6d48633e19df026f201b1abe31491d8d390d" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;set()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e64ab36836bcc7d94cada04ab31978e10fc95d" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;set&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">В метод &lt;code&gt;set&lt;/code&gt; передаются следующие параметры . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="dedc2ba86d206167f958c9980b1a71500b875aec" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;setPrototypeOf()&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc1a72fc13e9b21ee388b431e079b9391cc0a59" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;setPrototypeOf&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;setPrototypeOf&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="937e588a79f7bab77d0e4e260afa82cace945198" translate="yes" xml:space="preserve">
          <source>The following polyfill is the most efficient.</source>
          <target state="translated">Следующий полипропилен является наиболее эффективным.</target>
        </trans-unit>
        <trans-unit id="d7bf164e0c77563f43e44def0b05325de3f4d410" translate="yes" xml:space="preserve">
          <source>The following properties describe the date-time components to use in formatted output, and their desired representations. Implementations are required to support at least the following subsets:</source>
          <target state="translated">Следующие свойства описывают компоненты дата-время для использования в отформатированном выводе,а также их желаемые представления.Для поддержки,по крайней мере,следующих подмножеств,требуется внедрение:</target>
        </trans-unit>
        <trans-unit id="c41695df01ac9ec4823cf03dcadef70433c3ff69" translate="yes" xml:space="preserve">
          <source>The following properties fall into two groups: &lt;code&gt;minimumIntegerDigits&lt;/code&gt;, &lt;code&gt;minimumFractionDigits&lt;/code&gt;, and &lt;code&gt;maximumFractionDigits&lt;/code&gt; in one group, &lt;code&gt;minimumSignificantDigits&lt;/code&gt; and &lt;code&gt;maximumSignificantDigits&lt;/code&gt; in the other. If at least one property from the second group is defined, then the first group is ignored.</source>
          <target state="translated">Следующие свойства делятся на две группы: &lt;code&gt;minimumIntegerDigits&lt;/code&gt; , &lt;code&gt;minimumFractionDigits&lt;/code&gt; и &lt;code&gt;maximumFractionDigits&lt;/code&gt; в одной группе, &lt;code&gt;minimumSignificantDigits&lt;/code&gt; и &lt;code&gt;maximumSignificantDigits&lt;/code&gt; в другой. Если определено хотя бы одно свойство из второй группы, то первая группа игнорируется.</target>
        </trans-unit>
        <trans-unit id="8151545a55b4403615db64103afa64686625755e" translate="yes" xml:space="preserve">
          <source>The following provides a means of ensuring that going through a string loop always provides a whole character, even if the string contains characters that are not in the Basic Multi-lingual Plane.</source>
          <target state="translated">Ниже приведено обеспечение того,что проходя через цикл строки,всегда можно получить целый символ,даже если строка содержит символы,которых нет в базовой мультиязычной плоскости.</target>
        </trans-unit>
        <trans-unit id="0058b3bc2f02a4e20655650055711d4f54275aca" translate="yes" xml:space="preserve">
          <source>The following registers the target object referenced by &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt;, passing in another object as the held value, and not passing in any unregistration token (which means &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; can't be unregistered):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4862a7244a7a37394fa2fc5e4b0df8be02a4c6b" translate="yes" xml:space="preserve">
          <source>The following registers the target object referenced by &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt;, passing in the held value &lt;code&gt;&quot;some value&quot;&lt;/code&gt; and passing the target object itself as the unregistration token:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12fd1be813759e3abb66c9468accaac214413c2" translate="yes" xml:space="preserve">
          <source>The following return statements all break the function execution:</source>
          <target state="translated">Все приведенные ниже возвратные сообщения нарушают выполнение функции:</target>
        </trans-unit>
        <trans-unit id="f5f13e29076e638f41dab991b29c38412e7787fe" translate="yes" xml:space="preserve">
          <source>The following script switches the words in the string. For the replacement text, the script uses &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges&quot;&gt;capturing groups&lt;/a&gt; and the &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; replacement patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccbd0bc8090028acdf0c4af34c15e6b0660f4fc" translate="yes" xml:space="preserve">
          <source>The following script switches the words in the string. For the replacement text, the script uses the &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; replacement patterns.</source>
          <target state="translated">Следующий скрипт переключает слова в строке. Для текста замены сценарий использует шаблоны замены &lt;code&gt;$1&lt;/code&gt; и &lt;code&gt;$2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="47d3cc1fc150fe74ceb90b083848fb986cd2c987" translate="yes" xml:space="preserve">
          <source>The following script uses the &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instance to match a name in the format &lt;em&gt;first last&lt;/em&gt; and output it in the format &lt;em&gt;last, first&lt;/em&gt;. In the replacement text, the script uses &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; to indicate the results of the corresponding matching parentheses in the regular expression pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743ac89ab1b2ca9932b0dd8ebbba282b86ac2700" translate="yes" xml:space="preserve">
          <source>The following script uses the &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instance to match a name in the format &lt;em&gt;first last&lt;/em&gt; and output it in the format &lt;em&gt;last, first&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e53b869cfd8a1e72141eb6dd27f0fefc4c4247" translate="yes" xml:space="preserve">
          <source>The following script uses the &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instance to match a name in the format &lt;em&gt;first last&lt;/em&gt; and output it in the format &lt;em&gt;last, first&lt;/em&gt;. In the replacement text, the script uses &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; to indicate the results of the corresponding matching parentheses in the regular expression pattern.</source>
          <target state="translated">Следующий скрипт использует &lt;a href=&quot;string/replace&quot;&gt; &lt;code&gt;replace()&lt;/code&gt; &lt;/a&gt; метода &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; экземпляра должны совпадать с именем в формате &lt;em&gt;первые в прошлом&lt;/em&gt; и вывод его в формате &lt;em&gt;наконец, первым&lt;/em&gt; . В тексте замены сценарий использует &lt;code&gt;$1&lt;/code&gt; и &lt;code&gt;$2&lt;/code&gt; для обозначения результатов соответствующих совпадающих круглых скобок в шаблоне регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="5f3af4b10420cc638ddb1ac0f4baa715c3c7acde" translate="yes" xml:space="preserve">
          <source>The following script uses the &lt;a href=&quot;test&quot;&gt;&lt;code&gt;test()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; instance to grab a number in a generic string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e253082ec00603de24a49b6d772894def1dae7a" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;CompileError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">Следующий фрагмент &lt;code&gt;CompileError&lt;/code&gt; создает новый экземпляр CompileError и записывает сведения о нем в консоль:</target>
        </trans-unit>
        <trans-unit id="17a2bebde57b4cb514bc78c904588f7cea008cb6" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;LinkError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">Следующий фрагмент &lt;code&gt;LinkError&lt;/code&gt; создает новый экземпляр LinkError и записывает его данные в консоль:</target>
        </trans-unit>
        <trans-unit id="85be124bb9c01dcf7e77b8d2221144dae9cd2243" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;RuntimeError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">Следующий фрагмент &lt;code&gt;RuntimeError&lt;/code&gt; создает новый экземпляр RuntimeError и записывает его данные в консоль:</target>
        </trans-unit>
        <trans-unit id="aacd224c0453ffca49e10cdd635cd96ecb5da5b4" translate="yes" xml:space="preserve">
          <source>The following snippet gives a simple example:</source>
          <target state="translated">Следующий отрывок дает простой пример:</target>
        </trans-unit>
        <trans-unit id="ec30df8c04565398d5637d415038b1acc414b4c6" translate="yes" xml:space="preserve">
          <source>The following snippet iterates over an object's properties, calculating their sum:</source>
          <target state="translated">Следующий фрагмент итератует над свойствами объекта,вычисляя их сумму:</target>
        </trans-unit>
        <trans-unit id="2afcc2c0b447fea8186479457c7efcba60ca15c4" translate="yes" xml:space="preserve">
          <source>The following statement creates a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object with the arguments treated as UTC instead of local:</source>
          <target state="translated">Следующий оператор создает объект &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; с аргументами, рассматриваемыми как UTC вместо локальных:</target>
        </trans-unit>
        <trans-unit id="fe2843b8cc5971e75ecc8c346caa1d4aade94543" translate="yes" xml:space="preserve">
          <source>The following statements call the padZeros function.</source>
          <target state="translated">Следующие утверждения вызывают функцию padZeros.</target>
        </trans-unit>
        <trans-unit id="0438afddea1b305aee1bf6561c3be0974673f1f8" translate="yes" xml:space="preserve">
          <source>The following syntax does not export a default export from the imported module:</source>
          <target state="translated">Следующий синтаксис не экспортирует экспорт по умолчанию из импортируемого модуля:</target>
        </trans-unit>
        <trans-unit id="2b1a0146ea48dec637db00e6048baec18b421ef1" translate="yes" xml:space="preserve">
          <source>The following syntax with the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9158f4b1519f530409f2abee6e30bd14b500ade1" translate="yes" xml:space="preserve">
          <source>The following syntax with the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Следующий синтаксис с оператором &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; вызовет &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d93d4de577b5f2425afae26013b10c61f38724e8" translate="yes" xml:space="preserve">
          <source>The following table is ordered from highest (20) to lowest (1) precedence.</source>
          <target state="translated">Следующая таблица расположена в порядке убывания от наибольшей (20)до наименьшей (1)старшинства.</target>
        </trans-unit>
        <trans-unit id="7e8baa3183748ed8f70e1d1a358edcd710d1b98e" translate="yes" xml:space="preserve">
          <source>The following table is ordered from highest (21) to lowest (1) precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a838c16fe9b9e9b20ec27b593c04b0821ea8baff" translate="yes" xml:space="preserve">
          <source>The following table provides a daily implementation status for new features that has not yet reached cross-browser stability. The data is generated by running the relevant feature tests in &lt;a href=&quot;https://github.com/tc39/test262&quot;&gt;Test262&lt;/a&gt;, the standard test suite of JavaScript, in the nightly build, or latest release of each browser's JavaScript engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992afb716f3ad4a892ae58e40a27753dee586eb7" translate="yes" xml:space="preserve">
          <source>The following table provides a daily implementation status for this feature because this feature has not yet reached cross-browser stability. The data is generated by running the relevant feature tests in &lt;a href=&quot;https://github.com/tc39/test262&quot;&gt;Test262&lt;/a&gt;, the standard test suite of JavaScript, in the nightly build, or the latest release of each browser's JavaScript engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9657752ef9e7009f8dcd490e5697024aa2425102" translate="yes" xml:space="preserve">
          <source>The following table provides a daily implementation status for this feature, because this feature has not yet reached cross-browser stability. The data is generated by running the relevant feature tests in &lt;a href=&quot;https://github.com/tc39/test262&quot;&gt;Test262&lt;/a&gt;, the standard test suite of JavaScript, in the nightly build, or latest release of each browser's JavaScript engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4844a753006c31a8bf5c5f7bf55bc1e379707d8" translate="yes" xml:space="preserve">
          <source>The following table shows the results for this script:</source>
          <target state="translated">В следующей таблице приведены результаты для этого скрипта:</target>
        </trans-unit>
        <trans-unit id="c85c017993b5e507c59172ead41a6b6e3c0b9455" translate="yes" xml:space="preserve">
          <source>The following table summarizes JavaScript's bitwise operators:</source>
          <target state="translated">В следующей таблице приведены битовые операторы JavaScript:</target>
        </trans-unit>
        <trans-unit id="5ac8fabfc5529ca28984a3d751a601da81f5fc87" translate="yes" xml:space="preserve">
          <source>The following table summarizes the possible return values of &lt;code&gt;typeof&lt;/code&gt;. For more information about types and primitives, see also the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScript data structure&lt;/a&gt; page.</source>
          <target state="translated">В следующей таблице приведены возможные возвращаемые значения &lt;code&gt;typeof&lt;/code&gt; . Дополнительные сведения о типах и примитивах см. Также на странице &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;структуры данных JavaScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63f5e3ac538b2874e6dfa60bc002f4adfb4b1416" translate="yes" xml:space="preserve">
          <source>The following three expressions create the same regular expression object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe06a95037bfc884953f2190dec8c177417c9b75" translate="yes" xml:space="preserve">
          <source>The following three expressions create the same regular expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d291780671c706d14403b4280496b1c4c62a91d" translate="yes" xml:space="preserve">
          <source>The following works because NaN is the only value in JavaScript which is not equal to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79b67a698098b87e6657a6f4fb9b62eab007283" translate="yes" xml:space="preserve">
          <source>The following works because NaN is the only value in javascript which is not equal to itself.</source>
          <target state="translated">Следующее работает,потому что NaN-единственное значение в javascript,которое не равно самому себе.</target>
        </trans-unit>
        <trans-unit id="d269af0c76f97a031495ac252672eba2a214b9e6" translate="yes" xml:space="preserve">
          <source>The for-of iteration is always the first component. Multiple for-of iterations or if statements are allowed.</source>
          <target state="translated">Итерация всегда является первым компонентом.Множественные форы итераций или если разрешены утверждения.</target>
        </trans-unit>
        <trans-unit id="c7d42cd2807709742cac1dab07e7e6429265eba9" translate="yes" xml:space="preserve">
          <source>The for...in loop &lt;a href=&quot;../statements/for...in#Array_iteration_and_for...in&quot;&gt;shouldn't be used for Array iteration&lt;/a&gt;. Did you intend to use a &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; loop instead of a &lt;code&gt;for-in&lt;/code&gt; loop to iterate an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;? The &lt;code&gt;for&lt;/code&gt; loop allows you to set an initializer then as well:</source>
          <target state="translated">Цикл for ... in &lt;a href=&quot;../statements/for...in#Array_iteration_and_for...in&quot;&gt;не следует использовать для итерации массива&lt;/a&gt; . Вы намеревались использовать цикл &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; вместо цикла &lt;code&gt;for-in&lt;/code&gt; для итерации &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; ? Цикл &lt;code&gt;for&lt;/code&gt; также позволяет вам установить инициализатор:</target>
        </trans-unit>
        <trans-unit id="21ce5a47ddf5f5c1892a5ca16f22fbde6d82f5bf" translate="yes" xml:space="preserve">
          <source>The format matching algorithm to use. Possible values are &quot;&lt;code&gt;basic&lt;/code&gt;&quot; and &quot;&lt;code&gt;best fit&lt;/code&gt;&quot;; the default is &quot;&lt;code&gt;best fit&lt;/code&gt;&quot;. See the following paragraphs for information about the use of this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be3bfe024b9dcc99081002eafbe6a99f4645ec3" translate="yes" xml:space="preserve">
          <source>The format matching algorithm to use. Possible values are &lt;code&gt;&quot;basic&quot;&lt;/code&gt; and &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;. See the following paragraphs for information about the use of this property.</source>
          <target state="translated">Используемый алгоритм сопоставления формата. Возможные значения: &lt;code&gt;&quot;basic&quot;&lt;/code&gt; и &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; ; по умолчанию установлено &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; . См. Следующие абзацы для получения информации об использовании этого свойства.</target>
        </trans-unit>
        <trans-unit id="6e5bdfc3b696c4787d7f5b6fdae107d9e2a1d269" translate="yes" xml:space="preserve">
          <source>The format of output message. Possible values are &lt;code&gt;&quot;conjunction&quot;&lt;/code&gt; that stands for &quot;and&quot;-based lists (default, e.g., &lt;code&gt;A, B, and C&lt;/code&gt;), or &lt;code&gt;&quot;disjunction&quot;&lt;/code&gt; that stands for &quot;or&quot;-based lists (e.g., &lt;code&gt;A, B, or C&lt;/code&gt;). &lt;code&gt;&quot;unit&quot;&lt;/code&gt; stands for lists of values with units (e.g., &lt;code&gt;5 pounds, 12 ounces&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6a23ccb0d428becc28a0e42b08df0bfb32dbbe" translate="yes" xml:space="preserve">
          <source>The format of output message. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4814772aceb68342508624addc0cd733835fa19" translate="yes" xml:space="preserve">
          <source>The formatting style to use , the default is &quot;&lt;code&gt;decimal&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7497c6a193ec7f8c4ae54881911856d14272c4" translate="yes" xml:space="preserve">
          <source>The formatting style to use, the default is &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51249a9c5efba458f27d56c20290516ae481d15" translate="yes" xml:space="preserve">
          <source>The formatting style to use. Possible values are &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; for plain number formatting, &lt;code&gt;&quot;currency&quot;&lt;/code&gt; for currency formatting, and &lt;code&gt;&quot;percent&quot;&lt;/code&gt; for percent formatting; the default is &lt;code&gt;&quot;decimal&quot;&lt;/code&gt;.</source>
          <target state="translated">Используемый стиль форматирования. Возможные значения: &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; для форматирования простых чисел, &lt;code&gt;&quot;currency&quot;&lt;/code&gt; для форматирования валюты и &lt;code&gt;&quot;percent&quot;&lt;/code&gt; для форматирования процентов; по умолчанию - &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d596699b99cf981bd77014d547ca2b6e1c2f6b9e" translate="yes" xml:space="preserve">
          <source>The formatting that should be displayed for the number, the defaults is &quot;&lt;code&gt;standard&lt;/code&gt;&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a2687bd75f51167d86ce5a12b20e5afcab2ff4" translate="yes" xml:space="preserve">
          <source>The former approach means that any operation that performs such mutation, that throws an exception on failure to mutate, will have to create the exception itself. For example, &lt;a href=&quot;../../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt; will create and throw a &lt;code&gt;TypeError&lt;/code&gt; itself. If the mutation is performed by an operation that &lt;em&gt;doesn't&lt;/em&gt; ordinarily throw in case of failure, such as &lt;a href=&quot;../../reflect/setprototypeof&quot;&gt;&lt;code&gt;Reflect.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;, no exception will be thrown.</source>
          <target state="translated">Первый подход означает, что любая операция, которая выполняет такую ​​мутацию, которая генерирует исключение в случае неудачи изменения, должна будет создать исключение самостоятельно. Например, &lt;a href=&quot;../../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; создаст и выбросит &lt;code&gt;TypeError&lt;/code&gt; . Если мутация выполняется операцией, &lt;em&gt;которая&lt;/em&gt; обычно &lt;em&gt;не&lt;/em&gt; срабатывает в случае сбоя, например &lt;a href=&quot;../../reflect/setprototypeof&quot;&gt; &lt;code&gt;Reflect.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; , исключение не генерируется .</target>
        </trans-unit>
        <trans-unit id="c85d5da70ac3a90e9c2e6569717a34b4468c3322" translate="yes" xml:space="preserve">
          <source>The fraction number.</source>
          <target state="translated">Дробное число.</target>
        </trans-unit>
        <trans-unit id="657b4d938f69ada8c1426df2f622cc4907247752" translate="yes" xml:space="preserve">
          <source>The fulfillment of the promise is simply logged, via a fulfill callback set using &lt;a href=&quot;promise/then&quot;&gt;&lt;code&gt;p1.then()&lt;/code&gt;&lt;/a&gt;. A few logs show how the synchronous part of the method is decoupled from the asynchronous completion of the promise.</source>
          <target state="translated">Выполнение обещания просто регистрируется через набор обратных вызовов выполнения с помощью &lt;a href=&quot;promise/then&quot;&gt; &lt;code&gt;p1.then()&lt;/code&gt; &lt;/a&gt; . Несколько журналов показывают, как синхронная часть метода отделяется от асинхронного завершения обещания.</target>
        </trans-unit>
        <trans-unit id="ececd6466ab35c55722b37e4f78dcf8d3e5a682a" translate="yes" xml:space="preserve">
          <source>The full JSON syntax is as follows:</source>
          <target state="translated">Полный синтаксис JSON выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="4c8b7fb65617ce93232fc91b4b6cbfcf63167c0e" translate="yes" xml:space="preserve">
          <source>The full string of characters matched</source>
          <target state="translated">Полная строка символов совпадает</target>
        </trans-unit>
        <trans-unit id="7bd3ea22648f4bb4202fd357beb2d876bc32c231" translate="yes" xml:space="preserve">
          <source>The function bound as a getter to the specified property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b678f310db86501f1396dcdea4094b38ab01993" translate="yes" xml:space="preserve">
          <source>The function bound as a setter to the specified property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecaf2f261d49b30f7d0da994fcbe6c2636cb485" translate="yes" xml:space="preserve">
          <source>The function declaration (&lt;code&gt;function&lt;/code&gt; statement)</source>
          <target state="translated">Объявление &lt;code&gt;function&lt;/code&gt; ( оператор функции )</target>
        </trans-unit>
        <trans-unit id="9e921e507f8b7f8d1442786ea718cddb26e1fe39" translate="yes" xml:space="preserve">
          <source>The function expression (&lt;code&gt;function&lt;/code&gt; expression)</source>
          <target state="translated">Выражение &lt;code&gt;function&lt;/code&gt; ( выражение функции )</target>
        </trans-unit>
        <trans-unit id="da3b1e53fe2413cb7f204420522784474bf1d935" translate="yes" xml:space="preserve">
          <source>The function name also appears when the function is serialized via &lt;a href=&quot;global_objects/function/tostring&quot;&gt;&lt;code&gt;Function&lt;/code&gt;'s toString method&lt;/a&gt;.</source>
          <target state="translated">Имя функции также появляется , когда функция сериализации с помощью &lt;a href=&quot;global_objects/function/tostring&quot;&gt; &lt;code&gt;Function&lt;/code&gt; методы ToString &amp;laquo;s&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd88e0a29a4aed692f0ed42a9304d90f8c1ec00a" translate="yes" xml:space="preserve">
          <source>The function name.</source>
          <target state="translated">Имя функции.</target>
        </trans-unit>
        <trans-unit id="62bdd69c0a22b0df01e076d42d909e2bfb16837c" translate="yes" xml:space="preserve">
          <source>The function name. Can be omitted, in which case the function becomes known as an anonymous function.</source>
          <target state="translated">Имя функции.Может быть опущена,в этом случае функция становится анонимной.</target>
        </trans-unit>
        <trans-unit id="f7614240b44bca06d14b83cf1abe2f594314766d" translate="yes" xml:space="preserve">
          <source>The function name. Can be omitted, in which case the function is &lt;em&gt;anonymous&lt;/em&gt;. The name is only local to the function body.</source>
          <target state="translated">Имя функции. Может быть опущено, и в этом случае функция &lt;em&gt;анонимна&lt;/em&gt; . Имя является локальным только для тела функции.</target>
        </trans-unit>
        <trans-unit id="ab196234ca12cda83f1a5f88cc198e3eb542db95" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;compare&lt;/code&gt; getter returns a number indicating how &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt; compare to each other according to the sort order of this &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object: a negative value if &lt;code&gt;string1&lt;/code&gt; comes before &lt;code&gt;string2&lt;/code&gt;; a positive value if &lt;code&gt;string1&lt;/code&gt; comes after &lt;code&gt;string2&lt;/code&gt;; 0 if they are considered equal.</source>
          <target state="translated">Функция, возвращаемая геттером &lt;code&gt;compare&lt;/code&gt; возвращает число, показывающее, как &lt;code&gt;string1&lt;/code&gt; и &lt;code&gt;string2&lt;/code&gt; сравниваются друг с другом в соответствии с порядком сортировки этого объекта &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; : отрицательное значение, если &lt;code&gt;string1&lt;/code&gt; предшествует &lt;code&gt;string2&lt;/code&gt; ; положительное значение, если &lt;code&gt;string1&lt;/code&gt; идет после &lt;code&gt;string2&lt;/code&gt; ; 0, если они считаются равными.</target>
        </trans-unit>
        <trans-unit id="429ee9f92f94546f7fbcc8bb211322a922e1895d" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;format&lt;/code&gt; getter formats a date into a string according to the locale and formatting options of this &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Функция, возвращаемая получателем &lt;code&gt;format&lt;/code&gt; форматирует дату в строку в соответствии с языковым стандартом и параметрами форматирования этого объекта &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c00b71412d9e081095256bc3342a353d70f7cd4e" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;format&lt;/code&gt; getter formats a number into a string according to the locale and formatting options of this &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Функция, возвращаемая получателем &lt;code&gt;format&lt;/code&gt; форматирует число в строку в соответствии с языковым стандартом и параметрами форматирования этого объекта &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fab5857a623c581409d5354990b533721b173497" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;format&lt;/code&gt; getter formats a value and a unit into a string according to the locale and formatting options of this &lt;a href=&quot;../relativetimeformat&quot;&gt;&lt;code&gt;Intl.RelativeTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecc673f0d69994e7b149448cc587280408b2af2" translate="yes" xml:space="preserve">
          <source>The function&amp;rsquo;s name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e3509a5feb3dd200ea681696cf06d22c571073" translate="yes" xml:space="preserve">
          <source>The generator function declaration (&lt;code&gt;function*&lt;/code&gt; statement)</source>
          <target state="translated">Объявление &lt;code&gt;function*&lt;/code&gt; генератора ( оператор function * )</target>
        </trans-unit>
        <trans-unit id="d2a434a0139db7e8a2d62a84236951cfb748eba1" translate="yes" xml:space="preserve">
          <source>The generator function expression (&lt;code&gt;function*&lt;/code&gt; expression)</source>
          <target state="translated">Выражение &lt;code&gt;function*&lt;/code&gt; генератора ( функция * выражение)</target>
        </trans-unit>
        <trans-unit id="880264df9dd784fe5a4ce45e4105f3d5e5b98c6b" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Глобальный объект &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c36297780bfef1220ae202613574c746319748e" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Глобальный &lt;a href=&quot;../parsefloat&quot;&gt; &lt;code&gt;parseFloat()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="027cdd1d38c80faf686eadfdd4a47631060f7d95" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Глобальный метод &lt;a href=&quot;../parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb00c981780b71f173fbee37d38368abbfa3ca8b" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;Infinity&lt;/strong&gt;&lt;/code&gt; property is a numeric value representing infinity.</source>
          <target state="translated">Глобальное свойство &lt;code&gt;&lt;strong&gt;Infinity&lt;/strong&gt;&lt;/code&gt; - это числовое значение, представляющее бесконечность.</target>
        </trans-unit>
        <trans-unit id="64d1f1892749fa9bc4b2887262f573c88b4a2326" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;NaN&lt;/strong&gt;&lt;/code&gt; property is a value representing Not-A-Number.</source>
          <target state="translated">Глобальное свойство &lt;code&gt;&lt;strong&gt;NaN&lt;/strong&gt;&lt;/code&gt; - это значение, представляющее Not-A-Number.</target>
        </trans-unit>
        <trans-unit id="66234f04f1f196d0e531a6ec6ef74757a2a57e84" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;globalThis&lt;/strong&gt;&lt;/code&gt; property contains the global &lt;code&gt;this&lt;/code&gt; value, which is akin to the global object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999e627c54c2e101c2088742c26c98fb467de2c0" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;isFinite()&lt;/strong&gt;&lt;/code&gt; function determines whether the passed value is a finite number. If needed, the parameter is first converted to a number.</source>
          <target state="translated">Глобальная &lt;code&gt;&lt;strong&gt;isFinite()&lt;/strong&gt;&lt;/code&gt; определяет, является ли переданное значение конечным числом. При необходимости параметр сначала преобразуется в число.</target>
        </trans-unit>
        <trans-unit id="d4a30173e0cacba49859820c763dd1ac741d5dd9" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;undefined&lt;/strong&gt;&lt;/code&gt; property represents the primitive value &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt;. It is one of JavaScript's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive types&lt;/a&gt;.</source>
          <target state="translated">Глобальное свойство &lt;code&gt;&lt;strong&gt;undefined&lt;/strong&gt;&lt;/code&gt; представляет примитивное значение &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt; . Это один из &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;примитивных типов&lt;/a&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="82f901481098e88993e1cd494a6822ac3943ed2f" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;Error&lt;/code&gt; object contains no methods of its own, however, it does inherit some methods from the prototype chain.</source>
          <target state="translated">Глобальный объект &lt;code&gt;Error&lt;/code&gt; не содержит собственных методов, однако он наследует некоторые методы из цепочки прототипов.</target>
        </trans-unit>
        <trans-unit id="3eff31a0b0151004fb3e955a32c430d53d60856a" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;EvalError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальный &lt;code&gt;EvalError&lt;/code&gt; не содержит собственных методов, однако он наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="4aadaebc86eb9d6affc602bf697f4904db9ee3a9" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;Function&lt;/code&gt; object has no methods or properties of its own. However, since it is a function itself, it does inherit some methods and properties through the prototype chain from &lt;a href=&quot;function/prototype&quot;&gt;&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Глобальный объект &lt;code&gt;Function&lt;/code&gt; не имеет собственных методов или свойств. Однако, поскольку это сама функция, она наследует некоторые методы и свойства через цепочку прототипов от &lt;a href=&quot;function/prototype&quot;&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31910ae3741fa6eddc0fa94ed342eebc1b687403" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;RangeError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальный &lt;code&gt;RangeError&lt;/code&gt; содержит собственных методов, однако он наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="32b7d95293e623785f895fff9fa203362d640505" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;RegExp&lt;/code&gt; object has no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальный объект &lt;code&gt;RegExp&lt;/code&gt; не имеет собственных методов, однако он наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="eebb3136a50f28fa26c762ba41d905d8743880e2" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;SyntaxError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальная &lt;code&gt;SyntaxError&lt;/code&gt; содержит собственных методов, однако она наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="bc8162c03bf05356af9524614d6142c7da0ed75f" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;TypeError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальная &lt;code&gt;TypeError&lt;/code&gt; содержит собственных методов, однако она наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="d1fd9211b62420f34112db872d8541779750647a" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;URIError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальная &lt;code&gt;URIError&lt;/code&gt; содержит собственных методов, однако она наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="53bf27a19683454ca1af3b5ff3d4b6098045bd86" translate="yes" xml:space="preserve">
          <source>The global function &lt;a href=&quot;../isfinite&quot;&gt;&lt;code&gt;isFinite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Глобальная функция &lt;a href=&quot;../isfinite&quot;&gt; &lt;code&gt;isFinite&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7563140ff98acbeb55e75e9556852f09e6fdc769" translate="yes" xml:space="preserve">
          <source>The global object sits at the top of the scope chain. When attempting to resolve a name to a value, the scope chain is searched. This means that properties on the global object are conveniently visible from every scope, without having to qualify the names with &lt;code&gt;globalThis.&lt;/code&gt; or &lt;code&gt;window.&lt;/code&gt; or &lt;code&gt;global.&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a170fbae6a70c557450474289bc1b51471ec03" translate="yes" xml:space="preserve">
          <source>The global property &lt;code&gt;&lt;strong&gt;Infinity&lt;/strong&gt;&lt;/code&gt; is a numeric value representing infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cd1c256ddf0c828a7e89ab645b7cc1cb848df6" translate="yes" xml:space="preserve">
          <source>The global scope is bound to the &lt;a href=&quot;globalthis&quot;&gt;global object&lt;/a&gt;, so checking the existence of a variable in the global context can be done by checking the existence of a property on the &lt;em&gt;global object&lt;/em&gt;, using the &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, for instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2533a6aeb5454bbd59ef5fea39ae759465302a42" translate="yes" xml:space="preserve">
          <source>The global symbol registry is a list with the following record structure and it is initialized empty:</source>
          <target state="translated">Глобальный реестр символов представляет собой список со следующей структурой записи и инициализируется как пустой:</target>
        </trans-unit>
        <trans-unit id="7891007b001dfcd3d8d85de10fc342d652cd8184" translate="yes" xml:space="preserve">
          <source>The global variable &lt;code&gt;undefined&lt;/code&gt; is also read-only, so you can't silence the infamous &quot;undefined is not a function&quot; error by doing this:</source>
          <target state="translated">Глобальная переменная &lt;code&gt;undefined&lt;/code&gt; также доступна только для чтения, поэтому вы не можете заглушить печально известную ошибку &amp;laquo;undefined is not a function&amp;raquo;, сделав следующее:</target>
        </trans-unit>
        <trans-unit id="a0d5cf30e70f187fc72dc65cc1830fe095e7a188" translate="yes" xml:space="preserve">
          <source>The global variable or object property that was assigned to is a read-only property. (Technically, it is a &lt;a href=&quot;../global_objects/object/defineproperty#Writable_attribute&quot;&gt;non-writable data property&lt;/a&gt;.)</source>
          <target state="translated">Глобальная переменная или свойство объекта, которому было назначено, доступно только для чтения. (Технически это &lt;a href=&quot;../global_objects/object/defineproperty#Writable_attribute&quot;&gt;свойство данных, которое нельзя записывать&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="a3c9e35ce8ac9e307f2a3e745b85a4affcc87e45" translate="yes" xml:space="preserve">
          <source>The greater than operator (&lt;code&gt;&amp;gt;&lt;/code&gt;) returns &lt;code&gt;true&lt;/code&gt; if the left operand is greater than the right operand, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc2ae19dad606a0c63b9c278d7c96ffb47eb8df" translate="yes" xml:space="preserve">
          <source>The greater than operator returns true if the left operand is greater than the right operand.</source>
          <target state="translated">Больше чем оператор возвращает true,если левый операнд больше правого.</target>
        </trans-unit>
        <trans-unit id="09dcac267c779de8a04bc1b64248cfc43e8db014" translate="yes" xml:space="preserve">
          <source>The greater than or equal operator (&lt;code&gt;&amp;gt;=&lt;/code&gt;) returns &lt;code&gt;true&lt;/code&gt; if the left operand is greater than or equal to the right operand, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a71e127d44c490ee6822b91d839605a85d99ed" translate="yes" xml:space="preserve">
          <source>The greater than or equal operator returns true if the left operand is greater than or equal to the right operand.</source>
          <target state="translated">Оператор больше или равен возвращает true,если левый операнд больше или равен правому операнду.</target>
        </trans-unit>
        <trans-unit id="97b1aaae463ca711f77445c710b6ada37cd0fdf4" translate="yes" xml:space="preserve">
          <source>The group separator string (&quot;,&quot;).</source>
          <target state="translated">Строка разделителя групп (&quot;,&quot;).</target>
        </trans-unit>
        <trans-unit id="8974e128d16a8d8a8ac454a73fd5382ad405106a" translate="yes" xml:space="preserve">
          <source>The grouping operator &lt;code&gt;( )&lt;/code&gt; controls the precedence of evaluation in expressions.</source>
          <target state="translated">Оператор группировки &lt;code&gt;( )&lt;/code&gt; управляет приоритетом оценки в выражениях.</target>
        </trans-unit>
        <trans-unit id="48684e74df907fcd7bdc50a836019abf2ed147b9" translate="yes" xml:space="preserve">
          <source>The grouping operator consists of a pair of parentheses around an expression or sub-expression to override the normal &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence&lt;/a&gt; so that expressions with lower precedence can be evaluated before an expression with higher priority. As it sounds it groups what's inside of the parentheses.</source>
          <target state="translated">Оператор группировки состоит из пары круглых скобок вокруг выражения или подвыражения, чтобы переопределить обычный &lt;a href=&quot;operator_precedence&quot;&gt;приоритет оператора,&lt;/a&gt; чтобы выражения с более низким приоритетом могли оцениваться перед выражением с более высоким приоритетом. Как бы то ни было, он группирует то, что внутри скобок.</target>
        </trans-unit>
        <trans-unit id="7e59b51c3d728abaed95fc5f2cba0caf059019bf" translate="yes" xml:space="preserve">
          <source>The grouping operator consists of a pair of parentheses around an expression or sub-expression to override the normal &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence&lt;/a&gt; so that expressions with lower precedence can be evaluated before an expression with higher priority. As it sounds, it groups what's inside of the parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb6a388fc5ab3b064cb0fe4fd00fa7c8e775174" translate="yes" xml:space="preserve">
          <source>The handler object is a placeholder object which contains traps for &lt;code&gt;Proxy&lt;/code&gt;.</source>
          <target state="translated">Объект-обработчик - это объект-заполнитель, который содержит ловушки для &lt;code&gt;Proxy&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
