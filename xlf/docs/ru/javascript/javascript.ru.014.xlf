<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="a57b4c3298b35e7edb3f90845c7cfcfac6e75ef3" translate="yes" xml:space="preserve">
          <source>The second element for comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22841544311fffdd3a3c30c0a4872284a7c22a0e" translate="yes" xml:space="preserve">
          <source>The second inconvenience is a memory leak because the arrays ensure that references to each key and each value are maintained indefinitely. These references prevent the keys from being garbage collected, even if there are no other references to the object. This would also prevent the corresponding values from being garbage collected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0086131e6b3531ebfb0c6d4586f854d8307796" translate="yes" xml:space="preserve">
          <source>The second one is bigger and less performant, but it permits some usage of the &lt;code&gt;new&lt;/code&gt; operator on bound functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4af5fdad88a53c6ca2e10ebd0e8a5f9481a8a2f1" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 1 to &lt;code&gt;weekday&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;. December 25, 1995, is a Monday.</source>
          <target state="translated">Второй оператор ниже присваивает значение 1 для &lt;code&gt;weekday&lt;/code&gt; на основе значения объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Xmas95&lt;/code&gt; . 25 декабря 1995 года, понедельник.</target>
        </trans-unit>
        <trans-unit id="1c879df70b2272c9b5d5ec41f180cc20c882a52d" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 11 to the variable &lt;code&gt;month&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">Второй оператор ниже присваивает переменной &lt;code&gt;month&lt;/code&gt; значение 11 на основе значения объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Xmas95&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c119c53df8dbc52c8270c24e802cc1458abdf049" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 15 to the variable &lt;code&gt;minutes&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">Второй оператор ниже присваивает значение 15 переменной &lt;code&gt;minutes&lt;/code&gt; на основе значения объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Xmas95&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a8bee7abf8a4065d5840aec3031141bf9e19841" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 23 to the variable &lt;code&gt;hours&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">Второй оператор ниже присваивает значение 23 переменной &lt;code&gt;hours&lt;/code&gt; на основе значения объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Xmas95&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30d33ab3aec9a22329c064d587266eedecf3c3da" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 25 to the variable &lt;code&gt;day&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">Второй оператор ниже присваивает значение 25 переменной &lt;code&gt;day&lt;/code&gt; на основе значения объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Xmas95&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="745cd8a1301e16f24d369e3eb0cae17a9cf39f01" translate="yes" xml:space="preserve">
          <source>The second statement below assigns the value 30 to the variable &lt;code&gt;seconds&lt;/code&gt;, based on the value of the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object &lt;code&gt;Xmas95&lt;/code&gt;.</source>
          <target state="translated">Второй оператор ниже присваивает переменной &lt;code&gt;seconds&lt;/code&gt; значение 30 на основе значения объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; &lt;code&gt;Xmas95&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4024bd8f1cdd176e7775d73d2b29084da7618627" translate="yes" xml:space="preserve">
          <source>The second value to compare.</source>
          <target state="translated">Второе значение для сравнения.</target>
        </trans-unit>
        <trans-unit id="abb522214d42e0562b3bff4958df65ccc0bca73b" translate="yes" xml:space="preserve">
          <source>The second way is the &lt;code&gt;/* */&lt;/code&gt; style, which is much more flexible.</source>
          <target state="translated">Второй способ - это стиль &lt;code&gt;/* */&lt;/code&gt; , который гораздо более гибкий.</target>
        </trans-unit>
        <trans-unit id="cefef5fa8e63d0fd4ec579caf525e0c06577e1f0" translate="yes" xml:space="preserve">
          <source>The second way to get a &lt;code&gt;WebAssembly.Memory&lt;/code&gt; object is to have it exported by a WebAssembly module. The following example (see &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html&quot;&gt;memory.html&lt;/a&gt; on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/memory.html&quot;&gt;view it live also&lt;/a&gt;) fetches and instantiates the loaded memory.wasm byte code using the &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method, while importing the memory created in the line above. It then stores some values in that memory, then exports a function and uses it to sum some values.</source>
          <target state="translated">Второй способ получить объект &lt;code&gt;WebAssembly.Memory&lt;/code&gt; - это экспортировать его с помощью модуля WebAssembly. В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html&quot;&gt;Memory.html&lt;/a&gt; на GitHub и также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/memory.html&quot;&gt;просмотрите его в режиме реального времени&lt;/a&gt; ) извлекает и создает экземпляр загруженного байтового кода memory.wasm с помощью метода &lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; при импорте памяти, созданной в строке выше. Затем он сохраняет некоторые значения в этой памяти, затем экспортирует функцию и использует ее для суммирования некоторых значений.</target>
        </trans-unit>
        <trans-unit id="c1f1f1991cf227b29cc351ef76e1b1c1ad39d33b" translate="yes" xml:space="preserve">
          <source>The secondary overload takes an already-compiled &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; and returns a &lt;code&gt;Promise&lt;/code&gt; that resolves to an &lt;code&gt;Instance&lt;/code&gt; of that &lt;code&gt;Module&lt;/code&gt;. This overload is useful if the &lt;code&gt;Module&lt;/code&gt; has already been compiled.</source>
          <target state="translated">Вторичная перегрузка принимает уже скомпилированный &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; и возвращает &lt;code&gt;Promise&lt;/code&gt; которое разрешается в &lt;code&gt;Instance&lt;/code&gt; этого &lt;code&gt;Module&lt;/code&gt; . Эта перегрузка полезна, если &lt;code&gt;Module&lt;/code&gt; уже скомпилирован.</target>
        </trans-unit>
        <trans-unit id="1820b978ecac3858ab3dd6802f3b9ee97c6a18f2" translate="yes" xml:space="preserve">
          <source>The shift() method is often used in condition inside while loop. In the following example every iteration will remove the next element from an array, until it is empty:</source>
          <target state="translated">Метод shift()часто используется в условии внутри цикла.В следующем примере каждая итерация будет удалять следующий элемент из массива,пока он не станет пустым:</target>
        </trans-unit>
        <trans-unit id="abee9f26ebefaef40a0c699186c2c458782cc646" translate="yes" xml:space="preserve">
          <source>The shorthand syntax also supports computed property names.</source>
          <target state="translated">Синтаксис также поддерживает имена вычисляемых свойств.</target>
        </trans-unit>
        <trans-unit id="0ec96efc35fa3234a2270887e3200075877ba098" translate="yes" xml:space="preserve">
          <source>The shorthand syntax is similar to the &lt;a href=&quot;get&quot;&gt;getter&lt;/a&gt; and &lt;a href=&quot;set&quot;&gt;setter&lt;/a&gt; syntax introduced in ECMAScript 2015.</source>
          <target state="translated">Сокращенный синтаксис аналогичен синтаксису &lt;a href=&quot;get&quot;&gt;получателя&lt;/a&gt; и &lt;a href=&quot;set&quot;&gt;установщика,&lt;/a&gt; представленному в ECMAScript 2015.</target>
        </trans-unit>
        <trans-unit id="d970f2879008a5664e8f8ad4addd15f05ba6423e" translate="yes" xml:space="preserve">
          <source>The shorthand syntax is similar to the &lt;a href=&quot;get&quot;&gt;getter&lt;/a&gt; and &lt;a href=&quot;set&quot;&gt;setter&lt;/a&gt; syntax introduced in ES5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab86750f1e64ce498e187f5d5f841e9f26691c5b" translate="yes" xml:space="preserve">
          <source>The simple alternative of assigning the object to a short name variable, then accessing the corresponding property on that variable, stands ready to replace &lt;code&gt;with&lt;/code&gt;.</source>
          <target state="translated">Простая альтернатива - присвоить объект переменной с коротким именем и затем получить доступ к соответствующему свойству этой переменной - готова к замене &lt;code&gt;with&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3c6147140bc7c5177cf3352c47afa22965051718" translate="yes" xml:space="preserve">
          <source>The simplest case is when &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; is just a single character; this is used to split a delimited string. For example, a string containing tab separated values (TSV) could be parsed by passing a tab character as the separator, like this: &lt;code&gt;myString.split(&quot;\t&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b22b9d7ecb2507195389b54eece72bc59a1c02" translate="yes" xml:space="preserve">
          <source>The simplest use of &lt;code&gt;bind()&lt;/code&gt; is to make a function that, no matter how it is called, is called with a particular &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5835c1fc1912869cb1a9f6b017fc5089043ea886" translate="yes" xml:space="preserve">
          <source>The simplest use of &lt;code&gt;bind()&lt;/code&gt; is to make a function that, no matter how it is called, is called with a particular &lt;code&gt;this&lt;/code&gt; value. A common mistake for new JavaScript programmers is to extract a method from an object, then to later call that function and expect it to use the original object as its &lt;code&gt;this&lt;/code&gt; (e.g. by using that method in callback-based code). Without special care, however, the original object is usually lost. Creating a bound function from the function, using the original object, neatly solves this problem:</source>
          <target state="translated">Простейшее использование &lt;code&gt;bind()&lt;/code&gt; - создание функции, которая независимо от того, как она вызывается, вызывается с определенным значением &lt;code&gt;this&lt;/code&gt; . Распространенной ошибкой начинающих программистов на JavaScript является извлечение метода из объекта, а затем последующий вызов этой функции и ожидание, что она будет использовать исходный объект в качестве &lt;code&gt;this&lt;/code&gt; (например, используя этот метод в коде, основанном на обратном вызове ). Однако без особого ухода исходный объект обычно теряется. Создание связанной функции из функции с использованием исходного объекта аккуратно решает эту проблему:</target>
        </trans-unit>
        <trans-unit id="6d6c63dff4f030464384082acb8b1913506c71dc" translate="yes" xml:space="preserve">
          <source>The simplest version directly imports the default:</source>
          <target state="translated">Самая простая версия напрямую импортирует стандартную:</target>
        </trans-unit>
        <trans-unit id="d69ece57bbd193284b3f54a7d109daeeae0e20ff" translate="yes" xml:space="preserve">
          <source>The sine of the given number.</source>
          <target state="translated">Синус данного числа.</target>
        </trans-unit>
        <trans-unit id="7fa6c3c88196c9890ccc2acd1751ee8a3b162f6e" translate="yes" xml:space="preserve">
          <source>The single code point U+00F1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df80f5ae8e83175ed50005f6bc69db2213cac60d" translate="yes" xml:space="preserve">
          <source>The single value that results from the reduction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668a8c3d578534a6a438f66f8a70854b72068cc7" translate="yes" xml:space="preserve">
          <source>The size in bytes to check.</source>
          <target state="translated">Размер в байтах для проверки.</target>
        </trans-unit>
        <trans-unit id="57a5c0494833bea31465d3b044b0e0d342192fff" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the array buffer to create.</source>
          <target state="translated">Размер в байтах создаваемого буфера массива.</target>
        </trans-unit>
        <trans-unit id="bcf6eda76bceac4f20d4cfa8a5529bffe65aa5c7" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the array. This is established when the array is constructed and cannot be changed. &lt;strong&gt;Read only.&lt;/strong&gt;</source>
          <target state="translated">Размер массива в байтах. Это устанавливается при построении массива и не может быть изменено. &lt;strong&gt;Только чтение.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b1c647ddc22eacea007c8f8f76aa48ee7a3bdf44" translate="yes" xml:space="preserve">
          <source>The smallest integer greater than or equal to the given number.</source>
          <target state="translated">Наименьшее целое число,большее или равное данному числу.</target>
        </trans-unit>
        <trans-unit id="4d5352391b7cf0872173723c1715230a82d0e709" translate="yes" xml:space="preserve">
          <source>The smallest interval between two representable numbers.</source>
          <target state="translated">Наименьший интервал между двумя представляемыми числами.</target>
        </trans-unit>
        <trans-unit id="578a6566f8dd2727ef2138039b6e1b260c726f43" translate="yes" xml:space="preserve">
          <source>The smallest of the given numbers. If any one or more of the parameters cannot be converted into a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned. The result is &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; if no parameters are provided.</source>
          <target state="translated">Наименьшее из заданных чисел. Если один или несколько параметров не могут быть преобразованы в число, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; . Если параметры не указаны, результатом будет &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1b584b056332604c643da0964809675ae4df19e1" translate="yes" xml:space="preserve">
          <source>The smallest positive representable number - that is, the positive number closest to zero (without actually being zero).</source>
          <target state="translated">Наименьшее положительное репрезентабельное число-то есть,положительное число,близкое к нулю (не являющееся на самом деле нулем).</target>
        </trans-unit>
        <trans-unit id="198213a60d9b14b4686129ce9aee85fc9c96c0ec" translate="yes" xml:space="preserve">
          <source>The smallest positive representable number&amp;mdash;that is, the positive number closest to zero (without actually being zero).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59980303f2b550bbba2cfdadd7dee2081477f6e1" translate="yes" xml:space="preserve">
          <source>The snippet below illustrates how to find and filter (thus causing data loss) a cyclic reference by using the &lt;code&gt;replacer&lt;/code&gt; parameter of &lt;a href=&quot;../global_objects/json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Фрагмент ниже иллюстрирует , как найти и фильтр (таким образом , что приводит к потере данных) циклическую ссылку при помощи &lt;code&gt;replacer&lt;/code&gt; параметра &lt;a href=&quot;../global_objects/json/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="0d525c5acea385ad7d50408039e4c710e63be90d" translate="yes" xml:space="preserve">
          <source>The sorted array. Note that the array is sorted &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;in place&lt;/a&gt;&lt;/em&gt;, and no copy is made.</source>
          <target state="translated">Отсортированный массив. Обратите внимание, что массив сортируется &lt;em&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/In-place_algorithm&quot;&gt;по месту&lt;/a&gt;&lt;/em&gt; , а копии не создаются.</target>
        </trans-unit>
        <trans-unit id="4d59fac8447c22b135eb4a41f704bad8d5e0df4d" translate="yes" xml:space="preserve">
          <source>The sorted typed array.</source>
          <target state="translated">Сортированный типизированный массив.</target>
        </trans-unit>
        <trans-unit id="f8167c1b0cbe252b617b1b1e7b1d0ed414774fce" translate="yes" xml:space="preserve">
          <source>The source map specification changed the syntax due to a conflict with IE whenever it was found in the page after &lt;code&gt;//@cc_on&lt;/code&gt; was interpreted to turn on conditional compilation in the IE JScript engine. The &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/8ka90k2e%28v=vs.94%29.aspx&quot;&gt;conditional compilation comment&lt;/a&gt; in IE is a little known feature, but it broke source maps with &lt;a href=&quot;https://bugs.jquery.com/ticket/13274&quot;&gt;jQuery&lt;/a&gt; and other libraries.</source>
          <target state="translated">Спецификация исходной карты изменила синтаксис из-за конфликта с IE всякий раз, когда он обнаруживался на странице после того, как &lt;code&gt;//@cc_on&lt;/code&gt; был интерпретирован для включения условной компиляции в движке IE JScript. &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/8ka90k2e%28v=vs.94%29.aspx&quot;&gt;Условная компиляция комментарий&lt;/a&gt; в IE является малоизвестной особенностью, но она сломалась карты источника с &lt;a href=&quot;https://bugs.jquery.com/ticket/13274&quot;&gt;JQuery&lt;/a&gt; и другими библиотеками.</target>
        </trans-unit>
        <trans-unit id="aa083e2e5d9db92e1fdd3a2dadc5b300ce6d155e" translate="yes" xml:space="preserve">
          <source>The source object(s) &amp;mdash; objects containing the properties you want to apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d0a7de6131e4d732a1c1c89a21e337c87b0b06" translate="yes" xml:space="preserve">
          <source>The source object(s).</source>
          <target state="translated">Источник(и)объекта(ов).</target>
        </trans-unit>
        <trans-unit id="511eb85673324126c566f020ed174ab405eef44c" translate="yes" xml:space="preserve">
          <source>The space argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b8ea87c618fea41d5aab1faa4ecb32e6d1ea59" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;raw&lt;/code&gt; property, available on the first argument to the tag function, allows you to access the raw strings as they were entered, without processing &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Using_special_characters_in_strings&quot;&gt;escape sequences&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8a5b4743460e7bd39f98c02ae1935d30bc0af0" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;raw&lt;/code&gt; property, available on the first function argument of tagged templates, allows you to access the raw strings as they were entered, without processing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Using_special_characters_in_strings&quot;&gt;escape sequences&lt;/a&gt;.</source>
          <target state="translated">Специальное свойство &lt;code&gt;raw&lt;/code&gt; , доступное для первого аргумента функции в шаблонах с тегами, позволяет получить доступ к необработанным строкам по мере их ввода без обработки &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Grammar_and_types#Using_special_characters_in_strings&quot;&gt;управляющих последовательностей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94f6db19f273c019178b304d1a64313a00b4826e" translate="yes" xml:space="preserve">
          <source>The species accessor property allows subclasses to override the default constructor for objects.</source>
          <target state="translated">Свойство видового аксессуара позволяет подклассам переопределять конструктор объектов по умолчанию.</target>
        </trans-unit>
        <trans-unit id="16021061db18ebd6a5d2f1fec6234d9ec169cb96" translate="yes" xml:space="preserve">
          <source>The species accessor property returns the default constructor for &lt;code&gt;ArrayBuffer&lt;/code&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="translated">Свойство аксессора разновидностей возвращает конструктор по умолчанию для объектов &lt;code&gt;ArrayBuffer&lt;/code&gt; . Конструкторы подкласса могут переопределить его, чтобы изменить назначение конструктора.</target>
        </trans-unit>
        <trans-unit id="1b750d87e0450750db11d484a6aacc4956dcfa7d" translate="yes" xml:space="preserve">
          <source>The species accessor property returns the default constructor for &lt;code&gt;Map&lt;/code&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="translated">Свойство аксессора разновидностей возвращает конструктор по умолчанию для объектов &lt;code&gt;Map&lt;/code&gt; . Конструкторы подкласса могут переопределить его, чтобы изменить назначение конструктора.</target>
        </trans-unit>
        <trans-unit id="491d41ab480e226fed33b559751c6077a08f7be3" translate="yes" xml:space="preserve">
          <source>The species accessor property returns the default constructor for &lt;code&gt;Set&lt;/code&gt; objects. Subclass constructors may over-ride it to change the constructor assignment.</source>
          <target state="translated">Свойство аксессора разновидностей возвращает конструктор по умолчанию для объектов &lt;code&gt;Set&lt;/code&gt; . Конструкторы подкласса могут переопределить его, чтобы изменить назначение конструктора.</target>
        </trans-unit>
        <trans-unit id="b584b6a94bc11fac8ce47d9f14648ec420fce3c4" translate="yes" xml:space="preserve">
          <source>The species property returns the default constructor function, which is the &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor for &lt;code&gt;ArrayBuffer&lt;/code&gt; objects:</source>
          <target state="translated">Свойство возвращает вид функции конструктора по умолчанию, который является &lt;code&gt;ArrayBuffer&lt;/code&gt; конструктор &lt;code&gt;ArrayBuffer&lt;/code&gt; объектов:</target>
        </trans-unit>
        <trans-unit id="2a17544fbb410f0df301670f863e167add111875" translate="yes" xml:space="preserve">
          <source>The species property returns the default constructor function, which is the &lt;code&gt;Map&lt;/code&gt; constructor for &lt;code&gt;Map&lt;/code&gt; objects:</source>
          <target state="translated">Свойство возвращает вид функции конструктора по умолчанию, который является &lt;code&gt;Map&lt;/code&gt; конструктор &lt;code&gt;Map&lt;/code&gt; объектов:</target>
        </trans-unit>
        <trans-unit id="46a4bbfb225be485ea6fcd2993d62c627968df55" translate="yes" xml:space="preserve">
          <source>The species property returns the default constructor function, which is the &lt;code&gt;Set&lt;/code&gt; constructor for &lt;code&gt;Set&lt;/code&gt; objects:</source>
          <target state="translated">Свойство возвращает вид функции конструктора по умолчанию, который является &lt;code&gt;Set&lt;/code&gt; конструктора для &lt;code&gt;Set&lt;/code&gt; объектов:</target>
        </trans-unit>
        <trans-unit id="9659544f684f8e234ac1326aebca08dd5b470404" translate="yes" xml:space="preserve">
          <source>The specified object.</source>
          <target state="translated">Указанный объект.</target>
        </trans-unit>
        <trans-unit id="1f3f0ce94a2bcf1dd429f4d411f2f2b8d1305c23" translate="yes" xml:space="preserve">
          <source>The square brackets of an array comprehension introduce an implicit block for scoping purposes. New variables (such as i in the example) are treated as if they had been declared using &lt;a href=&quot;../statements/let&quot;&gt;&lt;code&gt;let&lt;/code&gt;&lt;/a&gt;. This means that they will not be available outside of the comprehension.</source>
          <target state="translated">Квадратные скобки в понимании массива вводят неявный блок для целей определения объема. Новые переменные (такие как i в примере) обрабатываются так, как если бы они были объявлены с помощью &lt;a href=&quot;../statements/let&quot;&gt; &lt;code&gt;let&lt;/code&gt; &lt;/a&gt; . Это означает, что они не будут доступны вне понимания.</target>
        </trans-unit>
        <trans-unit id="b2bcdf15b0d6fa2bcc088c169892370833652876" translate="yes" xml:space="preserve">
          <source>The square root of the given number. If the number is negative, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Квадратный корень из заданного числа. Если число отрицательное, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4666bf74066d922cd6cefe693f56d0c8313d153f" translate="yes" xml:space="preserve">
          <source>The square root of the sum of squares of the given arguments. If at least one of the arguments cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Квадратный корень из суммы квадратов данных аргументов. Если хотя бы один из аргументов не может быть преобразован в число, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0387989a2fa950c785b09a34ece64a2e3fdcf811" translate="yes" xml:space="preserve">
          <source>The standard equality operators (&lt;code&gt;==&lt;/code&gt; and &lt;code&gt;!=&lt;/code&gt;) use the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;Abstract Equality Comparison Algorithm&lt;/a&gt; to compare two operands. If the operands are of different types, it will attempt to convert them to the same type before making the comparison, e.g., in the expression &lt;code&gt;5 == '5'&lt;/code&gt;, the string on the right is converted to &lt;a href=&quot;../global_objects/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; before the comparison is made.</source>
          <target state="translated">Стандартные операторы равенства ( &lt;code&gt;==&lt;/code&gt; и &lt;code&gt;!=&lt;/code&gt; ) Используют &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.3&quot;&gt;алгоритм&lt;/a&gt; сравнения абстрактного равенства для сравнения двух операндов. Если операнды относятся к разным типам, он попытается преобразовать их в один и тот же тип перед выполнением сравнения, например, в выражении &lt;code&gt;5 == '5'&lt;/code&gt; строка справа преобразуется в &lt;a href=&quot;../global_objects/number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; перед выполнением сравнения.</target>
        </trans-unit>
        <trans-unit id="7d699ff1d0ad15f8264d303c6785a6e283211757" translate="yes" xml:space="preserve">
          <source>The standard import syntax is static and will always result in all code in the imported module being evaluated at load time. In situations where you wish to load a module conditionally or on demand, you can use a dynamic import instead. The following are some reasons why you might need to use dynamic import:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74b19f4ceb5276ec846feec252ca8825e9367b4" translate="yes" xml:space="preserve">
          <source>The standard string representation of a date time string is a simplification of the ISO 8601 calendar date extended format. (See the section &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-date-time-string-format&quot;&gt;Date Time String Format&lt;/a&gt; in the ECMAScript specification for more details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0898b091e1d3ad98c99f7c945505cae7f09588f" translate="yes" xml:space="preserve">
          <source>The statements comprising the body of the function.</source>
          <target state="translated">Заявления,составляющие тело функции.</target>
        </trans-unit>
        <trans-unit id="5292df8522a93b76d66c5a4afeb6f245ff0ab8ec" translate="yes" xml:space="preserve">
          <source>The statements comprising the body of the function. The &lt;code&gt;await&lt;/code&gt; mechanism may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fda11c0a9bea9de1bd840d175d6e7282612347e8" translate="yes" xml:space="preserve">
          <source>The statements to be executed.</source>
          <target state="translated">Заявления,которые должны быть выполнены.</target>
        </trans-unit>
        <trans-unit id="0b7cace5e0a90d7bf7b781a74edd8bfb1a682291" translate="yes" xml:space="preserve">
          <source>The statements which comprise the body of the function.</source>
          <target state="translated">Заявления,составляющие основную часть функции.</target>
        </trans-unit>
        <trans-unit id="af2de8cd4975cbac3f2c6514c3154e49561e8f73" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;ArrayBuffer.transfer()&lt;/strong&gt;&lt;/code&gt; method returns a new &lt;code&gt;ArrayBuffer&lt;/code&gt; whose contents have been taken from the &lt;code&gt;oldBuffer&lt;/code&gt;'s data and then is either truncated or zero-extended by &lt;code&gt;newByteLength&lt;/code&gt;. If &lt;code&gt;newByteLength&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;, the &lt;code&gt;byteLength&lt;/code&gt; of the &lt;code&gt;oldBuffer&lt;/code&gt; is used. This operation leaves &lt;code&gt;oldBuffer&lt;/code&gt; in a detached state.</source>
          <target state="translated">Статический &lt;code&gt;&lt;strong&gt;ArrayBuffer.transfer()&lt;/strong&gt;&lt;/code&gt; возвращает новый &lt;code&gt;ArrayBuffer&lt;/code&gt; , содержимое которого было взято из данных &lt;code&gt;oldBuffer&lt;/code&gt; , а затем либо усекается, либо расширяется &lt;code&gt;newByteLength&lt;/code&gt; помощью newByteLength . Если &lt;code&gt;newByteLength&lt;/code&gt; является &lt;code&gt;undefined&lt;/code&gt; , то &lt;code&gt;byteLength&lt;/code&gt; из &lt;code&gt;oldBuffer&lt;/code&gt; используется. Эта операция оставляет &lt;code&gt;oldBuffer&lt;/code&gt; в отключенном состоянии.</target>
        </trans-unit>
        <trans-unit id="fec0e30534f8672c0605f775fb24680275b23217" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.add()&lt;/code&gt; method adds a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.add()&lt;/code&gt; добавляет заданное значение в заданную позицию в массиве и возвращает старое значение в этой позиции. Эта атомарная операция гарантирует, что никакая другая запись не произойдет, пока измененное значение не будет записано обратно.</target>
        </trans-unit>
        <trans-unit id="f0011b0ab0dfc8540c68447b4bdccd149dfa154e" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.and()&lt;/code&gt; method computes a bitwise AND with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.and()&lt;/code&gt; вычисляет побитовое И с заданным значением в заданной позиции в массиве и возвращает старое значение в этой позиции. Эта атомарная операция гарантирует, что никакая другая запись не произойдет, пока измененное значение не будет записано обратно.</target>
        </trans-unit>
        <trans-unit id="af50eef77235e45ea0e39a742ebfb44f0032d99d" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.compareExchange()&lt;/code&gt; method exchanges a given replacement value at a given position in the array, if a given expected value equals the old value. It returns the old value at that position whether it was equal to the expected value or not. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.compareExchange()&lt;/code&gt; обменивает заданное значение замены в заданной позиции в массиве, если заданное ожидаемое значение равно старому значению. Он возвращает старое значение в этой позиции независимо от того, было ли оно равным ожидаемому значению или нет. Эта атомарная операция гарантирует, что никакая другая запись не произойдет, пока измененное значение не будет записано обратно.</target>
        </trans-unit>
        <trans-unit id="58f2eaed64525110a07c2c9298d09c022135db54" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.isLockFree()&lt;/code&gt; method is used to determine whether to use locks or atomic operations. It returns &lt;code&gt;true&lt;/code&gt;, if the given size is one of the &lt;a href=&quot;../typedarray/bytes_per_element&quot;&gt;BYTES_PER_ELEMENT&lt;/a&gt; property of integer TypedArray types.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.isLockFree()&lt;/code&gt; используется для определения того, следует ли использовать блокировки или атомарные операции. Она возвращает &lt;code&gt;true&lt;/code&gt; , если данный размер является одним из &lt;a href=&quot;../typedarray/bytes_per_element&quot;&gt;BYTES_PER_ELEMENT&lt;/a&gt; имущества целочисленных типов TypedArray.</target>
        </trans-unit>
        <trans-unit id="2c7f01f3104d4a107eb890565aaa201bffb09a01" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.load()&lt;/code&gt; method returns a value at a given position in the array.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.load()&lt;/code&gt; возвращает значение в заданной позиции в массиве.</target>
        </trans-unit>
        <trans-unit id="6462b2d9d930792381152b80f1427f0c1f7cca14" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.notify()&lt;/code&gt; method notifies up some agents that are sleeping in the wait queue.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.notify()&lt;/code&gt; уведомляет некоторых агентов, которые спят в очереди ожидания.</target>
        </trans-unit>
        <trans-unit id="4205b3973e84d519136144d4c8b46564efb27293" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.or()&lt;/code&gt; method computes a bitwise OR with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.or()&lt;/code&gt; вычисляет побитовое ИЛИ с заданным значением в заданной позиции в массиве и возвращает старое значение в этой позиции. Эта атомарная операция гарантирует, что никакая другая запись не произойдет, пока измененное значение не будет записано обратно.</target>
        </trans-unit>
        <trans-unit id="efe340e63eb2088c81d321b80a5d5d3af5868809" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.store()&lt;/code&gt; method stores a given value at the given position in the array and returns that value.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.store()&lt;/code&gt; сохраняет заданное значение в заданной позиции в массиве и возвращает это значение.</target>
        </trans-unit>
        <trans-unit id="cb854a5e6cbf84d6e52a0b31506ec682b29c7455" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.sub()&lt;/code&gt; method substracts a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.sub()&lt;/code&gt; вычитает заданное значение в заданной позиции в массиве и возвращает старое значение в этой позиции. Эта атомарная операция гарантирует, что никакая другая запись не произойдет, пока измененное значение не будет записано обратно.</target>
        </trans-unit>
        <trans-unit id="c927740464da9faa8686eae4c067cde1cdfe2a34" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.wait()&lt;/code&gt; method verifies that a given position in an &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; still contains a given value and if so sleeps, awaiting a wakeup or a timeout. It returns a string which is either &quot;&lt;code&gt;ok&lt;/code&gt;&quot;, &quot;&lt;code&gt;not-equal&lt;/code&gt;&quot;, or &quot;&lt;code&gt;timed-out&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b05055b84702f2556852087e51e5debed0fb92" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.wait()&lt;/code&gt; method verifies that a given position in an &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; still contains a given value and if so sleeps, awaiting a wakeup or a timeout. It returns a string which is either &lt;code&gt;&quot;ok&quot;&lt;/code&gt;, &lt;code&gt;&quot;not-equal&quot;&lt;/code&gt;, or &lt;code&gt;&quot;timed-out&quot;&lt;/code&gt;.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.wait()&lt;/code&gt; проверяет, что данная позиция в &lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt; все еще содержит заданное значение, и если да, то спит, ожидая пробуждения или тайм-аута. Он возвращает строку, которая имеет значение &lt;code&gt;&quot;ok&quot;&lt;/code&gt; , &lt;code&gt;&quot;not-equal&quot;&lt;/code&gt; или &lt;code&gt;&quot;timed-out&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67be5710c39f4a140b1b493763c08a3e3d826875" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.xor()&lt;/code&gt; method computes a bitwise XOR with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Atomics&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.xor()&lt;/code&gt; вычисляет побитовое исключающее ИЛИ с заданным значением в заданной позиции в массиве и возвращает старое значение в этой позиции. Эта атомарная операция гарантирует, что никакая другая запись не произойдет, пока измененное значение не будет записано обратно.</target>
        </trans-unit>
        <trans-unit id="7db98a25f456e5329b9fde7e474cdb5208a2b6d7" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect.construct()&lt;/strong&gt;&lt;/code&gt; method acts like the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator, but as a function. It is equivalent to calling &lt;code&gt;new target(...args)&lt;/code&gt;. It gives also the added option to specify a different prototype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ab58b2a2d76388fc95d13db70d0161ffceab73" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.apply()&lt;/code&gt; method calls a target function with arguments as specified.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.apply()&lt;/code&gt; вызывает целевую функцию с указанными аргументами.</target>
        </trans-unit>
        <trans-unit id="e60a81890510d63e2d6ef8c32ffb1e9b9ecc1c1c" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.construct()&lt;/code&gt; method acts like the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt;, but as a function. It is equivalent to calling &lt;code&gt;new target(...args)&lt;/code&gt;. It gives also the added option to specify a different prototype.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.construct()&lt;/code&gt; действует как &lt;a href=&quot;../../operators/new&quot;&gt;оператор &lt;/a&gt; &lt;code&gt;new&lt;/code&gt; , но как функция. Это эквивалентно вызову &lt;code&gt;new target(...args)&lt;/code&gt; . Он также дает дополнительную возможность указать другой прототип.</target>
        </trans-unit>
        <trans-unit id="017fa157ac61b53401f5cb2e6e3640d24750e2f0" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.defineProperty()&lt;/code&gt; method is like &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; but returns a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.defineProperty()&lt;/code&gt; похож на &lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; но возвращает &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f6d363c497e88472a0e66be0b359cea42ef4a3cd" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.deleteProperty()&lt;/code&gt; method allows to delete properties. It is like the &lt;a href=&quot;../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt; operator&lt;/a&gt; as a function.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.deleteProperty()&lt;/code&gt; позволяет удалять свойства. Это похоже на &lt;a href=&quot;../../operators/delete&quot;&gt;оператор &lt;/a&gt; &lt;code&gt;delete&lt;/code&gt; как функцию.</target>
        </trans-unit>
        <trans-unit id="f420cd260cbc503b3ed49d8a8602567c43f99e33" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.getOwnPropertyDescriptor()&lt;/code&gt; method is similar to &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;. It returns a property descriptor of the given property if it exists on the object, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.getOwnPropertyDescriptor()&lt;/code&gt; аналогичен &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; . Он возвращает дескриптор свойства данного свойства, если он существует в объекте, в противном случае &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f594507dfbe84df768deb14a1430e696aec3e282" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.getPrototypeOf()&lt;/code&gt; method is almost the same method as &lt;a href=&quot;../object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;&lt;/a&gt;. It returns the prototype (i.e. the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.getPrototypeOf()&lt;/code&gt; почти такой же, как &lt;a href=&quot;../object/getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;/a&gt; . Он возвращает прототип (т.е. значение внутреннего свойства &lt;code&gt;[[Prototype]]&lt;/code&gt; ) указанного объекта.</target>
        </trans-unit>
        <trans-unit id="96117f1bdab8ca07b755f3c9d1f770485254a893" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.has()&lt;/code&gt; method works like the &lt;a href=&quot;../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; as a function.</source>
          <target state="translated">Статический &lt;code&gt;.has()&lt;/code&gt; &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; .has () работает как &lt;a href=&quot;../../operators/in&quot;&gt;оператор &lt;/a&gt; &lt;code&gt;in&lt;/code&gt; как функция.</target>
        </trans-unit>
        <trans-unit id="61cfa4955f0ed6f84455e3714e51e58a202da52e" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.isExtensible()&lt;/code&gt; method determines if an object is extensible (whether it can have new properties added to it). It is similar to &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;, but with some &lt;a href=&quot;#Difference_to_Object.isExtensible()&quot;&gt;differences&lt;/a&gt;.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.isExtensible()&lt;/code&gt; определяет, является ли объект расширяемым (можно ли добавлять к нему новые свойства). Он похож на &lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; , но с некоторыми &lt;a href=&quot;#Difference_to_Object.isExtensible()&quot;&gt;отличиями&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82fbabb68637650603a621e6e651e1c535e33c57" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.ownKeys()&lt;/code&gt; method returns an array of the &lt;code&gt;target&lt;/code&gt; object's own property keys.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.ownKeys()&lt;/code&gt; возвращает массив ключей собственных свойств &lt;code&gt;target&lt;/code&gt; объекта.</target>
        </trans-unit>
        <trans-unit id="2a57630937594eb73d149839935552dede20e9c9" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.preventExtensions()&lt;/code&gt; method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object). It is similar to &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, but with some &lt;a href=&quot;#Difference_to_Object.preventExtensions()&quot;&gt;differences&lt;/a&gt;.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.preventExtensions()&lt;/code&gt; предотвращает добавление новых свойств к объекту (т.е. предотвращает будущие расширения объекта). Он похож на &lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; , но с некоторыми &lt;a href=&quot;#Difference_to_Object.preventExtensions()&quot;&gt;отличиями&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebdbba77dbd45f91cdb48da11c97627eee7d9438" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.set()&lt;/code&gt; method works like setting a property on an object.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.set()&lt;/code&gt; работает как установка свойства объекта.</target>
        </trans-unit>
        <trans-unit id="50dd64d4dfc656df46a7e0f060d23ece0a78b434" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.setPrototypeOf()&lt;/code&gt; method is the same method as &lt;a href=&quot;../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;. It sets the prototype (i.e., the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of a specified object to another object or to &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Reflect&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.setPrototypeOf()&lt;/code&gt; - это тот же метод, что и &lt;a href=&quot;../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; . Он устанавливает прототип (т. Е. Внутреннее свойство &lt;code&gt;[[Prototype]]&lt;/code&gt; ) указанного объекта на другой объект или на &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0eb93af43f589b80cf5a285f46fcba25eb100d45" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;import&lt;/strong&gt;&lt;/code&gt; statement is used to import bindings which are exported by another module. Imported modules are in &lt;a href=&quot;../strict_mode&quot;&gt;&lt;code&gt;strict&amp;nbsp;mode&lt;/code&gt;&lt;/a&gt; whether you declare them as such or not. The &lt;code&gt;import&lt;/code&gt; statement cannot be used in embedded scripts unless such script has a &lt;code&gt;type=&quot;module&quot;&lt;/code&gt;.</source>
          <target state="translated">Оператор статического &lt;code&gt;&lt;strong&gt;import&lt;/strong&gt;&lt;/code&gt; используется для импорта привязок, которые экспортируются другим модулем. Импортированные модули находятся в &lt;a href=&quot;../strict_mode&quot;&gt; &lt;code&gt;strict&amp;nbsp;mode&lt;/code&gt; &lt;/a&gt; независимо от того, объявляете вы их как таковые или нет. Оператор &lt;code&gt;import&lt;/code&gt; не может использоваться во встроенных сценариях, если такой сценарий не имеет &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9813705cf188dd5f254d0eaadbddf65400aead3a" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;&lt;strong&gt;import&lt;/strong&gt;&lt;/code&gt; statement is used to import read only live bindings which are &lt;a href=&quot;export&quot;&gt;exported&lt;/a&gt; by another module. Imported modules are in &lt;a href=&quot;../strict_mode&quot;&gt;&lt;code&gt;strict&amp;nbsp;mode&lt;/code&gt;&lt;/a&gt; whether you declare them as such or not. The &lt;code&gt;import&lt;/code&gt; statement cannot be used in embedded scripts unless such script has a &lt;code&gt;type=&quot;module&quot;&lt;/code&gt;. Bindings imported are called live bindings because they are updated by the module that exported the binding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d868ba88128cfe2f4dfb6b316e888ebde89b296b" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Atomics.exchange()&lt;/code&gt; method stores a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens between the read of the old value and the write of the new value.</source>
          <target state="translated">Статический &lt;code&gt;Atomics.exchange()&lt;/code&gt; сохраняет заданное значение в заданной позиции в массиве и возвращает старое значение в этой позиции. Эта атомарная операция гарантирует, что никакая другая запись не произойдет между чтением старого значения и записью нового значения.</target>
        </trans-unit>
        <trans-unit id="0a9226ec84e2dacebdb4c2616163cd54f9d3d2e3" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Atomics.sub()&lt;/code&gt; method substracts a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88bf7eb33c64a57d801dd3379b0fe4e960df80f" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Date.now()&lt;/code&gt; method returns the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cff4455395e8d7a453784b6672e9138e0133455" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Promise.reject&lt;/code&gt; function returns a &lt;code&gt;Promise&lt;/code&gt; that is rejected. For debugging purposes and selective error catching, it is useful to make &lt;code&gt;reason&lt;/code&gt; an &lt;code&gt;instanceof&lt;/code&gt;&lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Статическая функция &lt;code&gt;Promise.reject&lt;/code&gt; возвращает отклоненное &lt;code&gt;Promise&lt;/code&gt; . Для целей отладки и выборочного обнаружения &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; полезно сделать &lt;code&gt;reason&lt;/code&gt; &lt;code&gt;instanceof&lt;/code&gt; Error .</target>
        </trans-unit>
        <trans-unit id="90cfd1ce17a09ece2532de9bbc2ae9d0f2bfb7c8" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Promise.resolve&lt;/code&gt; function returns a &lt;code&gt;Promise&lt;/code&gt; that is resolved.</source>
          <target state="translated">Статическая функция &lt;code&gt;Promise.resolve&lt;/code&gt; возвращает выполненное &lt;code&gt;Promise&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a21d42d17a2f572741533ffa8f2117a5682e671e" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.apply()&lt;/code&gt; method calls a target function with arguments as specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a62d545267d57e38fd5cd02b700c84afe8a7849" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.defineProperty()&lt;/code&gt; method is like &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; but returns a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf9541750336db1ef3f90e685a8a5bb35fefbdc" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.get()&lt;/code&gt; method works like getting a property from an object (&lt;code&gt;target[propertyKey]&lt;/code&gt;) as a function.</source>
          <target state="translated">Статический &lt;code&gt;Reflect.get()&lt;/code&gt; работает как получение свойства из объекта ( &lt;code&gt;target[propertyKey]&lt;/code&gt; ) как функции.</target>
        </trans-unit>
        <trans-unit id="e750705252caaefca2d5abe6183fc3318b43bae0" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.getOwnPropertyDescriptor()&lt;/code&gt; method is similar to &lt;a href=&quot;../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;. It returns a property descriptor of the given property if it exists on the object, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20a0bb46eb2f22b838e2e9fade5a9bb9eb3a74ca" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.getPrototypeOf()&lt;/code&gt; method is almost the same method as &lt;a href=&quot;../object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;&lt;/a&gt;. It returns the prototype (i.e. the value of the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7e4ee25c18939f40d68d9058ec9f5333cb752a" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.has()&lt;/code&gt; method works like the &lt;a href=&quot;../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; as a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db233c270f8979d1b5c3ef2bbd6d81eac167e17" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.isExtensible()&lt;/code&gt; method determines if an object is extensible (whether it can have new properties added to it). It is similar to &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;, but with some &lt;a href=&quot;#Difference_to_Object.isExtensible&quot;&gt;differences&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7328ff6cc40d7fecd957bafa030946ffe71bbe" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.ownKeys()&lt;/code&gt; method returns an array of the &lt;code&gt;target&lt;/code&gt; object's own property keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee721d282e35985c5967bb8bc2a21bcac8e8779" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.preventExtensions()&lt;/code&gt; method prevents new properties from ever being added to an object (i.e., prevents future extensions to the object). It is similar to &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;, but with some &lt;a href=&quot;#Difference_from_Object.preventExtensions&quot;&gt;differences&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91735f1b96d2f17ae9d4b0083013a69e083cb2d9" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.set()&lt;/code&gt; method works like setting a property on an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2383c9f6d48cdefe68ddd4c9c98beb354c09aa6" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;Reflect.setPrototypeOf()&lt;/code&gt; method is the same method as &lt;a href=&quot;../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;, except for its return type. It sets the prototype (i.e., the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of a specified object to another object or to &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, and returns &lt;code&gt;true&lt;/code&gt; if the operation was successful, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0764467d102945b22b05fd0dad760b35aee367ab" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;String.fromCharCode()&lt;/code&gt; method returns a string created from the specified sequence of UTF-16 code units.</source>
          <target state="translated">Статический &lt;code&gt;String.fromCharCode()&lt;/code&gt; возвращает строку, созданную из указанной последовательности единиц кода UTF-16.</target>
        </trans-unit>
        <trans-unit id="b69a85724fb361ca15f0c31e4a0e03ac87c2298f" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;String.fromCodePoint()&lt;/code&gt; method returns a string created by using the specified sequence of code points.</source>
          <target state="translated">Статический &lt;code&gt;String.fromCodePoint()&lt;/code&gt; возвращает строку, созданную с использованием указанной последовательности кодовых точек.</target>
        </trans-unit>
        <trans-unit id="5a1164088adaed231a8d0365747029a7565e0723" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;String.raw()&lt;/code&gt; method is a tag function of &lt;a href=&quot;../../template_literals&quot;&gt;template literals&lt;/a&gt;, similar to the &lt;code&gt;r&lt;/code&gt; prefix in Python or the &lt;code&gt;@&lt;/code&gt; prefix in C# for string literals (yet there is a difference: see explanations in &lt;a href=&quot;https://bugs.chromium.org/p/v8/issues/detail?id=5016&quot;&gt;this issue&lt;/a&gt;). It's used to get the raw string form of template strings, that is, substitutions (e.g. ${foo}) are processed, but escapes (e.g. &lt;code&gt;\n&lt;/code&gt;) are not.</source>
          <target state="translated">Статический &lt;code&gt;String.raw()&lt;/code&gt; - это функция тега &lt;a href=&quot;../../template_literals&quot;&gt;шаблонных литералов&lt;/a&gt; , аналогичная префиксу &lt;code&gt;r&lt;/code&gt; в Python или префиксу &lt;code&gt;@&lt;/code&gt; в C # для строковых литералов (но есть разница: см. Пояснения в &lt;a href=&quot;https://bugs.chromium.org/p/v8/issues/detail?id=5016&quot;&gt;этом выпуске&lt;/a&gt; ). Он используется для получения необработанной строковой формы шаблонных строк, то есть подстановки (например, $ {foo}) обрабатываются, а escape-последовательности (например, &lt;code&gt;\n&lt;/code&gt; ) - нет.</target>
        </trans-unit>
        <trans-unit id="c01b8c9ffec8417a0f29a178c90e8903bce9ce58" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;String.raw()&lt;/code&gt; method is a tag function of &lt;a href=&quot;../../template_literals&quot;&gt;template literals&lt;/a&gt;. This is &lt;em&gt;similar&lt;/em&gt; to the &lt;code&gt;r&lt;/code&gt; prefix in Python, or the &lt;code&gt;@&lt;/code&gt; prefix in C# for string literals. (But it is not &lt;em&gt;identical&lt;/em&gt;; see explanations in &lt;a href=&quot;https://bugs.chromium.org/p/v8/issues/detail?id=5016&quot;&gt;this issue&lt;/a&gt;.) It's used to get the raw string form of template strings, that is, substitutions (e.g. &lt;code&gt;${foo}&lt;/code&gt;) are processed, but escapes (e.g. &lt;code&gt;\n&lt;/code&gt;) are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ea9e9db5e6fe0dea4d47b272e5aa77aa474da1" translate="yes" xml:space="preserve">
          <source>The static function &lt;code&gt;&lt;strong&gt;Math.min()&lt;/strong&gt;&lt;/code&gt; returns the lowest-valued number passed into it, or &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if any parameter isn't a number and can't be converted into one.</source>
          <target state="translated">Статическая функция &lt;code&gt;&lt;strong&gt;Math.min()&lt;/strong&gt;&lt;/code&gt; возвращает переданное ей число с наименьшим значением или &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; ,&lt;/a&gt; если какой-либо параметр не является числом и не может быть преобразован в единицу.</target>
        </trans-unit>
        <trans-unit id="343f98c933105ceddb9c93f3821cb9a718c16e0c" translate="yes" xml:space="preserve">
          <source>The static function &lt;code&gt;Math.min()&lt;/code&gt; returns the lowest-valued number passed into it, or &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if any parameter isn't a number and can't be converted into one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29631328836304ccf3e2ce47dd6de68f5579f442" translate="yes" xml:space="preserve">
          <source>The static method &lt;code&gt;&lt;strong&gt;Object.defineProperty()&lt;/strong&gt;&lt;/code&gt; defines a new property directly on an object, or modifies an existing property on an object, and returns the object.</source>
          <target state="translated">Статический метод &lt;code&gt;&lt;strong&gt;Object.defineProperty()&lt;/strong&gt;&lt;/code&gt; определяет новое свойство непосредственно для объекта или изменяет существующее свойство для объекта и возвращает объект.</target>
        </trans-unit>
        <trans-unit id="a47f0ebd85e4368447733e4227d60e812ee3637b" translate="yes" xml:space="preserve">
          <source>The static property &lt;code&gt;String.length&lt;/code&gt; is unrelated to the length of strings, it's the arity of the &lt;code&gt;String&lt;/code&gt; function (loosely, the number of formal parameters it has), which is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2c8d431cfc97f7ef0dad5eb64f02608a89c081" translate="yes" xml:space="preserve">
          <source>The static property &lt;code&gt;String.length&lt;/code&gt; returns the value 1.</source>
          <target state="translated">Статическое свойство &lt;code&gt;String.length&lt;/code&gt; возвращает значение 1.</target>
        </trans-unit>
        <trans-unit id="d9489b7724c11a3e7506bfd4efd8ea6899a4157a" translate="yes" xml:space="preserve">
          <source>The strict equality operators (&lt;code&gt;===&lt;/code&gt; and &lt;code&gt;!==&lt;/code&gt;) use the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.6&quot;&gt;Strict Equality Comparison Algorithm&lt;/a&gt; and are intended for performing equality comparisons on operands of the same type. If the operands are of different types, the result is always &lt;code&gt;false&lt;/code&gt; so &lt;code&gt;5 !== '5'&lt;/code&gt;.</source>
          <target state="translated">Операторы строгого равенства ( &lt;code&gt;===&lt;/code&gt; и &lt;code&gt;!==&lt;/code&gt; ) используют &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-11.9.6&quot;&gt;алгоритм сравнения строгого равенства&lt;/a&gt; и предназначены для выполнения сравнения на равенство операндов одного и того же типа. Если операнды имеют разные типы, результат всегда &lt;code&gt;false&lt;/code&gt; поэтому &lt;code&gt;5 !== '5'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c891432614e0271990b19ee19c1960c4f7ed000" translate="yes" xml:space="preserve">
          <source>The string &quot;GMT&quot;</source>
          <target state="translated">Строка &quot;GMT&quot;</target>
        </trans-unit>
        <trans-unit id="6088cf870949b49d36a431015f841c203f32b399" translate="yes" xml:space="preserve">
          <source>The string against which the &lt;code&gt;&lt;var&gt;referenceStr&lt;/var&gt;&lt;/code&gt; is compared.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2dee8a6f09197d3ef866b17c4fd784a8a2c4b5" translate="yes" xml:space="preserve">
          <source>The string against which the referring string is compared</source>
          <target state="translated">Строка,с которой сравнивается ссылочная строка</target>
        </trans-unit>
        <trans-unit id="468533e087e1f94dc468f647db1085e7614cb88f" translate="yes" xml:space="preserve">
          <source>The string against which to match the regular expression.</source>
          <target state="translated">Строка,которой соответствует регулярное выражение.</target>
        </trans-unit>
        <trans-unit id="8791aa250b59014327c5ae3d1bec5e5e7b33faa7" translate="yes" xml:space="preserve">
          <source>The string conversions of all array elements are joined into one string.</source>
          <target state="translated">Строковые преобразования всех элементов массива объединяются в одну строку.</target>
        </trans-unit>
        <trans-unit id="083e61e70ae1931edd0dd9b748da358341d4a05c" translate="yes" xml:space="preserve">
          <source>The string name of the desired custom section.</source>
          <target state="translated">Строковое имя нужного пользовательского раздела.</target>
        </trans-unit>
        <trans-unit id="0499197d0f18f7e883f893ecbdf08eba61358189" translate="yes" xml:space="preserve">
          <source>The string to pad the current &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; with. If &lt;code&gt;&lt;var&gt;padString&lt;/var&gt;&lt;/code&gt; is too long to stay within &lt;code&gt;&lt;var&gt;targetLength&lt;/var&gt;&lt;/code&gt;, it will be truncated: for left-to-right languages the left-most part and for right-to-left languages the right-most will be applied. The default value for this parameter is &quot;&quot; (&lt;code&gt;U+0020&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3634ae755e3cc6172656cbc241422c078eafe53e" translate="yes" xml:space="preserve">
          <source>The string to pad the current &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; with. If &lt;code&gt;&lt;var&gt;padString&lt;/var&gt;&lt;/code&gt; is too long to stay within the &lt;code&gt;&lt;var&gt;targetLength&lt;/var&gt;&lt;/code&gt;, it will be truncated from the end. The default value is &lt;code&gt;&quot; &quot;&lt;/code&gt; (&lt;code&gt;U+0020 'SPACE'&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8949040080f63f417888c8f3d4b5caca1e95b9d2" translate="yes" xml:space="preserve">
          <source>The string to pad the current string with. If this padding string is too long to stay within the &lt;code&gt;targetLength&lt;/code&gt;, it will be truncated from the right. The default value is &lt;code&gt;&quot; &quot;&lt;/code&gt; (U+0020 'SPACE').</source>
          <target state="translated">Строка, которой нужно дополнить текущую строку. Если эта строка заполнения слишком длинна, чтобы оставаться в пределах &lt;code&gt;targetLength&lt;/code&gt; , она будет обрезана справа. Значение по умолчанию - &lt;code&gt;&quot; &quot;&lt;/code&gt; (U + 0020 'ПРОБЕЛ').</target>
        </trans-unit>
        <trans-unit id="3ae9c2ba9c07edac725622631c539ef4861220e2" translate="yes" xml:space="preserve">
          <source>The string to pad the current string with. If this string is too long to stay within the target length, it will be truncated and the left-most part will be applied. The default value for this parameter is &quot; &quot; (U+0020).</source>
          <target state="translated">Строка,которой можно подкрепить текущую строку.Если эта строка слишком длинная,чтобы остаться в пределах заданной длины,она будет усечена,и будет применена крайняя левая часть.Значением по умолчанию для этого параметра является &quot; &quot; (U+0020).</target>
        </trans-unit>
        <trans-unit id="6eb20efa8147914bead5cc85faabfd37b0a79ce2" translate="yes" xml:space="preserve">
          <source>The string to parse as JSON. See the &lt;a href=&quot;../json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt; object for a description of JSON syntax.</source>
          <target state="translated">Строка для анализа как JSON. См. Описание синтаксиса &lt;a href=&quot;../json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; в&lt;/a&gt; объекте JSON.</target>
        </trans-unit>
        <trans-unit id="ece383f4f046e3b10b8fdb40e94943fce8defe5f" translate="yes" xml:space="preserve">
          <source>The string used for separating date and time values, for example &lt;code&gt;&quot;/&quot;&lt;/code&gt;, &lt;code&gt;&quot;,&quot;&lt;/code&gt;, &lt;code&gt;&quot;o'clock&quot;&lt;/code&gt;, &lt;code&gt;&quot;de&quot;&lt;/code&gt;, etc.</source>
          <target state="translated">Строка, используемая для разделения значений даты и времени, например &lt;code&gt;&quot;/&quot;&lt;/code&gt; , &lt;code&gt;&quot;,&quot;&lt;/code&gt; , &lt;code&gt;&quot;o'clock&quot;&lt;/code&gt; , &lt;code&gt;&quot;de&quot;&lt;/code&gt; и т. Д.</target>
        </trans-unit>
        <trans-unit id="97c70adf07ed6fe421e6ab3aea9f6e11b32d0bad" translate="yes" xml:space="preserve">
          <source>The string used for the day period, for example, &lt;code&gt;&quot;AM&quot;&lt;/code&gt; or &lt;code&gt;&quot;PM&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для периода дня, например &lt;code&gt;&quot;AM&quot;&lt;/code&gt; или &lt;code&gt;&quot;PM&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eea68f2b6d4f128ec3670c07ba8f52cfffd311f9" translate="yes" xml:space="preserve">
          <source>The string used for the day, for example &lt;code&gt;&quot;17&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для дня, например &lt;code&gt;&quot;17&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7b7a19d8ba4def5ebc35fa32d9269cd27826d41" translate="yes" xml:space="preserve">
          <source>The string used for the era, for example &lt;code&gt;&quot;BC&quot;&lt;/code&gt; or &lt;code&gt;&quot;AD&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, обозначающая эпоху, например &lt;code&gt;&quot;BC&quot;&lt;/code&gt; или &lt;code&gt;&quot;AD&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e759f6fbbacc6f99271187d7be9864bc5915384e" translate="yes" xml:space="preserve">
          <source>The string used for the hour, for example &lt;code&gt;&quot;3&quot;&lt;/code&gt; or &lt;code&gt;&quot;03&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для часа, например &lt;code&gt;&quot;3&quot;&lt;/code&gt; или &lt;code&gt;&quot;03&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c164fc6c65c7700fa960520236c816173fcc5617" translate="yes" xml:space="preserve">
          <source>The string used for the minute, for example &lt;code&gt;&quot;00&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для минуты, например &lt;code&gt;&quot;00&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60ec32bec7d9d2a13914ab52ebda2d26f201b9c4" translate="yes" xml:space="preserve">
          <source>The string used for the month, for example &lt;code&gt;&quot;12&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для месяца, например &lt;code&gt;&quot;12&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d19840cd065c09bec79def64ce95d20a60fb6ef" translate="yes" xml:space="preserve">
          <source>The string used for the name of the time zone, for example &lt;code&gt;&quot;UTC&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для названия часового пояса, например &lt;code&gt;&quot;UTC&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1d68127d11a219f5babe3c20efc89826607e6f8" translate="yes" xml:space="preserve">
          <source>The string used for the second, for example &lt;code&gt;&quot;07&quot;&lt;/code&gt; or &lt;code&gt;&quot;42&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для второго, например &lt;code&gt;&quot;07&quot;&lt;/code&gt; или &lt;code&gt;&quot;42&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d38a4ade74d0ab4b893963b67d1cb09d9f2a404" translate="yes" xml:space="preserve">
          <source>The string used for the weekday, for example &lt;code&gt;&quot;M&quot;&lt;/code&gt;, &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;, or &lt;code&gt;&quot;Montag&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для дня недели, например &lt;code&gt;&quot;M&quot;&lt;/code&gt; , &lt;code&gt;&quot;Monday&quot;&lt;/code&gt; или &lt;code&gt;&quot;Montag&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ae2ae8cd920d70f01746ef457540b120762ad06a" translate="yes" xml:space="preserve">
          <source>The string used for the year, for example &lt;code&gt;&quot;2012&quot;&lt;/code&gt; or &lt;code&gt;&quot;96&quot;&lt;/code&gt;.</source>
          <target state="translated">Строка, используемая для года, например &lt;code&gt;&quot;2012&quot;&lt;/code&gt; или &lt;code&gt;&quot;96&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86421d2891f0d5bb6fd879465cb16df8ec5f0662" translate="yes" xml:space="preserve">
          <source>The string value to search for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bdde92d3cbeffaa082f651f11b497fa77b8fd2" translate="yes" xml:space="preserve">
          <source>The strings to compare against each other.</source>
          <target state="translated">Строки для сравнения друг с другом.</target>
        </trans-unit>
        <trans-unit id="f492cc4dc8b9f08a8ef3581852dc08ee1c45a4bb" translate="yes" xml:space="preserve">
          <source>The structured clone algorithm accepts &lt;code&gt;SharedArrayBuffers&lt;/code&gt; and &lt;code&gt;TypedArrays&lt;/code&gt; mapped onto &lt;code&gt;SharedArrayBuffers&lt;/code&gt;. In both cases, the &lt;code&gt;SharedArrayBuffer&lt;/code&gt; object is transmitted to the receiver resulting in a new, private SharedArrayBuffer object in the receiving agent (just as for &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;). However, the shared data block referenced by the two &lt;code&gt;SharedArrayBuffer&lt;/code&gt; objects is the same data block, and a side effect to the block in one agent will eventually become visible in the other agent.</source>
          <target state="translated">Алгоритм структурированного клонирования принимает &lt;code&gt;SharedArrayBuffers&lt;/code&gt; и &lt;code&gt;TypedArrays&lt;/code&gt; , отображенные на &lt;code&gt;SharedArrayBuffers&lt;/code&gt; . В обоих случаях объект &lt;code&gt;SharedArrayBuffer&lt;/code&gt; передается получателю, в результате чего в принимающем агенте создается новый частный объект SharedArrayBuffer (как и для &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; ). Однако общий блок данных, на который ссылаются два объекта &lt;code&gt;SharedArrayBuffer&lt;/code&gt; , является одним и тем же блоком данных, и побочный эффект блока в одном агенте в конечном итоге станет видимым в другом агенте.</target>
        </trans-unit>
        <trans-unit id="caf06e59dd9d3fd319181700e1588c2227e098f4" translate="yes" xml:space="preserve">
          <source>The subtags identifying languages, scripts, countries (regions), and (rarely used) variants in BCP 47 language tags can be found in the &lt;a href=&quot;http://www.iana.org/assignments/language-subtag-registry&quot;&gt;IANA Language Subtag Registry&lt;/a&gt;.</source>
          <target state="translated">Вложенные теги, идентифицирующие языки, сценарии, страны (регионы) и (редко используемые) варианты в языковых тегах BCP 47, можно найти в &lt;a href=&quot;http://www.iana.org/assignments/language-subtag-registry&quot;&gt;реестре языковых вложенных&lt;/a&gt; тегов IANA .</target>
        </trans-unit>
        <trans-unit id="a9423bac9c60cd258c03ee904fae2a893cde2301" translate="yes" xml:space="preserve">
          <source>The subtags identifying languages, scripts, regions (including countries), and (rarely used) variants in Unicode BCP 47 locale identifiers are registered in the &lt;a href=&quot;http://www.iana.org/assignments/language-subtag-registry&quot;&gt;IANA Language Subtag Registry&lt;/a&gt;. This registry is periodically updated over time, and implementations may not always be up to date, so be careful not to rely too much on tags being universally supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d96fc08252b76140c13df72ca13f6fd74626dbc" translate="yes" xml:space="preserve">
          <source>The subtraction assignment operator &lt;strong&gt;subtracts&lt;/strong&gt; the value of the right operand from a variable and assigns the result to the variable. See the &lt;a href=&quot;arithmetic_operators#Subtraction&quot;&gt;subtraction operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания &lt;strong&gt;вычитания вычитает&lt;/strong&gt; значение правого операнда из переменной и присваивает результат переменной. Подробнее об &lt;a href=&quot;arithmetic_operators#Subtraction&quot;&gt;операторе вычитания&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5a192606cd2379497ef7500778ef0dedd487da3" translate="yes" xml:space="preserve">
          <source>The subtraction operator subtracts the two operands, producing their difference.</source>
          <target state="translated">Оператор вычитания вычитает два операнда,производя их разность.</target>
        </trans-unit>
        <trans-unit id="e6dc35427b4f1231c395f42c780c2c32dc31571c" translate="yes" xml:space="preserve">
          <source>The syntax &lt;code&gt;&lt;em&gt;function&lt;/em&gt;.arguments&lt;/code&gt; is deprecated. The recommended way to access the &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object available within functions is simply to refer to the variable &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Синтаксическая &lt;code&gt;&lt;em&gt;function&lt;/em&gt;.arguments&lt;/code&gt; устарела. Рекомендуемый способ доступа к объекту &lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; доступному в функциях, - это просто сослаться на переменные &lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35225de91c22309587e0765dbda7a1b56bc3fa5c" translate="yes" xml:space="preserve">
          <source>The syntax consists of the keyword &lt;a href=&quot;import&quot;&gt;&lt;code&gt;import&lt;/code&gt;&lt;/a&gt;, a dot, and the identifier &lt;code&gt;meta&lt;/code&gt;. Normally the left-hand side of the dot is the object on which property access is performed, but here &lt;code&gt;import&lt;/code&gt; is not really an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661ebe8cbb257036b3bf53968d2ada79c762b25a" translate="yes" xml:space="preserve">
          <source>The tag function can then perform whatever operations on these arguments you wish, and return the manipulated string. (Alternatively, it can return something completely different, as described in one of the following examples.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccb74fcc0fb4fc59af8e4a4d10de9e91cf03e6f" translate="yes" xml:space="preserve">
          <source>The tangent of the given number.</source>
          <target state="translated">Касательная данного числа.</target>
        </trans-unit>
        <trans-unit id="469f21f213b41d308c8920db480a81cde33a180c" translate="yes" xml:space="preserve">
          <source>The target function to call.</source>
          <target state="translated">Целевая функция для вызова.</target>
        </trans-unit>
        <trans-unit id="7875ceec72aba0e247daa5bcc9e1dd435300c2d4" translate="yes" xml:space="preserve">
          <source>The target object &amp;mdash; what to apply the sources&amp;rsquo; properties to, which is returned after it is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cce84c44330816293f399e47c6565e41c09eab" translate="yes" xml:space="preserve">
          <source>The target object from which to get the own keys.</source>
          <target state="translated">Целевой объект,от которого можно получить собственные ключи.</target>
        </trans-unit>
        <trans-unit id="4e874cec897bdf6f3133cdf496c41e2ff9d741f9" translate="yes" xml:space="preserve">
          <source>The target object in which to look for the property.</source>
          <target state="translated">Объект,в котором нужно искать свойство.</target>
        </trans-unit>
        <trans-unit id="051b09e678e5463dcd53a2c00c66fcc5f1782088" translate="yes" xml:space="preserve">
          <source>The target object of which to get the prototype.</source>
          <target state="translated">Объект,целью которого является получение прототипа.</target>
        </trans-unit>
        <trans-unit id="3bdead44f0d65b55d04c7601b57d65563c409e3b" translate="yes" xml:space="preserve">
          <source>The target object of which to set the prototype.</source>
          <target state="translated">Объект,на который нужно установить прототип.</target>
        </trans-unit>
        <trans-unit id="bf0854843b5e6ba404edf72c5e026e5f2141d555" translate="yes" xml:space="preserve">
          <source>The target object on which to define the property.</source>
          <target state="translated">Целевой объект,на котором нужно определить свойство.</target>
        </trans-unit>
        <trans-unit id="675a5362df487c69972974a9c10fa55e04caf16c" translate="yes" xml:space="preserve">
          <source>The target object on which to delete the property.</source>
          <target state="translated">Целевой объект,на котором нужно удалить свойство.</target>
        </trans-unit>
        <trans-unit id="8b8960b4509e85a95deceb884878547ff861b0fd" translate="yes" xml:space="preserve">
          <source>The target object on which to get the property.</source>
          <target state="translated">Объект,на котором можно получить собственность.</target>
        </trans-unit>
        <trans-unit id="6616a2e8a46edcbbb895a56e27f583fe0a532ade" translate="yes" xml:space="preserve">
          <source>The target object on which to prevent extensions.</source>
          <target state="translated">Целевой объект,на котором можно предотвратить расширение.</target>
        </trans-unit>
        <trans-unit id="5a6cbb29e073667475e26ed91074bb4afb428091" translate="yes" xml:space="preserve">
          <source>The target object on which to set the property.</source>
          <target state="translated">Целевой объект,на котором нужно установить свойство.</target>
        </trans-unit>
        <trans-unit id="3dac858a5554f83564f7741da52fdb4a7aaf52dc" translate="yes" xml:space="preserve">
          <source>The target object which to check if it is extensible.</source>
          <target state="translated">Целевой объект,который должен проверить,является ли он расширяемым.</target>
        </trans-unit>
        <trans-unit id="ccd29524854cacce5352c71cfb138711774ab1b4" translate="yes" xml:space="preserve">
          <source>The target object.</source>
          <target state="translated">Целевой объект.</target>
        </trans-unit>
        <trans-unit id="040c0d8b033a7367e4036448381976cfc9922ebe" translate="yes" xml:space="preserve">
          <source>The target of the split operation.</source>
          <target state="translated">Цель сплит-операции.</target>
        </trans-unit>
        <trans-unit id="7a67583055232db8b491024de029833ccb0310ac" translate="yes" xml:space="preserve">
          <source>The temporal dead zone and &lt;code&gt;typeof&lt;/code&gt;</source>
          <target state="translated">Временная мертвая зона и &lt;code&gt;typeof&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af12426e57044936bc5a7828d384453e2f121825" translate="yes" xml:space="preserve">
          <source>The termination condition of a promise determines the &quot;settled&quot; state of the next promise in the chain. Any termination other than a &lt;code&gt;throw&lt;/code&gt; creates a &quot;resolved&quot; state while terminating with a &lt;code&gt;throw&lt;/code&gt; creates a &quot;rejected&quot; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824ca534e0a3140303d94cf320dfce9866fe7a67" translate="yes" xml:space="preserve">
          <source>The ternary operator is right-associative, which means it can be &quot;chained&quot; in the following way, similar to an &lt;code&gt;if &amp;hellip; else if &amp;hellip; else if &amp;hellip; else&lt;/code&gt; chain:</source>
          <target state="translated">Тернарный оператор является правоассоциативным, что означает, что его можно &amp;laquo;связать&amp;raquo; следующим образом, аналогично цепочке &lt;code&gt;if &amp;hellip; else if &amp;hellip; else if &amp;hellip; else&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f17ba73f80e0163509c9c072d0ed6e5856bb4cbe" translate="yes" xml:space="preserve">
          <source>The text of the pattern.</source>
          <target state="translated">Текст шаблона.</target>
        </trans-unit>
        <trans-unit id="e8bf802ef8806ed6f866faf091bb463b602b37d4" translate="yes" xml:space="preserve">
          <source>The text of the regular expression or, as of ES5, another RegExp object (or literal) to copy (the latter for the two RegExp constructor notations only).</source>
          <target state="translated">Текст регулярного выражения или,начиная с ES5,другого объекта RegExp (или буквального)для копирования (последний только для двух примечаний конструктора RegExp).</target>
        </trans-unit>
        <trans-unit id="50666938177ee823dfcefe3edcfba80d5469a3f9" translate="yes" xml:space="preserve">
          <source>The text of the regular expression.</source>
          <target state="translated">Текст регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="195791289d43b75e8e708dc661fc4d0ecceca467" translate="yes" xml:space="preserve">
          <source>The third argument is ignored by &lt;a href=&quot;../parseint&quot;&gt;&lt;code&gt;parseInt&lt;/code&gt;&lt;/a&gt;&amp;mdash;but &lt;em&gt;not&lt;/em&gt; the second one! This is the source of possible confusion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8de670d0da361927bb0beeeb9f6c7b622d64e7" translate="yes" xml:space="preserve">
          <source>The this argument for the call.</source>
          <target state="translated">Этот аргумент в пользу звонка.</target>
        </trans-unit>
        <trans-unit id="78bf0895bd11812425093c3ff20374b2395fe39e" translate="yes" xml:space="preserve">
          <source>The time and space complexity of the sort cannot be guaranteed as it depends on the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc2d6527e1e2ae900dd565b052cea11a754d135" translate="yes" xml:space="preserve">
          <source>The time and space complexity of the sort cannot be guaranteed as it is implementation dependent.</source>
          <target state="translated">Сложность такого рода во времени и пространстве не может быть гарантирована,так как она зависит от реализации.</target>
        </trans-unit>
        <trans-unit id="bad9736ef06f86e7966289bce2abb4832b000b82" translate="yes" xml:space="preserve">
          <source>The time zone offset returned is the one that applies for the Date that it's called on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8eb90b7012bf77a3d29bc66b2ceddfe35221e7" translate="yes" xml:space="preserve">
          <source>The time zone offset returned is the one that applies for the Date that it's called on. Where the host system is configured for daylight saving, the offset will change depending on the date and time that the Date represents and that daylight saving applies.</source>
          <target state="translated">Возвращается смещение часового пояса,которое применяется к Дате,на которую он вызван.Если хост-система настроена на летнее время,смещение будет изменяться в зависимости от даты и времени,которое представляет Дата,и применяется летнее время.</target>
        </trans-unit>
        <trans-unit id="69013b7077c0106667c8e85d0871460c6d1ede7f" translate="yes" xml:space="preserve">
          <source>The time zone to use. The only value implementations must recognize is &lt;code&gt;&quot;UTC&quot;&lt;/code&gt;; the default is the runtime's default time zone. Implementations may also recognize the time zone names of the &lt;a href=&quot;https://www.iana.org/time-zones&quot;&gt;IANA time zone database&lt;/a&gt;, such as &lt;code&gt;&quot;Asia/Shanghai&quot;&lt;/code&gt;, &lt;code&gt;&quot;Asia/Kolkata&quot;&lt;/code&gt;, &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt;.</source>
          <target state="translated">Используемый часовой пояс. Единственное значение, которое должны распознавать реализации, - это &lt;code&gt;&quot;UTC&quot;&lt;/code&gt; ; по умолчанию используется часовой пояс по умолчанию для среды выполнения. Реализации также могут распознавать имена &lt;a href=&quot;https://www.iana.org/time-zones&quot;&gt;часовых поясов в базе данных часовых поясов IANA&lt;/a&gt; , такие как &lt;code&gt;&quot;Asia/Shanghai&quot;&lt;/code&gt; , &lt;code&gt;&quot;Asia/Kolkata&quot;&lt;/code&gt; , &lt;code&gt;&quot;America/New_York&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="733c8e3f5bb06fb45edb56167b6f5498d9a8721b" translate="yes" xml:space="preserve">
          <source>The time-zone offset is the difference, in minutes, from local time to UTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed347c9f4cd940be64c7f00782838e610c8b23ba" translate="yes" xml:space="preserve">
          <source>The time-zone offset is the difference, in minutes, from local time to UTC. Note that this means that the offset is positive if the local timezone is behind UTC and negative if it is ahead. For example, for time zone UTC+10:00 (Australian Eastern Standard Time, Vladivostok Time, Chamorro Standard Time), -600 will be returned.</source>
          <target state="translated">Смещение часового пояса-это разница в минутах от местного времени до UTC.Обратите внимание,что это означает,что смещение является положительным,если местный часовой пояс отстает от UTC,и отрицательным,если он впереди.Например,для часового пояса UTC+10:00 (австралийское восточное стандартное время,владивостокское время,чаморро),-600 будет возвращено.</target>
        </trans-unit>
        <trans-unit id="d8894cfe4467d5eb790a05c0aee3d5ffaca1c075" translate="yes" xml:space="preserve">
          <source>The trigonometric functions &lt;code&gt;sin()&lt;/code&gt;, &lt;code&gt;cos()&lt;/code&gt;, &lt;code&gt;tan()&lt;/code&gt;, &lt;code&gt;asin()&lt;/code&gt;, &lt;code&gt;acos()&lt;/code&gt;, &lt;code&gt;atan()&lt;/code&gt;, and &lt;code&gt;atan2()&lt;/code&gt; expect (and return) angles in &lt;em&gt;radians&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30c359a4c613b1c190581117b776bc087a1dc16" translate="yes" xml:space="preserve">
          <source>The two's complement guarantees that the left-most bit is 0 when the number is positive and 1 when the number is negative. Thus, it is called the &lt;em&gt;sign bit&lt;/em&gt;.</source>
          <target state="translated">Дополнение до двух гарантирует, что крайний левый бит равен 0, когда число положительное, и 1, когда число отрицательное. Таким образом, он называется &lt;em&gt;знаковым битом&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2f0e6e55a08664fd87f1098bd9485f986f7871d6" translate="yes" xml:space="preserve">
          <source>The type of each array element is either a &lt;a href=&quot;../../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Тип каждого элемента массива - &lt;a href=&quot;../../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e35aa223fd73eda1f795b991cd0cb3da98fedde9" translate="yes" xml:space="preserve">
          <source>The type of individual arguments can be determined by indexing &lt;code&gt;arguments&lt;/code&gt;:</source>
          <target state="translated">Тип отдельных аргументов можно определить путем индексации &lt;code&gt;arguments&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="51b6a2ef8e29331a08d48d85c1cc207b866ee6df" translate="yes" xml:space="preserve">
          <source>The type to use. Possible values are:</source>
          <target state="translated">Тип для использования.Возможные значения:</target>
        </trans-unit>
        <trans-unit id="2a7eaaa9a5e1205e7f93111a1f880f2d40b548b1" translate="yes" xml:space="preserve">
          <source>The type used (&lt;code&gt;cardinal&lt;/code&gt; or &lt;code&gt;ordinal&lt;/code&gt;).</source>
          <target state="translated">Используемый тип ( &lt;code&gt;cardinal&lt;/code&gt; или &lt;code&gt;ordinal&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c37b46bd7b92c7bb3ebf9ecc3f4d45f87e92652c" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;every&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван типизированный массив &lt;code&gt;every&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5298f166f10ed90e1cdd38e5c53e23ec0c73dbe8" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;findIndex&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван типизированный массив &lt;code&gt;findIndex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b983755540296d3bf31c620e2154efed50f704b8" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;map()&lt;/code&gt; was called upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38de23fabf4e3d3556dbf8011fd71dea9a9fba8" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;map&lt;/code&gt; was called upon.</source>
          <target state="translated">Была вызвана &lt;code&gt;map&lt;/code&gt; типизированного массива .</target>
        </trans-unit>
        <trans-unit id="c0c164fa750b8ed95b7699fd8459ee95382c5425" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;reduce&lt;/code&gt; was called upon.</source>
          <target state="translated">Вызвано &lt;code&gt;reduce&lt;/code&gt; типизированного массива .</target>
        </trans-unit>
        <trans-unit id="075012c9a0aa358b8a4f8937b9444b4c48842acf" translate="yes" xml:space="preserve">
          <source>The typed array &lt;code&gt;some&lt;/code&gt; was called upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93256d9b5ee445d4026c265fa2b246dc43bae9bc" translate="yes" xml:space="preserve">
          <source>The unary negation operator converts its operand to Number type and then negates it.</source>
          <target state="translated">Оператор унарного отрицания преобразует свой операнд в тип Number,а затем отрицает его.</target>
        </trans-unit>
        <trans-unit id="a2d8c115850a5d12a72f7054b87d2ed428d4640b" translate="yes" xml:space="preserve">
          <source>The unary negation operator precedes its operand and negates it.</source>
          <target state="translated">Оператор унарного отрицания предшествует своему операнду и отрицает его.</target>
        </trans-unit>
        <trans-unit id="0970e3ebe9139b263bea5622849a0f6b003cdc95" translate="yes" xml:space="preserve">
          <source>The unary plus operator converts its operand to Number type.</source>
          <target state="translated">Оператор unary plus преобразует свой операнд в тип Number.</target>
        </trans-unit>
        <trans-unit id="470a22fa7fae7b57fb487e03bf1af5364fe8fa03" translate="yes" xml:space="preserve">
          <source>The unary plus operator precedes its operand and evaluates to its operand but attempts to convert it into a number, if it isn't already. Although unary negation (-) also can convert non-numbers, unary plus is the fastest and preferred way of converting something into a number, because it does not perform any other operations on the number. It can convert string representations of integers and floats, as well as the non-string values &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt;, and &lt;code&gt;null&lt;/code&gt;. Integers in both decimal and hexadecimal (&quot;0x&quot;-prefixed) formats are supported. Negative numbers are supported (though not for hex). If it cannot parse a particular value, it will evaluate to &lt;a href=&quot;../global_objects/nan&quot;&gt;NaN&lt;/a&gt;.</source>
          <target state="translated">Оператор унарного плюса предшествует своему операнду и оценивает его операнд, но пытается преобразовать его в число, если это еще не сделано. Хотя унарное отрицание (-) также может преобразовывать не числа, унарный плюс - самый быстрый и предпочтительный способ преобразования чего-либо в число, поскольку он не выполняет никаких других операций с числом. Он может преобразовывать строковые представления целых чисел и чисел с плавающей запятой, а также нестроковые значения &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;false&lt;/code&gt; и &lt;code&gt;null&lt;/code&gt; . Поддерживаются целые числа как в десятичном, так и в шестнадцатеричном (с префиксом &quot;0x&quot;) форматах. Поддерживаются отрицательные числа (но не шестнадцатеричные). Если он не может проанализировать конкретное значение, он будет оценивать как &lt;a href=&quot;../global_objects/nan&quot;&gt;NaN&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59a4d2b2661caed6293860fbd4d244fb09e13a12" translate="yes" xml:space="preserve">
          <source>The unsigned right shift assignment operator moves the specified amount of bits to the right and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Unsigned_right_shift&quot;&gt; unsigned right shift operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания сдвига вправо без знака перемещает указанное количество бит вправо и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Unsigned_right_shift&quot;&gt;Беззнаковый оператор сдвига вправо&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25e024a19a4d67d0856fd45914d89cb216b0fc0c" translate="yes" xml:space="preserve">
          <source>The use case for this syntax over using the dot notation (&lt;code&gt;Array.prototype.values()&lt;/code&gt;) is in a case where you don't know what object is going to be ahead of time. If you have a function that takes an iterator and then iterate over the value, but don't know if that Object is going to have a [Iterable].prototype.values method. This could be a built-in object like &lt;a href=&quot;../string/@@iterator&quot;&gt;String&lt;/a&gt; object or a custom object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a60d03695e2ab45d0e87e8a25df20b17610f271" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;__proto__&lt;/code&gt; is controversial and discouraged. It was never originally included in the ECMAScript language spec, but modern browsers implemented it anyway. Only recently was the &lt;code&gt;__proto__&lt;/code&gt; property standardized by the ECMAScript 2015 specification for compatibility with web browsers, so it will be supported into the future. It is deprecated in favor of &lt;a href=&quot;getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../reflect/getprototypeof&quot;&gt;&lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../reflect/setprototypeof&quot;&gt;&lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt;&lt;/a&gt; (though still, setting the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is a slow operation that should be avoided if performance is a concern).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267aaa42385e594f47748569e88ec1144f8cbe9f" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;__proto__&lt;/code&gt; is controversial, and has been discouraged. It was never originally included in the EcmaScript language spec, but modern browsers decided to implement it anyway. Only recently, the &lt;code&gt;__proto__&lt;/code&gt; property has been standardized in the ECMAScript 2015 language specification for web browsers to ensure compatibility, so will be supported into the future. It is deprecated in favor of &lt;a href=&quot;getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../reflect/getprototypeof&quot;&gt;&lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf&lt;/code&gt;&lt;/a&gt;/&lt;a href=&quot;../reflect/setprototypeof&quot;&gt;&lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt;&lt;/a&gt; (though still, setting the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is a slow operation that should be avoided if performance is a concern).</source>
          <target state="translated">Использование &lt;code&gt;__proto__&lt;/code&gt; вызывает споры и не приветствуется. Первоначально он никогда не был включен в спецификацию языка EcmaScript, но современные браузеры все равно решили реализовать его. Только недавно свойство &lt;code&gt;__proto__&lt;/code&gt; было стандартизировано в спецификации языка ECMAScript 2015 для веб-браузеров для обеспечения совместимости, поэтому будет поддерживаться в будущем. Он устарел в пользу &lt;a href=&quot;getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../reflect/getprototypeof&quot;&gt; &lt;code&gt;Reflect.getPrototypeOf&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf&lt;/code&gt; &lt;/a&gt; / &lt;a href=&quot;../reflect/setprototypeof&quot;&gt; &lt;code&gt;Reflect.setPrototypeOf&lt;/code&gt; &lt;/a&gt; (хотя, тем не менее, установка &lt;code&gt;[[Prototype]]&lt;/code&gt; объекта является медленной операцией, которой следует избегать, если производительность вызывает беспокойство).</target>
        </trans-unit>
        <trans-unit id="63096decad056d7f99c64a85a1b5e24a024a4572" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;null&lt;/code&gt; is written with a literal: &lt;code&gt;null&lt;/code&gt;. &lt;code&gt;null&lt;/code&gt; is not an identifier for a property of the global object, like &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; can be. Instead, &lt;code&gt;null&lt;/code&gt; expresses a lack of identification, indicating that a variable points to no object. In APIs, &lt;code&gt;null&lt;/code&gt; is often retrieved in a place where an object can be expected but no object is relevant.</source>
          <target state="translated">Значение &lt;code&gt;null&lt;/code&gt; записывается с помощью литерала: &lt;code&gt;null&lt;/code&gt; . &lt;code&gt;null&lt;/code&gt; не является идентификатором свойства глобального объекта, в &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; . Вместо этого &lt;code&gt;null&lt;/code&gt; означает отсутствие идентификации, указывая на то, что переменная не указывает ни на какой объект. В API-интерфейсах значение &lt;code&gt;null&lt;/code&gt; часто извлекается в том месте, где можно ожидать объект, но ни один объект не имеет значения.</target>
        </trans-unit>
        <trans-unit id="85b116be763af0011adcca25c9521457c55df529" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;null&lt;/code&gt; represents the intentional absence of any object value. It is one of JavaScript's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive values&lt;/a&gt; and is treated as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Falsy&quot;&gt;falsy&lt;/a&gt; for boolean operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b4500099924c787f1bc7d8f8f6e45953665b50" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;null&lt;/code&gt; represents the intentional absence of any object value. It is one of JavaScript's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive values&lt;/a&gt;.</source>
          <target state="translated">Значение &lt;code&gt;null&lt;/code&gt; представляет собой намеренное отсутствие какого-либо значения объекта. Это одно из &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;примитивных значений&lt;/a&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="bff8273e82837d0de52f6e70b8fd3d9415c07ae2" translate="yes" xml:space="preserve">
          <source>The value associated with the property (data descriptors only).</source>
          <target state="translated">Значение,связанное со свойством (только дескрипторы данных).</target>
        </trans-unit>
        <trans-unit id="a67dddbd2bbd0115cca20e5cd07cf3e22cf36da9" translate="yes" xml:space="preserve">
          <source>The value associated with the property. Can be any valid JavaScript value (number, object, function, etc).</source>
          <target state="translated">Стоимость,связанная с недвижимостью.Может быть любое действительное значение JavaScript (номер,объект,функция и т.д.).</target>
        </trans-unit>
        <trans-unit id="59a3562a0724b93aba945b7a64c8a3d5ba95b25c" translate="yes" xml:space="preserve">
          <source>The value at the given position (&lt;code&gt;typedArray[index]&lt;/code&gt;).</source>
          <target state="translated">Значение в данной позиции ( &lt;code&gt;typedArray[index]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0af3009ff47cbbfab21300bac505703ea7352b22" translate="yes" xml:space="preserve">
          <source>The value contained in the the current position in the Set. The same value is passed for both arguments.</source>
          <target state="translated">Значение,содержащееся в текущем положении в наборе.Для обоих аргументов передается одно и то же значение.</target>
        </trans-unit>
        <trans-unit id="8ee5fc3c0f69f15c01c307dab39bc4d88cd59ac3" translate="yes" xml:space="preserve">
          <source>The value contained inside the global variable &amp;mdash; this can be used to directly set and get the global's value.</source>
          <target state="translated">Значение, содержащееся внутри глобальной переменной - его можно использовать для непосредственной установки и получения глобального значения.</target>
        </trans-unit>
        <trans-unit id="992ff3c59c8217dbd05be959d8d3c24fa1b74e5f" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;%GeneratorPrototype%&lt;/code&gt;.</source>
          <target state="translated">Значение - &lt;code&gt;%GeneratorPrototype%&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="709c0fd06926b7c507c3fc1b3ee8b80d5d5acfa2" translate="yes" xml:space="preserve">
          <source>The value is only read-only for primitive values such as &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, and &lt;code&gt;&quot;test&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795679041097cce24480b245a846f179c329ac5b" translate="yes" xml:space="preserve">
          <source>The value is the same as &lt;a href=&quot;parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; of the global object.</source>
          <target state="translated">Значение такое же, как у &lt;a href=&quot;parsefloat&quot;&gt; &lt;code&gt;parseFloat()&lt;/code&gt; &lt;/a&gt; глобального объекта.</target>
        </trans-unit>
        <trans-unit id="59cece73f49dc6e713d1fbe3528758aa6ce588d0" translate="yes" xml:space="preserve">
          <source>The value is the same as &lt;a href=&quot;parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; of the global object.</source>
          <target state="translated">Значение такое же, как у &lt;a href=&quot;parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt; глобального объекта.</target>
        </trans-unit>
        <trans-unit id="2169594e1b3abf56f5cd7c0c31ebbaaaa0dae79b" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Date.length&lt;/code&gt; is 7. This is the number of arguments handled by the constructor.</source>
          <target state="translated">Значение &lt;code&gt;Date.length&lt;/code&gt; равно 7. Это количество аргументов, обрабатываемых конструктором.</target>
        </trans-unit>
        <trans-unit id="4a427b820317c84e0876360cc68648a291f62b99" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; is the same as the negative value of the global object's &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Значение &lt;code&gt;Number.NEGATIVE_INFINITY&lt;/code&gt; такое же, как отрицательное значение свойства &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; глобального объекта .</target>
        </trans-unit>
        <trans-unit id="7ad4e9812d1ae85de534771e604c469c669fa5e7" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; is the same as the value of the global object's &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Значение &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; совпадает со значением свойства &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; глобального объекта .</target>
        </trans-unit>
        <trans-unit id="24c4ee9f0fe214492d89ff0a9f0d1ee0f239ed43" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;RegExp.length&lt;/code&gt; is 2.</source>
          <target state="translated">Значение &lt;code&gt;RegExp.length&lt;/code&gt; равно 2.</target>
        </trans-unit>
        <trans-unit id="3d8c65faad19f540a737c41845ed5faf6bc1720f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;global&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;true&lt;/code&gt; if the &quot;&lt;code&gt;g&lt;/code&gt;&quot; flag was used; otherwise, &lt;code&gt;false&lt;/code&gt;. The &quot;&lt;code&gt;g&lt;/code&gt;&quot; flag indicates that the regular expression should be tested against all possible matches in a string. A regular expression defined as both &lt;code&gt;global&lt;/code&gt; (&quot;&lt;code&gt;g&lt;/code&gt;&quot;) and &lt;code&gt;sticky&lt;/code&gt; (&quot;&lt;code&gt;y&lt;/code&gt;&quot;) will ignore the &lt;code&gt;global&lt;/code&gt; flag and perform sticky matches.</source>
          <target state="translated">Значение &lt;code&gt;global&lt;/code&gt; является &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;true&lt;/code&gt; если использовался флаг &amp;laquo; &lt;code&gt;g&lt;/code&gt; &amp;raquo;; в противном случае - &lt;code&gt;false&lt;/code&gt; . Флаг &amp;laquo; &lt;code&gt;g&lt;/code&gt; &amp;raquo; указывает, что регулярное выражение должно быть проверено на соответствие всем возможным совпадениям в строке. Регулярное выражение, определенное и как &lt;code&gt;global&lt;/code&gt; (&amp;laquo; &lt;code&gt;g&lt;/code&gt; &amp;raquo;), и как &lt;code&gt;sticky&lt;/code&gt; (&amp;laquo; &lt;code&gt;y&lt;/code&gt; &amp;raquo;), игнорирует &lt;code&gt;global&lt;/code&gt; флаг и выполняет закрепленные совпадения.</target>
        </trans-unit>
        <trans-unit id="2c5f64834e9e94e343e9f6e0919b24594b4a8b2d" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;ignoreCase&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;true&lt;/code&gt; if the &quot;&lt;code&gt;i&lt;/code&gt;&quot; flag was used; otherwise, &lt;code&gt;false&lt;/code&gt;. The &quot;&lt;code&gt;i&lt;/code&gt;&quot; flag indicates that case should be ignored while attempting a match in a string.</source>
          <target state="translated">Значение &lt;code&gt;ignoreCase&lt;/code&gt; является &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;true&lt;/code&gt; если использовался флаг &amp;laquo; &lt;code&gt;i&lt;/code&gt; &amp;raquo;; в противном случае - &lt;code&gt;false&lt;/code&gt; . Флаг &amp;laquo; &lt;code&gt;i&lt;/code&gt; &amp;raquo; указывает, что регистр следует игнорировать при поиске совпадения в строке.</target>
        </trans-unit>
        <trans-unit id="a685c128fb38aa442155516a7c8dbad6545a579b" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;multiline&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and is true if the &quot;&lt;code&gt;m&lt;/code&gt;&quot; flag was used; otherwise, false. The &quot;&lt;code&gt;m&lt;/code&gt;&quot; flag indicates that a multiline input string should be treated as multiple lines. For example, if &quot;&lt;code&gt;m&lt;/code&gt;&quot; is used, &quot;&lt;code&gt;^&lt;/code&gt;&quot; and &quot;&lt;code&gt;$&lt;/code&gt;&quot; change from matching at only the start or end of the entire string to the start or end of any line within the string.</source>
          <target state="translated">Значение &lt;code&gt;multiline&lt;/code&gt; является &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; и истинно, если использовался флаг &amp;laquo; &lt;code&gt;m&lt;/code&gt; &amp;raquo;; в противном случае - ложь. Флаг &amp;laquo; &lt;code&gt;m&lt;/code&gt; &amp;raquo; указывает, что многострочную входную строку следует рассматривать как несколько строк. Например, если используется &amp;laquo; &lt;code&gt;m&lt;/code&gt; &amp;raquo;, &amp;laquo; &lt;code&gt;^&lt;/code&gt; &amp;raquo; и &amp;laquo; &lt;code&gt;$&lt;/code&gt; &amp;raquo; изменяются с соответствия только в начале или конце всей строки на начало или конец любой строки в строке.</target>
        </trans-unit>
        <trans-unit id="66ec41c802e7001a78f1b16509dd083319cbe7b8" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;size&lt;/code&gt; is an integer representing how many entries the &lt;code&gt;Map&lt;/code&gt; object has. A set accessor function for &lt;code&gt;size&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;; you can not change this property.</source>
          <target state="translated">Значение &lt;code&gt;size&lt;/code&gt; - это целое число, представляющее, сколько записей имеет объект &lt;code&gt;Map&lt;/code&gt; . Функция доступа set для &lt;code&gt;size&lt;/code&gt; не &lt;code&gt;undefined&lt;/code&gt; ; вы не можете изменить это свойство.</target>
        </trans-unit>
        <trans-unit id="e86dca3fbd0b3bf54891655d51af4b975b20157f" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;size&lt;/code&gt; is an integer representing how many entries the &lt;code&gt;Set&lt;/code&gt; object has. A set accessor function for &lt;code&gt;size&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;; you cannot change this property.</source>
          <target state="translated">Значение &lt;code&gt;size&lt;/code&gt; - это целое число, представляющее, сколько записей имеет объект &lt;code&gt;Set&lt;/code&gt; . Функция доступа set для &lt;code&gt;size&lt;/code&gt; не &lt;code&gt;undefined&lt;/code&gt; ; вы не можете изменить это свойство.</target>
        </trans-unit>
        <trans-unit id="4656ba10a86c93d64d47c6d7344086f608769c22" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;sticky&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and true if the &quot;&lt;code&gt;y&lt;/code&gt;&quot; flag was used; otherwise, false. The &quot;&lt;code&gt;y&lt;/code&gt;&quot; flag indicates that it matches only from the index indicated by the &lt;a href=&quot;lastindex&quot;&gt;&lt;code&gt;lastIndex&lt;/code&gt;&lt;/a&gt; property of this regular expression in the target string (and does not attempt to match from any later indexes). A regular expression defined as both &lt;code&gt;sticky&lt;/code&gt; and &lt;code&gt;global&lt;/code&gt; ignores the &lt;code&gt;global&lt;/code&gt; flag.</source>
          <target state="translated">Значение &lt;code&gt;sticky&lt;/code&gt; является &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; и истинным, если использовался флаг &amp;laquo; &lt;code&gt;y&lt;/code&gt; &amp;raquo;; в противном случае - ложь. Флаг &amp;laquo; &lt;code&gt;y&lt;/code&gt; &amp;raquo; указывает, что он соответствует только из индекса, указанного свойством &lt;a href=&quot;lastindex&quot;&gt; &lt;code&gt;lastIndex&lt;/code&gt; &lt;/a&gt; этого регулярного выражения в целевой строке (и не пытается найти совпадение из любых более поздних индексов). Регулярное выражение, определенное как &lt;code&gt;sticky&lt;/code&gt; и &lt;code&gt;global&lt;/code&gt; игнорирует &lt;code&gt;global&lt;/code&gt; флаг.</target>
        </trans-unit>
        <trans-unit id="53cb066a0b00c5a9dd351ed993a35d82f72a2023" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;code&gt;&lt;var&gt;func&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac6f3c7766f1963a25c1aa798c181b73ecbbc5c" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; if a getter is encountered. When used with &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt;, it can be an object that inherits from &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bdcf4b90977169bddf14a9adf7133b7dbba906" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; if a setter is encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2eb1aec06ff39190817095f070f51d570788916" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417434a4e709b850361422f0142eca501ad2853d" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;code&gt;target&lt;/code&gt; if a getter is encountered. When used with &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt;, it can be an object that inherits from the target.</source>
          <target state="translated">Значение &lt;code&gt;this&lt;/code&gt; предоставлено для вызова &lt;code&gt;target&lt;/code&gt; , если встречается геттер. При использовании с &lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; это может быть объект, унаследованный от цели.</target>
        </trans-unit>
        <trans-unit id="0afaed19edc70c8ac45928336a8a643ec2b894f1" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;code&gt;target&lt;/code&gt; if a setter is encountered.</source>
          <target state="translated">Значение &lt;code&gt;this&lt;/code&gt; предоставлено для вызова &lt;code&gt;target&lt;/code&gt; , если обнаружен установщик.</target>
        </trans-unit>
        <trans-unit id="9e6fecd45df2f4a2ad6b9eecbceab69bbe9a0a0b" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; provided for the call to &lt;em&gt;&lt;code&gt;target&lt;/code&gt;&lt;/em&gt;.</source>
          <target state="translated">Значение &lt;code&gt;this&lt;/code&gt; предусмотрено для вызова &lt;em&gt; &lt;code&gt;target&lt;/code&gt; &lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ae126c42ae27c396aedfe16bb6ca187f7069b0c0" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;unicode&lt;/code&gt; is a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;true&lt;/code&gt; if the &quot;&lt;code&gt;u&lt;/code&gt;&quot; flag was used; otherwise &lt;code&gt;false&lt;/code&gt;. The &quot;&lt;code&gt;u&lt;/code&gt;&quot; flag enables various Unicode-related features. With the &quot;u&quot; flag, any Unicode code point escapes will be interpreted as such, for example.</source>
          <target state="translated">Значение &lt;code&gt;unicode&lt;/code&gt; является &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;true&lt;/code&gt; если использовался флаг &amp;laquo; &lt;code&gt;u&lt;/code&gt; &amp;raquo;; в противном случае - &lt;code&gt;false&lt;/code&gt; . Флаг &amp;laquo; &lt;code&gt;u&lt;/code&gt; &amp;raquo; включает различные функции, связанные с Unicode. Например, с флагом &amp;laquo;u&amp;raquo; любые escape-символы кодовой точки Unicode будут интерпретироваться как таковые.</target>
        </trans-unit>
        <trans-unit id="7ab647412c5ad3ef19440885055d8e14d398f0bd" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;yield*&lt;/code&gt; expression itself</source>
          <target state="translated">Значение самого выражения &lt;code&gt;yield*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba39ac25730a8f654bae49a2a26d1203596c89d0" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;yield*&lt;/code&gt; expression itself is the value returned by that iterator when it's closed (i.e., when &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">Само значение &lt;code&gt;yield*&lt;/code&gt; expression - это значение, возвращаемое этим итератором, когда он закрыт (то есть, когда &lt;code&gt;done&lt;/code&gt; является &lt;code&gt;true&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8a17dbfd44499f94b3e43c816bf4f59f07edb8c4" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;length&lt;/code&gt; property is 0.</source>
          <target state="translated">Значение свойства &lt;code&gt;length&lt;/code&gt; равно 0.</target>
        </trans-unit>
        <trans-unit id="fb7c54c8a4d05764d8d13573a8581e7d617334d5" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;length&lt;/code&gt; property is an integer with a positive sign and a value less than 2 to the 32nd power (2&lt;sup&gt;32&lt;/sup&gt;).</source>
          <target state="translated">Значение свойства &lt;code&gt;length&lt;/code&gt; представляет собой целое число с положительным знаком и значением меньше 2 в 32-й степени (2 &lt;sup&gt;32&lt;/sup&gt; ).</target>
        </trans-unit>
        <trans-unit id="b4b98aa8f02d4951ad92b2ef43da39dc12d9e43a" translate="yes" xml:space="preserve">
          <source>The value of the arguments property is normally null if there is no outstanding invocation of the function in progress (that is, the function has been called but has not yet returned.</source>
          <target state="translated">Значение свойства аргументов обычно является нулевым,если нет незавершенного вызова функции (т.е.функция была вызвана,но еще не вернулась).</target>
        </trans-unit>
        <trans-unit id="90592bbd3cdb1e13a6675e34e8b7c25f36c0f806" translate="yes" xml:space="preserve">
          <source>The value of the current element being processed in the array.</source>
          <target state="translated">Значение текущего элемента,обрабатываемого в массиве.</target>
        </trans-unit>
        <trans-unit id="9033b77c9e690b9b0b893a3d87ae53a8d2aad20c" translate="yes" xml:space="preserve">
          <source>The value of the element</source>
          <target state="translated">Значение элемента</target>
        </trans-unit>
        <trans-unit id="5a0b37e004bcdda51419bfe3b87b408c5e919ba3" translate="yes" xml:space="preserve">
          <source>The value of the element to add to the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="375cb50ac5f8ae6db5bad228fb27242cc2a6613e" translate="yes" xml:space="preserve">
          <source>The value of the element to add to the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfc2dd23e72701e22341662650b90645eea05b8" translate="yes" xml:space="preserve">
          <source>The value of the given number rounded to the nearest integer.</source>
          <target state="translated">Значение данного числа округлено до ближайшего целого числа.</target>
        </trans-unit>
        <trans-unit id="83ccae05d0f3bada8984becded60af7a9c6b9684" translate="yes" xml:space="preserve">
          <source>The value of the global is then changed, first to &lt;code&gt;42&lt;/code&gt; using the &lt;code&gt;Global.value&lt;/code&gt; property, and then to 43 using the &lt;code&gt;incGlobal()&lt;/code&gt; function exported out of the &lt;code&gt;global.wasm&lt;/code&gt; module (this adds 1 to whatever value is given to it and then returns the new value).</source>
          <target state="translated">Затем значение global изменяется, сначала на &lt;code&gt;42&lt;/code&gt; с использованием свойства &lt;code&gt;Global.value&lt;/code&gt; , а затем на 43 с использованием функции &lt;code&gt;incGlobal()&lt;/code&gt; экспортированной из модуля &lt;code&gt;global.wasm&lt;/code&gt; (это добавляет 1 к любому присвоенному ему значению, а затем возвращает новое значение).</target>
        </trans-unit>
        <trans-unit id="8e6b1a6d6df9caa879e4a52b4aef13f1d4aeeca5" translate="yes" xml:space="preserve">
          <source>The value of the property.</source>
          <target state="translated">Стоимость недвижимости.</target>
        </trans-unit>
        <trans-unit id="89ac72de17924e273431acd0216774b519716d0c" translate="yes" xml:space="preserve">
          <source>The value of the specified &lt;code&gt;&lt;var&gt;expression&lt;/var&gt;&lt;/code&gt; is passed into the &lt;code&gt;&lt;var&gt;function&lt;/var&gt;&lt;/code&gt; as its sole parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10369a304b3dabeb9f648e972d408f825afd5d0" translate="yes" xml:space="preserve">
          <source>The value of this property is &quot;Atomics&quot;.</source>
          <target state="translated">Значение этого свойства-&quot;Атомика&quot;.</target>
        </trans-unit>
        <trans-unit id="602deb4fbff480f54ac3487ed10fc319ebc28bc1" translate="yes" xml:space="preserve">
          <source>The value passed as the first parameter is converted to a boolean value, if necessary. If the value is omitted or is &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt;, &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, or the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), the object has an initial value of &lt;code&gt;false&lt;/code&gt;. All other values, including any object or the string &lt;code&gt;&quot;false&quot;&lt;/code&gt;, create an object with an initial value of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Значение, переданное в качестве первого параметра, при необходимости преобразуется в логическое значение. Если значение опущено или равно &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;-0&lt;/code&gt; , &lt;a href=&quot;null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;false&lt;/code&gt; , &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; или пустой строке ( &lt;code&gt;&quot;&quot;&lt;/code&gt; ), объект имеет начальное значение &lt;code&gt;false&lt;/code&gt; . Все остальные значения, включая любой объект или строку &lt;code&gt;&quot;false&quot;&lt;/code&gt; , создают объект с начальным значением &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e8b2fd4ff59e176e9713ab275f18ea741a9453f6" translate="yes" xml:space="preserve">
          <source>The value passed as the first parameter is converted to a boolean value, if necessary. If the value is omitted or is &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt;, &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;false&lt;/code&gt;, &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, or the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), the object has an initial value of &lt;code&gt;false&lt;/code&gt;. All other values, including any object, an empty array (&lt;code&gt;[]&lt;/code&gt;), or the string &quot;&lt;code&gt;false&lt;/code&gt;&quot;, create an object with an initial value of &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90cef2323c14d826d0917e6adb3845eff127615" translate="yes" xml:space="preserve">
          <source>The value previously returned in the last invocation of the callback, or &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt;, if supplied. (See below.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7328daf04c81ab8137722b8b006bf9c6f2c30c" translate="yes" xml:space="preserve">
          <source>The value previously returned in the last invocation of the callback, or &lt;code&gt;initialValue&lt;/code&gt;, if supplied (see below).</source>
          <target state="translated">Значение, ранее возвращенное при последнем вызове обратного вызова, или &lt;code&gt;initialValue&lt;/code&gt; , если указано (см. Ниже).</target>
        </trans-unit>
        <trans-unit id="26938a6c3b7c3667cae874428e7b0f973bd8b0f7" translate="yes" xml:space="preserve">
          <source>The value previously returned in the last invocation of the callback, or &lt;code&gt;initialValue&lt;/code&gt;, if supplied. (See below.)</source>
          <target state="translated">Значение, ранее возвращенное при последнем вызове обратного вызова, или &lt;code&gt;initialValue&lt;/code&gt; , если указано . (Увидеть ниже.)</target>
        </trans-unit>
        <trans-unit id="9f20cffd5ae4255c4f313c33939037ffe91a735a" translate="yes" xml:space="preserve">
          <source>The value provided for this property in the &lt;code&gt;options&lt;/code&gt; argument or filled in as a default.</source>
          <target state="translated">Значение, указанное для этого свойства в аргументе &lt;code&gt;options&lt;/code&gt; или заполненное по умолчанию.</target>
        </trans-unit>
        <trans-unit id="1f013e6b1352fd1ab657f01903bf623f3e31d692" translate="yes" xml:space="preserve">
          <source>The value provided for this property in the &lt;code&gt;options&lt;/code&gt; argument; &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; (representing the runtime's default time zone) if none was provided. Warning: Applications should not rely on &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; being returned, as future versions may return a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; value identifying the runtime&amp;rsquo;s default time zone instead.</source>
          <target state="translated">Значение, указанное для этого свойства в аргументе &lt;code&gt;options&lt;/code&gt; ; &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; (представляющий часовой пояс среды выполнения по умолчанию), если не указан. Предупреждение: приложения не должны полагаться на возвращаемое значение &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , так как будущие версии могут вместо этого возвращать значение &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; ,&lt;/a&gt; определяющее часовой пояс среды выполнения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="ae8d412b82b4d12d0146bc50d3b2fff727efd317" translate="yes" xml:space="preserve">
          <source>The value reported for a property must be the same as the value of the corresponding target object property if the target object property is a non-writable, non-configurable data property.</source>
          <target state="translated">Сообщаемое для свойства значение должно совпадать со значением соответствующего свойства целевого объекта,если свойство целевого объекта является не записываемым,неконфигурируемым свойством данных.</target>
        </trans-unit>
        <trans-unit id="fa34a691341ce51b61d78e48ec46aa0f5728c3de" translate="yes" xml:space="preserve">
          <source>The value reported for a property must be undefined if the corresponding target object property is non-configurable accessor property that has undefined as its [[Get]] attribute.</source>
          <target state="translated">Значение,сообщаемое для свойства,должно быть неопределенным,если соответствующее свойство целевого объекта является неконфигурируемым свойством доступа,которое не определено в качестве атрибута [[Get]].</target>
        </trans-unit>
        <trans-unit id="a2ca47894ce66a4ebd121f767d42d690831bfec2" translate="yes" xml:space="preserve">
          <source>The value requested using the Unicode extension key &lt;code&gt;&quot;co&quot;&lt;/code&gt;, if it is supported for &lt;code&gt;locale&lt;/code&gt;, or &lt;code&gt;&quot;default&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение, запрошенное с использованием ключа расширения Unicode &lt;code&gt;&quot;co&quot;&lt;/code&gt; , если он поддерживается для &lt;code&gt;locale&lt;/code&gt; , или &lt;code&gt;&quot;default&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0283424a1178d6f4236ac1d8d6034b7ef42cf0bb" translate="yes" xml:space="preserve">
          <source>The value requested using the Unicode extension key &lt;code&gt;&quot;nu&quot;&lt;/code&gt; or filled in as a default.</source>
          <target state="translated">Значение, запрошенное с использованием ключа расширения Unicode &lt;code&gt;&quot;nu&quot;&lt;/code&gt; или заполненное по умолчанию.</target>
        </trans-unit>
        <trans-unit id="3fc94ba8a72cb17a2e2242a0dd731579febe1bc3" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;getFullYear()&lt;/code&gt; is an absolute number. For dates between the years 1000 and 9999, &lt;code&gt;getFullYear()&lt;/code&gt; returns a four-digit number, for example, 1995. Use this function to make sure a year is compliant with years after 2000.</source>
          <target state="translated">Значение, возвращаемое &lt;code&gt;getFullYear()&lt;/code&gt; является абсолютным числом. Для дат от 1000 до 9999 года &lt;code&gt;getFullYear()&lt;/code&gt; возвращает четырехзначное число, например 1995. Используйте эту функцию, чтобы убедиться, что год соответствует годам после 2000 года.</target>
        </trans-unit>
        <trans-unit id="6446a7f617b7c923a7cdded70ece6ac9a5479f4b" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;getUTCFullYear()&lt;/code&gt; is an absolute number that is compliant with year-2000, for example, 1995.</source>
          <target state="translated">Значение, возвращаемое &lt;code&gt;getUTCFullYear()&lt;/code&gt; является абсолютным числом, соответствующим 2000 году, например 1995.</target>
        </trans-unit>
        <trans-unit id="4d02fd6a19ea2394d421b081204d7d538e8ddef3" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;reduce()&lt;/code&gt; in this case would be &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">Значение, возвращаемое функцией &lt;code&gt;reduce()&lt;/code&gt; в этом случае будет &lt;code&gt;20&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="753762dcffa9651103a411c28aba6537e911cd2a" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;reduce()&lt;/code&gt; would be that of the last callback invocation (&lt;code&gt;10&lt;/code&gt;).</source>
          <target state="translated">Значение, возвращаемое функцией &lt;code&gt;reduce()&lt;/code&gt; , будет значением последнего вызова обратного вызова ( &lt;code&gt;10&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="25eda24a4c47ede90f492bd3eff94112bb092132" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;reduceRight&lt;/code&gt; this time would be, of course, &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="translated">Значение, возвращаемое &lt;code&gt;reduceRight&lt;/code&gt; этот раз, конечно же, будет &lt;code&gt;20&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db3194ee28a78bcd5cd0e6d78b00827b8f173473" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;reduceRight&lt;/code&gt; would be that of the last callback invocation (&lt;code&gt;10&lt;/code&gt;).</source>
          <target state="translated">Значение, возвращаемое &lt;code&gt;reduceRight&lt;/code&gt; , будет значением последнего вызова обратного вызова ( &lt;code&gt;10&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="775546357ed316cf0984802343215e45cabfd5ab" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;toUTCString()&lt;/code&gt; is a string in the form &lt;code&gt;&lt;var&gt;Www&lt;/var&gt;, &lt;var&gt;dd&lt;/var&gt; &lt;var&gt;Mmm&lt;/var&gt; &lt;var&gt;yyyy&lt;/var&gt; &lt;var&gt;hh&lt;/var&gt;:&lt;var&gt;mm&lt;/var&gt;:&lt;var&gt;ss&lt;/var&gt; GMT&lt;/code&gt;, Where:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b313fb8c3da4ab52c40b731bd01d0a296137a71e" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;toUTCString()&lt;/code&gt; is a string in the same format as &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Date.prototype.toString()&lt;/code&gt;&lt;/a&gt; but with a zero timezone offset (</source>
          <target state="translated">Значение, возвращаемое &lt;code&gt;toUTCString()&lt;/code&gt; представляет собой строку в том же формате, что и &lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;Date.prototype.toString()&lt;/code&gt; &lt;/a&gt; но с нулевым смещением часового пояса (</target>
        </trans-unit>
        <trans-unit id="f9bdda3fa3097eefa1caa7944df9fc8d71302bea" translate="yes" xml:space="preserve">
          <source>The value that has been stored.</source>
          <target state="translated">Значение,которое было сохранено.</target>
        </trans-unit>
        <trans-unit id="c9a55cfa4ad9c8fef910bf08d5266b00ea90e690" translate="yes" xml:space="preserve">
          <source>The value that is always passed as &lt;code&gt;this&lt;/code&gt; value when calling the wrapped function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac55f175a6f636d5e37287a3f31bb5c06a9fd70f" translate="yes" xml:space="preserve">
          <source>The value that is given as an argument.</source>
          <target state="translated">Значение,которое дается в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="b28bf68d03b135b289d89712da3c9911acf64c8f" translate="yes" xml:space="preserve">
          <source>The value that results from the reduction.</source>
          <target state="translated">Значение,полученное в результате сокращения.</target>
        </trans-unit>
        <trans-unit id="1ba3bb3a5b53e2ce2574ffcb28fc3cbbb4f9f720" translate="yes" xml:space="preserve">
          <source>The value the variable contains. This can be any value, as long as its type matches the variable's data type. If no value is specified, a typed 0 value is used, as specified by the &lt;a href=&quot;https://webassembly.github.io/spec/js-api/#defaultvalue&quot;&gt;&lt;code&gt;DefaultValue&lt;/code&gt; algorithm&lt;/a&gt;.</source>
          <target state="translated">Значение, которое содержит переменная. Это может быть любое значение, если его тип соответствует типу данных переменной. Если значение не указано, используется типизированное значение 0, как указано в &lt;a href=&quot;https://webassembly.github.io/spec/js-api/#defaultvalue&quot;&gt;алгоритме &lt;/a&gt; &lt;code&gt;DefaultValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="565efbb01120b89e014f45606039540d14a469a7" translate="yes" xml:space="preserve">
          <source>The value to be checked.</source>
          <target state="translated">Значение,которое нужно проверить.</target>
        </trans-unit>
        <trans-unit id="392314efaf475fe63083755ee1503c3782e6768c" translate="yes" xml:space="preserve">
          <source>The value to be passed as the &lt;code&gt;this&lt;/code&gt; parameter to the target function &lt;code&gt;&lt;var&gt;func&lt;/var&gt;&lt;/code&gt; when the bound function is called. The value is ignored if the bound function is constructed using the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. When using &lt;code&gt;bind&lt;/code&gt; to create a function (supplied as a callback) inside a &lt;code&gt;setTimeout&lt;/code&gt;, any primitive value passed as &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; is converted to object. If no arguments are provided to &lt;code&gt;bind &lt;/code&gt;, or if the &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;&lt;var&gt;null&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;undefined&lt;/var&gt;&lt;/code&gt;, the &lt;code&gt;this&lt;/code&gt; of the executing scope is treated as the &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; for the new function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="163a204d47e94755d2a8dea42f492f6afec3ade3" translate="yes" xml:space="preserve">
          <source>The value to be passed as the &lt;code&gt;this&lt;/code&gt; parameter to the target function when the bound function is called. The value is ignored if the bound function is constructed using the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. When using &lt;code&gt;bind&lt;/code&gt; to create a function(supplied as a callback) inside a &lt;code&gt;setTimeout&lt;/code&gt;, any primitive value passed as &lt;code&gt;thisArg&lt;/code&gt; is converted to object. If no arguments are provided to &lt;code&gt;bind&lt;/code&gt;, the &lt;code&gt;this&lt;/code&gt; of the executing scope is treated as the &lt;code&gt;thisArg&lt;/code&gt; for the new function.</source>
          <target state="translated">Значение, передаваемое в качестве параметра &lt;code&gt;this&lt;/code&gt; целевой функции при вызове связанной функции. Значение игнорируется, если связанная функция создается с использованием оператора &lt;a href=&quot;../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; . При использовании &lt;code&gt;bind&lt;/code&gt; для создания функции (предоставляемой как обратный вызов) внутри &lt;code&gt;setTimeout&lt;/code&gt; любое примитивное значение, переданное как &lt;code&gt;thisArg&lt;/code&gt; , преобразуется в объект. Если аргументы для &lt;code&gt;bind&lt;/code&gt; не предоставлены , &lt;code&gt;this&lt;/code&gt; из области выполнения обрабатывается как &lt;code&gt;thisArg&lt;/code&gt; для новой функции.</target>
        </trans-unit>
        <trans-unit id="dc6855aee9e42fd78307e3cf03f38826e655a959" translate="yes" xml:space="preserve">
          <source>The value to be tested for &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Значение, которое нужно проверить на &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b40053d9aa1992f47c698a9a98680425a9a0efe" translate="yes" xml:space="preserve">
          <source>The value to be tested for being a safe integer.</source>
          <target state="translated">Значение,которое должно быть проверено как безопасное целое число.</target>
        </trans-unit>
        <trans-unit id="aac6f6a6beee410fdb177d08be0e103d2a3014c4" translate="yes" xml:space="preserve">
          <source>The value to be tested for being an integer.</source>
          <target state="translated">Значение,которое будет проверено на целое число.</target>
        </trans-unit>
        <trans-unit id="59bfce4de0f3bc70770e7f943f9528be413f79ba" translate="yes" xml:space="preserve">
          <source>The value to be tested for finiteness.</source>
          <target state="translated">Значение,которое должно быть проверено на конечность.</target>
        </trans-unit>
        <trans-unit id="4b826fb647f77daf90366e276f5a2041c3eea0d6" translate="yes" xml:space="preserve">
          <source>The value to be tested.</source>
          <target state="translated">Значение,подлежащее проверке.</target>
        </trans-unit>
        <trans-unit id="06b97d18aabb6ae6c63ded596ef86513a1b9ad9a" translate="yes" xml:space="preserve">
          <source>The value to check for equality.</source>
          <target state="translated">Значение для проверки равенства.</target>
        </trans-unit>
        <trans-unit id="f5893b2f6845ff50da342763ecbcb431372f8e12" translate="yes" xml:space="preserve">
          <source>The value to convert to a JSON string.</source>
          <target state="translated">Значение для преобразования в JSON-строку.</target>
        </trans-unit>
        <trans-unit id="5a8791a2fe96db71d9fb59af600bdadbf784b614" translate="yes" xml:space="preserve">
          <source>The value to parse. If the &lt;code&gt;string&lt;/code&gt; argument is not a string, then it is converted to a string (using the &lt;code&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-tostring&quot;&gt;ToString&lt;/a&gt;&lt;/code&gt; abstract operation). Leading whitespace in the string argument is ignored.</source>
          <target state="translated">Значение для анализа. Если &lt;code&gt;string&lt;/code&gt; аргумент не является строкой, он преобразуется в строку (с помощью абстрактной операции &lt;code&gt;&lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-tostring&quot;&gt;ToString&lt;/a&gt;&lt;/code&gt; ). Начальные пробелы в строковом аргументе игнорируются.</target>
        </trans-unit>
        <trans-unit id="c5d68d1d561fee564f3324376066e2e0b9d7856b" translate="yes" xml:space="preserve">
          <source>The value to parse. If this argument is not a string, then it is converted to one using the &lt;code&gt;&lt;a href=&quot;https://tc39.es/ecma262/#sec-tostring&quot;&gt;ToString&lt;/a&gt;&lt;/code&gt; abstract operation. Leading &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/whitespace&quot;&gt;whitespace&lt;/a&gt; in this argument is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761a888194a1d3efba5aa5728509ec1440c00504" translate="yes" xml:space="preserve">
          <source>The value to parse. If this argument is not a string, then it is converted to one using the &lt;code&gt;&lt;a href=&quot;https://tc39.es/ecma262/#sec-tostring&quot;&gt;ToString&lt;/a&gt;&lt;/code&gt; abstract operation. Leading &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/whitespace&quot;&gt;whitespace&lt;/a&gt; in this argument is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c60cfe7cf7b22fbd2cfac45c0050efe20b3c47" translate="yes" xml:space="preserve">
          <source>The value to parse. If this argument is not a string, then it is converted to one using the &lt;code&gt;&lt;a href=&quot;https://tc39.es/ecma262/#sec-tostring&quot;&gt;ToString&lt;/a&gt;&lt;/code&gt; abstract operation. Leading whitespace in this argument is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c17f51813a132f8c8e2de408d090acbdfc805e" translate="yes" xml:space="preserve">
          <source>The value to remove from &lt;code&gt;&lt;var&gt;mySet&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbb6f2a4cf02d0acc268f73b395f7eaddccb296" translate="yes" xml:space="preserve">
          <source>The value to return.</source>
          <target state="translated">Значение для возврата.</target>
        </trans-unit>
        <trans-unit id="5f9706fe37a21ebb4f5356314e9dbb0f193612de" translate="yes" xml:space="preserve">
          <source>The value to search for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4725b3f97020ee2d2e6562f946a3c0c74977edbc" translate="yes" xml:space="preserve">
          <source>The value to send to the generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54308eaf4f65f985a376010b2fbadf19181c19b2" translate="yes" xml:space="preserve">
          <source>The value to send to the generator. The value will be assigned as a result of a yield expression. i.e in [variable] = yield [expression], the value passed to the .next function will be assigned to [variable]</source>
          <target state="translated">Значение,которое нужно отправить генератору.Значение будет присваиваться в результате выражения доходности,т.е.в [переменной]=доходность [выражение],значение,переданное в следующую функцию,будет присваиваться [переменной].</target>
        </trans-unit>
        <trans-unit id="27af97cf03ff5b42ffc052b39a9abfc7fee345ba" translate="yes" xml:space="preserve">
          <source>The value to set.</source>
          <target state="translated">Значение,которое нужно установить.</target>
        </trans-unit>
        <trans-unit id="e466a461c0d81a1e5a265350b651378eb345c681" translate="yes" xml:space="preserve">
          <source>The value to test for presence in the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccbec616a7aa8d8ff02d2d7771872a2f34ef1f6" translate="yes" xml:space="preserve">
          <source>The value to use as &lt;code&gt;this&lt;/code&gt; when calling &lt;code&gt;&lt;var&gt;func&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42096f81c8b700c01a535b75abd018478cad5e6" translate="yes" xml:space="preserve">
          <source>The value which is given as the right hand-side of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for&amp;hellip;of &lt;/a&gt;or as argument of a function such as &lt;a href=&quot;../global_objects/promise/all&quot;&gt;&lt;code&gt;Promise.all&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/typedarray/from&quot;&gt;&lt;code&gt;TypedArray.from&lt;/code&gt;&lt;/a&gt;, is not an &lt;a href=&quot;../iteration_protocols&quot;&gt;iterable object&lt;/a&gt;. An iterable can be a built-in iterable type such as &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, a generator result, or an object implementing the &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt;.</source>
          <target state="translated">Значение, которое задается как правая часть &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for&amp;hellip; of&lt;/a&gt; или как аргумент функции, такой как &lt;a href=&quot;../global_objects/promise/all&quot;&gt; &lt;code&gt;Promise.all&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/typedarray/from&quot;&gt; &lt;code&gt;TypedArray.from&lt;/code&gt; &lt;/a&gt; , не является &lt;a href=&quot;../iteration_protocols&quot;&gt;итерируемым объектом&lt;/a&gt; . Итерируемый может быть встроенным итеративным типом, таким как &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; , результатом генератора или объектом, реализующим &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;итерационный протокол&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="85f284f4600acf33d2c2218b66e9ae87ac534b68" translate="yes" xml:space="preserve">
          <source>The value which is given as the right hand-side of &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Loops_and_iteration#for...of_statement&quot;&gt;for&amp;hellip;of &lt;/a&gt;or as argument of a function such as &lt;a href=&quot;../global_objects/promise/all&quot;&gt;&lt;code&gt;Promise.all&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/typedarray/from&quot;&gt;&lt;code&gt;TypedArray.from&lt;/code&gt;&lt;/a&gt;, is not an &lt;a href=&quot;../iteration_protocols&quot;&gt;iterable object&lt;/a&gt;. An iterable can be a built-in iterable type such as &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, a generator result, or an object implementing the &lt;a href=&quot;../iteration_protocols#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a48c0bceb25d277223c5b39c5f4e6645c8f3d4f" translate="yes" xml:space="preserve">
          <source>The value will be assigned as a result of a &lt;code&gt;yield&lt;/code&gt; expression. For example, in &lt;code&gt;&lt;var&gt;variable&lt;/var&gt; = yield &lt;var&gt;expression&lt;/var&gt;&lt;/code&gt;, the value passed to the &lt;code&gt;.next()&lt;/code&gt; function will be assigned to &lt;code&gt;&lt;var&gt;variable&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d381c8d22bfc0f19c3ff81e2c2a77327ad37df" translate="yes" xml:space="preserve">
          <source>The value you want to mutate the reference to. This must be an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;exported WebAssembly function&lt;/a&gt;, a JavaScript wrapper for an underlying wasm function.</source>
          <target state="translated">Значение, на которое вы хотите изменить ссылку. Это должна быть &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;экспортированная функция WebAssembly&lt;/a&gt; , оболочка JavaScript для базовой функции wasm.</target>
        </trans-unit>
        <trans-unit id="6a1a15efc64d14b930da0c0f2af03ced19790118" translate="yes" xml:space="preserve">
          <source>The value you want to mutate the reference to. This must be an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;exported WebAssembly function&lt;/a&gt;, a JavaScript wrapper for an underlying wasm function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a5a6582f1f15de8a353319a060dbca049eb56c" translate="yes" xml:space="preserve">
          <source>The value you want to parse.</source>
          <target state="translated">Ценность,которую ты хочешь разобрать.</target>
        </trans-unit>
        <trans-unit id="c330d597b3dfd420a395b97922ea4f601cdaf257" translate="yes" xml:space="preserve">
          <source>The values provided for these properties in the &lt;code&gt;options&lt;/code&gt; argument or filled in as defaults.</source>
          <target state="translated">Значения, указанные для этих свойств в аргументе &lt;code&gt;options&lt;/code&gt; или заполненные по умолчанию.</target>
        </trans-unit>
        <trans-unit id="3b9865fad94fc56ff337c268a776b107ba4a79a0" translate="yes" xml:space="preserve">
          <source>The values provided for these properties in the &lt;code&gt;options&lt;/code&gt; argument or filled in as defaults. These properties are only present if &lt;code&gt;style&lt;/code&gt; is &lt;code&gt;&quot;currency&quot;&lt;/code&gt;.</source>
          <target state="translated">Значения, указанные для этих свойств в аргументе &lt;code&gt;options&lt;/code&gt; или заполненные по умолчанию. Эти свойства присутствуют, только если &lt;code&gt;style&lt;/code&gt; - &lt;code&gt;&quot;currency&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77632140a6d7f81694a32215750f6043951bce51" translate="yes" xml:space="preserve">
          <source>The values provided for these properties in the &lt;code&gt;options&lt;/code&gt; argument or filled in as defaults. These properties are present only if at least one of them was provided in the &lt;code&gt;options&lt;/code&gt; argument.</source>
          <target state="translated">Значения, указанные для этих свойств в аргументе &lt;code&gt;options&lt;/code&gt; или заполненные по умолчанию. Эти свойства присутствуют, только если хотя бы одно из них было указано в аргументе &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c00811fc726b80d0206856d7d727f30706a7dc00" translate="yes" xml:space="preserve">
          <source>The values provided for these properties in the &lt;code&gt;options&lt;/code&gt; argument or filled in as defaults. These properties are present only if neither &lt;code&gt;minimumSignificantDigits&lt;/code&gt; nor &lt;code&gt;maximumSignificantDigits&lt;/code&gt; was provided in the &lt;code&gt;options&lt;/code&gt; argument.</source>
          <target state="translated">Значения, указанные для этих свойств в аргументе &lt;code&gt;options&lt;/code&gt; или заполненные по умолчанию. Эти свойства присутствуют только тогда , когда ни &lt;code&gt;minimumSignificantDigits&lt;/code&gt; , ни &lt;code&gt;maximumSignificantDigits&lt;/code&gt; была представлена в &lt;code&gt;options&lt;/code&gt; аргумента.</target>
        </trans-unit>
        <trans-unit id="4e548ac0a58e8f8d45f275ef3a15166b64f3a5ec" translate="yes" xml:space="preserve">
          <source>The values requested for these properties in the &lt;code&gt;options&lt;/code&gt; argument or using the Unicode extension keys &lt;code&gt;&quot;kn&quot;&lt;/code&gt; and &lt;code&gt;&quot;kf&quot;&lt;/code&gt; or filled in as defaults. If the implementation does not support these properties, they are omitted.</source>
          <target state="translated">Значения, запрошенные для этих свойств в аргументе &lt;code&gt;options&lt;/code&gt; или с использованием ключей расширения Unicode &lt;code&gt;&quot;kn&quot;&lt;/code&gt; и &lt;code&gt;&quot;kf&quot;&lt;/code&gt; или заполненные по умолчанию. Если реализация не поддерживает эти свойства, они не указываются.</target>
        </trans-unit>
        <trans-unit id="70d2beda49013ccaade06b55b87b79e9a948f83d" translate="yes" xml:space="preserve">
          <source>The values requested using the Unicode extension keys &lt;code&gt;&quot;ca&quot;&lt;/code&gt; and &lt;code&gt;&quot;nu&quot;&lt;/code&gt; or filled in as default values.</source>
          <target state="translated">Значения, запрошенные с использованием ключей расширения Unicode &lt;code&gt;&quot;ca&quot;&lt;/code&gt; и &lt;code&gt;&quot;nu&quot;&lt;/code&gt; или заполненные как значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="f382186cd21e7990d569381dfed57ffbf95cec18" translate="yes" xml:space="preserve">
          <source>The values resulting from format matching between the corresponding properties in the &lt;code&gt;options&lt;/code&gt; argument and the available combinations and representations for date-time formatting in the selected locale. Some of these properties may not be present, indicating that the corresponding components will not be represented in formatted output.</source>
          <target state="translated">Значения, полученные в результате сопоставления формата между соответствующими свойствами в аргументе &lt;code&gt;options&lt;/code&gt; и доступными комбинациями и представлениями для форматирования даты и времени в выбранной локали. Некоторые из этих свойств могут отсутствовать, указывая на то, что соответствующие компоненты не будут представлены в форматированном выводе.</target>
        </trans-unit>
        <trans-unit id="d5c1abe3f8184414323335d2b7a8b7ed460cacb2" translate="yes" xml:space="preserve">
          <source>The variable the function expression is assigned to will have a &lt;code&gt;name&lt;/code&gt; property. The name doesn't change if it's assigned to a different variable. If function name is omitted, it will be the variable name (implicit name). If function name is present, it will be the function name (explicit name). This also applies to &lt;a href=&quot;../functions/arrow_functions&quot;&gt;&lt;code&gt;arrow functions&lt;/code&gt;&lt;/a&gt; (arrows don't have a name so you can only give the variable an implicit name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce9939a07c30c8f960444ebda763316f59e32e7" translate="yes" xml:space="preserve">
          <source>The variable the function expression is assigned to will have a &lt;code&gt;name&lt;/code&gt; property. The name doesn't change if it's assigned to a different variable. If function name is omitted, it will be the variable name (implicit name). If function name is present, it will be the function name (explicit name). This also applies to &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt; (arrows don't have a name so you can only give the variable an implicit name).</source>
          <target state="translated">Переменная, которой присвоено выражение функции, будет иметь свойство &lt;code&gt;name&lt;/code&gt; . Имя не меняется, если оно присвоено другой переменной. Если имя функции не указано, это будет имя переменной (неявное имя). Если присутствует имя функции, это будет имя функции (явное имя). Это также относится к &lt;a href=&quot;../functions/arrow_functions&quot;&gt;функциям&lt;/a&gt; стрелок (стрелки не имеют имени, поэтому вы можете дать переменной только неявное имя).</target>
        </trans-unit>
        <trans-unit id="6ae939816326b73951d2be1abd4bc6d262210aa9" translate="yes" xml:space="preserve">
          <source>The variables contain the same string, except that the second string contains uppercase letters. The first &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Console/log&quot;&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/a&gt; method displays &lt;code&gt;19&lt;/code&gt;. But because the &lt;code&gt;indexOf()&lt;/code&gt; method is case sensitive, the string &quot;&lt;code&gt;cheddar&lt;/code&gt;&quot; is not found in &lt;code&gt;myCapString&lt;/code&gt;, so the second &lt;code&gt;console.log()&lt;/code&gt; method displays &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6ec2ee3ed38b088ef2a037a36cdd2b64e278fc" translate="yes" xml:space="preserve">
          <source>The well-known &lt;code&gt;&lt;strong&gt;Symbol.iterator&lt;/strong&gt;&lt;/code&gt; symbol specifies the default iterator for an object. Used by &lt;a href=&quot;../../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b000b5f55890a7aad1048e348b7ab3061cdcc0ff" translate="yes" xml:space="preserve">
          <source>The well-known symbol &lt;code&gt;&lt;strong&gt;Symbol.species&lt;/strong&gt;&lt;/code&gt; specifies a function-valued property that the constructor function uses to create derived objects.</source>
          <target state="translated">Хорошо известный символ &lt;code&gt;&lt;strong&gt;Symbol.species&lt;/strong&gt;&lt;/code&gt; определяет &lt;strong&gt;свойство&lt;/strong&gt; со значением функции, которое функция-конструктор использует для создания производных объектов.</target>
        </trans-unit>
        <trans-unit id="834521bdfe73ddcdc5fb64cc09c454aa53e0e311" translate="yes" xml:space="preserve">
          <source>The whole string being examined.</source>
          <target state="translated">Вся струна исследуется.</target>
        </trans-unit>
        <trans-unit id="6513ed80efcd6bb03aba0325f5b6374023f42179" translate="yes" xml:space="preserve">
          <source>The wrapped function object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b098fda995b359e0cd8b60766d82754994697077" translate="yes" xml:space="preserve">
          <source>The x coordinate of the point</source>
          <target state="translated">Координата x точки</target>
        </trans-unit>
        <trans-unit id="cd2c7c9b69f12be1895dc37da25b7e1a86d5f87d" translate="yes" xml:space="preserve">
          <source>The y coordinate of the point.</source>
          <target state="translated">Координата y точки.</target>
        </trans-unit>
        <trans-unit id="93dea93a508fb79cd213d78a9c05f9219bfcee1a" translate="yes" xml:space="preserve">
          <source>The zero-based index &lt;em&gt;before&lt;/em&gt; which to end extraction. The character at this index will not be included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf061c0e8764085670c93808d259b0b1537351a9" translate="yes" xml:space="preserve">
          <source>The zero-based index at which to begin extraction. If negative, it is treated as &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length + &lt;var&gt;beginIndex&lt;/var&gt;&lt;/code&gt;. (For example, if &lt;code&gt;&lt;var&gt;beginIndex&lt;/var&gt;&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt;, it is treated as &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.length - 3&lt;/code&gt;.) If &lt;code&gt;&lt;var&gt;beginIndex&lt;/var&gt;&lt;/code&gt; is not a number after &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number(&lt;var&gt;beginIndex&lt;/var&gt;)&lt;/code&gt;&lt;/a&gt;, it is treated as &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34484571df4043bcf44cbe6d7da204798ed3b521" translate="yes" xml:space="preserve">
          <source>The zero-based index at which to begin extraction. If negative, it is treated as &lt;code&gt;strLength + beginIndex&lt;/code&gt; where &lt;code&gt;strLength&lt;/code&gt; is the length of the string (for example, if &lt;code&gt;beginIndex&lt;/code&gt; is &lt;code&gt;-3&lt;/code&gt; it is treated as &lt;code&gt;strLength - 3&lt;/code&gt;). If &lt;code&gt;beginIndex&lt;/code&gt; is greater than or equal to the length of the string, &lt;code&gt;slice()&lt;/code&gt; returns an empty string.</source>
          <target state="translated">Отсчитываемый от нуля индекс, с которого начинается извлечение. Если он отрицательный, он обрабатывается как &lt;code&gt;strLength + beginIndex&lt;/code&gt; где &lt;code&gt;strLength&lt;/code&gt; - длина строки (например, если &lt;code&gt;beginIndex&lt;/code&gt; равно &lt;code&gt;-3&lt;/code&gt; , он обрабатывается как &lt;code&gt;strLength - 3&lt;/code&gt; ). Если &lt;code&gt;beginIndex&lt;/code&gt; больше или равен длине строки, &lt;code&gt;slice()&lt;/code&gt; возвращает пустую строку.</target>
        </trans-unit>
        <trans-unit id="6773e8fa12942c218deb33c58b745ac45e65ebbc" translate="yes" xml:space="preserve">
          <source>The zero-based index of the match in the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34d44d2490e2fb4772a727440530e67bf85723bf" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt; &lt;strong&gt;for each...in&lt;/strong&gt;&lt;/code&gt;&lt;strong&gt; statement&lt;/strong&gt; iterates a specified variable over all values of object's properties. For each distinct property, a specified statement is executed.</source>
          <target state="translated">&lt;code&gt; &lt;strong&gt;for each...in&lt;/strong&gt;&lt;/code&gt; &lt;strong&gt; заявлении&lt;/strong&gt; итерации указанного переменного по всем значениям свойств объекта. Для каждого отдельного свойства выполняется определенный оператор. &lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b464e820bc4e87bcd6963f6905cbc1a01380e81" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;const&lt;/code&gt; creates a read-only reference to a value. It does &lt;strong&gt;not&lt;/strong&gt; mean the value it holds is immutable, just that the variable identifier cannot be reassigned. For instance, in the case where the content is an object, this means the object's contents (e.g., its properties) can be altered.</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; создает только для чтения ссылки на значение. Это &lt;strong&gt;не&lt;/strong&gt; означает, что хранимое в нем значение неизменяемо, просто идентификатор переменной нельзя переназначить. Например, в случае, когда содержимое является объектом, это означает, что содержимое объекта (например, его свойства) может быть изменено.</target>
        </trans-unit>
        <trans-unit id="91d49a20203a919f8b5fd6ad03ea774e29460b2d" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;import.meta&lt;/code&gt; object exposes context-specific metadata to a JavaScript module. It contains information about the module, like the module's URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888ceea4a2d5630cdeaeabae5410b8503e85011e" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;import.meta&lt;/code&gt; object is a meta-property exposing context-specific meta data to a JavaScript module. It contains information about the module, like the module's URL.</source>
          <target state="translated">Объект &lt;code&gt;import.meta&lt;/code&gt; - это мета-свойство, предоставляющее метаданные, зависящие от контекста, модулю JavaScript. Он содержит информацию о модуле, например URL-адрес модуля.</target>
        </trans-unit>
        <trans-unit id="f22535f791d6fffe0473d15653bcbb327d44f86c" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;new.target&lt;/code&gt; property lets you detect whether a function or constructor was called using the &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; operator. In constructors and functions instantiated with the &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; operator, &lt;code&gt;new.target&lt;/code&gt; returns a reference to the constructor or function. In normal function calls, &lt;code&gt;new.target&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Свойство &lt;code&gt;new.target&lt;/code&gt; позволяет определить, была ли вызвана функция или конструктор с помощью оператора &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; . В конструкторах и функциях , &lt;code&gt;new.target&lt;/code&gt; с помощью оператора &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; , new.target возвращает ссылку на конструктор или функцию. При обычных вызовах функций &lt;code&gt;new.target&lt;/code&gt; не &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fed48d0b750f633b0d77e462949f996a2556975a" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;new.target&lt;/code&gt; pseudo-property lets you detect whether a function or constructor was called using the &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; operator. In constructors and functions invoked using the &lt;a href=&quot;new&quot;&gt;new&lt;/a&gt; operator, &lt;code&gt;new.target&lt;/code&gt; returns a reference to the constructor or function. In normal function calls, &lt;code&gt;new.target&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d285b4cba86a8ce926d2cc13ded2b699b1549b" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;new&lt;/code&gt; creates an instance of a user-defined object type or of one of the built-in object types that has a constructor function.</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; создает экземпляр определяемого пользователем типа объекта или одного из встроенных типов объектов, имеет функцию конструктора.</target>
        </trans-unit>
        <trans-unit id="86abe5c3b9ab6addd5d0545cccfa22bb72009209" translate="yes" xml:space="preserve">
          <source>The&lt;strong&gt; comma operator&lt;/strong&gt; (&lt;code&gt;,&lt;/code&gt;) evaluates each of its operands (from left to right) and returns the value of the last operand. This lets you create a compound expression in which multiple expressions are evaluated, with the compound expression's final value being the value of the rightmost of its member expressions. This is commonly used to provide multiple parameters to a &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f776538492eb864dce17dd7b00fa104f7b12cb5" translate="yes" xml:space="preserve">
          <source>The&lt;strong&gt; comma operator&lt;/strong&gt; evaluates each of its operands (from left to right) and returns the value of the last operand.</source>
          <target state="translated">Оператор &lt;strong&gt;запятой&lt;/strong&gt; оценивает каждый из своих операндов (слева направо) и возвращает значение последнего операнда.</target>
        </trans-unit>
        <trans-unit id="b5ebca9ecf732c039f7854f5bb81acb03a7f7440" translate="yes" xml:space="preserve">
          <source>Then in the top-level module included in your HTML page, we could have:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="446e8c7e40da60abbd0e6f84bda93b4619c9635d" translate="yes" xml:space="preserve">
          <source>Then let's talk about solutions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdd5f8c7de109e5949a05658cbe520dce6c688e" translate="yes" xml:space="preserve">
          <source>Then you can rewrite the definition of &lt;code&gt;Car&lt;/code&gt; to include an &lt;code&gt;owner&lt;/code&gt; property that takes a &lt;code&gt;Person&lt;/code&gt; object, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89551b1acb52a90d894ad75a0e7e84c5d566dcaf" translate="yes" xml:space="preserve">
          <source>Then you can rewrite the definition of &lt;code&gt;car&lt;/code&gt; to include an &lt;code&gt;owner&lt;/code&gt; property that takes a person object, as follows:</source>
          <target state="translated">Затем вы можете переписать определение &lt;code&gt;car&lt;/code&gt; включив в него свойство &lt;code&gt;owner&lt;/code&gt; , которое принимает объект человека, следующим образом:</target>
        </trans-unit>
        <trans-unit id="2e2c81dd703d2e6ca2b3ff59db7c330e4a38f40d" translate="yes" xml:space="preserve">
          <source>Then, in another script, it is straightforward to import the default export:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8256d79752173e7d51d23cf0e31f0b346c9b2c9" translate="yes" xml:space="preserve">
          <source>Then, in another script, it will be straightforward to import the default export:</source>
          <target state="translated">Затем,в другом сценарии,будет просто импортировать экспорт по умолчанию:</target>
        </trans-unit>
        <trans-unit id="8477eef984ea4b4878880d1778d1f4463dab4368" translate="yes" xml:space="preserve">
          <source>Thenable objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b4388540b214218d6ebf1d5963566a2d626a47" translate="yes" xml:space="preserve">
          <source>There are 2 ways to create a &lt;code&gt;RegExp&lt;/code&gt; object: a literal notation and a constructor. To indicate strings, the parameters to the literal notation do not use quotation marks while the parameters to the constructor function do use quotation marks. So the following expressions create the same regular expression:</source>
          <target state="translated">Есть два способа создать объект &lt;code&gt;RegExp&lt;/code&gt; : буквальное обозначение и конструктор. Для обозначения строк в параметрах буквальной нотации не используются кавычки, а в параметрах функции конструктора кавычки используются. Таким образом, следующие выражения создают одно и то же регулярное выражение:</target>
        </trans-unit>
        <trans-unit id="9c934ffa69a2298f5b7b5e35beabe7d61c92a422" translate="yes" xml:space="preserve">
          <source>There are a few variable names that are &lt;a href=&quot;../lexical_grammar#Keywords&quot;&gt;reserved keywords&lt;/a&gt;. You can't use these. Sorry :(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9900d3962d4ebc1cc24a8b6e55d7cf55a0a691" translate="yes" xml:space="preserve">
          <source>There are a few variable names that are &lt;a href=&quot;../lexical_grammar#Keywords&quot;&gt;reserverd keywords&lt;/a&gt;. You can't use these. Sorry :(</source>
          <target state="translated">Есть несколько имен переменных, которые являются &lt;a href=&quot;../lexical_grammar#Keywords&quot;&gt;зарезервированными ключевыми словами&lt;/a&gt; . Вы не можете их использовать. Извини :(</target>
        </trans-unit>
        <trans-unit id="6b75accc15d966eb077568ed588a93a43a522ec5" translate="yes" xml:space="preserve">
          <source>There are also a few non-configurable properties built into JavaScript. Maybe you tried to delete a mathematical constant.</source>
          <target state="translated">Есть также несколько неконфигурируемых свойств,встроенных в JavaScript.Возможно,вы пытались удалить математическую константу.</target>
        </trans-unit>
        <trans-unit id="23dcdc49ca1e35ff68fec21bb12a5225fcb5a8f1" translate="yes" xml:space="preserve">
          <source>There are also a few read-only properties built into JavaScript. Maybe you tried to redefine a mathematical constant.</source>
          <target state="translated">Есть также несколько встроенных в JavaScript свойств,доступных только для чтения.Возможно,вы пытались переопределить математическую константу.</target>
        </trans-unit>
        <trans-unit id="c1c9aeb3f2e2f35f5cd7d2044f132e06b0403e9f" translate="yes" xml:space="preserve">
          <source>There are also additional safer (and faster!) alternatives to &lt;code&gt;eval()&lt;/code&gt; or &lt;code&gt;Function()&lt;/code&gt; for common use-cases.</source>
          <target state="translated">Существуют также дополнительные более безопасные (и более быстрые!) Альтернативы &lt;code&gt;eval()&lt;/code&gt; или &lt;code&gt;Function()&lt;/code&gt; для распространенных случаев использования.</target>
        </trans-unit>
        <trans-unit id="3525ab2cab918389a404e06213ec2767c08f0ae0" translate="yes" xml:space="preserve">
          <source>There are different ways to create a copy of an object. The following is just one way and is presented to explain how &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; works by using ECMAScript 5 &lt;code&gt;Object.*&lt;/code&gt; meta property functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d29d25bfa36a0a07c4cea3c152fe33c4a7a12ce" translate="yes" xml:space="preserve">
          <source>There are five different types of operations that return &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef7627759e43c46aa6fde1debf8fc912c56d99e" translate="yes" xml:space="preserve">
          <source>There are invalid regular expression flags in the code. In a regular expression literal, which consists of a pattern enclosed between slashes, the flags are defined after the second flag. They can also be defined in the constructor function of the &lt;a href=&quot;../global_objects/regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object (second parameter). Regular expression flags can be used separately or together in any order, but there are only five of them in ECMAScript.</source>
          <target state="translated">В коде есть недопустимые флаги регулярного выражения. В литерале регулярного выражения, который состоит из шаблона, заключенного между косыми чертами, флаги определяются после второго флага. Их также можно определить в функции-конструкторе объекта &lt;a href=&quot;../global_objects/regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; (второй параметр). Флаги регулярных выражений можно использовать по отдельности или вместе в любом порядке, но в ECMAScript их всего пять.</target>
        </trans-unit>
        <trans-unit id="0c6b73b421181013c9343cae02a3a74cf6657f5f" translate="yes" xml:space="preserve">
          <source>There are invalid regular expression flags in the code. In a regular expression literal, which consists of a pattern enclosed between slashes, the flags are defined after the second slash. They can also be defined in the constructor function of the &lt;a href=&quot;../global_objects/regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object (second parameter). Regular expression flags can be used separately or together in any order, but there are only six of them in ECMAScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328306dfa957732254d942f732e2fe78edd08818" translate="yes" xml:space="preserve">
          <source>There are many APIs that accept iterables, for example: &lt;a href=&quot;global_objects/map&quot;&gt;&lt;code&gt;Map([iterable])&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;global_objects/weakmap&quot;&gt;&lt;code&gt;WeakMap([iterable])&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;global_objects/set&quot;&gt;&lt;code&gt;Set([iterable])&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;global_objects/weakset&quot;&gt;&lt;code&gt;WeakSet([iterable])&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Существует множество API, которые принимают итерируемые объекты, например: &lt;a href=&quot;global_objects/map&quot;&gt; &lt;code&gt;Map([iterable])&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;global_objects/weakmap&quot;&gt; &lt;code&gt;WeakMap([iterable])&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;global_objects/set&quot;&gt; &lt;code&gt;Set([iterable])&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;global_objects/weakset&quot;&gt; &lt;code&gt;WeakSet([iterable])&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="a19fad7ee3a1c683cf2203ca175b99d3c2e99019" translate="yes" xml:space="preserve">
          <source>There are many APIs that accept iterables. Some examples include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c6f5cd6a5367cad9d27d056730f43556553be4" translate="yes" xml:space="preserve">
          <source>There are many built-in functions in need of a (callback) function. You will have to provide a function in order to have these methods working properly:</source>
          <target state="translated">Существует множество встроенных функций,нуждающихся в функции (обратного вызова).Чтобы эти методы работали должным образом,вам необходимо предоставить функцию:</target>
        </trans-unit>
        <trans-unit id="6d086eb6393ae332077e3f5864edfd84eba69f01" translate="yes" xml:space="preserve">
          <source>There are many global objects, like &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, which are constructable using &lt;code&gt;new&lt;/code&gt;. However, some global objects are not and their properties and methods are static. The following JavaScript standard built-in objects are not a constructor: &lt;a href=&quot;../global_objects/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/reflect&quot;&gt;&lt;code&gt;Reflect&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/intl&quot;&gt;&lt;code&gt;Intl&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/atomics&quot;&gt;&lt;code&gt;Atomics&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c2ac8cc4acc6e241d016d55aa566b4aa3cdd5b5" translate="yes" xml:space="preserve">
          <source>There are many global objects, like &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, which are constructable using &lt;code&gt;new&lt;/code&gt;. However, some global objects are not and their properties and methods are static. The following JavaScript standard built-in objects are not a constructor: &lt;a href=&quot;../global_objects/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/json&quot;&gt;&lt;code&gt;JSON&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/reflect&quot;&gt;&lt;code&gt;Reflect&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/intl&quot;&gt;&lt;code&gt;Intl&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/SIMD&quot;&gt;&lt;code&gt;SIMD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/atomics&quot;&gt;&lt;code&gt;Atomics&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Есть много глобальных объектов, таких как &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , которые можно построить с помощью &lt;code&gt;new&lt;/code&gt; . Однако некоторые глобальные объекты таковыми не являются, а их свойства и методы статичны. Следующие стандартные встроенные объекты JavaScript не являются конструктором: &lt;a href=&quot;../global_objects/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/json&quot;&gt; &lt;code&gt;JSON&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/reflect&quot;&gt; &lt;code&gt;Reflect&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/intl&quot;&gt; &lt;code&gt;Intl&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/SIMD&quot;&gt; &lt;code&gt;SIMD&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/atomics&quot;&gt; &lt;code&gt;Atomics&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="693c279c59ce837d109a798ef270590b0da65569" translate="yes" xml:space="preserve">
          <source>There are multiple options to fix this error. Check what was intended to be achieved with the constant in question.</source>
          <target state="translated">Существует несколько вариантов исправления этой ошибки.Проверьте,что должно было быть достигнуто с помощью рассматриваемой константы.</target>
        </trans-unit>
        <trans-unit id="ae37fb979bea6740ce70fa124f14a2bebac08325" translate="yes" xml:space="preserve">
          <source>There are no keys in &lt;code&gt;Set&lt;/code&gt; objects, however, so the first two arguments are both &lt;strong&gt;values&lt;/strong&gt; contained in the &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;. This is to make it consistent with other &lt;code&gt;forEach()&lt;/code&gt; methods for &lt;a href=&quot;../map/foreach&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../array/foreach&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6607743e80788e12daa18af41a3e436f3282e40b" translate="yes" xml:space="preserve">
          <source>There are no keys in &lt;code&gt;Set&lt;/code&gt; objects. However, the first two arguments are both &lt;strong&gt;values&lt;/strong&gt; contained in the &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;, so that the callback function is consistent with the &lt;code&gt;forEach()&lt;/code&gt; methods for &lt;a href=&quot;../map/foreach&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../array/foreach&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В объектах &lt;code&gt;Set&lt;/code&gt; нет ключей . Однако первые два аргумента являются &lt;strong&gt;значениями,&lt;/strong&gt; содержащимися в &lt;a href=&quot;../set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; , так что функция обратного вызова согласована с методами &lt;code&gt;forEach()&lt;/code&gt; для &lt;a href=&quot;../map/foreach&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../array/foreach&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d5d1af1c0e36eebedace34f6ce7e6c0df713d90" translate="yes" xml:space="preserve">
          <source>There are only five valid regular expression flags.</source>
          <target state="translated">Существует только пять допустимых флагов регулярных выражений.</target>
        </trans-unit>
        <trans-unit id="ac2b0c8431e04307419d31c94f79361f6ff31325" translate="yes" xml:space="preserve">
          <source>There are only six valid regular expression flags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d10844d61cc30ce621c0ec05519562750155632" translate="yes" xml:space="preserve">
          <source>There are several differences between class expressions and &lt;a href=&quot;../statements/class&quot;&gt;class statements&lt;/a&gt;, however:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9f3d69fb3ca5669544de1d84f843d8aec9af8d" translate="yes" xml:space="preserve">
          <source>There are several methods available to obtain a date in various formats, as well as to perform time zone conversions. Particularly useful are the functions that output the date and time in Coordinated Universal Time (UTC), the global standard time defined by the World Time Standard. (This time is historically known as &lt;em&gt;Greenwich Mean Time&lt;/em&gt;, as UTC lies along the meridian that includes London&amp;mdash;and nearby Greenwich&amp;mdash;in the United Kingdom.) The user's device provides the local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8060ffb49f99b70454ca7c20d1536cfed320ba" translate="yes" xml:space="preserve">
          <source>There are several ways to define functions:</source>
          <target state="translated">Существует несколько способов определения функций:</target>
        </trans-unit>
        <trans-unit id="f46fa20df26a28f3afafec0caf95aacff7634c5f" translate="yes" xml:space="preserve">
          <source>There are three main differences between rest parameters and the &lt;a href=&quot;arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">Между параметрами rest и объектом &lt;a href=&quot;arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; есть три основных различия :</target>
        </trans-unit>
        <trans-unit id="cef9fc9ad4d99bdf9fc9094a7d87693bc809f91e" translate="yes" xml:space="preserve">
          <source>There are two different types of export, &lt;strong&gt;named&lt;/strong&gt; and &lt;strong&gt;default&lt;/strong&gt;. You can have multiple named exports per module but only one default export. Each type corresponds to one of the above syntax:</source>
          <target state="translated">Существует два разных типа экспорта: &lt;strong&gt;именованный&lt;/strong&gt; и по &lt;strong&gt;умолчанию&lt;/strong&gt; . Вы можете иметь несколько именованных экспортов для каждого модуля, но только один экспорт по умолчанию. Каждый тип соответствует одному из приведенных выше синтаксисов:</target>
        </trans-unit>
        <trans-unit id="3ddee455cf2360e71a5ca1f1e12008d3d2cfa4aa" translate="yes" xml:space="preserve">
          <source>There are two protocols: The &lt;a href=&quot;#The_iterable_protocol&quot;&gt;iterable protocol&lt;/a&gt; and the &lt;a href=&quot;#The_iterator_protocol&quot;&gt;iterator protocol&lt;/a&gt;.</source>
          <target state="translated">Существует два протокола: &lt;a href=&quot;#The_iterable_protocol&quot;&gt;итеративный протокол&lt;/a&gt; и &lt;a href=&quot;#The_iterator_protocol&quot;&gt;протокол итератора&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0c76d53ebd5426a3fa7bc5f62eec9a68003babb" translate="yes" xml:space="preserve">
          <source>There are two types of exports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f5403695ad4b2c5ef25a3e77d3c0edf0e80b0f" translate="yes" xml:space="preserve">
          <source>There are two ways to access an individual character in a string. The first is the &lt;a href=&quot;string/charat&quot;&gt;&lt;code&gt;charAt()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">Есть два способа получить доступ к отдельному символу в строке. Первый - это &lt;a href=&quot;string/charat&quot;&gt; &lt;code&gt;charAt()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ff0f992d892480fe8b54b8c31c3b84480f99798b" translate="yes" xml:space="preserve">
          <source>There are two ways to access properties: &lt;em&gt;dot notation&lt;/em&gt; and &lt;em&gt;bracket notation&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc1100e82567e2f208fe7a12e55d415075ed582" translate="yes" xml:space="preserve">
          <source>There are two ways to access properties: dot notation and bracket notation.</source>
          <target state="translated">Есть два способа доступа к свойствам:точечная нотация и нотация в скобках.</target>
        </trans-unit>
        <trans-unit id="e2613c11b0a9e89514dcfe56d5a9e17dd865f6da" translate="yes" xml:space="preserve">
          <source>There are two ways to create a &lt;code&gt;RegExp&lt;/code&gt; object: a &lt;em&gt;literal notation&lt;/em&gt; and a &lt;em&gt;constructor&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9eac4d67471374ce0fca103ca47a518c3f5d80f" translate="yes" xml:space="preserve">
          <source>There are two ways to get a &lt;code&gt;WebAssembly.Memory&lt;/code&gt; object. The first way is to construct it from JavaScript. The following example creates a new WebAssembly Memory instance with an initial size of 10 pages (640KiB), and a maximum size of 100 pages (6.4MiB).</source>
          <target state="translated">Есть два способа получить объект &lt;code&gt;WebAssembly.Memory&lt;/code&gt; . Первый способ - построить его из JavaScript. В следующем примере создается новый экземпляр WebAssembly Memory с начальным размером 10 страниц (640 КБ) и максимальным размером 100 страниц (6,4 МБ).</target>
        </trans-unit>
        <trans-unit id="401d6e16400c1f5eb29b5ace1859174bc801d65c" translate="yes" xml:space="preserve">
          <source>There are two ways to get a &lt;code&gt;WebAssembly.Memory&lt;/code&gt; object. The first way is to construct it from JavaScript. The following example creates a new WebAssembly Memory instance with an initial size of 10 pages (640KiB), and a maximum size of 100 pages (6.4MiB). Its &lt;code&gt;&lt;a href=&quot;memory/buffer&quot;&gt;buffer&lt;/a&gt;&lt;/code&gt; property will return an &lt;code&gt;&lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08103d657e3ab1660bea7f1345f275c3a3040e73" translate="yes" xml:space="preserve">
          <source>There can be only one ...restParam.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78ff8e98e3ceb773092982187159bbba9b6d20d" translate="yes" xml:space="preserve">
          <source>There can be only one special method with the name &quot;&lt;code&gt;constructor&lt;/code&gt;&quot; in a class. Having more than one occurrence of a &lt;code&gt;constructor&lt;/code&gt; method in a class will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cecd685f70850c0f03a58c949aa80ac6c0bdf27" translate="yes" xml:space="preserve">
          <source>There can be only one special method with the name &quot;constructor&quot; in a class. Having more than one occurrence of a &lt;code&gt;constructor&lt;/code&gt; method in a class will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="translated">В классе может быть только один специальный метод с именем &amp;laquo;конструктор&amp;raquo;. Наличие нескольких экземпляров метода &lt;code&gt;constructor&lt;/code&gt; в классе &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; ошибку SyntaxError .</target>
        </trans-unit>
        <trans-unit id="966e916d083f8a8c8e09515513f3abbf40caae80" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;../statements/function&quot;&gt;function statement&lt;/a&gt; in the code that requires a name. You'll need to check how functions are defined and if you need to provide a name for it, or if the function in question needs to be a function expression, an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt;, or if the function code is placed correctly in this context at all.</source>
          <target state="translated">В коде есть оператор &lt;a href=&quot;../statements/function&quot;&gt;функции,&lt;/a&gt; который требует имени. Вам нужно будет проверить, как определены функции, и нужно ли &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;указать&lt;/a&gt; для нее имя, или если рассматриваемая функция должна быть выражением функции, IIFE , или правильно ли код функции помещен в этот контекст вообще ,</target>
        </trans-unit>
        <trans-unit id="90808877b45c5bd07e9b7ced7576246800e49da6" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;../statements/function&quot;&gt;function statement&lt;/a&gt; in the code that requires a name. You'll need to check how functions are defined and if you need to provide a name for it, or if the function in question needs to be a function expression, an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/IIFE&quot;&gt;IIFE&lt;/a&gt;, or if the function code is placed correctly in this context at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5828690653ee4c273ebe5eabccc86bcf251e5ace" translate="yes" xml:space="preserve">
          <source>There is a &lt;code&gt;&lt;a href=&quot;../global_objects/function&quot;&gt;Function()&lt;/a&gt;&lt;/code&gt; constructor with at least two arguments passed in the code. The last argument is the source code for the new function you're creating. All the rest make up your new function's argument list.</source>
          <target state="translated">В коде есть конструктор &lt;code&gt;&lt;a href=&quot;../global_objects/function&quot;&gt;Function()&lt;/a&gt;&lt;/code&gt; по крайней мере, с двумя аргументами. Последний аргумент - это исходный код для новой функции, которую вы создаете. Все остальное составляет список аргументов вашей новой функции.</target>
        </trans-unit>
        <trans-unit id="36e983a9e9bfbb388d7bc8a8b42ff6aaf41e7557" translate="yes" xml:space="preserve">
          <source>There is a deprecated source map syntax in a JavaScript source.</source>
          <target state="translated">В исходном коде JavaScript имеется устаревший синтаксис исходной карты.</target>
        </trans-unit>
        <trans-unit id="dad988a3dad8edbdac623e474ca021d682a19413" translate="yes" xml:space="preserve">
          <source>There is a distinction between the function name and the variable the function is assigned to. The function name cannot be changed, while the variable the function is assigned to can be reassigned. The function name can be used only within the function's body. Attempting to use it outside the function's body results in an error (or &lt;code&gt;undefined&lt;/code&gt; if the function name was previously declared via a &lt;code&gt;var&lt;/code&gt; statement). For example:</source>
          <target state="translated">Существует различие между именем функции и переменной, которой она назначена. Имя функции нельзя изменить, а переменную, которой назначена функция, можно переназначить. Имя функции можно использовать только в теле функции. Попытка использовать его вне тела функции приводит к ошибке (или &lt;code&gt;undefined&lt;/code&gt; , если имя функции было ранее объявлено с помощью оператора &lt;code&gt;var&lt;/code&gt; ). Например:</target>
        </trans-unit>
        <trans-unit id="eef3629e677fb9eb1f15308be8de9f061c6ef012" translate="yes" xml:space="preserve">
          <source>There is a mistake in the &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer&lt;/a&gt; syntax somewhere. Might be in fact a missing curly bracket, but could also be a missing comma, for example. Also check if any closing curly brackets or parenthesis are in the correct order. Indenting or formatting the code a bit nicer might also help you to see through the jungle.</source>
          <target state="translated">Где-то есть ошибка в синтаксисе &lt;a href=&quot;../operators/object_initializer&quot;&gt;инициализатора объекта&lt;/a&gt; . На самом деле это может быть отсутствующая фигурная скобка, но также может быть, например, отсутствующая запятая. Также проверьте правильность порядка расположения закрывающих фигурных скобок или скобок. Более удачный отступ или форматирование кода также могут помочь вам увидеть сквозь джунгли.</target>
        </trans-unit>
        <trans-unit id="5bc3b0d19ead633f8047ed968b70ba512ec3dd88" translate="yes" xml:space="preserve">
          <source>There is a more usage oriented way to think of &lt;code&gt;isNaN()&lt;/code&gt;: If &lt;code&gt;isNaN(x)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, you can use &lt;code&gt;x&lt;/code&gt; in an arithmetic expression not making the expression return &lt;code&gt;NaN&lt;/code&gt;. If it returns &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt; will make every arithmetic expression return &lt;code&gt;NaN&lt;/code&gt;. This means that in JavaScript, &lt;code&gt;isNaN(x) == true&lt;/code&gt; is equivalent to &lt;code&gt;x - 0&lt;/code&gt; returning &lt;code&gt;NaN&lt;/code&gt; (though in JavaScript &lt;code&gt;x - 0 == NaN&lt;/code&gt; always returns false, so you can't test for it). Actually, &lt;code&gt;isNaN(x)&lt;/code&gt;, &lt;code&gt;isNaN(x - 0)&lt;/code&gt;, &lt;code&gt;isNaN(Number(x))&lt;/code&gt;, &lt;code&gt;Number.isNaN(x - 0)&lt;/code&gt;, and &lt;code&gt;Number.isNaN(Number(x))&lt;/code&gt; always return the same and in JavaScript &lt;code&gt;isNaN(x)&lt;/code&gt; is just the shortest possible form to express each of these terms.</source>
          <target state="translated">Существует более ориентированный на использование способ думать об &lt;code&gt;isNaN()&lt;/code&gt; : если &lt;code&gt;isNaN(x)&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; , вы можете использовать &lt;code&gt;x&lt;/code&gt; в арифметическом выражении, не заставляя выражение возвращать &lt;code&gt;NaN&lt;/code&gt; . Если он вернет &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;x&lt;/code&gt; заставит каждое арифметическое выражение возвращать &lt;code&gt;NaN&lt;/code&gt; . Это означает, что в JavaScript &lt;code&gt;isNaN(x) == true&lt;/code&gt; эквивалентно &lt;code&gt;x - 0&lt;/code&gt; возвращающему &lt;code&gt;NaN&lt;/code&gt; (хотя в JavaScript &lt;code&gt;x - 0 == NaN&lt;/code&gt; всегда возвращает false, поэтому вы не можете проверить это). На самом деле &lt;code&gt;isNaN(x)&lt;/code&gt; , &lt;code&gt;isNaN(x - 0)&lt;/code&gt; , &lt;code&gt;isNaN(Number(x))&lt;/code&gt; , &lt;code&gt;Number.isNaN(x - 0)&lt;/code&gt; и &lt;code&gt;Number.isNaN(Number(x))&lt;/code&gt; всегда возвращают одно и то же, а в JavaScript &lt;code&gt;isNaN(x)&lt;/code&gt; - это кратчайшая возможная форма для выражения каждого из этих терминов.</target>
        </trans-unit>
        <trans-unit id="40dcca166458da9c01e173a2ec8260bb48d15fa0" translate="yes" xml:space="preserve">
          <source>There is a non-existent variable referenced somewhere. This variable needs to be declared, or you need make sure it is available in your current script or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/scope&quot;&gt;scope&lt;/a&gt;.</source>
          <target state="translated">Где-то есть ссылка на несуществующую переменную. Эту переменную нужно объявить или убедиться, что она доступна в вашем текущем скрипте или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/scope&quot;&gt;области&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c24a378ea23a0ced2fcd64dacfbf3a9155ca1871" translate="yes" xml:space="preserve">
          <source>There is a non-existent variable referenced somewhere. This variable needs to be declared, or you need to make sure it is available in your current script or &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/scope&quot;&gt;scope&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8329c9f9ae3f5403889a2d82f303e7411b01151c" translate="yes" xml:space="preserve">
          <source>There is a semicolon (&lt;code&gt;;&lt;/code&gt;) missing somewhere. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript statements&lt;/a&gt; must be terminated with semicolons. Some of them are affected by &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion (ASI)&lt;/a&gt;, but in this case you need to provide a semicolon, so that JavaScript can parse the source code correctly.</source>
          <target state="translated">Где-то отсутствует точка с запятой ( &lt;code&gt;;&lt;/code&gt; ). &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;Операторы JavaScript&lt;/a&gt; должны заканчиваться точкой с запятой. На некоторые из них действует &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;автоматическая вставка точки с запятой (ASI)&lt;/a&gt; , но в этом случае вам необходимо указать точку с запятой, чтобы JavaScript мог правильно проанализировать исходный код.</target>
        </trans-unit>
        <trans-unit id="d5f3969067a779f17814a6ff550c49abff4d7d19" translate="yes" xml:space="preserve">
          <source>There is a semicolon (&lt;code&gt;;&lt;/code&gt;) missing somewhere. &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript statements&lt;/a&gt; must be terminated with semicolons. Some of them are affected by &lt;a href=&quot;../lexical_grammar#Automatic_semicolon_insertion&quot;&gt;automatic semicolon insertion (ASI)&lt;/a&gt;, but in this case you need to provide a semicolon, so that JavaScript can parse the source code correctly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee613cc3110951c29ee7b623cb9cbfe91ba8967" translate="yes" xml:space="preserve">
          <source>There is a special syntax for declaring functions (see &lt;a href=&quot;statements/function&quot;&gt;function statement&lt;/a&gt; for details):</source>
          <target state="translated">Существует специальный синтаксис для объявления функций (см &lt;a href=&quot;statements/function&quot;&gt;функции заявления&lt;/a&gt; подробности):</target>
        </trans-unit>
        <trans-unit id="734192a42687a707ba6bbb1d256a37623fffc32a" translate="yes" xml:space="preserve">
          <source>There is a special syntax for generator function declarations (see &lt;a href=&quot;statements/function*&quot;&gt;&lt;code&gt;function* statement&lt;/code&gt;&lt;/a&gt; for details):</source>
          <target state="translated">Существует специальный синтаксис для объявлений функций генератора (подробности см. В &lt;a href=&quot;statements/function*&quot;&gt; &lt;code&gt;function* statement&lt;/code&gt; &lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="63b7c66671ccda2191b78892ec7eccc87f33b7b5" translate="yes" xml:space="preserve">
          <source>There is a syntax mistake when creating a function somewhere. Also check if any closing curly brackets or parenthesis are in the correct order. Indenting or formatting the code a bit nicer might also help you to see through the jungle.</source>
          <target state="translated">Где-то при создании функции возникает синтаксическая ошибка.Также проверьте,чтобы закрывающиеся фигурные скобки или круглые скобки были в правильном порядке.Отступление или более приятное форматирование кода также может помочь увидеть сквозь джунгли.</target>
        </trans-unit>
        <trans-unit id="3f90a14251ff602bf67fdc64be67fee8f5029bc0" translate="yes" xml:space="preserve">
          <source>There is also a function-like dynamic &lt;code&gt;&lt;strong&gt;import()&lt;/strong&gt;&lt;/code&gt;, which does not require scripts of &lt;code&gt;type=&quot;module&quot;&lt;/code&gt;.</source>
          <target state="translated">Существует также подобный функции динамический &lt;code&gt;&lt;strong&gt;import()&lt;/strong&gt;&lt;/code&gt; , который не требует скриптов &lt;code&gt;type=&quot;module&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0ea518cfe459b524823bdf5286dc6e89efe30c3" translate="yes" xml:space="preserve">
          <source>There is an attempt to set a new value to a property for which only a &lt;a href=&quot;../functions/get&quot;&gt;getter&lt;/a&gt; is specified. While this will be silently ignored in non-strict mode, it will throw a &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;.</source>
          <target state="translated">Предпринята попытка установить новое значение для свойства, для которого указан только &lt;a href=&quot;../functions/get&quot;&gt;геттер&lt;/a&gt; . В то время как это будет игнорироваться в нестрогой режиме, он будет бросать &lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;../strict_mode&quot;&gt;строгом режиме&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="601d52f1826cbdd8b13cf22716b3e8003a4669ef" translate="yes" xml:space="preserve">
          <source>There is an error with how a function is called. More arguments need to be provided.</source>
          <target state="translated">Существует ошибка в том,как вызывается функция.Необходимо предоставить больше аргументов.</target>
        </trans-unit>
        <trans-unit id="e8bd24391f1947eca0620d3846b17ab9be056f5e" translate="yes" xml:space="preserve">
          <source>There is an error with how a function is called. This might be a typo, a missing operator, or an unescaped string, for example.</source>
          <target state="translated">Существует ошибка в том,как вызывается функция.Это может быть,например,опечатка,пропущенный оператор или невыполненная строка.</target>
        </trans-unit>
        <trans-unit id="079a090a362d6ae9416cb17d4e30a20176cb1123" translate="yes" xml:space="preserve">
          <source>There is an error with how an &lt;code&gt;&lt;a href=&quot;../statements/if...else&quot;&gt;if&lt;/a&gt;&lt;/code&gt; condition is written. In any programming language, code needs to make decisions and carry out actions accordingly depending on different inputs. The if statement executes a statement if a specified condition is truthy. In JavaScript, this condition must appear in parenthesis after the &lt;code&gt;if&lt;/code&gt; keyword, like this:</source>
          <target state="translated">Ошибка при написании условия &lt;code&gt;&lt;a href=&quot;../statements/if...else&quot;&gt;if&lt;/a&gt;&lt;/code&gt; . На любом языке программирования код должен принимать решения и выполнять соответствующие действия в зависимости от различных входных данных. Оператор if выполняет оператор, если заданное условие истинно. В JavaScript это условие должно стоять в скобках после ключевого слова &lt;code&gt;if&lt;/code&gt; , например:</target>
        </trans-unit>
        <trans-unit id="ac3ac3c8fba568b075002a16e13254b719e6ace9" translate="yes" xml:space="preserve">
          <source>There is an error with the array initializer syntax somewhere. Likely there is a closing bracket (&quot;&lt;code&gt;]&lt;/code&gt;&quot;) or a comma (&quot;&lt;code&gt;,&lt;/code&gt;&quot;) missing.</source>
          <target state="translated">Где-то ошибка синтаксиса инициализатора массива. Вероятно, отсутствует закрывающая скобка (&quot; &lt;code&gt;]&lt;/code&gt; &quot;) или запятая (&quot; &lt;code&gt;,&lt;/code&gt; &quot;).</target>
        </trans-unit>
        <trans-unit id="a76af856478d22b7a91de90ab7d8913bbe495720" translate="yes" xml:space="preserve">
          <source>There is an invalid or unexpected token that doesn't belong at this position in the code. Use an editor that supports syntax highlighting and carefully check your code against mismatches like a minus sign (&lt;code&gt; - &lt;/code&gt;) versus a dash (&lt;code&gt; &amp;ndash; &lt;/code&gt;) or simple quotes (&lt;code&gt; &quot; &lt;/code&gt;) vs non-standard quotation marks (&lt;code&gt; &amp;ldquo; &lt;/code&gt;).</source>
          <target state="translated">Недействительный или неожиданный токен, которому не место в этой позиции в коде. Используйте редактор, который поддерживает выделение синтаксиса, и внимательно проверьте свой код на наличие несоответствий, таких как знак минуса ( &lt;code&gt; - &lt;/code&gt; ) и тире ( &lt;code&gt; &amp;ndash; &lt;/code&gt; ) или простые кавычки ( &lt;code&gt; &quot; &lt;/code&gt; ) против нестандартных кавычек ( &lt;code&gt; &amp;ldquo; &lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3d79d3a8162216d15e7a3487ca2db20db3c47f5d" translate="yes" xml:space="preserve">
          <source>There is an open source library available called &lt;a href=&quot;https://null.house/open-source/mapsort&quot;&gt;mapsort&lt;/a&gt; which applies this approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6205123b9aa140036711fe353dec412098e0dcd4" translate="yes" xml:space="preserve">
          <source>There is an unterminated &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; somewhere. String literals must be enclosed by single (&lt;code&gt;'&lt;/code&gt;) or double (&lt;code&gt;&quot;&lt;/code&gt;) quotes. JavaScript makes no distinction between single-quoted strings and double-quoted strings. &lt;a href=&quot;../global_objects/string#Escape_notation&quot;&gt;Escape sequences&lt;/a&gt; work in strings created with either single or double quotes. To fix this error, check if:</source>
          <target state="translated">Где-то есть незавершенная &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; . Строковые литералы должны быть заключены в одинарные ( &lt;code&gt;'&lt;/code&gt; ) или двойные ( &lt;code&gt;&quot;&lt;/code&gt; ) кавычки. JavaScript не делает различий между строками в одинарных и двойных кавычках. &lt;a href=&quot;../global_objects/string#Escape_notation&quot;&gt;Управляющие последовательности&lt;/a&gt; работают в строках, созданных с помощью одинарных или двойных кавычек. Чтобы исправить эту ошибку, проверить, если:</target>
        </trans-unit>
        <trans-unit id="dced52e45725251a5cf4e231f95674835cb7763b" translate="yes" xml:space="preserve">
          <source>There is no alignment constraint; multi-byte values may be fetched from any offset.</source>
          <target state="translated">Ограничения на выравнивание нет;многобайтовые значения могут быть получены с любого смещения.</target>
        </trans-unit>
        <trans-unit id="813bfd8ad24be1ca9ab314e589857976cf8d0011" translate="yes" xml:space="preserve">
          <source>There is no way to make an object extensible again once it has been made non-extensible.</source>
          <target state="translated">Нет способа сделать объект снова расширяемым после того,как он был сделан не расширяемым.</target>
        </trans-unit>
        <trans-unit id="c6b6702ca6f9ac3a7721cff4e66e661d718f8baf" translate="yes" xml:space="preserve">
          <source>There is no way to stop or break a &lt;code&gt;forEach()&lt;/code&gt; loop other than by throwing an exception. If you need such behavior, the &lt;code&gt;forEach()&lt;/code&gt; method is the wrong tool.</source>
          <target state="translated">Нет другого способа остановить или прервать цикл &lt;code&gt;forEach()&lt;/code&gt; кроме как выбросить исключение. Если вам нужно такое поведение, метод &lt;code&gt;forEach()&lt;/code&gt; - неподходящий инструмент.</target>
        </trans-unit>
        <trans-unit id="19b88f705ac5c1d6eceb88623955d3cbf474e151" translate="yes" xml:space="preserve">
          <source>There is nothing special about JavaScript arrays and the properties that cause this. JavaScript properties that begin with a digit cannot be referenced with dot notation and must be accessed using bracket notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e79d1c336655d9a3379f42b74223cd9f8017298" translate="yes" xml:space="preserve">
          <source>There is nothing special about JavaScript arrays and the properties that cause this. JavaScript properties that begin with a digit cannot be referenced with dot notation; and must be accessed using bracket notation. For example, if you had an object with a property named &lt;code&gt;'3d'&lt;/code&gt;, it can only be referenced using bracket notation. E.g.:</source>
          <target state="translated">В массивах JavaScript и вызывающих их свойствах нет ничего особенного. На свойства JavaScript, начинающиеся с цифры, нельзя ссылаться через точечную нотацию; и должен быть доступен в скобках. Например, если у вас есть объект со свойством с именем &lt;code&gt;'3d'&lt;/code&gt; , на него можно ссылаться только в скобках. Например:</target>
        </trans-unit>
        <trans-unit id="252b4e8437eedd402437cd68393224c8497ca855" translate="yes" xml:space="preserve">
          <source>There isn't any method in an Object itself to delete its own properties (e.g. like &lt;code&gt;&lt;a href=&quot;map/delete&quot;&gt;Map.prototype.delete()&lt;/a&gt;&lt;/code&gt;). To do so one has to use the &lt;a href=&quot;../operators/delete&quot;&gt;delete operator&lt;/a&gt;.</source>
          <target state="translated">В самом объекте нет метода для удаления его собственных свойств (например, как &lt;code&gt;&lt;a href=&quot;map/delete&quot;&gt;Map.prototype.delete()&lt;/a&gt;&lt;/code&gt; ). Для этого нужно использовать &lt;a href=&quot;../operators/delete&quot;&gt;оператор удаления&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="10b1ddca0fb6ef669c81b9c4f20fa38570137851" translate="yes" xml:space="preserve">
          <source>There isn't any method in an Object itself to delete its own properties (such as &lt;a href=&quot;map/delete&quot;&gt;&lt;code&gt;Map.prototype.delete()&lt;/code&gt;&lt;/a&gt;). To do so, one must use the &lt;a href=&quot;../operators/delete&quot;&gt;delete operator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d402ccef36d314f4b2419d96fd7f974013a48d" translate="yes" xml:space="preserve">
          <source>There was an assignment (&lt;code&gt;=&lt;/code&gt;) when you would normally expect a test for equality (&lt;code&gt;==&lt;/code&gt;). To help debugging, JavaScript (with strict warnings enabled) warns about this pattern.</source>
          <target state="translated">Было присвоение ( &lt;code&gt;=&lt;/code&gt; ), когда вы обычно ожидали проверки на равенство ( &lt;code&gt;==&lt;/code&gt; ). Чтобы облегчить отладку, JavaScript (с включенными строгими предупреждениями) предупреждает об этом шаблоне.</target>
        </trans-unit>
        <trans-unit id="f9227994116fe5d0f8085970ec6f16ff6bfdc73c" translate="yes" xml:space="preserve">
          <source>There was an attempt to use an object or a variable as a constructor, but that object or variable is not a constructor. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/constructor&quot;&gt;constructor&lt;/a&gt; or the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt; for more information on what a constructor is.</source>
          <target state="translated">Была попытка использовать объект или переменную в качестве конструктора, но этот объект или переменная не является конструктором. См. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/constructor&quot;&gt;Конструктор&lt;/a&gt; или &lt;a href=&quot;../operators/new&quot;&gt;оператор &lt;/a&gt; &lt;code&gt;new&lt;/code&gt; для получения дополнительной информации о конструкторе.</target>
        </trans-unit>
        <trans-unit id="f951ee1c35465bac5e1963445b6acaf0bbbefedc" translate="yes" xml:space="preserve">
          <source>There was an attempt to use an object or a variable as a constructor, but that object or variable is not a constructor. See &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/constructor&quot;&gt;constructor&lt;/a&gt; or the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt; for more information on what a constructor is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891ffccc316759ba568170669ba5546a49a0e599" translate="yes" xml:space="preserve">
          <source>There was an out of range precision argument in one of these methods:</source>
          <target state="translated">В одном из этих методов был аргумент о внедиапазонной точности:</target>
        </trans-unit>
        <trans-unit id="8555a1b96929dda25e05855a91841930b9895b54" translate="yes" xml:space="preserve">
          <source>There was an unexpected assignment somewhere. This might be due to a mismatch of a &lt;a href=&quot;../operators/assignment_operators&quot;&gt;assignment operator&lt;/a&gt; and a &lt;a href=&quot;../operators/comparison_operators&quot;&gt;comparison operator&lt;/a&gt;, for example. While a single &quot;&lt;code&gt;=&lt;/code&gt;&quot; sign assigns a value to a variable, the &quot;&lt;code&gt;==&lt;/code&gt;&quot; or &quot;&lt;code&gt;===&lt;/code&gt;&quot; operators compare a value.</source>
          <target state="translated">Где-то было неожиданное задание. Это может быть связано с несоответствием с &lt;a href=&quot;../operators/assignment_operators&quot;&gt;оператором присваивания&lt;/a&gt; и &lt;a href=&quot;../operators/comparison_operators&quot;&gt;оператор сравнения&lt;/a&gt; , например. В то время как один знак &amp;laquo; &lt;code&gt;=&lt;/code&gt; &amp;raquo; присваивает значение переменной, операторы &amp;laquo; &lt;code&gt;==&lt;/code&gt; &amp;raquo; или &amp;laquo; &lt;code&gt;===&lt;/code&gt; &amp;raquo; сравнивают значение.</target>
        </trans-unit>
        <trans-unit id="2cc0b62de74b6015a40cc1de92b6c589e33d8858" translate="yes" xml:space="preserve">
          <source>There was an unexpected assignment somewhere. This might be due to a mismatch of a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;assignment operator&lt;/a&gt; and a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;comparison operator&lt;/a&gt;, for example. While a single &quot;&lt;code&gt;=&lt;/code&gt;&quot; sign assigns a value to a variable, the &quot;&lt;code&gt;==&lt;/code&gt;&quot; or &quot;&lt;code&gt;===&lt;/code&gt;&quot; operators compare a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c743d038ce86d7d1cf9aef67d46c92805bb7360b" translate="yes" xml:space="preserve">
          <source>There was an unexpected type. This occurs oftentimes with &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">Был неожиданный тип. Это часто происходит с &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; значениями.</target>
        </trans-unit>
        <trans-unit id="fa851d659f9e3a5e5404c00816c8b91ca7df0be7" translate="yes" xml:space="preserve">
          <source>There was attempt to access an object for which you have no permission. This is likely an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; element loaded from a different domain for which you violated the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;.</source>
          <target state="translated">Была попытка получить доступ к объекту, для которого у вас нет разрешения. Скорее всего, это элемент &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; ,&lt;/a&gt; загруженный из другого домена, для которого вы нарушили &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;политику&lt;/a&gt; того же происхождения .</target>
        </trans-unit>
        <trans-unit id="573476911bbd2032116682ce4f1dfae94f4ea1e9" translate="yes" xml:space="preserve">
          <source>There was attempt to access an object for which you have no permission. This is likely an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; element loaded from a different domain for which you violated the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;same-origin policy&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2fec0c776a0bb5124c90983a67b0ba18a2c6ee" translate="yes" xml:space="preserve">
          <source>There's a deprecated idiom to iterate over the specified object's key-value pairs using &lt;a href=&quot;../statements/for_each...in&quot;&gt;&lt;code&gt;for each...in&lt;/code&gt;&lt;/a&gt; and the deprecated &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Существует устаревшая идиома для перебора пар ключ-значение указанного объекта с использованием &lt;a href=&quot;../statements/for_each...in&quot;&gt; &lt;code&gt;for each...in&lt;/code&gt; &lt;/a&gt; и устаревшего объекта &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator&quot;&gt; &lt;code&gt;Iterator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f9de48cf02c49531431b9a478a6c399bfdff23ed" translate="yes" xml:space="preserve">
          <source>There's a deprecated idiom to iterate over the specified object's key-value pairs using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for_each...in&quot;&gt;&lt;code&gt;for each...in&lt;/code&gt;&lt;/a&gt; and the deprecated &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Iterator&quot;&gt;&lt;code&gt;Iterator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79eb6500b4844bbdbe1fa124b2a371c97ab0a22" translate="yes" xml:space="preserve">
          <source>There's a subtle difference between the &lt;code&gt;substring()&lt;/code&gt; and &lt;a href=&quot;substr&quot;&gt;&lt;code&gt;substr()&lt;/code&gt;&lt;/a&gt; methods, so you should be careful not to get them confused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47764807ef3f4ab89be2f3e1fff9829ca861331" translate="yes" xml:space="preserve">
          <source>There's a subtle difference between the &lt;code&gt;substring()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; methods, and you should be careful not get them confused.</source>
          <target state="translated">Между методами &lt;code&gt;substring()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;substr&quot;&gt;substr()&lt;/a&gt;&lt;/code&gt; есть небольшая разница , и вы должны быть осторожны, чтобы не запутать их.</target>
        </trans-unit>
        <trans-unit id="388052c72ae9c911a2a9c7d0600224bb8a43d9e8" translate="yes" xml:space="preserve">
          <source>Therefore we can't obtain the class name for virtually any class with a static method property &lt;code&gt;name()&lt;/code&gt;:</source>
          <target state="translated">Поэтому мы не можем получить имя класса практически для любого класса с помощью статического свойства метода &lt;code&gt;name()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="44baae7b20052d28f0d454acdd98cfe8611bd134" translate="yes" xml:space="preserve">
          <source>Therefore you may not rely on the built-in &lt;code&gt;Function.name&lt;/code&gt; property to always hold a class's name.</source>
          <target state="translated">Поэтому вы не можете полагаться на встроенное свойство &lt;code&gt;Function.name&lt;/code&gt; , чтобы всегда хранить имя класса.</target>
        </trans-unit>
        <trans-unit id="2cdba98eff68875b3d99014eb4149d2554d08b62" translate="yes" xml:space="preserve">
          <source>Therefore, if compatibility with older JavaScript engines is required, it is perilous to directly substitute the string returned by &lt;code&gt;JSON.stringify&lt;/code&gt; into a JavaScript string to be passed to &lt;code&gt;eval&lt;/code&gt; or &lt;code&gt;new Function&lt;/code&gt; or as part of a &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; URL, and the following utility can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbf70e76e01d89d71c9236522a7b76a076b920f" translate="yes" xml:space="preserve">
          <source>Therefore, if the JSON is meant to be evaluated or directly utilized within &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt;, the following utility can be used:</source>
          <target state="translated">Следовательно, если JSON предназначен для оценки или прямого использования в &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; , можно использовать следующую утилиту:</target>
        </trans-unit>
        <trans-unit id="69388a8bead74bc115a22073ad3512cb27d74046" translate="yes" xml:space="preserve">
          <source>Therefore, this appears to work in a way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cbde5ec7d37565542fef4246a75fc1451e7a61" translate="yes" xml:space="preserve">
          <source>These are &lt;strong&gt;not&lt;/strong&gt; part of ECMAScript standards and they are not supported by non-Gecko browsers. As a standard alternative, you can convert your object to a proper array using &lt;a href=&quot;array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt;; although that method may not be supported in old browsers:</source>
          <target state="translated">Они &lt;strong&gt;не&lt;/strong&gt; являются частью стандартов ECMAScript и не поддерживаются браузерами, отличными от Gecko. В качестве стандартной альтернативы вы можете преобразовать свой объект в правильный массив с помощью &lt;a href=&quot;array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt; ; хотя этот метод может не поддерживаться в старых браузерах:</target>
        </trans-unit>
        <trans-unit id="19f1bdd2a382fb545b7ca233307dfaaa84cb23aa" translate="yes" xml:space="preserve">
          <source>These are always reserved:</source>
          <target state="translated">Они всегда зарезервированы:</target>
        </trans-unit>
        <trans-unit id="59320fcd83ed1d0de297136831e93c2907c65ba8" translate="yes" xml:space="preserve">
          <source>These are the base objects representing numbers, dates, and mathematical calculations.</source>
          <target state="translated">Это базовые объекты,представляющие собой числа,даты и математические вычисления.</target>
        </trans-unit>
        <trans-unit id="adf2d53afae434de46f79f2141ac3e8883ace949" translate="yes" xml:space="preserve">
          <source>These are the fundamental, basic objects upon which all other objects are based. This includes objects that represent general objects, functions, and errors.</source>
          <target state="translated">Это фундаментальные,базовые объекты,на которых базируются все остальные объекты.Сюда входят объекты,которые представляют собой общие объекты,функции и ошибки.</target>
        </trans-unit>
        <trans-unit id="6fe3d01344deb2754adced0b183508db74566905" translate="yes" xml:space="preserve">
          <source>These arguments (if any) follow the provided &lt;code&gt;this&lt;/code&gt; value and are then inserted at the start of the arguments passed to the target function, followed by whatever arguments are passed bound function at the time it is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c8e79787069b6f572c221d974856e04924de96" translate="yes" xml:space="preserve">
          <source>These arguments count backwards from the end by &lt;code&gt;5&lt;/code&gt; to find the start index and backwards from the end by &lt;code&gt;1&lt;/code&gt; to find the end index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f95be1daff8bb613e12808aacd684fe02e1320" translate="yes" xml:space="preserve">
          <source>These arguments customize the behavior of the function and let applications specify the language whose formatting conventions should be used. In implementations which ignore the &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation-dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23194fbe91023a3d742e7a70b01d6964ebbe7f8c" translate="yes" xml:space="preserve">
          <source>These differences are very subtle differences. It's possible that a test suite doesn't catch this kind of subtle difference. Careful review of your code base will probably be necessary to be sure these differences don't affect the semantics of your code. Fortunately, this careful review can be done gradually down the function granularity.</source>
          <target state="translated">Эти различия очень тонкие.Возможно,что тестовый набор не улавливает такие тонкие различия.Вероятно,потребуется тщательный просмотр вашей кодовой базы,чтобы убедиться,что эти различия не влияют на семантику вашего кода.К счастью,такой тщательный просмотр можно делать постепенно,вниз по гранулометричности функций.</target>
        </trans-unit>
        <trans-unit id="7c06c6284f0ffaf0405fa11a8b8cc1d7f5522abc" translate="yes" xml:space="preserve">
          <source>These errors are good, because they reveal plain errors or bad practices. They occur before the code is running.</source>
          <target state="translated">Эти ошибки хороши,потому что они выявляют простые ошибки или плохую практику.Они возникают до того,как код запущен.</target>
        </trans-unit>
        <trans-unit id="18942180c831ea71766358ab2ffac6c2e9f26c64" translate="yes" xml:space="preserve">
          <source>These flags are represented by a sequence of bits: DCBA. When a flag is &lt;em&gt;set&lt;/em&gt;, it has a value of 1. When a flag is &lt;em&gt;cleared&lt;/em&gt;, it has a value of 0. Suppose a variable &lt;code&gt;flags&lt;/code&gt; has the binary value 0101:</source>
          <target state="translated">Эти флаги представлены последовательностью битов: DCBA. Когда флаг &lt;em&gt;установлен&lt;/em&gt; , он имеет значение 1. Когда флаг &lt;em&gt;сброшен&lt;/em&gt; , он имеет значение 0. Предположим, что переменная &lt;code&gt;flags&lt;/code&gt; имеет двоичное значение 0101:</target>
        </trans-unit>
        <trans-unit id="7a8bbfc9a327eeeeb451f9c5c4ea38d87c6a7c23" translate="yes" xml:space="preserve">
          <source>These functions optionally take an &lt;code&gt;initialValue&lt;/code&gt; (which will be used as the first argument to the first call of the &lt;code&gt;callback&lt;/code&gt;). However, if no initial value is provided, it will use the first element of the &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; as the initial value. This error is raised when an empty array is provided because no initial value can be returned in that case.</source>
          <target state="translated">Эти функции необязательно принимают &lt;code&gt;initialValue&lt;/code&gt; (которое будет использоваться в качестве первого аргумента при первом вызове &lt;code&gt;callback&lt;/code&gt; ). Однако, если начальное значение не указано, в качестве начального значения будет использоваться первый элемент &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; . Эта ошибка возникает, когда предоставляется пустой массив, поскольку в этом случае невозможно вернуть начальное значение.</target>
        </trans-unit>
        <trans-unit id="d3ebf99aa1376aaab8e2544a1885be39b3c3454f" translate="yes" xml:space="preserve">
          <source>These global functions&amp;mdash;functions which are called globally rather than on an object&amp;mdash;directly return their results to the caller.</source>
          <target state="translated">Эти глобальные функции - функции, которые вызываются глобально, а не для объекта - напрямую возвращают свои результаты вызывающей стороне.</target>
        </trans-unit>
        <trans-unit id="be3662942b2e23e810fbcea86843f724a5380ee4" translate="yes" xml:space="preserve">
          <source>These global properties return a simple value; they have no properties or methods.</source>
          <target state="translated">Эти глобальные свойства возвращают простое значение;они не имеют свойств или методов.</target>
        </trans-unit>
        <trans-unit id="3eb980c6d99c1f5db9089a31df189593846fe7bf" translate="yes" xml:space="preserve">
          <source>These lines display the following:</source>
          <target state="translated">Эти строки отображают следующее:</target>
        </trans-unit>
        <trans-unit id="b875f200c113c3bad4e865d005ac933a288076a1" translate="yes" xml:space="preserve">
          <source>These methods are of limited use, as they provide only a subset of the available HTML tags and attributes.</source>
          <target state="translated">Эти методы имеют ограниченное применение,так как они предоставляют только подмножество доступных HTML-тегов и атрибутов.</target>
        </trans-unit>
        <trans-unit id="e3ee9bd03f2c6bfdada06f10486463c886ffa413" translate="yes" xml:space="preserve">
          <source>These methods do not modify the array and return some representation of the array.</source>
          <target state="translated">Эти методы не изменяют массив и возвращают некоторое представление массива.</target>
        </trans-unit>
        <trans-unit id="cca597257f192f0edcd8d3eb2d971b0102febe49" translate="yes" xml:space="preserve">
          <source>These methods modify the array:</source>
          <target state="translated">Эти методы изменяют массив:</target>
        </trans-unit>
        <trans-unit id="dddf9337efe3c3b9762a99aafc56201b0dedb279" translate="yes" xml:space="preserve">
          <source>These objects represent and interact with structured data buffers and data coded using JavaScript Object Notation (JSON).</source>
          <target state="translated">Эти объекты представляют собой и взаимодействуют со структурированными буферами данных и данными,закодированными с помощью Нотации объектов JavaScript (JSON).</target>
        </trans-unit>
        <trans-unit id="6c51b197bb3602dd2f9ac7530edbb1a23d06ee30" translate="yes" xml:space="preserve">
          <source>These objects represent collections of data which are ordered by an index value. This includes (typed) arrays and array-like constructs.</source>
          <target state="translated">Эти объекты представляют собой наборы данных,которые упорядочены по значению индекса.Сюда входят (типизированные)массивы и массивоподобные конструкции.</target>
        </trans-unit>
        <trans-unit id="5a5c5cf351e08162c242dffe9e27358c69a77ce6" translate="yes" xml:space="preserve">
          <source>These objects represent collections which use keys; these contain elements which are iterable in the order of insertion.</source>
          <target state="translated">Эти объекты представляют собой коллекции,в которых используются ключи;они содержат элементы,которые являются итерабельными в порядке их вставки.</target>
        </trans-unit>
        <trans-unit id="be1ed535f65e43f334e953098d706e7033065d61" translate="yes" xml:space="preserve">
          <source>These objects represent strings and support manipulating them.</source>
          <target state="translated">Эти объекты представляют собой строки и поддерживают манипулирование ими.</target>
        </trans-unit>
        <trans-unit id="a5000062ebcb72866a9718df3463c1a4fa8f41d9" translate="yes" xml:space="preserve">
          <source>These problems can be solved in two different ways.</source>
          <target state="translated">Эти проблемы могут быть решены двумя различными способами.</target>
        </trans-unit>
        <trans-unit id="aac36ff9b0b311c2538349f2b1b05f49629e4853" translate="yes" xml:space="preserve">
          <source>These values have the following meanings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9946bdc385aabfb76bc69f8808fede478b2fa9" translate="yes" xml:space="preserve">
          <source>They are of limited use, as they provide only a subset of the available HTML tags and attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcb29680b8ba21cacb23cbd3cd454ddff5f16ef" translate="yes" xml:space="preserve">
          <source>They were called &quot;template strings&quot; in prior editions of the ES2015 specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babef9389b45b02009b9150991ba15ce9ad6f6ee" translate="yes" xml:space="preserve">
          <source>Third example: Appending a chain to the Function.prototype object and appending a new function to that chain</source>
          <target state="translated">Третий пример:Добавление цепочки к объекту Function.prototype и добавление новой функции к этой цепочке.</target>
        </trans-unit>
        <trans-unit id="78207ad5ecdb11b4b012586ec80cedacc9d1ec75" translate="yes" xml:space="preserve">
          <source>Third, &lt;code&gt;arguments.callee&lt;/code&gt; is no longer supported. In normal code &lt;code&gt;arguments.callee&lt;/code&gt; refers to the enclosing function. This use case is weak: simply name the enclosing function! Moreover, &lt;code&gt;arguments.callee&lt;/code&gt; substantially hinders optimizations like inlining functions, because it must be made possible to provide a reference to the un-inlined function if &lt;code&gt;arguments.callee&lt;/code&gt; is accessed. &lt;code&gt;arguments.callee&lt;/code&gt; for strict mode functions is a non-deletable property which throws an error when set or retrieved:</source>
          <target state="translated">В-третьих, &lt;code&gt;arguments.callee&lt;/code&gt; больше не поддерживается. В обычном коде &lt;code&gt;arguments.callee&lt;/code&gt; относится к включающей функции. Этот вариант использования слабый: просто назовите включающую функцию! Более того, &lt;code&gt;arguments.callee&lt;/code&gt; существенно затрудняет оптимизацию, такую ​​как встраивание функций, потому что должна быть предусмотрена возможность предоставления ссылки на невстроенную функцию при обращении к &lt;code&gt;arguments.callee&lt;/code&gt; . &lt;code&gt;arguments.callee&lt;/code&gt; для функций в строгом режиме - это свойство, которое нельзя удалить, которое выдает ошибку при установке или извлечении:</target>
        </trans-unit>
        <trans-unit id="a968b5b6e8588988f5a74e8a5155d1a4b027f828" translate="yes" xml:space="preserve">
          <source>Third, &lt;code&gt;arguments&lt;/code&gt; for strict mode functions no longer provide access to the corresponding function call's variables. In some old ECMAScript implementations &lt;code&gt;arguments.caller&lt;/code&gt; was an object whose properties aliased variables in that function. This is a &lt;a href=&quot;http://stuff.mit.edu/iap/2008/facebook/&quot;&gt;security hazard&lt;/a&gt; because it breaks the ability to hide privileged values via function abstraction; it also precludes most optimizations. For these reasons no recent browsers implement it. Yet because of its historical functionality, &lt;code&gt;arguments.caller&lt;/code&gt; for a strict mode function is also a non-deletable property which throws when set or retrieved:</source>
          <target state="translated">В-третьих, &lt;code&gt;arguments&lt;/code&gt; для функций строгого режима больше не обеспечивают доступ к соответствующим переменным вызова функции. В некоторых старых реализациях ECMAScript &lt;code&gt;arguments.caller&lt;/code&gt; был объектом, свойства которого были псевдонимами переменных в этой функции. Это &lt;a href=&quot;http://stuff.mit.edu/iap/2008/facebook/&quot;&gt;угроза безопасности,&lt;/a&gt; поскольку нарушает возможность скрытия привилегированных значений с помощью абстракции функций; это также исключает большинство оптимизаций. По этим причинам ни один из последних браузеров не поддерживает его. Однако из-за своей исторической функциональности &lt;code&gt;arguments.caller&lt;/code&gt; для функции строгого режима также является неотъемлемым свойством, которое генерируется при установке или извлечении:</target>
        </trans-unit>
        <trans-unit id="f0bf4f0e82effc2fcdfbd0bafd2806f94fa53428" translate="yes" xml:space="preserve">
          <source>Third, strict mode forbids deleting plain names. &lt;code&gt;delete name&lt;/code&gt; in strict mode is a syntax error:</source>
          <target state="translated">В-третьих, строгий режим запрещает удаление простых имен. &lt;code&gt;delete name&lt;/code&gt; в строгом режиме - это синтаксическая ошибка:</target>
        </trans-unit>
        <trans-unit id="ff008ff7ee98b437d5c1a16b7ee7b658db491651" translate="yes" xml:space="preserve">
          <source>Third, strict mode makes attempts to delete undeletable properties throw (where before the attempt would simply have no effect):</source>
          <target state="translated">В-третьих,строгий режим делает попытки удаления броска недостижимых свойств (где перед попыткой просто не будет никакого эффекта):</target>
        </trans-unit>
        <trans-unit id="7c10bb714d54c5d432d668317715e557bddcd5c9" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;polyfill&lt;/a&gt; doesn't support symbol properties, since ES5 doesn't have symbols anyway:</source>
          <target state="translated">Этот &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;полифилл&lt;/a&gt; не поддерживает свойства символа, поскольку в ES5 символы все равно отсутствуют:</target>
        </trans-unit>
        <trans-unit id="7ddedacdb98faa51edf3865ceeff542d95ca3174" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://gist.github.com/384583&quot;&gt;Polyfill&lt;/a&gt; offers &lt;code&gt;watch&lt;/code&gt; to all ES5 compatible browsers.</source>
          <target state="translated">Этот &lt;a href=&quot;https://gist.github.com/384583&quot;&gt;Polyfill&lt;/a&gt; предлагает &lt;code&gt;watch&lt;/code&gt; для всех браузеров, совместимых с ES5.</target>
        </trans-unit>
        <trans-unit id="c93fa53d0bbd47a3db878d767ffa2e7c1648219a" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;polyfill&lt;/a&gt; doesn't support symbol properties, since ES5 doesn't have symbols anyway:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be206cd04ed5688a80c6141f96aa0b59a1e416bd" translate="yes" xml:space="preserve">
          <source>This Polyfill emulates the &lt;code&gt;Math.log2&lt;/code&gt; function. Note that it returns imprecise values on some inputs (like 1 &amp;lt;&amp;lt; 29), wrap into &lt;a href=&quot;round&quot;&gt;&lt;code&gt;Math.round()&lt;/code&gt;&lt;/a&gt; if working with bit masks.</source>
          <target state="translated">Этот полифилл имитирует функцию &lt;code&gt;Math.log2&lt;/code&gt; . Обратите внимание, что он возвращает неточные значения для некоторых входных данных (например, 1 &amp;lt;&amp;lt; 29), переносится в &lt;a href=&quot;round&quot;&gt; &lt;code&gt;Math.round()&lt;/code&gt; &lt;/a&gt; при работе с битовыми масками.</target>
        </trans-unit>
        <trans-unit id="b2049c2c2e9560624c110069b0ab4063f7b90969" translate="yes" xml:space="preserve">
          <source>This algorithm is exactly the one specified in ECMA-262, 5&lt;sup&gt;th&lt;/sup&gt; edition, assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; have their original values and that &lt;code&gt;&lt;var&gt;fun&lt;/var&gt;.call&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17fdf255bf97502cb62fe16d12b782c79ab82346" translate="yes" xml:space="preserve">
          <source>This algorithm is exactly the one specified in ECMA-262, 5&lt;sup&gt;th&lt;/sup&gt; edition, assuming &lt;code&gt;Object&lt;/code&gt; and &lt;code&gt;TypeError&lt;/code&gt; have their original values, and that &lt;code&gt;&lt;var&gt;callbackfn&lt;/var&gt;.call&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5509417f952d62bdba51aef5570b1804b8848367" translate="yes" xml:space="preserve">
          <source>This also demonstrates how the &lt;code&gt;exports&lt;/code&gt; property is used to access exported functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5220bea55e1a743b859d6d37204563a0636619" translate="yes" xml:space="preserve">
          <source>This also outputs &quot;value&quot;, since both foo and bar are converted to the same string. In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; JavaScript engine, this string would be &quot;['object Object']&quot;.</source>
          <target state="translated">Это также выводит &quot;значение&quot;, поскольку и foo, и bar преобразуются в одну и ту же строку. В движке JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; эта строка будет &amp;laquo;['object Object']&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="987e22c0bf5a3bdeaa9ce39fd36c228ec1917bab" translate="yes" xml:space="preserve">
          <source>This also outputs &lt;code&gt;'value'&lt;/code&gt;, since both &lt;code&gt;&lt;var&gt;foo&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;bar&lt;/var&gt;&lt;/code&gt; are converted to the same string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e3ab0dc2fac9991fde806932764fcc7d178e23" translate="yes" xml:space="preserve">
          <source>This article aims at providing guidance for developers.</source>
          <target state="translated">Цель этой статьи-предоставить руководство для разработчиков.</target>
        </trans-unit>
        <trans-unit id="9626b764e08efbd935cba08ae43dfb975f652917" translate="yes" xml:space="preserve">
          <source>This behavior does not apply to &lt;code&gt;Boolean&lt;/code&gt; primitives. For example, the condition in the following &lt;a href=&quot;../statements/if...else&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; statement evaluates to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">Это поведение не применяется к &lt;code&gt;Boolean&lt;/code&gt; примитивам. Например, условие в следующем операторе &lt;a href=&quot;../statements/if...else&quot;&gt; &lt;code&gt;if&lt;/code&gt; &lt;/a&gt; оценивается как &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a7d9211767c7428f9136180953a4195577a05ab3" translate="yes" xml:space="preserve">
          <source>This can be achieved with a combination of &lt;a href=&quot;math/random&quot;&gt;&lt;code&gt;Math.random()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;math/floor&quot;&gt;&lt;code&gt;Math.floor()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a8582be47d36134e44af859785bba94f93d79c" translate="yes" xml:space="preserve">
          <source>This can be achieved with the &quot;export from&quot; syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad291aa4d8ee431b14c569c6df3b5210c4b79f9" translate="yes" xml:space="preserve">
          <source>This can be converted to the following expression:</source>
          <target state="translated">Это может быть преобразовано в следующее выражение:</target>
        </trans-unit>
        <trans-unit id="93b25c64a2bb1e288bd99c8fbe5b8bafb815e7e5" translate="yes" xml:space="preserve">
          <source>This can be emulated using the following function:</source>
          <target state="translated">Это можно эмулировать с помощью следующей функции:</target>
        </trans-unit>
        <trans-unit id="f926f626ea1e32d2d481952e313cfa41dc28e854" translate="yes" xml:space="preserve">
          <source>This can be emulated with the following function, if &lt;a href=&quot;../float32array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; are supported:</source>
          <target state="translated">Это можно эмулировать с помощью следующей функции, если поддерживается &lt;a href=&quot;../float32array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d21f00b36784c0aeb2b851d770e82cc575dfd3b1" translate="yes" xml:space="preserve">
          <source>This can be emulated with the following function:</source>
          <target state="translated">Это можно эмулировать с помощью следующей функции:</target>
        </trans-unit>
        <trans-unit id="f0fc43e5f46c538b39638bfb56ef17a17afaac04" translate="yes" xml:space="preserve">
          <source>This can be emulated with the help of the &lt;a href=&quot;exp&quot;&gt;&lt;code&gt;Math.exp()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Это можно эмулировать с помощью функции &lt;a href=&quot;exp&quot;&gt; &lt;code&gt;Math.exp()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="1caecfd92674232e7963c8708a5db376087af9c3" translate="yes" xml:space="preserve">
          <source>This can be encountered when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2878f6477ef171927dfb7b63ee15513ab49a0e4" translate="yes" xml:space="preserve">
          <source>This can be fixed by storing the value in another property. In &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;set&lt;/code&gt; methods, &lt;code&gt;this&lt;/code&gt; points to the object which is used to access or modify the property.</source>
          <target state="translated">Это можно исправить, сохранив значение в другом свойстве. В методах &lt;code&gt;get&lt;/code&gt; и &lt;code&gt;set&lt;/code&gt; &lt;code&gt;this&lt;/code&gt; указывает на объект, который используется для доступа или изменения свойства.</target>
        </trans-unit>
        <trans-unit id="8637424076e7fdfeee1e684695bee835d9c5b29c" translate="yes" xml:space="preserve">
          <source>This capability is similar to features present in languages such as Perl and Python.</source>
          <target state="translated">Эта возможность аналогична возможностям,присутствующим в таких языках,как Perl и Python.</target>
        </trans-unit>
        <trans-unit id="f270662d770728da9dd5f30c95435fca6101409c" translate="yes" xml:space="preserve">
          <source>This change should be backwards-compatible as long as you pass the result of &lt;code&gt;JSON.stringify&lt;/code&gt; to APIs such as &lt;code&gt;JSON.parse&lt;/code&gt; that will accept any valid JSON text, because they will treat Unicode escapes of lone surrogates as identical to the lone surrogates themselves. &lt;em&gt;Only&lt;/em&gt; if you are directly interpreting the result of &lt;code&gt;JSON.stringify&lt;/code&gt; do you need to carefully handle &lt;code&gt;JSON.stringify&lt;/code&gt;'s two possible encodings of these code points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ec415c21656b4e1b8e73732c50ced79b4f1a06" translate="yes" xml:space="preserve">
          <source>This chapter documents all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;JavaScript standard built-in objects&lt;/a&gt;, along with their methods and properties.</source>
          <target state="translated">В этой главе описаны все &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects&quot;&gt;стандартные встроенные объекты JavaScript&lt;/a&gt; , а также их методы и свойства.</target>
        </trans-unit>
        <trans-unit id="a0489c62937cfb2364acc83ca2a1245aa5088fbc" translate="yes" xml:space="preserve">
          <source>This chapter documents all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;JavaScript expressions and operators&lt;/a&gt;.</source>
          <target state="translated">В этой главе описаны все &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;выражения и операторы JavaScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb18bdfe69d338a2e163b4a1ab159bf54053304d" translate="yes" xml:space="preserve">
          <source>This chapter documents all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript statements and declarations&lt;/a&gt;.</source>
          <target state="translated">В этой главе документируются все &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;операторы и объявления JavaScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1946293170999b6370e4a8efc4bfc761c8dc2309" translate="yes" xml:space="preserve">
          <source>This chapter documents all the JavaScript language operators, expressions and keywords.</source>
          <target state="translated">В этой главе описываются все операторы языка JavaScript,выражения и ключевые слова.</target>
        </trans-unit>
        <trans-unit id="2d3db99e9899796f2e575c3e83689ed0ea4faaa0" translate="yes" xml:space="preserve">
          <source>This chapter documents all the JavaScript standard built-in objects, along with their methods and properties.</source>
          <target state="translated">В данной главе описываются все встроенные объекты стандарта JavaScript,а также их методы и свойства.</target>
        </trans-unit>
        <trans-unit id="8ea2390318cc20ce6263f76f13a6bae75bcc9bf0" translate="yes" xml:space="preserve">
          <source>This chapter documents how to work with &lt;a href=&quot;functions&quot;&gt;JavaScript functions&lt;/a&gt; to develop your applications.</source>
          <target state="translated">В этой главе рассказывается, как работать с &lt;a href=&quot;functions&quot;&gt;функциями JavaScript&lt;/a&gt; для разработки ваших приложений.</target>
        </trans-unit>
        <trans-unit id="ab3c71a069164684e41148766021ad5ff5657de9" translate="yes" xml:space="preserve">
          <source>This code can be run under NodeJS. Comprehension is enhanced by seeing the errors actually occur. To force more errors, change the &lt;code&gt;threshold&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62359e7e1c67ff757c79cb13ebfa480bbfeddf35" translate="yes" xml:space="preserve">
          <source>This code fails, as the equal sign can't be used this way in this object initializer syntax.</source>
          <target state="translated">Этот код не работает,так как знак равенства не может быть использован таким образом в синтаксисе инициализатора данного объекта.</target>
        </trans-unit>
        <trans-unit id="e93d09fba02a1fa5bed87320e7d4bb9906dcbc5d" translate="yes" xml:space="preserve">
          <source>This code snippet is taken from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;classes sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;).</source>
          <target state="translated">Этот фрагмент кода взят из &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;примера классов&lt;/a&gt; ( &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;живая демонстрация&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f2ceb2ebf615c7ca60bc60dad3b8703a4ff16b94" translate="yes" xml:space="preserve">
          <source>This code snippet is taken from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;classes sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;). Here &lt;code&gt;super()&lt;/code&gt; is called to avoid duplicating the constructor parts' that are common between &lt;code&gt;Rectangle&lt;/code&gt; and &lt;code&gt;Square&lt;/code&gt;.</source>
          <target state="translated">Этот фрагмент кода взят из &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;примера классов&lt;/a&gt; ( &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;живая демонстрация&lt;/a&gt; ). Здесь &lt;code&gt;super()&lt;/code&gt; вызывается, чтобы избежать дублирования частей конструктора, которые являются общими для &lt;code&gt;Rectangle&lt;/code&gt; и &lt;code&gt;Square&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86727df284471763d7a0565fcf32b92e27198e51" translate="yes" xml:space="preserve">
          <source>This code will now output &lt;code&gt;hello&lt;/code&gt; in the console as it should, without any errors at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a0c0a1c5279be7ca0fcebe7c55e2d76317b6a4" translate="yes" xml:space="preserve">
          <source>This declaration creates a constant whose scope can be either global or local to the block in which it is declared. Global constants do &lt;strong&gt;not&lt;/strong&gt; become properties of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object, unlike &lt;a href=&quot;var&quot;&gt;&lt;code&gt;var&lt;/code&gt;&lt;/a&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acecf8c55497d383f08519c6b9f28ff9d6bb0d15" translate="yes" xml:space="preserve">
          <source>This declaration creates a constant whose scope can be either global or local to the block in which it is declared. Global constants do not become properties of the window object, unlike &lt;code&gt;&lt;a href=&quot;var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; variables. An initializer for a constant is required; that is, you must specify its value in the same statement in which it's declared (which makes sense, given that it can't be changed later).</source>
          <target state="translated">Это объявление создает константу, область действия которой может быть глобальной или локальной для блока, в котором она объявлена. Глобальные константы не становятся свойствами объекта окна, в отличие от переменных &lt;code&gt;&lt;a href=&quot;var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; . Требуется инициализатор для константы; то есть вы должны указать его значение в том же заявлении, в котором оно объявлено (что имеет смысл, учитывая, что его нельзя изменить позже).</target>
        </trans-unit>
        <trans-unit id="bad3d863e88d4e3c25abb04fb7e467e62f6e75c5" translate="yes" xml:space="preserve">
          <source>This definition supersedes the definition provided in ECMA-262.</source>
          <target state="translated">Это определение заменяет определение,данное в ECMA-262.</target>
        </trans-unit>
        <trans-unit id="6f968fc9ccc244f1b76b93c6844d3619a51936f4" translate="yes" xml:space="preserve">
          <source>This demonstrates that it matters only that the function was invoked from the &lt;code&gt;f&lt;/code&gt; member of &lt;code&gt;o&lt;/code&gt;.</source>
          <target state="translated">Это демонстрирует, что имеет значение только то, что функция была вызвана из члена &lt;code&gt;f&lt;/code&gt; в &lt;code&gt;o&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bda21ee36aa642cf18c3b46156646dc4fb2bfea" translate="yes" xml:space="preserve">
          <source>This differs from ECMAScript 3, which discouraged but allowed octal interpretation.</source>
          <target state="translated">Это отличается от ECMAScript 3,который обескураживал,но позволял восьмеричное толкование.</target>
        </trans-unit>
        <trans-unit id="b2458fde30306d280c6f35c49d963363652697ca" translate="yes" xml:space="preserve">
          <source>This differs from ECMAScript 3, which merely &lt;em&gt;discouraged&lt;/em&gt; (but allowed) octal interpretation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1519bf6763aba2fd7a8258fc6d70b97467e733a1" translate="yes" xml:space="preserve">
          <source>This displays &quot;Smith, John&quot;.</source>
          <target state="translated">Здесь написано &quot;Смит,Джон&quot;.</target>
        </trans-unit>
        <trans-unit id="ed5511f2421466f5e03a5a0b0c9360e0ff60283a" translate="yes" xml:space="preserve">
          <source>This displays &lt;code&gt;&quot;Smith, John&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ee698241a832f0c35ecf961e5a598b1cb373fd" translate="yes" xml:space="preserve">
          <source>This does the exact same thing as the previous example.</source>
          <target state="translated">Это делает то же самое,что и в предыдущем примере.</target>
        </trans-unit>
        <trans-unit id="2e9c0a635918e3c9d07d290025ea86eea4026e4c" translate="yes" xml:space="preserve">
          <source>This ensures the return value of &lt;code&gt;doSomething&lt;/code&gt; changing from &lt;code&gt;undefined&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will not change the behavior of this code.</source>
          <target state="translated">Это гарантирует, что возвращаемое значение &lt;code&gt;doSomething&lt;/code&gt; , изменяющееся с &lt;code&gt;undefined&lt;/code&gt; на &lt;code&gt;true&lt;/code&gt; , не изменит поведения этого кода.</target>
        </trans-unit>
        <trans-unit id="911d9f9d45b91545c221c3486eeb449728c67558" translate="yes" xml:space="preserve">
          <source>This error can occur easily when not escaping strings properly and the JavaScript engine is expecting the end of your string already. For example:</source>
          <target state="translated">Эта ошибка может легко возникать,когда не удается правильно экранировать строки,а JavaScript-движок уже ожидает конец вашей строки.Например:</target>
        </trans-unit>
        <trans-unit id="0201c0b7ba051d29f8ca6584a85c6705befd0c09" translate="yes" xml:space="preserve">
          <source>This error happens only in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode code&lt;/a&gt;. In non-strict code, the assignment is silently ignored.</source>
          <target state="translated">Эта ошибка возникает только в &lt;a href=&quot;../strict_mode&quot;&gt;коде строгого режима&lt;/a&gt; . В нестрогом коде присвоение игнорируется.</target>
        </trans-unit>
        <trans-unit id="096835feb91d9ff6a57e922f78bbdd190711d6fd" translate="yes" xml:space="preserve">
          <source>This error happens only in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode code&lt;/a&gt;. In non-strict code, the operation returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Эта ошибка возникает только в &lt;a href=&quot;../strict_mode&quot;&gt;коде строгого режима&lt;/a&gt; . В нестрогом коде операция возвращает &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a0e3ad44d95312052d97db9a3a1d9c7cc2d5f29" translate="yes" xml:space="preserve">
          <source>This error occurs as a warning in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode code&lt;/a&gt; only. In non-strict code, the redeclaration is silently ignored.</source>
          <target state="translated">Эта ошибка возникает как предупреждение только в &lt;a href=&quot;../strict_mode&quot;&gt;коде строгого режима&lt;/a&gt; . В нестрогом коде повторное объявление игнорируется.</target>
        </trans-unit>
        <trans-unit id="bbd89c12b15d7bbad4f26beb179fde8bbe893186" translate="yes" xml:space="preserve">
          <source>This error only happens in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode code&lt;/a&gt;. In non-strict code, the operation just returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Эта ошибка возникает только в &lt;a href=&quot;../strict_mode&quot;&gt;коде строгого режима&lt;/a&gt; . В нестрогом коде операция просто возвращает &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb2f48d817f97074af67cc74fa3d8ccee5fee9f0" translate="yes" xml:space="preserve">
          <source>This even applies to functions and variables:</source>
          <target state="translated">Это относится даже к функциям и переменным:</target>
        </trans-unit>
        <trans-unit id="0418362082cc8bf02ccf057b5001fec07604aec0" translate="yes" xml:space="preserve">
          <source>This example counts backwards from the end of the string by &lt;code&gt;11&lt;/code&gt; to find the start index and forwards from the start of the string by &lt;code&gt;16&lt;/code&gt; to find the end index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ad76db7e3ffc323f896f6c610ff40d7b05bede" translate="yes" xml:space="preserve">
          <source>This example defines a function that concatenates several strings. The function's only formal argument is a string containing the characters that separate the items to concatenate.</source>
          <target state="translated">Этот пример определяет функцию,которая соединяет несколько строк.Единственным формальным аргументом функции является строка,содержащая символы,разделяющие элементы для конкатенирования.</target>
        </trans-unit>
        <trans-unit id="90f25031bc45dce7cbb8e9209d0d66425c578957" translate="yes" xml:space="preserve">
          <source>This example defines a function that creates a string containing HTML for a list. The only formal argument for the function is a string that is &quot;&lt;code&gt;u&lt;/code&gt;&quot; if the list is to be &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;unordered (bulleted)&lt;/a&gt;, or &quot;&lt;code&gt;o&lt;/code&gt;&quot; if the list is to be &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/ol&quot;&gt;ordered (numbered)&lt;/a&gt;. The function is defined as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a7c3b2b05f6ed743c9e09f0bd5e66a60a75b6f" translate="yes" xml:space="preserve">
          <source>This example defines a function that creates a string containing HTML for a list. The only formal argument for the function is a string that is &quot;&lt;code&gt;u&lt;/code&gt;&quot; if the list is to be unordered (bulleted), or &quot;&lt;code&gt;o&lt;/code&gt;&quot; if the list is to be ordered (numbered). The function is defined as follows:</source>
          <target state="translated">В этом примере определяется функция, которая создает строку, содержащую HTML для списка. Единственным формальным аргументом функции является строка &amp;laquo; &lt;code&gt;u&lt;/code&gt; &amp;raquo;, если список должен быть неупорядоченным (маркированный), или &amp;laquo; &lt;code&gt;o&lt;/code&gt; &amp;raquo;, если список должен быть упорядочен (нумерован). Функция определяется следующим образом:</target>
        </trans-unit>
        <trans-unit id="bf75ffc93a3f734d878ab27162b4c36ee16bc2c6" translate="yes" xml:space="preserve">
          <source>This example demonstrates how one can separate out Unicode characters from a word.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="871c98d30147b459568b64391ee95744afc6f560" translate="yes" xml:space="preserve">
          <source>This example demonstrates that &lt;code&gt;Baz.prototype&lt;/code&gt;, &lt;code&gt;Bar.prototype&lt;/code&gt;, &lt;code&gt;Foo.prototype&lt;/code&gt; and &lt;code&gt;Object.prototype&lt;/code&gt; exist in the prototype chain for object &lt;code&gt;baz&lt;/code&gt;:</source>
          <target state="translated">Этот пример демонстрирует, что &lt;code&gt;Baz.prototype&lt;/code&gt; , &lt;code&gt;Bar.prototype&lt;/code&gt; , &lt;code&gt;Foo.prototype&lt;/code&gt; и &lt;code&gt;Object.prototype&lt;/code&gt; существуют в цепочке прототипов для объекта &lt;code&gt;baz&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5cfd66d3f85028f1818634da1d4c6321fd88e0c9" translate="yes" xml:space="preserve">
          <source>This example displays the following output (comments added for reference):</source>
          <target state="translated">В этом примере отображается следующий вывод (комментарии добавлены для справки):</target>
        </trans-unit>
        <trans-unit id="47851f66673ccc14ec0754c46428b69ca2e0999f" translate="yes" xml:space="preserve">
          <source>This example displays the following output:</source>
          <target state="translated">В этом примере отображается следующий вывод:</target>
        </trans-unit>
        <trans-unit id="1a2e7cbddcea7b49fd155d4d8b4a95f64e4d1074" translate="yes" xml:space="preserve">
          <source>This example extends the built-in &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. This example is extracted from this &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;(source)&lt;/a&gt;.</source>
          <target state="translated">В этом примере расширяется встроенный объект &lt;a href=&quot;../global_objects/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; . Этот пример взят из этой &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;живой демонстрации &lt;/a&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;(источник)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09e17c7f0dca3ac4b5a7ef196f654212d4264e30" translate="yes" xml:space="preserve">
          <source>This example first creates an async iterable for a stream of data, then uses it to find the size of the response from the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c0cb82830ca1098ba1b0b5512fa2c2036073c25" translate="yes" xml:space="preserve">
          <source>This example is started by clicking the button. (You need a browser that supports &lt;code&gt;Promise&lt;/code&gt;. )</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd856e759126f7feb000d22a885f2704c020494" translate="yes" xml:space="preserve">
          <source>This example is started by clicking the button. You need a browser that supports &lt;code&gt;Promise&lt;/code&gt;. By clicking the button several times in a short amount of time, you'll even see the different promises being fulfilled one after another.</source>
          <target state="translated">Этот пример запускается нажатием кнопки. Вам нужен браузер, поддерживающий &lt;code&gt;Promise&lt;/code&gt; . Нажав кнопку несколько раз за короткий промежуток времени, вы даже увидите, что разные обещания выполняются одно за другим.</target>
        </trans-unit>
        <trans-unit id="506e976c52ce7c84b595b66adf2793ef1c3bea8d" translate="yes" xml:space="preserve">
          <source>This example produces the following output. As the output shows, when a compare function is used, numbers sort correctly whether they are numbers or numeric strings.</source>
          <target state="translated">Этот пример дает следующий результат.Как видно из вывода,при использовании функции сравнения,числа сортируются корректно,являются ли они числами или числовыми строками.</target>
        </trans-unit>
        <trans-unit id="b834c1665b1411c83b15a236780f0e6f998b2e68" translate="yes" xml:space="preserve">
          <source>This example produces the following output:</source>
          <target state="translated">Этот пример дает следующий результат:</target>
        </trans-unit>
        <trans-unit id="dbe0fb62601b83dd6e280fe780efcb2b15db5715" translate="yes" xml:space="preserve">
          <source>This example returns a random &lt;em&gt;integer&lt;/em&gt; between the specified values. The value is no lower than &lt;code&gt;min&lt;/code&gt; (or the next integer greater than &lt;code&gt;min&lt;/code&gt; if &lt;code&gt;min&lt;/code&gt; isn't an integer), and is less than (but not equal to) &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">В этом примере возвращается случайное &lt;em&gt;целое число&lt;/em&gt; между указанными значениями. Значение не ниже &lt;code&gt;min&lt;/code&gt; (или следующее целое число больше &lt;code&gt;min&lt;/code&gt; , если &lt;code&gt;min&lt;/code&gt; не является целым числом) и меньше (но не равно) &lt;code&gt;max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ad9a85be409f64d9aef24ce2c3dbcb40ad199d5" translate="yes" xml:space="preserve">
          <source>This example returns a random number between the specified values. The returned value is no lower than (and may possibly equal) &lt;code&gt;min&lt;/code&gt;, and is less than (and not equal) &lt;code&gt;max&lt;/code&gt;.</source>
          <target state="translated">В этом примере возвращается случайное число между указанными значениями. Возвращаемое значение не ниже (и может быть равным) &lt;code&gt;min&lt;/code&gt; , и меньше (и не равно) &lt;code&gt;max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd6856f24749ae44c743869c3071898a38155b08" translate="yes" xml:space="preserve">
          <source>This example shows diverse techniques for using Promise capabilities and diverse situations that can occur. To understand this, start by scrolling to the bottom of the code block, and examine the promise chain. Upon provision of an initial promise, a chain of promises can follow. The chain is composed of &lt;code&gt;.then()&lt;/code&gt; calls, and typically (but not necessarily) has a single &lt;code&gt;.catch()&lt;/code&gt; at the end, optionally followed by &lt;code&gt;.finally()&lt;/code&gt;. In this example, the promise chain is initiated by a custom-written &lt;code&gt;new Promise()&lt;/code&gt; construct; but in actual practice, promise chains more typically start with an API function (written by someone else) that returns a promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f2c7b225c188a1add4b85e9a2cc4aff53e12d6" translate="yes" xml:space="preserve">
          <source>This example shows how to iterate through a collection of objects collected by &lt;code&gt;querySelectorAll&lt;/code&gt;. In this case we get all selected options on the screen and printed on the console:</source>
          <target state="translated">В этом примере показано, как перебирать коллекцию объектов, собранных &lt;code&gt;querySelectorAll&lt;/code&gt; . В этом случае мы выводим все выбранные параметры на экран и печатаем на консоли:</target>
        </trans-unit>
        <trans-unit id="eed1860eb426bfdbc2f776b86d3192a5fc464c1c" translate="yes" xml:space="preserve">
          <source>This example shows how to iterate through a collection of objects collected by &lt;code&gt;querySelectorAll&lt;/code&gt;. This is because &lt;code&gt;querySelectorAll&lt;/code&gt; returns a &lt;code&gt;NodeList&lt;/code&gt; (which is a collection of objects).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2e6ee40526a1d0465fe37ec3a7aeb12df0a955" translate="yes" xml:space="preserve">
          <source>This example shows how to load functionality on to a page based on a user action, in this case a button click, and then call a function within that module. This is not the only way to implement this functionality. The &lt;code&gt;import()&lt;/code&gt; function also supports &lt;code&gt;await&lt;/code&gt;.</source>
          <target state="translated">В этом примере показано, как загрузить функциональные возможности на страницу на основе действия пользователя, в данном случае нажатия кнопки, а затем вызвать функцию в этом модуле. Это не единственный способ реализовать эту функциональность. Функция &lt;code&gt;import()&lt;/code&gt; также поддерживает &lt;code&gt;await&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cda9459bc6fad44cf5002bc12a2fafdfe5f77e4" translate="yes" xml:space="preserve">
          <source>This example shows how to use map on a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; to get an array of bytes in the ASCII encoding representing the character values:</source>
          <target state="translated">В этом примере показано, как использовать карту в &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; чтобы получить массив байтов в кодировке ASCII, представляющий значения символов:</target>
        </trans-unit>
        <trans-unit id="c6010b9290e4cac16f9239768f4269d093761d15" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized date and time formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590cefd23d1edd4dd188f61dcd919f75b1c64a1c" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized date and time formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">В этом примере показаны некоторые варианты локализованных форматов даты и времени. Чтобы получить формат языка, используемого в пользовательском интерфейсе вашего приложения, обязательно укажите этот язык (и, возможно, некоторые резервные языки) с помощью аргумента &lt;code&gt;locales&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="43a7a6d067d8754510839a686064cf456dccd946" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized date formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">В этом примере показаны некоторые варианты локализованных форматов даты. Чтобы получить формат языка, используемого в пользовательском интерфейсе вашего приложения, обязательно укажите этот язык (и, возможно, некоторые резервные языки) с помощью аргумента &lt;code&gt;locales&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="325cec468238da657537fbdc631c44daba6ab6b9" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized number formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">В этом примере показаны некоторые варианты локализованных числовых форматов. Чтобы получить формат языка, используемого в пользовательском интерфейсе вашего приложения, обязательно укажите этот язык (и, возможно, некоторые резервные языки) с помощью аргумента &lt;code&gt;locales&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d8b708372e6c816d7911558aa144dff0a2b1fb0d" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized plural rules. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">В этом примере показаны некоторые варианты локализованных правил множественного числа. Чтобы получить формат языка, используемого в пользовательском интерфейсе вашего приложения, обязательно укажите этот язык (и, возможно, некоторые резервные языки) с помощью аргумента &lt;code&gt;locales&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="630dd3659d7f6ea887e3de3f43ca34b30710ff4d" translate="yes" xml:space="preserve">
          <source>This example shows some of the variations in localized time formats. In order to get the format of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">В этом примере показаны некоторые варианты локализованных форматов времени. Чтобы получить формат языка, используемого в пользовательском интерфейсе вашего приложения, обязательно укажите этот язык (и, возможно, некоторые резервные языки) с помощью аргумента &lt;code&gt;locales&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4a4a4676f6326fd0a096aa3c44f833d606d3cea8" translate="yes" xml:space="preserve">
          <source>This example shows that we're creating and accessing the table from JavaScript, but the same table is visible and callable inside the wasm instance too.</source>
          <target state="translated">Этот пример показывает,что мы создаем таблицу и получаем доступ к ней из JavaScript,но та же самая таблица видна и доступна для вызова и внутри экземпляра wasm.</target>
        </trans-unit>
        <trans-unit id="d1fcd9a201cc02314fd2430857eef298620fd20d" translate="yes" xml:space="preserve">
          <source>This example throws a &lt;code&gt;SyntaxError&lt;/code&gt;:</source>
          <target state="translated">В этом примере &lt;code&gt;SyntaxError&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ede9db60430dbac72f66f4b56bcb70a97ac80f5e" translate="yes" xml:space="preserve">
          <source>This example uses &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; to push all elements from a second array.</source>
          <target state="translated">В этом примере применяется &lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt; чтобы протолкнуть все элементы из второго массива.</target>
        </trans-unit>
        <trans-unit id="1dbdf5d54bd7ed988a153277a1893e923a88c1d4" translate="yes" xml:space="preserve">
          <source>This example will output the error &lt;code&gt;Uncaught SyntaxError: Identifier 'message' has already been declared&lt;/code&gt; which you were not probably expecting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b1e0cb1465747928aea91ff0e45f56160857bb" translate="yes" xml:space="preserve">
          <source>This feature is deprecated in favor of defining getters using the &lt;a href=&quot;../../operators/object_initializer&quot;&gt;object initializer syntax&lt;/a&gt; or the &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; API. While this feature is widely implemented, it is only described in the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;ECMAScript specification&lt;/a&gt; because of legacy usage. This method should not be used since better alternatives exist.</source>
          <target state="translated">Эта функция не рекомендуется в пользу определения геттеров с использованием &lt;a href=&quot;../../operators/object_initializer&quot;&gt;синтаксиса инициализатора объекта&lt;/a&gt; или API &lt;a href=&quot;defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; . Хотя эта функция широко реализована, она описана только в &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-additional-ecmascript-features-for-web-browsers&quot;&gt;спецификации ECMAScript&lt;/a&gt; из-за устаревшего использования. Этот метод не следует использовать, поскольку существуют лучшие альтернативы.</target>
        </trans-unit>
        <trans-unit id="86411ba63951d765641d545f8df4bcf74c901436" translate="yes" xml:space="preserve">
          <source>This feature is deprecated in favor of defining setters using the &lt;a href=&quot;../../operators/object_initializer&quot;&gt;object initializer syntax&lt;/a&gt; or the &lt;a href=&quot;defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">Эта функция не рекомендуется в пользу определения установщиков с использованием &lt;a href=&quot;../../operators/object_initializer&quot;&gt;синтаксиса инициализатора объекта&lt;/a&gt; или API &lt;a href=&quot;defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17fdac85d6009334c365dfdd6eb6bef5e4374b26" translate="yes" xml:space="preserve">
          <source>This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the &lt;a href=&quot;#Browser_compatibility&quot;&gt;compatibility table&lt;/a&gt; at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.</source>
          <target state="translated">Эта функция больше не рекомендуется. Хотя некоторые браузеры могут по-прежнему поддерживать его, он, возможно, уже удален из соответствующих веб-стандартов, может быть в процессе удаления или может храниться только в целях совместимости. Избегайте его использования и обновляйте существующий код, если это возможно; см. &lt;a href=&quot;#Browser_compatibility&quot;&gt;таблицу совместимости&lt;/a&gt; внизу этой страницы, чтобы принять решение. Имейте в виду, что эта функция может перестать работать в любое время.</target>
        </trans-unit>
        <trans-unit id="ad63cac1625affd2a84d66756a720def351fb2b3" translate="yes" xml:space="preserve">
          <source>This feature is non-standard and is not on a standards track. Do not use it on production sites facing the Web: it will not work for every user. There may also be large incompatibilities between implementations and the behavior may change in the future.</source>
          <target state="translated">Эта функция является нестандартной и не находится на стандартной дорожке.Не используйте ее на производственных сайтах,обращенных к Сети:она будет работать не для каждого пользователя.Также могут быть большие несовместимости между реализациями и поведение может измениться в будущем.</target>
        </trans-unit>
        <trans-unit id="59314e7aec66910164f6914bdc2ab1c6bad7e1f6" translate="yes" xml:space="preserve">
          <source>This feature is obsolete. Although it may still work in some browsers, its use is discouraged since it could be removed at any time. Try to avoid using it.</source>
          <target state="translated">Эта функция устарела.Хотя она все еще может работать в некоторых браузерах,ее использование не рекомендуется,так как она может быть удалена в любой момент.Постарайтесь не использовать ее.</target>
        </trans-unit>
        <trans-unit id="9332d8bd72a7b666b3413523cb1369cd245eb1c2" translate="yes" xml:space="preserve">
          <source>This field does not exist in old browsers. Using it without checking its existence, such as &lt;code&gt;Math.max(Number.MAX_SAFE_INTEGER, 2)&lt;/code&gt;, will yield undesired results such as NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46be1def72425868eca09f0760411eb2dd9baccb" translate="yes" xml:space="preserve">
          <source>This finds the min of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; and assigns it to &lt;code&gt;z&lt;/code&gt;:</source>
          <target state="translated">Это находит минимум &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; и присваивает его &lt;code&gt;z&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4b107bfe566d2f9992ca9dc28cf2aca5b2af5d50" translate="yes" xml:space="preserve">
          <source>This following example demonstrates the asynchronicity (or synchronicity, if the &lt;var&gt;iterable&lt;/var&gt; passed is empty) of &lt;code&gt;Promise.all&lt;/code&gt;:</source>
          <target state="translated">Следующий пример демонстрирует асинхронность (или синхронность, если &lt;var&gt;iterable&lt;/var&gt; пуст) &lt;code&gt;Promise.all&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="48475607d930124ebfc60f7a61a8c364116689e8" translate="yes" xml:space="preserve">
          <source>This following example demonstrates the asynchronicity of &lt;code&gt;Promise.race:&lt;/code&gt;</source>
          <target state="translated">Следующий пример демонстрирует асинхронность &lt;code&gt;Promise.race:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bbe307e833b2a5b11c90c84540468877e39c9e08" translate="yes" xml:space="preserve">
          <source>This following example demonstrates the asynchronicity of &lt;code&gt;Promise.race&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d108093f87ed6fc8998f994e0fbf28bc1f87721" translate="yes" xml:space="preserve">
          <source>This form also supports the &lt;code&gt;await&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790804d0887e21fb95e200e492b9af4cd6eecb43" translate="yes" xml:space="preserve">
          <source>This form also supports the await keyword.</source>
          <target state="translated">Эта форма также поддерживает ключевое слово &quot;ожидание&quot;.</target>
        </trans-unit>
        <trans-unit id="c6167b8589c3c1fe2493bf4052b5f23a49bc97a8" translate="yes" xml:space="preserve">
          <source>This function can be an ordinary function, or it can be a generator function, so that when invoked, an iterator object is returned. Inside of this generator function, each entry can be provided by using &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54b605c0dd86aec12c2d22119452c0b0adc8f5a" translate="yes" xml:space="preserve">
          <source>This function has 5 kinds of return values, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;-0&lt;/code&gt;, &lt;code&gt;NaN&lt;/code&gt;, which represent &quot;positive number&quot;, &quot;negative number&quot;, &quot;positive zero&quot;, &quot;negative zero&quot; and &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">Эта функция имеет 5 видов возвращаемых значений: &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;-1&lt;/code&gt; , &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;-0&lt;/code&gt; , &lt;code&gt;NaN&lt;/code&gt; , которые представляют &amp;laquo;положительное число&amp;raquo;, &amp;laquo;отрицательное число&amp;raquo;, &amp;laquo;положительный ноль&amp;raquo;, &amp;laquo;отрицательный ноль&amp;raquo; и &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; соответственно.</target>
        </trans-unit>
        <trans-unit id="4c64e07cb40ec02a6c4db2b3c13d9073478870a2" translate="yes" xml:space="preserve">
          <source>This function is also used to identify if objects have the behavior of regular expressions. For example, the methods &lt;a href=&quot;../string/startswith&quot;&gt;&lt;code&gt;String.prototype.startsWith()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../string/endswith&quot;&gt;&lt;code&gt;String.prototype.endsWith()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../string/includes&quot;&gt;&lt;code&gt;String.prototype.includes()&lt;/code&gt;&lt;/a&gt;, check if their first argument is a regular expression and will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if they are. Now, if the &lt;code&gt;match&lt;/code&gt; symbol is set to &lt;code&gt;false&lt;/code&gt; (or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Falsy&quot;&gt;Falsy&lt;/a&gt; value), it indicates that the object is not intended to be used as a regular expression object.</source>
          <target state="translated">Эта функция также используется для определения того, имеют ли объекты поведение регулярных выражений. Например, методы &lt;a href=&quot;../string/startswith&quot;&gt; &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../string/endswith&quot;&gt; &lt;code&gt;String.prototype.endsWith()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../string/includes&quot;&gt; &lt;code&gt;String.prototype.includes()&lt;/code&gt; &lt;/a&gt; , проверьте , если их первый аргумент является регулярным выражением и будет бросать &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , если они есть. Теперь, если для символа &lt;code&gt;match&lt;/code&gt; установлено значение &lt;code&gt;false&lt;/code&gt; (или значение &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Falsy&quot;&gt;Falsy&lt;/a&gt; ), это указывает на то, что объект не предназначен для использования в качестве объекта регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="51d34802e89b2dc0913e112fe99752a9146cac73" translate="yes" xml:space="preserve">
          <source>This function is also used to identify if objects have the behavior of regular expressions. For example, the methods &lt;a href=&quot;../string/startswith&quot;&gt;&lt;code&gt;String.prototype.startsWith()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../string/endswith&quot;&gt;&lt;code&gt;String.prototype.endsWith()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../string/includes&quot;&gt;&lt;code&gt;String.prototype.includes()&lt;/code&gt;&lt;/a&gt;, check if their first argument is a regular expression and will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if they are. Now, if the &lt;code&gt;match&lt;/code&gt; symbol is set to &lt;code&gt;false&lt;/code&gt; (or a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Falsy&quot;&gt;Falsy&lt;/a&gt; value), it indicates that the object is not intended to be used as a regular expression object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9492f9fdf29859365cab477b4f5efad02b714ac" translate="yes" xml:space="preserve">
          <source>This function is part of the ECMAScript 2015 standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e100fbaed23fb495fcdbbace27beaf29c58f01" translate="yes" xml:space="preserve">
          <source>This function is part of the ECMAScript 2015 standard. For more information see &lt;a href=&quot;https://gist.github.com/rwaldron/1074126&quot;&gt;&lt;code&gt;Array.of&lt;/code&gt; and &lt;code&gt;Array.from&lt;/code&gt; proposal&lt;/a&gt; and &lt;a href=&quot;https://gist.github.com/rwaldron/3186576&quot;&gt;&lt;code&gt;Array.of&lt;/code&gt; polyfill&lt;/a&gt;.</source>
          <target state="translated">Эта функция является частью стандарта ECMAScript 2015. Для получения дополнительной информации см &lt;a href=&quot;https://gist.github.com/rwaldron/1074126&quot;&gt; &lt;code&gt;Array.of&lt;/code&gt; и &lt;code&gt;Array.from&lt;/code&gt; предложение&lt;/a&gt; и &lt;a href=&quot;https://gist.github.com/rwaldron/3186576&quot;&gt; &lt;code&gt;Array.of&lt;/code&gt; polyfill&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb60a4fbe159ca3a19c77f3d546c7dc7e3000fb0" translate="yes" xml:space="preserve">
          <source>This function is particularly useful for systems that compile to JS, like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Emscripten&quot;&gt;Emscripten&lt;/a&gt;.</source>
          <target state="translated">Эта функция особенно полезна для систем, которые компилируются в JS, например &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Emscripten&quot;&gt;Emscripten&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e06d06bd6d58f9afc5d4f430f376fd7ba568d8c" translate="yes" xml:space="preserve">
          <source>This function is particularly useful for systems that compile to JS, like &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Emscripten&quot;&gt;Emscripten&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66989f0dc7f4e0c3124cfbe7ba078b8f38a9390b" translate="yes" xml:space="preserve">
          <source>This function is provided to give objects a generic &lt;code&gt;toLocaleString&lt;/code&gt; method, even though not all may use it. See the list below.</source>
          <target state="translated">Эта функция предназначена для предоставления объектам универсального метода &lt;code&gt;toLocaleString&lt;/code&gt; , хотя не все могут его использовать. См. Список ниже.</target>
        </trans-unit>
        <trans-unit id="3bb0b38afd0b129339285d21c0385c86e345c176" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of Math.log(x) / Math.log(10). For log10(e) use the constant &lt;a href=&quot;log10e&quot;&gt;&lt;code&gt;Math.LOG10E&lt;/code&gt;&lt;/a&gt; which is 1 / &lt;a href=&quot;ln10&quot;&gt;&lt;code&gt;Math.LN10&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция эквивалентна Math.log (x) / Math.log (10). Для log10 (e) используйте константу &lt;a href=&quot;log10e&quot;&gt; &lt;code&gt;Math.LOG10E&lt;/code&gt; ,равную&lt;/a&gt; 1 / &lt;a href=&quot;ln10&quot;&gt; &lt;code&gt;Math.LN10&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddc1e6c850ddfa49ea34bff3fb25ca39ff5834dd" translate="yes" xml:space="preserve">
          <source>This function is the equivalent of Math.log(x) / Math.log(2). For log2(e) use the constant &lt;a href=&quot;log2e&quot;&gt;&lt;code&gt;Math.LOG2E&lt;/code&gt;&lt;/a&gt; which is 1 / &lt;a href=&quot;ln2&quot;&gt;&lt;code&gt;Math.LN2&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта функция эквивалентна Math.log (x) / Math.log (2). Для log2 (e) используйте константу &lt;a href=&quot;log2e&quot;&gt; &lt;code&gt;Math.LOG2E&lt;/code&gt; ,равную&lt;/a&gt; 1 / &lt;a href=&quot;ln2&quot;&gt; &lt;code&gt;Math.LN2&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1dcdabb5b09f90d23d75a1602712d7f2e2cce4cc" translate="yes" xml:space="preserve">
          <source>This function is useful for setting date values based on string values, for example in conjunction with the &lt;a href=&quot;settime&quot;&gt;&lt;code&gt;setTime()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c2c9ac3b5f94f2cd80fd4dd8e672996cc3413a8" translate="yes" xml:space="preserve">
          <source>This function makes it a little easier and faster, you just call &lt;code&gt;Math.hypot(v1, v2)&lt;/code&gt; , or &lt;code&gt;Math.hypot(v1, v2, v3, v4, ...)&lt;/code&gt; .</source>
          <target state="translated">Эта функция делает его немного проще и быстрее, вы просто вызываете &lt;code&gt;Math.hypot(v1, v2)&lt;/code&gt; или &lt;code&gt;Math.hypot(v1, v2, v3, v4, ...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d202b859680f485def6942c8ce2f1d29b582052" translate="yes" xml:space="preserve">
          <source>This function makes this calculation easier and faster; you simply call &lt;code&gt;Math.hypot(v1, v2)&lt;/code&gt; , or &lt;code&gt;Math.hypot(v1, v2, v3, v4, ...)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5c15791167b2f0e30cb3ce7631e52ffb33d946" translate="yes" xml:space="preserve">
          <source>This function selects a plural rule according to the locale and formatting options of a &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;PluralRules&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Эта функция выбирает правило множественного числа в соответствии с языковым стандартом и параметрами форматирования объекта &lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;PluralRules&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9292582dc2047a763c27a857f57223d2a2a2d860" translate="yes" xml:space="preserve">
          <source>This functionality can be approximated like this, which demonstrates how many edge cases are handled:</source>
          <target state="translated">Эта функциональность может быть аппроксимирована таким образом,что показывает,сколько дел по краям обрабатывается:</target>
        </trans-unit>
        <trans-unit id="e0d53ad502bbff0c0ab0cffb0ee72a35b804eed2" translate="yes" xml:space="preserve">
          <source>This has numerous benefits:</source>
          <target state="translated">Это имеет многочисленные преимущества:</target>
        </trans-unit>
        <trans-unit id="0f88dbb0ebed51dd25eeac1290a329de8471f3a5" translate="yes" xml:space="preserve">
          <source>This helps to avoid duplicating code in both the promise's &lt;a href=&quot;then&quot;&gt;&lt;code&gt;then()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;catch&quot;&gt;&lt;code&gt;catch()&lt;/code&gt;&lt;/a&gt; handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40db1baaae21d697ce344817f85d6c1d56cdb99c" translate="yes" xml:space="preserve">
          <source>This highlights the subtle difference between &lt;code&gt;return foo;&lt;/code&gt; and &lt;code&gt;return await foo;&lt;/code&gt; &amp;mdash; &lt;code&gt;return foo&lt;/code&gt; immediately returns &lt;code&gt;foo&lt;/code&gt; and never throws, even if &lt;code&gt;foo&lt;/code&gt; is a Promise that rejects. &lt;code&gt;return await foo&lt;/code&gt; will &lt;em&gt;wait &lt;/em&gt;for &lt;code&gt;foo&lt;/code&gt; to resolve or reject if it's a Promise, and throws &lt;strong&gt;before returning&lt;/strong&gt; if it rejects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd453db4261d3e809715390b84eb4575dacb268" translate="yes" xml:space="preserve">
          <source>This inserts &lt;code&gt;myModule&lt;/code&gt; into the current scope, containing all the exports from the module in the file located in &lt;code&gt;/modules/my-module.js&lt;/code&gt;.</source>
          <target state="translated">Это вставляет &lt;code&gt;myModule&lt;/code&gt; в текущую область, содержащую все экспортные данные из модуля в файле, расположенном в &lt;code&gt;/modules/my-module.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0aa48f38d5f447ed23921a93c4502d7fcac1a7e0" translate="yes" xml:space="preserve">
          <source>This inserts both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; into the current scope.</source>
          <target state="translated">Это вставляет и &lt;code&gt;foo&lt;/code&gt; , и &lt;code&gt;bar&lt;/code&gt; в текущую область видимости.</target>
        </trans-unit>
        <trans-unit id="a98d1a980f5c0a36ea503bbe11383206d1a0e32f" translate="yes" xml:space="preserve">
          <source>This is &lt;em&gt;not&lt;/em&gt; the same as being equal according to the &lt;a href=&quot;../../operators/comparison_operators#Equality&quot;&gt;&lt;code&gt;==&lt;/code&gt;&lt;/a&gt; operator. The &lt;code&gt;==&lt;/code&gt; operator applies various coercions to both sides (if they are not the same Type) before testing for equality (resulting in such behavior as &lt;code&gt;&quot;&quot; == false&lt;/code&gt; being &lt;code&gt;true&lt;/code&gt;), but &lt;code&gt;Object.is&lt;/code&gt; doesn't coerce either value.</source>
          <target state="translated">Это &lt;em&gt;не&lt;/em&gt; то же самое, что равенство согласно оператору &lt;a href=&quot;../../operators/comparison_operators#Equality&quot;&gt; &lt;code&gt;==&lt;/code&gt; &lt;/a&gt; . Оператор &lt;code&gt;==&lt;/code&gt; применяет различные принуждения к обеим сторонам (если они не одного и того же типа) перед проверкой на равенство (в результате такое поведение, как &lt;code&gt;&quot;&quot; == false&lt;/code&gt; является &lt;code&gt;true&lt;/code&gt; ), но &lt;code&gt;Object.is&lt;/code&gt; не приводит ни к одному из значений.</target>
        </trans-unit>
        <trans-unit id="008f43d7b675b2decf01f251a65f2abc148b65b1" translate="yes" xml:space="preserve">
          <source>This is &lt;em&gt;not&lt;/em&gt; the same as being equal according to the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Equality&quot;&gt;&lt;code&gt;==&lt;/code&gt;&lt;/a&gt; operator. The &lt;code&gt;==&lt;/code&gt; operator applies various coercions to both sides (if they are not the same Type) before testing for equality (resulting in such behavior as &lt;code&gt;&quot;&quot; == false&lt;/code&gt; being &lt;code&gt;true&lt;/code&gt;), but &lt;code&gt;Object.is&lt;/code&gt; doesn't coerce either value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de74b347a723e07f2adc3e7d2325f165a647b429" translate="yes" xml:space="preserve">
          <source>This is a JavaScript wrapper object &amp;mdash; an array-like structure representing a WebAssembly Table, which stores function references. A table created by JavaScript or in WebAssembly code will be accessible and mutable from both JavaScript and WebAssembly.</source>
          <target state="translated">Это объект-оболочка JavaScript - подобная массиву структура, представляющая таблицу WebAssembly, в которой хранятся ссылки на функции. Таблица, созданная с помощью JavaScript или кода WebAssembly, будет доступна и изменяема как из JavaScript, так и из WebAssembly.</target>
        </trans-unit>
        <trans-unit id="071df58adc32e3304b9300ca79770a087ffcd66c" translate="yes" xml:space="preserve">
          <source>This is also &lt;em&gt;not&lt;/em&gt; the same as being equal according to the &lt;a href=&quot;../../operators/comparison_operators#Identity&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; operator. The &lt;code&gt;===&lt;/code&gt; operator (and the &lt;code&gt;==&lt;/code&gt; operator as well) treats the number values &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;+0&lt;/code&gt; as equal and treats &lt;a href=&quot;../number/nan&quot;&gt;&lt;code&gt;Number.NaN&lt;/code&gt;&lt;/a&gt; as not equal to &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Это также &lt;em&gt;не&lt;/em&gt; то же самое, что равенство согласно оператору &lt;a href=&quot;../../operators/comparison_operators#Identity&quot;&gt; &lt;code&gt;===&lt;/code&gt; &lt;/a&gt; . Оператор &lt;code&gt;===&lt;/code&gt; (а также оператор &lt;code&gt;==&lt;/code&gt; ) обрабатывает &lt;a href=&quot;../number/nan&quot;&gt; &lt;code&gt;Number.NaN&lt;/code&gt; &lt;/a&gt; значения &lt;code&gt;-0&lt;/code&gt; и &lt;code&gt;+0&lt;/code&gt; как равные и обрабатывает Number.NaN как не равное &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8d2ec8d8345b64e733264037034d8ce25643de09" translate="yes" xml:space="preserve">
          <source>This is also &lt;em&gt;not&lt;/em&gt; the same as being equal according to the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Identity&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; operator. The &lt;code&gt;===&lt;/code&gt; operator (and the &lt;code&gt;==&lt;/code&gt; operator as well) treats the number values &lt;code&gt;-0&lt;/code&gt; and &lt;code&gt;+0&lt;/code&gt; as equal and treats &lt;a href=&quot;../number/nan&quot;&gt;&lt;code&gt;Number.NaN&lt;/code&gt;&lt;/a&gt; as not equal to &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b4c6648b0b4bb0e1933cfc63ddbb24f3498f86" translate="yes" xml:space="preserve">
          <source>This is an example of a multiple-operation sequential &lt;code&gt;case&lt;/code&gt; clause, where, depending on the provided integer, you can receive different output. This shows you that it will traverse in the order that you put the &lt;code&gt;case&lt;/code&gt; clauses, and it does not have to be numerically sequential. In JavaScript, you can even mix in definitions of strings into these &lt;code&gt;case&lt;/code&gt; statements as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676fc2cf28b2cedb333e788eb070025ce27886f2" translate="yes" xml:space="preserve">
          <source>This is an example of a multiple-operation sequential switch statement, where, depending on the provided integer, you can receive different output. This shows you that it will traverse in the order that you put the case statements, and it does not have to be numerically sequential. In JavaScript, you can even mix in definitions of strings into these case statements as well.</source>
          <target state="translated">Это пример последовательного множественного оператора переключения,в котором,в зависимости от заданного целого,можно получить различные выходные данные.Это показывает,что он будет перемещаться в том порядке,в котором вы ставите операторы регистров,и не обязательно,чтобы он был численно последовательным.В JavaScript можно даже смешивать определения строк в этих операторах регистров.</target>
        </trans-unit>
        <trans-unit id="b85fbba149f890d7e27c8cd91c2eededf5f628c6" translate="yes" xml:space="preserve">
          <source>This is an example of a single operation sequential &lt;code&gt;case&lt;/code&gt; statement, where four different values perform exactly the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8b3ee4757c675a8fed64b62d3c878f601fe81d6" translate="yes" xml:space="preserve">
          <source>This is an example of a single operation sequential switch statement, where four different values perform exactly the same.</source>
          <target state="translated">Это пример одного последовательного операционного оператора переключения,где четыре различных значения выполняют в точности одинаковую работу.</target>
        </trans-unit>
        <trans-unit id="1c90ab2742a000b45036ef92b7dd0f8e48fa10e9" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;'$&amp;amp;'.toLowerCase()&lt;/code&gt; would be evaluated first as a string literal (resulting in the same &lt;code&gt;'$&amp;amp;'&lt;/code&gt;) before using the characters as a pattern.</source>
          <target state="translated">Это связано с тем, что &lt;code&gt;'$&amp;amp;'.toLowerCase()&lt;/code&gt; сначала будет оцениваться как строковый литерал (в результате получается тот же &lt;code&gt;'$&amp;amp;'&lt;/code&gt; ) перед использованием символов в качестве шаблона.</target>
        </trans-unit>
        <trans-unit id="fe6eaa3e73a5755d718a7471f3f60b32c355e48d" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;'$&amp;amp;'.toLowerCase()&lt;/code&gt; would first be evaluated as a string literal (resulting in the same &lt;code&gt;'$&amp;amp;'&lt;/code&gt;) before using the characters as a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="208ce14e060f11ae59221dc400e278091b2f8708" translate="yes" xml:space="preserve">
          <source>This is because the code inside braces ({}) is parsed as a sequence of statements (i.e. &lt;code&gt;foo&lt;/code&gt; is treated like a label, not a key in an object literal).</source>
          <target state="translated">Это связано с тем, что код внутри фигурных скобок ({}) анализируется как последовательность операторов (т.е. &lt;code&gt;foo&lt;/code&gt; обрабатывается как метка, а не как ключ в литерале объекта).</target>
        </trans-unit>
        <trans-unit id="46a64a221d74a1f7969a48b07f5d469a42d407a7" translate="yes" xml:space="preserve">
          <source>This is because the first &lt;code&gt;let message = 'hello';&lt;/code&gt; conflicts with second let statement &lt;code&gt;let message = 'hi';&lt;/code&gt; even they're within their own separate case clauses &lt;code&gt;case 'say_hello':&lt;/code&gt; and &lt;code&gt;case 'say_hi':&lt;/code&gt;. Ultimately, this is due to both &lt;code&gt;let&lt;/code&gt; statements being interpreted as duplicate declarations of the same variable name within the same block scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322e18c06f0cd5355bd782d8e430f33df48d0a05" translate="yes" xml:space="preserve">
          <source>This is because the limit (and indeed, even the nature of any excessively-large-stack behavior) is unspecified. Some engines will throw an exception. More perniciously, others will arbitrarily limit the number of arguments actually passed to the applied function. To illustrate this latter case: if such an engine had a limit of four arguments (actual limits are of course significantly higher), it would be as if the arguments &lt;code&gt;5, 6, 2, 3&lt;/code&gt; had been passed to &lt;code&gt;apply&lt;/code&gt; in the examples above, rather than the full array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d3998758b1b2576489bfb42056c3c30e470107" translate="yes" xml:space="preserve">
          <source>This is deprecated as a property of &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt;. Use the &lt;a href=&quot;../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; object (available within the function) instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c252eae447e9cf5663be46226b163ee6e10465a8" translate="yes" xml:space="preserve">
          <source>This is different from using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with code for a generator function expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073922126be7ad02a2ecb08bcaeb9932e3bf72c5" translate="yes" xml:space="preserve">
          <source>This is different from using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with code for an async function expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413187aaa333089aed8b057a0bcd81eca7f1c4c4" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; operation:</source>
          <target state="translated">Это эквивалентно следующей операции &lt;a href=&quot;../global_objects/array/map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="9c3a3de3442fecc3f0f59b51415d77d1af0ed66e" translate="yes" xml:space="preserve">
          <source>This is especially important for certain array subclasses, like &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed arrays&lt;/a&gt;, since the intermediate array would necessarily have values truncated to fit into the appropriate type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b314f830b2a93a472d6d90bf7bb7cc23bf075e6b" translate="yes" xml:space="preserve">
          <source>This is explained further on the &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;Array.length&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">Это объясняется далее на странице &lt;a href=&quot;array/length&quot;&gt; &lt;code&gt;Array.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a663719672c7bbbc98766394f1d89b793f57ceb5" translate="yes" xml:space="preserve">
          <source>This is just a simple anonymous class expression which you can refer to using the variable &quot;Foo&quot;.</source>
          <target state="translated">Это простое анонимное выражение класса,к которому можно обратиться,используя переменную &quot;Foo&quot;.</target>
        </trans-unit>
        <trans-unit id="eb13e45389aa5a141c169430057cb9ed714f79ce" translate="yes" xml:space="preserve">
          <source>This is just a simple anonymous class expression which you can refer to using the variable &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b13cac8cafe5eeceac27b3bac59e70b2f7171b9" translate="yes" xml:space="preserve">
          <source>This is no longer the case in ECMAScript 2015 (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1041128&quot;&gt;bug 1041128&lt;/a&gt;).</source>
          <target state="translated">В ECMAScript 2015 этого больше нет ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1041128&quot;&gt;ошибка 1041128&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="cf188543175f13d490410725532bec6c37e058eb" translate="yes" xml:space="preserve">
          <source>This is not a complete polyfill, since it returns an instance of Array, and not Uint8Array, so it lacks properties that would normally exist on TypedArrays.</source>
          <target state="translated">Это не полная полизаполнение,так как возвращает экземпляр Array,а не Uint8Array,поэтому ему не хватает свойств,которые обычно существуют на TypedArray.</target>
        </trans-unit>
        <trans-unit id="bf8132eb74c2cf22ba7e0b5fe71b7215b5ce98fc" translate="yes" xml:space="preserve">
          <source>This is not a robust way to reverse a string:</source>
          <target state="translated">Это не надежный способ перевернуть строку:</target>
        </trans-unit>
        <trans-unit id="359c68fa95bdf9de648bfba3053c422111f3a164" translate="yes" xml:space="preserve">
          <source>This is not legal (the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Promise#Constructor&quot;&gt;Promise constructor&lt;/a&gt; is not being called correctly) and will throw a &lt;code&gt;TypeError: this is not a constructor&lt;/code&gt; exception:</source>
          <target state="translated">Это недопустимо ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Promise#Constructor&quot;&gt;конструктор Promise&lt;/a&gt; не вызывается правильно) и вызовет &lt;code&gt;TypeError: this is not a constructor&lt;/code&gt; исключение конструктора :</target>
        </trans-unit>
        <trans-unit id="b599f8a621ba4222a4aac8151c0981083d9ff16a" translate="yes" xml:space="preserve">
          <source>This is not legal (the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules/Promise.jsm/Promise#Constructor&quot;&gt;Promise constructor&lt;/a&gt; is not being called correctly) and will throw a &lt;code&gt;TypeError: this is not a constructor&lt;/code&gt; exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5733b399958defe53c59bb5929031dc51b87600d" translate="yes" xml:space="preserve">
          <source>This is not the best way to do things, and probably not to be used in any production environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d60dba41c390f2f7c1c5e15f9c7b5e18daf2bf8" translate="yes" xml:space="preserve">
          <source>This is now possible with &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; (ES2015) loops as well.</source>
          <target state="translated">Теперь это возможно и с циклами &lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; (ES2015).</target>
        </trans-unit>
        <trans-unit id="be239762b46386fb92109519d0bbd048a6b09c7d" translate="yes" xml:space="preserve">
          <source>This is really different from</source>
          <target state="translated">Это действительно отличается от</target>
        </trans-unit>
        <trans-unit id="36b20f089e6393f1c8f2e76828d14573207c1677" translate="yes" xml:space="preserve">
          <source>This is really different from:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d4b4888b60a7c7f44232635981717e49f6887fc" translate="yes" xml:space="preserve">
          <source>This is similar to the &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; object, so that each entry's &lt;em&gt;key&lt;/em&gt; is the same as its &lt;em&gt;value&lt;/em&gt; for a &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1075ce64a26f9ab08ab3d64987d886262a92513" translate="yes" xml:space="preserve">
          <source>This is still in the temporal dead zone as its declaration statement has not been reached and terminated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd74be57be6f93ffca00ff71e1d39061bd27902" translate="yes" xml:space="preserve">
          <source>This is the same as the global &lt;a href=&quot;parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2871763944d73fb8fffa612235b093d207efe83" translate="yes" xml:space="preserve">
          <source>This is the same as the global &lt;a href=&quot;parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88221358a8c319f8e71bd4d82231d103ea61668a" translate="yes" xml:space="preserve">
          <source>This is what it would look like using code snippets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9368acabfbbc0558888b69038b0a6146f379cc6" translate="yes" xml:space="preserve">
          <source>This issue also appears if the same variable is used in the getter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee37fbd5bde80ef8e8547277a4747ebc935aa3cf" translate="yes" xml:space="preserve">
          <source>This issue can also happen when providing a function (stored in an object) as an argument to another function. In this case, the object won't the &lt;code&gt;this&lt;/code&gt; target of the function. To work-around this issue, you will either need to provide a lambda which is making the call, or use the &lt;a href=&quot;../global_objects/function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind()&lt;/code&gt;&lt;/a&gt; function to force the &lt;code&gt;this&lt;/code&gt; argument to the expected object.</source>
          <target state="translated">Эта проблема также может возникнуть при предоставлении функции (хранящейся в объекте) в качестве аргумента другой функции. В этом случае объект не будет в &lt;code&gt;this&lt;/code&gt; цели функции. Чтобы обойти эту проблему, вам нужно будет либо предоставить лямбда, которая выполняет вызов, либо использовать &lt;a href=&quot;../global_objects/function/bind&quot;&gt; &lt;code&gt;Function.prototype.bind()&lt;/code&gt; &lt;/a&gt; чтобы принудительно передать &lt;code&gt;this&lt;/code&gt; аргумент ожидаемому объекту.</target>
        </trans-unit>
        <trans-unit id="cd883cc8bd740c640410d1ab1754c0d88be04eca" translate="yes" xml:space="preserve">
          <source>This issue can also happen when providing a function that is stored as a property of an object as an argument to another function. In this case, the object that stores the function won't be the &lt;code&gt;this&lt;/code&gt; target of that function when it is called by the other function. To work-around this issue, you will either need to provide a lambda which is making the call, or use the &lt;a href=&quot;../global_objects/function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind()&lt;/code&gt;&lt;/a&gt; function to force the &lt;code&gt;this&lt;/code&gt; argument to the expected object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a72d273fff00c9ce64d02a267b12f39fa00462" translate="yes" xml:space="preserve">
          <source>This issue can arise when using the &lt;a href=&quot;../global_objects/function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; methods, and providing a &lt;code&gt;this&lt;/code&gt; argument which does not have the expected type.</source>
          <target state="translated">Эта проблема может возникнуть при использовании методов &lt;a href=&quot;../global_objects/function/call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt; и предоставлении аргумента &lt;code&gt;this&lt;/code&gt; , который не имеет ожидаемого типа.</target>
        </trans-unit>
        <trans-unit id="0c4d71403f2dccf2aa58ddcf9d5d880a2549dc90" translate="yes" xml:space="preserve">
          <source>This lets you avoid duplicating code in both the promise's &lt;a href=&quot;then&quot;&gt;&lt;code&gt;then()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;catch&quot;&gt;&lt;code&gt;catch()&lt;/code&gt;&lt;/a&gt; handlers.</source>
          <target state="translated">Это позволяет избежать дублирования кода в обработчиках &lt;a href=&quot;then&quot;&gt; &lt;code&gt;then()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;catch&quot;&gt; &lt;code&gt;catch()&lt;/code&gt; &lt;/a&gt; обещания .</target>
        </trans-unit>
        <trans-unit id="dcbad0e9023fc522b259cefc46df847e5f50f715" translate="yes" xml:space="preserve">
          <source>This logs &quot;819199440000&quot;.</source>
          <target state="translated">Это журнал &quot;819199440000&quot;.</target>
        </trans-unit>
        <trans-unit id="aa08ad3dc43c45f1a4ba5c981f5040dc358a1b07" translate="yes" xml:space="preserve">
          <source>This logs 'Smith, John'.</source>
          <target state="translated">Это журнал &quot;Смит,Джон&quot;.</target>
        </trans-unit>
        <trans-unit id="8b5fad24ae3bf54a37018d5192408c9fee5fcf60" translate="yes" xml:space="preserve">
          <source>This logs 'Twas the night before Christmas...'</source>
          <target state="translated">В этом журнале написано:&quot;Была ночь перед Рождеством...</target>
        </trans-unit>
        <trans-unit id="2434413d65324cae030c2d45551314b68ec65fd7" translate="yes" xml:space="preserve">
          <source>This logs 'oranges are round, and oranges are juicy'.</source>
          <target state="translated">Это бревна &quot;апельсины круглые,а апельсины сочные&quot;.</target>
        </trans-unit>
        <trans-unit id="46dac4a89ea279eb2cd5c3e1e51ebcc49bad4a78" translate="yes" xml:space="preserve">
          <source>This logs 2 because the &lt;code&gt;var x&lt;/code&gt; statement within the block is in the same scope as the &lt;code&gt;var x&lt;/code&gt; statement before the block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd32d940192f8f335d13d0e14bd38ea9ceec204f" translate="yes" xml:space="preserve">
          <source>This logs 2 because the &lt;code&gt;var x&lt;/code&gt; statement within the block is in the same scope as the &lt;code&gt;var x&lt;/code&gt; statement before the block. In C or Java, the equivalent code would have outputted 1.</source>
          <target state="translated">Это регистрирует 2, потому что оператор &lt;code&gt;var x&lt;/code&gt; внутри блока находится в той же области, что и оператор &lt;code&gt;var x&lt;/code&gt; перед блоком. В C или Java эквивалентный код выдал бы 1.</target>
        </trans-unit>
        <trans-unit id="eef6a2951162ef4b9fdfafdd91476e4959e0e5b2" translate="yes" xml:space="preserve">
          <source>This logs &lt;code&gt;'Smith, John'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14cd5d6ad2ddeb940b09b38acb76fe57b64be76c" translate="yes" xml:space="preserve">
          <source>This logs &lt;code&gt;'Twas the night before Christmas...'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e6436e01c0063fe9c5dcb237ac04d17cbc993a" translate="yes" xml:space="preserve">
          <source>This logs &lt;code&gt;'oranges are round, and oranges are juicy'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912efd6cc77f26d9c238d8e86e5f91f8734ce187" translate="yes" xml:space="preserve">
          <source>This logs &lt;code&gt;819199440000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeaaab61da8ae77302900204ae7682c5842307c1" translate="yes" xml:space="preserve">
          <source>This logs two lines; the first line logs the original string, and the second line logs the resulting array.</source>
          <target state="translated">В этой строке регистрируются две строки;в первой строке регистрируется исходная строка,а во второй-результирующий массив.</target>
        </trans-unit>
        <trans-unit id="ff01ab748a447654b55cf2a732930c48cb640771" translate="yes" xml:space="preserve">
          <source>This loop is similar to the first one, but it uses &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt; to check if the found enumerable property is the object's own, i.e. not inherited. If it is, the property is logged. Properties &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt; are logged because they are own properties (&lt;strong&gt;not inherited&lt;/strong&gt;). Properties &lt;code&gt;arrCustom&lt;/code&gt; and &lt;code&gt;objCustom&lt;/code&gt; are not logged because they &lt;strong&gt;are inherited&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cbb9f7119905b2586838956a1338b5278260435" translate="yes" xml:space="preserve">
          <source>This loop is similar to the first one, but it uses &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt; to check, if the found enumerable property is object's own (not inherited). And if it is, the property is logged. Properties &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; and &lt;code&gt;foo&lt;/code&gt; are logged because they are own properties (&lt;strong&gt;not inherited&lt;/strong&gt;). Properties &lt;code&gt;arrCustom&lt;/code&gt; and &lt;code&gt;objCustom&lt;/code&gt; are not logged because they &lt;strong&gt;are inherited&lt;/strong&gt;.</source>
          <target state="translated">Этот цикл похож на первый, но он использует &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt; &lt;code&gt;hasOwnProperty()&lt;/code&gt; &lt;/a&gt; для проверки, является ли найденное перечислимое свойство собственным объектом (не унаследованным). И если это так, собственность регистрируется. Свойства &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; и &lt;code&gt;foo&lt;/code&gt; регистрируются, потому что они являются собственными свойствами ( &lt;strong&gt;не наследуются&lt;/strong&gt; ). Свойства &lt;code&gt;arrCustom&lt;/code&gt; и &lt;code&gt;objCustom&lt;/code&gt; не регистрируются, поскольку они &lt;strong&gt;унаследованы&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="728cd810df8a5cfddb3cc665aaae28fc8419faf9" translate="yes" xml:space="preserve">
          <source>This loop iterates and logs &lt;strong&gt;values&lt;/strong&gt; that &lt;code&gt;iterable&lt;/code&gt;, as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;iterable object&lt;/a&gt;, defines to be iterated over. The object's &lt;strong&gt;elements&lt;/strong&gt;&lt;code&gt;3&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt; are shown, but none of the object's &lt;strong&gt;properties&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd17082d80f63cf403d892f1a8c1bcc9695ce8b" translate="yes" xml:space="preserve">
          <source>This loop iterates and logs values that &lt;code&gt;iterable&lt;/code&gt; as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;iterable object&lt;/a&gt;defines to be iterated over, which are array elements &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt; and not any of object's &lt;strong&gt;properties&lt;/strong&gt;.</source>
          <target state="translated">Этот цикл выполняет &lt;code&gt;iterable&lt;/code&gt; и регистрирует значения, которые итерируются как &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators#Iterables&quot;&gt;итерируемый объект,&lt;/a&gt; определяемый для итерации, которые являются элементами массива &lt;code&gt;3&lt;/code&gt; , &lt;code&gt;5&lt;/code&gt; , &lt;code&gt;7&lt;/code&gt; , а не какими-либо &lt;strong&gt;свойствами&lt;/strong&gt; объекта .</target>
        </trans-unit>
        <trans-unit id="9e61403415ab99c6515a2bc6a172cd44f69e2d71" translate="yes" xml:space="preserve">
          <source>This loop logs only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable properties&lt;/a&gt; of &lt;code&gt;iterable&lt;/code&gt; object, in original insertion order. It doesn't log array &lt;strong&gt;elements&lt;/strong&gt;&lt;code&gt;3&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt; or &lt;code&gt;hello&lt;/code&gt; because those are &lt;strong&gt;not&lt;/strong&gt; enumerable properties. But it logs array &lt;strong&gt;indexes&lt;/strong&gt; as well as &lt;code&gt;arrCustom&lt;/code&gt; and &lt;code&gt;objCustom&lt;/code&gt;, which are. If you're not sure why the properties are iterated over, there's a more thorough explanation of how &lt;a href=&quot;for...in#Array_iteration_and_for...in&quot;&gt;&lt;code&gt;array iteration and for...in&lt;/code&gt;&lt;/a&gt; work.</source>
          <target state="translated">Этот цикл регистрирует только &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;перечисляемые свойства&lt;/a&gt; из &lt;code&gt;iterable&lt;/code&gt; объекта, в исходном порядке вставки. Он не регистрирует &lt;strong&gt;элементы&lt;/strong&gt; массива &lt;code&gt;3&lt;/code&gt; , &lt;code&gt;5&lt;/code&gt; , &lt;code&gt;7&lt;/code&gt; или &lt;code&gt;hello&lt;/code&gt; , потому что это &lt;strong&gt;не&lt;/strong&gt; перечислимые свойства. Но он регистрирует &lt;strong&gt;индексы&lt;/strong&gt; массивов, а также &lt;code&gt;arrCustom&lt;/code&gt; и &lt;code&gt;objCustom&lt;/code&gt; , которые есть. Если вы не знаете , почему свойство итерации, есть более подробное объяснение того , как &lt;a href=&quot;for...in#Array_iteration_and_for...in&quot;&gt; &lt;code&gt;array iteration and for...in&lt;/code&gt; &lt;/a&gt; работе.</target>
        </trans-unit>
        <trans-unit id="2dd45d02933ab08f03fa6d824036dccf5751085c" translate="yes" xml:space="preserve">
          <source>This loop logs only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable properties&lt;/a&gt; of the &lt;code&gt;iterable&lt;/code&gt; object, in arbitrary order. It doesn't log array &lt;strong&gt;elements&lt;/strong&gt;&lt;code&gt;3&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt; or &lt;code&gt;hello&lt;/code&gt; because those are &lt;strong&gt;not&lt;/strong&gt; enumerable properties, in fact they are not properties at all, they are &lt;strong&gt;values&lt;/strong&gt;. It logs array &lt;strong&gt;indexes&lt;/strong&gt; as well as &lt;code&gt;arrCustom&lt;/code&gt; and &lt;code&gt;objCustom&lt;/code&gt;, which are. If you're not sure why these properties are iterated over, there's a more thorough explanation of how &lt;a href=&quot;for...in#Array_iteration_and_for...in&quot;&gt;&lt;code&gt;array iteration and for...in&lt;/code&gt;&lt;/a&gt; work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b41d6f357f793b0bfe160c3e66477745c702dd" translate="yes" xml:space="preserve">
          <source>This may not make sense at first but when you start dealing with multiple frames or windows in your script and pass objects from one context to another via functions, this will be a valid and strong issue. For instance, you can securely check if a given object is, in fact, an Array using &lt;code&gt;Array.isArray(myObj)&lt;/code&gt;</source>
          <target state="translated">Поначалу это может не иметь смысла, но когда вы начинаете иметь дело с несколькими фреймами или окнами в своем скрипте и передавать объекты из одного контекста в другой через функции, это будет серьезной и серьезной проблемой. Например, вы можете безопасно проверить, действительно ли данный объект является массивом, используя &lt;code&gt;Array.isArray(myObj)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af969ba43007ff7edea6fe9c040fe7c98008d444" translate="yes" xml:space="preserve">
          <source>This may not make sense at first, but for scripts dealing with multiple frames or windows, and passing objects from one context to another via functions, this will be a valid and strong issue. For instance, you can securely check if a given object is, in fact, an Array using &lt;code&gt;Array.isArray(&lt;var&gt;myObj&lt;/var&gt;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b801d88a0da407c7128c2ff1c47e2c14695387" translate="yes" xml:space="preserve">
          <source>This means that a tagged template like the following is problematic, because, per ECMAScript grammar, a parser looks for valid Unicode escape sequences, but finds malformed syntax:</source>
          <target state="translated">Это означает,что такой шаблон,как следующий,является проблематичным,потому что,согласно грамматике ECMAScript,парсер ищет действительные экранирующие последовательности Unicode,но находит некорректный синтаксис:</target>
        </trans-unit>
        <trans-unit id="4a5d64b9105ca942c48c028a9679b334a111eec7" translate="yes" xml:space="preserve">
          <source>This means that different browsers can give a different result. Even the same JavaScript engine on a different OS or architecture can give different results!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d559f000b511e827a28282de94374f00bee4f11b" translate="yes" xml:space="preserve">
          <source>This means that functions and variables declared in the function body cannot be referred to from default value parameter initializers; attempting to do so throws a run-time &lt;a href=&quot;../global_objects/referenceerror&quot;&gt;&lt;code&gt;ReferenceError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b2ebc97be974edede44a91f6b7acedb37463134" translate="yes" xml:space="preserve">
          <source>This means that you shouldn&amp;rsquo;t write a lazy getter for a property whose value you expect to change, because if the getter is lazy then it will not recalculate the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf14e175098f04334392b1707305811a5a0ff5c" translate="yes" xml:space="preserve">
          <source>This means that you shouldn't use a lazy getter for a property whose value you expect to change, because the getter will not recalculate the value.</source>
          <target state="translated">Это означает,что вы не должны использовать ленивый геттер для свойства,значение которого вы ожидаете изменить,потому что геттер не будет пересчитывать значение.</target>
        </trans-unit>
        <trans-unit id="4f40669dfc3c484794dee2581cdbe35c00b46e74" translate="yes" xml:space="preserve">
          <source>This memory's &lt;code&gt;buffer&lt;/code&gt; property will return a &lt;code&gt;&lt;a href=&quot;../sharedarraybuffer&quot;&gt;SharedArrayBuffer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d54e4170435adc72ca9d3b2670d169f5e688127" translate="yes" xml:space="preserve">
          <source>This method allows a precise addition to or modification of a property on an object. Normal property addition through assignment creates properties which show up during property enumeration (&lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop or &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; method), whose values may be changed, and which may be &lt;a href=&quot;../../operators/delete&quot;&gt;deleted&lt;/a&gt;. This method allows these extra details to be changed from their defaults. By default, values added using &lt;code&gt;Object.defineProperty()&lt;/code&gt; are immutable and not enumerable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491161e77a4b6245ea874583805ac06680c8c066" translate="yes" xml:space="preserve">
          <source>This method allows a precise addition to or modification of a property on an object. Normal property addition through assignment creates properties which show up during property enumeration (&lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop or &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; method), whose values may be changed, and which may be &lt;a href=&quot;../../operators/delete&quot;&gt;deleted&lt;/a&gt;. This method allows these extra details to be changed from their defaults. By default, values added using &lt;code&gt;Object.defineProperty()&lt;/code&gt; are immutable.</source>
          <target state="translated">Этот метод позволяет точно добавить или изменить свойство объекта. Обычное добавление свойств посредством присваивания создает свойства, которые появляются во время перечисления свойств ( &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; цикла или метода &lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Object.keys&lt;/code&gt; &lt;/a&gt; ), значения которых могут быть изменены, а которые могут быть &lt;a href=&quot;../../operators/delete&quot;&gt;удалены&lt;/a&gt; . Этот метод позволяет изменить эти дополнительные параметры по сравнению с их значениями по умолчанию. По умолчанию значения, добавленные с помощью &lt;code&gt;Object.defineProperty()&lt;/code&gt; , неизменяемы.</target>
        </trans-unit>
        <trans-unit id="f704901faae524431730bdf40f9707422fd2785b" translate="yes" xml:space="preserve">
          <source>This method can be used in &lt;em&gt;almost&lt;/em&gt; the same way as &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e58d5e8f25a596fd61c42be4c70acd1f3af5138" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="translated">Этот метод можно использовать почти так же, как &lt;a href=&quot;../string/match&quot;&gt; &lt;code&gt;String.prototype.match()&lt;/code&gt; &lt;/a&gt; , за исключением другого порядка &lt;code&gt;this&lt;/code&gt; и другого порядка аргументов.</target>
        </trans-unit>
        <trans-unit id="d0e48a6c5ace0bade4c8279bb0f59b436d1ebb79" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="translated">Этот метод можно использовать почти так же, как &lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt; , за исключением другого порядка &lt;code&gt;this&lt;/code&gt; и другого порядка аргументов.</target>
        </trans-unit>
        <trans-unit id="3af8eb9981bc847519477ca9d0eb927fcdbb1fb7" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="translated">Этот метод можно использовать почти так же, как &lt;a href=&quot;../string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; &lt;/a&gt; , за исключением другого порядка &lt;code&gt;this&lt;/code&gt; и другого порядка аргументов.</target>
        </trans-unit>
        <trans-unit id="2eda3fb2183a80f9f04697f8a3f51ec46e60dd89" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different arguments order.</source>
          <target state="translated">Этот метод можно использовать почти так же, как &lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt; , за исключением другого порядка &lt;code&gt;this&lt;/code&gt; и другого порядка аргументов.</target>
        </trans-unit>
        <trans-unit id="8c5a18dc13bb7c0f49f12e2d027ebf5a25908724" translate="yes" xml:space="preserve">
          <source>This method can be used in almost the same way as &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt;, except the different &lt;code&gt;this&lt;/code&gt; and the different order of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496b730643a0f9292cc6f1f1b5c17f4ff7d7e8fa" translate="yes" xml:space="preserve">
          <source>This method can be useful for aggregating the results of multiple promises.</source>
          <target state="translated">Этот метод может быть полезен для агрегирования результатов множественных обещаний.</target>
        </trans-unit>
        <trans-unit id="c3c50061f520cf8433f9f488097531f0f156580e" translate="yes" xml:space="preserve">
          <source>This method can be useful for aggregating the results of multiple promises. It is typically used when there are multiple related asynchronous tasks that the overall code relies on to work successfully &amp;mdash; all of whom we want to fulfill before the code execution continues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094f1b1bbabc6f64860f9c4d079b311edc345aec" translate="yes" xml:space="preserve">
          <source>This method does not change the &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object it is called on. It simply returns a new string.</source>
          <target state="translated">Этот метод не изменяет объект &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; ,для которого&lt;/a&gt; он вызывается. Он просто возвращает новую строку.</target>
        </trans-unit>
        <trans-unit id="6666baba3f580ccd286b61386774c40457db494b" translate="yes" xml:space="preserve">
          <source>This method does not change the calling &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object. It simply returns a new string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a8f56da2c8475aed3f21d446424c570a9f6def7" translate="yes" xml:space="preserve">
          <source>This method exists for customizing match behavior within &lt;code&gt;RegExp&lt;/code&gt; subclasses.</source>
          <target state="translated">Этот метод существует для настройки поведения сопоставления в подклассах &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e76d94ba71bcfb16503893dd48081fd35f84674b" translate="yes" xml:space="preserve">
          <source>This method exists for customizing replace behavior in &lt;code&gt;RegExp&lt;/code&gt; subclass.</source>
          <target state="translated">Этот метод существует для настройки поведения замены в подклассе &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24b40d7ea7ebe565d676832de325fe71c3207bac" translate="yes" xml:space="preserve">
          <source>This method exists for customizing the behavior of &lt;code&gt;split()&lt;/code&gt; in &lt;code&gt;RegExp&lt;/code&gt; subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1aa28c4d36bff7298821a1aa9ee8c1461c765f" translate="yes" xml:space="preserve">
          <source>This method exists for customizing the search behavior in &lt;code&gt;RegExp&lt;/code&gt; subclasses.</source>
          <target state="translated">Этот метод существует для настройки поведения поиска в подклассах &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21c6ecc9ef52cc6b8b8b85ede1e2f1c62b5fcf1f" translate="yes" xml:space="preserve">
          <source>This method exists for customizing the split behavior in &lt;code&gt;RegExp&lt;/code&gt; subclass.</source>
          <target state="translated">Этот метод существует для настройки поведения разделения в подклассе &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c14635a53db4b1e8b459a7ea3abf070bd7b3f80e" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cd014293bf6eef1dca1fc6b0aedf94ffb3257e" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet. However, you can easily polyfill this method:</source>
          <target state="translated">Этот метод был добавлен в спецификацию ECMAScript 2015 и может быть доступен еще не во всех реализациях JavaScript.Тем не менее,вы можете легко заполнить этот метод:</target>
        </trans-unit>
        <trans-unit id="82515c7dd3160807e861a6cfc787f7e6349f9c7f" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet. However, you can polyfill &lt;code&gt;Array.prototype.find&lt;/code&gt; with the following snippet:</source>
          <target state="translated">Этот метод был добавлен в спецификацию ECMAScript 2015 и пока может быть недоступен во всех реализациях JavaScript. Однако вы можете полифиллировать &lt;code&gt;Array.prototype.find&lt;/code&gt; с помощью следующего фрагмента:</target>
        </trans-unit>
        <trans-unit id="1fc57f4cdb3c305fad0a32bc254517afa35c24c2" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet. However, you can polyfill &lt;code&gt;String.prototype.repeat()&lt;/code&gt; with the following snippet:</source>
          <target state="translated">Этот метод был добавлен в спецификацию ECMAScript 2015 и пока может быть недоступен во всех реализациях JavaScript. Однако вы можете выполнить полифил &lt;code&gt;String.prototype.repeat()&lt;/code&gt; с помощью следующего фрагмента:</target>
        </trans-unit>
        <trans-unit id="57b7a3036cae93c2fe97c1a5f5ee95bfd9ab48bb" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 2015 specification and may not be available in all JavaScript implementations yet. However, you can polyfill &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; with the following snippet:</source>
          <target state="translated">Этот метод был добавлен в спецификацию ECMAScript 2015 и пока может быть недоступен во всех реализациях JavaScript. Однако вы можете заполнить &lt;code&gt;String.prototype.startsWith()&lt;/code&gt; с помощью следующего фрагмента:</target>
        </trans-unit>
        <trans-unit id="936616e173741f4312192e2fcd2409dedbf7dc5e" translate="yes" xml:space="preserve">
          <source>This method has been added to the ECMAScript 6 specification and may not be available in all JavaScript implementations yet. However, you can polyfill &lt;code&gt;String.prototype.endsWith()&lt;/code&gt; with the following snippet:</source>
          <target state="translated">Этот метод был добавлен в спецификацию ECMAScript 6 и может быть пока недоступен во всех реализациях JavaScript. Однако вы можете заполнить &lt;code&gt;String.prototype.endsWith()&lt;/code&gt; с помощью следующего фрагмента:</target>
        </trans-unit>
        <trans-unit id="bfe844b6cbf350ae41cd8dcbe1f13a0e68c8c4eb" translate="yes" xml:space="preserve">
          <source>This method has the same functionality as the global &lt;a href=&quot;../parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba83ba57f2891f92243494071d0afca752ad2fe8" translate="yes" xml:space="preserve">
          <source>This method has the same functionality as the global &lt;a href=&quot;../parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">Этот метод имеет ту же функциональность, что и глобальная функция &lt;a href=&quot;../parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="157a467bd4bfe2a9b7253d40a7eb7f1188b91c19" translate="yes" xml:space="preserve">
          <source>This method is also part of ECMAScript 2015. (Its purpose is modularization of globals.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4155f5bb3d4edfa3e164f79c343e9177bbab6699" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ce8895f44a9778e2bccac14b26144462e4ee01" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt;. For example, the following two examples return same result.</source>
          <target state="translated">Этот метод вызывается внутри &lt;a href=&quot;../string/match&quot;&gt; &lt;code&gt;String.prototype.match()&lt;/code&gt; &lt;/a&gt; . Например, следующие два примера возвращают одинаковый результат.</target>
        </trans-unit>
        <trans-unit id="867134c7dad2a60527307e11728be2b02487822b" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;pattern&lt;/code&gt; argument is a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. For example, following two examples return same result.</source>
          <target state="translated">Этот метод вызывается внутри &lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt; если аргумент &lt;code&gt;pattern&lt;/code&gt; является объектом &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; . Например, следующие два примера возвращают одинаковый результат.</target>
        </trans-unit>
        <trans-unit id="86fa8de37fbd2280d1611f0feaa8813ab9f284ac" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/search&quot;&gt;&lt;code&gt;String.prototype.search()&lt;/code&gt;&lt;/a&gt;. For example, the following two examples return the same result.</source>
          <target state="translated">Этот метод вызывается внутри &lt;a href=&quot;../string/search&quot;&gt; &lt;code&gt;String.prototype.search()&lt;/code&gt; &lt;/a&gt; . Например, следующие два примера возвращают тот же результат.</target>
        </trans-unit>
        <trans-unit id="4b9d738d59cda9c7b6b804054c0d55b16db02235" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt; if its &lt;code&gt;separator&lt;/code&gt; argument is an object that has a &lt;code&gt;@@split&lt;/code&gt; method, such as a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt;. For example, the following two examples return the same result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aecce4dcdcf1c90ba9852754479cf86d49774f06" translate="yes" xml:space="preserve">
          <source>This method is called internally in &lt;a href=&quot;../string/split&quot;&gt;&lt;code&gt;String.prototype.split()&lt;/code&gt;&lt;/a&gt; if the &lt;code&gt;separator&lt;/code&gt; argument is a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object. For example, the following two examples return the same result.</source>
          <target state="translated">Этот метод вызывается внутри &lt;a href=&quot;../string/split&quot;&gt; &lt;code&gt;String.prototype.split()&lt;/code&gt; &lt;/a&gt; если аргумент- &lt;code&gt;separator&lt;/code&gt; является объектом &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; . Например, следующие два примера возвращают тот же результат.</target>
        </trans-unit>
        <trans-unit id="2215b5714302af0ad9a6b2b9e3f63217245d405b" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to the &lt;a href=&quot;gettime&quot;&gt;&lt;code&gt;Date.prototype.getTime()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Этот метод функционально эквивалентен &lt;a href=&quot;gettime&quot;&gt; &lt;code&gt;Date.prototype.getTime()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0f103d7fcbba7a9364dd76f1a0d2ace0a684f79" translate="yes" xml:space="preserve">
          <source>This method is usually called internally by JavaScript and not explicitly in code.</source>
          <target state="translated">Этот метод обычно вызывается внутри JavaScript,а не явно в коде.</target>
        </trans-unit>
        <trans-unit id="943bb8e3d6bff4653010c545f007aa18b80883f3" translate="yes" xml:space="preserve">
          <source>This method is usually called internally by JavaScript and not explicitly in web code.</source>
          <target state="translated">Этот метод обычно вызывается внутри JavaScript,а не явно в веб-коде.</target>
        </trans-unit>
        <trans-unit id="a9f3feedcfbd882b304fea40935da4e86d837cb8" translate="yes" xml:space="preserve">
          <source>This method lets you determine whether or not a string begins with another string. This method is case-sensitive.</source>
          <target state="translated">Этот метод позволяет определить,начинается ли строка с другой строки или нет.Этот метод чувствителен к регистру.</target>
        </trans-unit>
        <trans-unit id="d6141821c36a082c54ef6dfceab269824cd1f20b" translate="yes" xml:space="preserve">
          <source>This method lets you determine whether or not a string ends with another string. This method is case-sensitive.</source>
          <target state="translated">Этот метод позволяет определить,заканчивается ли строка другой строкой или нет.Этот метод чувствителен к регистру.</target>
        </trans-unit>
        <trans-unit id="f23d94e3a4f55e53eefade5510673cafacf53bdf" translate="yes" xml:space="preserve">
          <source>This method lets you determine whether or not a string includes another string.</source>
          <target state="translated">Этот метод позволяет определить,включает ли строка другую строку или нет.</target>
        </trans-unit>
        <trans-unit id="1894a3eb4db50a4dc5d92a5ef479f8032ffb99c5" translate="yes" xml:space="preserve">
          <source>This method makes the &lt;code&gt;[[prototype]]&lt;/code&gt; of the target immutable; any &lt;code&gt;[[prototype]]&lt;/code&gt; re-assignment will throw a &lt;code&gt;TypeError&lt;/code&gt;. This behavior is specific to the internal &lt;code&gt;[[prototype]]&lt;/code&gt; property, other properties of the target object will remain mutable.</source>
          <target state="translated">Этот метод делает &lt;code&gt;[[prototype]]&lt;/code&gt; цели неизменным; любое повторное присвоение &lt;code&gt;[[prototype]]&lt;/code&gt; вызовет &lt;code&gt;TypeError&lt;/code&gt; . Такое поведение характерно для внутреннего свойства &lt;code&gt;[[prototype]]&lt;/code&gt; , другие свойства целевого объекта останутся изменяемыми.</target>
        </trans-unit>
        <trans-unit id="500393b711fdd6a88b9196ca67eb4cc609689293" translate="yes" xml:space="preserve">
          <source>This method permits examination of the precise description of a property. A</source>
          <target state="translated">Этот метод позволяет исследовать точное описание объекта недвижимости.A</target>
        </trans-unit>
        <trans-unit id="3eacf62a095eeef78b835892cfa8d4ad1b86db35" translate="yes" xml:space="preserve">
          <source>This method permits examination of the precise description of all own properties of an object. A</source>
          <target state="translated">Этот метод позволяет исследовать точное описание всех собственных свойств объекта.A</target>
        </trans-unit>
        <trans-unit id="f628a9e2d86a894b84ba58b4f4db996ed00761dc" translate="yes" xml:space="preserve">
          <source>This method replaces the experimental &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/move&quot;&gt;&lt;code&gt;TypedArray.prototype.move()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот метод заменяет экспериментальный &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray/move&quot;&gt; &lt;code&gt;TypedArray.prototype.move()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b769488df20b7fa0fb182ad7f05d33b3fef47b8b" translate="yes" xml:space="preserve">
          <source>This method returns a string (and &lt;em&gt;not&lt;/em&gt; a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecec38c609050aa60e91994e7d8ba633872bb9d0" translate="yes" xml:space="preserve">
          <source>This method returns a string and not a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Этот метод возвращает строку, а не объект &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0d6240f8eb87d18ef982897ec85c80727169310" translate="yes" xml:space="preserve">
          <source>This method takes advantage of the fact that if there is no break below a &lt;code&gt;case&lt;/code&gt; clause it will continue to execute the next &lt;code&gt;case&lt;/code&gt; clause regardless if the &lt;code&gt;case&lt;/code&gt; meets the criteria. (See the section &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/What_happens_if_I_forgot_a_break&quot;&gt;What happens if I forgot a &lt;code&gt;break&lt;/code&gt;?&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160d98375587cf100c86355045411e205a9aa3c6" translate="yes" xml:space="preserve">
          <source>This method takes advantage of the fact that if there is no break below a case statement it will continue to execute the next case statement regardless if the case meets the criteria. See the section titled &quot;What happens if I forgot a break?&quot;</source>
          <target state="translated">Этот метод использует тот факт,что если нет перерыва ниже оператора,то он продолжит выполнение следующего оператора независимо от того,соответствует ли случай критериям.См.раздел &quot;Что произойдет,если я забуду перерыв?&quot;.</target>
        </trans-unit>
        <trans-unit id="f8e0a731699a0eee17b0a5f9ff70ada64cee899c" translate="yes" xml:space="preserve">
          <source>This method uses the same algorithm as &lt;a href=&quot;../array/reduce&quot;&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/a&gt;, so the same polyfill can be used here: simply replace &lt;code&gt;Array.prototype.reduce&lt;/code&gt; with &lt;code&gt;TypedArray.prototype.reduce&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb272f1e69fbd9d448926c2c4913638d9cc457d" translate="yes" xml:space="preserve">
          <source>This method was standardized in ECMA-262 5&lt;sup&gt;th&lt;/sup&gt; edition. Engines which have not been updated to support this method can work around the absence of this method using the following shim:</source>
          <target state="translated">Этот метод был стандартизирован в 5- &lt;sup&gt;м&lt;/sup&gt; издании ECMA-262 . Механизмы, которые не были обновлены для поддержки этого метода, могут обойти отсутствие этого метода с помощью следующей прокладки:</target>
        </trans-unit>
        <trans-unit id="b91db49b547b2ce36f7047eddefa7ad664ba8706" translate="yes" xml:space="preserve">
          <source>This method was standardized in ECMA-262 5th edition. Engines which have not been updated to support this method can work around the absence of this method using the following shim:</source>
          <target state="translated">Этот метод был стандартизирован в ECMA-262 5-е издание.Двигатели,которые не были обновлены для поддержки этого метода,могут работать вокруг отсутствия этого метода с помощью следующего shim:</target>
        </trans-unit>
        <trans-unit id="f4f646092c3469f7bcbadba53da6650a96ad9c82" translate="yes" xml:space="preserve">
          <source>This method will convert any non-string value to a string, when you set its &lt;code&gt;this&lt;/code&gt; to a value that is not a string:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e15cff51fdda19eea3480a0c3927434a5c139f" translate="yes" xml:space="preserve">
          <source>This method will convert any non-string value to a string, when you set its &lt;code&gt;this&lt;/code&gt; to a value that is not a string: ​​​​</source>
          <target state="translated">Этот метод будет конвертировать любое значение нестрокового в строку, когда вы установите его &lt;code&gt;this&lt;/code&gt; такое значение , которое не является строка:</target>
        </trans-unit>
        <trans-unit id="5a8275b6636a094c259f413cf80b1c146b13f174" translate="yes" xml:space="preserve">
          <source>This nonstandard behavior is now ignored in version 40 and later, and will present a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; (&quot;&lt;a href=&quot;../errors/invalid_for-in_initializer&quot;&gt;for-in loop head declarations may not have initializers&lt;/a&gt;&quot;) error in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=748550&quot;&gt;bug 748550&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1164741&quot;&gt;bug 1164741&lt;/a&gt;).</source>
          <target state="translated">Это нестандартное поведение теперь игнорируется в версии 40 и более поздних, и в &lt;a href=&quot;../strict_mode&quot;&gt;строгом режиме будет &lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=748550&quot;&gt;возникать &lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1164741&quot;&gt;ошибка SyntaxError&lt;/a&gt; (&amp;laquo; объявления &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../errors/invalid_for-in_initializer&quot;&gt; for-in могут не иметь инициализаторов&lt;/a&gt; &amp;raquo;) ( ошибка 748550 и ошибка 1164741 ).</target>
        </trans-unit>
        <trans-unit id="bb93a48f120d06b9e746fa2ffa4fd9989decd1d7" translate="yes" xml:space="preserve">
          <source>This notation is rather wasteful and JavaScript 1.6 introduced a generic shorthand:</source>
          <target state="translated">Эта нотация довольно расточительна,и в JavaScript 1.6 введено общее сокращение:</target>
        </trans-unit>
        <trans-unit id="af24edab927c2ed4ec4c6f5f292138da26677829" translate="yes" xml:space="preserve">
          <source>This object cannot be instantiated directly. Instead, a &lt;code&gt;Generator&lt;/code&gt; instance can be returned from a &lt;a href=&quot;../statements/function*&quot;&gt;generator function&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4afda9ac25610715df5495b7cfe5137d0c5e5b32" translate="yes" xml:space="preserve">
          <source>This object cannot be instantiated directly. Instead, you create an instance of an array of a particular type, such as a &lt;a href=&quot;int8array&quot;&gt;&lt;code&gt;Int8Array&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;bigint64array&quot;&gt;&lt;code&gt;BigInt64Array&lt;/code&gt;&lt;/a&gt;. These objects all have a common syntax for their constructors:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7839fe8fd2c6eb56255867dc586a7fb858261f6" translate="yes" xml:space="preserve">
          <source>This operator allows evaluating expressions that produce a value into places where an expression that evaluates to &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is desired.</source>
          <target state="translated">Этот оператор позволяет вычислять выражения, которые производят значение, в тех местах, где требуется выражение, которое оценивается как &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7fd3a6ffaef17da0022d470be037d9568832d020" translate="yes" xml:space="preserve">
          <source>This operator shifts the first operand the specified number of bits to the left. Excess bits shifted off to the left are discarded. Zero bits are shifted in from the right.</source>
          <target state="translated">Оператор сдвигает первый операнд на указанное количество бит влево.Излишки битов,сдвинутые влево,отбрасываются.Нулевые биты смещаются вправо.</target>
        </trans-unit>
        <trans-unit id="1de4e33f05c9641a53e16b11a59c33498bdab388" translate="yes" xml:space="preserve">
          <source>This operator shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Copies of the leftmost bit are shifted in from the left. Since the new leftmost bit has the same value as the previous leftmost bit, the sign bit (the leftmost bit) does not change. Hence the name &quot;sign-propagating&quot;.</source>
          <target state="translated">Этот оператор сдвигает первый операнд на указанное количество битов вправо.Излишки битов,сдвинутые вправо,отбрасываются.Копии крайнего левого бита смещаются слева.Так как новый крайний левый бит имеет то же значение,что и предыдущий крайний левый бит,то знаковый бит (крайний левый бит)не изменяется.Отсюда и название &quot;знаковая разметка&quot;.</target>
        </trans-unit>
        <trans-unit id="32e932f7047a9122ced44d45cc753479d51a81a0" translate="yes" xml:space="preserve">
          <source>This operator shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Zero bits are shifted in from the left. The sign bit becomes 0, so the result is always non-negative.</source>
          <target state="translated">Этот оператор сдвигает первый операнд на указанное количество битов вправо.Излишки битов,сдвинутые вправо,отбрасываются.Нулевые биты смещаются слева.Знаковый бит становится 0,поэтому результат всегда неотрицательный.</target>
        </trans-unit>
        <trans-unit id="0e111cd40eced5b108c9050cbe82b03b064b622a" translate="yes" xml:space="preserve">
          <source>This outputs &quot;value&quot;, since 1 is type-casted into '1'.</source>
          <target state="translated">Это выводит &quot;значение&quot;,так как единица измерения по умолчанию отнесена к единице измерения.</target>
        </trans-unit>
        <trans-unit id="20bac07695b8ca5f84f1f7fd0c290eff44fd1484" translate="yes" xml:space="preserve">
          <source>This page describes JavaScript's lexical grammar. The source text of ECMAScript scripts gets scanned from left to right and is converted into a sequence of input elements which are tokens, control characters, line terminators, comments or &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/whitespace&quot;&gt;white space&lt;/a&gt;. ECMAScript also defines certain keywords and literals and has rules for automatic insertion of semicolons to end statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d92d11e05c85e95d6683f157729dc8ad9e7ed6" translate="yes" xml:space="preserve">
          <source>This page describes JavaScript's lexical grammar. The source text of ECMAScript scripts gets scanned from left to right and is converted into a sequence of input elements which are tokens, control characters, line terminators, comments or white space. ECMAScript also defines certain keywords and literals and has rules for automatic insertion of semicolons to end statements.</source>
          <target state="translated">На этой странице описана лексическая грамматика JavaScript.Исходный текст ECMAScript-скриптов сканируется слева направо и преобразуется в последовательность входных элементов,которыми являются маркеры,управляющие символы,терминаторы строк,комментарии или пробелы.ECMAScript также определяет определенные ключевые слова и литералы и имеет правила автоматической вставки точки с запятой в концевые операторы.</target>
        </trans-unit>
        <trans-unit id="93feabb1077a32bf47dd12b7732c3541d81b02c2" translate="yes" xml:space="preserve">
          <source>This page documents the use of the &lt;code&gt;Error&lt;/code&gt; object itself and its use as a constructor function. For a list of properties and methods inherited by &lt;code&gt;Error&lt;/code&gt; instances, see &lt;a href=&quot;error/prototype&quot;&gt;&lt;code&gt;Error.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Эта страница документирует использование самого объекта &lt;code&gt;Error&lt;/code&gt; и его использование в качестве функции-конструктора. Список свойств и методов, унаследованных экземплярами &lt;code&gt;Error&lt;/code&gt; , см . В разделе &lt;a href=&quot;error/prototype&quot;&gt; &lt;code&gt;Error.prototype&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2915a39190c4a1dd93fc41a4654be2f795649d92" translate="yes" xml:space="preserve">
          <source>This part of the JavaScript section on MDN serves as a repository of facts about the JavaScript language. Read more &lt;a href=&quot;about&quot;&gt;about this reference&lt;/a&gt;.</source>
          <target state="translated">Эта часть раздела JavaScript в MDN служит хранилищем фактов о языке JavaScript. Подробнее &lt;a href=&quot;about&quot;&gt;об этой ссылке&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="979cd4db3e64e3b95348dd7cbdc13acf17ee3c52" translate="yes" xml:space="preserve">
          <source>This pattern is what &lt;code&gt;&lt;a href=&quot;async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt; functions are built on top of.</source>
          <target state="translated">На этом шаблоне построены &lt;code&gt;&lt;a href=&quot;async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt; функции.</target>
        </trans-unit>
        <trans-unit id="24899ef6e799fafad90014f7131779dab0d21866" translate="yes" xml:space="preserve">
          <source>This phenomenon may confuse you in a situation like the following. The instruction &lt;code&gt;let n of n.a&lt;/code&gt; is already inside the private scope of the &lt;u&gt;for loop's block&lt;/u&gt;, hence the identifier&lt;strong&gt; &quot;n.a&quot;&lt;/strong&gt; is resolved to the property 'a' of the &lt;u&gt;'n' object located in the first part of the instruction itself&lt;/u&gt; (&quot;let n&quot;), which is still in the temporal dead zone since its declaration statement has not been reached and &lt;strong&gt;terminated&lt;/strong&gt;.</source>
          <target state="translated">Это явление может сбить вас с толку в следующей ситуации. Инструкция &lt;code&gt;let n of n.a&lt;/code&gt; уже находится внутри частной области видимости блока цикла &lt;u&gt;for&lt;/u&gt; , поэтому идентификатор &lt;strong&gt;&amp;laquo;na&amp;raquo;&lt;/strong&gt; разрешается в свойство &amp;laquo;a&amp;raquo; объекта &lt;u&gt;&amp;laquo;n&amp;raquo;, расположенного в первой части самой инструкции&lt;/u&gt; (&amp;laquo;let n &quot;), который все еще находится во временной мертвой зоне, поскольку его оператор объявления не достигнут и не &lt;strong&gt;завершен&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="937f40e5237ef7b0264a21cd7f210b57dc6843bc" translate="yes" xml:space="preserve">
          <source>This phenomenon may confuse you in a situation like the following. The instruction &lt;code&gt;let n of n.a&lt;/code&gt; is already inside the private scope of the for loop's block. So, the identifier &lt;code&gt;n.a&lt;/code&gt; is resolved to the property '&lt;code&gt;a&lt;/code&gt;' of the '&lt;code&gt;n&lt;/code&gt;' object located in the first part of the instruction itself (&lt;code&gt;let n&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c84e7611673a5e2c6ffc14c37964b05fe32994" translate="yes" xml:space="preserve">
          <source>This polyfill covers the main use case, which is creating a new object for which the prototype has been chosen but doesn't take the second argument into account.</source>
          <target state="translated">Этот полифиль покрывает основной сценарий использования,при котором создается новый объект,для которого был выбран прототип,но не учитывается второй аргумент.</target>
        </trans-unit>
        <trans-unit id="fe30a72a0c38324d405058ca91860820ecbc46cd" translate="yes" xml:space="preserve">
          <source>This prevents authors from creating an explicit &lt;code&gt;Symbol&lt;/code&gt; wrapper object instead of a new symbol value and might be surprising as creating explicit wrapper objects around primitive data types is generally possible (for example, &lt;code&gt;new Boolean&lt;/code&gt;, &lt;code&gt;new String&lt;/code&gt; and &lt;code&gt;new Number&lt;/code&gt;).</source>
          <target state="translated">Это не позволяет авторам создавать явный объект-оболочку &lt;code&gt;Symbol&lt;/code&gt; вместо нового значения символа и может вызывать удивление, поскольку создание явных объектов-оболочки вокруг примитивных типов данных обычно возможно (например, &lt;code&gt;new Boolean&lt;/code&gt; , &lt;code&gt;new String&lt;/code&gt; и &lt;code&gt;new Number&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dd869962a817927e401d4f9a67bc9dcc9a5752d8" translate="yes" xml:space="preserve">
          <source>This problem appears frequently when combined with a filter (&lt;a href=&quot;../global_objects/array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/typedarray/filter&quot;&gt;&lt;code&gt;TypedArray.prototype.filter()&lt;/code&gt;&lt;/a&gt;) which will remove all elements of the list. Thus leaving none to be used as the initial value.</source>
          <target state="translated">Эта проблема часто возникает в сочетании с фильтром ( &lt;a href=&quot;../global_objects/array/filter&quot;&gt; &lt;code&gt;Array.prototype.filter()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/typedarray/filter&quot;&gt; &lt;code&gt;TypedArray.prototype.filter()&lt;/code&gt; &lt;/a&gt; ), который удаляет все элементы списка. Таким образом, ничего не остается для использования в качестве начального значения.</target>
        </trans-unit>
        <trans-unit id="d8412d6f266972faab17f3f66c154c1239965cfe" translate="yes" xml:space="preserve">
          <source>This prohibition isn't strict mode proper because such function statements are an extension of basic ES5. But it is the recommendation of the ECMAScript committee, and browsers will implement it.</source>
          <target state="translated">Этот запрет не является собственно строгим режимом,поскольку такие функциональные утверждения являются расширением базовой ES5.Но это рекомендация комитета ECMAScript,и браузеры будут ее реализовывать.</target>
        </trans-unit>
        <trans-unit id="202a2db44d59ddd4acaa1f18d4ffa7ecf2a16ab5" translate="yes" xml:space="preserve">
          <source>This property contains a brief description of the error if one is available or has been set. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; makes extensive use of the &lt;code&gt;message&lt;/code&gt; property for exceptions. The &lt;code&gt;message&lt;/code&gt; property combined with the &lt;a href=&quot;name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; property is used by the &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Error.prototype.toString()&lt;/code&gt;&lt;/a&gt; method to create a string representation of the Error.</source>
          <target state="translated">Это свойство содержит краткое описание ошибки, если она имеется или была установлена. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; широко использует свойство &lt;code&gt;message&lt;/code&gt; для исключений. Свойство &lt;code&gt;message&lt;/code&gt; сочетании со свойством &lt;a href=&quot;name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; используется методом &lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;Error.prototype.toString()&lt;/code&gt; &lt;/a&gt; для создания строкового представления ошибки.</target>
        </trans-unit>
        <trans-unit id="e32b98d6bdcb68b6b9679955c7a1cc5624bf529f" translate="yes" xml:space="preserve">
          <source>This property contains a brief description of the error if one is available or has been set. &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey&quot;&gt;SpiderMonkey&lt;/a&gt; makes extensive use of the &lt;code&gt;message&lt;/code&gt; property for exceptions. The &lt;code&gt;message&lt;/code&gt; property combined with the &lt;a href=&quot;name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; property is used by the &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Error.prototype.toString()&lt;/code&gt;&lt;/a&gt; method to create a string representation of the Error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7eb285194c539b0f44fb0a7e4f806262c8482b2" translate="yes" xml:space="preserve">
          <source>This property is deprecated, and is only functional for some non-strict functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5998fce63dfca9c1fb87201411dd0ad827571fa" translate="yes" xml:space="preserve">
          <source>This property is not available anymore, but you can still use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt;&lt;code&gt;Function.caller&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Это свойство больше недоступно, но вы все равно можете использовать &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt; &lt;code&gt;Function.caller&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0cf7ef2c65386430033403f11c63d24f9affc6de" translate="yes" xml:space="preserve">
          <source>This property is set only if the regular expression instance used the &lt;code&gt;&quot;g&quot;&lt;/code&gt; flag to indicate a global search, or the &lt;code&gt;&quot;y&quot;&lt;/code&gt; flag to indicate a sticky search. The following rules apply:</source>
          <target state="translated">Это свойство устанавливается только в том случае, если экземпляр регулярного выражения использовал флаг &lt;code&gt;&quot;g&quot;&lt;/code&gt; для обозначения глобального поиска или флаг &lt;code&gt;&quot;y&quot;&lt;/code&gt; для обозначения закрепленного поиска. Применяются следующие правила:</target>
        </trans-unit>
        <trans-unit id="aab683ca27f26abb7ad2b645f8a4f2493ee2e20a" translate="yes" xml:space="preserve">
          <source>This property is set only if the regular expression instance used the &lt;code&gt;g&lt;/code&gt; flag to indicate a global search, or the &lt;code&gt;y&lt;/code&gt; flag to indicate a sticky search. The following rules apply:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2320fa0c41f8739c3c394cbe2f1188606b3e3f28" translate="yes" xml:space="preserve">
          <source>This property returns the number of code units in the string. &lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16&quot;&gt;UTF-16&lt;/a&gt;, the string format used by JavaScript, uses a single 16-bit code unit to represent the most common characters, but needs to use two code units for less commonly-used characters, so it's possible for the value returned by &lt;code&gt;length&lt;/code&gt; to not match the actual number of characters in the string.</source>
          <target state="translated">Это свойство возвращает количество единиц кода в строке. &lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16&quot;&gt;UTF-16&lt;/a&gt; , строковый формат, используемый JavaScript, использует одну 16-битную кодовую единицу для представления наиболее распространенных символов, но требует использования двух кодовых единиц для менее часто используемых символов, поэтому значение, возвращаемое по &lt;code&gt;length&lt;/code&gt; может быть равным не соответствует фактическому количеству символов в строке.</target>
        </trans-unit>
        <trans-unit id="51f7df5a59f1072af28236cee6828da432beb411" translate="yes" xml:space="preserve">
          <source>This provides developers with a way to include custom data inside wasm modules for other purposes, for example the &lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md#name-section&quot;&gt;name custom section&lt;/a&gt;, which allows developers to provide names for all the functions and locals in the module (like &quot;symbols&quot; in a native build).</source>
          <target state="translated">Это дает разработчикам возможность включать пользовательские данные в модули wasm для других целей, например, &lt;a href=&quot;https://github.com/WebAssembly/design/blob/master/BinaryEncoding.md#name-section&quot;&gt;настраиваемый раздел имени&lt;/a&gt; , который позволяет разработчикам указывать имена для всех функций и локальных переменных в модуле (например, &amp;laquo;символы&amp;raquo; в собственной сборке).</target>
        </trans-unit>
        <trans-unit id="4111ee54927f5e20a9a2557a5ce105b1380bc928" translate="yes" xml:space="preserve">
          <source>This proxy extends an array with some utility features. As you see, you can flexibly &quot;define&quot; properties without using &lt;a href=&quot;object/defineproperties&quot;&gt;&lt;code&gt;Object.defineProperties&lt;/code&gt;&lt;/a&gt;. This example can be adapted to find a table row by its cell. In that case, the target will be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/table.rows&quot;&gt;&lt;code&gt;table.rows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот прокси-сервер расширяет массив некоторыми служебными функциями. Как видите, вы можете гибко &amp;laquo;определять&amp;raquo; свойства без использования &lt;a href=&quot;object/defineproperties&quot;&gt; &lt;code&gt;Object.defineProperties&lt;/code&gt; &lt;/a&gt; . Этот пример можно адаптировать для поиска строки таблицы по ее ячейке. В этом случае целью будет &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/table.rows&quot;&gt; &lt;code&gt;table.rows&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="82d934c9f1a0b8ea09917dc15c4260459f515c79" translate="yes" xml:space="preserve">
          <source>This proxy extends an array with some utility features. As you see, you can flexibly &quot;define&quot; properties without using &lt;a href=&quot;object/defineproperties&quot;&gt;&lt;code&gt;Object.defineProperties&lt;/code&gt;&lt;/a&gt;. This example can be adapted to find a table row by its cell. In that case, the target will be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableElement/rows&quot;&gt;&lt;code&gt;table.rows&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d23dbd17d04a53d683524917699a6da5b9ca70" translate="yes" xml:space="preserve">
          <source>This recursive function is missing a base case. As there is no exit condition, the function will call itself infinitely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcaea2351fa8298ed886d1f656da74f45e12f03" translate="yes" xml:space="preserve">
          <source>This recursive function runs 10 times, as per the exit condition.</source>
          <target state="translated">Эта рекурсивная функция работает 10 раз в соответствии с условием выхода.</target>
        </trans-unit>
        <trans-unit id="6d7fe022c1b8d346cdb3559df2027563a8d076f9" translate="yes" xml:space="preserve">
          <source>This returns 2 because in floating points, the value is actually the decimal trailing &quot;1&quot; except for in subnormal precision cases such as zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffba478216f1d53d5fd2660d7146f1f6f21e730" translate="yes" xml:space="preserve">
          <source>This script displays the following text:</source>
          <target state="translated">Этот скрипт отображает следующий текст:</target>
        </trans-unit>
        <trans-unit id="fc5e8aa3503a78d527035852a3bb3a3c978f762a" translate="yes" xml:space="preserve">
          <source>This script displays the following:</source>
          <target state="translated">Этот скрипт отображает следующее:</target>
        </trans-unit>
        <trans-unit id="dd82a7a8c7d4b2a36b690c950052c93a110723dd" translate="yes" xml:space="preserve">
          <source>This script writes:</source>
          <target state="translated">Этот сценарий пишет:</target>
        </trans-unit>
        <trans-unit id="3a8a92244d2d79390941df48f29fed6be1f59072" translate="yes" xml:space="preserve">
          <source>This section contains implementation-specific behavior that can be inconsistent across implementations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ef13a1e73329e726feb2ef079106cad9f434f9" translate="yes" xml:space="preserve">
          <source>This should work:</source>
          <target state="translated">Это должно сработать:</target>
        </trans-unit>
        <trans-unit id="57425f37455982cba70a01c510cce95685b95c23" translate="yes" xml:space="preserve">
          <source>This small example shows the mechanism of a &lt;code&gt;Promise&lt;/code&gt;. The &lt;code&gt;testPromise()&lt;/code&gt; method is called each time the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; is clicked. It creates a promise that will be fulfilled, using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout&quot;&gt;&lt;code&gt;window.setTimeout()&lt;/code&gt;&lt;/a&gt;, to the promise count (number starting from 1) every 1-3 seconds, at random. The &lt;code&gt;Promise()&lt;/code&gt; constructor is used to create the promise.</source>
          <target state="translated">Этот небольшой пример показывает механизм &lt;code&gt;Promise&lt;/code&gt; . Метод &lt;code&gt;testPromise()&lt;/code&gt; вызывается каждый раз при &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt; . Он создает обещание, которое будет выполнено с использованием &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/setTimeout&quot;&gt; &lt;code&gt;window.setTimeout()&lt;/code&gt; &lt;/a&gt; для счетчика обещаний (число, начинающееся с 1) каждые 1-3 секунды в случайном порядке. Конструктор &lt;code&gt;Promise()&lt;/code&gt; используется для создания обещания.</target>
        </trans-unit>
        <trans-unit id="972d14a331e7e6b9052bc3420e7e6e7f39917288" translate="yes" xml:space="preserve">
          <source>This snippet generates an array of 3 objects in the desired format without using a &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">Этот фрагмент кода генерирует массив из 3 объектов в желаемом формате без использования цикла &lt;code&gt;for&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53341a59cc29d0476aae7b7ae1e4c3d989b12ca1" translate="yes" xml:space="preserve">
          <source>This statement creates &lt;code&gt;myCar&lt;/code&gt; and assigns it the specified values for its properties. Then the value of &lt;code&gt;myCar.make&lt;/code&gt; is the string &quot;Eagle&quot;, &lt;code&gt;myCar.year&lt;/code&gt; is the integer 1993, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75afc102c7b3254dfeceb06e6c8c171d8bc37a92" translate="yes" xml:space="preserve">
          <source>This statement creates &lt;code&gt;mycar&lt;/code&gt; and assigns it the specified values for its properties. Then the value of &lt;code&gt;mycar.make&lt;/code&gt; is the string &quot;Eagle&quot;, &lt;code&gt;mycar.year&lt;/code&gt; is the integer 1993, and so on.</source>
          <target state="translated">Этот оператор создает &lt;code&gt;mycar&lt;/code&gt; и присваивает ему указанные значения его свойств. Тогда значением &lt;code&gt;mycar.make&lt;/code&gt; будет строка &amp;laquo;Eagle&amp;raquo;, &lt;code&gt;mycar.year&lt;/code&gt; - целое число 1993 и так далее.</target>
        </trans-unit>
        <trans-unit id="d4fdd4777e071bdcffbfcfe8ccadf9de6f044a61" translate="yes" xml:space="preserve">
          <source>This syntax has a trap that has &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=579119&quot;&gt;already bitten&lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=627531&quot;&gt;a major site&lt;/a&gt;: it isn't possible to blindly concatenate conflicting scripts. Consider concatenating a strict mode script with a non-strict mode script: the entire concatenation looks strict! The inverse is also true: non-strict plus strict looks non-strict. Obviously, concatenation of scripts is never ideal, but if you must, consider enabling strict on a function-by-function basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94b85c795c1bd21e753a02bbb64f696799e5dcf5" translate="yes" xml:space="preserve">
          <source>This syntax has a trap that has &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=579119&quot;&gt;already bitten&lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=627531&quot;&gt;a major site&lt;/a&gt;: it isn't possible to blindly concatenate conflicting scripts. Consider concatenating a strict mode script with a non-strict mode script: the entire concatenation looks strict! The inverse is also true: non-strict plus strict looks non-strict. Obviously, concatentation of scripts is never ideal, but if you must, consider enabling strict on a function-by-function basis.</source>
          <target state="translated">В этом синтаксисе есть ловушка, которая &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=579119&quot;&gt;уже поразила &lt;/a&gt;&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=627531&quot;&gt;крупный сайт&lt;/a&gt; : невозможно слепо объединить конфликтующие сценарии. Рассмотрите возможность объединения сценария строгого режима со сценарием нестрогого режима: все сцепление выглядит строгим! Верно и обратное: нестрогий плюс строгий выглядит нестрогим. Очевидно, что объединение скриптов никогда не бывает идеальным, но, если необходимо, подумайте о включении строгого режима для каждой функции.</target>
        </trans-unit>
        <trans-unit id="d79411a38550f1777768ec88eb728359a1fabc0b" translate="yes" xml:space="preserve">
          <source>This tests for a global &lt;code&gt;Intl&lt;/code&gt; object, checks that it's not &lt;code&gt;null&lt;/code&gt; and that it has a &lt;code&gt;NumberFormat&lt;/code&gt; property that is a function.</source>
          <target state="translated">Это проверяет наличие глобального объекта &lt;code&gt;Intl&lt;/code&gt; , проверяет, не является ли он &lt;code&gt;null&lt;/code&gt; и имеет &lt;code&gt;NumberFormat&lt;/code&gt; свойство NumberFormat, которое является функцией.</target>
        </trans-unit>
        <trans-unit id="0c7b2dfd21538cefc6243b00c498ce94e98de0bc" translate="yes" xml:space="preserve">
          <source>This trap can intercept these operations:</source>
          <target state="translated">Эта ловушка может перехватить эти операции:</target>
        </trans-unit>
        <trans-unit id="44780b8b6d104dea26bfef46597862478326e5ef" translate="yes" xml:space="preserve">
          <source>This unpacks the &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;displayName&lt;/code&gt; and &lt;code&gt;firstName&lt;/code&gt; from the user object and prints them.</source>
          <target state="translated">Это распаковывает &lt;code&gt;id&lt;/code&gt; , &lt;code&gt;displayName&lt;/code&gt; и &lt;code&gt;firstName&lt;/code&gt; из пользовательского объекта и печатает их.</target>
        </trans-unit>
        <trans-unit id="2e72e3a3418ec2d204fbf9885686c8cee5ab7178" translate="yes" xml:space="preserve">
          <source>This used to change a value on the global object which is rarely the expected effect. If you really want to set a value to the global object, pass it as an argument and explicitly assign it as a property:</source>
          <target state="translated">Это используется для изменения значения глобального объекта,которое редко является ожидаемым эффектом.Если вы действительно хотите задать значение глобальному объекту,передайте его в качестве аргумента и явно назначьте как свойство:</target>
        </trans-unit>
        <trans-unit id="321fdbbee133de6d338ef5ef7c8b1150d19ef59b" translate="yes" xml:space="preserve">
          <source>This uses the &lt;a href=&quot;../array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter()&lt;/code&gt;&lt;/a&gt; function to remove the enumerable keys (obtained with &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt;) from a list of all keys (obtained with &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;) leaving only the non-enumerable keys.</source>
          <target state="translated">При этом используется &lt;a href=&quot;../array/filter&quot;&gt; &lt;code&gt;Array.prototype.filter()&lt;/code&gt; &lt;/a&gt; для удаления перечислимых ключей (полученных с помощью &lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Object.keys()&lt;/code&gt; &lt;/a&gt; ) из списка всех ключей (полученных с помощью &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; ), оставляя только неперечислимые ключи.</target>
        </trans-unit>
        <trans-unit id="71fc3bcdf532ca114046a8f9b6f3e72e4c6060de" translate="yes" xml:space="preserve">
          <source>This uses the &lt;a href=&quot;../array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter()&lt;/code&gt;&lt;/a&gt; function to remove the enumerable keys (obtained with &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt;) from a list of all keys (obtained with &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;) thus giving only the non-enumerable keys as output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c02e9c7a3c452cf4739f32629f3bba5108e1474" translate="yes" xml:space="preserve">
          <source>This value behaves slightly differently than mathematical infinity:</source>
          <target state="translated">Это значение ведет себя несколько иначе,чем математическая бесконечность:</target>
        </trans-unit>
        <trans-unit id="00be7e991d66825c1ced6628eaf258a6382e117a" translate="yes" xml:space="preserve">
          <source>This value behaves slightly differently than mathematical infinity; see &lt;a href=&quot;number/positive_infinity&quot;&gt;&lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fffb9a86edf50e0f87a0b2a9c08748436821f09" translate="yes" xml:space="preserve">
          <source>This value indicates:</source>
          <target state="translated">Это значение указывает:</target>
        </trans-unit>
        <trans-unit id="48034df0e320e5ef796a29033dc21b65f9f3b5a7" translate="yes" xml:space="preserve">
          <source>This version might be used in for loops and the like when it is unknown whether non-BMP characters exist before the specified index position.</source>
          <target state="translated">Эта версия может быть использована для циклов и тому подобного,когда неизвестно,существуют ли не-BMP символы до указанной позиции индекса.</target>
        </trans-unit>
        <trans-unit id="b0a97fea9fad05d93f86710b42ddab43931ceeba" translate="yes" xml:space="preserve">
          <source>This way, in another script, we could have:</source>
          <target state="translated">Таким образом,в другом сценарии,мы могли бы:</target>
        </trans-unit>
        <trans-unit id="fe9a5081a4c414346879b2f958aec2a00dc20419" translate="yes" xml:space="preserve">
          <source>This will always be &lt;code&gt;false&lt;/code&gt;. (&lt;code&gt;!mycar&lt;/code&gt; will be evaluated before &lt;code&gt;instanceof&lt;/code&gt;, so you always try to know if a boolean is an instance of &lt;code&gt;Car&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb0e28917792ec578dc71cec340d6470748b6262" translate="yes" xml:space="preserve">
          <source>This will create a pseudo-property &lt;code&gt;latest&lt;/code&gt; for object &lt;code&gt;obj&lt;/code&gt;, which will return the last array item in &lt;code&gt;log&lt;/code&gt;.</source>
          <target state="translated">Это создаст псевдо-свойство &lt;code&gt;latest&lt;/code&gt; для объекта &lt;code&gt;obj&lt;/code&gt; , которое вернет последний элемент массива в &lt;code&gt;log&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="37a760abd8402149b9ad72f21d3ac28804ce7d37" translate="yes" xml:space="preserve">
          <source>This will define a pseudo-property &lt;code&gt;current&lt;/code&gt; of object language that, when assigned a value, will update &lt;code&gt;log&lt;/code&gt; with that value:</source>
          <target state="translated">Это определит &lt;code&gt;current&lt;/code&gt; псевдо-свойство объектного языка, которое при присвоении значения будет обновлять &lt;code&gt;log&lt;/code&gt; с этим значением:</target>
        </trans-unit>
        <trans-unit id="3cefb4be8f41f052ae7fd64b565e044e7ac52ef9" translate="yes" xml:space="preserve">
          <source>This will log a message containing 'hello world!'.</source>
          <target state="translated">Это запишет в журнал сообщение,содержащее &quot;Привет,мир!&quot;.</target>
        </trans-unit>
        <trans-unit id="23e59f9e3a66f884c91f809acf557e7ebb34688a" translate="yes" xml:space="preserve">
          <source>This will log a message containing &lt;code&gt;'hello world!'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cee2a4ecc0015ec63b3c281e6605427d41fcd66" translate="yes" xml:space="preserve">
          <source>This will make the currency bold, when using the &lt;code&gt;formatToParts()&lt;/code&gt; method.</source>
          <target state="translated">Это сделает валюту жирным шрифтом при использовании &lt;code&gt;formatToParts()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8028172fe00091f1c1cf3fccd5b1a1ed5fc5633e" translate="yes" xml:space="preserve">
          <source>This will make the day period bold, when using the &lt;code&gt;formatToParts()&lt;/code&gt; method.</source>
          <target state="translated">При использовании &lt;code&gt;formatToParts()&lt;/code&gt; период дня будет выделен жирным шрифтом .</target>
        </trans-unit>
        <trans-unit id="100ed6381b382eab7586beb70a7b65e5f7d35b63" translate="yes" xml:space="preserve">
          <source>This works with &lt;a href=&quot;#Dynamic_Imports&quot;&gt;dynamic imports&lt;/a&gt; as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636db55917614035fe1b036f236d448914b79ae3" translate="yes" xml:space="preserve">
          <source>This would be correct:</source>
          <target state="translated">Это было бы правильно:</target>
        </trans-unit>
        <trans-unit id="188c51ce091fb6e829236976f947e1e4bce2a47f" translate="yes" xml:space="preserve">
          <source>This would work, for example:</source>
          <target state="translated">Это сработает,например:</target>
        </trans-unit>
        <trans-unit id="9410a411b7f52a1be65e72497f953473df6e2875" translate="yes" xml:space="preserve">
          <source>This, however, returns &lt;a href=&quot;../global_objects/nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; in Firefox:</source>
          <target state="translated">Это, однако, возвращает &lt;a href=&quot;../global_objects/nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; в Firefox:</target>
        </trans-unit>
        <trans-unit id="09a7b6c28e17a2a60b04a76384d6bb9623973bd2" translate="yes" xml:space="preserve">
          <source>Three things to note about declared and undeclared variables:</source>
          <target state="translated">Три вещи,на которые следует обратить внимание в связи с объявленными и необъявленными переменными:</target>
        </trans-unit>
        <trans-unit id="a870888fa60e764069405b004c2fe3eab15ca774" translate="yes" xml:space="preserve">
          <source>Throw an object</source>
          <target state="translated">Бросить предмет</target>
        </trans-unit>
        <trans-unit id="24ec8833996f8992a0b4c3785e514bcae986e6ab" translate="yes" xml:space="preserve">
          <source>Throwing a custom error</source>
          <target state="translated">Бросок пользовательской ошибки</target>
        </trans-unit>
        <trans-unit id="6ba4891001405ff1a4ec6b1cfe33bd10ec6a01cc" translate="yes" xml:space="preserve">
          <source>Throwing a generic error</source>
          <target state="translated">Бросая общую ошибку</target>
        </trans-unit>
        <trans-unit id="c389a8efc2390a1aa64a95dbca196af84249da0f" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;byteOffset&lt;/code&gt; is set such as it would read beyond the end of the view.</source>
          <target state="translated">&lt;code&gt;byteOffset&lt;/code&gt; если установлено значение byteOffset , так как оно читается за пределами конца представления.</target>
        </trans-unit>
        <trans-unit id="0922a946a5169cd26976b7ef72965c11c56aef37" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;byteOffset&lt;/code&gt; is set such as it would store beyond the end of the view.</source>
          <target state="translated">&lt;code&gt;byteOffset&lt;/code&gt; если установлено значение byteOffset , которое хранится за пределами представления.</target>
        </trans-unit>
        <trans-unit id="3e91d77e2cbdd56a77448393bc4f5e96543cdd4a" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;byteOffset&lt;/code&gt; or &lt;code&gt;byteLength&lt;/code&gt; parameter values result in the view extending past the end of the buffer.</source>
          <target state="translated">Метательный если &lt;code&gt;byteOffset&lt;/code&gt; или &lt;code&gt;byteLength&lt;/code&gt; значение параметров приводит к мнению , проходящему мимо конца буфера.</target>
        </trans-unit>
        <trans-unit id="bb3234934bcd796fdf4ef1e5d3add12530cfe9e2" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;offset&lt;/code&gt; is set such as it would store beyond the end of the typed array.</source>
          <target state="translated">Выбрасывается, если &lt;code&gt;offset&lt;/code&gt; установлено так, как если бы оно сохранялось за пределами типизированного массива.</target>
        </trans-unit>
        <trans-unit id="b8da8f7f44eb2e8aad25d07636127923f72337fc" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;Global_objects/SyntaxError&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt; if the property is an own non-configurable property.</source>
          <target state="translated">Выдает &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;Global_objects/SyntaxError&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;../strict_mode&quot;&gt;строгом режиме&lt;/a&gt; , если свойство является собственным неперестраиваемым свойством.</target>
        </trans-unit>
        <trans-unit id="d767214910c80de840f71784865caecc6fb0b66e" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;../strict_mode&quot;&gt;&lt;code&gt;strict mode&lt;/code&gt;&lt;/a&gt; if the property is an own non-configurable property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d976806ffa3ac78e1eec4fa41bb8e665570edeb7" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;&lt;var&gt;index&lt;/var&gt;&lt;/code&gt; is out of bounds in the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d5a15ba4e2883562ccc781325a904f1c1ed200" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;index&lt;/code&gt; is out of bounds in the &lt;code&gt;typedArray&lt;/code&gt;.</source>
          <target state="translated">Бросает &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; , если &lt;code&gt;index&lt;/code&gt; выходит за пределы границ в &lt;code&gt;typedArray&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6a99a2a7ba0910c50ad732908be04470cf0773c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; exception if the string to parse is not valid JSON.</source>
          <target state="translated">Выдает исключение &lt;a href=&quot;../syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; ,&lt;/a&gt; если строка для синтаксического анализа недействительна JSON.</target>
        </trans-unit>
        <trans-unit id="a4ac5c3d480d82b0a12a86f5a24ea2f76f4f7901" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&quot;BigInt value can't be serialized in JSON&quot;) when trying to stringify a &lt;a href=&quot;../bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b742f071cb53d20fd249f8f0e5f93c441ae76fb" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&quot;cyclic object value&quot;) exception when a circular reference is found.</source>
          <target state="translated">Бросок &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; ( &amp;laquo;циклическое значение объекта&amp;raquo;) исключение , когда циклическая ссылка встречается.</target>
        </trans-unit>
        <trans-unit id="c5dfdfcd952515fb76b078b574cbd5677fc65b9f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception if the object whose &lt;code&gt;[[Prototype]]&lt;/code&gt; is to be modified is non-extensible according to &lt;a href=&quot;isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;. Does nothing if the &lt;code&gt;prototype&lt;/code&gt; parameter isn't an object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; (i.e., number, string, boolean, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;). Otherwise, this method changes the &lt;code&gt;[[Prototype]]&lt;/code&gt; of &lt;code&gt;obj&lt;/code&gt; to the new value.</source>
          <target state="translated">Выдает исключение &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; ,&lt;/a&gt; если объект, &lt;code&gt;[[Prototype]]&lt;/code&gt; которого должен быть изменен, не является расширяемым согласно &lt;a href=&quot;isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; . Ничего не делает, если параметр &lt;code&gt;prototype&lt;/code&gt; не является объектом или &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; (т. Е. Числом, строкой, логическим значением или &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; ). В противном случае этот метод изменяет &lt;code&gt;[[Prototype]]&lt;/code&gt; объекта &lt;code&gt;obj&lt;/code&gt; на новое значение.</target>
        </trans-unit>
        <trans-unit id="3333628f0ecce9f8df87cce1b8b5ea238120f628" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; is not a shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d661497f452e06f5e196f867d1ebf61ee1cfad" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; is not one of the allowed integer types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5397c200d2a2ee90e06e0032022137c360cfe34b" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;typedArray&lt;/code&gt; is not a &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed853f33a922f8707507e2c55422e5484a7c330" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;typedArray&lt;/code&gt; is not a shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Бросает &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , если &lt;code&gt;typedArray&lt;/code&gt; не является общим &lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7b0b3b69354d9aa876d74badc3490211a69d9c9a" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;typedArray&lt;/code&gt; is not a shared typed array type.</source>
          <target state="translated">Бросает &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , если &lt;code&gt;typedArray&lt;/code&gt; не общий набранный тип массива.</target>
        </trans-unit>
        <trans-unit id="48c5d4bb1483df722a7363fcd4779e6ef9f37814" translate="yes" xml:space="preserve">
          <source>Throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;typedArray&lt;/code&gt; is not one of the allowed integer types.</source>
          <target state="translated">Выдает &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; &lt;code&gt;typedArray&lt;/code&gt; , если typedArray не является одним из разрешенных целочисленных типов.</target>
        </trans-unit>
        <trans-unit id="6379845ba68b9ce053f692a29e59dd73bac1533b" translate="yes" xml:space="preserve">
          <source>Throws a user-defined exception.</source>
          <target state="translated">Бросает определенное пользователем исключение.</target>
        </trans-unit>
        <trans-unit id="1900005b555b636b4c5a98c47e3b5430ad9cce7e" translate="yes" xml:space="preserve">
          <source>Throws an &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; (&quot;malformed URI sequence&quot;) exception when &lt;code&gt;&lt;em&gt;encodedURI&lt;/em&gt;&lt;/code&gt; contains invalid character sequences.</source>
          <target state="translated">Выдает &lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt; (&amp;laquo;неверно сформированная последовательность URI&amp;raquo;), если &lt;code&gt;&lt;em&gt;encodedURI&lt;/em&gt;&lt;/code&gt; содержит недопустимые последовательности символов.</target>
        </trans-unit>
        <trans-unit id="ade68e28b40dd65aa4ae02bf634b315bc9197553" translate="yes" xml:space="preserve">
          <source>Throws an &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; (&quot;malformed URI sequence&quot;) exception when &lt;code&gt;&lt;var&gt;encodedURI&lt;/var&gt;&lt;/code&gt; contains invalid character sequences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0596e3edf384baf6965162fe31f6e5aeabf2b6d" translate="yes" xml:space="preserve">
          <source>Throws an &lt;a href=&quot;urierror&quot;&gt;&lt;code&gt;URIError&lt;/code&gt;&lt;/a&gt; (&quot;malformed URI sequence&quot;) exception when used wrongly.</source>
          <target state="translated">Выдает &lt;a href=&quot;urierror&quot;&gt; &lt;code&gt;URIError&lt;/code&gt; &lt;/a&gt; (&amp;laquo;неверно сформированная последовательность URI&amp;raquo;) при неправильном использовании.</target>
        </trans-unit>
        <trans-unit id="7679a34cdca145043e71acfbd4afa3f6f45b224c" translate="yes" xml:space="preserve">
          <source>Throws an error to a generator (also finishes the generator, unless caught from within that generator).</source>
          <target state="translated">Выбрасывает ошибку в генератор (также заканчивает работу генератора,если только она не была застигнута изнутри этого генератора).</target>
        </trans-unit>
        <trans-unit id="cd29b66a9ed7f4874f06db4d5590c606798c05ae" translate="yes" xml:space="preserve">
          <source>Throws an error to a generator. This corresponds to the &lt;code&gt;throw()&lt;/code&gt; method in the ES2015 generator object.</source>
          <target state="translated">Выдает ошибку генератору. Это соответствует методу &lt;code&gt;throw()&lt;/code&gt; в объекте генератора ES2015.</target>
        </trans-unit>
        <trans-unit id="92298a4c89aa669c689af0dc8dbe4bc0cec2e65f" translate="yes" xml:space="preserve">
          <source>Thus from the above example of class &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;D&lt;/code&gt;, it seems that &lt;code&gt;new.target&lt;/code&gt; points to the class definition of class which is initialized. For example, when &lt;code&gt;d&lt;/code&gt; was initialized using &lt;code&gt;new D()&lt;/code&gt;, the class definition of &lt;code&gt;D&lt;/code&gt; was printed; and similarly, in case of &lt;code&gt;c&lt;/code&gt;, the class &lt;code&gt;C&lt;/code&gt; was printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006e0d66e833b398c42cfcdef2352f749de24e90" translate="yes" xml:space="preserve">
          <source>Thus from the above example of class C and D, it seems that new.target points to the class Definition of class which is initialized. For example, when D was initialized using new, the class definition of D was printed and similarly in case of c, class C was printed</source>
          <target state="translated">Таким образом,из приведенного выше примера класса C и D,кажется,что new.target указывает на класс Определение класса,который инициализируется.Например,когда D инициализировалось с помощью new,было выведено определение класса D и аналогично в случае c,был выведен класс C</target>
        </trans-unit>
        <trans-unit id="8869c01d48f0801606614941c0ab16d5ec6cf1de" translate="yes" xml:space="preserve">
          <source>Thus names in strict mode &lt;code&gt;eval&lt;/code&gt; code behave identically to names in strict mode code not being evaluated as the result of &lt;code&gt;eval&lt;/code&gt;.</source>
          <target state="translated">Таким образом, имена в коде &lt;code&gt;eval&lt;/code&gt; строгого режима ведут себя идентично именам в коде строгого режима, которые не оцениваются как результат &lt;code&gt;eval&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6c74f1c6a27fa19af3bb0c8b1fa0d332430eda3" translate="yes" xml:space="preserve">
          <source>Thus, any routine cleanup code done in that enclosed (or the main) section before it exits, will be skipped. However, If the try-block has a finally-block, then that finally-block code will be executed first to permit any such cleanup, and THEN the other try's catch-block (or the error-generator) will get control to handle the second exception.</source>
          <target state="translated">Таким образом,любой код рутинной очистки,выполненной в закрытом (или основном)разделе перед его выходом,будет пропущен.Однако,если у try-block есть конечный блок,то этот конечный код будет выполнен первым,чтобы разрешить любую такую очистку,и ТОЛЬКО ОДНАЯ попытка catch-block (или генератор ошибок)получит контроль,чтобы обработать второе исключение.</target>
        </trans-unit>
        <trans-unit id="734772e40bb6d21a7d6769a3d97371f37de54286" translate="yes" xml:space="preserve">
          <source>Thus, in the &lt;code&gt;eval()&lt;/code&gt; version of the code, the browser is forced to make the expensive lookup call to check to see if there are any local variables called &lt;code&gt;Date()&lt;/code&gt;. This is incredibly inefficient compared to &lt;code&gt;Function()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5f001fb79d8a238bf76ed9526f508a6f1ac77a" translate="yes" xml:space="preserve">
          <source>Thus, in the &lt;code&gt;eval()&lt;/code&gt; version of the code, the browser is forced to make the expensive lookup call to check to see if there are any local variables called &lt;code&gt;Date()&lt;/code&gt;. This is incredibly innefficient compared to &lt;code&gt;Function()&lt;/code&gt;.</source>
          <target state="translated">Таким образом, в версии кода &lt;code&gt;eval()&lt;/code&gt; браузер вынужден выполнять дорогостоящий вызов поиска, чтобы проверить, есть ли какие-либо локальные переменные с именем &lt;code&gt;Date()&lt;/code&gt; . Это невероятно неэффективно по сравнению с &lt;code&gt;Function()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="960afc28473e8cfc97b5a580872af16e460681a1" translate="yes" xml:space="preserve">
          <source>Thus, presented below are two options for &lt;code&gt;Function.prototype.bind()&lt;/code&gt; polyfills:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ba52891c01a48629ba1937711224af337bf0ed" translate="yes" xml:space="preserve">
          <source>Time to wait in milliseconds. &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, if no time is provided.</source>
          <target state="translated">Время ждать в миллисекундах. &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; , если не предусмотрено время.</target>
        </trans-unit>
        <trans-unit id="8554d053f59f2ea34bc31ee4681625faa76e305e" translate="yes" xml:space="preserve">
          <source>Timezone offset sign, either:</source>
          <target state="translated">Знак смещения часового пояса тоже:</target>
        </trans-unit>
        <trans-unit id="79697cbcd2045cc71c3c01ceb134196ebf980f06" translate="yes" xml:space="preserve">
          <source>To add compatible &lt;code&gt;Object.entries()&lt;/code&gt; support in older environments that do not natively support it, you can use any of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735010d8962f0aecbb49e6bc825b61c55829c7cd" translate="yes" xml:space="preserve">
          <source>To add compatible &lt;code&gt;Object.entries&lt;/code&gt; support in older environments that do not natively support it, you can find a demonstrational implementation of Object.entries in the &lt;a href=&quot;https://github.com/tc39/proposal-object-values-entries&quot;&gt;tc39/proposal-object-values-entries&lt;/a&gt; (if you don't need any support for IE), a polyfill in the &lt;a href=&quot;https://github.com/es-shims/Object.entries&quot;&gt;es-shims/Object.entries&lt;/a&gt; repositories, or you can use the simple, ready to deploy polyfill listed below.</source>
          <target state="translated">Чтобы добавить совместимую поддержку &lt;code&gt;Object.entries&lt;/code&gt; в более старые среды, которые изначально не поддерживают ее, вы можете найти демонстрационную реализацию Object.entries в &lt;a href=&quot;https://github.com/tc39/proposal-object-values-entries&quot;&gt;tc39 / предложение-объект-значения-записи&lt;/a&gt; (если вам не нужна поддержка IE) , полифил в репозиториях &lt;a href=&quot;https://github.com/es-shims/Object.entries&quot;&gt;es-shims / Object.entries&lt;/a&gt; , или вы можете использовать простой, готовый к развертыванию полифилл, перечисленный ниже.</target>
        </trans-unit>
        <trans-unit id="11e8061b160ea169ddea72755f0b856618a737a7" translate="yes" xml:space="preserve">
          <source>To add compatible &lt;code&gt;Object.keys&lt;/code&gt; support in older environments that do not natively support it, copy the following snippet:</source>
          <target state="translated">Чтобы добавить совместимую поддержку &lt;code&gt;Object.keys&lt;/code&gt; в более старые среды, которые изначально не поддерживают ее, скопируйте следующий фрагмент:</target>
        </trans-unit>
        <trans-unit id="05bf4d01ba615f0cd3a215a0e64d9df3bd7f545e" translate="yes" xml:space="preserve">
          <source>To add compatible &lt;code&gt;Object.values&lt;/code&gt; support in older environments that do not natively support it, you can find a Polyfill in the &lt;a href=&quot;https://github.com/tc39/proposal-object-values-entries&quot;&gt;tc39/proposal-object-values-entries&lt;/a&gt; or in the &lt;a href=&quot;https://github.com/es-shims/Object.values&quot;&gt;es-shims/Object.values&lt;/a&gt; repositories.</source>
          <target state="translated">Чтобы добавить совместимую поддержку &lt;code&gt;Object.values&lt;/code&gt; в более старые среды, которые изначально не поддерживают ее, вы можете найти Polyfill в &lt;a href=&quot;https://github.com/tc39/proposal-object-values-entries&quot;&gt;tc39 / offer-object-values-entries&lt;/a&gt; или в репозиториях &lt;a href=&quot;https://github.com/es-shims/Object.values&quot;&gt;es-shims / Object.values&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e87c9dfadb234300ea044e3a6a526ff10cd3c440" translate="yes" xml:space="preserve">
          <source>To append a getter to an existing object later at any time, use &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы добавить геттер к существующему объекту позже в любое время, используйте &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="659eb35f4c695cf5f4dcfc2937f3da494d4e2a1e" translate="yes" xml:space="preserve">
          <source>To append a setter to an &lt;em&gt;existing&lt;/em&gt; object, use &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3e1471758522734b843aea1b4e92cd9ed7b6bb" translate="yes" xml:space="preserve">
          <source>To append a setter to an existing object later at any time, use &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы добавить сеттер к существующему объекту позже в любое время, используйте &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="229057f1da598e787ee444d5057c05857da31eb2" translate="yes" xml:space="preserve">
          <source>To avoid name clashes with your global symbol keys and other (library code) global symbols, it might be a good idea to prefix your symbols:</source>
          <target state="translated">Чтобы избежать столкновения имен с вашими глобальными ключами символов и другими (код библиотеки)глобальными символами,может быть хорошей идеей префиксовать ваши символы:</target>
        </trans-unit>
        <trans-unit id="b126d6e2e80461da4f922af64279968f4f8c738b" translate="yes" xml:space="preserve">
          <source>To avoid the error, you need to either add a definition for &lt;code&gt;bar&lt;/code&gt; to the object or check for the existence of the &lt;code&gt;bar&lt;/code&gt; property before trying to access it; one way to do that is to use the &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt;&lt;/a&gt; method), like this:</source>
          <target state="translated">Чтобы избежать ошибки, вам необходимо либо добавить определение &lt;code&gt;bar&lt;/code&gt; к объекту, либо проверить наличие свойства &lt;code&gt;bar&lt;/code&gt; перед попыткой доступа к нему; один из способов сделать это - использовать метод &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt; &lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt; &lt;/a&gt; ), например:</target>
        </trans-unit>
        <trans-unit id="cad7a96c7701e37d8b09b86ca2aa88e3150eb037" translate="yes" xml:space="preserve">
          <source>To avoid the error, you need to either add a definition for &lt;code&gt;bar&lt;/code&gt; to the object or check for the existence of the &lt;code&gt;bar&lt;/code&gt; property before trying to access it; ways to do that include using the &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, or the &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;Object.prototype.hasOwnProperty()&lt;/code&gt;&lt;/a&gt; method, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff71ce43fff60e2c7e40d45499a27a7de439dc4a" translate="yes" xml:space="preserve">
          <source>To avoid this just assign necessary constructor which you are going to use.</source>
          <target state="translated">Чтобы этого избежать,просто назначьте нужный конструктор,который вы собираетесь использовать.</target>
        </trans-unit>
        <trans-unit id="ef05d88a53a4e9cf7aa2df5505542ee1fc23439c" translate="yes" xml:space="preserve">
          <source>To avoid this problem (to prevent ASI), you could use parentheses:</source>
          <target state="translated">Чтобы избежать этой проблемы (для предотвращения ASI),можно использовать скобки:</target>
        </trans-unit>
        <trans-unit id="3f1fb295cbfdf10675698a084f9573787dc73972" translate="yes" xml:space="preserve">
          <source>To avoid this problem, make sure that the property being assigned to inside the setter function is different from the one that initially triggered the setter.The same goes for the getter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14166ee0fec3c194f4fc0df0688a0bc1f17feb8b" translate="yes" xml:space="preserve">
          <source>To avoid this, just assign the necessary constructor you are going to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee0ee4bb579af779267dc3c125db70264731acb" translate="yes" xml:space="preserve">
          <source>To avoid this, make sure a new array is always filled with non-empty values or not write to indexes past the end of array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f701e4f578c53ab427a079283d5ee6a7b477b0" translate="yes" xml:space="preserve">
          <source>To be a constant object, the entire reference graph (direct and indirect references to other objects) must reference only immutable frozen objects. The object being frozen is said to be immutable because the entire object &lt;em&gt;state&lt;/em&gt; (values and references to other objects) within the whole object is fixed. Note that strings, numbers, and booleans are always immutable and that Functions and Arrays are objects.</source>
          <target state="translated">Чтобы быть постоянным объектом, весь граф ссылок (прямые и косвенные ссылки на другие объекты) должен ссылаться только на неизменяемые замороженные объекты. Объект замораживание , как говорит, неизменны , потому что весь объект &lt;em&gt;государственные&lt;/em&gt; (значения и ссылки на другие объекты) в пределах всего объекта фиксируются. Обратите внимание, что строки, числа и логические значения всегда неизменяемы, а функции и массивы являются объектами.</target>
        </trans-unit>
        <trans-unit id="de007351cb0387325d3097a635ab72efab68a96d" translate="yes" xml:space="preserve">
          <source>To be more precise, the block statement is preventing the function declaration from being &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot;&gt;hoisted&lt;/a&gt; to the top of the scope. The function is behaving as if it were defined as a function expression and, as such, it is only the implicit variable declaration that gets hoisted to the top of the scope:</source>
          <target state="translated">Чтобы быть более точным, то оператор блока является предотвращение объявление функции от того &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Hoisting&quot;&gt;водрузили&lt;/a&gt; на вершине сферы. Функция ведет себя так, как если бы она была определена как выражение функции, и, как таковая, только неявное объявление переменной поднимается в верхнюю часть области видимости:</target>
        </trans-unit>
        <trans-unit id="91d84150764106dcb84b71d84665d49643ba81c1" translate="yes" xml:space="preserve">
          <source>To be more stringent in adhering to &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt; (which reserves !, ', (, ), and *), even though these characters have no formalized URI delimiting uses, the following can be safely used:</source>
          <target state="translated">Чтобы быть более строгим при соблюдении &lt;a href=&quot;http://tools.ietf.org/html/rfc3986&quot;&gt;RFC 3986&lt;/a&gt; (который резервирует!, ', (,) И *), даже если эти символы не имеют формализованного использования в качестве разделителей URI, можно безопасно использовать следующее:</target>
        </trans-unit>
        <trans-unit id="3ed4a43645f0a2537c0221912eb5a09df85356fb" translate="yes" xml:space="preserve">
          <source>To change &quot;foo&quot; inside the if statement, you need to remove the &lt;code&gt;let&lt;/code&gt; that causes the redeclaration.</source>
          <target state="translated">Чтобы изменить &quot;foo&quot; внутри оператора if, вам нужно удалить &lt;code&gt;let&lt;/code&gt; , вызывающую повторное объявление.</target>
        </trans-unit>
        <trans-unit id="d405cf494444cd6fd79287277242d527e2322819" translate="yes" xml:space="preserve">
          <source>To change it, use &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16cc73a3ccd7572782dfa5f7a136f79687bbbe73" translate="yes" xml:space="preserve">
          <source>To change it, you could use &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; though.</source>
          <target state="translated">Чтобы изменить это, вы можете использовать &lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b23e40255a27317ad4c5e7988f79e6d83e22e91b" translate="yes" xml:space="preserve">
          <source>To check if cross origin isolation has been successful, you can test against the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/crossOriginIsolated&quot;&gt;crossOriginIsolated&lt;/a&gt;&lt;/code&gt; property available to window and worker contexts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f129204df59c5d4904a8a7b491a530f5eecaa53" translate="yes" xml:space="preserve">
          <source>To check whether an implementation supports them, use the &lt;code&gt;&quot;i&quot;&lt;/code&gt; argument (a requirement that illegal language tags are rejected) and look for a &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; exception:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6c25e7e31c11f7c29484cdde462e57ff8e0ec5" translate="yes" xml:space="preserve">
          <source>To compare numbers instead of strings, the compare function can simply subtract &lt;code&gt;b&lt;/code&gt; from &lt;code&gt;a&lt;/code&gt;. The following function will sort the array ascending (if it doesn't contain &lt;code&gt;Infinity&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt;):</source>
          <target state="translated">Чтобы сравнить числа вместо строк, функция сравнения может просто вычесть &lt;code&gt;b&lt;/code&gt; из &lt;code&gt;a&lt;/code&gt; . Следующая функция отсортирует массив по возрастанию (если он не содержит &lt;code&gt;Infinity&lt;/code&gt; и &lt;code&gt;NaN&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="6f0b72177be072c3cc5f16b4c720a3f88c9d6225" translate="yes" xml:space="preserve">
          <source>To compare numbers instead of strings, the compare function can simply subtract &lt;code&gt;b&lt;/code&gt; from &lt;code&gt;a&lt;/code&gt;. The following function will sort the array in ascending order (if it doesn't contain &lt;code&gt;Infinity&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e2da601250c750672096a3ac258a97ae0d4506" translate="yes" xml:space="preserve">
          <source>To convert a number to its string literal in a particular radix, use &lt;code&gt;&lt;var&gt;thatNumber&lt;/var&gt;.toString(&lt;var&gt;radix&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4d1fa2b60b0aab96f8363f72219fd6ee63d633" translate="yes" xml:space="preserve">
          <source>To convert number to its string literal in a particular radix use &lt;code&gt;intValue.toString(radix)&lt;/code&gt;.</source>
          <target state="translated">Чтобы преобразовать число в строковый литерал с определенным основанием системы счисления, используйте &lt;code&gt;intValue.toString(radix)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bdd25ea23fa70526ba94776a9ffa7c104991659a" translate="yes" xml:space="preserve">
          <source>To convert the non-standard expression closures syntax to standard ECMAScript syntax, you can add curly braces and return statements.</source>
          <target state="translated">Для преобразования синтаксиса закрытия нестандартных выражений в стандартный синтаксис ECMAScript можно добавлять фигурные скобки и возвращать выражения.</target>
        </trans-unit>
        <trans-unit id="9c3d95d344533848c975698d3517cac4ca51dc93" translate="yes" xml:space="preserve">
          <source>To count how many elements are in a &lt;code&gt;Set&lt;/code&gt;, use &lt;a href=&quot;set/size&quot;&gt;&lt;code&gt;Set.prototype.size&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы подсчитать, сколько элементов находится в &lt;code&gt;Set&lt;/code&gt; , используйте &lt;a href=&quot;set/size&quot;&gt; &lt;code&gt;Set.prototype.size&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a70476c40d7f474041614202b80673d7ed88ad9" translate="yes" xml:space="preserve">
          <source>To create a new primitive symbol, you write &lt;code&gt;Symbol()&lt;/code&gt; with an optional string as its description:</source>
          <target state="translated">Чтобы создать новый примитивный символ, вы пишете &lt;code&gt;Symbol()&lt;/code&gt; с необязательной строкой в ​​качестве его описания:</target>
        </trans-unit>
        <trans-unit id="78eca4ff24cae301e8c463b3113c921a5299b2f0" translate="yes" xml:space="preserve">
          <source>To customise the proxy, we define functions on the handler object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b00f2f6bb9327ee2c8dec177efb6a4af21ed29e" translate="yes" xml:space="preserve">
          <source>To define an object type, create a function for the object type that specifies its name and properties. An object can have a property that is itself another object. See the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4131b3bc54e63c2abd6c58d537708c1ccc9e759c" translate="yes" xml:space="preserve">
          <source>To define an object type, create a function for the object type that specifies its name and properties. An object can have a property that is itself or another object. See the examples below.</source>
          <target state="translated">Чтобы определить тип объекта,создайте для него функцию,которая определяет его имя и свойства.Объект может иметь свойство,которое является самим собой или другим объектом.См.примеры ниже.</target>
        </trans-unit>
        <trans-unit id="b7c92209a721c1091a0c7a22d35353dd58f6f205" translate="yes" xml:space="preserve">
          <source>To dynamically import a module, the &lt;code&gt;import&lt;/code&gt; keyword may be called as a function. When used this way, it returns a promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d87c4eabb66bc009e7eab7f129b2bc8668efc006" translate="yes" xml:space="preserve">
          <source>To escape a backtick in a template literal, put a backslash (&lt;code&gt;\&lt;/code&gt;)before the backtick.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b772057c1501138b9270507d45837bdfa729e3b" translate="yes" xml:space="preserve">
          <source>To execute multiple statements within a clause, use a block statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements. In general, it is a good practice to always use block statements, especially in code involving nested &lt;code&gt;if&lt;/code&gt; statements:</source>
          <target state="translated">Чтобы выполнить несколько операторов внутри предложения, используйте оператор блока ( &lt;code&gt;{ ... }&lt;/code&gt; ) для группировки этих операторов. В общем, рекомендуется всегда использовать блочные операторы, особенно в коде, включающем вложенные операторы &lt;code&gt;if&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fb5b6aa172088f8e8cb00281ed35e00d5092703a" translate="yes" xml:space="preserve">
          <source>To fix null pointer to &lt;code&gt;undefined&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; values, you can use the &lt;a href=&quot;../operators/typeof&quot;&gt;typeof&lt;/a&gt; operator, for example.</source>
          <target state="translated">Чтобы исправить нулевой указатель на &lt;code&gt;undefined&lt;/code&gt; или &lt;code&gt;null&lt;/code&gt; значения, вы можете, например, использовать оператор &lt;a href=&quot;../operators/typeof&quot;&gt;typeof&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91a86984838df61ba0846a39480b0309f51a02cc" translate="yes" xml:space="preserve">
          <source>To fix null pointer to &lt;code&gt;undefined&lt;/code&gt; values, you can use the &lt;a href=&quot;../operators/typeof&quot;&gt;typeof&lt;/a&gt; operator, for example.</source>
          <target state="translated">Чтобы исправить нулевой указатель на &lt;code&gt;undefined&lt;/code&gt; значения, вы можете, например, использовать оператор &lt;a href=&quot;../operators/typeof&quot;&gt;typeof&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d0de1e00e0b24955b2e7edd966d5a8cb99b6bfe" translate="yes" xml:space="preserve">
          <source>To fix these errors, you will either need to replace the &lt;a href=&quot;../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt; operator&lt;/a&gt; with the &lt;a href=&quot;../operators/typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt; operator&lt;/a&gt;, or to make sure you use the function name, instead of the result of its evaluation.</source>
          <target state="translated">Чтобы исправить эти ошибки, вам нужно будет либо заменить &lt;a href=&quot;../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; оператора&lt;/a&gt; с &lt;a href=&quot;../operators/typeof&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; оператором&lt;/a&gt; , или чтобы убедиться , что вы используете имя функции, а не результат его оценки.</target>
        </trans-unit>
        <trans-unit id="6b30ab0fa15a53ce2b025fb9fcebeedead602778" translate="yes" xml:space="preserve">
          <source>To fix this code, you need to access the object like this:</source>
          <target state="translated">Чтобы исправить этот код,необходимо получить доступ к объекту вот так:</target>
        </trans-unit>
        <trans-unit id="0b75000801b86b4c7e3a6280f97393340f3378fc" translate="yes" xml:space="preserve">
          <source>To fix this code, you would need to add a parenthesis that closes the condition.</source>
          <target state="translated">Чтобы исправить этот код,необходимо добавить скобку,закрывающую условие.</target>
        </trans-unit>
        <trans-unit id="86accf46f3e132880f45e8ff095e3c12c10d297a" translate="yes" xml:space="preserve">
          <source>To fix this error, you will either need to remove line 16, where there is an attempt to set the temperature property, or you will need to implement a &lt;a href=&quot;../functions/set&quot;&gt;setter&lt;/a&gt; for it, for example like this:</source>
          <target state="translated">Чтобы исправить эту ошибку, вам нужно будет либо удалить строку 16, где есть попытка установить свойство температуры, либо вам нужно будет реализовать для нее &lt;a href=&quot;../functions/set&quot;&gt;установщик&lt;/a&gt; , например, так:</target>
        </trans-unit>
        <trans-unit id="bf97dc62646ce58482960a37576e08c369e17aa5" translate="yes" xml:space="preserve">
          <source>To fix this error, you will either need to remove the call to &lt;a href=&quot;../global_objects/object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt; entirely, or move it to a position so that the property is added earlier and only later the object is marked as non-extensible. Of course you can also remove the property that was attempted to be added, if you don't need it.</source>
          <target state="translated">Чтобы исправить эту ошибку, вам нужно либо полностью удалить вызов &lt;a href=&quot;../global_objects/object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; , либо переместить его в такое положение, чтобы свойство добавлялось раньше и только позже объект был помечен как нерасширяемый. Конечно, вы также можете удалить свойство, которое пытались добавить, если оно вам не нужно.</target>
        </trans-unit>
        <trans-unit id="b4ba67838ff27fd0b5e835c26d775ab0240d0d03" translate="yes" xml:space="preserve">
          <source>To fix this warning, the &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; statement can just be omitted, because the variable exists already. In other cases, you might to rename either the function parameter or the variable name.</source>
          <target state="translated">Чтобы исправить это предупреждение, можно просто опустить оператор &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; , потому что переменная уже существует. В других случаях вы можете переименовать либо параметр функции, либо имя переменной.</target>
        </trans-unit>
        <trans-unit id="956ca320c80ca726eca3552fa06ab58884939c87" translate="yes" xml:space="preserve">
          <source>To force the base of an exponentiation expression to be a negative number:</source>
          <target state="translated">Заставить основание выражения экспоненции быть отрицательным числом:</target>
        </trans-unit>
        <trans-unit id="421bbcc452e2335197d911b9dedefef9f4238ca7" translate="yes" xml:space="preserve">
          <source>To free the contents of a variable, you can set it to &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Чтобы освободить содержимое переменной, вы можете установить для нее значение &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="52dba64c34ae66410ba3b4d58157ff01e4fa831f" translate="yes" xml:space="preserve">
          <source>To get Date, Month and Year or Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e05bade19c4913cbfab30bd2bf88e465332af90" translate="yes" xml:space="preserve">
          <source>To get more information (but with slower execution), use the &lt;a href=&quot;exec&quot;&gt;&lt;code&gt;exec()&lt;/code&gt;&lt;/a&gt; method. (This is similar to the &lt;a href=&quot;../string/match&quot;&gt;&lt;code&gt;String.prototype.match()&lt;/code&gt;&lt;/a&gt; method.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747d05132d9cc0d0814a6d6f49d6ab71a0abfb50" translate="yes" xml:space="preserve">
          <source>To get the same effect using template literals, you can now write:</source>
          <target state="translated">Чтобы получить тот же эффект,используя шаблонные литералы,теперь можно писать:</target>
        </trans-unit>
        <trans-unit id="038ccd252ffc16f9a65c61b5b1a06febf39f6feb" translate="yes" xml:space="preserve">
          <source>To guard against this, something like the second line would be used, where &lt;code&gt;&lt;var&gt;b&lt;/var&gt;&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;multiply&lt;/code&gt; is called with only one argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd3ea0c08a76d95e41cc575c73f75a27dbaa192" translate="yes" xml:space="preserve">
          <source>To guard against this, something like the second line would be used, where &lt;code&gt;b&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt; if &lt;code&gt;multiply&lt;/code&gt; is called with only one argument:</source>
          <target state="translated">Чтобы защититься от этого, можно использовать что-то вроде второй строки, где &lt;code&gt;b&lt;/code&gt; устанавливается в &lt;code&gt;1&lt;/code&gt; , если &lt;code&gt;multiply&lt;/code&gt; вызывается только с одним аргументом:</target>
        </trans-unit>
        <trans-unit id="c97668d524a150f31ca392e34bb401cbf968f4d2" translate="yes" xml:space="preserve">
          <source>To help explain these properties and elements, see this example and then refer to the table below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2281f8bdaf901641e3dec3fa6d152fcde978085a" translate="yes" xml:space="preserve">
          <source>To improve in memory usage and to prevent memory leaks, Firefox disallows add-ons to keep strong references to DOM objects after their parent document has been destroyed. A dead object, is holding a strong (keep alive) reference to a DOM element that persists even after it was destroyed in the DOM. To avoid these issues, references to DOM nodes in foreign document should instead be stored in an object which is specific to that document, and cleaned up when the document is unloaded, or stored as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Language_Bindings/Components.utils.getWeakReference&quot;&gt;weak references&lt;/a&gt;.</source>
          <target state="translated">Чтобы улучшить использование памяти и предотвратить утечки памяти, Firefox запрещает надстройкам сохранять сильные ссылки на объекты DOM после того, как их родительский документ был уничтожен. Мертвый объект содержит сильную (поддерживающую) ссылку на элемент DOM, которая сохраняется даже после того, как он был уничтожен в DOM. Чтобы избежать этих проблем, ссылки на узлы DOM во внешнем документе должны вместо этого храниться в объекте, специфичном для этого документа, и очищаться при выгрузке документа или сохраняться как &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Language_Bindings/Components.utils.getWeakReference&quot;&gt;слабые ссылки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="af8a11962f2fa3f3529a0d98f145c56042a6b760" translate="yes" xml:space="preserve">
          <source>To improve in memory usage and to prevent memory leaks, Firefox disallows add-ons to keep strong references to DOM objects after their parent document has been destroyed. A dead object, is holding a strong (keep alive) reference to a DOM element that persists even after it was destroyed in the DOM. To avoid these issues, references to DOM nodes in foreign document should instead be stored in an object which is specific to that document, and cleaned up when the document is unloaded, or stored as &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Language_Bindings/Components.utils.getWeakReference&quot;&gt;weak references&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ada6a5fe0260eaa93b8a294f2a8aa0b6e264d2" translate="yes" xml:space="preserve">
          <source>To improve readability for numeric literals, underscores (&lt;code&gt;_&lt;/code&gt;, &lt;code&gt;U+005F&lt;/code&gt;) can be used as separators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ae4acb76421f9729079bcd34138c41da17b09d" translate="yes" xml:space="preserve">
          <source>To include a flag with the regular expression, use this syntax:</source>
          <target state="translated">Чтобы включить флаг с регулярным выражением,используйте этот синтаксис:</target>
        </trans-unit>
        <trans-unit id="6d7b234f80319b329c9f890cf3c6fb0952c75d99" translate="yes" xml:space="preserve">
          <source>To instantiate the new objects, you then use the following:</source>
          <target state="translated">Чтобы инстанцировать новые объекты,используйте следующее:</target>
        </trans-unit>
        <trans-unit id="2da07bc6be7bd717dced39e45d7ac3036fc78a69" translate="yes" xml:space="preserve">
          <source>To invert the sign of the result of an exponentiation expression:</source>
          <target state="translated">Инвертировать знак результата выражения экспоненции:</target>
        </trans-unit>
        <trans-unit id="307515a0238257589b141add168f26a6658356a9" translate="yes" xml:space="preserve">
          <source>To invoke strict mode for an entire script, put the &lt;em&gt;exact&lt;/em&gt; statement &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; (or &lt;code&gt;'use strict';&lt;/code&gt;) before any other statements.</source>
          <target state="translated">Чтобы активировать строгий режим для всего скрипта, введите &lt;em&gt;точное&lt;/em&gt; выражение &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; (или &lt;code&gt;'use strict';&lt;/code&gt; ) перед любыми другими операторами.</target>
        </trans-unit>
        <trans-unit id="f1bb7e56e4e1c57532789b488df9a11f77ade640" translate="yes" xml:space="preserve">
          <source>To learn about the way promises work and how you can use them, we advise you to read &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;Using promises&lt;/a&gt; first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ac8e5447823b69e4e0fe22510dea636a6c8749" translate="yes" xml:space="preserve">
          <source>To learn more about ES2015 generators, see:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576cfdce3de5306eb146e890163b32ca758257fd" translate="yes" xml:space="preserve">
          <source>To make &quot;bar&quot; a declared variable, you can add the &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; keyword in front of it.</source>
          <target state="translated">Чтобы сделать &amp;laquo;bar&amp;raquo; объявленной переменной, вы можете добавить перед ней ключевое слово &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f704faae950a1e35871b3c65d28aa063776d91a" translate="yes" xml:space="preserve">
          <source>To make &lt;code&gt;finally&lt;/code&gt; blocks of a sync generator to be always called use appropriate form of the loop, &lt;code&gt;for await...of&lt;/code&gt; for the async generator and &lt;code&gt;for...of&lt;/code&gt; for the sync one and await yielded promises explicitly inside the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1fdea6be9a37db2a93137b0b09db6d812a2958" translate="yes" xml:space="preserve">
          <source>To make an object immutable, recursively freeze each property which is of type object (deep freeze). Use the pattern on a case-by-case basis based on your design when you know the object contains no &lt;a href=&quot;https://en.wikipedia.org/wiki/Cycle_(graph_theory)&quot;&gt;cycles&lt;/a&gt; in the reference graph, otherwise an endless loop will be triggered. An enhancement to &lt;code&gt;deepFreeze()&lt;/code&gt; would be to have an internal function that receives a path (e.g. an Array) argument so you can suppress calling &lt;code&gt;deepFreeze()&lt;/code&gt; recursively when an object is in the process of being made immutable. You still run a risk of freezing an object that shouldn't be frozen, such as [window].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b6d41263a3058c202ec56d40a9d6b8e1652059e" translate="yes" xml:space="preserve">
          <source>To make an object immutable, recursively freeze each property which is of type object (deep freeze). Use the pattern on a case-by-case basis based on your design when you know the object contains no &lt;em&gt;Unknown prefix: Cycle_(graph_theory).&lt;/em&gt; in the reference graph, otherwise an endless loop will be triggered. An enhancement to &lt;code&gt;deepFreeze()&lt;/code&gt; would be to have an internal function that receives a path (e.g. an Array) argument so you can suppress calling &lt;code&gt;deepFreeze()&lt;/code&gt; recursively when an object is in the process of being made immutable. You still run a risk of freezing an object that shouldn't be frozen, such as [window].</source>
          <target state="translated">Чтобы сделать объект неизменяемым, рекурсивно заморозьте каждое свойство, имеющее тип object (глубокое замораживание). Используйте шаблон в каждом конкретном случае на основе вашего дизайна, если вы знаете, что объект не содержит &lt;em&gt;префикса Unknown: Cycle_ (graph_theory).&lt;/em&gt; в контрольном графе, иначе запустится бесконечный цикл. Усовершенствованием &lt;code&gt;deepFreeze()&lt;/code&gt; было бы наличие внутренней функции, которая получает аргумент пути (например, Array), чтобы вы могли подавить рекурсивный вызов &lt;code&gt;deepFreeze()&lt;/code&gt; когда объект находится в процессе создания неизменяемого. Вы по-прежнему рискуете заморозить объект, который не следует замораживать, например [окно].</target>
        </trans-unit>
        <trans-unit id="1efb7a94840c6df8e1529f399f820556da3a48dc" translate="yes" xml:space="preserve">
          <source>To match characters from other languages such as Cyrillic or Hebrew, use &lt;code&gt;\u&lt;var&gt;hhhh&lt;/var&gt;&lt;/code&gt;, where &lt;code&gt;&lt;var&gt;hhhh&lt;/var&gt;&lt;/code&gt; is the character's Unicode value in hexadecimal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd97829643819341bae18d4865a301c7a49ae25" translate="yes" xml:space="preserve">
          <source>To mimic the function of the &lt;code&gt;includes()&lt;/code&gt; method, this custom function returns &lt;code&gt;true&lt;/code&gt; if the element exists in the array:</source>
          <target state="translated">Чтобы имитировать функцию метода &lt;code&gt;includes()&lt;/code&gt; , эта настраиваемая функция возвращает значение &lt;code&gt;true&lt;/code&gt; , если элемент существует в массиве:</target>
        </trans-unit>
        <trans-unit id="c99a2f7ab2302c62cb1ccbd0c741ca57d774dc7e" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;Date.now()&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">Чтобы обеспечить защиту от временных атак и снятия отпечатков пальцев, точность &lt;code&gt;Date.now()&lt;/code&gt; может округляться в зависимости от настроек браузера.</target>
        </trans-unit>
        <trans-unit id="96915bb562bd10f7386212a4daf00e9d0be01c6c" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;new Date().getTime()&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="translated">Чтобы обеспечить защиту от временных атак и снятия отпечатков пальцев, точность &lt;code&gt;new Date().getTime()&lt;/code&gt; может округляться в зависимости от настроек браузера.</target>
        </trans-unit>
        <trans-unit id="bfcee662fb59dd61867d35e910871be399e7d731" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;new Date().getTime()&lt;/code&gt; might get rounded depending on browser settings. In Firefox, the &lt;code&gt;privacy.reduceTimerPrecision&lt;/code&gt; preference is enabled by default and defaults to 20&amp;micro;s in Firefox 59; in 60 it will be 2ms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac37440f1ea5fb363f65d9cc2e0bc140f034f623" translate="yes" xml:space="preserve">
          <source>To pass the value of &lt;code&gt;this&lt;/code&gt; from one context to another, use &lt;a href=&quot;../global_objects/function/call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../global_objects/function/apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;:&lt;/strong&gt;</source>
          <target state="translated">Чтобы передать значение &lt;code&gt;this&lt;/code&gt; из одного контекста в другой, используйте &lt;a href=&quot;../global_objects/function/call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/function/apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; :&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4cf44ffc496e1c3ddaf8ae8f93838d413caef85" translate="yes" xml:space="preserve">
          <source>To perform a global search and replace, include the &lt;code&gt;g&lt;/code&gt; switch in the regular expression.</source>
          <target state="translated">Чтобы выполнить глобальный поиск и замену, &lt;code&gt;g&lt;/code&gt; переключатель g в регулярное выражение.</target>
        </trans-unit>
        <trans-unit id="f23eacdabe4319920cbeec8293bbfab4a25022b3" translate="yes" xml:space="preserve">
          <source>To provide a function with promise functionality, simply have it return a promise:</source>
          <target state="translated">Чтобы обеспечить функцию с функцией обещания,просто заставьте ее вернуть обещание:</target>
        </trans-unit>
        <trans-unit id="eefa6ae82f1c0d30ce5bb0a330d91982a9f8b2a7" translate="yes" xml:space="preserve">
          <source>To re-run a definition, use Scratchpad's menu Execute &amp;gt; Reload and Run.</source>
          <target state="translated">Чтобы повторно запустить определение, используйте меню Блокнота &amp;laquo;Выполнить&amp;raquo;&amp;gt; &amp;laquo;Перезагрузить и запустить&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ca212f1a4ca5b68e70b2f13799d3d4a605bdfbe3" translate="yes" xml:space="preserve">
          <source>To remove a watchpoint, use the &lt;a href=&quot;unwatch&quot;&gt;&lt;code&gt;unwatch()&lt;/code&gt;&lt;/a&gt; method. By default, the &lt;code&gt;watch&lt;/code&gt; method is inherited by every object descended from &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы удалить &lt;a href=&quot;unwatch&quot;&gt; &lt;code&gt;unwatch()&lt;/code&gt; &lt;/a&gt; наблюдения, используйте метод unwatch () . По умолчанию метод &lt;code&gt;watch&lt;/code&gt; наследуется каждым объектом, производным от &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="87769fb85ddf637fc522a9dfb87a72113fd21eef" translate="yes" xml:space="preserve">
          <source>To represent integers smaller than this, consider using &lt;a href=&quot;../bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee6bc67f7ce03bb1e34c845d08bbc1ab32fdec2" translate="yes" xml:space="preserve">
          <source>To return a value other than the default, a function must have a &lt;code&gt;&lt;a href=&quot;statements/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; statement that specifies the value to return. A function without a return statement will return a default value. In the case of a &lt;a href=&quot;global_objects/object/constructor&quot;&gt;constructor&lt;/a&gt; called with the &lt;code&gt;&lt;a href=&quot;operators/new&quot;&gt;new&lt;/a&gt;&lt;/code&gt; keyword, the default value is the value of its &lt;code&gt;this&lt;/code&gt; parameter. For all other functions, the default return value is &lt;a href=&quot;global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы вернуть значение, отличное от значения по умолчанию, функция должна иметь оператор &lt;code&gt;&lt;a href=&quot;statements/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; , указывающий возвращаемое значение. Функция без оператора return вернет значение по умолчанию. В случае &lt;a href=&quot;global_objects/object/constructor&quot;&gt;конструктора,&lt;/a&gt; вызываемого с ключевым словом &lt;code&gt;&lt;a href=&quot;operators/new&quot;&gt;new&lt;/a&gt;&lt;/code&gt; , значением по умолчанию является значение его параметра &lt;code&gt;this&lt;/code&gt; . Для всех остальных функций возвращаемое значение по умолчанию не &lt;a href=&quot;global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bbe3e5bf31754ac82a3fa0bb9dc3481a4afd3106" translate="yes" xml:space="preserve">
          <source>To return an object literal expression requires parentheses around expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31111b28eb9b4fc6974976c91cab6c393986b53" translate="yes" xml:space="preserve">
          <source>To rewrite &lt;a href=&quot;../statements/for_each...in&quot;&gt;&lt;code&gt;for each...in&lt;/code&gt;&lt;/a&gt; statements so that values can be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; with &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; as well, you need to guard around &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Чтобы переписать &lt;a href=&quot;../statements/for_each...in&quot;&gt; &lt;code&gt;for each...in&lt;/code&gt; &lt;/a&gt; оператора ... in так, чтобы значения могли быть &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; с &lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; , вам нужно остерегаться &lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e88d9bfb366adfc5ca7ab4e34ccc17a0c2342ad" translate="yes" xml:space="preserve">
          <source>To rewrite &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for_each...in&quot;&gt;&lt;code&gt;for each...in&lt;/code&gt;&lt;/a&gt; statements so that values can be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; with &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; as well, you need to guard around &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae85078dfd808f11e87a09a90b41a86b6930269f" translate="yes" xml:space="preserve">
          <source>To see how this works, this is how it would look if the nesting were properly indented:</source>
          <target state="translated">Чтобы увидеть,как это работает,так бы выглядело,если бы гнездо было правильно вырезано:</target>
        </trans-unit>
        <trans-unit id="6d3d253ad399aba71e8bddceac06b64b3c64fcf9" translate="yes" xml:space="preserve">
          <source>To serialize circular references you can use a library that supports them (e.g. &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/cycle.js&quot;&gt;cycle.js&lt;/a&gt; by Douglas Crockford) or implement a solution by yourself, which will require finding and replacing (or removing) the cyclic references by serializable values.</source>
          <target state="translated">Для сериализации циклических ссылок вы можете использовать поддерживающую их библиотеку (например, &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/cycle.js&quot;&gt;cycle.js&lt;/a&gt; Дугласа Крокфорда) или реализовать решение самостоятельно, которое потребует поиска и замены (или удаления) циклических ссылок сериализуемыми значениями.</target>
        </trans-unit>
        <trans-unit id="61341a387a73c6e0974b541c310c31fa835bad37" translate="yes" xml:space="preserve">
          <source>To serialize circular references you can use a library that supports them (e.g. &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/cycle.js&quot;&gt;cycle.js&lt;/a&gt;) or implement a solution by yourself, which will require finding and replacing (or removing) the cyclic references by serializable values.</source>
          <target state="translated">Для сериализации циклических ссылок вы можете использовать поддерживающую их библиотеку (например, &lt;a href=&quot;https://github.com/douglascrockford/JSON-js/blob/master/cycle.js&quot;&gt;cycle.js&lt;/a&gt; ) или реализовать решение самостоятельно, что потребует поиска и замены (или удаления) циклических ссылок сериализуемыми значениями.</target>
        </trans-unit>
        <trans-unit id="10e0214ad945a12c3e4bcb01423a2eee0fe2f7da" translate="yes" xml:space="preserve">
          <source>To set the value of &lt;code&gt;this&lt;/code&gt; to a particular value when calling a function, use &lt;a href=&quot;../global_objects/function/call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../global_objects/function/apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; as in the examples below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66dfb8b03b279299af3ce7e3e3995c740c761e43" translate="yes" xml:space="preserve">
          <source>To share memory using &lt;a href=&quot;sharedarraybuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; objects from one agent in the cluster to another (an agent is either the web page&amp;rsquo;s main program or one of its web workers), &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage&lt;/a&gt;&lt;/code&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;structured cloning&lt;/a&gt; is used.</source>
          <target state="translated">Для совместного использования памяти с &lt;a href=&quot;sharedarraybuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt; объектов SharedArrayBuffer от одного агента в кластере к другому (агент является либо основной программой веб-страницы, либо одним из ее веб-рабочих), используется &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage&lt;/a&gt;&lt;/code&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;структурированное клонирование&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c69f72f8a8e1556fbbba4284e4de161a49d7aa0" translate="yes" xml:space="preserve">
          <source>To solve this, &lt;code&gt;Math.fround()&lt;/code&gt; can be used to cast the 64-bit float to a 32-bit float. Internally, JavaScript continues to treat the number as a 64-bit float, it just performs a &quot;round to even&quot; on the 23rd bit of the mantissa, and sets all following mantissa bits to &lt;code&gt;0&lt;/code&gt;. If the number is outside the range of a 32-bit float, &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;-Infinity&lt;/code&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51294f1892b4cc30fb189f09c42cde8df76f4c80" translate="yes" xml:space="preserve">
          <source>To solve this, &lt;code&gt;Math.fround()&lt;/code&gt; can be used to cast the 64-bit float to a 32-bit float. Internally, JavaScript continues to treat the number as a 64-bit float, it just performs a &quot;round to even&quot; on the 23rd bit of the mantissa, and sets all following mantissa bits to &lt;code&gt;0&lt;/code&gt;. If the number is outside the range of a 32-bit float, &lt;code&gt;&lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;-Infinity&lt;/code&gt; is returned.</source>
          <target state="translated">Чтобы решить эту &lt;code&gt;Math.fround()&lt;/code&gt; можно использовать Math.fround () для преобразования 64-битного числа с плавающей запятой в 32-битное число с плавающей запятой. Внутри JavaScript продолжает обрабатывать число как 64-битное число с плавающей запятой, он просто выполняет &amp;laquo;округление до четности&amp;raquo; 23-го бита мантиссы и устанавливает все последующие биты мантиссы в &lt;code&gt;0&lt;/code&gt; . Если число выходит за пределы диапазона 32-битного числа с плавающей запятой, возвращается &lt;code&gt;&lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;-Infinity&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b99e751f92b027a44ab3719b0e301b6ed16d648" translate="yes" xml:space="preserve">
          <source>To sum up values contained in an array of objects you &lt;strong&gt;must&lt;/strong&gt; supply an initial value so that each item passes through your function.</source>
          <target state="translated">Чтобы суммировать значения, содержащиеся в массиве объектов, вы &lt;strong&gt;должны&lt;/strong&gt; указать начальное значение, чтобы каждый элемент проходил через вашу функцию.</target>
        </trans-unit>
        <trans-unit id="aedd09040224912bb4fa03a83868a27bf974dd84" translate="yes" xml:space="preserve">
          <source>To sum up, the values contained in an array of objects, you &lt;strong&gt;must&lt;/strong&gt; supply an &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt;, so that each item passes through your function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff9bdaefda4afeb1b2d3c5e304f7dfdacddbf997" translate="yes" xml:space="preserve">
          <source>To test if an object is not an &lt;code&gt;instanceof&lt;/code&gt; a specific constructor, you can do</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d113798c2a75c1ed214232bb80df9ddd29edac47" translate="yes" xml:space="preserve">
          <source>To test if an object is not an instanceof a specific Constructor, you can do</source>
          <target state="translated">Чтобы проверить,не является ли объект экземпляром конкретного конструктора,можно сделать следующее</target>
        </trans-unit>
        <trans-unit id="6189e37965976e54d4248b20bb1532f0b7800f11" translate="yes" xml:space="preserve">
          <source>To understand how prototypes are used for inheritance, see guide article &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain&quot;&gt;Inheritance and the prototype chain&lt;/a&gt;.</source>
          <target state="translated">Чтобы понять, как прототипы используются для наследования, см. Статью руководства &amp;laquo; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain&quot;&gt;Наследование и цепочка прототипов&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0c27c1563eef054518761c7a92f5cf21d8d5ac6" translate="yes" xml:space="preserve">
          <source>To understand how prototypes are used for inheritance, see guide article &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain&quot;&gt;Inheritance and the prototype chain&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae9c12807500fea71bdcc71051a39f54f1052f0" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;Array&lt;/code&gt; methods on the &lt;code&gt;arguments&lt;/code&gt; object, it must be converted to a real array first.</source>
          <target state="translated">Чтобы использовать методы &lt;code&gt;Array&lt;/code&gt; для объекта &lt;code&gt;arguments&lt;/code&gt; , его необходимо сначала преобразовать в реальный массив.</target>
        </trans-unit>
        <trans-unit id="75f905abea55b3adbcb30a94d7249e1c63fef4e2" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;new&lt;/code&gt; with an array of parameters without spread syntax, you would have to do it &lt;strong&gt;indirectly&lt;/strong&gt; through partial application:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a0acd17137930958c4357224572608c36ceb9a" translate="yes" xml:space="preserve">
          <source>To use new with an array of parameters without spread syntax, you would have to do it &lt;strong&gt;indirectly&lt;/strong&gt; through partial application:</source>
          <target state="translated">Чтобы использовать new с массивом параметров без синтаксиса распространения, вам придется сделать это &lt;strong&gt;косвенно&lt;/strong&gt; через частичное приложение:</target>
        </trans-unit>
        <trans-unit id="7274f7dbf9016c13ad74c7d68af0822075863807" translate="yes" xml:space="preserve">
          <source>To use the &lt;code&gt;Object.prototype.toString()&lt;/code&gt; with every object, you need to call &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; on it, passing the object you want to inspect as the first parameter (called &lt;code&gt;thisArg&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660ef13750fc5d9c949b57cdae0a4e8e70e15f7a" translate="yes" xml:space="preserve">
          <source>Too much recursion</source>
          <target state="translated">Слишком много рекурсии</target>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="c2313470950f865647156a7a4a25ce3c2e83792f" translate="yes" xml:space="preserve">
          <source>Trailing ; is now optional.</source>
          <target state="translated">Слежение;теперь необязательно.</target>
        </trans-unit>
        <trans-unit id="e55b06e9f89f5676c1b49a5534be9075559f2b41" translate="yes" xml:space="preserve">
          <source>Trailing comma in parameters</source>
          <target state="translated">Трейлинговая запятая по параметрам</target>
        </trans-unit>
        <trans-unit id="7b5b3a2e5f602edd973d6bc7c27d9b7106a52ef4" translate="yes" xml:space="preserve">
          <source>Trailing commas</source>
          <target state="translated">Запятые заднего хода</target>
        </trans-unit>
        <trans-unit id="42a3bb278c71efefd64c79603bbd7e4b085a3e13" translate="yes" xml:space="preserve">
          <source>Transitioning to strict mode</source>
          <target state="translated">Переход на строгий режим</target>
        </trans-unit>
        <trans-unit id="7677dc0a64e242392b7b759584fdce97846e967e" translate="yes" xml:space="preserve">
          <source>Tricky use case</source>
          <target state="translated">сложный случай использования</target>
        </trans-unit>
        <trans-unit id="5c4f40eb67c2580cbb047c0c2d7b18e62cfc6b44" translate="yes" xml:space="preserve">
          <source>Trims whitespace from the beginning and end of the string. Part of the ECMAScript 5 standard.</source>
          <target state="translated">Обрезает пробелы от начала и конца строки.Часть стандарта ECMAScript 5.</target>
        </trans-unit>
        <trans-unit id="589248aae63e048840e2320146a334266180f14a" translate="yes" xml:space="preserve">
          <source>Trims whitespace from the beginning of the string.</source>
          <target state="translated">Обрезает белый пробел от начала строки.</target>
        </trans-unit>
        <trans-unit id="f98e79143326b9112cafa11878a9f99a93d9f8f4" translate="yes" xml:space="preserve">
          <source>Trims whitespace from the end of the string.</source>
          <target state="translated">Обрезает пробелы в конце строки.</target>
        </trans-unit>
        <trans-unit id="4d46d56fedff8d9d8e85c637f94cca6486220b3d" translate="yes" xml:space="preserve">
          <source>Try it:</source>
          <target state="translated">Попробуй:</target>
        </trans-unit>
        <trans-unit id="ce521adbbb8a6a96e8c658ce0f73754df5d00657" translate="yes" xml:space="preserve">
          <source>Trying to delete a non-configurable property</source>
          <target state="translated">Попытка удаления неконфигурируемого свойства</target>
        </trans-unit>
        <trans-unit id="0bc27c8a219ca95024ca4076d021dd8abbc3f750" translate="yes" xml:space="preserve">
          <source>Trying to obtain the class of &lt;code&gt;fooInstance&lt;/code&gt; via &lt;code&gt;fooInstance.constructor.name&lt;/code&gt; won't give us the class name at all but a reference to the static class method. Example:</source>
          <target state="translated">Попытка получить класс &lt;code&gt;fooInstance&lt;/code&gt; через &lt;code&gt;fooInstance.constructor.name&lt;/code&gt; вообще не даст нам имени класса, кроме ссылки на метод статического класса. Пример:</target>
        </trans-unit>
        <trans-unit id="40cfb43d46ab09f148bea5b1d9e1aa5abb45e0bb" translate="yes" xml:space="preserve">
          <source>Trying to use &lt;code&gt;Object.defineProperty()&lt;/code&gt; on native objects throws an error.</source>
          <target state="translated">Попытка использовать &lt;code&gt;Object.defineProperty()&lt;/code&gt; для собственных объектов вызывает ошибку.</target>
        </trans-unit>
        <trans-unit id="42aa153f6061661d917a475e9e234bf07b1cb4ae" translate="yes" xml:space="preserve">
          <source>Tutorial on proxies</source>
          <target state="translated">Учебник по прокси-серверам</target>
        </trans-unit>
        <trans-unit id="f48575e167a871ba14022198cbf7f03912cfd2c1" translate="yes" xml:space="preserve">
          <source>Two Boolean operands are strictly equal if both are &lt;code&gt;true&lt;/code&gt; or both are &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Два булевых операнда строго равны , если оба &lt;code&gt;true&lt;/code&gt; или оба &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87c778f38cdd455f723836213ff5541f9312375a" translate="yes" xml:space="preserve">
          <source>Two Mozilla-specific caveats: First, if your code is JavaScript 1.7 or greater (for example in chrome code or when using the right &lt;code&gt;&amp;lt;script type=&quot;&quot;&amp;gt;&lt;/code&gt;) and is strict mode code, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;yield&lt;/code&gt; have the functionality they've had since those keywords were first introduced. But strict mode code on the web, loaded with &lt;code&gt;&amp;lt;script src=&quot;&quot;&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt;, won't be able to use &lt;code&gt;let&lt;/code&gt;/&lt;code&gt;yield&lt;/code&gt; as identifiers. Second, while ES5 unconditionally reserves the words &lt;code&gt;class&lt;/code&gt;, &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;, &lt;code&gt;extends&lt;/code&gt;, &lt;code&gt;import&lt;/code&gt;, and &lt;code&gt;super&lt;/code&gt;, before Firefox 5 Mozilla reserved them only in strict mode.</source>
          <target state="translated">Два Mozilla конкретных предостережений: Во- первых, если ваш код JavaScript 1.7 или выше (например , в хромированной коде или при использовании права &lt;code&gt;&amp;lt;script type=&quot;&quot;&amp;gt;&lt;/code&gt; ) и код строгого режима, &lt;code&gt;let&lt;/code&gt; и &lt;code&gt;yield&lt;/code&gt; имеют функциональность у них было с тех пор, как эти ключевые слова были впервые введены. Но код строгого режима в Интернете, загруженный с помощью &lt;code&gt;&amp;lt;script src=&quot;&quot;&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;script&amp;gt;...&amp;lt;/script&amp;gt;&lt;/code&gt; , не сможет использовать &lt;code&gt;let&lt;/code&gt; / &lt;code&gt;yield&lt;/code&gt; в качестве идентификаторов. Во-вторых, в то время как ES5 безоговорочно резервирует слова &lt;code&gt;class&lt;/code&gt; , &lt;code&gt;enum&lt;/code&gt; , &lt;code&gt;export&lt;/code&gt; , &lt;code&gt;extends&lt;/code&gt; , &lt;code&gt;import&lt;/code&gt; и &lt;code&gt;super&lt;/code&gt; , до Firefox 5 Mozilla зарезервировала их только в строгом режиме.</target>
        </trans-unit>
        <trans-unit id="c90bd8efd9aba75342919e60f01051208a1b0dbe" translate="yes" xml:space="preserve">
          <source>Two digit day of the month, padded on the left a zero if necessary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ba5800961ba03ca52214a88183a949ee3568cc" translate="yes" xml:space="preserve">
          <source>Two digit hour offset, e.g. &quot;14&quot;</source>
          <target state="translated">Смещение на две цифры в час,например &quot;14&quot;.</target>
        </trans-unit>
        <trans-unit id="8621e04d7232cc2dc37e5b84e933ec3bc06b72e3" translate="yes" xml:space="preserve">
          <source>Two digit minute offset, e.g. &quot;00&quot;</source>
          <target state="translated">Двухзначное минутное смещение,например &quot;00&quot;.</target>
        </trans-unit>
        <trans-unit id="d96364e22c9ee0fb4977ea215560ad73a809bd3c" translate="yes" xml:space="preserve">
          <source>Two digit years map to 1900 &amp;ndash; 1999</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc0b0e27681a4bfd0bb02dab459be7e1da3d54e" translate="yes" xml:space="preserve">
          <source>Two digit years map to 1900 - 1999</source>
          <target state="translated">Двухзначная карта 1900-1999 гг.</target>
        </trans-unit>
        <trans-unit id="bfdef2d93e0187c887de26ec520756ec15fd21f0" translate="yes" xml:space="preserve">
          <source>Two distinct objects are never equal for either strict or abstract comparisons.</source>
          <target state="translated">Два разных объекта никогда не бывают одинаковыми ни для строгих,ни для абстрактных сравнений.</target>
        </trans-unit>
        <trans-unit id="f9f69cd7d34f5586d87a3b0bb756cc56e3e4faee" translate="yes" xml:space="preserve">
          <source>Two factors influenced the introduction of arrow functions: shorter functions and no existence of &lt;code&gt;this&lt;/code&gt; keyword.</source>
          <target state="translated">На введение стрелочных функций повлияли два фактора: более короткие функции и отсутствие &lt;code&gt;this&lt;/code&gt; ключевого слова.</target>
        </trans-unit>
        <trans-unit id="fdb1ca806fe597861317d9dd8b9b0f4e1091e759" translate="yes" xml:space="preserve">
          <source>Two kinds of exceptions</source>
          <target state="translated">Два вида исключений</target>
        </trans-unit>
        <trans-unit id="7e45222dc719a42189ddea086a477a76a9f58c58" translate="yes" xml:space="preserve">
          <source>Two numbers are strictly equal when they are numerically equal (have the same number value). &lt;a href=&quot;../global_objects/nan&quot;&gt;NaN&lt;/a&gt; is not equal to anything, including NaN. Positive and negative zeros are equal to one another.</source>
          <target state="translated">Два числа строго равны, если они численно равны (имеют одинаковое числовое значение). &lt;a href=&quot;../global_objects/nan&quot;&gt;NaN&lt;/a&gt; не равно ничему, включая NaN. Положительные и отрицательные нули равны друг другу.</target>
        </trans-unit>
        <trans-unit id="b2dfc98cea6d4f038c0adeb2a717a43bd3cbd1bd" translate="yes" xml:space="preserve">
          <source>Two other functions, &lt;code&gt;Food&lt;/code&gt; and &lt;code&gt;Toy&lt;/code&gt;, invoke &lt;code&gt;Product&lt;/code&gt;, passing &lt;code&gt;this&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, and &lt;code&gt;price&lt;/code&gt;. &lt;code&gt;Product&lt;/code&gt; initializes the properties &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;price&lt;/code&gt;, both specialized functions define the &lt;code&gt;category&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767364ed74f9dfef1bba457b2a31bd97d28ec12b" translate="yes" xml:space="preserve">
          <source>Two strings are strictly equal when they have the same sequence of characters, same length, and same characters in corresponding positions.</source>
          <target state="translated">Две строки строго равны,когда они имеют одинаковую последовательность символов,одинаковую длину и одинаковые символы в соответствующих позициях.</target>
        </trans-unit>
        <trans-unit id="22e62aada2d2ed4e6ef25446cc5d425779700a8b" translate="yes" xml:space="preserve">
          <source>Two variables values can be swapped in one destructuring expression.</source>
          <target state="translated">Значения двух переменных можно поменять местами в одном разрушающем выражении.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="6d00d4d021cf7823f5159794a262002d93abec26" translate="yes" xml:space="preserve">
          <source>TypeError.prototype</source>
          <target state="translated">TypeError.prototype</target>
        </trans-unit>
        <trans-unit id="d88135ee691d49ad087f9ee359ecbe46ea9528b7" translate="yes" xml:space="preserve">
          <source>TypeError: &quot;x&quot; has no properties</source>
          <target state="translated">TypeError:&quot;x&quot; не имеет свойств</target>
        </trans-unit>
        <trans-unit id="fda9971b475c2dc350019d59b66915fe2fc5f709" translate="yes" xml:space="preserve">
          <source>TypeError: &quot;x&quot; is (not) &quot;y&quot;</source>
          <target state="translated">TypeError:&quot;x&quot;-это (не)&quot;y&quot;.</target>
        </trans-unit>
        <trans-unit id="0c6838555438ef7c5a3c7cfdcfb9cd2b062e017a" translate="yes" xml:space="preserve">
          <source>TypeError: &quot;x&quot; is not a constructor</source>
          <target state="translated">TypeError:&quot;x&quot; не конструктор</target>
        </trans-unit>
        <trans-unit id="b4b3f22cfb909a7ea57fce3d810b02b8c9c4944d" translate="yes" xml:space="preserve">
          <source>TypeError: &quot;x&quot; is not a function</source>
          <target state="translated">TypeError:&quot;x&quot; не является функцией</target>
        </trans-unit>
        <trans-unit id="0907c062321c618b949345d16de90e484526d617" translate="yes" xml:space="preserve">
          <source>TypeError: &quot;x&quot; is not a non-null object</source>
          <target state="translated">TypeError:&quot;x&quot; не является ненулевым объектом</target>
        </trans-unit>
        <trans-unit id="7f1a59d8d05baff12e8984f0d4f979e255eb85be" translate="yes" xml:space="preserve">
          <source>TypeError: &quot;x&quot; is read-only</source>
          <target state="translated">TypeError:&quot;x&quot; только для чтения</target>
        </trans-unit>
        <trans-unit id="93a64ae87ca50694ea65931b825ebbc14316100d" translate="yes" xml:space="preserve">
          <source>TypeError: 'x' is not iterable</source>
          <target state="translated">TypeError:'x' не является итерабельным.</target>
        </trans-unit>
        <trans-unit id="eadd3f3dd3d515bc2008a8c3ecbf97e414fadd33" translate="yes" xml:space="preserve">
          <source>TypeError: More arguments needed</source>
          <target state="translated">TypeError:Требуется больше аргументов</target>
        </trans-unit>
        <trans-unit id="2a7a8f3a34edd73e7329425eba83dee00c2a463e" translate="yes" xml:space="preserve">
          <source>TypeError: Reduce of empty array with no initial value</source>
          <target state="translated">TypeError:Сокращение пустого массива без начального значения</target>
        </trans-unit>
        <trans-unit id="fc7a003e68b18bd51a0e2c7b4e9aa739a2628e68" translate="yes" xml:space="preserve">
          <source>TypeError: X.prototype.y called on incompatible type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2062e055b44d15065484da17110096e531bf60f7" translate="yes" xml:space="preserve">
          <source>TypeError: can't access dead object</source>
          <target state="translated">TypeError:не может получить доступ к мертвому объекту.</target>
        </trans-unit>
        <trans-unit id="9eadd715821193dbb59f2029ac46c9c5acb67bac" translate="yes" xml:space="preserve">
          <source>TypeError: can't access property &quot;x&quot; of &quot;y&quot;</source>
          <target state="translated">TypeError:не может получить доступ к свойству &quot;x&quot; от &quot;y&quot;.</target>
        </trans-unit>
        <trans-unit id="ffdc9764529529f831000de89ae3e001a2f25d64" translate="yes" xml:space="preserve">
          <source>TypeError: can't assign to property &quot;x&quot; on &quot;y&quot;: not an object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad4dd8b46b5c3df52f2a0bc7f14317bff5729363" translate="yes" xml:space="preserve">
          <source>TypeError: can't define property &quot;x&quot;: &quot;obj&quot; is not extensible</source>
          <target state="translated">TypeError:не может определить свойство &quot;x&quot;:&quot;obj&quot; не расширяется</target>
        </trans-unit>
        <trans-unit id="e7eda2849a3fa05ea9821acd46a58275cc93af66" translate="yes" xml:space="preserve">
          <source>TypeError: can't delete non-configurable array element</source>
          <target state="translated">TypeError:не может удалить неконфигурируемый элемент массива</target>
        </trans-unit>
        <trans-unit id="9d546ed256470970d571134f12c516214042a8f8" translate="yes" xml:space="preserve">
          <source>TypeError: can't redefine non-configurable property &quot;x&quot;</source>
          <target state="translated">TypeError:не может переопределить неконфигурируемое свойство &quot;x&quot;.</target>
        </trans-unit>
        <trans-unit id="0f6a8ff06a09e02690b7ab0b6f620e52b063692d" translate="yes" xml:space="preserve">
          <source>TypeError: cannot use 'in' operator to search for 'x' in 'y'</source>
          <target state="translated">TypeError:не может использовать оператор 'in' для поиска 'x' в 'y'.</target>
        </trans-unit>
        <trans-unit id="ab60634a7b25184b9af6dbfe2b46a127f045f29c" translate="yes" xml:space="preserve">
          <source>TypeError: cyclic object value</source>
          <target state="translated">TypeError:циклическое значение объекта</target>
        </trans-unit>
        <trans-unit id="4c9fb78d7a67808097cba5dfefcb9df30ae2287d" translate="yes" xml:space="preserve">
          <source>TypeError: invalid 'instanceof' operand 'x'</source>
          <target state="translated">TypeError:invalid 'instanceof' operand 'x'</target>
        </trans-unit>
        <trans-unit id="804985ebf62efa82c95ca44aeb325d939fdd8196" translate="yes" xml:space="preserve">
          <source>TypeError: invalid Array.prototype.sort argument</source>
          <target state="translated">TypeError:недействительный аргумент Array.prototype.sort</target>
        </trans-unit>
        <trans-unit id="8bd8a78e630e8119c68b4da0cc755876148f3614" translate="yes" xml:space="preserve">
          <source>TypeError: invalid arguments</source>
          <target state="translated">TypeError:недействительные аргументы</target>
        </trans-unit>
        <trans-unit id="da892f4d86f86bbc79faa3ccbe6da8413753b79e" translate="yes" xml:space="preserve">
          <source>TypeError: invalid assignment to const &quot;x&quot;</source>
          <target state="translated">TypeError:недействительное присваивание const &quot;x&quot;</target>
        </trans-unit>
        <trans-unit id="504d7c54e7d6b0bedf86d99552944cda9b64611d" translate="yes" xml:space="preserve">
          <source>TypeError: property &quot;x&quot; is non-configurable and can't be deleted</source>
          <target state="translated">TypeError:свойство &quot;x&quot; не настраивается и не может быть удалено.</target>
        </trans-unit>
        <trans-unit id="d59f59299d78a1e084bc1ab108285fbe7f7ff24a" translate="yes" xml:space="preserve">
          <source>TypeError: setting getter-only property &quot;x&quot;</source>
          <target state="translated">TypeError:установка свойства &quot;x&quot; только для getter</target>
        </trans-unit>
        <trans-unit id="162a63e1f2a43ab2ace2903a72b848afcab003b2" translate="yes" xml:space="preserve">
          <source>TypeError: variable &quot;x&quot; redeclares argument</source>
          <target state="translated">TypeError:переменная &quot;x&quot; redeclares аргумент</target>
        </trans-unit>
        <trans-unit id="8668a6f3f477fa3a4eefc9753392f294a609fc27" translate="yes" xml:space="preserve">
          <source>Typed Array Specification</source>
          <target state="translated">Типовая спецификация массива</target>
        </trans-unit>
        <trans-unit id="0e3ced9152ebb319d31f440c27bb52b32c3d74e3" translate="yes" xml:space="preserve">
          <source>Typed Arrays</source>
          <target state="translated">типизированные массивы</target>
        </trans-unit>
        <trans-unit id="c32fcb187550b7bf4d1702cf9e0d2d8aeae8400f" translate="yes" xml:space="preserve">
          <source>Typed array invalid arguments</source>
          <target state="translated">Типизированный массив недействительных аргументов</target>
        </trans-unit>
        <trans-unit id="831e06c03f1dd990a2ed633ba22453d03ef9310d" translate="yes" xml:space="preserve">
          <source>Typed arrays</source>
          <target state="translated">типизированные массивы</target>
        </trans-unit>
        <trans-unit id="5e174443616f1ab6a6488259f4a4c0962e193335" translate="yes" xml:space="preserve">
          <source>Typed arrays, for example a &lt;a href=&quot;../global_objects/uint8array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt;, can't be constructed from a string. In fact, strings can't be in typed arrays at all.</source>
          <target state="translated">Типизированные массивы, например &lt;a href=&quot;../global_objects/uint8array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt; , не могут быть построены из строки. Фактически, строки вообще не могут быть в типизированных массивах.</target>
        </trans-unit>
        <trans-unit id="a675e12d09245bf3e11559a6c906caf65a0c34ae" translate="yes" xml:space="preserve">
          <source>TypedArray</source>
          <target state="translated">TypedArray</target>
        </trans-unit>
        <trans-unit id="9565828e7e18feab488461ba94cc0f8b6e1c6d60" translate="yes" xml:space="preserve">
          <source>TypedArray objects</source>
          <target state="translated">TypedArray объекты</target>
        </trans-unit>
        <trans-unit id="df563443a3d6070fb25ab6fc8e7e2386c0ceb9a1" translate="yes" xml:space="preserve">
          <source>TypedArray objects differ from each other in the number of bytes per element and in the way the bytes are interpreted. The &lt;code&gt;BYTES_PER_ELEMENT&lt;/code&gt; constant contains the number of bytes each element in the given TypedArray has.</source>
          <target state="translated">Объекты TypedArray отличаются друг от друга количеством байтов на элемент и способом интерпретации байтов. Константа &lt;code&gt;BYTES_PER_ELEMENT&lt;/code&gt; содержит количество байтов, которое имеет каждый элемент в данном TypedArray.</target>
        </trans-unit>
        <trans-unit id="8308ed4a83ee6818d0174d014e66c11e46202d6a" translate="yes" xml:space="preserve">
          <source>TypedArray objects differ from each other in the number of bytes per element and in the way the bytes are interpreted. The &lt;code&gt;name&lt;/code&gt; property describes of what data type the array consists. The first part can be &lt;code&gt;Int&lt;/code&gt; for &quot;integer&quot; or &lt;code&gt;Uint&lt;/code&gt; for an &quot;unsigned integer&quot;, also &lt;code&gt;Float&lt;/code&gt; for &quot;floating point&quot; is used. The second part is a number describing the bit-size of the array. Finally, the object type is &lt;code&gt;Array&lt;/code&gt;, with &lt;code&gt;ClampedArray&lt;/code&gt; as a special case. Please see &lt;a href=&quot;../uint8clampedarray&quot;&gt;&lt;code&gt;Uint8ClampedArray&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">Объекты TypedArray отличаются друг от друга количеством байтов на элемент и способом интерпретации байтов. Свойство &lt;code&gt;name&lt;/code&gt; описывает, из какого типа данных состоит массив. Первая часть может быть &lt;code&gt;Int&lt;/code&gt; для &amp;laquo;целого числа&amp;raquo; или &lt;code&gt;Uint&lt;/code&gt; для &amp;laquo;целого числа без знака&amp;raquo;, также используется &lt;code&gt;Float&lt;/code&gt; для &amp;laquo;числа с плавающей запятой&amp;raquo;. Вторая часть - это число, описывающее разрядность массива. Наконец, тип объекта - &lt;code&gt;Array&lt;/code&gt; , причем &lt;code&gt;ClampedArray&lt;/code&gt; является особым случаем. Дополнительные сведения см. В &lt;a href=&quot;../uint8clampedarray&quot;&gt; &lt;code&gt;Uint8ClampedArray&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09d7acc3385ee25cf71171846ae0bfe859fe9a73" translate="yes" xml:space="preserve">
          <source>TypedArray prototype</source>
          <target state="translated">прототип TypedArray</target>
        </trans-unit>
        <trans-unit id="d4ce014df3421685733cf5ffe8d38b6f3c599df4" translate="yes" xml:space="preserve">
          <source>TypedArray.@@species</source>
          <target state="translated">TypedArray.@@species</target>
        </trans-unit>
        <trans-unit id="e489cfc13d902aa038749ff4fe48077ca0a7211c" translate="yes" xml:space="preserve">
          <source>TypedArray.BYTES_PER_ELEMENT</source>
          <target state="translated">TypedArray.BYTES_PER_ELEMENT</target>
        </trans-unit>
        <trans-unit id="adf7db6dc7263fcbaca680036e73631182759551" translate="yes" xml:space="preserve">
          <source>TypedArray.from</source>
          <target state="translated">TypedArray.from</target>
        </trans-unit>
        <trans-unit id="8551dc8209fb18b38be485c43801c646aade3a70" translate="yes" xml:space="preserve">
          <source>TypedArray.name</source>
          <target state="translated">TypedArray.name</target>
        </trans-unit>
        <trans-unit id="9a0fb51cb88bee1e979510c2e27b232ed2323ee7" translate="yes" xml:space="preserve">
          <source>TypedArray.of</source>
          <target state="translated">TypedArray.of</target>
        </trans-unit>
        <trans-unit id="059f9b7c5f42d42cd8daa1d1d8596ee8f58560aa" translate="yes" xml:space="preserve">
          <source>TypedArray.prototype</source>
          <target state="translated">TypedArray.prototype</target>
        </trans-unit>
        <trans-unit id="928297cbc22683b1dcaf8e3a80b77c161ec670c5" translate="yes" xml:space="preserve">
          <source>Typical invalid assignments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6575abbbad2379dfd5301919609cfbc4ce6b7d0" translate="yes" xml:space="preserve">
          <source>U+0009</source>
          <target state="translated">U+0009</target>
        </trans-unit>
        <trans-unit id="1f49cae739d7edd9863d8bd81c01910dbbc089fd" translate="yes" xml:space="preserve">
          <source>U+000A</source>
          <target state="translated">U+000A</target>
        </trans-unit>
        <trans-unit id="87323b9e4dc26abc74fce3bd43d832f3f2dd8b38" translate="yes" xml:space="preserve">
          <source>U+000B</source>
          <target state="translated">U+000B</target>
        </trans-unit>
        <trans-unit id="ff0ef333b5e697ca7c0c191c7f65e6b0975a9fde" translate="yes" xml:space="preserve">
          <source>U+000C</source>
          <target state="translated">U+000C</target>
        </trans-unit>
        <trans-unit id="027e1c393361cda817913c6c63c5749c1a1ebf1c" translate="yes" xml:space="preserve">
          <source>U+000D</source>
          <target state="translated">U+000D</target>
        </trans-unit>
        <trans-unit id="28871eed17ccf0d0ed7cb83461497517a2d9d4b0" translate="yes" xml:space="preserve">
          <source>U+000D &amp;lt;CR&amp;gt;,</source>
          <target state="translated">U + 000D &amp;lt;CR&amp;gt;,</target>
        </trans-unit>
        <trans-unit id="538258cce356d6acc3d1b59869631a1b26b44251" translate="yes" xml:space="preserve">
          <source>U+0020</source>
          <target state="translated">U+0020</target>
        </trans-unit>
        <trans-unit id="ac91663a7dc88186dc866819cba4ad5bba584a83" translate="yes" xml:space="preserve">
          <source>U+005C (backslash),</source>
          <target state="translated">U+005C (обратная косая черта),</target>
        </trans-unit>
        <trans-unit id="8588a5507dea10de63bbd8777f9338ad2cd338d0" translate="yes" xml:space="preserve">
          <source>U+005C \ (backslash),</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fec4782338f4a34ab331b24e3952b0e5cb1ad5d" translate="yes" xml:space="preserve">
          <source>U+00A0</source>
          <target state="translated">U+00A0</target>
        </trans-unit>
        <trans-unit id="18beeeef428ffc1df892b484afcdbd03b7363497" translate="yes" xml:space="preserve">
          <source>U+2028</source>
          <target state="translated">U+2028</target>
        </trans-unit>
        <trans-unit id="e3743466af5e5ae35b041ce90fbacc309905247d" translate="yes" xml:space="preserve">
          <source>U+2029</source>
          <target state="translated">U+2029</target>
        </trans-unit>
        <trans-unit id="46d53800c7cc79a0380ef914950cceb919311d12" translate="yes" xml:space="preserve">
          <source>URI encoding or decoding wasn't successful. An argument given to either the &lt;a href=&quot;../global_objects/decodeuri&quot;&gt;&lt;code&gt;decodeURI&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/encodeuri&quot;&gt;&lt;code&gt;encodeURI&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/encodeuricomponent&quot;&gt;&lt;code&gt;encodeURIComponent&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../global_objects/decodeuricomponent&quot;&gt;&lt;code&gt;decodeURIComponent&lt;/code&gt;&lt;/a&gt; function was not valid, so that the function was unable encode or decode properly.</source>
          <target state="translated">Кодирование или декодирование URI не удалось. Аргумент, переданный &lt;a href=&quot;../global_objects/decodeuri&quot;&gt; &lt;code&gt;decodeURI&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/encodeuri&quot;&gt; &lt;code&gt;encodeURI&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../global_objects/encodeuricomponent&quot;&gt; &lt;code&gt;encodeURIComponent&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/decodeuricomponent&quot;&gt; &lt;code&gt;decodeURIComponent&lt;/code&gt; ,&lt;/a&gt; недействителен, поэтому функция не смогла правильно кодировать или декодировать.</target>
        </trans-unit>
        <trans-unit id="d093bdaa782f59ac13b897f7b9054b31839f2bb9" translate="yes" xml:space="preserve">
          <source>URIError</source>
          <target state="translated">URIError</target>
        </trans-unit>
        <trans-unit id="fcd826fdce3e680ba53ae40238970f0c243a035c" translate="yes" xml:space="preserve">
          <source>URIError.prototype</source>
          <target state="translated">URIError.prototype</target>
        </trans-unit>
        <trans-unit id="24dfa6bae3df7e359ff385d1cf0198596d4240ba" translate="yes" xml:space="preserve">
          <source>URIError: malformed URI sequence</source>
          <target state="translated">URIError:некорректная последовательность URI</target>
        </trans-unit>
        <trans-unit id="bdfd4d8d6952777c39403b2d2e2f8a2a52bf255f" translate="yes" xml:space="preserve">
          <source>UTC</source>
          <target state="translated">UTC</target>
        </trans-unit>
        <trans-unit id="8b25ca8547ac04d71799be3d0a64dd85bdecc8c2" translate="yes" xml:space="preserve">
          <source>UTC)</source>
          <target state="translated">UTC)</target>
        </trans-unit>
        <trans-unit id="cfef49be4c8add6d6446b4adcc537017014f4915" translate="yes" xml:space="preserve">
          <source>UTC+3</source>
          <target state="translated">UTC+3</target>
        </trans-unit>
        <trans-unit id="fe85076f264e61cd020d0710115899e483ea0989" translate="yes" xml:space="preserve">
          <source>UTC-8</source>
          <target state="translated">UTC-8</target>
        </trans-unit>
        <trans-unit id="259c0ebc019175a9e0bd64273d4462cdb56f289e" translate="yes" xml:space="preserve">
          <source>UTF-16 code unit / Unicode code point between &lt;code&gt;U+0000&lt;/code&gt; and &lt;code&gt;U+FFFF&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d758c4107adfa362d034a7ff3fa05dfc9926675d" translate="yes" xml:space="preserve">
          <source>UTF-32 code unit / Unicode code point between &lt;code&gt;U+0000&lt;/code&gt; and &lt;code&gt;U+10FFFF&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3d5b2abcbe69d249b5c141c82edeacc8a5da9a" translate="yes" xml:space="preserve">
          <source>Udacity: JavaScript Promises</source>
          <target state="translated">Удручённость:JavaScript обещает</target>
        </trans-unit>
        <trans-unit id="ee17a2d4842b1562f38fb267817829d58a3dedfb" translate="yes" xml:space="preserve">
          <source>Uint16Array</source>
          <target state="translated">Uint16Array</target>
        </trans-unit>
        <trans-unit id="c5710667eadea14743f763131bdbd164d4d4297f" translate="yes" xml:space="preserve">
          <source>Uint16Array.length</source>
          <target state="translated">Uint16Array.length</target>
        </trans-unit>
        <trans-unit id="633c2aa79d88322b5d53222bfe0bb765531ece57" translate="yes" xml:space="preserve">
          <source>Uint32Array</source>
          <target state="translated">Uint32Array</target>
        </trans-unit>
        <trans-unit id="9a32be0557e5b962a300fae5eae084606cc75c5b" translate="yes" xml:space="preserve">
          <source>Uint32Array.length</source>
          <target state="translated">Uint32Array.length</target>
        </trans-unit>
        <trans-unit id="9dafd0a91ea1eadf5a4b323d71716a37f430543c" translate="yes" xml:space="preserve">
          <source>Uint8Array</source>
          <target state="translated">Uint8Array</target>
        </trans-unit>
        <trans-unit id="ad6c3f16d622ed3c29d4d93a881fdbf40e238c0f" translate="yes" xml:space="preserve">
          <source>Uint8Array.length</source>
          <target state="translated">Uint8Array.length</target>
        </trans-unit>
        <trans-unit id="80d3d1902630c787d741b39af0ddaba8dab6c5b7" translate="yes" xml:space="preserve">
          <source>Uint8ClampedArray</source>
          <target state="translated">Uint8ClampedArray</target>
        </trans-unit>
        <trans-unit id="3a7bddb5e24e03c48a5b389efa8055d3f2f596c5" translate="yes" xml:space="preserve">
          <source>Uint8ClampedArray.length</source>
          <target state="translated">Uint8ClampedArray.length</target>
        </trans-unit>
        <trans-unit id="bb9756e2dd53d8b412b093978529a20e6d87e501" translate="yes" xml:space="preserve">
          <source>Unary Negation</source>
          <target state="translated">Унарное отторжение</target>
        </trans-unit>
        <trans-unit id="d2cedd82f30bde7abbd2d251adf7228473d72aed" translate="yes" xml:space="preserve">
          <source>Unary Plus</source>
          <target state="translated">Унарный плюс</target>
        </trans-unit>
        <trans-unit id="513b253806a1a356b911c79a51a7bafa6bc52f0a" translate="yes" xml:space="preserve">
          <source>Unary negation (-)</source>
          <target state="translated">унарное отрицание (-)</target>
        </trans-unit>
        <trans-unit id="befe22eda70bd6b5e1a787a97596068e0774676c" translate="yes" xml:space="preserve">
          <source>Unary negation (&lt;code&gt;-&lt;/code&gt;)</source>
          <target state="translated">Унарное отрицание ( &lt;code&gt;-&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ca09f5dbf89ea3eafb5ab27f217efe0b06a097c4" translate="yes" xml:space="preserve">
          <source>Unary operators</source>
          <target state="translated">Унарные операторы</target>
        </trans-unit>
        <trans-unit id="abac30e3a2acb94fc462772b11ad68a9aa79c850" translate="yes" xml:space="preserve">
          <source>Unary plus (+)</source>
          <target state="translated">Унарный плюс (+)</target>
        </trans-unit>
        <trans-unit id="6bddeb4ef451282ac6aa78a777db40cd95d2a793" translate="yes" xml:space="preserve">
          <source>Unary plus (&lt;code&gt;+&lt;/code&gt;)</source>
          <target state="translated">Унарный плюс ( &lt;code&gt;+&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2ae6cd0092c46d08603bf82278684279219f6c3a" translate="yes" xml:space="preserve">
          <source>Unconditional &lt;code&gt;catch&lt;/code&gt; clause</source>
          <target state="translated">Предложение безусловного &lt;code&gt;catch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf180ccf6ec4ce4f39c2feff2a257878d4d851c6" translate="yes" xml:space="preserve">
          <source>Unconditional catch-block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5140ee34748e590252ad94ce595eb05fc7886054" translate="yes" xml:space="preserve">
          <source>Undeclared var</source>
          <target state="translated">незадекларированный лак</target>
        </trans-unit>
        <trans-unit id="0646f4afd90c8fdb87bbcb57b63ee1911f5a9a46" translate="yes" xml:space="preserve">
          <source>Undefined</source>
          <target state="translated">Undefined</target>
        </trans-unit>
        <trans-unit id="fb9dc4c2e3785b2c955042e52cbcc556d0858881" translate="yes" xml:space="preserve">
          <source>Undefined prop</source>
          <target state="translated">Неопределённая опора</target>
        </trans-unit>
        <trans-unit id="3fec4e60edf8ef578608ef502f4b2bacf3d7f069" translate="yes" xml:space="preserve">
          <source>Unescaped strings</source>
          <target state="translated">Непроизведенные струны</target>
        </trans-unit>
        <trans-unit id="9fea685493a4859bb8dc7e48575411686bbd53e5" translate="yes" xml:space="preserve">
          <source>Unexpected token</source>
          <target state="translated">неожиданный знак</target>
        </trans-unit>
        <trans-unit id="74dc936b263127fe4e9c42a9713ee6214e5bfcfe" translate="yes" xml:space="preserve">
          <source>Unexpected type</source>
          <target state="translated">Неожиданный тип</target>
        </trans-unit>
        <trans-unit id="3aa854c653b7eb660e3b2a7248d1ad77d3b5c56a" translate="yes" xml:space="preserve">
          <source>Unfortunately, &lt;code&gt;next()&lt;/code&gt; is asymmetric, but that can&amp;rsquo;t be helped: It always sends a value to the currently suspended &lt;code&gt;yield&lt;/code&gt;, but returns the operand of the following &lt;code&gt;yield&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab0bd9a6126ee4b9d7538d5c6cba7aa587f31ed" translate="yes" xml:space="preserve">
          <source>Unicode</source>
          <target state="translated">Unicode</target>
        </trans-unit>
        <trans-unit id="5a088d8dac52305ddd74345a8b035629f9284105" translate="yes" xml:space="preserve">
          <source>Unicode Standard Annex #15, Unicode Normalization Forms</source>
          <target state="translated">Стандартное приложение № 15 к стандарту Юникода,формы стандартизации Юникода</target>
        </trans-unit>
        <trans-unit id="48c01f8059a880d3490d40f931d17143df746745" translate="yes" xml:space="preserve">
          <source>Unicode assigns a unique numerical value, called a &lt;em&gt;code point&lt;/em&gt;, to each character. For example, the code point for &lt;code&gt;&quot;A&quot;&lt;/code&gt; is given as U+0041. However, sometimes more than one code point, or sequence of code points, can represent the same abstract character &amp;mdash; the character &lt;code&gt;&quot;&amp;ntilde;&quot;&lt;/code&gt; for example can be represented by either of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c11da5db018877d7b5c0c5897bd818df342deb" translate="yes" xml:space="preserve">
          <source>Unicode code point escapes</source>
          <target state="translated">Побегов точечного кода Юникода</target>
        </trans-unit>
        <trans-unit id="53798ed42b9b310fc8897a38bd9f5a8ec102f8a2" translate="yes" xml:space="preserve">
          <source>Unicode code point escapes \u{xxxxxx}</source>
          <target state="translated">Точковый код Юникода ускользает \u{xxxx}.</target>
        </trans-unit>
        <trans-unit id="ab691dc2f55ca32e25cc09e838e42a2db66ff157" translate="yes" xml:space="preserve">
          <source>Unicode code point escapes indicated by &quot;&lt;code&gt;\u{}&lt;/code&gt;&quot;, for example &lt;code&gt;\u{2F804}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2520911378d53256963efaa10beebc649575df9" translate="yes" xml:space="preserve">
          <source>Unicode code point escapes indicated by &quot;\u{}&quot;, for example &lt;code&gt;\u{2F804}&lt;/code&gt;</source>
          <target state="translated">Экранирование кодовой точки Unicode, обозначенное &quot;\ u {}&quot;, например &lt;code&gt;\u{2F804}&lt;/code&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
