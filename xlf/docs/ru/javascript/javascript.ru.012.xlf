<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="3e15c73b4c713279dbed6f2e5dbd7d3b905f2c78" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Uint16Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает количество элементов, содержащихся в &lt;code&gt;Uint16Array&lt;/code&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e98773f6e7b6ce8cd74d5f64138b1417db52a0a" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;Uint32Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает количество элементов, содержащихся в &lt;code&gt;Uint32Array&lt;/code&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5184d4d182d71988ec9d2e96539fd859f73ee18b" translate="yes" xml:space="preserve">
          <source>Returns the number of elements hold in the &lt;code&gt;UintClamped8Array&lt;/code&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает количество элементов, содержащихся в &lt;code&gt;UintClamped8Array&lt;/code&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="efaf70c3351c21b92005b343a2c224e6569810ae" translate="yes" xml:space="preserve">
          <source>Returns the number of key/value pairs in the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">Возвращает количество пар ключ / значение в объекте &lt;code&gt;Map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="281a035fb51936775e5c3c3c494e713ab4367ede" translate="yes" xml:space="preserve">
          <source>Returns the number of leading zeroes of a 32-bit integer.</source>
          <target state="translated">Возвращает количество лидирующих нулей 32-битного целого.</target>
        </trans-unit>
        <trans-unit id="f1b2890eefe38d3f9f7738c45cf2595c392ebf05" translate="yes" xml:space="preserve">
          <source>Returns the number of leading zeroes of the 32-bit integer &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02ed9df823bac18fd14977042fc9beb29ab8db1" translate="yes" xml:space="preserve">
          <source>Returns the number of values in the &lt;code&gt;Set&lt;/code&gt; object.</source>
          <target state="translated">Возвращает количество значений в объекте &lt;code&gt;Set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="407b07d68cbc4f9198bc0c12e8f6fd9d4d701b52" translate="yes" xml:space="preserve">
          <source>Returns the number of woken up agents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e329321de79e96555332d9f6ab5f94ed5bf313" translate="yes" xml:space="preserve">
          <source>Returns the numeral system used by the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d88184bf0cfc18fc023b22ab80b21320bf203b3" translate="yes" xml:space="preserve">
          <source>Returns the numeric value corresponding to the current time - the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC, with leap seconds ignored.</source>
          <target state="translated">Возвращает числовое значение,соответствующее текущему времени-количество миллисекунд,прошедших с 1 января 1970 00:00:00 UTC,при этом високосные секунды игнорируются.</target>
        </trans-unit>
        <trans-unit id="2a93cd44ebae9901bb61434b91dfb76fb55e2884" translate="yes" xml:space="preserve">
          <source>Returns the numeric value corresponding to the current time&amp;mdash;the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC, with leap seconds ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b588062f4837055e361d664bde1504a93b75108b" translate="yes" xml:space="preserve">
          <source>Returns the numeric value of the specified date as the number of milliseconds since January 1, 1970, 00:00:00 UTC (negative for prior times).</source>
          <target state="translated">Возвращает числовое значение указанной даты как количество миллисекунд,начиная с 1 января 1970 года,00:00:00 UTC (отрицательное для предыдущих времен).</target>
        </trans-unit>
        <trans-unit id="7cff324416c4b9bf51c0d195761b20a1dc1ae440" translate="yes" xml:space="preserve">
          <source>Returns the numeric value of the specified date as the number of milliseconds since January 1, 1970, 00:00:00 UTC. (Negative values are returned for prior times.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2bacf7fc0ada8d062ce81e5d4d307bc325630c" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;BigInt64Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. This is fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf5db2b011b40dbf83aa7acf7786091e294e1c5" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;BigUint64Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. This is fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec00782e0868b166d62bc070a1bc9406c8a78de8" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Float32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Float32Array&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7f641123d19682832e033baf21362d4c1bfde351" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Float64Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Float64Array&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfad84a31295285e6968dc503d343b728ad85aad" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Int16Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Int16Array&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e57fb2aff390bef7fcf05dad2eb5a0d9f456740" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Int32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Int32Array&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="989a93991011bcdb55dce58397cfb0ad8fd0a889" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Int8Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Int8Array&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a7a795490b3e5dec0ce363baef03683cfee4e2d3" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Uint16Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Uint16Array&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0afa539bd931a3f773ac0d0ae15a376259b445cf" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Uint32Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Uint32Array&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bdc7a0d1a1e1c7ae6f66d4538c2e6e97dd229e2e" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Uint8Array&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Uint8Array&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="590b3a07367987e21adf455dc8561cb321a344de" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the &lt;code&gt;Uint8ClampedArray&lt;/code&gt; from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) &lt;code&gt;Uint8ClampedArray&lt;/code&gt; от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="94c11e3e9c505b9d93a54e9fb2294d00af0d504a" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the typed array from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) типизированного массива от начала его &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f5a1a70b5746d65db9bc87ffc8479a3b99b1c88e" translate="yes" xml:space="preserve">
          <source>Returns the offset (in bytes) of the typed array from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Возвращает смещение (в байтах) типизированного массива от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="125c0ddff9b2d9f6fee418fff85533442135ddf9" translate="yes" xml:space="preserve">
          <source>Returns the optional value passed to the generator's &lt;code&gt;next()&lt;/code&gt; method to resume its execution.</source>
          <target state="translated">Возвращает необязательное значение, переданное методу генератора &lt;code&gt;next()&lt;/code&gt; для возобновления его выполнения.</target>
        </trans-unit>
        <trans-unit id="adfbea725f95fe226f47ec9b24d25d5ebe857b91" translate="yes" xml:space="preserve">
          <source>Returns the part of the &lt;code&gt;Locale&lt;/code&gt; that indicates the Locale's calendar era.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70924e54715dfe73c804ce78e3cd61c1dd5ab4e8" translate="yes" xml:space="preserve">
          <source>Returns the positive square root of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603e19debf1cd8317db233d48c9762b700691f5a" translate="yes" xml:space="preserve">
          <source>Returns the positive square root of a number.</source>
          <target state="translated">Возвращает положительный квадратный корень числа.</target>
        </trans-unit>
        <trans-unit id="91bf152a328b7824b5e27560ccd88dfe595c01f2" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Возвращает примитивное значение объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; . Переопределяет метод &lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94772639670b28f9db2ba925a9f76d419bda4d88" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of a &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Возвращает примитивное значение объекта &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; . Переопределяет метод &lt;a href=&quot;object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0879fcdb4ce97db28ce8156cc59a2b9a9b9e83c7" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Возвращает примитивное значение &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; объекта. Переопределяет метод &lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f785430d89ea5ca414adf8c38576704f5080089" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Возвращает примитивное значение объекта &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="599fbb269723bab84a6141fcf4c757f572d15f31" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Возвращает примитивное значение объекта &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; . Переопределяет метод &lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f02f3656e09fe61a608768c89714308bccebefc1" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Возвращает примитивное значение &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; объекта. Переопределяет метод &lt;a href=&quot;object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50a52d31cdcaf7ed86b40564a1fcdd340f901ba6" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Возвращает примитивное значение объекта &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dcf5f45e490efe01d9f03d39d265f4966fe16bb7" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object. Overrides the &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Возвращает примитивное значение объекта &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; . Переопределяет метод &lt;a href=&quot;object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7be366caa5febdfcbbdfda49ac5d0eb80f0afa5a" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the specified object.</source>
          <target state="translated">Возвращает примитивное значение указанного объекта.</target>
        </trans-unit>
        <trans-unit id="529a1c875dbadd1134cfaa038ef3e9b1cd8fa28f" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the specified object. Overrides the &lt;a href=&quot;../object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Возвращает примитивное значение указанного объекта. Переопределяет метод &lt;a href=&quot;../object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bba3ead7196bd7407b00dbdd3ad58264265795d2" translate="yes" xml:space="preserve">
          <source>Returns the primitive value of the specified object. Overrides the &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;Object.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Возвращает примитивное значение указанного объекта. Переопределяет метод &lt;a href=&quot;object/valueof&quot;&gt; &lt;code&gt;Object.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="561e3ca4ede37c78f745c53329d3e5f4ce2cf9b0" translate="yes" xml:space="preserve">
          <source>Returns the prototype (internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property) of the specified object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0948acc6941e3008cf4275cf714bc1e56481ec8a" translate="yes" xml:space="preserve">
          <source>Returns the prototype of the specified object.</source>
          <target state="translated">Возвращает прототип указанного объекта.</target>
        </trans-unit>
        <trans-unit id="41db22a44fa90b963b88f75fb9c25041670fe638" translate="yes" xml:space="preserve">
          <source>Returns the region of the world (usually a country) associated with the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97f703620bcc1599ddde6d36f393862a54ef4ee" translate="yes" xml:space="preserve">
          <source>Returns the result of a 32-bit integer multiplication.</source>
          <target state="translated">Возвращает результат 32-битного целочисленного умножения.</target>
        </trans-unit>
        <trans-unit id="a06e38e60e947c50e3f62c86aa26ddf368f97603" translate="yes" xml:space="preserve">
          <source>Returns the result of the 32-bit integer multiplication of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;y&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9636acbd9da1405e80ae5d0672f89012970be9" translate="yes" xml:space="preserve">
          <source>Returns the script used for writing the particular language used in the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c90b9bb115ac0360b508d1f1f1a98d77cfca459" translate="yes" xml:space="preserve">
          <source>Returns the seconds (0-59) in the specified date according to local time.</source>
          <target state="translated">Возвращает секунды (0-59)в указанную дату по местному времени.</target>
        </trans-unit>
        <trans-unit id="7d77a669a7502999bb76b13883c14d24d38526df" translate="yes" xml:space="preserve">
          <source>Returns the seconds (0-59) in the specified date according to universal time.</source>
          <target state="translated">Возвращает секунды (0-59)в указанной дате в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="5a224fc1327a84b24debd742527ce015fcf6eb68" translate="yes" xml:space="preserve">
          <source>Returns the seconds (&lt;code&gt;0&lt;/code&gt;&amp;ndash;&lt;code&gt;59&lt;/code&gt;) in the specified date according to local time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ad8c60c851912b36fa4323c7c076306cc396b9" translate="yes" xml:space="preserve">
          <source>Returns the seconds (&lt;code&gt;0&lt;/code&gt;&amp;ndash;&lt;code&gt;59&lt;/code&gt;) in the specified date according to universal time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19c4b3874cc3f34b946197c80588fffccc37b5f" translate="yes" xml:space="preserve">
          <source>Returns the sign of the &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;, indicating whether &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; is positive, negative, or zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08aca786a2876b8fc545ecc0d4de6866f390de80" translate="yes" xml:space="preserve">
          <source>Returns the sign of the x, indicating whether x is positive, negative or zero.</source>
          <target state="translated">Возвращает знак х,указывающий,является ли х положительным,отрицательным или нулевым.</target>
        </trans-unit>
        <trans-unit id="9b4287fb3679070f957a28a40d23cb4f17d80f76" translate="yes" xml:space="preserve">
          <source>Returns the sine of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8460cf56fd3657bdccefad2610dbb3df328669f8" translate="yes" xml:space="preserve">
          <source>Returns the sine of a number.</source>
          <target state="translated">Возвращает синус числа.</target>
        </trans-unit>
        <trans-unit id="9f95d266e7f0555c3d216fbb2b2d318e4003cc58" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bf033f7107839197600c893b817513a6c17e0d" translate="yes" xml:space="preserve">
          <source>Returns the smallest integer greater than or equal to a number.</source>
          <target state="translated">Возвращает наименьшее целое число,большее или равное числу.</target>
        </trans-unit>
        <trans-unit id="5cf50159d4423bfae07d2a7bfc72e738a1066cc5" translate="yes" xml:space="preserve">
          <source>Returns the smallest of zero or more numbers.</source>
          <target state="translated">Возвращает наименьшее из нулей и более чисел.</target>
        </trans-unit>
        <trans-unit id="9ed58f6cf23588acbc882202b4048df252bb34fa" translate="yes" xml:space="preserve">
          <source>Returns the square root of the sum of squares of its arguments.</source>
          <target state="translated">Возвращает квадратный корень суммы квадратов его аргументов.</target>
        </trans-unit>
        <trans-unit id="19c7d2ef4b87d7eeed39767d9f31357b062583b1" translate="yes" xml:space="preserve">
          <source>Returns the string &lt;code&gt;&quot;Math&quot;&lt;/code&gt;.</source>
          <target state="translated">Возвращает строку &lt;code&gt;&quot;Math&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a30cc4b6e72d2b02eb51a11a2af9a1dcb66b4a7" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name (e.g, &lt;code&gt;&quot;Int8Array&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea70b50747eb2a70fc483cc7c0766d516accf854" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. E.g &quot;Int8Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора.Например,&quot;Int8Array&quot;.</target>
        </trans-unit>
        <trans-unit id="6e242b1e897f40fef94f37582164b82669568990" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;BigInt64Array&lt;/code&gt; type, this is &quot;BigInt64Array&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e17eb5228f99213012e55e50a406b638f414f04" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;BigUint64Array&lt;/code&gt; type this is &quot;BigUint64Array&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d86bc2f075a437cea1c2d849790ce510a03065" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Float32Array&lt;/code&gt; type: &quot;Float32Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Float32Array&lt;/code&gt; : &amp;laquo;Float32Array&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="8f10338ccdd5d428199e7c8453dbbef85124daa2" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Float64Array&lt;/code&gt; type: &quot;Float64Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Float64Array&lt;/code&gt; : &amp;laquo;Float64Array&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="575c6eb95346844fc56fdd9429ac6aa7484b98df" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Int16Array&lt;/code&gt; type: &quot;&lt;code&gt;Int16Array&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a1173a71c2b1b2f52c46c10982d8fe14e43d0e" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Int16Array&lt;/code&gt; type: &quot;Int16Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Int16Array&lt;/code&gt; : &amp;laquo;Int16Array&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="4eaefd23fcfad89ed62f7b4964de2d1e55eb8a33" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Int32Array&lt;/code&gt; type: &quot;Int32Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Int32Array&lt;/code&gt; : &amp;laquo;Int32Array&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f9c2b3d3917c358bbe4ae6b263eccb635cafdcc6" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Int8Array&lt;/code&gt; type: &quot;&lt;code&gt;Int8Array&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b0411e149d1ddff85456a32b43d405264fc1ab" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Int8Array&lt;/code&gt; type: &quot;Int8Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Int8Array&lt;/code&gt; : &amp;laquo;Int8Array&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="6abd513c66c3fff30d3813beb2d0b24734b0b4c2" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint16Array&lt;/code&gt; type: &quot;&lt;code&gt;Uint16Array&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb195f90d71070656397296888a65ec77ce7c803" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint16Array&lt;/code&gt; type: &quot;Uint16Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Uint16Array&lt;/code&gt; : &amp;laquo;Uint16Array&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="abcab85fd042743551fe26b19c1da0e14fb2dab3" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint32Array&lt;/code&gt; type: &quot;Uint32Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Uint32Array&lt;/code&gt; : &amp;laquo;Uint32Array&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="28a8c2ea454ac21db2b967ee8ae027f5fb3a9654" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint8Array&lt;/code&gt; type: &quot;&lt;code&gt;Uint8Array&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9e5e871070608726b868c734b9637d43755991" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint8Array&lt;/code&gt; type: &quot;Uint8Array&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Uint8Array&lt;/code&gt; : &amp;laquo;Uint8Array&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="0949445d651b5832f36d6f48d752ffc28798073a" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint8ClampedArray&lt;/code&gt; type: &quot;&lt;code&gt;Uint8ClampedArray&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b5a574bd4d9ef18044813c1a939abede0fa964" translate="yes" xml:space="preserve">
          <source>Returns the string value of the constructor name. In the case of the &lt;code&gt;Uint8ClampedArray&lt;/code&gt; type: &quot;Uint8ClampedArray&quot;.</source>
          <target state="translated">Возвращает строковое значение имени конструктора. В случае типа &lt;code&gt;Uint8ClampedArray&lt;/code&gt; : &amp;laquo;Uint8ClampedArray&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="1486bebd2522777aef78be8c8edd860bc4d4c5a8" translate="yes" xml:space="preserve">
          <source>Returns the tangent of &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4226a0891f3ca9258446114c36f01b68fa4774e5" translate="yes" xml:space="preserve">
          <source>Returns the tangent of a number.</source>
          <target state="translated">Возвращает тангенс числа.</target>
        </trans-unit>
        <trans-unit id="c5d521856a9bbf25e8e909017b80b9544b5ae9aa" translate="yes" xml:space="preserve">
          <source>Returns the time keeping format convention used by the locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103cb7212fcf256aeeff5c6db6813c2fcf2d182e" translate="yes" xml:space="preserve">
          <source>Returns the time-zone offset in minutes for the current locale.</source>
          <target state="translated">Возвращает смещение часового пояса в минутах для текущей локали.</target>
        </trans-unit>
        <trans-unit id="4924849987d928a36b0909425c24b81fb031e9c5" translate="yes" xml:space="preserve">
          <source>Returns the value associated to the &lt;code&gt;&lt;var&gt;key&lt;/var&gt;&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there is none.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372467b390d192048bd3a72fd5f98d970976c96d" translate="yes" xml:space="preserve">
          <source>Returns the value associated to the &lt;code&gt;key&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there is none.</source>
          <target state="translated">Возвращает значение, связанное с &lt;code&gt;key&lt;/code&gt; , или &lt;code&gt;undefined&lt;/code&gt; , если его нет.</target>
        </trans-unit>
        <trans-unit id="69e8b7d627c44308c4d9f02f63cba47b4a757e5f" translate="yes" xml:space="preserve">
          <source>Returns the value at the specified index of the array.</source>
          <target state="translated">Возвращает значение по указанному индексу массива.</target>
        </trans-unit>
        <trans-unit id="56c743070a2f8f36e9965c8b71483d78e9fc1216" translate="yes" xml:space="preserve">
          <source>Returns the value of a number rounded to the nearest integer.</source>
          <target state="translated">Возвращает значение числа,округленного до ближайшего целого.</target>
        </trans-unit>
        <trans-unit id="0d2ab3de8275648f4b30f6cb24efca83abe63ed7" translate="yes" xml:space="preserve">
          <source>Returns the value of the number &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; rounded to the nearest integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88145d000559f12de6c1bf0545b91f660e7d7e07" translate="yes" xml:space="preserve">
          <source>Returns the value of the property. Works like getting a property from an object (&lt;code&gt;target[propertyKey]&lt;/code&gt;) as a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e944650beda9275023c3412c992d653ba9eec3e1" translate="yes" xml:space="preserve">
          <source>Returns the year (4 digits for 4-digit years) in the specified date according to universal time.</source>
          <target state="translated">Возвращает год (4 цифры для 4-х значных лет)в указанную дату в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="8c575792a107f454af8b96d190db74a46aae1c37" translate="yes" xml:space="preserve">
          <source>Returns the year (4 digits for 4-digit years) of the specified date according to local time.</source>
          <target state="translated">Возвращает год (4 цифры для 4-х значных лет)указанной даты по местному времени.</target>
        </trans-unit>
        <trans-unit id="67f74e50c58e7dfe904f5112f7c6a76e94196e73" translate="yes" xml:space="preserve">
          <source>Returns the year (usually 2&amp;ndash;3 digits) in the specified date according to local time. Use &lt;a href=&quot;date/getfullyear&quot;&gt;&lt;code&gt;getFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8276e25fbac4930a368340706d1f63fa46605177" translate="yes" xml:space="preserve">
          <source>Returns the year (usually 2-3 digits) in the specified date according to local time. Use &lt;a href=&quot;date/getfullyear&quot;&gt;&lt;code&gt;getFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Возвращает год (обычно 2&amp;ndash;3 цифры) указанной даты по местному времени. &lt;a href=&quot;date/getfullyear&quot;&gt; &lt;code&gt;getFullYear()&lt;/code&gt; &lt;/a&gt; этого используйте getFullYear () .</target>
        </trans-unit>
        <trans-unit id="c384316dd5b19705f4993a4e47338a550b27b458" translate="yes" xml:space="preserve">
          <source>Returns the year (usually 2-3 digits) in the specified date according to local time. Use &lt;a href=&quot;getfullyear&quot;&gt;&lt;code&gt;getFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Возвращает год (обычно 2&amp;ndash;3 цифры) указанной даты по местному времени. &lt;a href=&quot;getfullyear&quot;&gt; &lt;code&gt;getFullYear()&lt;/code&gt; &lt;/a&gt; этого используйте getFullYear () .</target>
        </trans-unit>
        <trans-unit id="ef919e9a4d2a0007ca2dda065b1bf20cd30a6617" translate="yes" xml:space="preserve">
          <source>Returns true if a variable is an array, if not false.</source>
          <target state="translated">Возвращает true,если переменная является массивом,если не ложь.</target>
        </trans-unit>
        <trans-unit id="ed9828d9e826cd961f76e81c2fdf4dab3b349b14" translate="yes" xml:space="preserve">
          <source>Returns true if at least one element in this array satisfies the provided testing function.</source>
          <target state="translated">Возвращает true,если хотя бы один элемент в этом массиве удовлетворяет предоставляемой функции тестирования.</target>
        </trans-unit>
        <trans-unit id="5743984dff03ce108308e5418a24977c9bd4b675" translate="yes" xml:space="preserve">
          <source>Returns true if at least one element in this array satisfies the provided testing function. See also &lt;a href=&quot;../array/some&quot;&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает true, если хотя бы один элемент в этом массиве удовлетворяет предоставленной функции тестирования. См. Также &lt;a href=&quot;../array/some&quot;&gt; &lt;code&gt;Array.prototype.some()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c40b533310d484aa896cfc6393569400793583ae" translate="yes" xml:space="preserve">
          <source>Returns true if at least one element in this array satisfies the provided testing function. See also &lt;a href=&quot;array/some&quot;&gt;&lt;code&gt;Array.prototype.some()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Возвращает true, если хотя бы один элемент в этом массиве удовлетворяет предоставленной функции тестирования. См. Также &lt;a href=&quot;array/some&quot;&gt; &lt;code&gt;Array.prototype.some()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e66eab988119e3e3ce452b3b5989a0bb0d9618cc" translate="yes" xml:space="preserve">
          <source>Returns true if every element in this array satisfies the provided testing function.</source>
          <target state="translated">Возвращает true,если каждый элемент в этом массиве удовлетворяет предоставляемой функции тестирования.</target>
        </trans-unit>
        <trans-unit id="2f3147ead11f918a10084e1482879464995ed923" translate="yes" xml:space="preserve">
          <source>Returns whether case is taken into account for the locale's collation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d19793ef4bc0c291766b4c1c4321a5425acb17" translate="yes" xml:space="preserve">
          <source>Returns whether the locale has special collation handling for numeric characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6275720808882d3565e2083ae259d53eb2a2b9" translate="yes" xml:space="preserve">
          <source>Reverse algorithm: an array of booleans from a mask</source>
          <target state="translated">Обратный алгоритм:массив булеонов из маски.</target>
        </trans-unit>
        <trans-unit id="a2ae3ac8781e85396c516642ca871ef520f24626" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements of an array &amp;mdash; the first becomes the last, and the last becomes the first. See also &lt;a href=&quot;../array/reverse&quot;&gt;&lt;code&gt;Array.prototype.reverse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Меняет порядок элементов массива на обратный: первый становится последним, а последний - первым. См. Также &lt;a href=&quot;../array/reverse&quot;&gt; &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ef4450fb297b6aad426a0e76c2391922f91a613" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements of an array &amp;mdash; the first becomes the last, and the last becomes the first. See also &lt;a href=&quot;array/reverse&quot;&gt;&lt;code&gt;Array.prototype.reverse()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Меняет порядок элементов массива на обратный: первый становится последним, а последний - первым. См. Также &lt;a href=&quot;array/reverse&quot;&gt; &lt;code&gt;Array.prototype.reverse()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4369b49546d130d54c8694a215e5ff0d442a253e" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements of an array &lt;em&gt;in place&lt;/em&gt;. (First becomes the last, last becomes first.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e24b46991ca25f01ac04470dbcee2f5d4678f87" translate="yes" xml:space="preserve">
          <source>Reverses the order of the elements of an array in place &amp;mdash; the first becomes the last, and the last becomes the first.</source>
          <target state="translated">Изменяет порядок элементов массива на обратный - первый становится последним, а последний становится первым.</target>
        </trans-unit>
        <trans-unit id="331fd00bc5c756691c0b5ca18508d5e26872d289" translate="yes" xml:space="preserve">
          <source>Reversing a String using &lt;code&gt;split()&lt;/code&gt;</source>
          <target state="translated">Изменение направления строки с помощью &lt;code&gt;split()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="595015f63c6c71f31ad9bd1f6bdca7295c548bfc" translate="yes" xml:space="preserve">
          <source>Reversing the elements in an array</source>
          <target state="translated">Реверсирование элементов в массиве</target>
        </trans-unit>
        <trans-unit id="a1809dd397e642604d45c873b2fc22680e99ca96" translate="yes" xml:space="preserve">
          <source>Reversing the elements in an array-like object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dee181ec879e884698df1d2bee6ac7c8d1fecff2" translate="yes" xml:space="preserve">
          <source>Rewriting a Promise chain with an async function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15938a299674da6e2d9c511b28a5094abb98eb3a" translate="yes" xml:space="preserve">
          <source>Rewriting a promise chain with an &lt;code&gt;async&lt;/code&gt; function</source>
          <target state="translated">Переписывание цепочки обещаний с помощью &lt;code&gt;async&lt;/code&gt; функции</target>
        </trans-unit>
        <trans-unit id="2a53989b1e76895872554d806d5b3d65f48223cc" translate="yes" xml:space="preserve">
          <source>Right bracket, i.e. &quot;)&quot;</source>
          <target state="translated">Правая скобка,т.е.&quot;)&quot;.</target>
        </trans-unit>
        <trans-unit id="75e640dab9c72b92ec931b703f79d317fa079e48" translate="yes" xml:space="preserve">
          <source>Right shift</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4ccb678aa3f125145f8eeb4aa79aed467882a6" translate="yes" xml:space="preserve">
          <source>Right shift assignment</source>
          <target state="translated">Назначение правого сдвига</target>
        </trans-unit>
        <trans-unit id="883ea8fd1a97feb399b0679db14d18565e43e763" translate="yes" xml:space="preserve">
          <source>Right shift assignment (&lt;code&gt;x &amp;gt;&amp;gt;= y&lt;/code&gt;)</source>
          <target state="translated">Назначение сдвига вправо ( &lt;code&gt;x &amp;gt;&amp;gt;= y&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b82956a0c9f3492205c109d06fc2780bd072445a" translate="yes" xml:space="preserve">
          <source>Right shift assignment operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9e295df871f66271a37b6bd35f29414b907d88" translate="yes" xml:space="preserve">
          <source>Right shift assignment.</source>
          <target state="translated">Назначение правой смены.</target>
        </trans-unit>
        <trans-unit id="46adf85a2cb97ca3507c9e97064a990c402d28e6" translate="yes" xml:space="preserve">
          <source>Right shift operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a7203cd61cb457ea36728bd8dba440e9d84b76" translate="yes" xml:space="preserve">
          <source>Roman lowercase numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0068f66b0e65e1378d02335793fd8ff9bfede168" translate="yes" xml:space="preserve">
          <source>Roman upper case numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4c969f04015702559d59e00d325bc68782263b" translate="yes" xml:space="preserve">
          <source>Run a list of asynchronous functions with callbacks in series each passing their results to the next</source>
          <target state="translated">Запустить список асинхронных функций с последовательными обратными вызовами,каждая из которых передает свои результаты следующей.</target>
        </trans-unit>
        <trans-unit id="9db18c544fd65d25d0e6c72be7215668166bc64e" translate="yes" xml:space="preserve">
          <source>Run code with limited privileges</source>
          <target state="translated">Код запуска с ограниченными привилегиями</target>
        </trans-unit>
        <trans-unit id="1da2a8372c86a3ca7b7c22d1c7e3a92ce976681a" translate="yes" xml:space="preserve">
          <source>Running Promises in Sequence</source>
          <target state="translated">Беговые обещания в последовательности</target>
        </trans-unit>
        <trans-unit id="2483506a8404725effe5b86274295a1b028f0f98" translate="yes" xml:space="preserve">
          <source>Running in Scratchpad</source>
          <target state="translated">Работает в Scratchpad</target>
        </trans-unit>
        <trans-unit id="0a2fb9d911d4f91dedecb797953a8cdc11fd0b2a" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;Array.isArray()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">Запуск следующего кода перед любым другим кодом создаст &lt;code&gt;Array.isArray()&lt;/code&gt; если он изначально недоступен.</target>
        </trans-unit>
        <trans-unit id="0e15b947462aaa69380d4591f84d3adf86d0aca3" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;Array.of()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">Выполнение следующего кода перед любым другим кодом создаст &lt;code&gt;Array.of()&lt;/code&gt; если он изначально недоступен.</target>
        </trans-unit>
        <trans-unit id="706b9bf59720ca6b709de6a6386446450280522e" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;String.prototype.padEnd()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">Выполнение следующего кода перед любым другим кодом создаст &lt;code&gt;String.prototype.padEnd()&lt;/code&gt; если он изначально недоступен.</target>
        </trans-unit>
        <trans-unit id="d99d4a7eaca4e67f659b989a807b3061fd8ca554" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;String.prototype.padStart()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">Выполнение следующего кода перед любым другим кодом создаст &lt;code&gt;String.prototype.padStart()&lt;/code&gt; если он изначально недоступен.</target>
        </trans-unit>
        <trans-unit id="35bbdf50144365b3004f1e6034d888b480072b84" translate="yes" xml:space="preserve">
          <source>Running the following code before any other code will create &lt;code&gt;trim()&lt;/code&gt; if it's not natively available.</source>
          <target state="translated">Выполнение следующего кода перед любым другим кодом создаст &lt;code&gt;trim()&lt;/code&gt; если он изначально недоступен.</target>
        </trans-unit>
        <trans-unit id="a19b247665a214e619013d49d1af7e7bfdbda5fd" translate="yes" xml:space="preserve">
          <source>Runtime errors result in new &lt;code&gt;Error&lt;/code&gt; objects being created and thrown.</source>
          <target state="translated">Ошибки времени выполнения приводят к &lt;code&gt;Error&lt;/code&gt; и выбрасыванию новых объектов Error .</target>
        </trans-unit>
        <trans-unit id="424dd4565e3b50faee0307759cb623a23456af2c" translate="yes" xml:space="preserve">
          <source>Safari</source>
          <target state="translated">Safari</target>
        </trans-unit>
        <trans-unit id="9ee19380cf4f47eafb73853aa680e66ff966935c" translate="yes" xml:space="preserve">
          <source>Safari 14 Technology Preview 107-111 returns a string instead of a &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale&quot;&gt;Locale&lt;/a&gt; object from the minimize and maximize methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a42d6e6d65603b293594e1986a494c27ade20368" translate="yes" xml:space="preserve">
          <source>Safari 14 Technology Preview 107-111 returns a string instead of a &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale&quot;&gt;Locale&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58150bf4bc81cb0b79b4789ca1d37338441d8ddb" translate="yes" xml:space="preserve">
          <source>Safari on iOS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c05f94a3b0cb98b2121cdee375133c3f173ddc" translate="yes" xml:space="preserve">
          <source>Safe in this context refers to the ability to represent integers exactly and to correctly compare them. For example, &lt;code&gt;Number.MAX_SAFE_INTEGER + 1 === Number.MAX_SAFE_INTEGER + 2&lt;/code&gt; will evaluate to true, which is mathematically incorrect. See &lt;a href=&quot;issafeinteger&quot;&gt;&lt;code&gt;Number.isSafeInteger()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d83ddcac451bd2e6a9626dc5da397c75f4bdc65" translate="yes" xml:space="preserve">
          <source>Safe in this context refers to the ability to represent integers exactly and to correctly compare them. For example, &lt;code&gt;Number.MAX_SAFE_INTEGER&amp;nbsp;+&amp;nbsp;1 === Number.MAX_SAFE_INTEGER&amp;nbsp;+&amp;nbsp;2&lt;/code&gt; will evaluate to true, which is mathematically incorrect. See &lt;a href=&quot;issafeinteger&quot;&gt;&lt;code&gt;Number.isSafeInteger()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">Под безопасностью в этом контексте понимается способность точно представлять целые числа и правильно их сравнивать. Например, &lt;code&gt;Number.MAX_SAFE_INTEGER&amp;nbsp;+&amp;nbsp;1 === Number.MAX_SAFE_INTEGER&amp;nbsp;+&amp;nbsp;2&lt;/code&gt; вернет значение true, что математически неверно. См. &lt;a href=&quot;issafeinteger&quot;&gt; &lt;code&gt;Number.isSafeInteger()&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="38d2a8d338e764008574e654090b275c649cdbb5" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;object/getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">То же, что и &lt;a href=&quot;object/getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e49b60c8c0a9f15699bbbdb3690c0796b349d13e" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">То же, что и &lt;a href=&quot;object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f618264540d3d81564715eb7858e84c70c2bff4" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that is &lt;code&gt;true&lt;/code&gt; if the target is extensible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee25962095abc626fad400750f39f70602bb29d" translate="yes" xml:space="preserve">
          <source>Same-origin policy</source>
          <target state="translated">политика однородности</target>
        </trans-unit>
        <trans-unit id="da8abd7408a5aa336cbde8d4920f8da276e7b302" translate="yes" xml:space="preserve">
          <source>Samsung Internet</source>
          <target state="translated">Samsung Интернет</target>
        </trans-unit>
        <trans-unit id="de4a94f8fe5c5182e5e382cf5f9cd9cc5f30624c" translate="yes" xml:space="preserve">
          <source>Saurashtra digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae95211d6340ac9677a85d9ca8d64944b674653" translate="yes" xml:space="preserve">
          <source>Scientific and compact notation are represented by the &lt;code&gt;notation&lt;/code&gt; option and can be formatted like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f44571afcc971248192a5a92d6bb9b41129a5d9" translate="yes" xml:space="preserve">
          <source>Scientific, engineering or compact notations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4651a34e4df9619783ad372f905d6d3b84e9d76d" translate="yes" xml:space="preserve">
          <source>Scope</source>
          <target state="translated">Scope</target>
        </trans-unit>
        <trans-unit id="36d50758667367e9ce4268584b6a5e88eef045c1" translate="yes" xml:space="preserve">
          <source>Scope Effects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc636498e1c269635cd060804fe4bc4c5cc9f77" translate="yes" xml:space="preserve">
          <source>Scoping</source>
          <target state="translated">Scoping</target>
        </trans-unit>
        <trans-unit id="b2bcd160c9af12268489408932bb8ce4a62f322f" translate="yes" xml:space="preserve">
          <source>Scoping in with statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b92d418e654bbd5c2c48b78244ecce9fb91d09" translate="yes" xml:space="preserve">
          <source>Scoping rules</source>
          <target state="translated">Основные положения</target>
        </trans-unit>
        <trans-unit id="734212323126ed0d48201bfbac4d4c4c48381539" translate="yes" xml:space="preserve">
          <source>Script Code Display Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b76e02878ed0061bb5e75915ffc5a4791e332a" translate="yes" xml:space="preserve">
          <source>Search for a match between a regular expression &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt; and the calling string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f42509b6f402ad9d04aabd1e287ae32814fae5e" translate="yes" xml:space="preserve">
          <source>Search for the global across environments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="777b0c838dc4f4927f9e38115d38d1dcc7db135e" translate="yes" xml:space="preserve">
          <source>Searches for existing symbols with the given &lt;code&gt;&lt;var&gt;key&lt;/var&gt;&lt;/code&gt; and returns it if found. Otherwise a new symbol gets created in the global symbol registry with &lt;code&gt;&lt;var&gt;key&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43e4792e46fad263a579eb49bcec0c364550db5" translate="yes" xml:space="preserve">
          <source>Searches for existing symbols with the given key and returns it if found. Otherwise a new symbol gets created in the global symbol registry with this key.</source>
          <target state="translated">Поиск существующих символов с заданным ключом и возврат его,если он найден.В противном случае новый символ создается в глобальном реестре символов с данным ключом.</target>
        </trans-unit>
        <trans-unit id="f65f337e021ff6dce1aac1cc1e292ff736ee0e8c" translate="yes" xml:space="preserve">
          <source>Searches the match in given string and returns the index the pattern found in the string.</source>
          <target state="translated">Поиск совпадения в заданной строке и возврат индекса найденного в строке паттерна.</target>
        </trans-unit>
        <trans-unit id="a20610ecc0fe9714eefaf8de18a5bd9fb4fd8b13" translate="yes" xml:space="preserve">
          <source>Searching in array</source>
          <target state="translated">Поиск в массиве</target>
        </trans-unit>
        <trans-unit id="32afea2a16923f427ea058dd8da43c1ba65797fe" translate="yes" xml:space="preserve">
          <source>Searching in arrays</source>
          <target state="translated">Поиск в массивах</target>
        </trans-unit>
        <trans-unit id="811aab962d4386f253368510951df0106169203a" translate="yes" xml:space="preserve">
          <source>Searching in strings</source>
          <target state="translated">Поиск по строкам</target>
        </trans-unit>
        <trans-unit id="1a3a11a4d65b21366e27c83e7a6f574abac1196d" translate="yes" xml:space="preserve">
          <source>Second example: Transforming a primitive value into an instance of its constructor and append its chain to a prototype</source>
          <target state="translated">Второй пример:Преобразование примитивного значения в экземпляр его конструктора и добавление его цепочки к прототипу</target>
        </trans-unit>
        <trans-unit id="4e33f21386213025a3f525c9f34413fc512c64fd" translate="yes" xml:space="preserve">
          <source>Second number.</source>
          <target state="translated">Второе число.</target>
        </trans-unit>
        <trans-unit id="a4464f6a0c24b1bf2f139580dacc90724a5337a7" translate="yes" xml:space="preserve">
          <source>Second overload example</source>
          <target state="translated">Второй пример перегрузки</target>
        </trans-unit>
        <trans-unit id="a7a4d674e0fb7a6d32f03019a8ae6f34b2e5b928" translate="yes" xml:space="preserve">
          <source>Second, &lt;a href=&quot;http://whereswalden.com/2011/01/10/new-es5-strict-mode-support-new-vars-created-by-strict-mode-eval-code-are-local-to-that-code-only/&quot;&gt;&lt;code&gt;eval&lt;/code&gt; of strict mode code does not introduce new variables into the surrounding scope&lt;/a&gt;. In normal code &lt;code&gt;eval(&quot;var x;&quot;)&lt;/code&gt; introduces a variable &lt;code&gt;x&lt;/code&gt; into the surrounding function or the global scope. This means that, in general, in a function containing a call to &lt;code&gt;eval&lt;/code&gt; every name not referring to an argument or local variable must be mapped to a particular definition at runtime (because that &lt;code&gt;eval&lt;/code&gt; might have introduced a new variable that would hide the outer variable). In strict mode &lt;code&gt;eval&lt;/code&gt; creates variables only for the code being evaluated, so &lt;code&gt;eval&lt;/code&gt; can't affect whether a name refers to an outer variable or some local variable:</source>
          <target state="translated">Во-вторых, &lt;a href=&quot;http://whereswalden.com/2011/01/10/new-es5-strict-mode-support-new-vars-created-by-strict-mode-eval-code-are-local-to-that-code-only/&quot;&gt; &lt;code&gt;eval&lt;/code&gt; кода строгого режима не вводит новые переменные в окружающую область видимости&lt;/a&gt; . В обычном коде &lt;code&gt;eval(&quot;var x;&quot;)&lt;/code&gt; вводит переменную &lt;code&gt;x&lt;/code&gt; в окружающую функцию или глобальную область видимости. Это означает, что, как правило, в функции, содержащей вызов &lt;code&gt;eval&lt;/code&gt; , каждое имя, не ссылающееся на аргумент или локальную переменную, должно быть сопоставлено с конкретным определением во время выполнения (потому что этот &lt;code&gt;eval&lt;/code&gt; мог ввести новую переменную, которая скрывала бы внешнюю переменную ). В строгом режиме &lt;code&gt;eval&lt;/code&gt; создает переменные только для оцениваемого кода, поэтому &lt;code&gt;eval&lt;/code&gt; не может повлиять на то, относится ли имя к внешней переменной или какой-либо локальной переменной:</target>
        </trans-unit>
        <trans-unit id="2ba52a8edc006698ea2137aee9cd37f00ecdc152" translate="yes" xml:space="preserve">
          <source>Second, &lt;a href=&quot;http://whereswalden.com/2011/01/24/new-es5-strict-mode-requirement-function-statements-not-at-top-level-of-a-program-or-function-are-prohibited/&quot;&gt;strict mode prohibits function statements that are not at the top level of a script or function&lt;/a&gt;. In normal mode in browsers, function statements are permitted &quot;everywhere&quot;. &lt;em&gt;This is not part of ES5 (or even ES3)!&lt;/em&gt; It's an extension with incompatible semantics in different browsers. Note that function statements outside top level are permitted in ES2015.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3e51412d18a60754e475b5ac8ee8c1e33a73fe" translate="yes" xml:space="preserve">
          <source>Second, &lt;a href=&quot;http://whereswalden.com/2011/01/24/new-es5-strict-mode-requirement-function-statements-not-at-top-level-of-a-program-or-function-are-prohibited/&quot;&gt;strict mode prohibits function statements, not at the top level of a script or function&lt;/a&gt;. In normal mode in browsers, function statements are permitted &quot;everywhere&quot;. &lt;em&gt;This is not part of ES5 (or even ES3)!&lt;/em&gt; It's an extension with incompatible semantics in different browsers. Note that function statements outside top level are permitted in ES2015.</source>
          <target state="translated">Во-вторых, &lt;a href=&quot;http://whereswalden.com/2011/01/24/new-es5-strict-mode-requirement-function-statements-not-at-top-level-of-a-program-or-function-are-prohibited/&quot;&gt;строгий режим запрещает операторы функций, но не на верхнем уровне сценария или функции&lt;/a&gt; . В обычном режиме в браузерах операторы функций разрешены &quot;везде&quot;. &lt;em&gt;Это не часть ES5 (или даже ES3)!&lt;/em&gt; Это расширение с несовместимой семантикой в ​​разных браузерах. Обратите внимание, что операторы функций вне верхнего уровня разрешены в ES2015.</target>
        </trans-unit>
        <trans-unit id="5ec0558ddb5d328ea0b9de063a16e3374f56fd7c" translate="yes" xml:space="preserve">
          <source>Second, in strict mode it's no longer possible to &quot;walk&quot; the JavaScript stack via commonly-implemented extensions to ECMAScript. In normal code with these extensions, when a function &lt;code&gt;fun&lt;/code&gt; is in the middle of being called, &lt;code&gt;fun.caller&lt;/code&gt; is the function that most recently called &lt;code&gt;fun&lt;/code&gt;, and &lt;code&gt;fun.arguments&lt;/code&gt; is the &lt;code&gt;arguments&lt;/code&gt; for that invocation of &lt;code&gt;fun&lt;/code&gt;. Both extensions are problematic for &quot;secure&quot; JavaScript because they allow &quot;secured&quot; code to access &quot;privileged&quot; functions and their (potentially unsecured) arguments. If &lt;code&gt;fun&lt;/code&gt; is in strict mode, both &lt;code&gt;fun.caller&lt;/code&gt; and &lt;code&gt;fun.arguments&lt;/code&gt; are non-deletable properties which throw when set or retrieved:</source>
          <target state="translated">Во-вторых, в строгом режиме больше невозможно &amp;laquo;пройтись&amp;raquo; по стеку JavaScript с помощью обычно реализуемых расширений ECMAScript. В обычном коде с этими расширениями, когда функция &lt;code&gt;fun&lt;/code&gt; находится в процессе &lt;code&gt;fun.caller&lt;/code&gt; , fun.caller - это функция, которая в последний раз &lt;code&gt;fun.arguments&lt;/code&gt; &lt;code&gt;fun&lt;/code&gt; , а fun.arguments - &lt;code&gt;arguments&lt;/code&gt; для этого вызова &lt;code&gt;fun&lt;/code&gt; . Оба расширения проблематичны для &amp;laquo;безопасного&amp;raquo; JavaScript, поскольку они позволяют &amp;laquo;защищенному&amp;raquo; коду получать доступ к &amp;laquo;привилегированным&amp;raquo; функциям и их (потенциально незащищенным) аргументам. Если &lt;code&gt;fun&lt;/code&gt; находится в строгом режиме, и &lt;code&gt;fun.caller&lt;/code&gt; , и &lt;code&gt;fun.arguments&lt;/code&gt; не удаляемые свойства, которые генерируются при установке или извлечении:</target>
        </trans-unit>
        <trans-unit id="29c9657b1be39b86ca6b3dc7075191630866be69" translate="yes" xml:space="preserve">
          <source>Second, strict mode code doesn't alias properties of &lt;code&gt;arguments&lt;/code&gt; objects created within it. In normal code within a function whose first argument is &lt;code&gt;arg&lt;/code&gt;, setting &lt;code&gt;arg&lt;/code&gt; also sets &lt;code&gt;arguments[0]&lt;/code&gt;, and vice versa (unless no arguments were provided or &lt;code&gt;arguments[0]&lt;/code&gt; is deleted). &lt;code&gt;arguments&lt;/code&gt; objects for strict mode functions store the original arguments when the function was invoked. &lt;code&gt;arguments[i]&lt;/code&gt; does not track the value of the corresponding named argument, nor does a named argument track the value in the corresponding &lt;code&gt;arguments[i]&lt;/code&gt;.</source>
          <target state="translated">Во-вторых, код в строгом режиме не изменяет свойства созданных в нем объектов &lt;code&gt;arguments&lt;/code&gt; . В обычном коде внутри функции, первым аргументом которой является &lt;code&gt;arg&lt;/code&gt; , установка &lt;code&gt;arg&lt;/code&gt; также устанавливает &lt;code&gt;arguments[0]&lt;/code&gt; , и наоборот (если аргументы не были предоставлены или &lt;code&gt;arguments[0]&lt;/code&gt; не удален). Объекты &lt;code&gt;arguments&lt;/code&gt; для функций в строгом режиме хранят исходные аргументы при вызове функции. &lt;code&gt;arguments[i]&lt;/code&gt; не отслеживает значение соответствующего именованного аргумента, а именованный аргумент не отслеживает значение в соответствующих &lt;code&gt;arguments[i]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1e81f9bb8d266ee93e01290a9052e7160636fd4a" translate="yes" xml:space="preserve">
          <source>Second, strict mode makes assignments which would otherwise silently fail to throw an exception. For example, &lt;code&gt;NaN&lt;/code&gt; is a non-writable global variable. In normal code assigning to &lt;code&gt;NaN&lt;/code&gt; does nothing; the developer receives no failure feedback. In strict mode assigning to &lt;code&gt;NaN&lt;/code&gt; throws an exception. Any assignment that silently fails in normal code (assignment to a non-writable global or property, assignment to a getter-only property, assignment to a new property on a &lt;a href=&quot;https://developer.mozilla.org/en-US/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions&quot;&gt;non-extensible&lt;/a&gt; object) will throw in strict mode:</source>
          <target state="translated">Во-вторых, в строгом режиме выполняются назначения, которые в противном случае не вызвали бы исключения. Например, &lt;code&gt;NaN&lt;/code&gt; - глобальная переменная , доступная для записи. В обычном коде присвоение &lt;code&gt;NaN&lt;/code&gt; ничего не делает; разработчик не получает отзывов об ошибках. В строгом режиме присвоение &lt;code&gt;NaN&lt;/code&gt; вызывает исключение. Любое присвоение, которое молча терпит неудачу в обычном коде (присвоение незаписываемого глобального или свойства, присвоение свойству только для получения, назначение новому свойству в &lt;a href=&quot;https://developer.mozilla.org/en-US/Web/JavaScript/Reference/Global_Objects/Object/preventExtensions&quot;&gt;нерасширяемом&lt;/a&gt; объекте), будет выполнено в строгом режиме:</target>
        </trans-unit>
        <trans-unit id="070578cb39d03db6f9c82a8658e94c2b2b6ceffc" translate="yes" xml:space="preserve">
          <source>Second: 2 digit second of minute, e.g. &quot;26&quot;</source>
          <target state="translated">Секунда:2 цифры в минуту,например &quot;26&quot;.</target>
        </trans-unit>
        <trans-unit id="ff4577ca11ed2f894585a1fc74f412cac4809390" translate="yes" xml:space="preserve">
          <source>Secondary overload &amp;mdash; taking a module object instance</source>
          <target state="translated">Вторичная перегрузка - получение экземпляра объекта модуля</target>
        </trans-unit>
        <trans-unit id="c123b2ddcb8ac4e434292d2bb044d6bf30207970" translate="yes" xml:space="preserve">
          <source>Seconds, as two digits with leading zero if required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdc437742e1db3153b212f9f49f9ac656f884e7" translate="yes" xml:space="preserve">
          <source>Security requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9c240a1dbf048908d87c3fff18bb3dc158c55e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#Using_toString_to_detect_object_class&quot;&gt;Using &lt;code&gt;toString()&lt;/code&gt; to detect object class&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a69b5ce6e588caf20394b5ffb194760f7c2389b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../array/copywithin&quot;&gt;&lt;code&gt;Array.prototype.copyWithin&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">См. &lt;a href=&quot;../array/copywithin&quot;&gt; &lt;code&gt;Array.prototype.copyWithin&lt;/code&gt; &lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="fabaa53d2bd1cd42a99ff06ec20498828a7efbe3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;Intl.Collator&lt;/code&gt; instances.</source>
          <target state="translated">См. В &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; описание экземпляров &lt;code&gt;Intl.Collator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5dae0084645e13ac3c50b95656faa30e9c7b819" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;DateTimeFormat&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; instances.</source>
          <target state="translated">См. &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;DateTimeFormat&lt;/code&gt; &lt;/a&gt; для описания экземпляров &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="135b289026e088e55242ad20ada8de2834935892" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../nan#Testing_against_NaN&quot;&gt;Testing against NaN&lt;/a&gt; on the &lt;code&gt;NaN&lt;/code&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c692198afdd96b7dd0a1133024ce6a1b975ff72" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;Intl.NumberFormat&lt;/code&gt; instances.</source>
          <target state="translated">См. &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; для описания экземпляров &lt;code&gt;Intl.NumberFormat&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8eae7a83cf0c385ae74dd358a4c7f84d66577e5c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; for more detail and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc5e5e4a10a886dd836d701335df44b2d1bc869f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../pluralrules&quot;&gt;&lt;code&gt;PluralRules&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;Intl.PluralRules&lt;/code&gt; instances.</source>
          <target state="translated">См &lt;a href=&quot;../pluralrules&quot;&gt; &lt;code&gt;PluralRules&lt;/code&gt; &lt;/a&gt; для описания &lt;code&gt;Intl.PluralRules&lt;/code&gt; экземпляров.</target>
        </trans-unit>
        <trans-unit id="84efb646380555562f9aceca87cd28014ed5a8b7" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; for a description of &lt;code&gt;RegExp&lt;/code&gt; instances. &lt;code&gt;RegExp&lt;/code&gt; instances inherit from &lt;code&gt;RegExp.prototype&lt;/code&gt;. Modifications to the prototype object are propagated to all &lt;code&gt;RegExp&lt;/code&gt; instances.</source>
          <target state="translated">См. &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; для описания экземпляров &lt;code&gt;RegExp&lt;/code&gt; . Экземпляры &lt;code&gt;RegExp&lt;/code&gt; наследуются от &lt;code&gt;RegExp.prototype&lt;/code&gt; . Изменения объекта-прототипа распространяются на все экземпляры &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1536198bb2881992d0ca30ca24ac569c8429835" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../string/matchall&quot;&gt;&lt;code&gt;String.prototype.matchAll()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../regexp/@@matchall&quot;&gt;&lt;code&gt;RegExp.prototype[@@matchAll]()&lt;/code&gt;&lt;/a&gt; for more examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5289664d68a8eecafae809f4b007eca88400c741" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../symbol/unscopables&quot;&gt;&lt;code&gt;Symbol.unscopables&lt;/code&gt;&lt;/a&gt; for how to set &lt;code&gt;unscopables&lt;/code&gt; for your own objects.</source>
          <target state="translated">См. &lt;a href=&quot;../symbol/unscopables&quot;&gt; &lt;code&gt;Symbol.unscopables&lt;/code&gt; &lt;/a&gt; чтобы узнать, как установить &lt;code&gt;unscopables&lt;/code&gt; для ваших собственных объектов.</target>
        </trans-unit>
        <trans-unit id="6b05d0d25885928f88db09e7990a415ba7c988b3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;classes/public_class_fields&quot;&gt;public class fields&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e281fd9eb59821fc8c71786c7076314a21be59" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript&quot;&gt;&quot;What's a good way to extend Error in JavaScript?&quot;&lt;/a&gt; on StackOverflow for an in-depth discussion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22de022379488593c5158e534bc98e780ec388c6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1225665&quot;&gt;bug 1225665&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21cd05efededc49c0b0b894ab110f282edc671c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzil.la/1342012&quot;&gt;bug 1342012&lt;/a&gt;.</source>
          <target state="translated">Смотрите &lt;a href=&quot;https://bugzil.la/1342012&quot;&gt;ошибку 1342012&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="600ef9568f72d827bace8f8a02160cca2a52d1c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1220564#c42&quot;&gt;Bug 1220564, comment 42&lt;/a&gt; for suggestions on updating code.</source>
          <target state="translated">См. &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1220564#c42&quot;&gt;Ошибку 1220564, комментарий 42&lt;/a&gt; для предложений по обновлению кода.</target>
        </trans-unit>
        <trans-unit id="8aa6dead9232be0a2a7dbfdd25d114f0f0b6e2ea" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/status/javascriptmoduleimport/&quot;&gt;development status&lt;/a&gt;.</source>
          <target state="translated">См. &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/platform/status/javascriptmoduleimport/&quot;&gt;Статус разработки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e699c0e2250ae67ffb95e53b7c082920af02eaa8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;comparison operators&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27210836a0951a78a5091b2113638f314d81de47" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript&quot;&gt;&quot;What's a good way to extend Error in JavaScript?&quot;&lt;/a&gt; on StackOverflow for an in-depth discussion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c37b53c9cf4b066e99abae3416c10039045143" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Array.prototype.map()&lt;/code&gt;&lt;/a&gt; for a detailed description of the callback function. The &lt;code&gt;flatMap&lt;/code&gt; method is identical to a &lt;code&gt;&lt;a href=&quot;map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; followed by a call to &lt;code&gt;&lt;a href=&quot;flat&quot;&gt;flat&lt;/a&gt;&lt;/code&gt; of depth 1.</source>
          <target state="translated">См. &lt;a href=&quot;map&quot;&gt; &lt;code&gt;Array.prototype.map()&lt;/code&gt; &lt;/a&gt; для подробного описания функции обратного вызова. Метод &lt;code&gt;flatMap&lt;/code&gt; идентичен &lt;code&gt;&lt;a href=&quot;map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; , за которым следует вызов &lt;code&gt;&lt;a href=&quot;flat&quot;&gt;flat&lt;/a&gt;&lt;/code&gt; глубины 1.</target>
        </trans-unit>
        <trans-unit id="d0a71ec10b321a5606830ca1cee0d99b9fde4eb2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;strict_mode/transitioning_to_strict_mode&quot;&gt;transitioning to strict mode&lt;/a&gt;, if you want to change your code to work in the restricted variant of JavaScript.</source>
          <target state="translated">См. &lt;a href=&quot;strict_mode/transitioning_to_strict_mode&quot;&gt;Переход в строгий режим&lt;/a&gt; , если вы хотите изменить свой код для работы в ограниченном варианте JavaScript.</target>
        </trans-unit>
        <trans-unit id="92396d66392436aa6696f9913ea8a43fb0e97d14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;watch&quot;&gt;&lt;code&gt;watch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Смотрите &lt;a href=&quot;watch&quot;&gt; &lt;code&gt;watch()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8243a2c0e464492c9d563c4f92c56ae3421bcc" translate="yes" xml:space="preserve">
          <source>See also</source>
          <target state="translated">См.также</target>
        </trans-unit>
        <trans-unit id="1378afc24827e76c75c8c09a44c37eb7ea3c02e2" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../../iteration_protocols&quot;&gt;Iteration protocols&lt;/a&gt; for more information.</source>
          <target state="translated">См. Также &lt;a href=&quot;../../iteration_protocols&quot;&gt;протоколы итераций&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="da5227a19a1064bb7ecc27437c4fdff313062788" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9361ac99be11d99a3ed839fa83ce4d731433170" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd7439d1dcf99559eafc9340e3f32536ac276943" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;functions/method_definitions&quot;&gt;method definitions&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;functions/method_definitions&quot;&gt;определения методов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4630630981c3fb927697ce943390bb220487784" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">См. Также &lt;a href=&quot;global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="8a5ae798cc9ca92e8aece6fe0586ab34aeca8809" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">См. Также &lt;a href=&quot;global_objects/boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="528dfbf5260abd942fcd14de5d7cedfe6c02f09d" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">См. Также &lt;a href=&quot;global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="fd6eac50277454b4fdc3c377930cad35d3071c6b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;operators/object_initializer&quot;&gt;Object initializer&lt;/a&gt; for more information.</source>
          <target state="translated">См. Также &lt;a href=&quot;global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;operators/object_initializer&quot;&gt;Object initializer&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="51c95b41057e343c3a79be9c954f7c8597d03183" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">См. Также &lt;a href=&quot;global_objects/regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="50518a9dff394f4528de3eb508a42073e5abb933" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/string/fromcharcode&quot;&gt;&lt;code&gt;String.fromCharCode()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;global_objects/string/charcodeat&quot;&gt;&lt;code&gt;String.prototype.charCodeAt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;global_objects/string/fromcharcode&quot;&gt; &lt;code&gt;String.fromCharCode()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;global_objects/string/charcodeat&quot;&gt; &lt;code&gt;String.prototype.charCodeAt()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="695c141114eece10b5a4c675461454e9638efc32" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;global_objects/string/fromcodepoint&quot;&gt;&lt;code&gt;String.fromCodePoint()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;global_objects/string/codepointat&quot;&gt;&lt;code&gt;String.prototype.codePointAt()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;global_objects/string/fromcodepoint&quot;&gt; &lt;code&gt;String.fromCodePoint()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;global_objects/string/codepointat&quot;&gt; &lt;code&gt;String.prototype.codePointAt()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9ac05303dc4c9c210764c35a651deaf5bbc7d0ab" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#RegExp_Properties&quot;&gt;deprecated &lt;code&gt;RegExp&lt;/code&gt; properties.&lt;/a&gt;</source>
          <target state="translated">См. Также &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#RegExp_Properties&quot;&gt;устаревшие свойства &lt;code&gt;RegExp&lt;/code&gt; .&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="954fd3818a058234048b61a774fc3f9cd57b82bb" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/&quot;&gt;&quot;ES6 In Depth: Arrow functions&quot; on hacks.mozilla.org&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;https://hacks.mozilla.org/2015/06/es6-in-depth-arrow-functions/&quot;&gt;&amp;laquo;Подробное описание ES6: стрелочные функции&amp;raquo; на hacks.mozilla.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f79f69dac8b829119b9cc3d7317d7092484acc67" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8506cf45f49a402e1c38b4516c1573db158dd97" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;label&quot;&gt;label&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="161eff3da0407d573fccaca9f62e36cbb7a08be6" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;reduce&quot;&gt;&lt;code&gt;Array.prototype.reduce()&lt;/code&gt;&lt;/a&gt; for left-to-right.</source>
          <target state="translated">См. Также &lt;a href=&quot;reduce&quot;&gt; &lt;code&gt;Array.prototype.reduce()&lt;/code&gt; &lt;/a&gt; для письма слева направо.</target>
        </trans-unit>
        <trans-unit id="2ccb7a1dca1b58542d42d718fb46d686c15ada16" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;sharedarraybuffer/planned_changes&quot;&gt;Planned changes to shared memory&lt;/a&gt; which is starting to roll out to browsers (Firefox 79, for example.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed55dec43686cca3381bca8602efc66f38c0509" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;template_literals&quot;&gt;template strings&lt;/a&gt; for more information.</source>
          <target state="translated">См. Также &lt;a href=&quot;template_literals&quot;&gt;строки шаблона&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="ecf95d236d1b0f729250737637d2531c21904e6e" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;../operators/object_initializer&quot;&gt;object initializer / literal syntax&lt;/a&gt;.</source>
          <target state="translated">См. Также &lt;a href=&quot;../operators/object_initializer&quot;&gt;синтаксис инициализатора / литерала объекта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ddf55d64fa93a15b63a4df0e182305ca5eaa5be2" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;value&lt;/strong&gt; of a found element in the typed array instead of its index.</source>
          <target state="translated">См. Также метод &lt;a href=&quot;find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt; , который возвращает &lt;strong&gt;значение&lt;/strong&gt; найденного элемента в типизированном массиве вместо его индекса.</target>
        </trans-unit>
        <trans-unit id="3dc1e1e6e31f0697aef0f62130a699c19d70a6f8" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;value&lt;/strong&gt; of an array element, instead of its index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae8e21de0e58b5e2a0d12a6b98140494b3507a7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;value&lt;/strong&gt; of an array element, instead of that element's index.</source>
          <target state="translated">См. Также метод &lt;a href=&quot;find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt; , который возвращает &lt;strong&gt;значение&lt;/strong&gt; элемента массива вместо индекса этого элемента.</target>
        </trans-unit>
        <trans-unit id="1a3ee26c75374f1174f887c724cd0a8e0d583dd7" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;findindex&quot;&gt;&lt;code&gt;findIndex()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;index&lt;/strong&gt; of a found element in the array instead of its value.</source>
          <target state="translated">См. Также метод &lt;a href=&quot;findindex&quot;&gt; &lt;code&gt;findIndex()&lt;/code&gt; &lt;/a&gt; , который возвращает &lt;strong&gt;индекс&lt;/strong&gt; найденного элемента в массиве вместо его значения.</target>
        </trans-unit>
        <trans-unit id="208834c79b035e058085954075bafbac37238932" translate="yes" xml:space="preserve">
          <source>See also the &lt;a href=&quot;findindex&quot;&gt;&lt;code&gt;findIndex()&lt;/code&gt;&lt;/a&gt; method, which returns the &lt;strong&gt;index&lt;/strong&gt; of a found element in the typed array instead of its value.</source>
          <target state="translated">См. Также метод &lt;a href=&quot;findindex&quot;&gt; &lt;code&gt;findIndex()&lt;/code&gt; &lt;/a&gt; , который возвращает &lt;strong&gt;индекс&lt;/strong&gt; найденного элемента в типизированном массиве вместо его значения.</target>
        </trans-unit>
        <trans-unit id="f8e304de70f8d468e0b21742c0dce09aab25fdb7" translate="yes" xml:space="preserve">
          <source>See also the article about &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;Closures&lt;/a&gt;.</source>
          <target state="translated">См. Также статью о &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&quot;&gt;замыканиях&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d9fd20e344a458d64681cdc6721aeaabb11ab77" translate="yes" xml:space="preserve">
          <source>See also the description about &lt;a href=&quot;../typedarray#Description&quot;&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/a&gt; for more information about inheritance.</source>
          <target state="translated">См. Также описание &lt;a href=&quot;../typedarray#Description&quot;&gt;&lt;em&gt;TypedArray&lt;/em&gt;&lt;/a&gt; для получения дополнительной информации о наследовании.</target>
        </trans-unit>
        <trans-unit id="548606999660980c19a000fc10286702f3e685b6" translate="yes" xml:space="preserve">
          <source>See also: &lt;code&gt;RegExp&lt;/code&gt; methods</source>
          <target state="translated">См. Также: Методы &lt;code&gt;RegExp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71f97f51f3235210882f2d5387463487b97931f7" translate="yes" xml:space="preserve">
          <source>See example here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d3b6faf92f4bc2a52191b39d48ba4bdce1daa0" translate="yes" xml:space="preserve">
          <source>See example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d29796c75160c32d2dbfe03a26a0425a0b16ba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../finalizationregistry#Avoid_where_possible&quot;&gt;Avoid where possible&lt;/a&gt; and &lt;a href=&quot;../finalizationregistry#Notes_on_cleanup_callbacks&quot;&gt;Notes on cleanup callbacks&lt;/a&gt; sections of the &lt;a href=&quot;../finalizationregistry&quot;&gt;&lt;code&gt;FinalizationRegistry&lt;/code&gt;&lt;/a&gt; page for important caveats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="973a67075264896788dcea6568363dd955c0badf" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../intl/collator/collator&quot;&gt;&lt;code&gt;Intl.Collator()&lt;/code&gt; constructor&lt;/a&gt; for details on these parameters and how to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c807d7701d3786c0f875679fd0784388f49eff07" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../intl/datetimeformat/datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat()&lt;/code&gt;&lt;/a&gt; constructor for details on these parameters and how to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9cb5c60928ba0fda8a60970d85341caf46e902" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../intl/numberformat/numberformat&quot;&gt;&lt;code&gt;Intl.NumberFormat()&lt;/code&gt; constructor&lt;/a&gt; for details on these parameters and how to use them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cfb0e5ce491407eb79bad2409371e1734e4ee7" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../weakref#Examples&quot;&gt;Examples&lt;/a&gt; section of the &lt;a href=&quot;../weakref&quot;&gt;&lt;code&gt;WeakRef&lt;/code&gt;&lt;/a&gt; page for the complete example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da93996b3ef0518c7137cceef36e6c6141a177c5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../weakref#Notes_on_WeakRefs&quot;&gt;Notes on WeakRefs&lt;/a&gt; section of the &lt;a href=&quot;../weakref&quot;&gt;&lt;code&gt;WeakRef&lt;/code&gt;&lt;/a&gt; page for some important notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac49001e6f988b499195a8fc7e4c958bb506b5c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; page for more examples with negative numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22d1a51facf00144467ae2a6f5df314d53bff5a" translate="yes" xml:space="preserve">
          <source>See the article &lt;a href=&quot;http://web.mit.edu/jwalden/www/isArray.html&quot;&gt;&amp;ldquo;Determining with absolute accuracy whether or not a JavaScript object is an array&amp;rdquo;&lt;/a&gt; for more details. Given a &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instance, &lt;code&gt;false&lt;/code&gt; is always returned.</source>
          <target state="translated">См. Статью &lt;a href=&quot;http://web.mit.edu/jwalden/www/isArray.html&quot;&gt;&amp;laquo;Определение с абсолютной точностью, является ли объект JavaScript массивом&amp;raquo;&lt;/a&gt; для получения более подробной информации. Для &lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; экземпляра TypedArray всегда возвращается &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c5c95f2c4d551d7d3e091fae771209f3a72e8318" translate="yes" xml:space="preserve">
          <source>See the main &lt;a href=&quot;../weakref#Examples&quot;&gt;&lt;code&gt;WeakRef&lt;/code&gt;&lt;/a&gt; page for a complete example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef8bc40fb4ed9fcd7e901c4610b82295da423a7" translate="yes" xml:space="preserve">
          <source>See the table above for the five valid regular expression flags that are allowed in JavaScript.</source>
          <target state="translated">Пять допустимых флагов регулярных выражений,которые разрешены в JavaScript,приведены в таблице выше.</target>
        </trans-unit>
        <trans-unit id="e9d648c258ecb8618d72716eee8c6d3d9ecf8fbf" translate="yes" xml:space="preserve">
          <source>See the table above for the six valid regular expression flags that are allowed in JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6258e7d793f56209d4fa31e5dfaffa4b1547faee" translate="yes" xml:space="preserve">
          <source>Selectively proxy property accessors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70026f7dc23358dea8267284823186fd591882b" translate="yes" xml:space="preserve">
          <source>Semantic differences</source>
          <target state="translated">Сематические различия</target>
        </trans-unit>
        <trans-unit id="0760d3f818dfeaa9a2b162fac9175820ee62fdd8" translate="yes" xml:space="preserve">
          <source>Sending a compiled module to a worker</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242396d2093119a7e7ee3ed825c66bd07e9e5428" translate="yes" xml:space="preserve">
          <source>Sending values to the generator</source>
          <target state="translated">Отправка значений генератору</target>
        </trans-unit>
        <trans-unit id="21109e25493f2505020ef52fb59fe0a8a694fed9" translate="yes" xml:space="preserve">
          <source>Sequence generator (range)</source>
          <target state="translated">Генератор последовательности (диапазон)</target>
        </trans-unit>
        <trans-unit id="cb0cb170d106f8e8d5af1e05bbdbd3a96a7de197" translate="yes" xml:space="preserve">
          <source>Server</source>
          <target state="translated">Server</target>
        </trans-unit>
        <trans-unit id="448ab73ba1c21e671e218fb91f2644c834f0c16f" translate="yes" xml:space="preserve">
          <source>Set</source>
          <target state="translated">Set</target>
        </trans-unit>
        <trans-unit id="eefb9530efbf2a1e9a3bf16e885a3a80469841fb" translate="yes" xml:space="preserve">
          <source>Set.@@species</source>
          <target state="translated">Set.@@species</target>
        </trans-unit>
        <trans-unit id="27396d2cb880ac27c889fadc63edcf9bb08866d0" translate="yes" xml:space="preserve">
          <source>Set.prototype</source>
          <target state="translated">Set.prototype</target>
        </trans-unit>
        <trans-unit id="0d6ab2e1835112df4a43d7024e77c4665e71e8ab" translate="yes" xml:space="preserve">
          <source>Set.set</source>
          <target state="translated">Set.set</target>
        </trans-unit>
        <trans-unit id="cd559809b35fd7821a785d258c88e428d5707400" translate="yes" xml:space="preserve">
          <source>Sets an element stored at a given index to a given value.</source>
          <target state="translated">Устанавливает элемент,хранящийся в данном индексе,в заданное значение.</target>
        </trans-unit>
        <trans-unit id="6a23c6745780ad727fafcdb3042eb74be13348dd" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC, allowing for negative numbers for times prior.</source>
          <target state="translated">Устанавливает для объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; время, представленное числом миллисекунд с 1 января 1970 г., 00:00:00 по всемирному координированному времени, допуская отрицательные числа для предшествующего времени.</target>
        </trans-unit>
        <trans-unit id="1b510522ea71e8f78ea7cb1e8cb0f46cb3829fba" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC, allowing for negative numbers for times prior.</source>
          <target state="translated">Устанавливает для объекта &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; время, представленное числом миллисекунд с 1 января 1970 г., 00:00:00 по всемирному координированному времени, допуская отрицательные числа для предшествующего времени.</target>
        </trans-unit>
        <trans-unit id="60154fb6ce12f060244faaedb731df2294458404" translate="yes" xml:space="preserve">
          <source>Sets the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC. Use negative numbers for times prior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff75cef6891116484ac4b79f95b6e0094fbe8216" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; for the &lt;code&gt;&lt;var&gt;key&lt;/var&gt;&lt;/code&gt; in the &lt;code&gt;Map&lt;/code&gt; object. Returns the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d824dc8f050f3d63b4cfab74b50d360e7c0074e2" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; for the &lt;code&gt;&lt;var&gt;key&lt;/var&gt;&lt;/code&gt; in the &lt;code&gt;WeakMap&lt;/code&gt; object. Returns the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59885359a696cef18b49294ac9780bf6791915e3" translate="yes" xml:space="preserve">
          <source>Sets the day of the month for a specified date according to local time.</source>
          <target state="translated">Устанавливает день месяца на определенную дату по местному времени.</target>
        </trans-unit>
        <trans-unit id="01866b39ffa583cdc03da72ac872a6bff8e464fb" translate="yes" xml:space="preserve">
          <source>Sets the day of the month for a specified date according to universal time.</source>
          <target state="translated">Устанавливает день месяца на определенную дату в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="bdc994f63560589b4ef94a2cf3cb119f0dc7f47a" translate="yes" xml:space="preserve">
          <source>Sets the full year (e.g. 4 digits for 4-digit years) for a specified date according to local time.</source>
          <target state="translated">Устанавливает полный год (например,4 цифры для 4-х значных лет)для определенной даты по местному времени.</target>
        </trans-unit>
        <trans-unit id="55d82c90fc993dabd4421c6afaccdb3df0132861" translate="yes" xml:space="preserve">
          <source>Sets the full year (e.g. 4 digits for 4-digit years) for a specified date according to universal time.</source>
          <target state="translated">Устанавливает полный год (например,4 цифры для 4-х значных лет)для определенной даты в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="09ae68d71ac54e6f1d1ed81e3592e6c0ec06fd05" translate="yes" xml:space="preserve">
          <source>Sets the hour for a specified date according to universal time.</source>
          <target state="translated">Устанавливает час на указанную дату в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="db74f0fc993971eef20d8ff78d24a799e9d84a90" translate="yes" xml:space="preserve">
          <source>Sets the hours for a specified date according to local time.</source>
          <target state="translated">Устанавливает часы на определенную дату в соответствии с местным временем.</target>
        </trans-unit>
        <trans-unit id="edff8166c1302d93a3463b3f45a05002a8460843" translate="yes" xml:space="preserve">
          <source>Sets the milliseconds for a specified date according to local time.</source>
          <target state="translated">Устанавливает миллисекунды на определенную дату по местному времени.</target>
        </trans-unit>
        <trans-unit id="44d10f210ae7c57eebc11f05bf62168c940450e7" translate="yes" xml:space="preserve">
          <source>Sets the milliseconds for a specified date according to universal time.</source>
          <target state="translated">Устанавливает миллисекунды на указанную дату в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="84a46177608c39048f97dc5eda356e6bb9ee2aaf" translate="yes" xml:space="preserve">
          <source>Sets the minutes for a specified date according to local time.</source>
          <target state="translated">Устанавливает минуты на определенную дату в соответствии с местным временем.</target>
        </trans-unit>
        <trans-unit id="800b04ce02ed49aa2c03b7e1176360c2f5d57cd1" translate="yes" xml:space="preserve">
          <source>Sets the minutes for a specified date according to universal time.</source>
          <target state="translated">Устанавливает минуты на указанную дату в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="201fd5eee21b05804092ae8f6a7554dca071d826" translate="yes" xml:space="preserve">
          <source>Sets the month for a specified date according to local time.</source>
          <target state="translated">Устанавливает месяц на определенную дату в соответствии с местным временем.</target>
        </trans-unit>
        <trans-unit id="777d9e3cad6a66026f69fb3df00045d0d7309e4f" translate="yes" xml:space="preserve">
          <source>Sets the month for a specified date according to universal time.</source>
          <target state="translated">Устанавливает месяц на определенную дату в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="a93eec707eebbf975eefb6365e5f42db98f3023b" translate="yes" xml:space="preserve">
          <source>Sets the object's prototype (its internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53920959144eabec296889fdef8eb8081c8e6a8b" translate="yes" xml:space="preserve">
          <source>Sets the prototype (i.e., the internal &lt;code&gt;[[Prototype]]&lt;/code&gt; property).</source>
          <target state="translated">Устанавливает прототип (т.е. внутреннее свойство &lt;code&gt;[[Prototype]]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f32fce18b27c3615cdfecf467982ccd467007202" translate="yes" xml:space="preserve">
          <source>Sets the seconds for a specified date according to local time.</source>
          <target state="translated">Устанавливает секунды на указанную дату в соответствии с местным временем.</target>
        </trans-unit>
        <trans-unit id="788925ba5e74d37a59b6bf7ea89ad55b86dea9db" translate="yes" xml:space="preserve">
          <source>Sets the seconds for a specified date according to universal time.</source>
          <target state="translated">Устанавливает секунды на указанную дату в соответствии с универсальным временем.</target>
        </trans-unit>
        <trans-unit id="28b570db1c8dbc660f342567fd7f8edfd6a90734" translate="yes" xml:space="preserve">
          <source>Sets the value for the &lt;code&gt;key&lt;/code&gt; in the &lt;code&gt;Map&lt;/code&gt; object. Returns the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">Устанавливает значение &lt;code&gt;key&lt;/code&gt; в объекте &lt;code&gt;Map&lt;/code&gt; . Возвращает объект &lt;code&gt;Map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fc471fd05d9de114afaebb1f8b11cd728c99636" translate="yes" xml:space="preserve">
          <source>Sets the value for the &lt;code&gt;key&lt;/code&gt; in the &lt;code&gt;WeakMap&lt;/code&gt; object. Returns the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="translated">Устанавливает значение &lt;code&gt;key&lt;/code&gt; в объекте &lt;code&gt;WeakMap&lt;/code&gt; . Возвращает объект &lt;code&gt;WeakMap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75485a87a70bf4989ce42bf5ad309c7c6aa90192" translate="yes" xml:space="preserve">
          <source>Sets the year (usually 2&amp;ndash;3 digits) for a specified date according to local time. Use &lt;a href=&quot;date/setfullyear&quot;&gt;&lt;code&gt;setFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35733dd1d2265e8d256b07109eaae5655d1dbb95" translate="yes" xml:space="preserve">
          <source>Sets the year (usually 2-3 digits) for a specified date according to local time. Use &lt;a href=&quot;date/setfullyear&quot;&gt;&lt;code&gt;setFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Устанавливает год (обычно 2-3 цифры) для указанной даты по местному времени. &lt;a href=&quot;date/setfullyear&quot;&gt; &lt;code&gt;setFullYear()&lt;/code&gt; &lt;/a&gt; этого используйте setFullYear () .</target>
        </trans-unit>
        <trans-unit id="15acf22e2c068bbd9751ea155fb1e394ed99314d" translate="yes" xml:space="preserve">
          <source>Sets the year (usually 2-3 digits) for a specified date according to local time. Use &lt;a href=&quot;setfullyear&quot;&gt;&lt;code&gt;setFullYear()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Устанавливает год (обычно 2-3 цифры) для указанной даты по местному времени. &lt;a href=&quot;setfullyear&quot;&gt; &lt;code&gt;setFullYear()&lt;/code&gt; &lt;/a&gt; этого используйте setFullYear () .</target>
        </trans-unit>
        <trans-unit id="9c35e499a0854cb5e1b033a2aea56399d4cfd894" translate="yes" xml:space="preserve">
          <source>Setter</source>
          <target state="translated">Setter</target>
        </trans-unit>
        <trans-unit id="9b88f431c6dc6ffed8cd032ee8c34f3d668dd703" translate="yes" xml:space="preserve">
          <source>Setting Object properties works for Map objects as well, and can cause considerable confusion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ebf4d730d1a86e34fbc4e7e12209b926edbde04" translate="yes" xml:space="preserve">
          <source>Setting a function parameter's default value</source>
          <target state="translated">Установка значения параметра функции по умолчанию</target>
        </trans-unit>
        <trans-unit id="d9c2bcf75c504df30f7cefd29625a0ed8bc7556b" translate="yes" xml:space="preserve">
          <source>Setting a property that way works similarly:</source>
          <target state="translated">Установка свойства так же работает:</target>
        </trans-unit>
        <trans-unit id="61c147d667c5dd0b95b5fbb06df956b446a6598e" translate="yes" xml:space="preserve">
          <source>Setting a property to &lt;code&gt;true&lt;/code&gt; in an &lt;code&gt;unscopables&lt;/code&gt; object will make it &lt;em&gt;unscopable&lt;/em&gt; and therefore it won't appear in lexical scope variables. Setting a property to &lt;code&gt;false&lt;/code&gt; will make it &lt;code&gt;scopable&lt;/code&gt; and thus it will appear in lexical scope variables.</source>
          <target state="translated">Если &lt;code&gt;unscopables&lt;/code&gt; для свойства значение &lt;code&gt;true&lt;/code&gt; в объекте неподдерживаемого копирования , его &lt;em&gt;нельзя&lt;/em&gt; будет &lt;em&gt;копировать,&lt;/em&gt; и поэтому оно не будет отображаться в переменных лексической области видимости. Установка для свойства значения &lt;code&gt;false&lt;/code&gt; сделает его &lt;code&gt;scopable&lt;/code&gt; и, таким образом, оно будет отображаться в переменных лексической области видимости.</target>
        </trans-unit>
        <trans-unit id="6b736f7555da9f3f20ca4f8abed83ff97a894556" translate="yes" xml:space="preserve">
          <source>Setting a source map by using a comment in the file:</source>
          <target state="translated">Установка исходной карты с помощью комментария в файле:</target>
        </trans-unit>
        <trans-unit id="c5ed7ad12df1fb5c64372abffb2e9c638c2000fd" translate="yes" xml:space="preserve">
          <source>Setting a value to an undeclared variable</source>
          <target state="translated">Установка значения незаявленной переменной</target>
        </trans-unit>
        <trans-unit id="d802a0c2e01ce75745e1daddccdd7641fcd3a872" translate="yes" xml:space="preserve">
          <source>Setting and getting a year between 1900 and 1999</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58354621abe38e6fa61f182a28df19e0742dad56" translate="yes" xml:space="preserve">
          <source>Setting default content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18704ee5bf55fa7a4ef8625d11c78aff5ed97fc6" translate="yes" xml:space="preserve">
          <source>Setting object properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a7ce94c4a2167e053dcb06da36bcc351dd1cf5" translate="yes" xml:space="preserve">
          <source>Setting source maps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72355176fd02c59174f69431d6d28a7c46ebcfb7" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;caseFirst&lt;/code&gt; value via the locale string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f5c820d98e6f641e57feffdbe7de03a4dd5723f" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;numberingSystem&lt;/code&gt; value via the configuration object argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b9e2717ae5e13b20b13650e33bad317e5ce086" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;numberingSystem&lt;/code&gt; value via the locale string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8ef42b51645ed9d75b85a8e62b319ea00ca29e" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;numeric&lt;/code&gt; value via the configuration object argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7af08fe9e48e31062edc4e3228f44253700a436" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;numeric&lt;/code&gt; value via the locale string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d8e940c1a5c794cac1c501b2295828f39b72748" translate="yes" xml:space="preserve">
          <source>Setting the caseFirst value via the configuration object argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3867b01eca1ed654a44c1adac366740e993f8c" translate="yes" xml:space="preserve">
          <source>Setting the language in the locale identifer string argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf10c96506753d986c46a72898876dab87f5735b" translate="yes" xml:space="preserve">
          <source>Setting the region in the locale identifer string argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d9d10f2c2510fe1a37c70576a54aba3b6cf9bc8" translate="yes" xml:space="preserve">
          <source>Setting the region via the configuration object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c9f36b74356f474e1967e717ed710e38da5f58" translate="yes" xml:space="preserve">
          <source>Setting the script in the locale identifer string argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e6a0ab7c79a9402dd5e03b128a4f16ad3b82e8" translate="yes" xml:space="preserve">
          <source>Setting the script via the configuration object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81702dac4a304cb482b46b83d4259d9ba0df1ce4" translate="yes" xml:space="preserve">
          <source>Setting this condition to an extremely high value, won't work:</source>
          <target state="translated">Установка этого условия на экстремально высокое значение,не сработает:</target>
        </trans-unit>
        <trans-unit id="e5567e13e2b74f71cb4dd5f8eb9a1734cbdeaeaf" translate="yes" xml:space="preserve">
          <source>Seventh, strict mode in ECMAScript 2015 forbids setting properties on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;primitive&lt;/a&gt; values. Without strict mode, setting properties is simply ignored (no-op), with strict mode, however, a &lt;a href=&quot;global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">В-седьмых, строгий режим в ECMAScript 2015 запрещает устанавливать свойства для &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/primitive&quot;&gt;примитивных&lt;/a&gt; значений. Без строгого режима установка свойств просто игнорируется (no-op), однако в строгом режиме возникает &lt;a href=&quot;global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e378b1be02d06170e567c1461da163849995ec5" translate="yes" xml:space="preserve">
          <source>Several methods take as arguments functions to be called back while processing the array. When these methods are called, the &lt;code&gt;length&lt;/code&gt; of the array is sampled, and any element added beyond this length from within the callback is not visited. Other changes to the array (setting the value of or deleting an element) may affect the results of the operation if the method visits the changed element afterwards. While the specific behavior of these methods in such cases is well-defined, you should not rely upon it so as not to confuse others who might read your code. If you must mutate the array, copy into a new array instead.</source>
          <target state="translated">Некоторые методы принимают в качестве аргументов функции, вызываемые при обработке массива. Когда эти методы вызываются, выбирается &lt;code&gt;length&lt;/code&gt; массива, и любой элемент, добавленный сверх этой длины из обратного вызова, не посещается. Другие изменения в массиве (установка значения или удаление элемента) могут повлиять на результаты операции, если метод впоследствии посещает измененный элемент. Хотя конкретное поведение этих методов в таких случаях четко определено, вы не должны полагаться на него, чтобы не запутать других, которые могут прочитать ваш код. Если вам необходимо изменить массив, скопируйте его в новый массив.</target>
        </trans-unit>
        <trans-unit id="342a601379480d08bc2d80b568834fc3d288b1d4" translate="yes" xml:space="preserve">
          <source>Several of the built-in array methods (e.g., &lt;a href=&quot;array/join&quot;&gt;&lt;code&gt;join()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;array/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt;, etc.) take into account the value of an array's &lt;a href=&quot;array/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property when they're called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b13b03c46ee2fefc13c607664a82b43b7188a2" translate="yes" xml:space="preserve">
          <source>Several other popular name choices such as &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;global&lt;/code&gt; were removed from consideration because of their potential to break compatibility with existing code. See the &lt;a href=&quot;https://github.com/tc39/proposal-global/blob/master/NAMING.md&quot;&gt;language proposal's &quot;naming&quot; document&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fa5dcc93641d1000655aabcf9ec8bbde718cd3" translate="yes" xml:space="preserve">
          <source>Several ways to create a &lt;code&gt;Date&lt;/code&gt; object</source>
          <target state="translated">Несколько способов создания объекта &lt;code&gt;Date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de963e25b7602e0ee7942cea237e35de08f915c9" translate="yes" xml:space="preserve">
          <source>Several ways to create a Date object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6b0f73eb41bc84c604799d634224dfd17ab580" translate="yes" xml:space="preserve">
          <source>Shallow-cloning (excluding &lt;code&gt;prototype&lt;/code&gt;) or merging objects is now possible using a shorter syntax than &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2c97e02f4e5854072c4a199f854bafe7363bb1" translate="yes" xml:space="preserve">
          <source>Shallow-cloning (excluding prototype) or merging objects is now possible using a shorter syntax than &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Поверхностное клонирование (за исключением прототипа) или слияние объектов теперь возможно с использованием более короткого синтаксиса, чем &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1010e1529b96351c9a1963803e0e132a2d890196" translate="yes" xml:space="preserve">
          <source>Shallow-cloning (excluding prototype) or merging of objects is now possible using a shorter syntax than &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Поверхностное клонирование (за исключением прототипа) или слияние объектов теперь возможно с использованием более короткого синтаксиса, чем &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f8614025c3c38f5ee3873c4f696818eae10fc1f5" translate="yes" xml:space="preserve">
          <source>Sharada digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3004c7e6aeae9b020709213b35fb827cb077916" translate="yes" xml:space="preserve">
          <source>Shared Memory &amp;ndash; a brief tutorial</source>
          <target state="translated">Общая память - краткое руководство</target>
        </trans-unit>
        <trans-unit id="1d4f1ac57e51e36b51a36b14f2f286dad6ccd92c" translate="yes" xml:space="preserve">
          <source>Shared memory and high-resolution timers were effectively &lt;a href=&quot;https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/&quot;&gt;disabled at the start of 2018&lt;/a&gt; in light of &lt;a href=&quot;https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)&quot;&gt;Spectre&lt;/a&gt;. In 2020, a new, secure approach has been standardized to re-enable shared memory. With a few security measures, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage&quot;&gt;postMessage()&lt;/a&gt;&lt;/code&gt; will no longer throw for &lt;code&gt;SharedArrayBuffer&lt;/code&gt; objects and shared memory across threads will be available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19882fcffb8adc396310d800ee5336cd527dc463" translate="yes" xml:space="preserve">
          <source>Shared memory can be created and updated simultaneously in workers or the main thread. Depending on the system (the CPU, the OS, the Browser) it can take a while until the change is propagated to all contexts. To synchronize, &lt;a href=&quot;atomics&quot;&gt;atomic&lt;/a&gt; operations are needed.</source>
          <target state="translated">Общая память может быть создана и обновлена ​​одновременно в рабочих или в основном потоке. В зависимости от системы (ЦП, ОС, браузер) может пройти некоторое время, пока изменение не будет распространено на все контексты. Для синхронизации необходимы &lt;a href=&quot;atomics&quot;&gt;атомарные&lt;/a&gt; операции.</target>
        </trans-unit>
        <trans-unit id="5a6f769ef1b55323ab83c4f8fbea567c105c3380" translate="yes" xml:space="preserve">
          <source>Shared symbols in the global symbol registry</source>
          <target state="translated">Общие символы в реестре глобальных символов</target>
        </trans-unit>
        <trans-unit id="e325a058d86455ee6cae234cc3441f65b091ed4f" translate="yes" xml:space="preserve">
          <source>SharedArrayBuffer</source>
          <target state="translated">SharedArrayBuffer</target>
        </trans-unit>
        <trans-unit id="df15eab9cc5e732bd1032df2046f58440490bf43" translate="yes" xml:space="preserve">
          <source>SharedArrayBuffer.planned_changes</source>
          <target state="translated">SharedArrayBuffer.planned_changes</target>
        </trans-unit>
        <trans-unit id="07d4d521937324f41d929901a32086dc834d13dd" translate="yes" xml:space="preserve">
          <source>SharedArrayBuffer.prototype</source>
          <target state="translated">SharedArrayBuffer.prototype</target>
        </trans-unit>
        <trans-unit id="ba81e1c58c398e7003255d7ca48f89a6ecb42caf" translate="yes" xml:space="preserve">
          <source>SharedArrayBuffer.prototype.constructor</source>
          <target state="translated">SharedArrayBuffer.prototype.constructor</target>
        </trans-unit>
        <trans-unit id="e59d40fa41aac4325ac608929f60c992cf9e5b11" translate="yes" xml:space="preserve">
          <source>SharedArrayBuffer.sharedArrayBuffer</source>
          <target state="translated">SharedArrayBuffer.sharedArrayBuffer</target>
        </trans-unit>
        <trans-unit id="21238f3dcc287ca8c36658c30be737f48889ec03" translate="yes" xml:space="preserve">
          <source>Shift operators convert their operands to 32-bit integers in big-endian order and return a result of the same type as the left operand. The right operand should be less than 32, but if not only the low five bits will be used.</source>
          <target state="translated">Операторы Shift преобразуют свои операнды в 32-битные целые числа в порядке big-endian и возвращают результат того же типа,что и левый операнд.Правый операнд должен быть меньше 32,но если будут использоваться не только младшие пять бит.</target>
        </trans-unit>
        <trans-unit id="ec6c89ed01f0ad9654f7ea375f407f521b89cc1e" translate="yes" xml:space="preserve">
          <source>Shifts &lt;code&gt;a&lt;/code&gt; in binary representation &lt;code&gt;b&lt;/code&gt; (&amp;lt; 32) bits to the left, shifting in &lt;code&gt;0&lt;/code&gt;s from the right.</source>
          <target state="translated">Сдвигает &lt;code&gt;a&lt;/code&gt; в двоичном представлении на &lt;code&gt;b&lt;/code&gt; (&amp;lt;32) бит влево, сдвигая на &lt;code&gt;0&lt;/code&gt; с справа.</target>
        </trans-unit>
        <trans-unit id="66f3a18860b7916730f888b0ee62bbc4dd5dc113" translate="yes" xml:space="preserve">
          <source>Shifts &lt;code&gt;a&lt;/code&gt; in binary representation &lt;code&gt;b&lt;/code&gt; (&amp;lt; 32) bits to the right, discarding bits shifted off, and shifting in &lt;code&gt;0&lt;/code&gt;s from the left.</source>
          <target state="translated">Сдвигает &lt;code&gt;a&lt;/code&gt; в двоичном представлении на &lt;code&gt;b&lt;/code&gt; (&amp;lt;32) бит вправо, отбрасывая сдвинутые биты и сдвигая на &lt;code&gt;0&lt;/code&gt; с слева.</target>
        </trans-unit>
        <trans-unit id="d467506d9933391953faf916edf910a50f7a6a1d" translate="yes" xml:space="preserve">
          <source>Shifts &lt;code&gt;a&lt;/code&gt; in binary representation &lt;code&gt;b&lt;/code&gt; (&amp;lt; 32) bits to the right, discarding bits shifted off.</source>
          <target state="translated">Сдвигает &lt;code&gt;a&lt;/code&gt; в двоичном представлении на &lt;code&gt;b&lt;/code&gt; (&amp;lt;32) бит вправо, отбрасывая сдвинутые биты.</target>
        </trans-unit>
        <trans-unit id="559bb6f18341e257681c26b045288ae8bc3904e0" translate="yes" xml:space="preserve">
          <source>Shim</source>
          <target state="translated">Shim</target>
        </trans-unit>
        <trans-unit id="347a77a10e49392fc41e018b1072a50e747da6a1" translate="yes" xml:space="preserve">
          <source>Short circuit means that the &lt;code&gt;&lt;em&gt;expr&lt;/em&gt;&lt;/code&gt; part above is &lt;strong&gt;not evaluated&lt;/strong&gt;, hence any side effects of doing so do not take effect (e.g., if &lt;code&gt;&lt;em&gt;expr&lt;/em&gt;&lt;/code&gt; is a function call, the calling never takes place).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e16519afc3da738f1daf73ee6d88bc2855176bf" translate="yes" xml:space="preserve">
          <source>Short circuit means that the &lt;code&gt;&lt;em&gt;expr&lt;/em&gt;&lt;/code&gt; part above is &lt;strong&gt;not evaluated&lt;/strong&gt;, hence any side effects of doing so do not take effect (e.g., if &lt;code&gt;&lt;em&gt;expr&lt;/em&gt;&lt;/code&gt; is a function call, the calling never takes place). This happens because the value of the operator is already determined after the evaluation of the first operand. See example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa38efd185b265d92d422b522562b8c0529b096" translate="yes" xml:space="preserve">
          <source>Short-circuit evaluation</source>
          <target state="translated">оценка короткого замыкания</target>
        </trans-unit>
        <trans-unit id="4201119b032db5c4951c0cb35d2d2de5c804364c" translate="yes" xml:space="preserve">
          <source>Short-circuiting</source>
          <target state="translated">Short-circuiting</target>
        </trans-unit>
        <trans-unit id="02803707c812e20e89a7608dae3c270ba02d689f" translate="yes" xml:space="preserve">
          <source>Short-circuiting evaluation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f73817668c95e51f1f60275d19fc117fe95e34" translate="yes" xml:space="preserve">
          <source>Short-circuiting is jargon for conditional evaluation. For example, in the expression &lt;code&gt;a &amp;amp;&amp;amp; (b + c)&lt;/code&gt;, if &lt;code&gt;a&lt;/code&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt;, then the sub-expression &lt;code&gt;(b + c)&lt;/code&gt; will not even get evaluated, even if it is in parentheses. We could say that the logical disjunction operator (&quot;OR&quot;) is &quot;short-circuited&quot;. Along with logical disjunction, other short-circuited operators include logical conjunction (&quot;AND&quot;), nullish-coalescing, optional chaining, and the conditional operator. Some more examples follow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca589a045765b2970eec14b0b781c4f49f56e609" translate="yes" xml:space="preserve">
          <source>Shortening an array</source>
          <target state="translated">Укорачивание массива</target>
        </trans-unit>
        <trans-unit id="3d9caa8ee9f6e0e29c60a9fa3cdac2a8d6e69e98" translate="yes" xml:space="preserve">
          <source>Shorter functions</source>
          <target state="translated">Более короткие функции</target>
        </trans-unit>
        <trans-unit id="fee75364cacf20c1451d7f89119da6487188f025" translate="yes" xml:space="preserve">
          <source>Shorthand method names</source>
          <target state="translated">Короткие названия методов</target>
        </trans-unit>
        <trans-unit id="3dcea08a5274c6df6101a1103ddd07a2c4803e15" translate="yes" xml:space="preserve">
          <source>Shorthand method/property names and computed property names added.</source>
          <target state="translated">Добавлены короткие имена методов/свойств и вычисленные имена свойств.</target>
        </trans-unit>
        <trans-unit id="01848d2b5c9743527619fe8903aef126f798c142" translate="yes" xml:space="preserve">
          <source>Shorthand notation for object literals</source>
          <target state="translated">Короткая нотация для предметных литералов</target>
        </trans-unit>
        <trans-unit id="c96fc7893285259a931fd2c4d91c98f11dcf2087" translate="yes" xml:space="preserve">
          <source>Shorthand operator</source>
          <target state="translated">оператор мобильной связи</target>
        </trans-unit>
        <trans-unit id="627f053e18ee9e3545ab61c789d5d65499fe218e" translate="yes" xml:space="preserve">
          <source>Shorthand property names</source>
          <target state="translated">Недвижимость</target>
        </trans-unit>
        <trans-unit id="360ee9794523b7a11175d1f721be58b52cb3d577" translate="yes" xml:space="preserve">
          <source>Sign-propagating right shift</source>
          <target state="translated">Распространение знаков правого сдвига</target>
        </trans-unit>
        <trans-unit id="597314bca9a8bbf0310932f7bcdf3987cd00e2a2" translate="yes" xml:space="preserve">
          <source>Signed 32-bit integers</source>
          <target state="translated">Подписанные 32-битные целые числа</target>
        </trans-unit>
        <trans-unit id="d467ba4ceadecb68b95353d1ecbf1cf80d911701" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt;, you can get all symbol properties of a given object as an array of symbols. Note that &lt;a href=&quot;getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt; itself does not contain the symbol properties of an object and only the string properties.</source>
          <target state="translated">Подобно &lt;a href=&quot;getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; , вы можете получить все свойства символов данного объекта в виде массива символов. Обратите внимание, что &lt;a href=&quot;getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; сам по себе не содержит свойств символа объекта, а содержит только свойства строки.</target>
        </trans-unit>
        <trans-unit id="7612072e3f7fbf2f5ebf379289f99d3eb3b9f6b5" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that is &lt;code&gt;true&lt;/code&gt; if the property was successfully defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12da585ba6edadb85c477342d381e2d19094d1fe" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Аналогично &lt;a href=&quot;object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; . Возвращает &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e73769762504864885721c08af8f11e9d6fab57" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;. Returns a property descriptor of the given property if it exists on the object, &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; otherwise.</source>
          <target state="translated">Аналогично &lt;a href=&quot;object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; . Возвращает дескриптор данного свойства, если он существует в объекте, в противном случае - &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="32e1219d0bac43abeeee6fc659d6724463a0f050" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that is &lt;code&gt;true&lt;/code&gt; if the update was successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726e4b3611bda9bea7f139588ac0ccfe61b08104" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;. Returns a &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Аналогично &lt;a href=&quot;object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; . Возвращает &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66fb0560e1a8280cb6bc6b1df507f5e9b4881179" translate="yes" xml:space="preserve">
          <source>Similarly, object properties which happen to be reserved words(!) can only be accessed as string literals in bracket notation (but it can be accessed by dot notation in firefox 40.0a2 at least):</source>
          <target state="translated">Аналогично,свойства объектов,которые случайно оказываются зарезервированными словами(!),могут быть доступны только в виде строковых литералов в нотации в скобках (но доступ к ним возможен как минимум по точечной нотации в firefox 40.0a2):</target>
        </trans-unit>
        <trans-unit id="c8f8494880b401e7bc753e175b3db1ebbf0ef7f5" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;code&gt;this&lt;/code&gt; binding is only affected by the most immediate member reference. In the following example, when we invoke the function, we call it as a method &lt;code&gt;g&lt;/code&gt; of the object &lt;code&gt;o.b&lt;/code&gt;. This time during execution, &lt;code&gt;this&lt;/code&gt; inside the function will refer to &lt;code&gt;o.b&lt;/code&gt;. The fact that the object is itself a member of &lt;code&gt;o&lt;/code&gt; has no consequence; the most immediate reference is all that matters.</source>
          <target state="translated">Точно так же на привязку &lt;code&gt;this&lt;/code&gt; влияет только самая непосредственная ссылка на член. В следующем примере, когда мы вызываем функцию, мы вызываем ее как метод &lt;code&gt;g&lt;/code&gt; объекта &lt;code&gt;o.b&lt;/code&gt; . На этот раз во время выполнения &lt;code&gt;this&lt;/code&gt; внутри функции будет ссылаться на &lt;code&gt;o.b&lt;/code&gt; . Тот факт, что объект сам является членом &lt;code&gt;o&lt;/code&gt; , не имеет значения; самая непосредственная ссылка - это все, что имеет значение.</target>
        </trans-unit>
        <trans-unit id="314b7fcddb013e48378d36766f993245e8e450ff" translate="yes" xml:space="preserve">
          <source>Similarly, the same issue can happen if there is a typo in a selector, or an unexpected number of elements in a list:</source>
          <target state="translated">Аналогичная проблема может возникнуть и в случае опечатки в селекторе или неожиданного количества элементов в списке:</target>
        </trans-unit>
        <trans-unit id="b9ace57562b6f6cd0de03f3ef14806171380f098" translate="yes" xml:space="preserve">
          <source>Similarly, unlike &lt;code&gt;Promise.reject(3).then(() =&amp;gt; {}, () =&amp;gt; {})&lt;/code&gt; (which will be fulfilled with &lt;code&gt;undefined&lt;/code&gt;), &lt;code&gt;Promise.reject(3).finally(() =&amp;gt; {})&lt;/code&gt; will be rejected with &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">Аналогично, в отличие от &lt;code&gt;Promise.reject(3).then(() =&amp;gt; {}, () =&amp;gt; {})&lt;/code&gt; (который будет выполнен с &lt;code&gt;undefined&lt;/code&gt; ), &lt;code&gt;Promise.reject(3).finally(() =&amp;gt; {})&lt;/code&gt; будет отклонен с &lt;code&gt;3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87b8f220ccd8e48f67af7a6241d73093c474c963" translate="yes" xml:space="preserve">
          <source>Simple array comprehensions</source>
          <target state="translated">Простое понимание массива</target>
        </trans-unit>
        <trans-unit id="63b0e5dd8195c908090f2d3574af8c9796b70003" translate="yes" xml:space="preserve">
          <source>Simple assignment and chaining</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d21877973c7c7f3d88e03f7612f89be3f8f135c" translate="yes" xml:space="preserve">
          <source>Simple assignment operator is used to assign a value to a variable. The assignment operation evaluates to the assigned value. Chaining the assignment operator is possible in order to assign a single value to multiple variables. See the example.</source>
          <target state="translated">Простой оператор присваивания используется для присвоения значения переменной.Операция присваивания оценивает присвоенное значение.Привязка оператора присваивания возможна для того,чтобы присвоить одно значение нескольким переменным.См.пример.</target>
        </trans-unit>
        <trans-unit id="3188d2aa30d6198bd6246b21c4a9118946add8e6" translate="yes" xml:space="preserve">
          <source>Simple call</source>
          <target state="translated">Простой вызов</target>
        </trans-unit>
        <trans-unit id="373dea533a0d49a9c6fb1be2d9e503372df28cc1" translate="yes" xml:space="preserve">
          <source>Simple example</source>
          <target state="translated">простой пример</target>
        </trans-unit>
        <trans-unit id="e1b891a641050f3cee1b7b94d9a5390ded4ca9e7" translate="yes" xml:space="preserve">
          <source>Simple example that tests if &quot;&lt;code&gt;hello&lt;/code&gt;&quot; is contained at the very beginning of a string, returning a boolean result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dcde6e6e129fc86de852ac6322e0c47fb37dff" translate="yes" xml:space="preserve">
          <source>Simple example that tests if &quot;hello&quot; is contained at the very beginning of a string, returning a boolean result.</source>
          <target state="translated">Простой пример,который проверяет,содержится ли &quot;привет&quot; в самом начале строки,возвращая логический результат.</target>
        </trans-unit>
        <trans-unit id="21a38a7593c9bf32badb48452f5f887cc9f89eb0" translate="yes" xml:space="preserve">
          <source>Simple iterator</source>
          <target state="translated">Простой итератор</target>
        </trans-unit>
        <trans-unit id="562521df9b5d238f74fdaac46ceb02cdd34e490b" translate="yes" xml:space="preserve">
          <source>Simple test case</source>
          <target state="translated">Простой тестовый пример</target>
        </trans-unit>
        <trans-unit id="1e99475861ee428d38a5d21de570d661e5bab4cc" translate="yes" xml:space="preserve">
          <source>Simplified Chinese financial numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0baf701b7beb315812c81ab76b4a76bef29b3be0" translate="yes" xml:space="preserve">
          <source>Simplified Chinese numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f851dd64a037617b104c21a7582116403f4bf32d" translate="yes" xml:space="preserve">
          <source>Simplified ISO 8601 format added.</source>
          <target state="translated">Добавлен упрощенный формат ISO 8601.</target>
        </trans-unit>
        <trans-unit id="866d3d839ef9bf77d5c9055c3581b072e4efbde6" translate="yes" xml:space="preserve">
          <source>Simplifying variable uses</source>
          <target state="translated">Использование упрощающих переменных</target>
        </trans-unit>
        <trans-unit id="30d803dd182f1522d3120d429781069304200715" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;map&lt;/code&gt; builds a new array, using it when you aren't using the returned array is an anti-pattern; use &lt;a href=&quot;foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../statements/for...of&quot;&gt;&lt;code&gt;for-of&lt;/code&gt;&lt;/a&gt; instead. Signs you shouldn't be using map: A) You're not using the array it returns, and/or B) You're not returning a value from the callback.</source>
          <target state="translated">Поскольку &lt;code&gt;map&lt;/code&gt; строит новый массив, использование его, когда вы не используете возвращаемый массив, является анти-шаблоном; вместо этого используйте &lt;a href=&quot;foreach&quot;&gt; &lt;code&gt;forEach&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../../statements/for...of&quot;&gt; &lt;code&gt;for-of&lt;/code&gt; &lt;/a&gt; . Признаки, что вы не должны использовать карту: A) Вы не используете массив, который она возвращает, и / или B) Вы не возвращаете значение из обратного вызова.</target>
        </trans-unit>
        <trans-unit id="a3ba79aa6f210186700169d2123835033c1a9cd5" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;map&lt;/code&gt; builds a new array, using it when you aren't using the returned array is an anti-pattern; use &lt;a href=&quot;foreach&quot;&gt;&lt;code&gt;forEach&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/for...of&quot;&gt;&lt;code&gt;for-of&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed5b5b3b2c944f8164bb2a28a6bf54cf80ac571" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;theArgs&lt;/code&gt; is an array, a count of its elements is given by the &lt;code&gt;length&lt;/code&gt; property:</source>
          <target state="translated">Поскольку &lt;code&gt;theArgs&lt;/code&gt; является массивом, количество его элементов задается свойством &lt;code&gt;length&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="32315c781072c1c531c1191c29ef8e345968e1c8" translate="yes" xml:space="preserve">
          <source>Since ECMAScript 5&lt;sup&gt;th&lt;/sup&gt; Edition, you can also use any kind of object which is array-like. In practice, this means it's going to have a &lt;code&gt;length&lt;/code&gt; property, and integer (&quot;index&quot;) properties in the range &lt;code&gt;(0..length - 1)&lt;/code&gt;. For example, you could use a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt;, or a custom object like &lt;code&gt;{ 'length': 2, '0': 'eat', '1': 'bananas' }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6faae15a77c54726fe780c386818aee94c86b4" translate="yes" xml:space="preserve">
          <source>Since ECMAScript 5th Edition you can also use any kind of object which is array-like, so in practice, this means it's going to have a property &lt;code&gt;length&lt;/code&gt; and integer properties in the range &lt;code&gt;(0..length-1)&lt;/code&gt;. As an example you can now use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; or a custom object like &lt;code&gt;{ 'length': 2, '0': 'eat', '1': 'bananas' }&lt;/code&gt;.</source>
          <target state="translated">Начиная с ECMAScript 5th Edition, вы также можете использовать любой тип объекта, подобного массиву, поэтому на практике это означает, что он будет иметь &lt;code&gt;length&lt;/code&gt; свойства и целочисленные свойства в диапазоне &lt;code&gt;(0..length-1)&lt;/code&gt; . В качестве примера теперь можно использовать &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NodeList&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; &lt;/a&gt; или настраиваемый объект, например &lt;code&gt;{ 'length': 2, '0': 'eat', '1': 'bananas' }&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6cec41a71cb681f6030569b55b297bd9d9cf045b" translate="yes" xml:space="preserve">
          <source>Since Firefox 17, &lt;code&gt;Function.prototype.toString()&lt;/code&gt; has been implemented by saving the function's source. The decompiler was removed, so that the &lt;code&gt;indentation&lt;/code&gt; parameter is not needed any more. See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=761723&quot;&gt;bug 761723&lt;/a&gt; for more details.</source>
          <target state="translated">Начиная с Firefox 17 &lt;code&gt;Function.prototype.toString()&lt;/code&gt; была реализована путем сохранения исходного кода функции. Декомпилятор был удален, поэтому параметр &lt;code&gt;indentation&lt;/code&gt; больше не нужен. Подробнее см. &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=761723&quot;&gt;Ошибку 761723&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e8d807c6b9d2ce479bcd61efa5a0db2afcbfd97" translate="yes" xml:space="preserve">
          <source>Since JavaScript doesn't exactly have sub-class objects, prototype is a useful workaround to make a &amp;ldquo;base class&amp;rdquo; object of certain functions that act as objects. For example:</source>
          <target state="translated">Поскольку в JavaScript нет точно объектов подкласса, прототип является полезным обходным путем для создания объекта &amp;laquo;базового класса&amp;raquo; из определенных функций, которые действуют как объекты. Например:</target>
        </trans-unit>
        <trans-unit id="fa402cad80721be5abc7cf887713133341bda618" translate="yes" xml:space="preserve">
          <source>Since `length` counts code units instead of characters, if you want to get the number of characters you need something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1137fd50caf0a00d44aadca6f5fba09bd128dc71" translate="yes" xml:space="preserve">
          <source>Since arrow functions do not have their own &lt;code&gt;this&lt;/code&gt;, the methods &lt;code&gt;call()&lt;/code&gt; or &lt;code&gt;apply()&lt;/code&gt; can only pass in parameters. &lt;code&gt;thisArg&lt;/code&gt; is ignored.</source>
          <target state="translated">Поскольку у стрелочных функций нет собственного &lt;code&gt;this&lt;/code&gt; , методы &lt;code&gt;call()&lt;/code&gt; или &lt;code&gt;apply()&lt;/code&gt; могут передавать только параметры. &lt;code&gt;thisArg&lt;/code&gt; игнорируется.</target>
        </trans-unit>
        <trans-unit id="4cbf198eed51dfbaf9f422ffebe7b4085f3c8590" translate="yes" xml:space="preserve">
          <source>Since async generators implement async Iterator protocol, they can be looped using &lt;code&gt;for await...of&lt;/code&gt;</source>
          <target state="translated">Поскольку генераторы async реализуют протокол async Iterator, их можно зациклить, используя &lt;code&gt;for await...of&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="107cc2038555bd4704ce458f246f7f403b394b0b" translate="yes" xml:space="preserve">
          <source>Since bitwise operators are 32-bit, 0101 is actually 00000000000000000000000000000101, but the preceding zeroes can be neglected since they contain no meaningful information.</source>
          <target state="translated">Так как битовые операторы 32-битные,0101 на самом деле 00000000000000000000000101,но предыдущими нулями можно пренебречь,так как они не содержат никакой значимой информации.</target>
        </trans-unit>
        <trans-unit id="60462115c73e8e25706139cffcf3a74613e86c21" translate="yes" xml:space="preserve">
          <source>Since humans tend to think in degrees, and some functions (such as CSS transforms) can accept degrees, it is a good idea to keep functions handy that convert between the two:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce9bc4b39b1e28f4b16d021a4e32d8aef24b983" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter (&lt;code&gt;this&lt;/code&gt;) is provided to &lt;code&gt;forEach()&lt;/code&gt;, it is passed to &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; each time it's invoked. The callback uses it as its &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3094b7da7736fc74ce35405ac9e52cde97dc8be6" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;set()&lt;/code&gt; method returns back the same &lt;code&gt;Map&lt;/code&gt; object, you can chain the method call like below:</source>
          <target state="translated">Поскольку метод &lt;code&gt;set()&lt;/code&gt; возвращает тот же объект &lt;code&gt;Map&lt;/code&gt; , вы можете связать вызов метода, как показано ниже:</target>
        </trans-unit>
        <trans-unit id="19afb74d683cc19dd7febe7e86b411cdbd32fc65" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;thisArg&lt;/code&gt; parameter (&lt;code&gt;this&lt;/code&gt;) is provided to &lt;code&gt;forEach()&lt;/code&gt;, it is passed to &lt;code&gt;callback&lt;/code&gt; each time it's invoked, for use as its &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">Поскольку параметр &lt;code&gt;thisArg&lt;/code&gt; ( &lt;code&gt;this&lt;/code&gt; ) предоставляется для &lt;code&gt;forEach()&lt;/code&gt; , он передается функции &lt;code&gt;callback&lt;/code&gt; каждом вызове для использования в качестве значения &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4265f72bee3daad3d45aeaaa2ecf276c5d7d4d46" translate="yes" xml:space="preserve">
          <source>Since the following code is not in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, and because the value of &lt;code&gt;this&lt;/code&gt; is not set by the call, &lt;code&gt;this&lt;/code&gt; will default to the global object, which is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; in a browser.</source>
          <target state="translated">Поскольку следующий код не в &lt;a href=&quot;../strict_mode&quot;&gt;строгом режиме&lt;/a&gt; , и потому , что значение &lt;code&gt;this&lt;/code&gt; не установлено вызовом, &lt;code&gt;this&lt;/code&gt; будет по умолчанию глобального объекту, который находится &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt; в браузере.</target>
        </trans-unit>
        <trans-unit id="fd9240d3fb708b317c4ad8edd6a347f9f550d75a" translate="yes" xml:space="preserve">
          <source>Since the function actually does not have a name, &lt;code&gt;anonymous&lt;/code&gt; is not a variable that can be accessed within the function. For example, the following would result in an error:</source>
          <target state="translated">Поскольку функция фактически не имеет имени, &lt;code&gt;anonymous&lt;/code&gt; переменная не может быть доступна внутри функции. Например, следующее может привести к ошибке:</target>
        </trans-unit>
        <trans-unit id="7ee95163aaa8be39e496cf35c1d82c6f42e868df" translate="yes" xml:space="preserve">
          <source>Since the return values of async generators conform to the async iterable protocol, they can be looped using &lt;code&gt;for await...of&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8326888509aa7193cd696c82f8a29ed104d951" translate="yes" xml:space="preserve">
          <source>Since the very earliest versions of the &lt;code&gt;isNaN&lt;/code&gt; function specification, its behavior for non-numeric arguments has been confusing. When the argument to the &lt;code&gt;isNaN&lt;/code&gt; function is not of type &lt;a href=&quot;http://es5.github.com/#x8.5&quot;&gt;Number&lt;/a&gt;, the value is first coerced to a Number. The resulting value is then tested to determine whether it is &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;. Thus for non-numbers that when coerced to numeric type result in a valid non-NaN numeric value (notably the empty string and boolean primitives, which when coerced give numeric values zero or one), the &quot;false&quot; returned value may be unexpected; the empty string, for example, is surely &quot;not a number.&quot; The confusion stems from the fact that the term, &quot;not a number&quot;, has a specific meaning for numbers represented as IEEE-754 floating-point values. The function should be interpreted as answering the question, &quot;is this value, when coerced to a numeric value, an IEEE-754 'Not A Number' value?&quot;</source>
          <target state="translated">Начиная с самых ранних версий &lt;code&gt;isNaN&lt;/code&gt; функции isNaN , ее поведение для нечисловых аргументов сбивало с толку. Когда аргумент функции &lt;code&gt;isNaN&lt;/code&gt; не относится к типу &lt;a href=&quot;http://es5.github.com/#x8.5&quot;&gt;Number&lt;/a&gt; , значение сначала приводится к Number. Полученное значение затем проверяется, чтобы определить, является ли оно &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; .&lt;/a&gt;, Таким образом, для нечисловых, которые при приведении к числовому типу приводят к допустимому числовому значению, отличному от NaN (в частности, пустая строка и логические примитивы, которые при принуждении дают числовые значения ноль или один), возвращаемое значение &amp;laquo;ложь&amp;raquo; может быть неожиданным; пустая строка, например, определенно &amp;laquo;не число&amp;raquo;. Путаница возникает из-за того, что термин &amp;laquo;не число&amp;raquo; имеет особое значение для чисел, представленных как значения с плавающей запятой IEEE-754. Функцию следует интерпретировать как ответ на вопрос: &amp;laquo;Является ли это значение, приведенное к числовому, значением IEEE-754&amp;laquo; Not A Number &amp;raquo;?&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="9844b7ab7b0e078daf0e7569343da30c6d1c6fe5" translate="yes" xml:space="preserve">
          <source>Since the very earliest versions of the &lt;code&gt;isNaN&lt;/code&gt; function specification, its behavior for non-numeric arguments has been confusing. When the argument to the &lt;code&gt;isNaN&lt;/code&gt; function is not of type &lt;a href=&quot;https://es5.github.com/#x8.5&quot;&gt;Number&lt;/a&gt;, the value is first coerced to a Number. The resulting value is then tested to determine whether it is &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;. Thus for non-numbers that when coerced to numeric type result in a valid non-NaN numeric value (notably the empty string and boolean primitives, which when coerced give numeric values zero or one), the &quot;false&quot; returned value may be unexpected; the empty string, for example, is surely &quot;not a number.&quot; The confusion stems from the fact that the term, &quot;not a number&quot;, has a specific meaning for numbers represented as IEEE-754 floating-point values. The function should be interpreted as answering the question, &quot;is this value, when coerced to a numeric value, an IEEE-754 'Not A Number' value?&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324d6923942be157c594f830647b5122e2de17d5" translate="yes" xml:space="preserve">
          <source>Since there is no global object with the name &lt;em&gt;TypedArray&lt;/em&gt;, polyfilling must be done on an &quot;as needed&quot; basis.</source>
          <target state="translated">Поскольку глобального объекта с именем &lt;em&gt;TypedArray не существует&lt;/em&gt; , полифиллинг должен выполняться &amp;laquo;по мере необходимости&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="dc89b83e9774aba6e49da31de8219cc841e42fc1" translate="yes" xml:space="preserve">
          <source>Since there is no global object with the name &lt;em&gt;TypedArray&lt;/em&gt;, polyfilling must be done on an &quot;as needed&quot; basis. Use the following &quot;polyfill&quot; along with the &lt;a href=&quot;../array/fill&quot;&gt;&lt;code&gt;Array.prototype.fill()&lt;/code&gt;&lt;/a&gt; polyfill.</source>
          <target state="translated">Поскольку глобального объекта с именем &lt;em&gt;TypedArray не существует&lt;/em&gt; , полифиллинг должен выполняться &amp;laquo;по мере необходимости&amp;raquo;. Используйте следующий &amp;laquo;полифилл&amp;raquo; вместе с &lt;a href=&quot;../array/fill&quot;&gt; &lt;code&gt;Array.prototype.fill()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="864fede6f21fc6e7519d27bd850ee0d32e426663" translate="yes" xml:space="preserve">
          <source>Sinhala Lith digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5a1282da0efb66b6415f8c1771c4087d2c4f09" translate="yes" xml:space="preserve">
          <source>Sixth, a strict mode in ECMAScript 5 forbids octal syntax. The octal syntax isn't part of ECMAScript 5, but it's supported in all browsers by prefixing the octal number with a zero: &lt;code&gt;0644 === 420&lt;/code&gt; and &lt;code&gt;&quot;\045&quot; === &quot;%&quot;&lt;/code&gt;. In ECMAScript 2015 Octal number is supported by prefixing a number with &quot;&lt;code&gt;0o&lt;/code&gt;&quot;. i.e.</source>
          <target state="translated">В-шестых, строгий режим в ECMAScript 5 запрещает восьмеричный синтаксис. Восьмеричный синтаксис не является частью ECMAScript 5, но он поддерживается во всех браузерах путем добавления к восьмеричному числу нуля: &lt;code&gt;0644 === 420&lt;/code&gt; и &lt;code&gt;&quot;\045&quot; === &quot;%&quot;&lt;/code&gt; . В ECMAScript 2015 восьмеричное число поддерживается с помощью префикса &amp;laquo; &lt;code&gt;0o&lt;/code&gt; &amp;raquo;. т.е.</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="23aa6e811d60088ebfe23efb308861aa99dcc44c" translate="yes" xml:space="preserve">
          <source>Size in bytes</source>
          <target state="translated">Размер в байтах</target>
        </trans-unit>
        <trans-unit id="fe13328dc11d0995148fea4b3db1bb211eb2e743" translate="yes" xml:space="preserve">
          <source>Slicing the SharedArrayBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c1b4bd9fee0fa391ca751e904240ca4e1dd35a" translate="yes" xml:space="preserve">
          <source>Smart / self-overwriting / lazy getters</source>
          <target state="translated">Умные/самозаписывающие/ленивые геттеры</target>
        </trans-unit>
        <trans-unit id="956b0d01bd2c8819f233c3354d4bfd0a6fb764d2" translate="yes" xml:space="preserve">
          <source>So basically one can change the value of the &lt;code&gt;constructor&lt;/code&gt; property for anything, except the primitives mentioned above, &lt;strong&gt;note that changing the &lt;/strong&gt;&lt;code&gt;constructor&lt;/code&gt;&lt;strong&gt; property does not affect the instanceof operator&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c9741618abdd396e344c2d79dc2ec7a7c20898" translate="yes" xml:space="preserve">
          <source>So e.g.: &lt;code&gt;9 &amp;lt;&amp;lt; 3&lt;/code&gt; translates to: &lt;code&gt;9 * (2 ** 3) = 9 * (8) = 72&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb734e860807d8a358d6b2d495055a87ec0c8fd6" translate="yes" xml:space="preserve">
          <source>So the global object will ultimately be searched for unqualified identifiers. You don't have to type &lt;code&gt;globalThis.String&lt;/code&gt;, you can just type the unqualified &lt;code&gt;String&lt;/code&gt;. The corollary, in non-strict mode, is that assignment to unqualified identifiers will, if there is no variable of the same name declared in the scope chain, assume you want to create a property with that name on the global object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d187a326bca711db53d517b942dd65ed841445b" translate="yes" xml:space="preserve">
          <source>So you can just type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a6b66eca9f52c9c302480a434d85482ad5c96f" translate="yes" xml:space="preserve">
          <source>So, for example: &lt;code&gt;'undefined'.indexOf()&lt;/code&gt; will return &lt;code&gt;0&lt;/code&gt;, as &lt;code&gt;undefined&lt;/code&gt; is found at position &lt;code&gt;0&lt;/code&gt; in the string &lt;code&gt;undefined&lt;/code&gt;. &lt;code&gt;'undefine'.indexOf()&lt;/code&gt; however will return &lt;code&gt;-1&lt;/code&gt;, as &lt;code&gt;undefined&lt;/code&gt; is not found in the string &lt;code&gt;undefine&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35df3dadfdd74fc0901a579f2feccd49e7299a44" translate="yes" xml:space="preserve">
          <source>So, in &lt;strong&gt;strict mode,&lt;/strong&gt; if &lt;code&gt;this&lt;/code&gt; was not defined by the execution context, it remains undefined.</source>
          <target state="translated">Таким образом, в &lt;strong&gt;строгом режиме,&lt;/strong&gt; если &lt;code&gt;this&lt;/code&gt; не было определено контекстом выполнения, оно остается неопределенным.</target>
        </trans-unit>
        <trans-unit id="f35b6b229b0041cdfc70b75acd957f9e6f9eda29" translate="yes" xml:space="preserve">
          <source>So, the compare function has the following form:</source>
          <target state="translated">Итак,функция сравнения имеет следующую форму:</target>
        </trans-unit>
        <trans-unit id="f1b9f183c06e67de66ae93ed091133dd82d8944c" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript statements&lt;/a&gt; must be terminated with semicolons and are therefore affected by automatic semicolon insertion (ASI):</source>
          <target state="translated">Некоторые &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;операторы JavaScript&lt;/a&gt; должны заканчиваться точкой с запятой, поэтому на них действует автоматическая вставка точки с запятой (ASI):</target>
        </trans-unit>
        <trans-unit id="870666d0bb56d9763161fadd830c8925d2aa3794" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements&quot;&gt;JavaScript statements&lt;/a&gt; must be terminated with semicolons and are therefore affected by automatic semicolon insertion (ASI):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afb790f7aeba0069ba492204a7cc489e1431989" translate="yes" xml:space="preserve">
          <source>Some NON-solutions</source>
          <target state="translated">Некоторые NON-решения</target>
        </trans-unit>
        <trans-unit id="93f1e042e75f3a77c9c984523d9d388a5f2f873d" translate="yes" xml:space="preserve">
          <source>Some OK solutions</source>
          <target state="translated">Некоторые OK решения</target>
        </trans-unit>
        <trans-unit id="a2870bc22085956cef7ea5cdeb982aad718646b9" translate="yes" xml:space="preserve">
          <source>Some browsers include the &lt;code&gt;CustomError&lt;/code&gt; constructor in the stack trace when using ES2015 classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b53e4d6d1d55025e7681dc5ef1588f99894d04a2" translate="yes" xml:space="preserve">
          <source>Some browsers include the CustomError constructor in the stack trace when using ES2015 classes.</source>
          <target state="translated">Некоторые браузеры включают конструктор CustomError в трассу стека при использовании классов ES2015.</target>
        </trans-unit>
        <trans-unit id="afc6ae2d973353ca7cb6dd3c17f37ddd491da3dc" translate="yes" xml:space="preserve">
          <source>Some built-in constructs&amp;mdash;such as the &lt;a href=&quot;operators/spread_syntax&quot;&gt;spread syntax&lt;/a&gt;&amp;mdash;use the same iteration protocol under the hood:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fff7350dafcea95b1b62962f4e03f266a101e9" translate="yes" xml:space="preserve">
          <source>Some built-in constructs, such as the &lt;a href=&quot;operators/spread_syntax&quot;&gt;spread syntax&lt;/a&gt;, use the same iteration protocol under the hood:</source>
          <target state="translated">Некоторые встроенные конструкции, такие как &lt;a href=&quot;operators/spread_syntax&quot;&gt;синтаксис распространения&lt;/a&gt; , используют тот же протокол итераций под капотом:</target>
        </trans-unit>
        <trans-unit id="475dcf5edb4ba6e07e2e279a3b43795e7fc60be5" translate="yes" xml:space="preserve">
          <source>Some built-in properties are not iterated over. These include all built-in methods of objects, e.g. &lt;code&gt;String&lt;/code&gt;'s &lt;code&gt;indexOf&lt;/code&gt; method. However, all user-defined properties are iterated over.</source>
          <target state="translated">Некоторые встроенные свойства не повторяются. Они включают в себя все встроенные методы объектов, например , типа &lt;code&gt;String&lt;/code&gt; &amp;laquo;s &lt;code&gt;indexOf&lt;/code&gt; метод. Однако повторяются все определяемые пользователем свойства.</target>
        </trans-unit>
        <trans-unit id="7e6816f7d69f94e4abc3cb0c68bd3025851c1fb1" translate="yes" xml:space="preserve">
          <source>Some built-in types have a default iteration behavior, while other types (such as &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;) do not. The built-in types with a &lt;code&gt;@@iterator&lt;/code&gt; method are:</source>
          <target state="translated">Некоторые встроенные типы имеют итерационное поведение по умолчанию, а другие типы (например, &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; ) - нет. Встроенные типы с методом &lt;code&gt;@@iterator&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b96f2240c5e5da61a766ff02d753606db8cae1a1" translate="yes" xml:space="preserve">
          <source>Some characters look similar, but will cause the parser to fail interpreting your code. Famous examples of this are quotes, the minus or semicolon (&lt;a href=&quot;https://en.wikipedia.org/wiki/Question_mark#Greek_question_mark&quot;&gt;greek questionmark (U+37e)&lt;/a&gt; looks same).</source>
          <target state="translated">Некоторые символы выглядят одинаково, но из-за этого синтаксический анализатор не сможет интерпретировать ваш код. Известные примеры этого - кавычки, минус или точка с запятой ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Question_mark#Greek_question_mark&quot;&gt;греческий вопросительный знак (U + 37e)&lt;/a&gt; выглядит так же).</target>
        </trans-unit>
        <trans-unit id="590737b0e599abebcc823863e03121f065403314" translate="yes" xml:space="preserve">
          <source>Some common radix are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc3ca83ba810c954c0a7853ac1d520550ad8317" translate="yes" xml:space="preserve">
          <source>Some content (text, examples) in this page has been copied or adapted from the &lt;a href=&quot;http://wiki.ecmascript.org/doku.php&quot;&gt;ECMAScript wiki&lt;/a&gt; which content is licensed &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/2.0/&quot;&gt;CC 2.0 BY-NC-SA&lt;/a&gt;.</source>
          <target state="translated">Некоторое содержимое (текст, примеры) на этой странице было скопировано или адаптировано из &lt;a href=&quot;http://wiki.ecmascript.org/doku.php&quot;&gt;вики-&lt;/a&gt; страницы ECMAScript, содержание которой лицензировано &lt;a href=&quot;http://creativecommons.org/licenses/by-nc-sa/2.0/&quot;&gt;CC 2.0 BY-NC-SA&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="01730f379885deeb70c07d17c0759c530311da44" translate="yes" xml:space="preserve">
          <source>Some editors and IDEs will notify you or at least use a slightly different highlighting for it, but not all. When something like this happens to your code and you're not able to find the source of the problem, it's often best to just delete the problematic line and retype it.</source>
          <target state="translated">Некоторые редакторы и IDE уведомят вас или,по крайней мере,используют для этого немного другую подсветку,но не все.Когда с вашим кодом происходит что-то подобное,и вы не можете найти источник проблемы,часто лучше просто удалить проблемную строку и перепечатать ее.</target>
        </trans-unit>
        <trans-unit id="e1ad51562554ad9a3f1e5a9387cdae7d2e5b52e9" translate="yes" xml:space="preserve">
          <source>Some example run-throughs of the function would look like this:</source>
          <target state="translated">Некоторые примеры прогонов функции будут выглядеть так:</target>
        </trans-unit>
        <trans-unit id="19a0595ec8d8c8a26007225f5d8e3933107854cc" translate="yes" xml:space="preserve">
          <source>Some non-standard IE properties return other values (&lt;a href=&quot;https://github.com/tc39/ecma262/issues/1440#issuecomment-461963872&quot;&gt;tc39/ecma262#1440 (comment)&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c707d2b9d604d0cc2f5227537cafd0e5d1cc3f3c" translate="yes" xml:space="preserve">
          <source>Some non-standard traps are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#Proxy&quot;&gt;obsolete and have been removed&lt;/a&gt;.</source>
          <target state="translated">Некоторые нестандартные ловушки &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Deprecated_and_obsolete_features#Proxy&quot;&gt;устарели и были удалены&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23d1ab47347821717497d50eff6b5f911ebdbe54" translate="yes" xml:space="preserve">
          <source>Some notes on &lt;code&gt;WeakRef&lt;/code&gt;s:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9dacca65e2f13170f19d8eab341331a084ed99" translate="yes" xml:space="preserve">
          <source>Some notes on cleanup callbacks:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e88e9b87d0ff9ee5bbb6dc29aa216f42ec295f" translate="yes" xml:space="preserve">
          <source>Some of the many differences (there may well be others, as this list does not seriously attempt to be exhaustive) between this algorithm and the specified algorithm are:</source>
          <target state="translated">Некоторые из многих различий (возможно,есть и другие,так как этот список не является исчерпывающим)между этим алгоритмом и указанным алгоритмом:</target>
        </trans-unit>
        <trans-unit id="aa0f2d05a3619a13b34a8eaf00a014c46c9aa93b" translate="yes" xml:space="preserve">
          <source>Some of these methods are also the same as corresponding methods on &lt;a href=&quot;object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, although they do have &lt;a href=&quot;reflect/comparing_reflect_and_object_methods&quot;&gt;some subtle differences&lt;/a&gt; between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fdf38d201f66d514cfad7c6d082350ca2d54f5" translate="yes" xml:space="preserve">
          <source>Some other examples of parsing non&amp;ndash;standard date strings:</source>
          <target state="translated">Еще несколько примеров разбора нестандартных строк даты:</target>
        </trans-unit>
        <trans-unit id="ee0051a3cfe0f195587c18232157d2da46929dea" translate="yes" xml:space="preserve">
          <source>Some other examples of parsing non-standard date strings:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfd5a55e13800ba623bc9719ff2d1eac2ffc4a8" translate="yes" xml:space="preserve">
          <source>Some statements and expressions expect iterables, for example the &lt;a href=&quot;statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; loops, the &lt;a href=&quot;operators/spread_syntax&quot;&gt;spread operator&lt;/a&gt;), &lt;a href=&quot;operators/yield*&quot;&gt;&lt;code&gt;yield*&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;operators/destructuring_assignment&quot;&gt;&lt;code&gt;destructuring assignment&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec28ba673b4d0cfb9882d5c50e27ded29f70bbf" translate="yes" xml:space="preserve">
          <source>Some statements and expressions expect iterables, for example the &lt;code&gt;&lt;a href=&quot;statements/for...of&quot;&gt;for-of&lt;/a&gt;&lt;/code&gt; loops, &lt;a href=&quot;operators/spread_syntax&quot;&gt;spread syntax&lt;/a&gt;, &lt;code&gt;&lt;a href=&quot;operators/yield*&quot;&gt;yield*&lt;/a&gt;&lt;/code&gt;, and &lt;a href=&quot;operators/destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt;:</source>
          <target state="translated">Некоторые операторы и выражения ожидают итераций, например циклы &lt;code&gt;&lt;a href=&quot;statements/for...of&quot;&gt;for-of&lt;/a&gt;&lt;/code&gt; , &lt;a href=&quot;operators/spread_syntax&quot;&gt;синтаксис распространения&lt;/a&gt; , &lt;code&gt;&lt;a href=&quot;operators/yield*&quot;&gt;yield*&lt;/a&gt;&lt;/code&gt; и &lt;a href=&quot;operators/destructuring_assignment&quot;&gt;деструктурирующее присваивание&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="06ab90b31161169e06486a5de6e23559c94f37ff" translate="yes" xml:space="preserve">
          <source>Some subtle distinctions between &lt;a href=&quot;../array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from()&lt;/code&gt;:</source>
          <target state="translated">Некоторые тонкие различия между &lt;a href=&quot;../array/from&quot;&gt; &lt;code&gt;Array.from()&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.from()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f1f7e4bf8444857fe7d7b4000f0d9a163045605d" translate="yes" xml:space="preserve">
          <source>Some subtle distinctions between &lt;a href=&quot;../array/from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;.from()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781f63aed9401f0aa059ed66a4dfdb11128a0c41" translate="yes" xml:space="preserve">
          <source>Some subtle distinctions between &lt;a href=&quot;../array/of&quot;&gt;&lt;code&gt;Array.of()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of()&lt;/code&gt;:</source>
          <target state="translated">Некоторые тонкие различия между &lt;a href=&quot;../array/of&quot;&gt; &lt;code&gt;Array.of()&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;&lt;em&gt;TypedArray&lt;/em&gt;.of()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9b9f00815a4a95417dba58ee578e8b75495ce992" translate="yes" xml:space="preserve">
          <source>Some subtle distinctions between &lt;a href=&quot;../array/of&quot;&gt;&lt;code&gt;Array.of()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;.of()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd479f7a816d68f8ede0b9aca79d96b5800b91e3" translate="yes" xml:space="preserve">
          <source>Some things to note when working with type conversion of symbols.</source>
          <target state="translated">Некоторые вещи следует отметить при работе с приведением типов символов.</target>
        </trans-unit>
        <trans-unit id="45f0d8c53423ebf11a254ff9ab692fc7380ed9bb" translate="yes" xml:space="preserve">
          <source>Some time later, when the first promise has either been fulfilled or rejected, control moves back into &lt;code&gt;foo&lt;/code&gt;. The result of the first promise fulfilment (if it was not rejected) is returned from the await expression. Here &lt;code&gt;1&lt;/code&gt; is assigned to &lt;code&gt;result1&lt;/code&gt;. Progress continues, and the second await expression is evaluated. Again, progress through &lt;code&gt;foo&lt;/code&gt; is suspended and control is yielded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8c11d47ab2f9d41f5275a803a310eed36351fc" translate="yes" xml:space="preserve">
          <source>Some time later, when the second promise has either been fulfilled or rejected, control re-enters &lt;code&gt;foo&lt;/code&gt;. The result of the second promise resolution is returned from the second await expression. Here &lt;code&gt;2&lt;/code&gt; is assigned to &lt;code&gt;result2&lt;/code&gt;. Control moves to the return expression (if any). The default return value of &lt;code&gt;undefined&lt;/code&gt; is returned as the resolution value of the current promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c7ff5ded32c9a9464b5d31e03d4cc1e3b54fc9" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to allow access to a property that returns a dynamically computed value, or you may want to reflect the status of an internal variable without requiring the use of explicit method calls. In JavaScript, this can be accomplished with the use of a &lt;em&gt;getter&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19af74cb5e8f0d2d66ff036dda439a607fac0356" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to allow access to a property that returns a dynamically computed value, or you may want to reflect the status of an internal variable without requiring the use of explicit method calls. In JavaScript, this can be accomplished with the use of a &lt;em&gt;getter&lt;/em&gt;. It is not possible to simultaneously have a getter bound to a property and have that property actually hold a value, although it is possible to use a getter and a setter in conjunction to create a type of pseudo-property.</source>
          <target state="translated">Иногда желательно разрешить доступ к свойству, которое возвращает динамически вычисляемое значение, или вы можете захотеть отразить статус внутренней переменной, не требуя использования явных вызовов методов. В JavaScript это можно сделать с помощью &lt;em&gt;геттера&lt;/em&gt; . Невозможно одновременно иметь геттер, привязанный к свойству, и иметь это свойство, фактически содержащее значение, хотя можно использовать геттер и сеттер вместе для создания типа псевдосвойства.</target>
        </trans-unit>
        <trans-unit id="70e77a060b0accffd4f7aac4ab502a07729921f8" translate="yes" xml:space="preserve">
          <source>Sometimes when making a class, you may have a property and a function with the same name. Upon calling the function, the compiler thinks that the function ceases to exist.</source>
          <target state="translated">Иногда при создании класса может быть свойство и функция с тем же именем.При вызове функции компилятор думает,что функция перестает существовать.</target>
        </trans-unit>
        <trans-unit id="286306fdb517a6f3f4d9abc5f4056518ce3ad8d4" translate="yes" xml:space="preserve">
          <source>Sometimes you want to toggle the attribute or class name of two different elements. Here's how using the &lt;a href=&quot;proxy/handler/set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">Иногда вы хотите переключить атрибут или имя класса двух разных элементов. Вот как использовать обработчик &lt;a href=&quot;proxy/handler/set&quot;&gt; &lt;code&gt;set&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7ebde441ded398d998f042bf7af1fec0b413f3b" translate="yes" xml:space="preserve">
          <source>Sometimes you want to toggle the attribute or class name of two different elements. Here's how using the &lt;a href=&quot;proxy/proxy/set&quot;&gt;&lt;code&gt;set&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5b5d69fd70be12252988bd9226104dcb63e3b2" translate="yes" xml:space="preserve">
          <source>Sometimes you would like to apply array methods to strings or other array-like objects (such as function &lt;a href=&quot;../functions/arguments&quot;&gt;arguments&lt;/a&gt;). By doing this, you treat a string as an array of characters (or otherwise treat a non-array as an array). For example, in order to check that every character in the variable &lt;var&gt;str&lt;/var&gt; is a letter, you would write:</source>
          <target state="translated">Иногда вы хотите применить методы массива к строкам или другим объектам, подобным массиву (например, &lt;a href=&quot;../functions/arguments&quot;&gt;аргументам&lt;/a&gt; функции ). Делая это, вы обрабатываете строку как массив символов (или иным образом обрабатываете не-массив как массив). Например, чтобы проверить, что каждый символ в переменной &lt;var&gt;str&lt;/var&gt; является буквой, вы должны написать:</target>
        </trans-unit>
        <trans-unit id="f7561ae0858c4ed85bf9f54beacd6f887e13c170" translate="yes" xml:space="preserve">
          <source>Sometimes you'll see the default, non-strict mode referred to as &lt;strong&gt;&quot;&lt;a href=&quot;https://developer.mozilla.org/docs/Glossary/Sloppy_mode&quot; id=&quot;sloppyModeId333&quot;&gt;sloppy mode&lt;/a&gt;&quot;&lt;/strong&gt;. This isn't an official term, but be aware of it, just in case.</source>
          <target state="translated">Иногда вы увидите нестрогий режим по умолчанию, называемый &lt;strong&gt;&amp;laquo; &lt;a href=&quot;https://developer.mozilla.org/docs/Glossary/Sloppy_mode&quot; id=&quot;sloppyModeId333&quot;&gt;небрежным режимом&lt;/a&gt; &amp;raquo;&lt;/strong&gt; . Это не официальный термин, но имейте в виду, на всякий случай.</target>
        </trans-unit>
        <trans-unit id="50b6744468184ca83d534ebac70e1b8e2a016dd0" translate="yes" xml:space="preserve">
          <source>Sometimes, it is convenient to be able to identify the most likely locale language identifier subtags based on an incomplete langauage ID. The Add Likely Subtags algorithm gives us this functionality. For instance, given the language ID &quot;en&quot;, the algorithm would return &quot;en-Latn-US&quot;, since English can only be written in the Latin script, and is most likely to be used in the United States, as it is the largest English-speaking country in the world. This functionality is provided to JavaScript programmers via the &lt;code&gt;maximize()&lt;/code&gt; method. &lt;code&gt;maximize()&lt;/code&gt; only affects the main subtags that comprise the &lt;a href=&quot;https://www.unicode.org/reports/tr35/#Language_Locale_Field_Definitions&quot;&gt;language identifier&lt;/a&gt;: language, script, and region subtags. Other subtags after the &quot;-u&quot; in the locale indentifier are called extension subtags and are not affected by the &lt;code&gt;maximize()&lt;/code&gt; method. Examples of these subtags include &lt;a href=&quot;hourcycle&quot;&gt;&lt;code&gt;Locale.hourCycle&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;calendar&quot;&gt;&lt;code&gt;Locale.calendar&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;numeric&quot;&gt;&lt;code&gt;Locale.numeric&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39810468ba78d50ecd5c2dc104b94947427b5bbf" translate="yes" xml:space="preserve">
          <source>Sometimes, you leave out brackets around &lt;code&gt;if&lt;/code&gt; statements:</source>
          <target state="translated">Иногда вы опускаете скобки вокруг операторов &lt;code&gt;if&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5d36b5d2374f64b2dab235e38f4aefd0dc354d0b" translate="yes" xml:space="preserve">
          <source>Sometimes, your code will include strings which are very long. Rather than having lines that go on endlessly, or wrap at the whim of your editor, you may wish to specifically break the string into multiple lines in the source code without affecting the actual string contents. There are two ways you can do this.</source>
          <target state="translated">Иногда ваш код будет включать строки,которые очень длинные.Вместо того,чтобы иметь бесконечно длинные строки или окутывать их по прихоти своего редактора,вы можете специально разбить строку на несколько строк в исходном коде,не затрагивая при этом реального содержимого строки.Есть два способа сделать это.</target>
        </trans-unit>
        <trans-unit id="04850c43fc942f2576895fd2993cf9dcdbbe232c" translate="yes" xml:space="preserve">
          <source>Sora_Sompeng digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1650baa35793eccf62baeae2b7d1fa120e32fe5" translate="yes" xml:space="preserve">
          <source>Sorry, you can't do that.</source>
          <target state="translated">Извини,ты не можешь этого сделать.</target>
        </trans-unit>
        <trans-unit id="d60f0937572460538888e99fcbaac7c122844c6a" translate="yes" xml:space="preserve">
          <source>Sort an array</source>
          <target state="translated">Сортировать массив</target>
        </trans-unit>
        <trans-unit id="1e2ddb6c5bc94849a5abd0c9c6d76224c98db4cc" translate="yes" xml:space="preserve">
          <source>Sorting non-ASCII characters</source>
          <target state="translated">Сортировка не-ASCII символов</target>
        </trans-unit>
        <trans-unit id="2e0b90200b43b1f260f6455773e9291e2dcd3aed" translate="yes" xml:space="preserve">
          <source>Sorting with map</source>
          <target state="translated">Сортировка по карте</target>
        </trans-unit>
        <trans-unit id="5a475adb11cda6dce48032a7e0e55919b391a96f" translate="yes" xml:space="preserve">
          <source>Sorts the elements of an array in place and returns the array.</source>
          <target state="translated">Сортирует элементы массива на месте и возвращает массив.</target>
        </trans-unit>
        <trans-unit id="cc6d24363b28826136ed72a75030b2862b9cf797" translate="yes" xml:space="preserve">
          <source>Sorts the elements of an array in place and returns the array. See also &lt;a href=&quot;../array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сортирует элементы массива на месте и возвращает массив. См. Также &lt;a href=&quot;../array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46f883c2311843ca0edddd973f2e1377c53a6f98" translate="yes" xml:space="preserve">
          <source>Sorts the elements of an array in place and returns the array. See also &lt;a href=&quot;array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Сортирует элементы массива на месте и возвращает массив. См. Также &lt;a href=&quot;array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa1151a8bc5340ba4ebaabcd15838ef3cbcc373b" translate="yes" xml:space="preserve">
          <source>Source Array (&lt;code&gt;&lt;var&gt;src&lt;/var&gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79152e65a0a5d1ef7566befa64f0f08f6cd8386c" translate="yes" xml:space="preserve">
          <source>Source Array (src)</source>
          <target state="translated">Массив источников (SRC)</target>
        </trans-unit>
        <trans-unit id="1de4e3806d9c836a4836a0264e6f70070bac5ccf" translate="yes" xml:space="preserve">
          <source>Source code such as:</source>
          <target state="translated">Исходный код,например:</target>
        </trans-unit>
        <trans-unit id="cbbf5d5c7fa50a690c88ee7c5408b651545cad83" translate="yes" xml:space="preserve">
          <source>Source for this technique is here:</source>
          <target state="translated">Источник этой техники здесь:</target>
        </trans-unit>
        <trans-unit id="9f123ea05d136d3a6552545bf5b61f68c0a303c7" translate="yes" xml:space="preserve">
          <source>Source start index position where to start copying elements from.</source>
          <target state="translated">Исходная позиция стартового индекса,откуда начинать копирование элементов.</target>
        </trans-unit>
        <trans-unit id="6d8c9b124d521027647b4f270cb2872798f9264e" translate="yes" xml:space="preserve">
          <source>Space</source>
          <target state="translated">Space</target>
        </trans-unit>
        <trans-unit id="5eeea40b91ef5235d387217896d819d1a62d4ca2" translate="yes" xml:space="preserve">
          <source>Spaces in Unicode on Wikipedia</source>
          <target state="translated">Пространства в Юникоде в Википедии</target>
        </trans-unit>
        <trans-unit id="f3c60b6d882bcb487c5a14777dbf4fdd8381e4c2" translate="yes" xml:space="preserve">
          <source>Special &quot;&lt;strong&gt;N&lt;/strong&gt;ot &lt;strong&gt;a&lt;/strong&gt;&lt;strong&gt;N&lt;/strong&gt;umber&quot; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3fd0366b415d5e7ea05484638455a7e5ca49ec2" translate="yes" xml:space="preserve">
          <source>Special &quot;not a number&quot; value.</source>
          <target state="translated">Специальное значение &quot;не число&quot;.</target>
        </trans-unit>
        <trans-unit id="c390c18af05370d2cb184975d161907912f9f17d" translate="yes" xml:space="preserve">
          <source>Special characters can be encoded using escape notation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c371e28b5b166cbce43e615f515fe72c7a446f" translate="yes" xml:space="preserve">
          <source>Special characters meaning in regular expressions</source>
          <target state="translated">Специальные символы,имеющие значение в регулярных выражениях</target>
        </trans-unit>
        <trans-unit id="ce354a3d180b736cab84d9c872c702f916e5ffc1" translate="yes" xml:space="preserve">
          <source>Special collation type for Korean initial consonant search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e12f1056f9a0b051dd22c2cee64d98c983c2d0" translate="yes" xml:space="preserve">
          <source>Special collation type for string search</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2791db12a8726c57d0d88d88757b3356ddbbb8d" translate="yes" xml:space="preserve">
          <source>Special value representing infinity. Returned on overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b239eac0ca1ed6c0769db7502bbfcb2ce23237" translate="yes" xml:space="preserve">
          <source>Special value representing infinity; returned on overflow.</source>
          <target state="translated">Специальное значение,представляющее бесконечность;возвращается при переполнении.</target>
        </trans-unit>
        <trans-unit id="561d1160d0b7af453516b135a8762d19cc43d5c5" translate="yes" xml:space="preserve">
          <source>Special value representing negative infinity. Returned on overflow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae074cbfb5d1dcad7acf25ef08fe38e299191e1" translate="yes" xml:space="preserve">
          <source>Special value representing negative infinity; returned on overflow.</source>
          <target state="translated">Специальное значение,представляющее отрицательную бесконечность;возвращается при переполнении.</target>
        </trans-unit>
        <trans-unit id="83a7238826ab3028c8f77a25cbc67f194312d745" translate="yes" xml:space="preserve">
          <source>Species</source>
          <target state="translated">Species</target>
        </trans-unit>
        <trans-unit id="845e77385721c0ae62808998e5d5549f1bc0a551" translate="yes" xml:space="preserve">
          <source>Species in derived objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3ca241f8b58581e1a0fdb6fd44f4dd019e118b" translate="yes" xml:space="preserve">
          <source>Species in ordinary objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ccf5d25dfedda0749e3abb6685b56a5fed8013a" translate="yes" xml:space="preserve">
          <source>Specification</source>
          <target state="translated">Specification</target>
        </trans-unit>
        <trans-unit id="0c709f9886c34419d95252da6707fd3dc704a220" translate="yes" xml:space="preserve">
          <source>Specifications</source>
          <target state="translated">Specifications</target>
        </trans-unit>
        <trans-unit id="82c2d53f903afcc013cdc7f3d5efb31c78b5140e" translate="yes" xml:space="preserve">
          <source>Specifies a function that defines the sort order.</source>
          <target state="translated">Определяет функцию,определяющую порядок сортировки.</target>
        </trans-unit>
        <trans-unit id="99e64dacc33efcaeebba0d72ec79c4314d4a0eca" translate="yes" xml:space="preserve">
          <source>Specifies a function that defines the sort order. If omitted, the array elements are converted to strings, then sorted according to each character's &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Values,_variables,_and_literals#Unicode&quot;&gt;Unicode&lt;/a&gt; code point value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b8fc85cd12dbfdd6ad3b6230de3baf190ef8e3" translate="yes" xml:space="preserve">
          <source>Specifies a function that defines the sort order. If omitted, the array is sorted according to each character's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Values,_variables,_and_literals#Unicode&quot;&gt;Unicode&lt;/a&gt; code point value, according to the string conversion of each element.</source>
          <target state="translated">Задает функцию, определяющую порядок сортировки. Если он не указан, массив сортируется в соответствии со значением кодовой точки &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Values,_variables,_and_literals#Unicode&quot;&gt;Unicode&lt;/a&gt; каждого символа , в соответствии с преобразованием строки каждого элемента.</target>
        </trans-unit>
        <trans-unit id="eb84c2e2aaf54226e006f679fe9bef055a65e910" translate="yes" xml:space="preserve">
          <source>Specifies a string to separate each pair of adjacent elements of the array. The separator is converted to a string if necessary. If omitted, the array elements are separated with a comma (&quot;,&quot;). If &lt;code&gt;separator&lt;/code&gt; is an empty string, all elements are joined without any characters in between them.</source>
          <target state="translated">Задает строку для разделения каждой пары смежных элементов массива. При необходимости разделитель преобразуется в строку. Если не указано, элементы массива разделяются запятой (&quot;,&quot;). Если &lt;code&gt;separator&lt;/code&gt; является пустая строка, все элементы объединяются без каких-либо символов между ними.</target>
        </trans-unit>
        <trans-unit id="30e6ebd2091ae1b6e6c46b466c2af7e37a986881" translate="yes" xml:space="preserve">
          <source>Specifies the function that created an instance's prototype.</source>
          <target state="translated">Определяет функцию,которая создала прототип экземпляра.</target>
        </trans-unit>
        <trans-unit id="a0898e47c0044920e4a494fbee63e96149fe574c" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype.</source>
          <target state="translated">Определяет функцию,которая создает прототип объекта.</target>
        </trans-unit>
        <trans-unit id="600143eb9ba857b169461a7b1608421466e35229" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. See &lt;a href=&quot;../object/constructor&quot;&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">Задает функцию, создающую прототип объекта. См. &lt;a href=&quot;../object/constructor&quot;&gt; &lt;code&gt;Object.prototype.constructor&lt;/code&gt; &lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="d3661fc6d6639c606450a85d01c37dda9ced2149" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. See &lt;a href=&quot;object/constructor&quot;&gt;&lt;code&gt;Object.prototype.constructor&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">Задает функцию, создающую прототип объекта. См. &lt;a href=&quot;object/constructor&quot;&gt; &lt;code&gt;Object.prototype.constructor&lt;/code&gt; &lt;/a&gt; для более подробной информации.</target>
        </trans-unit>
        <trans-unit id="3b852cb74e98b201cbe16b19043d3b263770ddf4" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. The initial value is the standard built-in &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor.</source>
          <target state="translated">Задает функцию, создающую прототип объекта. Начальным значением является стандартный встроенный конструктор &lt;code&gt;ArrayBuffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de4c8ff5a094cdb6a1809d20e99facf7236d0d70" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. The initial value is the standard built-in &lt;code&gt;DataView&lt;/code&gt; constructor.</source>
          <target state="translated">Задает функцию, создающую прототип объекта. Начальное значение - стандартный встроенный конструктор &lt;code&gt;DataView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e24211368a606faef2d4d67e653d5382d104d6b9" translate="yes" xml:space="preserve">
          <source>Specifies the function that creates an object's prototype. The initial value is the standard built-in &lt;code&gt;SharedArrayBuffer&lt;/code&gt; constructor.</source>
          <target state="translated">Задает функцию, создающую прототип объекта. Начальным значением является стандартный встроенный конструктор &lt;code&gt;SharedArrayBuffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1f9200fcddbddfcf9b50ba1d0a01a30d7090b217" translate="yes" xml:space="preserve">
          <source>Specifies the function that invoked the currently executing function.</source>
          <target state="translated">Определяет функцию,которая вызывала выполняемую в данный момент функцию.</target>
        </trans-unit>
        <trans-unit id="6901efa92d3fd074f16ba420c8e49da7280efc10" translate="yes" xml:space="preserve">
          <source>Specifies the number of arguments expected by the function.</source>
          <target state="translated">Указывает количество аргументов,ожидаемых функцией.</target>
        </trans-unit>
        <trans-unit id="6bdc0086fde1d44eabfd3cedd885e30b092d1faf" translate="yes" xml:space="preserve">
          <source>Specifies the string which denotes the points at which each split should occur. The &lt;code&gt;separator&lt;/code&gt; is treated as a string or as a &lt;a href=&quot;../regexp&quot;&gt;regular expression&lt;/a&gt;. If a plain-text &lt;code&gt;separator&lt;/code&gt; contains more than one character, that entire string must be found to represent a split point. If &lt;code&gt;separator&lt;/code&gt; is omitted or does not occur in &lt;code&gt;str&lt;/code&gt;, the array returned contains one element consisting of the entire string. If &lt;code&gt;separator&lt;/code&gt; is an empty string, &lt;code&gt;str&lt;/code&gt; is converted to an array of characters.</source>
          <target state="translated">Задает строку, обозначающую точки, в которых должно происходить каждое разделение. &lt;code&gt;separator&lt;/code&gt; обрабатывают в виде строки или в качестве &lt;a href=&quot;../regexp&quot;&gt;регулярного выражения&lt;/a&gt; . Если &lt;code&gt;separator&lt;/code&gt; обычного текста содержит более одного символа, необходимо найти всю эту строку, чтобы представить точку разделения. Если &lt;code&gt;separator&lt;/code&gt; опущен или не встречается в &lt;code&gt;str&lt;/code&gt; , возвращаемый массив содержит один элемент, состоящий из всей строки. Если &lt;code&gt;separator&lt;/code&gt; является пустая строка, &lt;code&gt;str&lt;/code&gt; преобразуется в массив символов.</target>
        </trans-unit>
        <trans-unit id="568bc57fe6171873d02785923527f7f66a43d66d" translate="yes" xml:space="preserve">
          <source>Specifies the value to be returned by a function.</source>
          <target state="translated">Определяет значение,которое должно быть возвращено функцией.</target>
        </trans-unit>
        <trans-unit id="1a898219efff29bb1d4b1db9304266f0f56aa893" translate="yes" xml:space="preserve">
          <source>Specify the constant value in the same statement in which it's declared:</source>
          <target state="translated">Укажите постоянное значение в том же заявлении,в котором оно было объявлено:</target>
        </trans-unit>
        <trans-unit id="245b8a354b59493ebc94071cce01576a16b0ed8f" translate="yes" xml:space="preserve">
          <source>Specifying a function as a parameter</source>
          <target state="translated">Указание функции в качестве параметра</target>
        </trans-unit>
        <trans-unit id="bbc0fd176808f2dbc0a5a0b83c80f2a29d1d1f2f" translate="yes" xml:space="preserve">
          <source>Specifying a string as a parameter</source>
          <target state="translated">Указание строки в качестве параметра</target>
        </trans-unit>
        <trans-unit id="cdc8f282001903878d262f51992f27c2747763db" translate="yes" xml:space="preserve">
          <source>Specifying arguments with the &lt;code&gt;Function&lt;/code&gt; constructor</source>
          <target state="translated">Указание аргументов с помощью конструктора &lt;code&gt;Function&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f2cee239d142ce7fc2c6034964e769660e29d56" translate="yes" xml:space="preserve">
          <source>Specifying arguments with the Function constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cbcb875e572c082c4ac76f7133614d38ff20a79" translate="yes" xml:space="preserve">
          <source>Speed-polyfill to polyfill both promise availability and promise performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a65397138cd6563e3ba4733d97dd1d203b5e640" translate="yes" xml:space="preserve">
          <source>SpiderMonkey specific Old Proxy API</source>
          <target state="translated">SpiderMonkey специфический старый прокси API</target>
        </trans-unit>
        <trans-unit id="2544b7a02e0f952d784f8746dab6fd5f23161298" translate="yes" xml:space="preserve">
          <source>SpiderMonkey's implementation-specific heuristic can be found in &lt;a href=&quot;http://mxr.mozilla.org/mozilla-central/source/js/src/jsdate.cpp?rev=64553c483cd1#889&quot;&gt;&lt;code&gt;jsdate.cpp&lt;/code&gt;&lt;/a&gt;. The string &lt;code&gt;&quot;10 06 2014&quot;&lt;/code&gt; is an example of a non&amp;ndash;conforming ISO format and thus falls back to a custom routine. See also this &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1023155#c6&quot;&gt;rough outline&lt;/a&gt; on how the parsing works.</source>
          <target state="translated">Эвристику для конкретной реализации SpiderMonkey можно найти в &lt;a href=&quot;http://mxr.mozilla.org/mozilla-central/source/js/src/jsdate.cpp?rev=64553c483cd1#889&quot;&gt; &lt;code&gt;jsdate.cpp&lt;/code&gt; &lt;/a&gt; . Строка &lt;code&gt;&quot;10 06 2014&quot;&lt;/code&gt; является примером несоответствующего формата ISO и, таким образом, возвращается к пользовательской процедуре. См. Также этот &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1023155#c6&quot;&gt;примерный план&lt;/a&gt; того, как работает синтаксический анализ.</target>
        </trans-unit>
        <trans-unit id="f488f5c81044ecabda6a63da7cc7c19fbd8557af" translate="yes" xml:space="preserve">
          <source>SpiderMonkey's implementation-specific heuristic can be found in &lt;a href=&quot;https://dxr.mozilla.org/mozilla-central/source/js/src/jsdate.cpp?rev=64553c483cd1#889&quot;&gt;&lt;code&gt;jsdate.cpp&lt;/code&gt;&lt;/a&gt;. The string &quot;&lt;code&gt;10 06 2014&lt;/code&gt;&quot; is an example of a non-conforming ISO format and thus falls back to a custom routine. See also this &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1023155#c6&quot;&gt;rough outline&lt;/a&gt; on how the parsing works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59acbf9f2a3b11b90e0112607782c701ec3aed6b" translate="yes" xml:space="preserve">
          <source>Splits a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object into an array of strings by separating the string into substrings.</source>
          <target state="translated">Разбивает объект &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; на массив строк, разделяя строку на подстроки.</target>
        </trans-unit>
        <trans-unit id="1520cde4ca88399efe9e1c53c8b0c5923b142488" translate="yes" xml:space="preserve">
          <source>Splits a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object into an array of strings by separating the string into substrings.</source>
          <target state="translated">Разбивает объект &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; на массив строк, разделяя строку на подстроки.</target>
        </trans-unit>
        <trans-unit id="a35487ff65ba51f5415dbe817ea4d395c1805a09" translate="yes" xml:space="preserve">
          <source>Splits given string into an array by separating the string into substring.</source>
          <target state="translated">Разделяет заданную строку на массив,разделяя ее на подстроки.</target>
        </trans-unit>
        <trans-unit id="ec8dfdde9485c038a37f9602998d6c92a5d974cb" translate="yes" xml:space="preserve">
          <source>Splits given string into an array by separating the string into substrings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1d6e8a7eb4c26ed170418e6a4fbf388c0dc747" translate="yes" xml:space="preserve">
          <source>Splitting with a &lt;code&gt;RegExp&lt;/code&gt; to include parts of the separator in the result</source>
          <target state="translated">Разделение с помощью &lt;code&gt;RegExp&lt;/code&gt; для включения частей разделителя в результат</target>
        </trans-unit>
        <trans-unit id="e771efd0fa5f26cabc0b2a7e7e6078c850023752" translate="yes" xml:space="preserve">
          <source>Splitting with an array as separator</source>
          <target state="translated">Разделение с помощью массива в качестве разделителя</target>
        </trans-unit>
        <trans-unit id="4e04557075f33a90c1ff4c2b3fa2bba3f8b48475" translate="yes" xml:space="preserve">
          <source>Spread in array literals</source>
          <target state="translated">Распространение в массиве литералов</target>
        </trans-unit>
        <trans-unit id="ea453e3b95254c5ab73b08b0491729cc6fdd66a7" translate="yes" xml:space="preserve">
          <source>Spread in destructuring</source>
          <target state="translated">Распространение в разрушении</target>
        </trans-unit>
        <trans-unit id="ebbfaa54cd78b2543df66c35c848ee1b067dcf11" translate="yes" xml:space="preserve">
          <source>Spread in function calls</source>
          <target state="translated">Распространение вызовов функций</target>
        </trans-unit>
        <trans-unit id="f7930623211ef285c23ce77c4b43b12c5e9cac3e" translate="yes" xml:space="preserve">
          <source>Spread in object literals</source>
          <target state="translated">Разбросанные буквально по объектам</target>
        </trans-unit>
        <trans-unit id="91f2ae3c7bf85633a38708f355001173b325d4dc" translate="yes" xml:space="preserve">
          <source>Spread properties</source>
          <target state="translated">Свойства распространения</target>
        </trans-unit>
        <trans-unit id="432979a6e491e22397882fad2d457b66217225b1" translate="yes" xml:space="preserve">
          <source>Spread syntax</source>
          <target state="translated">Синтаксис распространения</target>
        </trans-unit>
        <trans-unit id="202185f61aa6b32f2ad0e42dd77c232e4b59ad01" translate="yes" xml:space="preserve">
          <source>Spread syntax (other than in the case of spread properties) can be applied only to &lt;a href=&quot;../global_objects/symbol/iterator&quot;&gt;iterable&lt;/a&gt; objects:</source>
          <target state="translated">Синтаксис спреда (кроме свойств спреда) может применяться только к &lt;a href=&quot;../global_objects/symbol/iterator&quot;&gt;повторяющимся&lt;/a&gt; объектам:</target>
        </trans-unit>
        <trans-unit id="7dbf387e9e2fa933f4a051cdb594105553dfc296" translate="yes" xml:space="preserve">
          <source>Spread syntax allows an expression to be expanded in places where multiple arguments (for function calls) or multiple elements (for array literals) are expected.</source>
          <target state="translated">Синтаксис Spread позволяет расширять выражение в местах,где ожидается наличие множественных аргументов (для вызова функций)или множественных элементов (для литералов массивов).</target>
        </trans-unit>
        <trans-unit id="86d02c3bef9e5afbbbc2fbd93e7d3bc506fc7e16" translate="yes" xml:space="preserve">
          <source>Spread with many values</source>
          <target state="translated">Распространяется со многими значениями</target>
        </trans-unit>
        <trans-unit id="87e507437ef867050b7bca573b3592aad02b435c" translate="yes" xml:space="preserve">
          <source>Square root of &amp;frac12; (or equivalently, &lt;sup&gt;1&lt;/sup&gt;/&lt;sub&gt;&amp;radic;2&lt;/sub&gt;); approximately &lt;code&gt;0.707&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1915e60f0c86e9287d2f684c61bc9876c32645" translate="yes" xml:space="preserve">
          <source>Square root of 1/2; equivalently, 1 over the square root of 2, approximately 0.707.</source>
          <target state="translated">Квадратный корень 1/2;эквивалентно 1 над квадратным корнем 2,примерно 0,707.</target>
        </trans-unit>
        <trans-unit id="2d6daef0bb90b0a913b1778720cc9628a360bff5" translate="yes" xml:space="preserve">
          <source>Square root of 2, approximately 1.414.</source>
          <target state="translated">Квадратный корень из 2,примерно 1.414.</target>
        </trans-unit>
        <trans-unit id="5eaa0e9ce1ae08ba3483ccb616a057d999128574" translate="yes" xml:space="preserve">
          <source>Square root of &lt;code&gt;2&lt;/code&gt;; approximately &lt;code&gt;1.414&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83b5c82242494fcf34b2e2e316451da736e3462" translate="yes" xml:space="preserve">
          <source>Stable sorting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f34e10d18cf56461ba3f0790700d0aa0d822626" translate="yes" xml:space="preserve">
          <source>Stack trace.</source>
          <target state="translated">Следы стека.</target>
        </trans-unit>
        <trans-unit id="ad70af2cbac2156691fc0288f389de6d2e54ce2c" translate="yes" xml:space="preserve">
          <source>Stack trace. Inherited from &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Трассировки стека. Унаследовано от &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02f6588622414d76a89fd699429c515ac32ce97b" translate="yes" xml:space="preserve">
          <source>Stack trace. Inherited from &lt;a href=&quot;error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Трассировки стека. Унаследовано от &lt;a href=&quot;error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb27f73aceb8999ff57c645465c798b77735900a" translate="yes" xml:space="preserve">
          <source>StackOverflow: What is the Temporal Dead Zone.</source>
          <target state="translated">StackOverflow:Что такое Временная Мертвая Зона.</target>
        </trans-unit>
        <trans-unit id="c6c636f8b8689f24a5191669dd57782e6e592970" translate="yes" xml:space="preserve">
          <source>StackOverflow: What is the difference between using &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;var&lt;/code&gt;?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c650d33f0a43f2779068e6b2e3c85d6c7f9eea" translate="yes" xml:space="preserve">
          <source>StackOverflow: What is the difference between using let and var?</source>
          <target state="translated">StackOverflow:В чем разница между использованием let и var?</target>
        </trans-unit>
        <trans-unit id="cc2b21c38ce7bbf21bd5f855a090c9a8857b04ca" translate="yes" xml:space="preserve">
          <source>Stacking the optional chaining operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efd0a1b959f95248594dfc0e558abe444ef9c45" translate="yes" xml:space="preserve">
          <source>Stage 1</source>
          <target state="translated">Этап 1</target>
        </trans-unit>
        <trans-unit id="9f4287616d641e3656049c2baf8b01bfe74d030a" translate="yes" xml:space="preserve">
          <source>Stage 2 Draft</source>
          <target state="translated">Этап 2 Черновик</target>
        </trans-unit>
        <trans-unit id="b3b520c802ab9b25bf85b34a1ad722e46e414d9b" translate="yes" xml:space="preserve">
          <source>Stage 3</source>
          <target state="translated">3-й этап</target>
        </trans-unit>
        <trans-unit id="a10e662e10a3aac37a39771521ad4e2ac6e5ef2b" translate="yes" xml:space="preserve">
          <source>Stage 4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dfa66079d9b7229409430972fd5f1567d78a3b6" translate="yes" xml:space="preserve">
          <source>Standard</source>
          <target state="translated">Standard</target>
        </trans-unit>
        <trans-unit id="3b313a6644a746917f3ed0221366ee9a1fc1d806" translate="yes" xml:space="preserve">
          <source>Standard Import</source>
          <target state="translated">Стандартный импорт</target>
        </trans-unit>
        <trans-unit id="2ec83f20d672a640696dd3349256ca5c312f1b50" translate="yes" xml:space="preserve">
          <source>Standard built-in objects</source>
          <target state="translated">Стандартные встроенные объекты</target>
        </trans-unit>
        <trans-unit id="a2e3783e1ce83c21b8c915ef98bea3a4260cc0cd" translate="yes" xml:space="preserve">
          <source>Standard properties</source>
          <target state="translated">Стандартные свойства</target>
        </trans-unit>
        <trans-unit id="9a86f99ef8809aaf231777db541afb51be74590e" translate="yes" xml:space="preserve">
          <source>Standard syntax</source>
          <target state="translated">стандартный синтаксис</target>
        </trans-unit>
        <trans-unit id="3e9b90975ecc2fb8b2301ef24ccd017769d26c67" translate="yes" xml:space="preserve">
          <source>Standard syntax using arrow functions</source>
          <target state="translated">Стандартный синтаксис с использованием функций стрелок</target>
        </trans-unit>
        <trans-unit id="db838679f033e810aca620e8ad760aaa1654ba3e" translate="yes" xml:space="preserve">
          <source>Standard syntax using shorthand method syntax</source>
          <target state="translated">Стандартный синтаксис с использованием короткого синтаксиса метода</target>
        </trans-unit>
        <trans-unit id="dfe868d26e07b5af3c20c6d92e761ceb1d5a9b01" translate="yes" xml:space="preserve">
          <source>Standard-compliant and non-standard ways to get a property getter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e896ac5001d2b610c23f596779e0553577ff5f26" translate="yes" xml:space="preserve">
          <source>Standard-compliant and non-standard ways to get a property setter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4aefb6b9bcd77da3bfa9f93cb6c6397bf5fb15" translate="yes" xml:space="preserve">
          <source>Standard-compliant ways</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835ef4465b9a76b24f3a7f390133905857142f57" translate="yes" xml:space="preserve">
          <source>Standardizes native function string, line endings.</source>
          <target state="translated">Стандартизирует строку родной функции,окончания строк.</target>
        </trans-unit>
        <trans-unit id="9ec206914f209a5db061b91bf357a5cb0b0de18e" translate="yes" xml:space="preserve">
          <source>Start index, default &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057e7a3ff4634f1b0bc5ba25f7bc58b6971e3823" translate="yes" xml:space="preserve">
          <source>Start index, defaults to 0.</source>
          <target state="translated">Стартовый индекс,по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="febbe2d5b5a426977e2449cf174fdd073599edef" translate="yes" xml:space="preserve">
          <source>Starting in Firefox 74, &lt;code&gt;toSource()&lt;/code&gt; is no longer available for use by web content. It is still allowed for internal and privileged code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e52fb4995d1e637d4a2a828ded5502dbb401a2c" translate="yes" xml:space="preserve">
          <source>Starting in JavaScript 1.8.5 (Firefox 4), and consistent with ECMAScript 5th edition semantics, the &lt;code&gt;toString()&lt;/code&gt; method is generic and can be used with any object. &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; will be called, and the resulting value will be returned.</source>
          <target state="translated">Начиная с версии JavaScript 1.8.5 (Firefox 4) и в соответствии с семантикой ECMAScript 5th edition, метод &lt;code&gt;toString()&lt;/code&gt; является универсальным и может использоваться с любым объектом. Будет вызван &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; , и будет возвращено полученное значение.</target>
        </trans-unit>
        <trans-unit id="2e34507ce6df1aa3cfdef30913ed067da286bd27" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;ArrayBuffer&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling an &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d062344f306fc9f885962c846dca52345cb52f" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;ArrayBuffer&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling an &lt;code&gt;ArrayBuffer&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;ArrayBuffer&lt;/code&gt; необходимо создавать с помощью &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператора. Вызов &lt;code&gt;ArrayBuffer&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="825c5aa7244e2b280df1ccea847b891a93f7a96b" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Float32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Float32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a747fd453291209e5c092d25ad03e14b521b64d2" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Float32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Float32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Float32Array&lt;/code&gt; требуют создания с &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператором. Вызов &lt;code&gt;Float32Array&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="9f656219ac7ccea0cfca76ecccdd058db81f8b59" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Float64Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Float64Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c457ec66f31dce201eb74296b80aba037742565" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Float64Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Float64Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Float64Array&lt;/code&gt; требуют создания с &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператором. Вызов &lt;code&gt;Float64Array&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="8041125e1b486c6dd7991ce0194ccf8f0a91a80d" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int16Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int16Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2695fc829087dddc449def31dda5d0e4577fbc12" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int16Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int16Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Int16Array&lt;/code&gt; необходимо создавать с помощью &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператора. Вызов &lt;code&gt;Int16Array&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="863df06ffe17b0c1e97b0001d228cfe3eccd8b04" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9b9ef562f5fc64afa96bf6b35af32fbef1d373" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Int32Array&lt;/code&gt; необходимо создавать с помощью &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператора. Вызов &lt;code&gt;Int32Array&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="b5d251bb3bc38c4e86686dd8d4e90868efa03502" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int8Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int8Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f4dfa559b54b6aaf78439e608ab9a18b56dbe6" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Int8Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Int8Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Int8Array&lt;/code&gt; необходимо создавать с помощью &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператора. Вызов &lt;code&gt;Int8Array&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="d339ef108b1552d798c1865009798f92699f1d20" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;TypedArray&lt;/code&gt; constructors must be constructed with the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;TypedArray&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt; will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0e3ed13f354fb1bb7c88b19cd295daf2631f22" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;TypedArray&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;TypedArray&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;TypedArray&lt;/code&gt; требуют создания с &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператором. Вызов &lt;code&gt;TypedArray&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="8167458d7e1ee9d70bf5d48579ff4bcb56dbd594" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint16Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint16Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a1a950dcabb724aeccef745e2b0a69f16ba77f" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint16Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint16Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Uint16Array&lt;/code&gt; требуют создания с &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператором. Вызов &lt;code&gt;Uint16Array&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="a36e6d6e7db14e64aa104d08127e5d8590c87d8b" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6eb24a0b8163337e3c3158009df18172b7ae9be" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint32Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint32Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Uint32Array&lt;/code&gt; требуют создания с &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператором. Вызов &lt;code&gt;Uint32Array&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="e3b0c48ad8da42bf07fb05cdf31d634cf78212ad" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint8Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint8Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9e3ad1bb6b323813334c4dfcd7282d3b8a157b" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint8Array&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint8Array&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Uint8Array&lt;/code&gt; требуют создания с &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператором. Вызов &lt;code&gt;Uint8Array&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="fc7a3c871c6a6158383a4abbaeead9618336814e" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint8ClampedArray&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint8ClampedArray&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08bd1e2cb51b5c1d92758b82a6bf9dad1a98946" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, &lt;code&gt;Uint8ClampedArray&lt;/code&gt; constructors require to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;Uint8ClampedArray&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt;, will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; from now on.</source>
          <target state="translated">Начиная с ECMAScript 2015 конструкторы &lt;code&gt;Uint8ClampedArray&lt;/code&gt; требуют создания с &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператором. Вызов &lt;code&gt;Uint8ClampedArray&lt;/code&gt; конструктор как функцию без &lt;code&gt;new&lt;/code&gt; , бросит &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; теперь.</target>
        </trans-unit>
        <trans-unit id="b90d8b8c546ee7f70c1d42b978154a53953f757a" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, a shorter syntax for method definitions on objects initializers is introduced. It is a shorthand for a function assigned to the method's name.</source>
          <target state="translated">Начиная с ECMAScript 2015,вводится более короткий синтаксис для определения методов на инициализаторах объектов.Это сокращение для функции,присвоенной имени метода.</target>
        </trans-unit>
        <trans-unit id="3a941da51221376e4e6dbbb500beffc7aaf5ffe7" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, labeled function declarations are now standardized for non-strict code in the &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-labelled-function-declarations&quot;&gt;web compatibility annex of the specification&lt;/a&gt;.</source>
          <target state="translated">Начиная с ECMAScript 2015, помеченные объявления функций теперь стандартизированы для нестрогого кода в &lt;a href=&quot;http://www.ecma-international.org/ecma-262/6.0/#sec-labelled-function-declarations&quot;&gt;приложении спецификации веб-совместимости&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce0257a9b6f60d4f3444dafcfea7341fd4c15ddd" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, labeled function declarations are now standardized for non-strict code in the &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-labelled-function-declarations&quot;&gt;web compatibility annex of the specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac0d9d59318364e70697b6eb7a6974c501c8924" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, string literals can also be so-called &lt;a href=&quot;../template_literals&quot;&gt;Template literals&lt;/a&gt;:</source>
          <target state="translated">Начиная с ECMAScript 2015 строковые литералы также могут быть так называемыми &lt;a href=&quot;../template_literals&quot;&gt;шаблонными литералами&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="55abd33149f85f7c95954ce60ab6df95f57d7b7e" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, the object initializer syntax also supports computed property names. That allows you to put an expression in brackets &lt;code&gt;[]&lt;/code&gt;, that will be computed and used as the property name. This is reminiscent of the bracket notation of the &lt;a href=&quot;property_accessors&quot;&gt;property accessor&lt;/a&gt; syntax, which you may have used to read and set properties already.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a13f9899e5f3f4dc15faa9071425dd44628a93a" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, the object initializer syntax also supports computed property names. That allows you to put an expression in brackets &lt;code&gt;[]&lt;/code&gt;, that will be computed and used as the property name. This is reminiscent of the bracket notation of the &lt;a href=&quot;property_accessors&quot;&gt;property accessor&lt;/a&gt; syntax, which you might have used to read and set properties already. Now you can use a similar syntax in object literals, too:</source>
          <target state="translated">Начиная с ECMAScript 2015 синтаксис инициализатора объекта также поддерживает имена вычисляемых свойств. Это позволяет вам заключить в скобки &lt;code&gt;[]&lt;/code&gt; выражение , которое будет вычислено и использовано в качестве имени свойства. Это напоминает обозначение скобок синтаксиса средства &lt;a href=&quot;property_accessors&quot;&gt;доступа&lt;/a&gt; к свойству , которое вы, возможно, уже использовали для чтения и установки свойств. Теперь вы можете использовать аналогичный синтаксис и в объектных литералах:</target>
        </trans-unit>
        <trans-unit id="3df44e988e8e58bf110be78c6c75a63b0efd7c46" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, you are able to define own methods in a shorter syntax, similar to the getters and setters. See &lt;a href=&quot;functions/method_definitions&quot;&gt;method definitions&lt;/a&gt; for more information.</source>
          <target state="translated">Начиная с ECMAScript 2015, вы можете определять собственные методы в более коротком синтаксисе, подобном геттерам и сеттерам. См. &lt;a href=&quot;functions/method_definitions&quot;&gt;Определения методов&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="89da06c95af1051f4c163ae1487414ba55f45795" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 2015, you can also use expressions for a computed property name to bind to the given function.</source>
          <target state="translated">Начиная с ECMAScript 2015,можно также использовать выражения для вычисленного имени свойства,чтобы привязать его к данной функции.</target>
        </trans-unit>
        <trans-unit id="450207d4db086739a9dfdb390f6c96651ab08cc1" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 5 these arguments can be a generic array-like object instead of an array. See below for &lt;a href=&quot;#Browser_compatibility&quot;&gt;browser compatibility&lt;/a&gt; information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8f8d17d86ec014ef8e5034620e06294955a48f" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 5, an empty regular expression returns the string &quot;/(?:)/&quot; and line terminators such as &quot;\n&quot; are escaped:</source>
          <target state="translated">Начиная с ECMAScript 5,пустое регулярное выражение возвращает строку &quot;/(?:)/&quot;,а терминаторы строк типа &quot;\n&quot; экранируются:</target>
        </trans-unit>
        <trans-unit id="0858afe2c026a522541a2c50fd26d0a4d3e51e6a" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 5, the &lt;code&gt;source&lt;/code&gt; property no longer returns an empty string for empty regular expressions. Instead, the string &lt;code&gt;&quot;(?:)&quot;&lt;/code&gt; is returned. In addition, line terminators (such as &quot;\n&quot;) are escaped now.</source>
          <target state="translated">Начиная с ECMAScript 5, свойство &lt;code&gt;source&lt;/code&gt; больше не возвращает пустую строку для пустых регулярных выражений. Вместо этого возвращается строка &lt;code&gt;&quot;(?:)&quot;&lt;/code&gt; . Кроме того, теперь экранируются символы конца строки (такие как &quot;\ n&quot;).</target>
        </trans-unit>
        <trans-unit id="a4d56c8ebb4c6906d84d5e100394bda202a37959" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 5, the &lt;code&gt;source&lt;/code&gt; property no longer returns an empty string for empty regular expressions. Instead, the string &lt;code&gt;(?:)&lt;/code&gt; is returned. In addition, line terminators (such as &quot;\n&quot;) are escaped now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44574cee8ca16237125bc05aa11a02161f1bf07e" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 5, trailing commas in object literals are legal as well:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6010e08369c09fe8c658af0048c22424dbc562" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 6, &lt;code&gt;new RegExp(/ab+c/, 'i')&lt;/code&gt; no longer throws a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&quot;can't supply flags when constructing one RegExp from another&quot;) when the first argument is a &lt;code&gt;RegExp&lt;/code&gt; and the second &lt;code&gt;flags&lt;/code&gt; argument is present. A new &lt;code&gt;RegExp&lt;/code&gt; from the arguments is created instead.</source>
          <target state="translated">Начиная с ECMAScript 6, &lt;code&gt;new RegExp(/ab+c/, 'i')&lt;/code&gt; больше не вызывает &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; (&amp;laquo;не может предоставлять флаги при построении одного RegExp из другого&amp;raquo;), когда первый аргумент является &lt;code&gt;RegExp&lt;/code&gt; , а второй аргумент &lt;code&gt;flags&lt;/code&gt; настоящее. Вместо этого создается новый &lt;code&gt;RegExp&lt;/code&gt; из аргументов.</target>
        </trans-unit>
        <trans-unit id="172161286dc725d32422ad47a53a575a678c68e2" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 6, &lt;code&gt;new RegExp(/ab+c/, 'i')&lt;/code&gt; no longer throws a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;&quot;can't supply flags when constructing one RegExp from another&quot;&lt;/code&gt;) when the first argument is a &lt;code&gt;RegExp&lt;/code&gt; and the second &lt;code&gt;&lt;var&gt;flags&lt;/var&gt;&lt;/code&gt; argument is present. A new &lt;code&gt;RegExp&lt;/code&gt; from the arguments is created instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dee624c9e7e0f2094047b7b8d67465a676af9ba" translate="yes" xml:space="preserve">
          <source>Starting with ECMAScript 6, the &lt;code&gt;Date.prototype&lt;/code&gt; object is itself an ordinary object. It is not a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Начиная с ECMAScript 6, объект &lt;code&gt;Date.prototype&lt;/code&gt; сам по себе является обычным объектом. Это не экземпляр &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29df05f7621dd9f4ccce526eed835b57e5983f74" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 29, an &lt;code&gt;IteratorResult&lt;/code&gt; object returned for completed generator function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196688ae7b6c344f8fb3a54d7ad10e40de9e6338" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 33, the parsing of the &lt;code&gt;yield&lt;/code&gt; expression has been updated to conform with the ES2015 specification.</source>
          <target state="translated">Начиная с Firefox 33, синтаксический анализ выражения &lt;code&gt;yield&lt;/code&gt; был обновлен в соответствии со спецификацией ES2015.</target>
        </trans-unit>
        <trans-unit id="080c8af791d6f5ddffd7a68d77c8733f99649314" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 34, in the case of a capturing group with quantifiers preventing its exercise, the matched text for a capturing group is now &lt;code&gt;undefined&lt;/code&gt; instead of an empty string:</source>
          <target state="translated">Начиная с Firefox 34, в случае группы захвата с квантификаторами, препятствующими ее выполнению, соответствующий текст для группы захвата теперь &lt;code&gt;undefined&lt;/code&gt; вместо пустой строки:</target>
        </trans-unit>
        <trans-unit id="b66261e15bdef34113dccda4bc90bc90faa01b82" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 38, &lt;code&gt;Function.prototype.toString()&lt;/code&gt; throws for &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; objects (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1100936&quot;&gt;bug 1100936&lt;/a&gt;).</source>
          <target state="translated">Начиная с Firefox 38, &lt;code&gt;Function.prototype.toString()&lt;/code&gt; выбрасывает объекты &lt;a href=&quot;../proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1100936&quot;&gt;ошибка 1100936&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="417146504b63336060fe85afe863b892fa89cd0c" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 40, &lt;code&gt;DataView&lt;/code&gt; must be constructed with the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling &lt;code&gt;DataView()&lt;/code&gt; as a function without &lt;code&gt;new&lt;/code&gt; will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Начиная с Firefox 40, &lt;code&gt;DataView&lt;/code&gt; необходимо создавать с помощью оператора &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; . Вызов &lt;code&gt;DataView()&lt;/code&gt; как функции без &lt;code&gt;new&lt;/code&gt; вызовет &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="93fe45527876505c8d9a8294a4cf18be04f7defb" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 40, a warning is shown in the console if unreachable code is found after a &lt;code&gt;return&lt;/code&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1469edf7cb9e772beb54d35ac628d6faeea81bc0" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), this method will no longer return &lt;code&gt;-0&lt;/code&gt;. For example, &lt;code&gt;[0].indexOf(0, -0)&lt;/code&gt; will now always return &lt;code&gt;+0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1242043&quot;&gt;bug 1242043&lt;/a&gt;).</source>
          <target state="translated">Начиная с Firefox 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), этот метод больше не будет возвращать &lt;code&gt;-0&lt;/code&gt; . Например, &lt;code&gt;[0].indexOf(0, -0)&lt;/code&gt; теперь всегда будет возвращать &lt;code&gt;+0&lt;/code&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1242043&quot;&gt;ошибка 1242043&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e22e597cb49e0c6675a2ff588e58461a29d0d4c4" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), this method will no longer return &lt;code&gt;-0&lt;/code&gt;. For example, &lt;code&gt;[0].lastIndexOf(0, -0)&lt;/code&gt; will now always return &lt;code&gt;+0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1242043&quot;&gt;bug 1242043&lt;/a&gt;).</source>
          <target state="translated">Начиная с Firefox 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), этот метод больше не будет возвращать &lt;code&gt;-0&lt;/code&gt; . Например, &lt;code&gt;[0].lastIndexOf(0, -0)&lt;/code&gt; теперь всегда будет возвращать &lt;code&gt;+0&lt;/code&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1242043&quot;&gt;ошибка 1242043&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="085a7d67b601979c796d00490b53c11d64d1fab8" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 47, this method will no longer return &lt;code&gt;-0&lt;/code&gt;. For example, &lt;code&gt;new Uint8Array([0]).indexOf(0, -0)&lt;/code&gt; will now always return &lt;code&gt;+0&lt;/code&gt;.</source>
          <target state="translated">Начиная с Firefox 47, этот метод больше не будет возвращать &lt;code&gt;-0&lt;/code&gt; . Например, &lt;code&gt;new Uint8Array([0]).indexOf(0, -0)&lt;/code&gt; теперь всегда будет возвращать &lt;code&gt;+0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5323eac7947283648b910172708c88597346e02" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 47, this method will no longer return &lt;code&gt;-0&lt;/code&gt;. For example, &lt;code&gt;new Uint8Array([0]).lastIndexOf(0, -0)&lt;/code&gt; will now always return &lt;code&gt;+0&lt;/code&gt;.</source>
          <target state="translated">Начиная с Firefox 47, этот метод больше не будет возвращать &lt;code&gt;-0&lt;/code&gt; . Например, &lt;code&gt;new Uint8Array([0]).lastIndexOf(0, -0)&lt;/code&gt; теперь всегда будет возвращать &lt;code&gt;+0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f04c30af362921d2785e3f754b7c2f93fa40f2c9" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 48, this method can no longer be called at the global scope without any object. A &lt;code&gt;TypeError&lt;/code&gt; will be thrown otherwise. Previously, the global object was used in these cases automatically, but this is no longer the case.</source>
          <target state="translated">Начиная с Firefox 48, этот метод больше нельзя вызывать в глобальной области без какого-либо объекта. В противном случае будет &lt;code&gt;TypeError&lt;/code&gt; . Раньше глобальный объект использовался в этих случаях автоматически, но теперь это не так.</target>
        </trans-unit>
        <trans-unit id="7dbde98c23fc8a251c3e7637a167a0934d52048c" translate="yes" xml:space="preserve">
          <source>Starting with Firefox 79, the features described in this document are enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5ca74ed8db3c0c7ee9694d13ba58d8a6691d6d" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 27 (Firefox 27 / Thunderbird 27 / SeaMonkey 2.24), this method has been adjusted to conform with the ECMAScript specification. When &lt;code&gt;match()&lt;/code&gt; is called with a global regular expression, the &lt;a href=&quot;../regexp/lastindex&quot;&gt;&lt;code&gt;RegExp.lastIndex&lt;/code&gt;&lt;/a&gt; property (if specified) will be reset to &lt;code&gt;0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=501739&quot;&gt;bug 501739&lt;/a&gt;).</source>
          <target state="translated">Начиная с Gecko 27 (Firefox 27 / Thunderbird 27 / SeaMonkey 2.24), этот метод был скорректирован в соответствии со спецификацией ECMAScript. Когда &lt;code&gt;match()&lt;/code&gt; вызывается с глобальным регулярным выражением, свойство &lt;a href=&quot;../regexp/lastindex&quot;&gt; &lt;code&gt;RegExp.lastIndex&lt;/code&gt; &lt;/a&gt; (если указано) будет сброшено на &lt;code&gt;0&lt;/code&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=501739&quot;&gt;ошибка 501739&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e7ea99355639c9282ea97466de7b33f83fff850a" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 27 (Firefox 27 / Thunderbird 27 / SeaMonkey 2.24), this method has been adjusted to conform with the ECMAScript specification. When &lt;code&gt;replace()&lt;/code&gt; is called with a global regular expression, the &lt;a href=&quot;../regexp/lastindex&quot;&gt;&lt;code&gt;RegExp.lastIndex&lt;/code&gt;&lt;/a&gt; property (if specified) will be reset to &lt;code&gt;0&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=501739&quot;&gt;bug 501739&lt;/a&gt;).</source>
          <target state="translated">Начиная с Gecko 27 (Firefox 27 / Thunderbird 27 / SeaMonkey 2.24), этот метод был скорректирован в соответствии со спецификацией ECMAScript. Когда &lt;code&gt;replace()&lt;/code&gt; вызывается с глобальным регулярным выражением, свойство &lt;a href=&quot;../regexp/lastindex&quot;&gt; &lt;code&gt;RegExp.lastIndex&lt;/code&gt; &lt;/a&gt; (если указано) будет сброшено на &lt;code&gt;0&lt;/code&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=501739&quot;&gt;ошибка 501739&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a3c247d94d2910e1fc548c0364d5a91d45f76f3c" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 29 (Firefox 29 / Thunderbird 29 / SeaMonkey 2.26), the completed generator function no longer throws a &lt;a href=&quot;../global_objects/typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; &quot;generator has already finished&quot;. Instead, it returns an &lt;code&gt;IteratorResult&lt;/code&gt; object like &lt;code&gt;{ value: undefined, done: true }&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=958951&quot;&gt;bug 958951&lt;/a&gt;).</source>
          <target state="translated">Начиная с Gecko 29 (Firefox 29 / Thunderbird 29 / SeaMonkey 2.26), завершенная функция генератора больше не вызывает &lt;a href=&quot;../global_objects/typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; &amp;laquo;генератор уже завершен&amp;raquo;. Вместо этого он возвращает объект &lt;code&gt;IteratorResult&lt;/code&gt; , например &lt;code&gt;{ value: undefined, done: true }&lt;/code&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=958951&quot;&gt;ошибка 958951&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c7be5a3d1ce77248b18108aff12e1c276c560731" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30), the parsing of the &lt;code&gt;yield&lt;/code&gt; expression has been updated to conform with the ES2015 specification (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=981599&quot;&gt;bug 981599&lt;/a&gt;):</source>
          <target state="translated">Начиная с Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30), синтаксический анализ выражения &lt;code&gt;yield&lt;/code&gt; был обновлен, чтобы соответствовать спецификации ES2015 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=981599&quot;&gt;ошибка 981599&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="1a3e97d1f37650a9017e375ec9b674f6754f8083" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30), the parsing of the yield expression has been updated to conform with the ES2015 specification (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=981599&quot;&gt;bug 981599&lt;/a&gt;):</source>
          <target state="translated">Начиная с Gecko 33 (Firefox 33 / Thunderbird 33 / SeaMonkey 2.30), синтаксический анализ выражения yield был обновлен, чтобы соответствовать спецификации ES2015 ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=981599&quot;&gt;ошибка 981599&lt;/a&gt; ):</target>
        </trans-unit>
        <trans-unit id="2d5dca9d1f4475ac86610b83f55f44258168ebef" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 39 (Firefox 39 / Thunderbird 39 / SeaMonkey 2.36), the non-standard &lt;code&gt;flags&lt;/code&gt; argument is deprecated and throws a console warning (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1142351&quot;&gt;bug 1142351&lt;/a&gt;).</source>
          <target state="translated">Начиная с Gecko 39 (Firefox 39 / Thunderbird 39 / SeaMonkey 2.36), аргумент нестандартных &lt;code&gt;flags&lt;/code&gt; устарел и выдает предупреждение консоли ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1142351&quot;&gt;ошибка 1142351&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="94294f73597019acbcd29bb4b0be097a6131b080" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 40 (Firefox 40 / Thunderbird 40 / SeaMonkey 2.37), a warning is shown in the console if unreachable code is found after a return statement.</source>
          <target state="translated">Начиная с Gecko 40 (Firefox 40/Thunderbird 40/SeaMonkey 2.37),при обнаружении недоступного кода после оператора возврата в консоли выводится предупреждение.</target>
        </trans-unit>
        <trans-unit id="9d1f7d25628b3418a4da45ebb690fd0ea9fb18ff" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), the non-standard &lt;code&gt;flags&lt;/code&gt; argument is no longer supported in non-release builds and will soon be removed entirely (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1245801&quot;&gt;bug 1245801&lt;/a&gt;).</source>
          <target state="translated">Начиная с Gecko 47 (Firefox 47 / Thunderbird 47 / SeaMonkey 2.44), аргумент нестандартных &lt;code&gt;flags&lt;/code&gt; больше не поддерживается в невыполненных сборках и вскоре будет полностью удален ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1245801&quot;&gt;ошибка 1245801&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d80c55d7e843704ffd14697c4fdb9cdbba7bd726" translate="yes" xml:space="preserve">
          <source>Starting with Gecko 49 (Firefox 49 / Thunderbird 49 / SeaMonkey 2.46), the non-standard &lt;code&gt;flags&lt;/code&gt; argument is no longer supported (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1108382&quot;&gt;bug 1108382&lt;/a&gt;).</source>
          <target state="translated">Начиная с Gecko 49 (Firefox 49 / Thunderbird 49 / SeaMonkey 2.46) аргумент нестандартных &lt;code&gt;flags&lt;/code&gt; больше не поддерживается ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1108382&quot;&gt;ошибка 1108382&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="bf08f9fc2b6721e0339552283eb7c6def8aeebec" translate="yes" xml:space="preserve">
          <source>Starting with version 17, the quotation mark (&quot;) is replaced by its HTML reference character (&lt;code&gt;&quot;&lt;/code&gt;) in strings supplied for the &lt;code&gt;name&lt;/code&gt; parameter.</source>
          <target state="translated">Начиная с версии 17, кавычки (&quot;) заменяются его ссылочным знаком HTML ( &lt;code&gt;&quot;&lt;/code&gt; ) в строках, предоставленных для параметра &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa0ba8163282c373881ba2cbd0f1213900e98ed0" translate="yes" xml:space="preserve">
          <source>Statement that is executed if &lt;code&gt;&lt;var&gt;condition&lt;/var&gt;&lt;/code&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; and the &lt;code&gt;else&lt;/code&gt; clause exists. Can be any statement, including block statements and further nested &lt;code&gt;if&lt;/code&gt; statements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a9bffb47006b2c19659c141e1e51f112a3ec6a" translate="yes" xml:space="preserve">
          <source>Statement that is executed if &lt;var&gt;condition&lt;/var&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; and the &lt;code&gt;else&lt;/code&gt; clause exists. Can be any statement, including block statements and further nested &lt;code&gt;if&lt;/code&gt; statements.</source>
          <target state="translated">Заявление, которое выполняется , если &lt;var&gt;condition&lt;/var&gt; является &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/falsy&quot;&gt;falsy&lt;/a&gt; и &lt;code&gt;else&lt;/code&gt; положение существует. Может быть любым оператором, включая операторы блока и дополнительные вложенные операторы &lt;code&gt;if&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a295b3a716d73341cd2337e7011155f2bdb06728" translate="yes" xml:space="preserve">
          <source>Statement that is executed if &lt;var&gt;condition&lt;/var&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;. Can be any statement, including further nested &lt;code&gt;if&lt;/code&gt; statements. To execute multiple statements, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement (&lt;code&gt;{ ... }&lt;/code&gt;) to group those statements. To execute no statements, use an &lt;a href=&quot;empty&quot;&gt;empty&lt;/a&gt; statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719687edcea3e86416346d2fabcace11d9e077f1" translate="yes" xml:space="preserve">
          <source>Statement that is executed if &lt;var&gt;condition&lt;/var&gt; is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt;. Can be any statement, including further nested &lt;code&gt;if&lt;/code&gt; statements. To execute multiple statements, use a &lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement ({ ... }) to group those statements. To execute no statements, use an &lt;a href=&quot;empty&quot;&gt;empty&lt;/a&gt; statement.</source>
          <target state="translated">Заявление, которое выполняется , если &lt;var&gt;condition&lt;/var&gt; является &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; . Может быть любым оператором, включая дополнительные вложенные операторы &lt;code&gt;if&lt;/code&gt; . Чтобы выполнить несколько операторов, используйте оператор &lt;a href=&quot;block&quot;&gt;блока&lt;/a&gt; ({...}), чтобы сгруппировать эти операторы. Чтобы не выполнять никаких операторов, используйте &lt;a href=&quot;empty&quot;&gt;пустой&lt;/a&gt; оператор.</target>
        </trans-unit>
        <trans-unit id="eb1283cf1c7fb177ad852fce56f2cb2454b8d381" translate="yes" xml:space="preserve">
          <source>Statement that is executed if an exception is thrown in the &lt;code&gt;try&lt;/code&gt;-block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5653cebc057d4791ce07031ad9286e729de6d691" translate="yes" xml:space="preserve">
          <source>Statements</source>
          <target state="translated">Statements</target>
        </trans-unit>
        <trans-unit id="84d8cb34f2d9de67acaba674a8f292cbe8f264dc" translate="yes" xml:space="preserve">
          <source>Statements and declarations</source>
          <target state="translated">Заявления и декларации</target>
        </trans-unit>
        <trans-unit id="275ac973b62c56d33eaf08f44af72b116ba9f9d9" translate="yes" xml:space="preserve">
          <source>Statements grouped within the block statement.</source>
          <target state="translated">Выписки,сгруппированные в блок-операторе.</target>
        </trans-unit>
        <trans-unit id="91ff9ca2726e9cb2a876ef3a955fda5c072c3c94" translate="yes" xml:space="preserve">
          <source>Statements that are executed after the &lt;code&gt;try&lt;/code&gt; statement completes. These statements execute regardless of whether an exception was thrown or caught.</source>
          <target state="translated">Операторы, которые выполняются после завершения оператора &lt;code&gt;try&lt;/code&gt; . Эти операторы выполняются независимо от того, было выбрано исключение.</target>
        </trans-unit>
        <trans-unit id="4a1f56678f1f74eca85af3252fb68ff0e040a389" translate="yes" xml:space="preserve">
          <source>Statements that are executed if an exception is thrown in the &lt;code&gt;try&lt;/code&gt; block.</source>
          <target state="translated">Операторы, которые выполняются, если в блоке &lt;code&gt;try&lt;/code&gt; возникает исключение .</target>
        </trans-unit>
        <trans-unit id="7528d409faaab9076b5c4069ffc7d919b15bc434" translate="yes" xml:space="preserve">
          <source>Statements vs expressions</source>
          <target state="translated">Выражения против выражений</target>
        </trans-unit>
        <trans-unit id="5d98c52afcaa34cfe963de5cb427c5da55dfefda" translate="yes" xml:space="preserve">
          <source>Static (class-side) data properties and prototype data properties must be defined outside of the ClassBody declaration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349079da2eae6d7c96237a896d40fb689cf52da2" translate="yes" xml:space="preserve">
          <source>Static class fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6c00271c714d64dfd36130aa96dd887a8845c9" translate="yes" xml:space="preserve">
          <source>Static class-side properties and prototype data properties must be defined outside of the ClassBody declaration:</source>
          <target state="translated">Свойства статического класса и свойства данных прототипа должны быть определены вне декларации ClassBody:</target>
        </trans-unit>
        <trans-unit id="ad330d4f66b4d4d7768eaefbe87f650f03c68924" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Float32Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Свойство статической длины, значение которого равно 0. Фактическую длину (количество элементов) см . В разделе &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Float32Array.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="62d40bd4177c9118d37b7ab2bd16474bf4d28b43" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Float64Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Свойство статической длины, значение которого равно 0. Фактическую длину (количество элементов) см . В разделе &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Float64Array.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d1f678d3e0926a61cbcaa5b2910b050828a385b" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Int16Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Статическое свойство длины, значение которого равно 0. Фактическую длину (количество элементов) см. В &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Int16Array.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="631eb5bf63c338793b4f24193d140222e44000b7" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Int32Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Свойство статической длины, значение которого равно 0. Фактическую длину (количество элементов) см. В &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Int32Array.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26b9c8a66dcad0f99202aca0463865b24a374157" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Int8Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Статическое свойство длины, значение которого равно 0. Фактическую длину (количество элементов) см. В &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Int8Array.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5c8424b677c0da0f9fafc1507e8846ed31e2fea5" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Uint16Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Свойство статической длины, значение которого равно 0. Фактическую длину (количество элементов) см . В разделе &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Uint16Array.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="133e9abd12a20da46ec14621b8ed4bacac79b4d4" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Uint32Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Свойство статической длины, значение которого равно 0. Фактическую длину (количество элементов) см . В разделе &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Uint32Array.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c66d90a50063ff2005f82def6aacfa90985efc87" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Uint8Array.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Статическое свойство длины, значение которого равно 0. Фактическую длину (количество элементов) см. В &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Uint8Array.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d06d0df1a664c93bd5563a4397686a8d9052836a" translate="yes" xml:space="preserve">
          <source>Static length property whose value is 0. For the actual length (number of elements), see &lt;a href=&quot;typedarray/length&quot;&gt;&lt;code&gt;Uint8ClampedArray.prototype.length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Свойство статической длины, значение которого равно 0. Фактическую длину (количество элементов) см . В разделе &lt;a href=&quot;typedarray/length&quot;&gt; &lt;code&gt;Uint8ClampedArray.prototype.length&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58898d40061b43bce8bb612e0ae682397c2e9d77" translate="yes" xml:space="preserve">
          <source>Static members are not directly accessible using the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; keyword from non-static methods. You need to call them using the class name: &lt;code&gt;CLASSNAME.STATIC_METHOD_NAME()&lt;/code&gt; / &lt;code&gt;CLASSNAME.STATIC_PROPERTY_NAME&lt;/code&gt; or by calling the method as a property of the &lt;code&gt;constructor&lt;/code&gt;: &lt;code&gt;this.constructor.STATIC_METHOD_NAME() &lt;/code&gt; / &lt;code&gt;this.constructor.STATIC_PROPERTY_NAME&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41226ac2a5c1d19cb0fe70dc2644d2aef63fd05b" translate="yes" xml:space="preserve">
          <source>Static method calls are made directly on the class and are not callable on instances of the class. Static methods are often used to create utility functions.</source>
          <target state="translated">Статические вызовы методов производятся непосредственно на классе и не вызываются на экземплярах класса.Статические методы часто используются для создания функций полезности.</target>
        </trans-unit>
        <trans-unit id="749a016bf10749d6bbdfc0717392432e9f0401f6" translate="yes" xml:space="preserve">
          <source>Static methods</source>
          <target state="translated">Статические методы</target>
        </trans-unit>
        <trans-unit id="c3e6380b850e6c1f03db71f3d0047d7a83cd5dde" translate="yes" xml:space="preserve">
          <source>Static methods and properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df7b5b3e0b3cd6d568dc67a2f619c20dec3b14d" translate="yes" xml:space="preserve">
          <source>Static methods are not directly accessible using the &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; keyword from non-static methods. You need to call them using the class name: &lt;code&gt;CLASSNAME.STATIC_METHOD_NAME()&lt;/code&gt; or by calling the method as a property of the &lt;code&gt;constructor&lt;/code&gt;: &lt;code&gt;this.constructor.STATIC_METHOD_NAME()&lt;/code&gt;.</source>
          <target state="translated">Статические методы недоступны напрямую с помощью ключевого слова &lt;code&gt;&lt;a href=&quot;../operators/this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; из нестатических методов. &lt;code&gt;CLASSNAME.STATIC_METHOD_NAME()&lt;/code&gt; нужно вызывать, используя имя класса: CLASSNAME.STATIC_METHOD_NAME () или вызывая метод как свойство &lt;code&gt;constructor&lt;/code&gt; : &lt;code&gt;this.constructor.STATIC_METHOD_NAME()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f693c8e57f56be518aade11355181f9181d63004" translate="yes" xml:space="preserve">
          <source>Static properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="c2185d648438b7f6846ef4ebea822178f84f3520" translate="yes" xml:space="preserve">
          <source>Stay away from semantic differences</source>
          <target state="translated">Держитесь подальше от семантических различий</target>
        </trans-unit>
        <trans-unit id="b8a7432f2b78e5256eacca5e17116faeef171b81" translate="yes" xml:space="preserve">
          <source>Staying in 64-bit ranges</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d404b5025c048fc201a9defd8915915cc320a024" translate="yes" xml:space="preserve">
          <source>Stmt after return</source>
          <target state="translated">Стмт после возвращения</target>
        </trans-unit>
        <trans-unit id="b69eac3c17b612149ba7842c47fe8993276b5b63" translate="yes" xml:space="preserve">
          <source>Stores a signed 16-bit integer (short) value at the specified byte offset from the start of the view.</source>
          <target state="translated">Хранит подписанное 16-битное целое (короткое)значение при указанном смещении байта от начала представления.</target>
        </trans-unit>
        <trans-unit id="0dfd3c466c1331b7039990496114ebdca45e12a4" translate="yes" xml:space="preserve">
          <source>Stores a signed 32-bit float (float) value at the specified byte offset from the start of the view.</source>
          <target state="translated">Хранит подписанное 32-битное значение с плавающей точкой (float)при указанном смещении байта от начала просмотра.</target>
        </trans-unit>
        <trans-unit id="7afeba171facf6506a73949e72f435caa1f6d643" translate="yes" xml:space="preserve">
          <source>Stores a signed 32-bit integer (long) value at the specified byte offset from the start of the view.</source>
          <target state="translated">Хранит подписанное 32-битное целое (длинное)значение при указанном смещении байта от начала представления.</target>
        </trans-unit>
        <trans-unit id="9d59ce560e520283118225e835fc895c1c39ce43" translate="yes" xml:space="preserve">
          <source>Stores a signed 64-bit float (double) value at the specified byte offset from the start of the view.</source>
          <target state="translated">Хранит подписанное 64-битное значение с плавающей точкой (double)при указанном смещении байта от начала просмотра.</target>
        </trans-unit>
        <trans-unit id="67c2747fda39e2b1930c5c54bbce88fc517b7347" translate="yes" xml:space="preserve">
          <source>Stores a signed 64-bit integer (long long) value at the specified byte offset from the start of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f76a4c8284b32e0483b315358749a25ebc4b1de" translate="yes" xml:space="preserve">
          <source>Stores a signed 8-bit integer (byte) value at the specified byte offset from the start of the view.</source>
          <target state="translated">Хранит подписанное 8-битное целое (байтовое)значение при указанном смещении байта от начала представления.</target>
        </trans-unit>
        <trans-unit id="aa9f269db3b5564b844ba56264d951e1c2e9fcbf" translate="yes" xml:space="preserve">
          <source>Stores a value at the specified index of the array, if it equals a value. Returns the old value.</source>
          <target state="translated">Хранит значение в указанном индексе массива,если оно равно значению.Возвращает старое значение.</target>
        </trans-unit>
        <trans-unit id="ed38e8759915a6e8856068fedf07254394f112de" translate="yes" xml:space="preserve">
          <source>Stores a value at the specified index of the array. Returns the old value.</source>
          <target state="translated">Хранит значение в указанном индексе массива.Возвращает старое значение.</target>
        </trans-unit>
        <trans-unit id="92c89a8c0e3045fb8fa519c8c0054b1010ba34dc" translate="yes" xml:space="preserve">
          <source>Stores a value at the specified index of the array. Returns the value.</source>
          <target state="translated">Хранит значение в указанном индексе массива.Возвращает значение.</target>
        </trans-unit>
        <trans-unit id="cbfa4b2fefb58e544286d0edf763c0cf3442c1d2" translate="yes" xml:space="preserve">
          <source>Stores an unsigned 16-bit integer (unsigned short) value at the specified byte offset from the start of the view.</source>
          <target state="translated">Хранит беззнаковое 16-битное целое (беззнаковое короткое)значение при указанном смещении байта от начала просмотра.</target>
        </trans-unit>
        <trans-unit id="a6de4a4af354978b9ff4a24dd8f4de0cf6f3473a" translate="yes" xml:space="preserve">
          <source>Stores an unsigned 32-bit integer (unsigned long) value at the specified byte offset from the start of the view.</source>
          <target state="translated">Хранит беззнаковое 32-битное целое (беззнаковое длинное)значение при указанном смещении байта от начала просмотра.</target>
        </trans-unit>
        <trans-unit id="c56d57562c57cefbf435b54b17e78c75a8338b6d" translate="yes" xml:space="preserve">
          <source>Stores an unsigned 64-bit integer (unsigned long long) value at the specified byte offset from the start of the view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ab99e33f760bcf0acbe8abf57d6c359b6dcf401" translate="yes" xml:space="preserve">
          <source>Stores an unsigned 8-bit integer (unsigned byte) value at the specified byte offset from the start of the view.</source>
          <target state="translated">Хранит беззнаковое 8-битное целое (беззнаковое байтовое)значение при указанном смещении байтов от начала просмотра.</target>
        </trans-unit>
        <trans-unit id="d4a8f534bb3d3537fbbba028d6132d9cb507dfdf" translate="yes" xml:space="preserve">
          <source>Stores multiple values in the typed array, reading input values from a specified array.</source>
          <target state="translated">Хранит несколько значений в типизированном массиве,читает входные значения из указанного массива.</target>
        </trans-unit>
        <trans-unit id="224e8a532b1fef5ab4e055e93952cef0646ff497" translate="yes" xml:space="preserve">
          <source>Stream a .wasm module then compile and instantiate it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd48552d7139ff022b5896e3e2bfd2b6a862cf50" translate="yes" xml:space="preserve">
          <source>Streamlining cross-browser behavior</source>
          <target state="translated">Оптимизация поведения кросс-браузеров</target>
        </trans-unit>
        <trans-unit id="85695942a843fa66aa5dca9bfdd5281cfad8fce2" translate="yes" xml:space="preserve">
          <source>Strict Equality</source>
          <target state="translated">Строгое равенство</target>
        </trans-unit>
        <trans-unit id="21a584e8b34f5fb1dbd69202af394b31ff8d84c3" translate="yes" xml:space="preserve">
          <source>Strict Inequality</source>
          <target state="translated">Строгое неравенство</target>
        </trans-unit>
        <trans-unit id="68603d3da6f8b6d0494457ca7082cb9f67f52a65" translate="yes" xml:space="preserve">
          <source>Strict Non Simple Params</source>
          <target state="translated">Строгие,не простые парамы</target>
        </trans-unit>
        <trans-unit id="32ab08964b185d8506dcefbb7b36126fab9bee18" translate="yes" xml:space="preserve">
          <source>Strict and non-strict reserved keywords</source>
          <target state="translated">Строгие и нестрогие зарезервированные ключевые слова</target>
        </trans-unit>
        <trans-unit id="5e92af286bfaaa6443b1cfd12101b86bce489698" translate="yes" xml:space="preserve">
          <source>Strict equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ed42ca28eacfbd6bc0510636e4e5135f73cec6" translate="yes" xml:space="preserve">
          <source>Strict equality (&lt;code&gt;a === b&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8b70bc27a81daac57cbc2020c9e75037edcb13" translate="yes" xml:space="preserve">
          <source>Strict equality and &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Строгое равенство и &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb6b153db7e60bb9ffbfe0e98589ea7c0aa93081" translate="yes" xml:space="preserve">
          <source>Strict equality and undefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8f75d3066383c12cb562776b4563dd6163b4afe" translate="yes" xml:space="preserve">
          <source>Strict equality operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d685dce9012deaeeaa99c34c78c814b9fb5189d3" translate="yes" xml:space="preserve">
          <source>Strict inequality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1256024d3f5b4b2b115bedbc0ab1e5c2194c24" translate="yes" xml:space="preserve">
          <source>Strict inequality (&lt;code&gt;a !== b&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118e15e157b03d22efd8cae9e81dd8d439c30e9f" translate="yes" xml:space="preserve">
          <source>Strict inequality operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb58e54eade2e3692f42c15879de34341894444a" translate="yes" xml:space="preserve">
          <source>Strict mode</source>
          <target state="translated">Строгий режим</target>
        </trans-unit>
        <trans-unit id="ac05e0f0eb8e5ce93ae3960c0a87442f1ffdc4e6" translate="yes" xml:space="preserve">
          <source>Strict mode applies to &lt;em&gt;entire scripts&lt;/em&gt; or to &lt;em&gt;individual functions&lt;/em&gt;. It doesn't apply to block statements enclosed in &lt;code&gt;{}&lt;/code&gt; braces; attempting to apply it to such contexts does nothing. &lt;code&gt;eval&lt;/code&gt; code, &lt;code&gt;Function&lt;/code&gt; code, event handler attributes, strings passed to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout&quot;&gt;&lt;code&gt;WindowTimers.setTimeout()&lt;/code&gt;&lt;/a&gt;, and related functions are entire scripts, and invoking strict mode in them works as expected.</source>
          <target state="translated">Строгий режим применяется ко &lt;em&gt;всем скриптам&lt;/em&gt; или к &lt;em&gt;отдельным функциям&lt;/em&gt; . Это не относится к операторам блока, заключенным в фигурные скобки &lt;code&gt;{}&lt;/code&gt; ; попытка применить его к таким контекстам ничего не дает. Код &lt;code&gt;eval&lt;/code&gt; , код &lt;code&gt;Function&lt;/code&gt; , атрибуты обработчика событий, строки, переданные в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout&quot;&gt; &lt;code&gt;WindowTimers.setTimeout()&lt;/code&gt; &lt;/a&gt; , и связанные функции представляют собой целые сценарии, и вызов строгого режима в них работает должным образом.</target>
        </trans-unit>
        <trans-unit id="029d794e3ca9eb8ef7a2ff06e3025e4277908969" translate="yes" xml:space="preserve">
          <source>Strict mode changes both syntax and runtime behavior. Changes generally fall into these categories: changes converting mistakes into errors (as syntax errors or at runtime), changes simplifying how the particular variable for a given use of a name is computed, changes simplifying &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt;, changes making it easier to write &quot;secure&quot; JavaScript, and changes anticipating future ECMAScript evolution.</source>
          <target state="translated">Строгий режим изменяет как синтаксис, так и поведение во время выполнения. Изменения обычно делятся на следующие категории: изменения, преобразующие ошибки в ошибки (как синтаксические ошибки или во время выполнения), изменения, упрощающие способ вычисления конкретной переменной для данного использования имени, изменения, упрощающие &lt;code&gt;eval&lt;/code&gt; и &lt;code&gt;arguments&lt;/code&gt; , изменения, упрощающие запись &quot; безопасный &quot;JavaScript&quot; и изменения, ожидающие будущего развития ECMAScript.</target>
        </trans-unit>
        <trans-unit id="14cdc1d692317bf2d5efd8a350a09d31e50cfe56" translate="yes" xml:space="preserve">
          <source>Strict mode changes some previously-accepted mistakes into errors. JavaScript was designed to be easy for novice developers, and sometimes it gives operations which should be errors non-error semantics. Sometimes this fixes the immediate problem, but sometimes this creates worse problems in the future. Strict mode treats these mistakes as errors so that they're discovered and promptly fixed.</source>
          <target state="translated">Строгий режим превращает некоторые ранее принятые ошибки в ошибки.JavaScript был разработан таким образом,чтобы быть простым для начинающих разработчиков,и иногда в нем даются операции,которые должны быть ошибками,а не ошибочной семантикой.Иногда это исправляет сиюминутную проблему,но иногда это создает и худшие проблемы в будущем.В строгом режиме эти ошибки рассматриваются как ошибки,чтобы их можно было быстро обнаружить и исправить.</target>
        </trans-unit>
        <trans-unit id="21b3be2840c358a7f8f396cc45ef506abd548ed6" translate="yes" xml:space="preserve">
          <source>Strict mode compatibility table</source>
          <target state="translated">Строгая таблица совместимости режимов</target>
        </trans-unit>
        <trans-unit id="8714af86743a1124997fe2c57f8c770055d08b84" translate="yes" xml:space="preserve">
          <source>Strict mode for functions</source>
          <target state="translated">Строгий режим для функций</target>
        </trans-unit>
        <trans-unit id="3cf82be43d2002b30f76bc3806ddf22a149fa615" translate="yes" xml:space="preserve">
          <source>Strict mode for modules</source>
          <target state="translated">Строгий режим для модулей</target>
        </trans-unit>
        <trans-unit id="96a74aebd989c38fc9ed2a7c015a0920dc1b8339" translate="yes" xml:space="preserve">
          <source>Strict mode for scripts</source>
          <target state="translated">Строгий режим для скриптов</target>
        </trans-unit>
        <trans-unit id="9d33f212bdd419492e4159cffb4c3e4202ee7831" translate="yes" xml:space="preserve">
          <source>Strict mode has been designed so that the transition to it can be made gradually. It is possible to change each file individually and even to transition code to strict mode down to the function granularity.</source>
          <target state="translated">Строгий режим был разработан таким образом,что переход к нему может происходить постепенно.Можно изменять каждый файл по отдельности и даже переводить код в строгий режим вплоть до гранулярности функции.</target>
        </trans-unit>
        <trans-unit id="f2ac28d55dd011bba134b5f9e0593b7527de4919" translate="yes" xml:space="preserve">
          <source>Strict mode in browsers</source>
          <target state="translated">Строгий режим в браузерах</target>
        </trans-unit>
        <trans-unit id="da0a55b8822c8d33c0eaacabd9aac51f867930a4" translate="yes" xml:space="preserve">
          <source>Strict mode is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12053364f5394d79b660251707f54011c8d15a9" translate="yes" xml:space="preserve">
          <source>Strict mode makes &lt;code&gt;arguments&lt;/code&gt; and &lt;code&gt;eval&lt;/code&gt; less bizarrely magical. Both involve a considerable amount of magical behavior in normal code: &lt;code&gt;eval&lt;/code&gt; to add or remove bindings and to change binding values, and &lt;code&gt;arguments&lt;/code&gt; by its indexed properties aliasing named arguments. Strict mode makes great strides toward treating &lt;code&gt;eval&lt;/code&gt; and &lt;code&gt;arguments&lt;/code&gt; as keywords, although full fixes will not come until a future edition of ECMAScript.</source>
          <target state="translated">Строгий режим делает &lt;code&gt;arguments&lt;/code&gt; и &lt;code&gt;eval&lt;/code&gt; менее причудливо волшебными. Оба включают в себя значительный объем магического поведения в обычном коде: &lt;code&gt;eval&lt;/code&gt; для добавления или удаления привязок и для изменения значений привязки, а также &lt;code&gt;arguments&lt;/code&gt; помощью своих индексированных свойств с псевдонимом именованных аргументов. Строгий режим делает большие шаги к тому, чтобы рассматривать &lt;code&gt;eval&lt;/code&gt; и &lt;code&gt;arguments&lt;/code&gt; как ключевые слова, хотя полные исправления появятся только в будущей редакции ECMAScript.</target>
        </trans-unit>
        <trans-unit id="6aa491a53e9cba0de8ec4ab2cb59fee3657711c0" translate="yes" xml:space="preserve">
          <source>Strict mode makes it easier to write &quot;secure&quot; JavaScript. Some websites now provide ways for users to write JavaScript which will be run by the website &lt;em&gt;on behalf of other users&lt;/em&gt;. JavaScript in browsers can access the user's private information, so such JavaScript must be partially transformed before it is run, to censor access to forbidden functionality. JavaScript's flexibility makes it effectively impossible to do this without many runtime checks. Certain language functions are so pervasive that performing runtime checks has a considerable performance cost. A few strict mode tweaks, plus requiring that user-submitted JavaScript be strict mode code and that it be invoked in a certain manner, substantially reduce the need for those runtime checks.</source>
          <target state="translated">Строгий режим упрощает написание &amp;laquo;безопасного&amp;raquo; JavaScript. Некоторые веб-сайты теперь предоставляют пользователям возможность писать JavaScript, который будет запускаться сайтом &lt;em&gt;от имени других пользователей&lt;/em&gt; . JavaScript в браузерах может получить доступ к личной информации пользователя, поэтому такой JavaScript необходимо частично преобразовать перед запуском, чтобы подвергнуть цензуре доступ к запрещенным функциям. Гибкость JavaScript делает это практически невозможным без множества проверок во время выполнения. Некоторые языковые функции настолько распространены, что выполнение проверок во время выполнения требует значительных затрат производительности. Несколько настроек строгого режима, а также требование, чтобы отправленный пользователем JavaScript был кодом строгого режима и чтобы он вызывался определенным образом, существенно сокращают потребность в этих проверках во время выполнения.</target>
        </trans-unit>
        <trans-unit id="ffd44cb0172afba4c6ad8d00101e96f6c2f1ced4" translate="yes" xml:space="preserve">
          <source>Strict mode makes several changes to normal JavaScript semantics:</source>
          <target state="translated">Строгий режим вносит несколько изменений в обычную семантику JavaScript:</target>
        </trans-unit>
        <trans-unit id="a8bd250e956f360c8422fc971382802c74df4b26" translate="yes" xml:space="preserve">
          <source>Strict mode restriction and exceptions</source>
          <target state="translated">Строгое ограничение режима и исключения</target>
        </trans-unit>
        <trans-unit id="cd485e0c68ca1624297775adf6e79bbde5eb7d02" translate="yes" xml:space="preserve">
          <source>Strict mode simplifies how variable names map to particular variable definitions in the code. Many compiler optimizations rely on the ability to say that variable &lt;em&gt;X&lt;/em&gt; is stored in &lt;em&gt;that&lt;/em&gt; location: this is critical to fully optimizing JavaScript code. JavaScript sometimes makes this basic mapping of name to variable definition in the code impossible to perform until runtime. Strict mode removes most cases where this happens, so the compiler can better optimize strict mode code.</source>
          <target state="translated">Строгий режим упрощает отображение имен переменных на определенные определения переменных в коде. Многие оптимизации компилятора полагаются на возможность сказать, что переменная &lt;em&gt;X&lt;/em&gt; хранится в &lt;em&gt;этом&lt;/em&gt; месте: это критически важно для полной оптимизации кода JavaScript. JavaScript иногда делает это базовое сопоставление имени с определением переменной в коде невозможным до выполнения. Строгий режим устраняет большинство случаев, когда это происходит, поэтому компилятор может лучше оптимизировать код строгого режима.</target>
        </trans-unit>
        <trans-unit id="420c45e33927d356f2c5eabf0121fc20f95c0044" translate="yes" xml:space="preserve">
          <source>Strict mode: Transitioning to strict mode</source>
          <target state="translated">Строгий режим:Переход в строгий режим</target>
        </trans-unit>
        <trans-unit id="0a98f16efb799f55f6575b3988ce53a30c61d34e" translate="yes" xml:space="preserve">
          <source>Strict vs. non-strict mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3fb5536b277b581f564d7c1be6467a54d03c0b" translate="yes" xml:space="preserve">
          <source>Strictness-neutral code</source>
          <target state="translated">Строго-нейтральный код</target>
        </trans-unit>
        <trans-unit id="3df63b7acb0522da685dad5fe84b81fdd7b25264" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="translated">String</target>
        </trans-unit>
        <trans-unit id="c4cf243380995c59cd0d14287fbbada913c64d63" translate="yes" xml:space="preserve">
          <source>String concatenation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a9906f72b05d34739897ae7f0120ee9a4f1881" translate="yes" xml:space="preserve">
          <source>String constructor and String function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6104084e70872a799af75c0c3b3e9c680e29b421" translate="yes" xml:space="preserve">
          <source>String conversion</source>
          <target state="translated">Преобразование струны</target>
        </trans-unit>
        <trans-unit id="6160a6b7207e2b80d6e2622559a57a5d7324aafc" translate="yes" xml:space="preserve">
          <source>String function and String constructor produce different results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5993cb336c6391ee8eea94b873bb797a1c4d4619" translate="yes" xml:space="preserve">
          <source>String literals</source>
          <target state="translated">Строковые буквы</target>
        </trans-unit>
        <trans-unit id="21818949a1c8cb050ce5b7042c3ccb8d688c4056" translate="yes" xml:space="preserve">
          <source>String literals (&lt;code&gt;'Hello world'&lt;/code&gt;)</source>
          <target state="translated">Строковые литералы ( &lt;code&gt;'Hello world'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7b5e72cd202dacfd6352377ddb517518e1c84895" translate="yes" xml:space="preserve">
          <source>String literals (denoted by double or single quotes) and strings returned from &lt;code&gt;String&lt;/code&gt; calls in a non-constructor context (i.e., without using the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; keyword) are primitive strings. JavaScript automatically converts primitives to &lt;code&gt;String&lt;/code&gt; objects, so that it's possible to use &lt;code&gt;String&lt;/code&gt; object methods for primitive strings. In contexts where a method is to be invoked on a primitive string or a property lookup occurs, JavaScript will automatically wrap the string primitive and call the method or perform the property lookup.</source>
          <target state="translated">Строковые литералы (обозначаемые двойными или одинарными кавычками) и строки, возвращаемые из вызовов &lt;code&gt;String&lt;/code&gt; в контексте, не являющемся конструктором (т. Е. Без использования ключевого слова &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; ), являются примитивными строками. JavaScript автоматически преобразует примитивы в объекты &lt;code&gt;String&lt;/code&gt; , так что можно использовать методы объекта &lt;code&gt;String&lt;/code&gt; для примитивных строк. В контекстах, где метод должен быть вызван для примитивной строки или происходит поиск свойства, JavaScript автоматически оборачивает строковый примитив и вызывает метод или выполняет поиск свойства.</target>
        </trans-unit>
        <trans-unit id="30577a039645d9f8ebad75c5ee69a6308ee9ad8f" translate="yes" xml:space="preserve">
          <source>String literals (denoted by double or single quotes) and strings returned from &lt;code&gt;String&lt;/code&gt; calls in a non-constructor context (that is, called without using the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; keyword) are primitive strings. JavaScript automatically converts primitives to &lt;code&gt;String&lt;/code&gt; objects, so that it's possible to use &lt;code&gt;String&lt;/code&gt; object methods for primitive strings. In contexts where a method is to be invoked on a primitive string or a property lookup occurs, JavaScript will automatically wrap the string primitive and call the method or perform the property lookup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fef7db9952140eed0c3e4946cf132c32ff7f526" translate="yes" xml:space="preserve">
          <source>String literals can be specified using single or double quotes, which are treated identically, or using the backtick character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68fb71c3d5ea58d2d272d93093c2eccd622a8e90" translate="yes" xml:space="preserve">
          <source>String literals take the forms:</source>
          <target state="translated">Строковые буквы принимают форму:</target>
        </trans-unit>
        <trans-unit id="b41319a3f70d7307f4a97f565abe5c598a3e85b7" translate="yes" xml:space="preserve">
          <source>String primitives and &lt;code&gt;String&lt;/code&gt; objects also give different results when using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt;. Primitives passed to &lt;code&gt;eval&lt;/code&gt; are treated as source code; &lt;code&gt;String&lt;/code&gt; objects are treated as all other objects are, by returning the object. For example:</source>
          <target state="translated">Строковые примитивы и объекты &lt;code&gt;String&lt;/code&gt; также дают разные результаты при использовании &lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; . Примитивы, переданные в &lt;code&gt;eval&lt;/code&gt; , рассматриваются как исходный код; &lt;code&gt;String&lt;/code&gt; объекты обрабатываются так же, как и все другие объекты, путем возврата объекта. Например:</target>
        </trans-unit>
        <trans-unit id="54660349d33962339f5686867f760f27362f6d5a" translate="yes" xml:space="preserve">
          <source>String primitives and String objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="febba705e0dac6ecd0746f70e6584c68ab9a59a3" translate="yes" xml:space="preserve">
          <source>String primitives and string objects can be used interchangeably in most situations. See &quot;&lt;a href=&quot;#String_primitives_and_String_objects&quot;&gt;String primitives and String objects&lt;/a&gt;&quot; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7dbd68bcae3a9508bee586d0e789145640d8ae" translate="yes" xml:space="preserve">
          <source>String to number comparison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cc86796e892ac895836022c5f22c53d2183506" translate="yes" xml:space="preserve">
          <source>String to string comparison</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="435c9e552747f75d24772dba2bd1010e3a131fa0" translate="yes" xml:space="preserve">
          <source>String value representing a date. The string should be in a format recognized by the &lt;a href=&quot;date/parse&quot;&gt;&lt;code&gt;Date.parse()&lt;/code&gt;&lt;/a&gt; method (&lt;a href=&quot;http://tools.ietf.org/html/rfc2822#page-14&quot;&gt;IETF-compliant RFC 2822 timestamps&lt;/a&gt; and also a &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;version of ISO8601&lt;/a&gt;).</source>
          <target state="translated">Строковое значение, представляющее дату. Строка должна быть в формате, распознаваемом методом &lt;a href=&quot;date/parse&quot;&gt; &lt;code&gt;Date.parse()&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;http://tools.ietf.org/html/rfc2822#page-14&quot;&gt;временные метки RFC 2822, соответствующие требованиям IETF,&lt;/a&gt; а также &lt;a href=&quot;http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.15&quot;&gt;версия ISO8601&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4fe19f50dbe15aa1cb224ae645201e3304ad483f" translate="yes" xml:space="preserve">
          <source>String, required. The key for the symbol (and also used for the description of the symbol).</source>
          <target state="translated">Строка,требуется.Ключ к символу (а также используется для описания символа).</target>
        </trans-unit>
        <trans-unit id="9b88f67001349e871aacd0efd74d8b5be7dd6625" translate="yes" xml:space="preserve">
          <source>String. A component of a URI.</source>
          <target state="translated">Стринг.Компонент УРТ.</target>
        </trans-unit>
        <trans-unit id="4a3816cc386ee999904b63093a6c9343da2c66ee" translate="yes" xml:space="preserve">
          <source>String.fromCharCode</source>
          <target state="translated">String.fromCharCode</target>
        </trans-unit>
        <trans-unit id="3ec4474820f60b27bb8d3e37c1198328be6caa20" translate="yes" xml:space="preserve">
          <source>String.fromCodePoint</source>
          <target state="translated">String.fromCodePoint</target>
        </trans-unit>
        <trans-unit id="43f86903d36d048c8634a0d3efec8e4d2a2b6670" translate="yes" xml:space="preserve">
          <source>String.length</source>
          <target state="translated">String.length</target>
        </trans-unit>
        <trans-unit id="948abeacef6f8ee9f6be695c91a2f241486b159c" translate="yes" xml:space="preserve">
          <source>String.prototype</source>
          <target state="translated">String.prototype</target>
        </trans-unit>
        <trans-unit id="3dfba0be6a393300636867481eb1f2b23c8d5f67" translate="yes" xml:space="preserve">
          <source>String.prototype.contains</source>
          <target state="translated">String.prototype.contains</target>
        </trans-unit>
        <trans-unit id="5a9afccf7ae3dffe75bbe24bb021f8b4412fe69d" translate="yes" xml:space="preserve">
          <source>String.raw</source>
          <target state="translated">String.raw</target>
        </trans-unit>
        <trans-unit id="711e88fed57930959057ae3df8ee21fda7f9ba41" translate="yes" xml:space="preserve">
          <source>String.string</source>
          <target state="translated">String.string</target>
        </trans-unit>
        <trans-unit id="f1e4deaa67730466ed15c966cf273a87dfbdf1f1" translate="yes" xml:space="preserve">
          <source>Strings are compared based on standard lexicographical ordering, using Unicode values.</source>
          <target state="translated">Сравнение строк производится на основе стандартного лексикографического заказа с использованием значений Юникода.</target>
        </trans-unit>
        <trans-unit id="4cb8914abfe585019a55f513afa0e4fa436d85a3" translate="yes" xml:space="preserve">
          <source>Strings are converted based on the values they contain, and are converted as &lt;code&gt;NaN&lt;/code&gt; if they do not contain numeric values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87a6126f3414080756ea8b8a027afaaa7a051c7" translate="yes" xml:space="preserve">
          <source>Strings are useful for holding data that can be represented in text form. Some of the most-used operations on strings are to check their &lt;a href=&quot;string/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;, to build and concatenate them using the &lt;a href=&quot;../operators/arithmetic_operators&quot;&gt;+ and += string operators&lt;/a&gt;, checking for the existence or location of substrings with the &lt;a href=&quot;string/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt; method, or extracting substrings with the &lt;a href=&quot;string/substring&quot;&gt;&lt;code&gt;substring()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Строки полезны для хранения данных, которые могут быть представлены в текстовой форме. Некоторые из наиболее часто используемых операций со строками - это проверка их &lt;a href=&quot;string/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; , построение и объединение их с помощью &lt;a href=&quot;../operators/arithmetic_operators&quot;&gt;строковых операторов + и + =&lt;/a&gt; , проверка наличия или расположения подстрок с помощью &lt;a href=&quot;string/indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt; или извлечение подстрок с помощью &lt;a href=&quot;string/substring&quot;&gt; &lt;code&gt;substring()&lt;/code&gt; &lt;/a&gt; метод.</target>
        </trans-unit>
        <trans-unit id="d87a42e2eb51431b8ea1287856e08f582d5e5734" translate="yes" xml:space="preserve">
          <source>Strings are useful for holding data that can be represented in text form. Some of the most-used operations on strings are to check their &lt;a href=&quot;string/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;, to build and concatenate them using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;+ and += string operators&lt;/a&gt;, checking for the existence or location of substrings with the &lt;a href=&quot;string/indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt; method, or extracting substrings with the &lt;a href=&quot;string/substring&quot;&gt;&lt;code&gt;substring()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09db5e97e84e290fa78b2659c3c537276efe7e7a" translate="yes" xml:space="preserve">
          <source>Strings can also be created using the &lt;code&gt;String&lt;/code&gt; global object directly:</source>
          <target state="translated">Строки также можно создавать напрямую с помощью глобального объекта &lt;code&gt;String&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8de3625e573bb58e057632f70e009cfa2df7d008" translate="yes" xml:space="preserve">
          <source>Strings can be created as primitives, from string literals, or as objects, using the &lt;a href=&quot;string/string&quot;&gt;&lt;code&gt;String()&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f57a1eef557aa248bfd322c498edf75329882c5" translate="yes" xml:space="preserve">
          <source>Strings must have the same characters in the same order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c3f077620245b380067ff154a98177496a5ed0" translate="yes" xml:space="preserve">
          <source>Strings to concatenate to &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b1bcc883b7e37f8b9fc5f7e3ed86cf4ae6727e" translate="yes" xml:space="preserve">
          <source>Strings to concatenate to this string.</source>
          <target state="translated">Строки для конкатенирования к этой строке.</target>
        </trans-unit>
        <trans-unit id="9b6a618b9be2a5336ba9e51f7600e35c4aa54ddd" translate="yes" xml:space="preserve">
          <source>Structure of the reference</source>
          <target state="translated">Структура ссылки</target>
        </trans-unit>
        <trans-unit id="3ac3d79b111b74defcaf15acf4f19bfa367835e5" translate="yes" xml:space="preserve">
          <source>Structured data</source>
          <target state="translated">Структурированные данные</target>
        </trans-unit>
        <trans-unit id="6ad4048534bd801c68db14281634325cd6b52d60" translate="yes" xml:space="preserve">
          <source>Sub classing with &lt;code&gt;extends&lt;/code&gt;</source>
          <target state="translated">Sub причислять с &lt;code&gt;extends&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d9c8740b7388b9d31d8dd391aa72cb71b2a2a65" translate="yes" xml:space="preserve">
          <source>Subclass of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override &lt;code&gt;[@@search]()&lt;/code&gt; method to modify the behavior.</source>
          <target state="translated">Подкласс &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; может переопределить метод &lt;code&gt;[@@search]()&lt;/code&gt; для изменения поведения.</target>
        </trans-unit>
        <trans-unit id="281e9b23a9a38c8e757c2b4f36897579256b23cf" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override the &lt;code&gt;[@@matchAll]()&lt;/code&gt; method to modify the default behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7038feafbefdbaa4b506a6dcec183a32e710ae12" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override the &lt;code&gt;[@@match]()&lt;/code&gt; method to modify the default behavior.</source>
          <target state="translated">Подклассы &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; могут переопределить метод &lt;code&gt;[@@match]()&lt;/code&gt; чтобы изменить поведение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="a4ae764bf994c89f564ad5d05f8646c92b1832e1" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override the &lt;code&gt;[@@replace]()&lt;/code&gt; method to modify the default behavior.</source>
          <target state="translated">Подклассы &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; могут переопределить метод &lt;code&gt;[@@replace]()&lt;/code&gt; чтобы изменить поведение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e1a266a3dab2f986e2977b9b9e58b994739a2bb3" translate="yes" xml:space="preserve">
          <source>Subclasses of &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; can override the &lt;code&gt;[@@split]()&lt;/code&gt; method to modify the default behavior.</source>
          <target state="translated">Подклассы &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; могут переопределять метод &lt;code&gt;[@@split]()&lt;/code&gt; для изменения поведения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="63e3e53d1913abe6cb61f35f557b53c0480e848b" translate="yes" xml:space="preserve">
          <source>Subtracting two subsequent &lt;code&gt;getTime()&lt;/code&gt; calls on newly generated &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects, give the time span between these two calls. This can be used to calculate the executing time of some operations. See also &lt;a href=&quot;now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt; to prevent instantiating unnecessary &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">Вычитая два последующих &lt;code&gt;getTime()&lt;/code&gt; для вновь созданных объектов &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; , задайте промежуток времени между этими двумя вызовами. Это можно использовать для расчета времени выполнения некоторых операций. См. Также &lt;a href=&quot;now&quot;&gt; &lt;code&gt;Date.now()&lt;/code&gt; &lt;/a&gt; чтобы предотвратить создание ненужных объектов &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5b58ce4dec6fe8562096a10da3109ac06c55815" translate="yes" xml:space="preserve">
          <source>Subtraction</source>
          <target state="translated">Subtraction</target>
        </trans-unit>
        <trans-unit id="cba691e9c4c9f8adb1f442d248e77c85d9d900e8" translate="yes" xml:space="preserve">
          <source>Subtraction (-)</source>
          <target state="translated">Вычитание (-)</target>
        </trans-unit>
        <trans-unit id="5b2a3c26a821bd18567151954c3377e7e0ce351e" translate="yes" xml:space="preserve">
          <source>Subtraction (&lt;code&gt;-&lt;/code&gt;)</source>
          <target state="translated">Вычитание ( &lt;code&gt;-&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c26b71ada72dda0caa098081b6d86bfd9925fa6e" translate="yes" xml:space="preserve">
          <source>Subtraction assignment</source>
          <target state="translated">Назначение вычитания</target>
        </trans-unit>
        <trans-unit id="6e300ab2191369c87d937c1ad2c29063c05f929c" translate="yes" xml:space="preserve">
          <source>Subtraction assignment (&lt;code&gt;x -= y&lt;/code&gt;)</source>
          <target state="translated">Присваивание вычитания ( &lt;code&gt;x -= y&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="5597aa0669b3a946f47cefbf3eb1da630c3e61d5" translate="yes" xml:space="preserve">
          <source>Subtraction operator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="965303657df516e921368caa8ca36403d3db0e9e" translate="yes" xml:space="preserve">
          <source>Subtraction operator.</source>
          <target state="translated">Вычитающий оператор.</target>
        </trans-unit>
        <trans-unit id="633f6b2a2fafcd938b5c30188b99bb625ac0f914" translate="yes" xml:space="preserve">
          <source>Subtraction with non-numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbb3d02cc0897754fb21f2d286dcecb6be15fd6" translate="yes" xml:space="preserve">
          <source>Subtraction with numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc072aa51dd4fe21360f7d013a169856ddf54fa" translate="yes" xml:space="preserve">
          <source>Subtracts a value at the specified index of the array. Returns the old value at that index.</source>
          <target state="translated">Вычитает значение по указанному индексу массива.Возвращает старое значение по этому индексу.</target>
        </trans-unit>
        <trans-unit id="449e7ed6dcc38ae7e90f80f76656c3b58c747a4e" translate="yes" xml:space="preserve">
          <source>Such an implementation would have two main inconveniences. The first one is an O(n) set and search (n being the number of keys in the map) since both operations must iterate through the list of keys to find a matching value. The second inconvenience is a memory leak because the arrays ensure that references to each key and each value are maintained indefinitely. These references prevent the keys from being garbage collected, even if there are no other references to the object. This would also prevent the corresponding values from being garbage collected.</source>
          <target state="translated">Такая реализация будет иметь два основных неудобства.Первое-это набор O(n)и поиск (n-количество ключей на карте),т.к.обе операции должны пройти итерацию по списку ключей,чтобы найти совпадающее значение.Вторым неудобством является утечка памяти,так как массивы гарантируют,что ссылки на каждый ключ и каждое значение сохраняются бесконечно.Эти ссылки не позволяют ключам быть собранными в мусор,даже если нет других ссылок на объект.Это также предотвращает сбор мусора по соответствующим значениям.</target>
        </trans-unit>
        <trans-unit id="76bc63403b9d61d56c6f2544bee784e9685ef1d7" translate="yes" xml:space="preserve">
          <source>Such an implementation would have two main inconveniences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ad08fa3537131af106169029cf1a3706fa5278" translate="yes" xml:space="preserve">
          <source>Such file-specific argument passing may be complementary to that used in the application-wide &lt;code&gt;location.href&lt;/code&gt; (with query strings or hash added after the HTML file path) (or on Node.js, through &lt;code&gt;process.argv&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c978cf528751c9ebe94715375d1924bff7e13ac3" translate="yes" xml:space="preserve">
          <source>Sum all the values of an array</source>
          <target state="translated">Суммировать все значения массива</target>
        </trans-unit>
        <trans-unit id="6eb971f0d4f2bca1ef383102a4c73ec6f1a694e3" translate="yes" xml:space="preserve">
          <source>Sum of values in an object array</source>
          <target state="translated">Сумма значений в массиве объектов</target>
        </trans-unit>
        <trans-unit id="36d61dd0b37ba930afb8625cea24a594be870637" translate="yes" xml:space="preserve">
          <source>Sum up all values within an array</source>
          <target state="translated">Суммировать все значения в массиве</target>
        </trans-unit>
        <trans-unit id="301023cb77019092c30d90817391f5e0e2163b1b" translate="yes" xml:space="preserve">
          <source>Sundanese digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a43ba7f132364810efaef14f022b0ce9c128736b" translate="yes" xml:space="preserve">
          <source>Super can also be used in the &lt;a href=&quot;object_initializer&quot;&gt;object initializer / literal&lt;/a&gt; notation. In this example, two objects define a method. In the second object, &lt;code&gt;super&lt;/code&gt; calls the first object's method. This works with the help of &lt;a href=&quot;../global_objects/object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt; with which we are able to set the prototype of &lt;code&gt;obj2&lt;/code&gt; to &lt;code&gt;obj1&lt;/code&gt;, so that &lt;code&gt;super&lt;/code&gt; is able to find &lt;code&gt;method1&lt;/code&gt; on &lt;code&gt;obj1&lt;/code&gt;.</source>
          <target state="translated">Super также можно использовать в обозначении &lt;a href=&quot;object_initializer&quot;&gt;инициализатора / литерала объекта&lt;/a&gt; . В этом примере два объекта определяют метод. Во втором объекте &lt;code&gt;super&lt;/code&gt; вызывает метод первого объекта. Это работает с помощью &lt;a href=&quot;../global_objects/object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; с помощью которого мы можем установить прототип &lt;code&gt;obj2&lt;/code&gt; на &lt;code&gt;obj1&lt;/code&gt; , так что &lt;code&gt;super&lt;/code&gt; может найти &lt;code&gt;method1&lt;/code&gt; на &lt;code&gt;obj1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76c8526f75a531884e38e58a2a6ef63463d8cf9a" translate="yes" xml:space="preserve">
          <source>Super class calls with &lt;code&gt;super&lt;/code&gt;</source>
          <target state="translated">Звонки &lt;code&gt;super&lt;/code&gt; с суперклассом</target>
        </trans-unit>
        <trans-unit id="c1ef5fc2e2163ac06137a2248ec987f997df4562" translate="yes" xml:space="preserve">
          <source>Super-calling static methods</source>
          <target state="translated">Супер-вызывающие статические методы</target>
        </trans-unit>
        <trans-unit id="1c0fbe719b6d3b998407158e58465d7246484136" translate="yes" xml:space="preserve">
          <source>Superseded by ECMAScript 2015.</source>
          <target state="translated">Заменено на ECMAScript 2015.</target>
        </trans-unit>
        <trans-unit id="7c4434d21843139db918c0ca09d3e5d42de44ede" translate="yes" xml:space="preserve">
          <source>Superseded by ECMAScript 6</source>
          <target state="translated">Заменено на ECMAScript 6.</target>
        </trans-unit>
        <trans-unit id="ce2374d5b8b9472da207d9229c4b4c713c336fc1" translate="yes" xml:space="preserve">
          <source>Superseded by ECMAScript 6.</source>
          <target state="translated">Заменено на ECMAScript 6.</target>
        </trans-unit>
        <trans-unit id="815bb66747596e4eded64f8a3f7415e5cb781b07" translate="yes" xml:space="preserve">
          <source>Superseded by EMCAScript 6.</source>
          <target state="translated">Заменено на EMCAScript 6.</target>
        </trans-unit>
        <trans-unit id="598bacd110df7ae8cb4670b87c0785a483c30aaf" translate="yes" xml:space="preserve">
          <source>Supplementary characters, in UTF-16, require two code units (i.e. a surrogate pair):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f3493603812e477614f488718646f97da2fdbe" translate="yes" xml:space="preserve">
          <source>Supplied value</source>
          <target state="translated">Поставляемая стоимость</target>
        </trans-unit>
        <trans-unit id="08f776a6eefc07728a2efef01e270f1239373237" translate="yes" xml:space="preserve">
          <source>Support for &lt;a href=&quot;https://tools.ietf.org/html/rfc2822&quot;&gt;RFC 2822&lt;/a&gt; format strings is by convention only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f501b6b1515460ba5817278247bc5ffa808d854" translate="yes" xml:space="preserve">
          <source>Support for ISO 8601 formats differs in that date-only strings (e.g. &lt;code&gt;&quot;1970-01-01&quot;&lt;/code&gt;) are treated as UTC, not local.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc7843149f6043c1663ef85e413e5892ed3ca26" translate="yes" xml:space="preserve">
          <source>Support in browsers is limited, but the feature can be used through a build step with systems like &lt;a href=&quot;https://babeljs.io/&quot;&gt;Babel&lt;/a&gt;. See the &lt;a href=&quot;#Browser_compatibility&quot;&gt;compat information&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3161ed4a5d42be2a579e222ef81e60bf208114" translate="yes" xml:space="preserve">
          <source>Support of &lt;a href=&quot;http://tc39.github.io/Function-prototype-toString-revision/&quot;&gt;toString revision&lt;/a&gt;</source>
          <target state="translated">Поддержка &lt;a href=&quot;http://tc39.github.io/Function-prototype-toString-revision/&quot;&gt;ревизии toString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e68372a95de8bc38e9266ca05fd1062fe717374b" translate="yes" xml:space="preserve">
          <source>Support outside of &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;strict mode&lt;/a&gt;.</source>
          <target state="translated">Поддержка вне &lt;a href=&quot;https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;строгого режима&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92a200a199fae0fe5306f1d091ba404281bde4be" translate="yes" xml:space="preserve">
          <source>Support was disabled by default to mitigate &lt;a href=&quot;https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/&quot;&gt;speculative execution side-channel attacks (Mozilla Security Blog)&lt;/a&gt;.</source>
          <target state="translated">Поддержка была отключена по умолчанию, чтобы снизить &lt;a href=&quot;https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/&quot;&gt;вероятность атак по стороннему каналу спекулятивного исполнения (блог Mozilla Security)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ee376194934dfebe84c0202721b55089e3265f2e" translate="yes" xml:space="preserve">
          <source>Support was removed to mitigate &lt;a href=&quot;https://blogs.windows.com/msedgedev/2018/01/03/speculative-execution-mitigations-microsoft-edge-internet-explorer&quot;&gt;speculative execution side-channel attacks (Windows blog)&lt;/a&gt;.</source>
          <target state="translated">Поддержка была удалена для смягчения &lt;a href=&quot;https://blogs.windows.com/msedgedev/2018/01/03/speculative-execution-mitigations-microsoft-edge-internet-explorer&quot;&gt;атак&lt;/a&gt; по стороннему каналу спекулятивного исполнения (блог Windows) .</target>
        </trans-unit>
        <trans-unit id="0cc18e086f2ab3d031fe1141e5ff3675a7bce8be" translate="yes" xml:space="preserve">
          <source>Supporting older browsers is slower, but also possible:</source>
          <target state="translated">Поддержка старых браузеров работает медленнее,но также возможна:</target>
        </trans-unit>
        <trans-unit id="9c7731d0e3a38503cd7db5ecb3187e14bea6855a" translate="yes" xml:space="preserve">
          <source>Suppose the following use of &lt;code&gt;reduce()&lt;/code&gt; occurred:</source>
          <target state="translated">Предположим, что произошло следующее использование &lt;code&gt;reduce()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0b9f0a0d3dd64d79229b32c8bdbde4fc54b9946a" translate="yes" xml:space="preserve">
          <source>Suppose there are 4 flags:</source>
          <target state="translated">Предположим,там 4 флага:</target>
        </trans-unit>
        <trans-unit id="23b503556d95ce63df4bb4af31c420b46aebfc72" translate="yes" xml:space="preserve">
          <source>Suppose you define an object called &lt;code&gt;Person&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5289822e3d3d0e97b8dfe3a95bcc8379e3074bef" translate="yes" xml:space="preserve">
          <source>Suppose you define an object called &lt;code&gt;person&lt;/code&gt; as follows:</source>
          <target state="translated">Предположим, вы определяете объект с именем &lt;code&gt;person&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="189ac5cd93a2ef19c980c4e9fa16deea939f1c7e" translate="yes" xml:space="preserve">
          <source>Suppose you have an object type &lt;code&gt;MyNumberType&lt;/code&gt; and you want to create a &lt;code&gt;valueOf&lt;/code&gt; method for it. The following code assigns a user-defined function to the object's &lt;code&gt;valueOf&lt;/code&gt; method:</source>
          <target state="translated">Предположим, у вас есть объект типа &lt;code&gt;MyNumberType&lt;/code&gt; и вы хотите создать для него метод &lt;code&gt;valueOf&lt;/code&gt; . Следующий код назначает пользовательскую функцию методу &lt;code&gt;valueOf&lt;/code&gt; объекта :</target>
        </trans-unit>
        <trans-unit id="0c569beacc309eefcdd5388111ac0349d1ed5f8c" translate="yes" xml:space="preserve">
          <source>Suppose you want to create an object type for cars. You want this type of object to be called &lt;code&gt;Car&lt;/code&gt;, and you want it to have properties for make, model, and year. To do this, you would write the following function:</source>
          <target state="translated">Предположим, вы хотите создать объектный тип для автомобилей. Вы хотите, чтобы этот тип объекта назывался &lt;code&gt;Car&lt;/code&gt; , и вы хотите, чтобы у него были свойства для марки, модели и года выпуска. Для этого вы должны написать следующую функцию:</target>
        </trans-unit>
        <trans-unit id="9dd842a9bddff80f94f31f700fb570c0cc8fb9ce" translate="yes" xml:space="preserve">
          <source>Suppose you want to create an object type for cars. You want this type of object to be called &lt;code&gt;car&lt;/code&gt;, and you want it to have properties for make, model, and year. To do this, you would write the following function:</source>
          <target state="translated">Предположим, вы хотите создать объектный тип для автомобилей. Вы хотите, чтобы этот тип объекта назывался &lt;code&gt;car&lt;/code&gt; , и вы хотите, чтобы у него были свойства для марки, модели и года выпуска. Для этого вы должны написать следующую функцию:</target>
        </trans-unit>
        <trans-unit id="6d5f68af6f583b153f2bb5142c73883e84afd31d" translate="yes" xml:space="preserve">
          <source>Swapping variables</source>
          <target state="translated">Переменные замены</target>
        </trans-unit>
        <trans-unit id="4f782012d2b9a34833e1489bf392a78976797952" translate="yes" xml:space="preserve">
          <source>Switch statement multiple cases in JavaScript (Stack Overflow)</source>
          <target state="translated">Переключение оператора множественных случаев в JavaScript (Переполнение стека)</target>
        </trans-unit>
        <trans-unit id="936be3f2f4d974ef44497c748e28dc41b0e7a629" translate="yes" xml:space="preserve">
          <source>Switching words in a string</source>
          <target state="translated">Переключение слов в строке</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="cec4fe1087f24e0c82e98b7b46d3253cb1c20288" translate="yes" xml:space="preserve">
          <source>Symbol (new in ECMAScript 2015)</source>
          <target state="translated">Символ (новый в ECMAScript 2015)</target>
        </trans-unit>
        <trans-unit id="4a89e34d96d87388c1f3e51eaf3b7647014e0349" translate="yes" xml:space="preserve">
          <source>Symbol type conversions</source>
          <target state="translated">Преобразование символьного типа</target>
        </trans-unit>
        <trans-unit id="d476abcfff0f7f3b0db099a2f7ff0ad5f1f1cf2f" translate="yes" xml:space="preserve">
          <source>Symbol wrapper objects as property keys</source>
          <target state="translated">Объекты,обернутые символами,как ключи свойств</target>
        </trans-unit>
        <trans-unit id="60197eb7f1d81ff9052558790bf9d2730879c703" translate="yes" xml:space="preserve">
          <source>Symbol, required. The symbol to find a key for.</source>
          <target state="translated">Символ,требуется.Символ для поиска ключа.</target>
        </trans-unit>
        <trans-unit id="02bab0b2daa885fc3e659c5f6f860a814e972ee0" translate="yes" xml:space="preserve">
          <source>Symbol-keyed properties will be completely ignored when using &lt;code&gt;JSON.stringify()&lt;/code&gt;:</source>
          <target state="translated">Свойства с &lt;code&gt;JSON.stringify()&lt;/code&gt; будут полностью игнорироваться при использовании JSON.stringify () :</target>
        </trans-unit>
        <trans-unit id="32bc6a44c4151495b5ad96e8e0efbad416e0c64c" translate="yes" xml:space="preserve">
          <source>Symbol.asyncIterator</source>
          <target state="translated">Symbol.asyncIterator</target>
        </trans-unit>
        <trans-unit id="a1828270fceade7a3c9b163f98549f9c28b0bbb1" translate="yes" xml:space="preserve">
          <source>Symbol.for</source>
          <target state="translated">Symbol.for</target>
        </trans-unit>
        <trans-unit id="ca59308d7d871a123ce53ebc42d92e6e1166bd0b" translate="yes" xml:space="preserve">
          <source>Symbol.hasInstance</source>
          <target state="translated">Symbol.hasInstance</target>
        </trans-unit>
        <trans-unit id="a0e6a702e72e88545f9b1dbcb3ed43e20ea5e05c" translate="yes" xml:space="preserve">
          <source>Symbol.isConcatSpreadable</source>
          <target state="translated">Symbol.isConcatSpreadable</target>
        </trans-unit>
        <trans-unit id="5b13d44bd1bf576823808d0232a619e934824ce6" translate="yes" xml:space="preserve">
          <source>Symbol.iterator</source>
          <target state="translated">Symbol.iterator</target>
        </trans-unit>
        <trans-unit id="60628c9c70d09b208f09801cf9f5d7a218976f0a" translate="yes" xml:space="preserve">
          <source>Symbol.keyFor</source>
          <target state="translated">Symbol.keyFor</target>
        </trans-unit>
        <trans-unit id="9b51653793b113fdbdad3cbf797286e625e97315" translate="yes" xml:space="preserve">
          <source>Symbol.match</source>
          <target state="translated">Symbol.match</target>
        </trans-unit>
        <trans-unit id="a95169025296a0e026bbe0838a28c547ab6c464b" translate="yes" xml:space="preserve">
          <source>Symbol.matchAll</source>
          <target state="translated">Symbol.matchAll</target>
        </trans-unit>
        <trans-unit id="743053a54f031f1ce4b930b8cb959b325a771557" translate="yes" xml:space="preserve">
          <source>Symbol.prototype</source>
          <target state="translated">Symbol.prototype</target>
        </trans-unit>
        <trans-unit id="bb2a80bf5c69e5d498e7b212a0439c852161f5ea" translate="yes" xml:space="preserve">
          <source>Symbol.replace</source>
          <target state="translated">Symbol.replace</target>
        </trans-unit>
        <trans-unit id="70bded1f8d768dbf5bcbe7ed892d304c0bc85a0b" translate="yes" xml:space="preserve">
          <source>Symbol.search</source>
          <target state="translated">Symbol.search</target>
        </trans-unit>
        <trans-unit id="d58b2e811981d50aa0701192e445949cac86b4a5" translate="yes" xml:space="preserve">
          <source>Symbol.species</source>
          <target state="translated">Symbol.species</target>
        </trans-unit>
        <trans-unit id="e01cfc6e029bf96f06f5ecd2420b922327cb41e9" translate="yes" xml:space="preserve">
          <source>Symbol.split</source>
          <target state="translated">Symbol.split</target>
        </trans-unit>
        <trans-unit id="948e82ec513b287bb51f43311569c08e4724558c" translate="yes" xml:space="preserve">
          <source>Symbol.symbol</source>
          <target state="translated">Symbol.symbol</target>
        </trans-unit>
        <trans-unit id="305ea436a5f188679846296c349cb625793b7770" translate="yes" xml:space="preserve">
          <source>Symbol.toPrimitive</source>
          <target state="translated">Symbol.toPrimitive</target>
        </trans-unit>
        <trans-unit id="2d71509bbd5a0bcef24218944132859ac81dfc23" translate="yes" xml:space="preserve">
          <source>Symbol.toStringTag</source>
          <target state="translated">Symbol.toStringTag</target>
        </trans-unit>
        <trans-unit id="7dc53e253690850b94aca1cf13622c17854bc05b" translate="yes" xml:space="preserve">
          <source>Symbol.unscopables</source>
          <target state="translated">Symbol.unscopables</target>
        </trans-unit>
        <trans-unit id="b6cd004c3b439ebd46ad1994b6deb42d47e8d5cd" translate="yes" xml:space="preserve">
          <source>Symbols and &lt;code&gt;JSON.stringify()&lt;/code&gt;</source>
          <target state="translated">Символы и &lt;code&gt;JSON.stringify()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e7193656ba09da890ccbe97256fbf2c22641a67" translate="yes" xml:space="preserve">
          <source>Symbols and &lt;code&gt;for...in&lt;/code&gt; iteration</source>
          <target state="translated">Символы и &lt;code&gt;for...in&lt;/code&gt; итерации</target>
        </trans-unit>
        <trans-unit id="18e9da7b60fc5cd19e972b85aca51420bb1a3789" translate="yes" xml:space="preserve">
          <source>Symbols and JSON.stringify()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f7c0b48b328c9c19208e4aef4ff1733e1fe5ee" translate="yes" xml:space="preserve">
          <source>Symbols and for...in iteration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0281ef833d813fa8e09d7b12ae374197423da41d" translate="yes" xml:space="preserve">
          <source>Symbols are not enumerable in &lt;a href=&quot;../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; iterations. In addition, &lt;a href=&quot;object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt; will not return symbol object properties, however, you can use &lt;a href=&quot;object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt;&lt;/a&gt; to get these.</source>
          <target state="translated">Символы не перечисляются в &lt;a href=&quot;../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; итераций. Кроме того, &lt;a href=&quot;object/getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; не возвращает свойства объекта символа, однако для их получения можно использовать &lt;a href=&quot;object/getownpropertysymbols&quot;&gt; &lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="238e66083526ca8cdc125dbb4d169ef781a46440" translate="yes" xml:space="preserve">
          <source>Symbols as function names</source>
          <target state="translated">Символы как названия функций</target>
        </trans-unit>
        <trans-unit id="6b1e02e0367f5042bb1e7ffc3476607ad7f71926" translate="yes" xml:space="preserve">
          <source>Synchronously compiling a WebAssembly module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bcafabb2b9c33db3e850224be9f4dfce6f365b6" translate="yes" xml:space="preserve">
          <source>Synchronously instantiating a WebAssembly module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="53fa28ed61df46b3d5c074b23b16e52dba7a7dab" translate="yes" xml:space="preserve">
          <source>Syntax Errors are also generated in the following code examples which use &lt;code&gt;break&lt;/code&gt; statements within functions that are nested within a loop or labeled block that the &lt;code&gt;break&lt;/code&gt; statements are intended to break out of.</source>
          <target state="translated">Ошибки синтаксиса также генерируются в следующих примерах кода , которые используют &lt;code&gt;break&lt;/code&gt; утверждение в пределах функций, которые вложены в цикле или меченые блок , что &lt;code&gt;break&lt;/code&gt; заявление предназначено вырваться из.</target>
        </trans-unit>
        <trans-unit id="81f751a967a8268f5033e6bd3df5bfce33c6dec5" translate="yes" xml:space="preserve">
          <source>Syntax errors</source>
          <target state="translated">Ошибки синтаксиса</target>
        </trans-unit>
        <trans-unit id="0abe0cb4cc0e3ae228af7b60f3df4cb25dce484d" translate="yes" xml:space="preserve">
          <source>Syntax with the &quot;@&quot; sign is deprecated.</source>
          <target state="translated">Синтаксис со знаком &quot;@&quot; устарел.</target>
        </trans-unit>
        <trans-unit id="de4af2ff6c0bd31526ce7f5f8ca08783d0cc5ed7" translate="yes" xml:space="preserve">
          <source>SyntaxError</source>
          <target state="translated">SyntaxError</target>
        </trans-unit>
        <trans-unit id="819138bd6c1f55cbdbd4708c5863651a6515a0d7" translate="yes" xml:space="preserve">
          <source>SyntaxError.prototype</source>
          <target state="translated">SyntaxError.prototype</target>
        </trans-unit>
        <trans-unit id="c9fde2b72ecf8adba8491fcc032a834bee46a5fa" translate="yes" xml:space="preserve">
          <source>SyntaxError.syntaxError</source>
          <target state="translated">SyntaxError.syntaxError</target>
        </trans-unit>
        <trans-unit id="0d5bb8fa74e6cc0fe534ce47ff4686ffc3dea975" translate="yes" xml:space="preserve">
          <source>SyntaxError: &quot;0&quot;-prefixed octal literals and octal escape seq. are deprecated</source>
          <target state="translated">Синтаксическая ошибка:&quot;0&quot;-префикс восьмеричных букв и восьмеричного спасательного seq.устарели.</target>
        </trans-unit>
        <trans-unit id="2a4063f470d704992596bfcc40044ccd127e7429" translate="yes" xml:space="preserve">
          <source>SyntaxError: &quot;use strict&quot; not allowed in function with non-simple parameters</source>
          <target state="translated">Синтаксическая ошибка:&quot;use strict&quot; not allowed in function with non-simple parameters</target>
        </trans-unit>
        <trans-unit id="deebc0e128ab3eb5d7706e9e10ee1ec2c9545a65" translate="yes" xml:space="preserve">
          <source>SyntaxError: &quot;x&quot; is a reserved identifier</source>
          <target state="translated">Синтаксическая ошибка:&quot;x&quot;-зарезервированный идентификатор</target>
        </trans-unit>
        <trans-unit id="e32659a59fcac997e1746fb3596550afe3bb6e0a" translate="yes" xml:space="preserve">
          <source>SyntaxError: JSON.parse: bad parsing</source>
          <target state="translated">Синтаксическая ошибка:JSON.parse:плохой парсинг</target>
        </trans-unit>
        <trans-unit id="ded7918a66b1da39284180df88968db6f2810f75" translate="yes" xml:space="preserve">
          <source>SyntaxError: Malformed formal parameter</source>
          <target state="translated">Синтаксическая ошибка:Некорректный формальный параметр</target>
        </trans-unit>
        <trans-unit id="68df72c25a54bedf25d9248257fc3b80adf383f6" translate="yes" xml:space="preserve">
          <source>SyntaxError: Unexpected token</source>
          <target state="translated">Синтаксическая ошибка:Неожиданный знак</target>
        </trans-unit>
        <trans-unit id="1d7032794de9284bcde354d7b01260dc14c56145" translate="yes" xml:space="preserve">
          <source>SyntaxError: Using //@ to indicate sourceURL pragmas is deprecated. Use //# instead</source>
          <target state="translated">Синтаксическая ошибка:Использование //@ для указания,что исходные URL-прагмы устарели.Используйте //#вместо этого</target>
        </trans-unit>
        <trans-unit id="14c155c8e80005f6ef471ec77ab42dbb10c32651" translate="yes" xml:space="preserve">
          <source>SyntaxError: a declaration in the head of a for-of loop can't have an initializer</source>
          <target state="translated">SyntaxError:объявление в начале цикла for-of loop не может иметь инициализатора.</target>
        </trans-unit>
        <trans-unit id="160525eab4a7efe9da048799c163249169bdcc9d" translate="yes" xml:space="preserve">
          <source>SyntaxError: applying the 'delete' operator to an unqualified name is deprecated</source>
          <target state="translated">SyntaxError:применение оператора 'delete' к неквалифицированному имени устарело.</target>
        </trans-unit>
        <trans-unit id="7f4bdb2e0105137809b923a0969c87236fd5ed96" translate="yes" xml:space="preserve">
          <source>SyntaxError: for-in loop head declarations may not have initializers</source>
          <target state="translated">Синтаксическая ошибка:при декларировании головы для входа в шлейф могут отсутствовать инициализаторы</target>
        </trans-unit>
        <trans-unit id="5731772688ae301c0c079ee6bea0e7551d973c17" translate="yes" xml:space="preserve">
          <source>SyntaxError: function statement requires a name</source>
          <target state="translated">SyntaxError:оператор функции требует имени</target>
        </trans-unit>
        <trans-unit id="3ce6392b83891cad249706c2b22a257932aab4db" translate="yes" xml:space="preserve">
          <source>SyntaxError: identifier starts immediately after numeric literal</source>
          <target state="translated">SyntaxError:идентификатор начинается сразу после цифрового буквального значения</target>
        </trans-unit>
        <trans-unit id="81720c51cc8742b2d44b704b084bad0d334c5b7f" translate="yes" xml:space="preserve">
          <source>SyntaxError: illegal character</source>
          <target state="translated">СинтаксисОшибка:нелегальный характер</target>
        </trans-unit>
        <trans-unit id="2d61d337e421f08749a45c2a33658817d3f82f1d" translate="yes" xml:space="preserve">
          <source>SyntaxError: invalid regular expression flag &quot;x&quot;</source>
          <target state="translated">SyntaxError:недействительный флаг регулярного выражения &quot;x&quot;.</target>
        </trans-unit>
        <trans-unit id="b53294a794f2a603055a8a74cedd0faf9f35c81a" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing ) after argument list</source>
          <target state="translated">SyntaxError:missing)после списка аргументов</target>
        </trans-unit>
        <trans-unit id="6db21ffdf640bf5d48f571ed5bec87efc0df2354" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing ) after condition</source>
          <target state="translated">СинтаксисОшибка:пропущено)после состояния</target>
        </trans-unit>
        <trans-unit id="5bc65f95837cd360f438e00526e74bc40a7adc8c" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing : after property id</source>
          <target state="translated">СинтаксисОшибка:отсутствует:после идентификатора собственности</target>
        </trans-unit>
        <trans-unit id="9d2ef4a2ea006ff54415297aa3e67a25e0ad38b0" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing ; before statement</source>
          <target state="translated">СинтаксисОшибка:отсутствует;до заявления</target>
        </trans-unit>
        <trans-unit id="ffc4b2d4562a61fe9e74146d2c3ae475c6924695" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing = in const declaration</source>
          <target state="translated">SyntaxError:пропущено=в const-декларации</target>
        </trans-unit>
        <trans-unit id="b28450b73498a4e86fe44c06c6612ffeb40f3484" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing ] after element list</source>
          <target state="translated">СинтаксисОшибка:пропущено]после списка элементов</target>
        </trans-unit>
        <trans-unit id="14ff454e8f4e0cb074afd7d543435f41d3f8c013" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing formal parameter</source>
          <target state="translated">SyntaxError:пропущенный формальный параметр</target>
        </trans-unit>
        <trans-unit id="c4c2bc6cb7d86fd68b92e773315e930c6589e1f0" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing name after . operator</source>
          <target state="translated">SyntaxError:отсутствующее имя после оператора .</target>
        </trans-unit>
        <trans-unit id="c9797de2c552ba17ee5d2e8bc712fad6c6985d52" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing variable name</source>
          <target state="translated">SyntaxError:отсутствующее имя переменной</target>
        </trans-unit>
        <trans-unit id="177c7573be4c52eab98d7192fbc828eeef83d627" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing } after function body</source>
          <target state="translated">СинтаксисОшибка:отсутствует}после функционального тела</target>
        </trans-unit>
        <trans-unit id="0b2ecd31460d012b2461af688c5db98087c6892e" translate="yes" xml:space="preserve">
          <source>SyntaxError: missing } after property list</source>
          <target state="translated">СинтаксисОшибка:отсутствует}после списка свойств</target>
        </trans-unit>
        <trans-unit id="86edd28cf076ef80a22cb1a6bff3eb996b4b78d2" translate="yes" xml:space="preserve">
          <source>SyntaxError: redeclaration of formal parameter &quot;x&quot;</source>
          <target state="translated">SyntaxError:повторное объявление формального параметра &quot;x&quot;.</target>
        </trans-unit>
        <trans-unit id="d6b34f4fecec0054a3d697c4a28297978425eb7f" translate="yes" xml:space="preserve">
          <source>SyntaxError: return not in function</source>
          <target state="translated">SyntaxError:возврат не работает</target>
        </trans-unit>
        <trans-unit id="aa1713c2ed8d5a0b39d86977a23e697bd3cdcac6" translate="yes" xml:space="preserve">
          <source>SyntaxError: test for equality (==) mistyped as assignment (=)?</source>
          <target state="translated">SyntaxError:тест на равенство (==)опечатан как задание (=)?</target>
        </trans-unit>
        <trans-unit id="6876be806f9754e180177b394623a181801fdf50" translate="yes" xml:space="preserve">
          <source>SyntaxError: unterminated string literal</source>
          <target state="translated">SyntaxError:непрерывистый строковый литерал</target>
        </trans-unit>
        <trans-unit id="2d31560b0e1031ad8abd88ef125b46be913cf870" translate="yes" xml:space="preserve">
          <source>Syntaxes expecting iterables</source>
          <target state="translated">Синтаксис ожидающих итераций</target>
        </trans-unit>
        <trans-unit id="09a09c2f0be38df304bfebde8c06ca64424aac49" translate="yes" xml:space="preserve">
          <source>TC39 is working on &lt;a href=&quot;https://tc39.es/proposal-temporal/docs/index.html&quot;&gt;Temporal&lt;/a&gt;, a new Date/Time API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6fec30110e2995b3af7f2dd5dfe413ed9d35c08" translate="yes" xml:space="preserve">
          <source>TC39 proposals</source>
          <target state="translated">предложения ТК39</target>
        </trans-unit>
        <trans-unit id="abf1e43ebb11b8d66625967a91332ee1575fac90" translate="yes" xml:space="preserve">
          <source>TODO describe usecases.</source>
          <target state="translated">ТОДО описывает наши дела.</target>
        </trans-unit>
        <trans-unit id="f70eb0844b6769f2583cc4b28b7353ca31552310" translate="yes" xml:space="preserve">
          <source>TODO please write about why we need it, usecases.</source>
          <target state="translated">TODO,пожалуйста,напишите о том,зачем нам это нужно,утилиты.</target>
        </trans-unit>
        <trans-unit id="0424f6e7026fa4bc2c4a7043083417315113c79b" translate="yes" xml:space="preserve">
          <source>Table</source>
          <target state="translated">Table</target>
        </trans-unit>
        <trans-unit id="034f2bd802a69a55a42c1da734f81d2016f37b71" translate="yes" xml:space="preserve">
          <source>Tag functions don't even need to return a string!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec346701b47d76e041d921707b3430cf19eb00a" translate="yes" xml:space="preserve">
          <source>Tag functions don't need to return a string, as shown in the following example.</source>
          <target state="translated">Функции тегов не нуждаются в возврате строки,как показано в следующем примере.</target>
        </trans-unit>
        <trans-unit id="ff38dde08090906d09ebc8ef1835b10e5af365cc" translate="yes" xml:space="preserve">
          <source>Tagged templates</source>
          <target state="translated">Помеченные шаблоны</target>
        </trans-unit>
        <trans-unit id="910443e32fb15390f6c09dd0c782c83697df0790" translate="yes" xml:space="preserve">
          <source>Tagged templates and escape sequences</source>
          <target state="translated">Тегированные шаблоны и эвакуационные последовательности</target>
        </trans-unit>
        <trans-unit id="9a8f69f68db773bef362c95f6c673aaf766e6743" translate="yes" xml:space="preserve">
          <source>Tagged templates should allow the embedding of languages (for example &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSLs&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/LaTeX&quot;&gt;LaTeX&lt;/a&gt;), where other escapes sequences are common. The ECMAScript proposal &lt;a href=&quot;https://tc39.github.io/proposal-template-literal-revision/&quot;&gt;Template Literal Revision&lt;/a&gt; (Stage 4, to be integrated in the ECMAScript 2018 standard) removes the syntax restriction of ECMAScript escape sequences from tagged templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21c1a0e230539cba2640d447267d1dadfe4c58ff" translate="yes" xml:space="preserve">
          <source>Tagged templates should allow the embedding of languages (for example &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSLs&lt;/a&gt;, or &lt;a href=&quot;https://en.wikipedia.org/wiki/LaTeX&quot;&gt;LaTeX&lt;/a&gt;), where other escapes sequences are common. The ECMAScript proposal &lt;a href=&quot;https://tc39.github.io/proposal-template-literal-revision/&quot;&gt;Template Literal Revision&lt;/a&gt; (stage 4, to be integrated in the ECMAScript 2018 standard) removes the syntax restriction of ECMAScript escape sequences from tagged templates.</source>
          <target state="translated">Шаблоны с тегами должны позволять встраивание языков (например, &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSL&lt;/a&gt; или &lt;a href=&quot;https://en.wikipedia.org/wiki/LaTeX&quot;&gt;LaTeX&lt;/a&gt; ), где распространены другие escape-последовательности. Предложение ECMAScript &lt;a href=&quot;https://tc39.github.io/proposal-template-literal-revision/&quot;&gt;Template Literal Revision&lt;/a&gt; (этап 4, которое будет интегрировано в стандарт ECMAScript 2018) устраняет синтаксические ограничения escape-последовательностей ECMAScript из тегированных шаблонов.</target>
        </trans-unit>
        <trans-unit id="a2b4a6266fb672720050c7e0c9803c501546b9bd" translate="yes" xml:space="preserve">
          <source>Tags allow you to parse template literals with a function. The first argument of a tag function contains an array of string values. The remaining arguments are related to the expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03737882b6313331d3f9291385601171af63daaf" translate="yes" xml:space="preserve">
          <source>Tai Tham Hora (secular) digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df1aa7c3109784b5854db95293c23ca0b4059dc" translate="yes" xml:space="preserve">
          <source>Tai Tham Tham (ecclesiastical) digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d4759e3f59f2fec2baf689098e4ec4db76d659" translate="yes" xml:space="preserve">
          <source>Take &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice()&lt;/code&gt;&lt;/a&gt;, for example, which you want to use for converting an array-like object to a real array. You could create a shortcut like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b26350adb865b55c5a3829db1170edd35a5c4e" translate="yes" xml:space="preserve">
          <source>Take &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice&lt;/code&gt;&lt;/a&gt;, for example, which you want to use for converting an array-like object to a real array. You could create a shortcut like this:</source>
          <target state="translated">Возьмем , к примеру, &lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice&lt;/code&gt; &lt;/a&gt; , который вы хотите использовать для преобразования объекта, подобного массиву, в реальный массив. Вы можете создать такой ярлык:</target>
        </trans-unit>
        <trans-unit id="272c6f052c57f2fe771efaad43defa1e384d0b57" translate="yes" xml:space="preserve">
          <source>Take a look at this code snippet</source>
          <target state="translated">Взгляните на этот фрагмент кода.</target>
        </trans-unit>
        <trans-unit id="bc0d5a3bc54aab5de19c35f0c8d5ddd135fb0ea4" translate="yes" xml:space="preserve">
          <source>Take a look at this example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217e81f9690888e6704cdf3be5ce0510a349bbb5" translate="yes" xml:space="preserve">
          <source>Take the following case: the object has &lt;strong&gt;create &lt;/strong&gt;method to create itself.</source>
          <target state="translated">Рассмотрим следующий случай: объект имеет &lt;strong&gt;создать&lt;/strong&gt; метод , чтобы создать себя.</target>
        </trans-unit>
        <trans-unit id="287d430a4bb4cdbf8989c4fc67ae6efb5a58ef0a" translate="yes" xml:space="preserve">
          <source>Take the following case: the object has the &lt;code&gt;create()&lt;/code&gt; method to create itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aefa142c12638b92edb290a02d86ee275b01d14" translate="yes" xml:space="preserve">
          <source>Takes an iterable of Promise objects and, as soon as one of the promises in the iterable fulfills, returns a single promise that resolves with the value from that promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7c4a7b9812b94841140c5ce4584c7f2c571b24" translate="yes" xml:space="preserve">
          <source>Takri digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b11e94629d0a1f5da2737425cf4afd40a4e85d6" translate="yes" xml:space="preserve">
          <source>Tamil numerals &amp;mdash; algorithmic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af04279d0eb287c224876e9c1d1fe7ba9124460" translate="yes" xml:space="preserve">
          <source>Target start index position where to copy the elements to.</source>
          <target state="translated">Целевое положение стартового индекса,куда копировать элементы.</target>
        </trans-unit>
        <trans-unit id="c82c941fb35c6ee1fbcf28082842a1c1515fd318" translate="yes" xml:space="preserve">
          <source>Task.js</source>
          <target state="translated">Task.js</target>
        </trans-unit>
        <trans-unit id="39f0d970b5a2a68c6586ac7b5f0bd96fce2543bc" translate="yes" xml:space="preserve">
          <source>Telugu digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2314dcfb40e631f6055500117694edbfa0aa560b" translate="yes" xml:space="preserve">
          <source>Template literals</source>
          <target state="translated">Буквы шаблона</target>
        </trans-unit>
        <trans-unit id="8c4013ae3336ca589db6d332a34cd0d446140e10" translate="yes" xml:space="preserve">
          <source>Template literals are enclosed by the back-tick (` `) (&lt;a href=&quot;https://en.wikipedia.org/wiki/Grave_accent&quot;&gt;grave accent&lt;/a&gt;) character instead of double or single quotes. Template literals can contain placeholders. These are indicated by the dollar sign and curly braces (&lt;code&gt;${expression}&lt;/code&gt;). The expressions in the placeholders and the text between them get passed to a function. The default function just concatenates the parts into a single string. If there is an expression preceding the template literal (&lt;code&gt;tag&lt;/code&gt; here), this is called a &quot;tagged template&quot;. In that case, the tag expression (usually a function) gets called with the processed template literal, which you can then manipulate before outputting. To escape a back-tick in a template literal, put a backslash &lt;strong&gt;\ &lt;/strong&gt;before the back-tick.</source>
          <target state="translated">Литералы шаблона заключаются в символ обратной галочки (``) ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Grave_accent&quot;&gt;серьезный акцент&lt;/a&gt; ) вместо двойных или одинарных кавычек. Литералы шаблона могут содержать заполнители. Они обозначаются знаком доллара и фигурными скобками ( &lt;code&gt;${expression}&lt;/code&gt; ). Выражения в заполнителях и текст между ними передаются функции. Функция по умолчанию просто объединяет части в одну строку. Если есть выражение, предшествующее литералу шаблона ( здесь &lt;code&gt;tag&lt;/code&gt; ), это называется &amp;laquo;шаблон с тегами&amp;raquo;. В этом случае выражение тега (обычно функция) вызывается с обработанным литералом шаблона, которым вы затем можете манипулировать перед выводом. Чтобы избежать обратной галочки в литерале шаблона, поставьте обратную косую черту &lt;strong&gt;\&lt;/strong&gt; перед обратной галочкой.</target>
        </trans-unit>
        <trans-unit id="ef1c65ae76bed41b328d118748eef6ece9414285" translate="yes" xml:space="preserve">
          <source>Template literals are enclosed by the backtick (` `) (&lt;a href=&quot;https://en.wikipedia.org/wiki/Grave_accent&quot;&gt;grave accent&lt;/a&gt;) character instead of double or single quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959c34388ab1571a49ada6cfc78d39109817be12" translate="yes" xml:space="preserve">
          <source>Template literals are string literals allowing embedded expressions. You can use multi-line strings and string interpolation features with them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d70fc87d39a4d3be6b9e6aaf348258da24b5b22" translate="yes" xml:space="preserve">
          <source>Template literals are string literals allowing embedded expressions. You can use multi-line strings and string interpolation features with them. They were called &quot;template strings&quot; in prior editions of the ES2015 specification.</source>
          <target state="translated">Шаблонные литералы-это строковые литералы,допускающие встроенные выражения.С их помощью можно использовать многострочные строки и возможности строковой интерполяции.В предыдущих редакциях спецификации ES2015 их называли &quot;строками шаблонов&quot;.</target>
        </trans-unit>
        <trans-unit id="3f34560f0bb1de3174224a522e60af76bc88d67a" translate="yes" xml:space="preserve">
          <source>Template literals can contain placeholders. These are indicated by the dollar sign and curly braces (&lt;code&gt;${&lt;var&gt;expression&lt;/var&gt;}&lt;/code&gt;). The expressions in the placeholders and the text between the backticks (` `) get passed to a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc68610743d7021a571f80b8ceb084cbd65c3e6a" translate="yes" xml:space="preserve">
          <source>Template strings</source>
          <target state="translated">Строки шаблона</target>
        </trans-unit>
        <trans-unit id="e8481a250edaa4d4651034e9f8061b620b8d8fe3" translate="yes" xml:space="preserve">
          <source>Template-like strings in ES3 compatible syntax</source>
          <target state="translated">Шаблонные строки в синтаксисе,совместимом с ES3.</target>
        </trans-unit>
        <trans-unit id="485a2724f8683ec3d8bc8d768a81f2979632118a" translate="yes" xml:space="preserve">
          <source>Temporal Dead Zone and errors with let</source>
          <target state="translated">Временно мертвая зона и ошибки с пустыми руками</target>
        </trans-unit>
        <trans-unit id="d2a5704984a4447527354be4a00cc8b22ced40f5" translate="yes" xml:space="preserve">
          <source>Temporal dead zone</source>
          <target state="translated">Временно мертвая зона</target>
        </trans-unit>
        <trans-unit id="19995c4c8fe9f0ffece0d4481db3ac7c44261de5" translate="yes" xml:space="preserve">
          <source>Terminates execution of the statements in the current iteration of the current or labeled loop, and continues execution of the loop with the next iteration.</source>
          <target state="translated">Прекращает выполнение операторов в текущей итерации текущего или помеченного цикла и продолжает выполнение цикла со следующей итерацией.</target>
        </trans-unit>
        <trans-unit id="2168c97b6b0b1ddfe719b64822fb722ce323f7d1" translate="yes" xml:space="preserve">
          <source>Terminates the current loop, switch, or label statement and transfers program control to the statement following the terminated statement.</source>
          <target state="translated">Прекращает текущий контур,переключатель или наклейку оператора и передает управление программой в оператор после завершения оператора.</target>
        </trans-unit>
        <trans-unit id="21d278837034557e7a9b46210d42d6e7b8075142" translate="yes" xml:space="preserve">
          <source>Terminology</source>
          <target state="translated">Terminology</target>
        </trans-unit>
        <trans-unit id="f6bcbb141d13915f4b90b385b611a92123055e40" translate="yes" xml:space="preserve">
          <source>Testing against &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">Тестирование против &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2477d5dfb36136fab54b891161b1657015ccd34f" translate="yes" xml:space="preserve">
          <source>Testing against NaN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affd95989370757d8f95de82cf7643a17edca0a0" translate="yes" xml:space="preserve">
          <source>Testing array elements using arrow functions</source>
          <target state="translated">Тестирование элементов массива с помощью функций стрелок</target>
        </trans-unit>
        <trans-unit id="88decc01164499020a1587f12ca5f36ac1a7a914" translate="yes" xml:space="preserve">
          <source>Testing equality</source>
          <target state="translated">Равенство в тестировании</target>
        </trans-unit>
        <trans-unit id="5e3582a8299938efb54aec6454921cfa9e5c40dc" translate="yes" xml:space="preserve">
          <source>Testing every object of an array for a value</source>
          <target state="translated">Тестирование каждого объекта массива на значение</target>
        </trans-unit>
        <trans-unit id="488846ae8128c284e84c139c87434b4ca85be77a" translate="yes" xml:space="preserve">
          <source>Testing just a few of the many most basic built-in functions shows the magnitude of the problem more clearly:</source>
          <target state="translated">Тестирование всего лишь нескольких из многих основных встроенных функций более наглядно показывает масштаб проблемы:</target>
        </trans-unit>
        <trans-unit id="d27b966b2cc7e9f8b0c52b42e3e205814dbb223d" translate="yes" xml:space="preserve">
          <source>Testing size of all array elements</source>
          <target state="translated">Тестирование размера всех элементов массива</target>
        </trans-unit>
        <trans-unit id="96116d9c88ea14d57acd449c31404396df86f7e8" translate="yes" xml:space="preserve">
          <source>Testing size of all typed array elements</source>
          <target state="translated">Тестирование размера всех типизированных элементов массива</target>
        </trans-unit>
        <trans-unit id="5aff6e42b1a087bb22382d3b16aaab2f52001b96" translate="yes" xml:space="preserve">
          <source>Testing typed array elements using arrow functions</source>
          <target state="translated">Тестирование типизированных элементов массива с помощью функций стрелок</target>
        </trans-unit>
        <trans-unit id="fc8551ecbfca3a9dfea4b6adaba340a9f38519e3" translate="yes" xml:space="preserve">
          <source>Testing value of array elements</source>
          <target state="translated">Тестовое значение элементов массива</target>
        </trans-unit>
        <trans-unit id="aa4a8c71fcee78afc534385e3ee05358b3c9d7f6" translate="yes" xml:space="preserve">
          <source>Tests for a match in its string parameter.</source>
          <target state="translated">Тестирует на соответствие в его строковом параметре.</target>
        </trans-unit>
        <trans-unit id="156cbed5864591f1dd2c06200a43ab9f852c9e26" translate="yes" xml:space="preserve">
          <source>Tests whether all elements in the array pass the test provided by a function. See also &lt;a href=&quot;../array/every&quot;&gt;&lt;code&gt;Array.prototype.every()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Проверяет, все ли элементы в массиве проходят проверку, предоставленную функцией. См. Также &lt;a href=&quot;../array/every&quot;&gt; &lt;code&gt;Array.prototype.every()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="550e019e1e6924a45cf1459dccf8f51db1b34393" translate="yes" xml:space="preserve">
          <source>Tests whether all elements in the array pass the test provided by a function. See also &lt;a href=&quot;array/every&quot;&gt;&lt;code&gt;Array.prototype.every()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Проверяет, все ли элементы в массиве проходят проверку, предоставленную функцией. См. Также &lt;a href=&quot;array/every&quot;&gt; &lt;code&gt;Array.prototype.every()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b86a72dc714efb64175d96e3239bf481dda7693b" translate="yes" xml:space="preserve">
          <source>Text formatting in the JavaScript Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d1bf7f2c4e26f9c58c6bfafb14a191cb4417969" translate="yes" xml:space="preserve">
          <source>Text processing</source>
          <target state="translated">Обработка текста</target>
        </trans-unit>
        <trans-unit id="1ff12bf068df991c9089e6df4c59ed7e46ac9b09" translate="yes" xml:space="preserve">
          <source>Thai Buddhist calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0357725470bda7755b2822d6ae23c8b70ffb1d25" translate="yes" xml:space="preserve">
          <source>Thai digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="035cc775df9cebee27b0fb1367c57eeabdf464c5" translate="yes" xml:space="preserve">
          <source>That a class with a static member can be sub-classed.</source>
          <target state="translated">Что класс со статическим членом может быть подклассом.</target>
        </trans-unit>
        <trans-unit id="b06cebf457efacf159f61c43be8518c97de57dc5" translate="yes" xml:space="preserve">
          <source>That enables code like this to work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26865e4997f74266761e26d5c61ed130430f8c2f" translate="yes" xml:space="preserve">
          <source>That form looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5415a6d9fd8828f42199cde44ab091e229345163" translate="yes" xml:space="preserve">
          <source>That means, among other things, that in browsers it's no longer possible to reference the &lt;code&gt;window&lt;/code&gt; object through &lt;code&gt;this&lt;/code&gt; inside a strict mode function.</source>
          <target state="translated">Это означает, среди прочего, что в браузерах больше невозможно ссылаться на объект &lt;code&gt;window&lt;/code&gt; через &lt;code&gt;this&lt;/code&gt; внутри функции строгого режима.</target>
        </trans-unit>
        <trans-unit id="e6d78c1d039ae34c774e2ac19d361f4f25392490" translate="yes" xml:space="preserve">
          <source>The &quot;foo&quot; variable isn't defined anywhere. It needs to be some string, so that the &lt;a href=&quot;../global_objects/string/substring&quot;&gt;&lt;code&gt;String.prototype.substring()&lt;/code&gt;&lt;/a&gt; method will work.</source>
          <target state="translated">Переменная &quot;foo&quot; нигде не определена. Это должна быть какая-то строка, чтобы метод &lt;a href=&quot;../global_objects/string/substring&quot;&gt; &lt;code&gt;String.prototype.substring()&lt;/code&gt; &lt;/a&gt; работал.</target>
        </trans-unit>
        <trans-unit id="8c2cd3780315f7ea849850e6824937e7c4acf4bf" translate="yes" xml:space="preserve">
          <source>The $1, ..., $9 properties are static, they are not a property of an individual regular expression object. Instead, you always use them as &lt;code&gt;RegExp.$1&lt;/code&gt;, ..., &lt;code&gt;RegExp.$9&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="328f2e2c1b475d03baa0c2c5f888a295889f915e" translate="yes" xml:space="preserve">
          <source>The 0-based index of the match in the string.</source>
          <target state="translated">Основанный на 0 индекс совпадения в строке.</target>
        </trans-unit>
        <trans-unit id="b5b78c9f07e80dbebbafdb74c43fa464a1df6eb3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#Description&quot;&gt;description below&lt;/a&gt; explains in more detail what happens when &lt;code&gt;&lt;var&gt;radix&lt;/var&gt;&lt;/code&gt; is not provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce766d16fe8ecb46f684f72be6e3690ca1e12cc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; string (&quot;&amp;infin;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a7f34e042c2f73fb00363873d5a3c9fd7f0689" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; string (&quot;NaN&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef9cea6033a91379a9ce77f3ea49c43b4e9f447" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">Конструктор &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2b72216bf75234c8f765cd93b6d1fbc48470a09a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString&lt;/code&gt; method of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. For Array objects, the &lt;code&gt;toString&lt;/code&gt; method joins the array and returns one string containing each array element separated by commas.</source>
          <target state="translated">Объект &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; переопределяет метод &lt;code&gt;toString&lt;/code&gt; &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; . Для объектов Array метод &lt;code&gt;toString&lt;/code&gt; присоединяется к массиву и возвращает одну строку, содержащую каждый элемент массива, разделенный запятыми.</target>
        </trans-unit>
        <trans-unit id="1ec28584b9a8db73981921451aa5942c1907d104" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by this view. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; ссылается этой точки зрения. Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9972c42f65d54962a1d8c9644d2b7e49a3cbbca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString()&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;a href=&quot;../bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString()&lt;/code&gt; method returns a string representation of the object in the specified radix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6512300e2c7930d42f8ea6ef4d6cbfae77ca9af1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;Boolean&lt;/code&gt; objects, the &lt;code&gt;toString&lt;/code&gt; method returns a string representation of the object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add3d329fe0a3c4342e051ac334377e5ad9fd973" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For Boolean objects, the &lt;code&gt;toString&lt;/code&gt; method returns a string representation of the object.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; объект перекрывает &lt;code&gt;toString&lt;/code&gt; метод &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; объекта; он не наследует &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; . Для объектов Boolean метод &lt;code&gt;toString&lt;/code&gt; возвращает строковое представление объекта.</target>
        </trans-unit>
        <trans-unit id="89ba7a39a2239bbf8e72f0c30b3c7c510b136f3f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; object overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt; method inherited by all objects. Its semantics are as follows (assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; have their original values):</source>
          <target state="translated">Объект &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; переопределяет метод &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; унаследованный всеми объектами. Его семантика следующая (при условии, что &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; имеют свои исходные значения):</target>
        </trans-unit>
        <trans-unit id="d34eae1b8102d5286fbc65847ef8c389aa5c4c38" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; constructor is itself a &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; object. Its &lt;code&gt;length&lt;/code&gt; data property has a value of 1. The property attributes are: Writable: &lt;code&gt;false&lt;/code&gt;, Enumerable: &lt;code&gt;false&lt;/code&gt;, Configurable: &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Конструктор &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; сам по себе является объектом &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; . Его свойство данных &lt;code&gt;length&lt;/code&gt; имеет значение 1. Атрибуты свойства: Возможность записи: &lt;code&gt;false&lt;/code&gt; , Enumerable: &lt;code&gt;false&lt;/code&gt; , Configurable: &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="787d9fd50238d37c7f4473f9764b8b654fc38090" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; object overrides the &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; method inherited from &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString&lt;/code&gt;&lt;/a&gt;. For user-defined &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString&lt;/code&gt; method returns a string containing the source text segment which was used to define the function.</source>
          <target state="translated">Объект &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; заменяет метод &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;toString&lt;/code&gt; ,&lt;/a&gt; унаследованный от &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; ; он не наследует &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString&lt;/code&gt; &lt;/a&gt; . Для пользовательских объектов &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; метод &lt;code&gt;toString&lt;/code&gt; возвращает строку, содержащую сегмент исходного текста, который использовался для определения функции.</target>
        </trans-unit>
        <trans-unit id="d2ed8a6f60e5d0bddaec745d4da0c97993c94afd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object offers several methods to build a custom date string.</source>
          <target state="translated">Объект &lt;a href=&quot;../global_objects/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; предлагает несколько методов для создания настраиваемой строки даты.</target>
        </trans-unit>
        <trans-unit id="687e82b74189a63572ef757df4b5450c5a7ae267" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/object/create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt; method requires at least one argument and the &lt;a href=&quot;../global_objects/object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt; method requires at least two arguments:</source>
          <target state="translated">Для &lt;a href=&quot;../global_objects/object/create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt; требуется как минимум один аргумент, а для &lt;a href=&quot;../global_objects/object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; требуется как минимум два аргумента:</target>
        </trans-unit>
        <trans-unit id="b837bebfeec681919f5060d5a50671f0cbb47e33" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; creates non-configurable properties by default if you haven't specified them as configurable.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; создает не-настраиваемые свойства по умолчанию , если вы не указали их как настраивается.</target>
        </trans-unit>
        <trans-unit id="2259b5e3dd8f53921851af62646929571415c313" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; creates non-configurable properties if you haven't specified them as configurable.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; создает не-настраиваемые свойства , если вы не указали их как настраивается.</target>
        </trans-unit>
        <trans-unit id="3938744198b0fe20799ec3ae165f001100bdadd0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/object/seal&quot;&gt;&lt;code&gt;Object.seal()&lt;/code&gt;&lt;/a&gt; function marks all existing elements as non-configurable.</source>
          <target state="translated">Функция &lt;a href=&quot;../global_objects/object/seal&quot;&gt; &lt;code&gt;Object.seal()&lt;/code&gt; &lt;/a&gt; помечает все существующие элементы как не настраиваемые.</target>
        </trans-unit>
        <trans-unit id="0751621208e27cb974c5c08353ee66bd8711b4f9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/string/fromcodepoint&quot;&gt;&lt;code&gt;String.fromCodePoint()&lt;/code&gt;&lt;/a&gt; method accepts valid code points only.</source>
          <target state="translated">Метод &lt;a href=&quot;../global_objects/string/fromcodepoint&quot;&gt; &lt;code&gt;String.fromCodePoint()&lt;/code&gt; &lt;/a&gt; принимает только допустимые кодовые точки.</target>
        </trans-unit>
        <trans-unit id="97d81ed54f8628d12c62d0847602309951e039df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../global_objects/string/repeat&quot;&gt;&lt;code&gt;String.prototype.repeat()&lt;/code&gt;&lt;/a&gt; method has been used. It has a &lt;code&gt;count&lt;/code&gt; parameter indicating the number of times to repeat the string. It must be between 0 and less than positive &lt;a href=&quot;../global_objects/infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; and cannot be a negative number. The range of allowed values can be described like this: [0, +&amp;infin;).</source>
          <target state="translated">&lt;a href=&quot;../global_objects/string/repeat&quot;&gt; &lt;code&gt;String.prototype.repeat()&lt;/code&gt; &lt;/a&gt; метод был использован. У него есть параметр &lt;code&gt;count&lt;/code&gt; указывающий, сколько раз нужно повторить строку. Оно должно быть от 0 до меньше положительной &lt;a href=&quot;../global_objects/infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; и не может быть отрицательным числом. Диапазон допустимых значений можно описать так: [0, + &amp;infin;).</target>
        </trans-unit>
        <trans-unit id="57fc0d49569d578e9ed6ec0c848bf692ac1059e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; string (&quot;&amp;infin;&quot;).</source>
          <target state="translated">&lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; строка ( &quot;&amp;infin;&quot;).</target>
        </trans-unit>
        <trans-unit id="a67e79130d8caa6a2b98f32ef7124dc413e24438" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;new Map()&lt;/code&gt;&lt;/a&gt; constructor accepts an iterable of &lt;code&gt;entries&lt;/code&gt;. With &lt;code&gt;Object.entries&lt;/code&gt;, you can easily convert from &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; to &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Конструктор &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;new Map()&lt;/code&gt; &lt;/a&gt; принимает итерацию &lt;code&gt;entries&lt;/code&gt; . С помощью &lt;code&gt;Object.entries&lt;/code&gt; вы можете легко преобразовать &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; в &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ad07247d49cc3ed5da50d539e0388227d5084261" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; global object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee50ad58fa68e8d96d719ec7344b09ae6e91792e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object to be instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d722da58903819f75d86e7d81a93785b355c11a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object whose custom sections are being considered.</source>
          <target state="translated">Объект &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; , настраиваемые разделы которого рассматриваются.</target>
        </trans-unit>
        <trans-unit id="08ed084f9af58fcb8df7e67c09b1e55ddf4ceca1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; string (&quot;NaN&quot;).</source>
          <target state="translated">&lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; строка ( &quot;NaN&quot;).</target>
        </trans-unit>
        <trans-unit id="3113f170a4d1318fb4191d022ff4e73fc43a8afe" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object it belongs to</source>
          <target state="translated">Объект &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; ,&lt;/a&gt; которому он принадлежит</target>
        </trans-unit>
        <trans-unit id="0f71cb90a5235c673f641b8440ff1f2da09084af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object it belongs to.</source>
          <target state="translated">Объект &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; ,&lt;/a&gt; которому он принадлежит.</target>
        </trans-unit>
        <trans-unit id="93320ea228c42068554271e2412614ee0f92f02c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString()&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object. (It does &lt;em&gt;not&lt;/em&gt; inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;). For &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString()&lt;/code&gt; method returns a string representation of the object in the specified radix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aa780cccc71c8258a265f49f9b3f8ce9953bdf9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString()&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString()&lt;/code&gt; method returns a string representation of the object in the specified radix.</source>
          <target state="translated">&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; объект перекрывает &lt;code&gt;toString()&lt;/code&gt; метод &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; объекта; он не наследует &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; . Для объектов &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; метод &lt;code&gt;toString()&lt;/code&gt; возвращает строковое представление объекта в указанной системе счисления.</target>
        </trans-unit>
        <trans-unit id="c18a8851a0a128eb1e568c9d44f95a274f2306bc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; corresponding to the given JSON &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; , соответствующий данному JSON &lt;code&gt;text&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8acb7cd8da482259172487d9372a4b8bff1e23e8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;, string, number, boolean, or null value corresponding to the given JSON &lt;code&gt;&lt;var&gt;text&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180bc75fd81c47348ff1d085a49b3768038f1034" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt; operator&lt;/a&gt; as a function. Equivalent to calling &lt;code&gt;delete &lt;var&gt;target&lt;/var&gt;[&lt;var&gt;propertyKey&lt;/var&gt;]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae324a9f6795647f0527d14ce100058efa4f0dbf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt; operator&lt;/a&gt; as a function. Equivalent to calling &lt;code&gt;delete target[name]&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; оператора&lt;/a&gt; в качестве функции. Эквивалентно вызову &lt;code&gt;delete target[name]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cf6bc9b409ada402aec72bc514e6a6cf020f1b7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/destructuring_assignment&quot;&gt;Destructuring Assignment &lt;/a&gt;syntax can also be used to declare variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56709a870a398ca2057cceeb075411f0063a4031" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; as function. Returns a boolean indicating whether an own or inherited property exists.</source>
          <target state="translated">&lt;a href=&quot;../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; операторе&lt;/a&gt; , как функция. Возвращает логическое значение, указывающее, существует ли собственное или унаследованное свойство.</target>
        </trans-unit>
        <trans-unit id="798fc0847befa1a547ef926e0e08b02585dcea53" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt; can only be used to check if a property is in an object. You can't search in strings, or in numbers, or other primitive types.</source>
          <target state="translated">&lt;a href=&quot;../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; операторе&lt;/a&gt; может быть использован только для проверки , если имущество находится в объекте. Вы не можете искать в строках, числах или других примитивных типах.</target>
        </trans-unit>
        <trans-unit id="0a87c8417549dea9952a2fa149bc1816b9675ece" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt; operator&lt;/a&gt; expects the right hand side operands to be a constructor object, i.e. an object which has a &lt;code&gt;prototype&lt;/code&gt; property and is callable.</source>
          <target state="translated">&lt;a href=&quot;../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; оператор&lt;/a&gt; ожидает , что правая сторона операнды быть конструктор объекта, то есть объект , который имеет &lt;code&gt;prototype&lt;/code&gt; свойства и является вызываемым.</target>
        </trans-unit>
        <trans-unit id="273cbdce4209461c372b580eb92cea617293eafc" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt; as a function. Equivalent to calling &lt;code&gt;new &lt;var&gt;target&lt;/var&gt;(...&lt;var&gt;argumentsList&lt;/var&gt;)&lt;/code&gt;. Also provides the option to specify a different prototype.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c78bb0eac9037ab531c6ed970889f1713b3e20" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt; as a function. Equivalent to calling &lt;code&gt;new target(...args)&lt;/code&gt;. Provides also the optional possibility to specify a different prototype.</source>
          <target state="translated">&lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; оператор&lt;/a&gt; в качестве функции. Эквивалентно вызову &lt;code&gt;new target(...args)&lt;/code&gt; . Предоставляет также дополнительную возможность указать другой прототип.</target>
        </trans-unit>
        <trans-unit id="e71d66dc75482de3ef74386e6bf2c2a18adc57aa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/a&gt; operator can help you to identify symbols.</source>
          <target state="translated">Оператор &lt;a href=&quot;../operators/typeof&quot;&gt; &lt;code&gt;typeof&lt;/code&gt; &lt;/a&gt; может помочь вам идентифицировать символы.</target>
        </trans-unit>
        <trans-unit id="0553d1d722cc36a35d704503efeb0b87f1f07f70" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/typeof&quot;&gt;&lt;code&gt;typeof&lt;/code&gt;&lt;/a&gt; operator returns &lt;code&gt;'object'&lt;/code&gt; when used with &lt;code&gt;arguments&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfb392157fe446c8f22ca91a300ecd4cb5dfc8d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../operators/void&quot;&gt;&lt;code&gt;void&lt;/code&gt;&lt;/a&gt; operator is a third alternative.</source>
          <target state="translated">Оператор &lt;a href=&quot;../operators/void&quot;&gt; &lt;code&gt;void&lt;/code&gt; &lt;/a&gt; - третья альтернатива.</target>
        </trans-unit>
        <trans-unit id="ad8bc2d6fa115be28433a307e9205a2c1bcd3eb8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString()&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString()&lt;/code&gt; method returns a string representation of the regular expression.</source>
          <target state="translated">&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; объект перекрывает &lt;code&gt;toString()&lt;/code&gt; метод &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; объекта; он не наследует &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; . Для объектов &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; метод &lt;code&gt;toString()&lt;/code&gt; возвращает строковое представление регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="1ac6151a2ffd383aac39cae6d5489081392174db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; name or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Symbol&quot;&gt;symbol&lt;/a&gt; of the property to test.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; название или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Symbol&quot;&gt;символ&lt;/a&gt; свойства для тестирования.</target>
        </trans-unit>
        <trans-unit id="6baaed503300e0abd0a73221633d1997752238db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; name or &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Symbol&quot;&gt;Symbol&lt;/a&gt; of the property to test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4c5f8b87252151b51d93cae763640a67e9f1c8c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString()&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; objects, the &lt;code&gt;toString()&lt;/code&gt; method returns a string representation of the object and is the same as the &lt;a href=&quot;valueof&quot;&gt;&lt;code&gt;String.prototype.valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; объект перекрывает &lt;code&gt;toString()&lt;/code&gt; метод &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; объекта; он не наследует &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; . Для объектов &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; метод &lt;code&gt;toString()&lt;/code&gt; возвращает строковое представление объекта и совпадает с &lt;a href=&quot;valueof&quot;&gt; &lt;code&gt;String.prototype.valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39e15659272c67a3e65a4932874b10a790a10dcd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object's &lt;code&gt;charAt()&lt;/code&gt; method returns a new string consisting of the single UTF-16 code unit located at the specified offset into the string.</source>
          <target state="translated">Метод &lt;code&gt;charAt()&lt;/code&gt; объекта &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; возвращает новую строку, состоящую из единственной единицы кода UTF-16, расположенной по указанному смещению в строке.</target>
        </trans-unit>
        <trans-unit id="5a3f522dd7bdf0c9bf82a4bce7dc08fe5f1246d2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that replaces the substring specified by the specified &lt;code&gt;&lt;var&gt;regexp&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;substr&lt;/var&gt;&lt;/code&gt; parameter. A number of special replacement patterns are supported; see the &quot;&lt;a href=&quot;#Specifying_a_string_as_a_parameter&quot;&gt;Specifying a string as a parameter&lt;/a&gt;&quot; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f30a666eac9c770fa37527c06946f3d9b207ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that replaces the substring specified by the specified &lt;code&gt;regexp&lt;/code&gt; or &lt;code&gt;substr&lt;/code&gt; parameter. A number of special replacement patterns are supported; see the &quot;&lt;a href=&quot;#Specifying_a_string_as_a_parameter&quot;&gt;Specifying a string as a parameter&lt;/a&gt;&quot; section below.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , которая заменяет подстроку , указанную указанным &lt;code&gt;regexp&lt;/code&gt; или &lt;code&gt;substr&lt;/code&gt; параметра. Поддерживается ряд специальных шаблонов замены; см. раздел &amp;laquo; &lt;a href=&quot;#Specifying_a_string_as_a_parameter&quot;&gt;Указание строки как параметра&lt;/a&gt; &amp;raquo; ниже.</target>
        </trans-unit>
        <trans-unit id="1bd3606aae060d887a588efc2390a72e75ba5b95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that replaces the substring. A number of special replacement patterns are supported; see the &lt;a href=&quot;../string/replace#Specifying_a_string_as_a_parameter&quot;&gt;Specifying a string as a parameter&lt;/a&gt; section in &lt;a href=&quot;../string/replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , которая заменяет подстроку. Поддерживается ряд специальных шаблонов замены; см. раздел &amp;laquo; &lt;a href=&quot;../string/replace#Specifying_a_string_as_a_parameter&quot;&gt;Указание строки как параметра&lt;/a&gt; &amp;raquo; на &lt;a href=&quot;../string/replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f913f08d1d9a8a58d950f8ebefd556fd097200e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object overrides the &lt;code&gt;toString&lt;/code&gt; method of the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; object; it does not inherit &lt;a href=&quot;../object/tostring&quot;&gt;&lt;code&gt;Object.prototype.toString()&lt;/code&gt;&lt;/a&gt;. For &lt;code&gt;Symbol&lt;/code&gt; objects, the &lt;code&gt;toString&lt;/code&gt; method returns a string representation of the object.</source>
          <target state="translated">Объект &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; переопределяет метод &lt;code&gt;toString&lt;/code&gt; объекта &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; ; он не наследует &lt;a href=&quot;../object/tostring&quot;&gt; &lt;code&gt;Object.prototype.toString()&lt;/code&gt; &lt;/a&gt; . Для объектов &lt;code&gt;Symbol&lt;/code&gt; метод &lt;code&gt;toString&lt;/code&gt; возвращает строковое представление объекта.</target>
        </trans-unit>
        <trans-unit id="64f106612c83c469f90da9f4e007a90baf562cd0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../typedarray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; objects override the &lt;code&gt;toString&lt;/code&gt; method of &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;. For TypedArray objects, the &lt;code&gt;toString&lt;/code&gt; method joins the array and returns one string containing each typed array element separated by commas. For example, the following code creates a typed array and uses &lt;code&gt;toString&lt;/code&gt; to convert the array to a string.</source>
          <target state="translated">&lt;a href=&quot;../typedarray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt; объекты переопределить &lt;code&gt;toString&lt;/code&gt; метод &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; . Для объектов TypedArray метод &lt;code&gt;toString&lt;/code&gt; присоединяется к массиву и возвращает одну строку, содержащую каждый типизированный элемент массива, разделенный запятыми. Например, следующий код создает типизированный массив и использует &lt;code&gt;toString&lt;/code&gt; для преобразования массива в строку.</target>
        </trans-unit>
        <trans-unit id="632980ea49cfae14474d549afcbb8b9ee8bf47ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; referenced by this view. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">&lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; ссылается этой точки зрения. Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="160279a805a8af287efbee0e9a458d89d035ef7f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classes/constructor&quot;&gt;constructor&lt;/a&gt; method is a special method for creating and initializing an object created with a &lt;code&gt;class&lt;/code&gt;. There can only be one special method with the name &quot;constructor&quot; in a class. A &lt;a href=&quot;global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; will be thrown if the class contains more than one occurrence of a &lt;code&gt;constructor&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e1a4f1b4284c6b66e1af54d9e3f47dead26de7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classes/extends&quot;&gt;&lt;code&gt;extends&lt;/code&gt;&lt;/a&gt; keyword is used in &lt;em&gt;class declarations&lt;/em&gt; or &lt;em&gt;class expressions&lt;/em&gt; to create a class as a child of another class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187d3f66a46797271a78f07cb410b4d4693b1244" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classes/static&quot;&gt;static&lt;/a&gt; keyword defines a static method or property for a class. Static members (properties and methods) are called without &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Introduction_to_Object-Oriented_JavaScript#The_object_(class_instance)&quot;&gt;instantiating &lt;/a&gt;their class and &lt;strong&gt;cannot &lt;/strong&gt;be called through a class instance. Static methods are often used to create utility functions for an application, whereas static properties are useful for caches, fixed-configuration, or any other data you don't need to be replicated across instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e355f8eda28c48bf382bffc8d8cf5edb0c9ae92a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; statement iterates over the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable properties&lt;/a&gt; of an object, in an arbitrary order.</source>
          <target state="translated">Оператор &lt;a href=&quot;for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; выполняет итерацию по &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;перечислимым свойствам&lt;/a&gt; объекта в произвольном порядке.</target>
        </trans-unit>
        <trans-unit id="07f35eed0fd4046253108a938512cba6e29d51f1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;global_objects/bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; type is a numeric primitive in JavaScript that can represent integers with arbitrary precision. BigInt literals are created by appending &lt;code&gt;n&lt;/code&gt; to the end of an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71558ffa2727f25da7838846b6659c7533ee1f8d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;global_objects/number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;global_objects/bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; types use numeric literals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a636e038cfdfd3e59e634f3a196b2ca443ae6e50" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript guide&lt;/a&gt;</source>
          <target state="translated">Руководство по &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e27443a24f6139cac97829c880b5217c315e1e1d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Unicode_Property_Escapes&quot;&gt;Unicode property escapes&lt;/a&gt; feature introduces a solution, by allowing for a statement as simple as &lt;code&gt;\p{scx=Cyrl}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a50944537030939e1192f6fd724167dcafdab6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt;&lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt;&lt;/a&gt; method is deprecated and will be removed (no cross-browser support, available in Firefox only).</source>
          <target state="translated">Метод &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt; &lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt; &lt;/a&gt; устарел и будет удален (кроссбраузерная поддержка отсутствует, доступно только в Firefox).</target>
        </trans-unit>
        <trans-unit id="12a9481eb5c3ab27deffab1a3df21e7fecb8a755" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.microsoft.com/en-us/scripting/javascript/date-and-time-strings-javascript&quot;&gt;ISO8601 Date Format&lt;/a&gt; is not supported in Internet Explorer 8.</source>
          <target state="translated">&lt;a href=&quot;https://docs.microsoft.com/en-us/scripting/javascript/date-and-time-strings-javascript&quot;&gt;ISO8601 Формат даты&lt;/a&gt; не поддерживается в Internet Explorer 8.</target>
        </trans-unit>
        <trans-unit id="e683e393ff29f3b5209b51850d795330caf86255" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO8601 Date Format&lt;/a&gt; is not supported in Internet Explorer 8 or earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf4931730c8a5878a92a8141a899f0a9b8bdea0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest/Spread Properties for ECMAScript&lt;/a&gt; proposal (ES2018) added spread properties to &lt;a href=&quot;object_initializer#1&quot;&gt;&lt;code&gt;object literals&lt;/code&gt;&lt;/a&gt;. It copies own enumerable properties from a provided object onto a new object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c5dacbd30560cb86e845dcc4d8e3e5bfa74149" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest/Spread Properties for ECMAScript&lt;/a&gt; proposal (stage 3) adds the &lt;a href=&quot;../functions/rest_parameters&quot;&gt;rest&lt;/a&gt; syntax to destructuring. Rest properties collect the remaining own enumerable property keys that are not already picked off by the destructuring pattern.</source>
          <target state="translated">В &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest / Спред Свойства для ECMAScript&lt;/a&gt; предложения (стадия 3) добавляет &lt;a href=&quot;../functions/rest_parameters&quot;&gt;остальное&lt;/a&gt; синтаксис деструктуризации. Остальные свойства собирают оставшиеся собственные ключи перечислимых свойств, которые еще не выбраны шаблоном деструктуризации.</target>
        </trans-unit>
        <trans-unit id="e2bdee9c15a99d139afc22a4cc47428ec0d9bf71" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest/Spread Properties for ECMAScript&lt;/a&gt; proposal (stage 4) adds &lt;a href=&quot;spread_syntax&quot;&gt;spread&lt;/a&gt; properties to object literals. It copies own enumerable properties from a provided object onto a new object.</source>
          <target state="translated">В &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest / Спред Свойства для ECMAScript&lt;/a&gt; предложения (стадия 4) добавляет &lt;a href=&quot;spread_syntax&quot;&gt;расширенные&lt;/a&gt; свойства объекта литералов. Он копирует собственные перечислимые свойства из предоставленного объекта в новый объект.</target>
        </trans-unit>
        <trans-unit id="b93d00899bd3fe8ac92c0e1f34530dab5f94d123" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest/Spread Properties for ECMAScript&lt;/a&gt; proposal (stage 4) adds spread properties to &lt;a href=&quot;object_initializer&quot;&gt;object literals&lt;/a&gt;. It copies own enumerable properties from a provided object onto a new object.</source>
          <target state="translated">В &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest / Спред Свойства для ECMAScript&lt;/a&gt; предложения (стадия 4) добавляет расширенные свойства &lt;a href=&quot;object_initializer&quot;&gt;объекта литералов&lt;/a&gt; . Он копирует собственные перечислимые свойства из предоставленного объекта в новый объект.</target>
        </trans-unit>
        <trans-unit id="692d945277e9a6a0f6ce7b5967e29c9cc41c635a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39/proposal-object-rest-spread&quot;&gt;Rest/Spread Properties for ECMAScript&lt;/a&gt; proposal (stage 4) adds the &lt;a href=&quot;../functions/rest_parameters&quot;&gt;rest&lt;/a&gt; syntax to destructuring. Rest properties collect the remaining own enumerable property keys that are not already picked off by the destructuring pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6299037ed277213afddeb095b3218f8dc1a1db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide&quot;&gt;JavaScript guide&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6ff40568aafb7d4469fa96fbdeb489ea95a7a2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt;&lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt;&lt;/a&gt; method is deprecated and will be removed (no cross-browser support, available in Firefox only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10dbc1d540069a12c163d346ab7c2d4cfa66f2ec" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON format&lt;/a&gt; per se doesn't support object references (although an &lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;IETF draft exists&lt;/a&gt;), hence &lt;a href=&quot;../global_objects/json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; doesn't try to solve them and fail accordingly.</source>
          <target state="translated">Формат &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON сам&lt;/a&gt; по себе не поддерживает ссылки на объекты (хотя существует &lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;черновик IETF&lt;/a&gt; ), поэтому &lt;a href=&quot;../global_objects/json/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt; не пытается их решить и соответственно терпит неудачу.</target>
        </trans-unit>
        <trans-unit id="93802bb3a54d4b3e61cf6dfc85baa9daf649b107" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON format&lt;/a&gt; per se doesn't support object references (although an &lt;a href=&quot;http://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;IETF draft exists&lt;/a&gt;), hence &lt;a href=&quot;../global_objects/json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; doesn't try to solve them and fails accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0dfca601e604588005a3fc7df6eca7ef307613" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON format&lt;/a&gt; per se doesn't support object references (although an &lt;a href=&quot;https://tools.ietf.org/html/draft-pbryan-zyp-json-ref-03&quot;&gt;IETF draft exists&lt;/a&gt;), hence &lt;a href=&quot;../global_objects/json/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; doesn't try to solve them and fails accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62560fd2648ba2ba5d9b84c5c4e0cda3bcb4a624" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;index&quot;&gt;JavaScript reference&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;index&quot;&gt;Ссылка JavaScript&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d513e50b8d7a74663572b576749886acaab023e4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Intl.Locale&lt;/code&gt;&lt;/a&gt; constructor has an optional configuration object argument, which can be used to pass extension types. Set the &lt;code&gt;caseFirst&lt;/code&gt; property of the configuration object to your desired &lt;code&gt;caseFirst&lt;/code&gt; value, and then pass it into the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53370fd7ac81baf810a6e40af5bcb92610fd4d73" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Intl.Locale&lt;/code&gt;&lt;/a&gt; constructor has an optional configuration object argument, which can be used to pass extension types. Set the &lt;code&gt;numberingSystem&lt;/code&gt; property of the configuration object to your desired &lt;code&gt;numberingSystem&lt;/code&gt; value and pass it into the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7149356f52dc5d4bed51bda08d64c8bac66b33ac" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Intl.Locale&lt;/code&gt;&lt;/a&gt; constructor has an optional configuration object argument, which can be used to pass extension types. Set the &lt;code&gt;numeric&lt;/code&gt; property of the configuration object to your desired &lt;code&gt;numeric&lt;/code&gt; value and pass it into the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc0794f2ac241e0b90603fe252897d1641d7315" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Intl.Locale&lt;/code&gt;&lt;/a&gt; constructor has an optional configuration object argument, which can contain any of several extension types, including calendars. Set the &lt;code&gt;calendar&lt;/code&gt; property of the configuration object to your desired calendar era, and then pass it into the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1617082c69cc0641f3760780f5c9d13da82cdca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Intl.Locale&lt;/code&gt;&lt;/a&gt; constructor has an optional configuration object argument, which can contain any of several extension types, including collation types. Set the &lt;code&gt;collation&lt;/code&gt; property of the configuration object to your desired collation type, and then pass it into the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="330cc3cb0d0f4b9a8498720274b25aa46058e963" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Intl.Locale&lt;/code&gt;&lt;/a&gt; constructor has an optional configuration object argument, which can contain any of several extension types, including hour cycle types. Set the &lt;code&gt;hourCycle&lt;/code&gt; property of the configuration object to your desired hour cycle type, and then pass it into the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c006aaa2195c59a5261d1d666ad8e436c084562" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; constructor takes a configuration object, which can be used to set the region subtag and property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6266f05092cdaf060fd5b42861c279c24ea40c5c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; constructor takes a configuration object, which can be used to set the script subtag and property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abf05d497108795aafce241e835652f688bbc96" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;logical_and&quot;&gt;logical AND&lt;/a&gt; operator is evaluated left to right, it is tested for possible short-circuit evaluation using the following rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c258e9d37d9f51fffbb602be2be5b45d8dd3fc87" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;logical_or&quot;&gt;logical OR&lt;/a&gt; operator works like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b7158fa8a19f3c7581c343705a05479d6e391f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; global object</source>
          <target state="translated">&lt;a href=&quot;math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; глобальный объект</target>
        </trans-unit>
        <trans-unit id="c93d9730a234f043c6a96c91a5e0bd449841b5fa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object to be instantiated.</source>
          <target state="translated">Объект &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; ,&lt;/a&gt; который необходимо создать.</target>
        </trans-unit>
        <trans-unit id="1f028ed5bad7558e2c7c7604c7a362c774e33f12" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;nullish_coalescing_operator&quot;&gt;Nullish Coalescing Operator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f918bb83489e847beba6716789b3dfd3c9e6e5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;nullish_coalescing_operator&quot;&gt;nullish coalescing operator&lt;/a&gt; may be used after optional chaining in order to build a default value when none was found:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4337c6717d55b048d6dd3a34ba58e77212be1b34" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;nullish_coalescing_operator&quot;&gt;nullish coalescing&lt;/a&gt; operator is evaluated left to right, it is tested for possible short-circuit evaluation using the following rule:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b7567ce385ec2fe63cd9b3a73d45ed9ce5d143d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;operators/super&quot;&gt;&lt;code&gt;super&lt;/code&gt;&lt;/a&gt; keyword is used to call corresponding methods of super class. This is one advantage over prototype-based inheritance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8eeb7b0a47b54a4e01eea383ff676056716522" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt; keyword&lt;/a&gt; does not refer to the currently executing function, so you must refer to &lt;code&gt;Function&lt;/code&gt; objects by name, even within the function body.</source>
          <target state="translated">&lt;a href=&quot;operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; ключевое слово&lt;/a&gt; не относится к функции исполняемой в данный момент, так что вы должны ссылаться на &lt;code&gt;Function&lt;/code&gt; объекты по имени, даже в теле функции.</target>
        </trans-unit>
        <trans-unit id="056a81025906bb276873e382f96c2a746958f34d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; global object.</source>
          <target state="translated">&lt;a href=&quot;proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; глобальный объект.</target>
        </trans-unit>
        <trans-unit id="98c72407b0a0980796d3c3b4bc95aad30bdf3ef7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy/handler&quot;&gt;&lt;code&gt;handler&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Объект- &lt;a href=&quot;proxy/handler&quot;&gt; &lt;code&gt;handler&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35e93c3ea0e5a23163f4eebae5b60a1c0bfc2acf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;proxy/proxy&quot;&gt;&lt;code&gt;handler&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94daa5d180689d4264f8f1e840ee33e3bfeb01a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;regexp/sticky&quot;&gt;&lt;code&gt;sticky&lt;/code&gt;&lt;/a&gt; flag indicates that the regular expression performs sticky matching in the target string by attempting to match starting at &lt;a href=&quot;regexp/lastindex&quot;&gt;&lt;code&gt;RegExp.prototype.lastIndex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddd4c2ab801af55b1c74ee551beaba6aa079d6c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;regexp/sticky&quot;&gt;sticky flag&lt;/a&gt; indicates that the regular expression performs sticky matching in the target string by attempting to match starting at &lt;a href=&quot;regexp/lastindex&quot;&gt;&lt;code&gt;RegExp.prototype.lastIndex&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;regexp/sticky&quot;&gt;Липким флаг&lt;/a&gt; указывает на то, что регулярное выражение выполняет липким соответствия в целевой строке, пытаясь матче , начиная с &lt;a href=&quot;regexp/lastindex&quot;&gt; &lt;code&gt;RegExp.prototype.lastIndex&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3662c74d51c6599975376c3e823cf8c8ba02b21e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string#String_conversion&quot;&gt;&quot;safer&quot; &lt;code&gt;String(&lt;var&gt;sym&lt;/var&gt;)&lt;/code&gt; conversion&lt;/a&gt; works like a call to &lt;a href=&quot;symbol/tostring&quot;&gt;&lt;code&gt;Symbol.prototype.toString()&lt;/code&gt;&lt;/a&gt; with symbols, but note that &lt;code&gt;new String(&lt;var&gt;sym&lt;/var&gt;)&lt;/code&gt; will throw.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a27e129796c96711e7a743123f9f207a8ae93c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;string#String_conversion&quot;&gt;&quot;safer&quot; &lt;code&gt;String(sym)&lt;/code&gt; conversion&lt;/a&gt; works like a call to &lt;a href=&quot;symbol/tostring&quot;&gt;&lt;code&gt;Symbol.prototype.toString()&lt;/code&gt;&lt;/a&gt; with symbols, but note that &lt;code&gt;new String(sym)&lt;/code&gt; will throw.</source>
          <target state="translated">&amp;laquo;Более &lt;a href=&quot;string#String_conversion&quot;&gt;безопасное&amp;raquo; преобразование &lt;code&gt;String(sym)&lt;/code&gt; &lt;/a&gt; работает как вызов &lt;a href=&quot;symbol/tostring&quot;&gt; &lt;code&gt;Symbol.prototype.toString()&lt;/code&gt; &lt;/a&gt; с символами, но учтите, что &lt;code&gt;new String(sym)&lt;/code&gt; выбрасывает.</target>
        </trans-unit>
        <trans-unit id="11c16b00f674261469c768ea45a7a190b546738c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%TypedArray%&lt;/code&gt; constructor on its own is not particularly useful. Calling it or using it in a &lt;code&gt;new&lt;/code&gt; expression will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, except when used during object creation in JS engines that support subclassing. There are at present no such engines, so &lt;code&gt;%TypedArray%&lt;/code&gt; is only useful to polyfill functions or properties onto all &lt;code&gt;&lt;var&gt;TypedArray&lt;/var&gt;&lt;/code&gt; constructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b299c9e22fb900001345069f3f3d564c23dd2c18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;%TypedArray%&lt;/code&gt; constructor on its own is not particularly useful. Calling it or using it in a &lt;code&gt;new&lt;/code&gt; expression will throw a &lt;code&gt;TypeError&lt;/code&gt;, except when used during object creation in JS engines that support subclassing. There are at present no such engines, so &lt;code&gt;%TypedArray%&lt;/code&gt; is only useful to polyfill functions or properties onto all &lt;em&gt;TypedArray&lt;/em&gt; constructors.</source>
          <target state="translated">Сам по &lt;code&gt;%TypedArray%&lt;/code&gt; конструктор % TypedArray% не особенно полезен. Вызов его или использование в &lt;code&gt;new&lt;/code&gt; выражении вызовет &lt;code&gt;TypeError&lt;/code&gt; , за исключением случаев, когда он используется во время создания объекта в движках JS, которые поддерживают создание подклассов. В настоящее время таких механизмов нет, поэтому &lt;code&gt;%TypedArray%&lt;/code&gt; полезен только для полифиллинга функций или свойств для всех конструкторов &lt;em&gt;TypedArray&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ae0b7a5f995c3722921218b1a1c9075bc47b2aaf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; (zero-fill right shift) shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Zero bits are shifted in from the left. The sign bit becomes &lt;code&gt;0&lt;/code&gt;, so the result is always non-negative. Unlike the other bitwise operators, zero-fill right shift returns an unsigned 32-bit integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8fbccfdbecd77ddfcfc47863f7fa832d561a6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; shifts the first operand the specified number of bits to the right. Excess bits shifted off to the right are discarded. Copies of the leftmost bit are shifted in from the left. Since the new leftmost bit has the same value as the previous leftmost bit, the sign bit (the leftmost bit) does not change. Hence the name &quot;sign-propagating&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125ee2740d8665208cd4ef0d379ea29ac882e611" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; shifts the first operand the specified number of bits to the left. Excess bits shifted off to the left are discarded. Zero bits are shifted in from the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad0dc94db120cfdd4315652e2f91282c1d8e2433" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--harmony-array-prototype-values&lt;/code&gt; flag is required; the &lt;code&gt;--harmony&lt;/code&gt; flag is not sufficient in this case.</source>
          <target state="translated">&lt;code&gt;--harmony-array-prototype-values&lt;/code&gt; флаг требуется; &lt;code&gt;--harmony&lt;/code&gt; флаг не является достаточным в этом случае.</target>
        </trans-unit>
        <trans-unit id="956412462590623217d42f73ea41541f3e8ae7e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;...restParam&lt;/code&gt; bundles all the extra parameters into a single array, therefore it does not contain any named argument defined &lt;strong&gt;before&lt;/strong&gt; the &lt;code&gt;...restParam&lt;/code&gt;. Whereas the &lt;code&gt;arguments&lt;/code&gt; object contains all of the parameters -- including all of the stuff in the &lt;code&gt;...restParam&lt;/code&gt; -- &lt;strong&gt;un&lt;/strong&gt;bundled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587d2b7e6e2c63ed72dcdaf046ad9d7ef6772841" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.prototype&lt;/code&gt; of the extension must be an &lt;a href=&quot;../global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.prototype&lt;/code&gt; расширения должен быть &lt;a href=&quot;../global_objects/object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a94e95eb204f4ce1e01cf1b8f9f88850d19f910" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/&lt;/code&gt; operator also works as expected with whole numbers.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
