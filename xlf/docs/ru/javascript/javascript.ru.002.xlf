<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="8d8b8dea2d9ce0de3f280f55b5962027b99c2877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt; prototype object</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; Объект-прототип функции</target>
        </trans-unit>
        <trans-unit id="bdc9a10c4ce3956b173f85c40bba998db4c15ee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Generator.&lt;/code&gt;&lt;code&gt;prototype.&lt;/code&gt;&lt;code&gt;throw()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Generator.&lt;/code&gt;&lt;code&gt;prototype.&lt;/code&gt;&lt;code&gt;throw()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0891d6d3590fe26a942df231ac1d800f8283921a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeneratorFunction&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;GeneratorFunction&lt;/code&gt; Экземпляры GeneratorFunction</target>
        </trans-unit>
        <trans-unit id="5bba2ce005ea7df2b74168d90dfac9cb2dd446b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeneratorFunction&lt;/code&gt; instances inherit methods and properties from &lt;a href=&quot;generatorfunction/prototype&quot;&gt;&lt;code&gt;GeneratorFunction.prototype&lt;/code&gt;&lt;/a&gt;. As with all constructors, you can change the constructor's prototype object to make changes to all &lt;code&gt;GeneratorFunction&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;GeneratorFunction&lt;/code&gt; Экземпляры GeneratorFunction наследуют методы и свойства от &lt;a href=&quot;generatorfunction/prototype&quot;&gt; &lt;code&gt;GeneratorFunction.prototype&lt;/code&gt; &lt;/a&gt; . Как и все конструкторы, вы можете изменить объект прототипа конструктора, чтобы внести изменения во все экземпляры &lt;code&gt;GeneratorFunction&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d810624d23160371a811a024e853a9f6209db06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GeneratorFunction&lt;/code&gt; prototype object</source>
          <target state="translated">&lt;code&gt;GeneratorFunction&lt;/code&gt; Объект-прототип GeneratorFunction</target>
        </trans-unit>
        <trans-unit id="58764e98c36f21b027b0ab48ca92e8e6eb2e090a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Global()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d32385030ee8beec68fa3259a0cbd7cd8c4c9af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Infinity&lt;/code&gt; is a property of the &lt;em&gt;global object&lt;/em&gt;, or in other words, a variable in global scope.</source>
          <target state="translated">&lt;code&gt;Infinity&lt;/code&gt; - это свойство &lt;em&gt;глобального объекта&lt;/em&gt; или, другими словами, переменная в глобальной области видимости.</target>
        </trans-unit>
        <trans-unit id="b26969c66c648bb1313da8c471ba5b7f7ca71dee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Infinity&lt;/code&gt; is a property of the &lt;em&gt;global object&lt;/em&gt;. In other words, it is a variable in global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="110f353eead031e96bb539a5bc629776ed4c5bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instance()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb444c4695ab21faf84ab1b82dc4792a80161b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Instance&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;Instance&lt;/code&gt; экземпляров</target>
        </trans-unit>
        <trans-unit id="956ab59565ef88e68fca36f322a871adad7e17f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int16Array()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Int16Array()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="f36c6d867c261272f02299ebc80f0e78495d2001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int16Array&lt;/code&gt; prototype</source>
          <target state="translated">&lt;code&gt;Int16Array&lt;/code&gt; Прототип Int16Array</target>
        </trans-unit>
        <trans-unit id="7244f25230b1d64ed82fca4e48ecb74ff2bd23cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int32Array()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0201e094703e3aea7488fe2d7cb3ad8e0e7a6796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int32Array()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Int32Array()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="c869ec7a2ce18a2b725e39385b02dfd6e348fe6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int32Array&lt;/code&gt; prototype</source>
          <target state="translated">&lt;code&gt;Int32Array&lt;/code&gt; Прототип Int32Array</target>
        </trans-unit>
        <trans-unit id="2177c222e057a48cf05a04ea8aef25d1702c5d55" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int8Array()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7df20b812af35a9900b05e2b56f8c76dc94cd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int8Array()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Int8Array()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="d3e7af3ebd23b2d2f25c50a670dc78d2217e0095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Int8Array&lt;/code&gt; prototype</source>
          <target state="translated">&lt;code&gt;Int8Array&lt;/code&gt; Прототип Int8Array</target>
        </trans-unit>
        <trans-unit id="42f5628be04b5ae2baf467371e133a19c52f8e5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IteratorResult&lt;/code&gt; object instead of throwing</source>
          <target state="translated">&lt;code&gt;IteratorResult&lt;/code&gt; вместо того, чтобы бросать</target>
        </trans-unit>
        <trans-unit id="04d666850d0c866af9e699c434b1d4de2e994096" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IteratorResult&lt;/code&gt; object returned instead of throwing</source>
          <target state="translated">&lt;code&gt;IteratorResult&lt;/code&gt; Объект IteratorResult вернулся вместо выброса</target>
        </trans-unit>
        <trans-unit id="99bf142591158d5669990d515492aeb7e19db9b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSON.parse()&lt;/code&gt; does not allow trailing commas</source>
          <target state="translated">&lt;code&gt;JSON.parse()&lt;/code&gt; не допускает запятых в конце</target>
        </trans-unit>
        <trans-unit id="792a9827e85fda5fb0f2826880070cbba653fa1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;JSON.stringify()&lt;/code&gt; converts a value to JSON notation representing it:</source>
          <target state="translated">&lt;code&gt;JSON.stringify()&lt;/code&gt; преобразует значение в представление JSON, представляющее его:</target>
        </trans-unit>
        <trans-unit id="99d15540bd179508a1b379ec775326d57dcda4ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LinkError()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f357441cbb064efb2755affac7956b95367a80c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIN_VALUE&lt;/code&gt; has a value of approximately &lt;code&gt;5e-324&lt;/code&gt;. Values smaller than &lt;code&gt;MIN_VALUE&lt;/code&gt; (&quot;underflow values&quot;) are converted to 0.</source>
          <target state="translated">&lt;code&gt;MIN_VALUE&lt;/code&gt; имеет значение приблизительно &lt;code&gt;5e-324&lt;/code&gt; . Значения меньше &lt;code&gt;MIN_VALUE&lt;/code&gt; (&amp;laquo; недостающие значения&amp;raquo;) преобразуются в 0.</target>
        </trans-unit>
        <trans-unit id="8a7df267ea0fcc210d5cbe17b20827ba4b7c7078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Map()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1e5dd0c012303db962f4607a578c791b67434a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Map()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Map()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="8318b22aa8d141e0724c8ed13eac5cb86e604c9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Map&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; Экземпляры карты</target>
        </trans-unit>
        <trans-unit id="c9f74064b2f4d39f2ff9a75fab30b8b76f7760e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.asinh&lt;/code&gt; can be emulated with the following function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7bcd8cf43ec0c6188f2699c4935f40c7e3d138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.atan2()&lt;/code&gt; is passed separate &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; arguments, and &lt;code&gt;Math.atan()&lt;/code&gt; is passed the ratio of those two arguments.</source>
          <target state="translated">&lt;code&gt;Math.atan2()&lt;/code&gt; передает отдельные аргументы &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;y&lt;/code&gt; , а &lt;code&gt;Math.atan()&lt;/code&gt; передает соотношение этих двух аргументов.</target>
        </trans-unit>
        <trans-unit id="aa268387b5ee5b06e13574d8c4522eba1a94f150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.hypot&lt;/code&gt; also avoids overflow/underflow problems if the magnitude of your numbers is very large. The largest number you can represent in JS is &lt;code&gt;Number.MAX_VALUE&lt;/code&gt;, which is around 10&lt;sup&gt;308&lt;/sup&gt;. If your numbers are larger than about 10&lt;sup&gt;154&lt;/sup&gt;, taking the square of them will result in Infinity. For example, &lt;code&gt;Math.sqrt(1e200*1e200 + 1e200*1e200) = Infinity&lt;/code&gt;. If you use &lt;code&gt;hypot()&lt;/code&gt; instead, you get better answer: &lt;code&gt;Math.hypot(1e200, 1e200) = 1.4142...e+200&lt;/code&gt; . This is also true with very small numbers. &lt;code&gt;Math.sqrt(1e-200*1e-200 + 1e-200*1e-200) = 0&lt;/code&gt;, but &lt;code&gt;Math.hypot(1e-200, 1e-200) = 1.4142...e-200&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4380e68cdd3c6b768be71b198599bf7c90c809f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.imul()&lt;/code&gt; allows for 32-bit integer multiplication with C-like semantics. This feature is useful for projects like &lt;a href=&quot;http://en.wikipedia.org/wiki/Emscripten&quot;&gt;Emscripten&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109bb4285faf535e17adad3f4a8c412db543cf11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.imul()&lt;/code&gt; allows for 32-bit integer multiplication with C-like semantics. This feature is useful for projects like &lt;a href=&quot;http://en.wikipedia.org/wiki/Emscripten&quot;&gt;Emscripten&lt;/a&gt;. Because &lt;code&gt;imul()&lt;/code&gt; is a static method of &lt;code&gt;Math&lt;/code&gt;, you always use it as &lt;code&gt;Math.imul()&lt;/code&gt;, rather than as a method of a &lt;code&gt;Math&lt;/code&gt; object you created (&lt;code&gt;Math&lt;/code&gt; is not a constructor). If you use normal JavaScript floating point numbers in imul, you will experience a degrade in performance. This is because of the costly conversion from a floating point to an integer for multiplication, and then converting the multiplied integer back into a floating point. The reason imul exists is because it is faster in only one (so far) circumstance: AsmJS. AsmJS allows for JIST-optimizers to more easily implement internal integers in JavaScript. Multiplying two numbers stored internally as integers (which is only possible with AsmJS) with imul is the only potential circumstance where Math.imul may prove performant in current browsers.</source>
          <target state="translated">&lt;code&gt;Math.imul()&lt;/code&gt; допускает 32-битное целочисленное умножение с семантикой C-подобной. Эта функция полезна для таких проектов, как &lt;a href=&quot;http://en.wikipedia.org/wiki/Emscripten&quot;&gt;Emscripten&lt;/a&gt; . Поскольку &lt;code&gt;imul()&lt;/code&gt; представляет собой статический метод из &lt;code&gt;Math&lt;/code&gt; , Вы всегда используете его как &lt;code&gt;Math.imul()&lt;/code&gt; , а не как метод &lt;code&gt;Math&lt;/code&gt; объекта, созданный ( &lt;code&gt;Math&lt;/code&gt; не является конструктором). Если вы используете в imul обычные числа с плавающей запятой JavaScript, вы испытаете снижение производительности. Это происходит из-за дорогостоящего преобразования из числа с плавающей запятой в целое число для умножения, а затем преобразования умноженного целого числа обратно в число с плавающей запятой. Причина, по которой imul существует, заключается в том, что он быстрее только в одном (пока) обстоятельстве: AsmJS. AsmJS позволяет JIST-оптимизаторам более легко реализовать внутренние целые числа в JavaScript. Умножение двух чисел, хранящихся внутри как целые числа (что возможно только с AsmJS), на imul - единственное потенциальное обстоятельство, при котором Math.imul может оказаться эффективным в текущих браузерах.</target>
        </trans-unit>
        <trans-unit id="bf70bf8c3da6f3b076bf5d954b331a7c10f7b309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.log1p&lt;/code&gt; may also have to be polyfilled; see &lt;a href=&quot;log1p&quot;&gt;Math.log1p&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e190daf89959e7871e7b6b5951cf74fc9d783a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.min()&lt;/code&gt; is often used to clip a value so that it is always less than or equal to a boundary. For instance, this</source>
          <target state="translated">&lt;code&gt;Math.min()&lt;/code&gt; часто используется для обрезки значения, чтобы оно всегда было меньше или равно границе. Например, это</target>
        </trans-unit>
        <trans-unit id="0651dcff17c1e704a772d61ec8c4700f697a0006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.random()&lt;/code&gt;&lt;em&gt;does not&lt;/em&gt; provide cryptographically secure random numbers. Do not use them for anything related to security. Use the Web Crypto API instead, and more precisely the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RandomSource/getRandomValues&quot;&gt;&lt;code&gt;window.crypto.getRandomValues()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;Math.random()&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; предоставляет криптографически безопасные случайные числа. Не используйте их ни для чего, связанного с безопасностью. Вместо этого используйте Web Crypto API, а точнее метод &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RandomSource/getRandomValues&quot;&gt; &lt;code&gt;window.crypto.getRandomValues()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64bc8ee2d3f73b32c8edb3a065497b5ecc220daf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math.random()&lt;/code&gt;&lt;em&gt;does not&lt;/em&gt; provide cryptographically secure random numbers. Do not use them for anything related to security. Use the Web Crypto API instead, and more precisely the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues&quot;&gt;&lt;code&gt;window.crypto.getRandomValues()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28917bb98c98a66481cdaea4a6725b931811b706" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math&lt;/code&gt; is a built-in object that has properties and methods for mathematical constants and functions. It&amp;rsquo;s not a function object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95822a9f4600d3fa0ae62a6c435caa678bb649dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math&lt;/code&gt; is a built-in object that has properties and methods for mathematical constants and functions. Not a function object.</source>
          <target state="translated">&lt;code&gt;Math&lt;/code&gt; - это встроенный объект, который имеет свойства и методы для математических констант и функций. Не функциональный объект.</target>
        </trans-unit>
        <trans-unit id="0e446ee8535cb8e95880ca018ff750027d302569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Math&lt;/code&gt; works with the &lt;a href=&quot;number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; type. It doesn't work with &lt;a href=&quot;bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cd3acb4a476bbff338277d7549d718c987b643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Memory()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ffd35b10bd0b6e9c0b2cc76654fa2a5107ed68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Memory&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;Memory&lt;/code&gt; Экземпляры памяти</target>
        </trans-unit>
        <trans-unit id="4725b15ca1c5ed1d6ec0bb57a59e940770274702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09818648bf65bb450f878315f5e3b4a6792d37da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; Экземпляры модуля</target>
        </trans-unit>
        <trans-unit id="9ca2a82b57690975f17141a6943191dd87af3928" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, divided by any negative value except &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, is &lt;a href=&quot;positive_infinity&quot;&gt;&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; , деленное на любое отрицательное значение, кроме &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; , равно &lt;a href=&quot;positive_infinity&quot;&gt; &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d9a5a069c8d5d8c0ff92afc1ec360a194365aadd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, divided by any positive value except &lt;a href=&quot;positive_infinity&quot;&gt;&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt;, is &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; , деленное на любое положительное значение, кроме &lt;a href=&quot;positive_infinity&quot;&gt; &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; &lt;/a&gt; , равно &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03e3277c88549dd5517a511556b8dd4a34ffe917" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;, divided by either &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; or &lt;a href=&quot;positive_infinity&quot;&gt;&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt;, is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; , деленное на &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; или &lt;a href=&quot;positive_infinity&quot;&gt; &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; &lt;/a&gt; , равно &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1aed53a23cf732a01d3f8f1616323f24c81e9467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NFC&lt;/code&gt; &amp;mdash; Normalization Form Canonical Composition.</source>
          <target state="translated">&lt;code&gt;NFC&lt;/code&gt; - нормализация формы канонической композиции.</target>
        </trans-unit>
        <trans-unit id="aefdfca995a5c3358970ae35e74a52c6908211f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NFD&lt;/code&gt; &amp;mdash; Normalization Form Canonical Decomposition.</source>
          <target state="translated">&lt;code&gt;NFD&lt;/code&gt; - Каноническая декомпозиция формы нормализации.</target>
        </trans-unit>
        <trans-unit id="0cef8f1d2d1df7b44adaf9efe1e591c487abb5d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NFKC&lt;/code&gt; &amp;mdash; Normalization Form Compatibility Composition.</source>
          <target state="translated">&lt;code&gt;NFKC&lt;/code&gt; - Композиция совместимости форм нормализации.</target>
        </trans-unit>
        <trans-unit id="1a0524020fef998da4773aad160c354b21d7f22a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NFKD&lt;/code&gt; &amp;mdash; Normalization Form Compatibility Decomposition.</source>
          <target state="translated">&lt;code&gt;NFKD&lt;/code&gt; - Нормализация совместимости форм.</target>
        </trans-unit>
        <trans-unit id="bf3ea7fc9cefcbece612900ee2442560cc60defe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; can also be used as a key. Even though every &lt;code&gt;NaN&lt;/code&gt; is not equal to itself (&lt;code&gt;NaN !== NaN&lt;/code&gt; is true), the following example works because &lt;code&gt;NaN&lt;/code&gt;s are indistinguishable from each other:</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; также можно использовать как ключ. Несмотря на то, что каждый &lt;code&gt;NaN&lt;/code&gt; не равен самому себе ( &lt;code&gt;NaN !== NaN&lt;/code&gt; истинно), следующий пример работает, потому что &lt;code&gt;NaN&lt;/code&gt; неотличимы друг от друга:</target>
        </trans-unit>
        <trans-unit id="a70c5bba79474ee06cb3b3cd2fca4d23cf4d3de2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; compares unequal (via &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, and &lt;code&gt;!==&lt;/code&gt;) to any other value -- including to another &lt;code&gt;NaN&lt;/code&gt; value. Use &lt;a href=&quot;number/isnan&quot;&gt;&lt;code&gt;Number.isNaN()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;isnan&quot;&gt;&lt;code&gt;isNaN()&lt;/code&gt;&lt;/a&gt; to most clearly determine whether a value is &lt;code&gt;NaN&lt;/code&gt;. Or perform a self-comparison: &lt;code&gt;NaN&lt;/code&gt;, and only &lt;code&gt;NaN&lt;/code&gt;, will compare unequal to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deab52786b21a86072697583a5ba813e578f3de6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; compares unequal (via &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;!=&lt;/code&gt;, &lt;code&gt;===&lt;/code&gt;, and &lt;code&gt;!==&lt;/code&gt;) to any other value -- including to another NaN value. Use &lt;a href=&quot;number/isnan&quot;&gt;&lt;code&gt;Number.isNaN()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;isnan&quot;&gt;&lt;code&gt;isNaN()&lt;/code&gt;&lt;/a&gt; to most clearly determine whether a value is NaN. Or perform a self-comparison: NaN, and only NaN, will compare unequal to itself.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; сравнивает неравное ( с помощью &lt;code&gt;==&lt;/code&gt; , &lt;code&gt;!=&lt;/code&gt; , &lt;code&gt;===&lt;/code&gt; и &lt;code&gt;!==&lt;/code&gt; ) В любое другое значение - в том числе и на другое значение NaN. Используйте &lt;a href=&quot;number/isnan&quot;&gt; &lt;code&gt;Number.isNaN()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;isnan&quot;&gt; &lt;code&gt;isNaN()&lt;/code&gt; &lt;/a&gt; чтобы наиболее четко определить, является ли значение NaN. Или выполните самосравнение: NaN и только NaN будут сравнивать себя неравно.</target>
        </trans-unit>
        <trans-unit id="0b88d9c66d6240394cb3095b6dfc791dbfa0fd4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; is a property of the &lt;em&gt;global object&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; - это свойство &lt;em&gt;глобального объекта&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6a5780d3e1049bb0db8be1c5dab6dbfa6d11212e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; is a property of the &lt;em&gt;global object&lt;/em&gt;. In other words, it is a variable in global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e3f2b7ca75dcbf8fe405a2df8910f266da1607" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; values are generated when arithmetic operations result in &lt;em&gt;undefined&lt;/em&gt; or &lt;em&gt;unrepresentable&lt;/em&gt; values. Such values do not necessarily represent overflow conditions. A &lt;code&gt;NaN&lt;/code&gt; also results from attempted coercion to numeric values of non-numeric values for which no primitive numeric value is available.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; Значения NaN генерируются, когда арифметические операции приводят к &lt;em&gt;неопределенным&lt;/em&gt; или &lt;em&gt;непредставимым&lt;/em&gt; значениям. Такие значения не обязательно представляют условия переполнения. &lt;code&gt;NaN&lt;/code&gt; также является результат попытки принуждения к числовым значениям не-числовых значений , для которых не примитивных числовых значений не доступны.</target>
        </trans-unit>
        <trans-unit id="8698d16b49f0fe93fcc90ecd5a36ccc0c5623db7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c798758854594309c025414c7607745062fa79f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number.MIN_VALUE&lt;/code&gt; is &lt;code&gt;5e-324&lt;/code&gt;, i.e. the smallest positive number that can be represented within float precision, i.e. that's as close as you can get to zero. Values smaller than &lt;code&gt;MIN_VALUE&lt;/code&gt; (&quot;underflow values&quot;) are converted to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cb340c2033aa11e0e7e675fa69ea76928a5cdbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; экземпляров</target>
        </trans-unit>
        <trans-unit id="a3f82156d866753edd6dfcd499f5ce12e4c9980e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number&lt;/code&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive#Primitive_wrapper_objects_in_JavaScript&quot;&gt;primitive wrapper object&lt;/a&gt; used to represent and manipulate numbers like &lt;code&gt;37&lt;/code&gt; or &lt;code&gt;-9.25&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f67156eb4019a290fb016ef4e691235840f5029a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number&lt;/code&gt;: &lt;a href=&quot;../number/tolocalestring&quot;&gt;&lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; : &lt;a href=&quot;../number/tolocalestring&quot;&gt; &lt;code&gt;Number.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d842f2b08055813e139ebf0b5c3617888c210b14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; экземпляры</target>
        </trans-unit>
        <trans-unit id="34769652aa34093f9c08e7ef970909ba62cbb1e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; instances inherit the following methods from their prototype:</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; наследуют от своего прототипа следующие методы:</target>
        </trans-unit>
        <trans-unit id="377b596939f39bf7eb0c7cb9f88ae3a61617d06b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; instances inherit the following properties from their prototype:</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; наследуют от своего прототипа следующие свойства:</target>
        </trans-unit>
        <trans-unit id="76ca0a0d36ea66ea594e0d9ab86b24dacd583933" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; outputs localized, opaque strings that cannot be manipulated directly:</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; выводит локализованные непрозрачные строки, которыми нельзя управлять напрямую:</target>
        </trans-unit>
        <trans-unit id="13109e15641430c48a9590fb201d669fb63ee7aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b5dff67d51b9ec1c5d1504caea6a1cda4aedc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.defineProperties&lt;/code&gt;, in essence, defines all properties corresponding to the enumerable own properties of &lt;code&gt;props&lt;/code&gt; on the object &lt;code&gt;obj&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Object.defineProperties&lt;/code&gt; , по сути, определяет все свойства, соответствующие перечисляемым собственным свойствам &lt;code&gt;props&lt;/code&gt; на объекте объекта &lt;code&gt;obj&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94a2599652b8e7a62613e83cefea75ec321bf6b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.entries()&lt;/code&gt; returns an array whose elements are arrays corresponding to the enumerable property &lt;code&gt;[key, value]&lt;/code&gt; pairs found directly upon &lt;code&gt;object&lt;/code&gt;. The ordering of the properties is the same as that given by looping over the property values of the object manually.</source>
          <target state="translated">&lt;code&gt;Object.entries()&lt;/code&gt; возвращает массив, элементами которого являются массивы, соответствующие перечисляемым парам свойств &lt;code&gt;[key, value]&lt;/code&gt; найденным непосредственно на &lt;code&gt;object&lt;/code&gt; . Порядок свойств такой же, как при ручном обходе значений свойств объекта.</target>
        </trans-unit>
        <trans-unit id="b7c387c984d73cdf236970025ac1943f2502e4f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.entries()&lt;/code&gt; returns an array whose elements are arrays corresponding to the enumerable string-keyed property &lt;code&gt;[&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;]&lt;/code&gt; pairs found directly upon &lt;code&gt;object&lt;/code&gt;. The ordering of the properties is the same as that given by looping over the property values of the object manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40fbd715a89dd871124c69df74ec60374407397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.fromEntries()&lt;/code&gt; performs the reverse of &lt;a href=&quot;entries&quot;&gt;&lt;code&gt;Object.entries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Object.fromEntries()&lt;/code&gt; выполняет обратную &lt;a href=&quot;entries&quot;&gt; &lt;code&gt;Object.entries()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0b5db9f890cafea46cfa59ec58bfa9f320c814c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; returns an array whose elements are strings corresponding to the enumerable &lt;em&gt;and non-enumerable&lt;/em&gt; properties found directly upon &lt;code&gt;obj&lt;/code&gt;. The ordering of the enumerable properties in the array is consistent with the ordering exposed by a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop (or by &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt;) over the properties of the object. The ordering of the non-enumerable properties in the array, and among the enumerable properties, is not defined.</source>
          <target state="translated">&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; возвращает массив, элементы которого являются строками, соответствующими перечислимым &lt;em&gt;и неперечислимым&lt;/em&gt; свойствам, найденным непосредственно в &lt;code&gt;obj&lt;/code&gt; . Порядок перечисляемых свойств в массиве согласуется с порядком, предоставляемым циклом &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; (или &lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Object.keys()&lt;/code&gt; &lt;/a&gt; ) над свойствами объекта. Порядок неперечислимых свойств в массиве и среди перечислимых свойств не определен.</target>
        </trans-unit>
        <trans-unit id="118ece4d5f880b8e4add7768a011a7fab44b5a91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; returns an array whose elements are strings corresponding to the enumerable and non-enumerable properties found directly in a given object &lt;code&gt;&lt;var&gt;obj&lt;/var&gt;&lt;/code&gt;. The ordering of the enumerable properties in the array is consistent with the ordering exposed by a &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop (or by &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Object.keys()&lt;/code&gt;&lt;/a&gt;) over the properties of the object. According to ES6, the integer keys of the object (both enumerable and non-enumerable) are added in ascending order to the array first, followed by the string keys in the order of insertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f064df4675406d577e7f66f771574299c010d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.is()&lt;/code&gt; determines whether two values are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;the same value&lt;/a&gt;. Two values are the same if one of the following holds:</source>
          <target state="translated">&lt;code&gt;Object.is()&lt;/code&gt; определяет, являются ли два значения &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;одним и тем же значением&lt;/a&gt; . Два значения совпадают, если выполняется одно из следующих условий:</target>
        </trans-unit>
        <trans-unit id="3e427f28fbab3aa8e470ec28df4afbaf7e7795bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.is()&lt;/code&gt; determines whether two values are &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness&quot;&gt;the same value&lt;/a&gt;. Two values are the same if one of the following holds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77508a2284c935505a15ed0f03b6ce0ec32778c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.isExtensible(proxy)&lt;/code&gt; must return the same value as &lt;code&gt;Object.isExtensible(target)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Object.isExtensible(proxy)&lt;/code&gt; должен возвращать то же значение, что и &lt;code&gt;Object.isExtensible(target)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbe59d99537dc4af1b79388ebb143c010f86aab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.keys()&lt;/code&gt; returns an array whose elements are strings corresponding to the enumerable properties found directly upon &lt;code&gt;object&lt;/code&gt;. The ordering of the properties is the same as that given by looping over the properties of the object manually.</source>
          <target state="translated">&lt;code&gt;Object.keys()&lt;/code&gt; возвращает массив, элементы которого являются строками, соответствующими перечислимым свойствам, найденным непосредственно у &lt;code&gt;object&lt;/code&gt; . Порядок свойств такой же, как при ручном цикле перебора свойств объекта.</target>
        </trans-unit>
        <trans-unit id="c5c4e7bfe3f6de29f45845228f477545e9738ebe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.preventExtensions()&lt;/code&gt; only prevents addition of own properties. Properties can still be added to the object prototype.</source>
          <target state="translated">&lt;code&gt;Object.preventExtensions()&lt;/code&gt; предотвращает только добавление собственных свойств. К прототипу объекта по-прежнему можно добавлять свойства.</target>
        </trans-unit>
        <trans-unit id="33d843ac0aa426a5133fd2436e7e601dd94c0fa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.preventExtensions(proxy)&lt;/code&gt; only returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;Object.isExtensible(proxy)&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Object.preventExtensions(proxy)&lt;/code&gt; возвращает &lt;code&gt;true&lt;/code&gt; , только если &lt;code&gt;Object.isExtensible(proxy)&lt;/code&gt; имеет значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b946c5927bb591acf9393952a5c14efb18bcf4ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; is in the ECMAScript 2015 specification. It is generally considered the proper way to set the prototype of an object, vs. the more controversial &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;Object.prototype.__proto__&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; находится в спецификации ECMAScript 2015. Обычно это считается правильным способом установки прототипа объекта по сравнению с более спорным свойством &lt;a href=&quot;proto&quot;&gt; &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d87c1851f78e910756e6741bd628fac708509ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object.values()&lt;/code&gt; returns an array whose elements are the enumerable property values found on the object. The ordering of the properties is the same as that given by looping over the property values of the object manually.</source>
          <target state="translated">&lt;code&gt;Object.values()&lt;/code&gt; возвращает массив, элементы которого являются значениями перечислимых свойств объекта. Порядок свойств такой же, как при ручном обходе значений свойств объекта.</target>
        </trans-unit>
        <trans-unit id="2525f02b3e1c3cb7023532b04c9f39b17b86a47c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; instances and &lt;code&gt;Object&lt;/code&gt; prototype object</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; Экземпляры объектов и &lt;code&gt;Object&lt;/code&gt; прототип объекта</target>
        </trans-unit>
        <trans-unit id="c60905a4d4b9d5726e0b58cbef176a723a644ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt;: &lt;a href=&quot;../object/tolocalestring&quot;&gt;&lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; : &lt;a href=&quot;../object/tolocalestring&quot;&gt; &lt;code&gt;Object.prototype.toLocaleString()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e9c7f8bbdabc1ea944f9d5966a3150769d5998e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, divided by any negative value except &lt;a href=&quot;negative_infinity&quot;&gt;&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;&lt;/a&gt;, is &lt;a href=&quot;negative_infinity&quot;&gt;&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , деленное на любое отрицательное значение, кроме &lt;a href=&quot;negative_infinity&quot;&gt; &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; &lt;/a&gt; , равно &lt;a href=&quot;negative_infinity&quot;&gt; &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04e445a9260f94d24607c1c5d8a72f9ffca1e717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, divided by any positive value except &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, is &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , деленное на любое положительное значение, кроме &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , равно &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff256e7e23ca1d80777bf5a5c3b7ae449c2c048" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, divided by either &lt;a href=&quot;negative_infinity&quot;&gt;&lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt;, is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , деленное на &lt;a href=&quot;negative_infinity&quot;&gt; &lt;code&gt;NEGATIVE_INFINITY&lt;/code&gt; &lt;/a&gt; или &lt;code&gt;POSITIVE_INFINITY&lt;/code&gt; , равно &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55b5fff9b395ab1dcfd9539e7aee993be9fdf420" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PluralRules&lt;/code&gt; instances inherit the following methods from their prototype:</source>
          <target state="translated">&lt;code&gt;PluralRules&lt;/code&gt; наследуют от своего прототипа следующие методы:</target>
        </trans-unit>
        <trans-unit id="82703d16f2081e2d72446cf7d19775b6faacbbed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PluralRules&lt;/code&gt; instances inherit the following properties from their prototype:</source>
          <target state="translated">&lt;code&gt;PluralRules&lt;/code&gt; наследуют следующие свойства от своего прототипа:</target>
        </trans-unit>
        <trans-unit id="bedf737d9637942cc912fa1f169351a71d36a6ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise()&lt;/code&gt; constructor</source>
          <target state="translated">&lt;code&gt;Promise()&lt;/code&gt; Конструктор Promise ()</target>
        </trans-unit>
        <trans-unit id="de504afa9f2aa80378546578e789706d03a6bfef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.all()&lt;/code&gt; will reject immediately upon &lt;strong&gt;any &lt;/strong&gt;of the input promises rejecting. In comparison, the promise returned by &lt;a href=&quot;allsettled&quot;&gt;&lt;code&gt;Promise.allSettled()&lt;/code&gt;&lt;/a&gt; will wait for all input promises to complete, regardless of whether or not one rejects. Consequently, it will always return the final result of every promise and function from the input iterable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ec4910ed70333ab471ee21bb61ba62ed12e54f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.all&lt;/code&gt; fail-fast behaviour</source>
          <target state="translated">&lt;code&gt;Promise.all&lt;/code&gt; безотказное поведение</target>
        </trans-unit>
        <trans-unit id="ce6d2cf289580390a0516fe84e542dafae930633" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.all&lt;/code&gt; is rejected if any of the elements are rejected. For example, if you pass in four promises that resolve after a timeout and one promise that rejects immediately, then &lt;code&gt;Promise.all&lt;/code&gt; will reject immediately.</source>
          <target state="translated">&lt;code&gt;Promise.all&lt;/code&gt; отклоняется, если отклоняется какой-либо из элементов. Например, если вы передадите четыре обещания, которые разрешаются после тайм-аута, и одно обещание, которое отклоняется немедленно, то &lt;code&gt;Promise.all&lt;/code&gt; немедленно отклонит.</target>
        </trans-unit>
        <trans-unit id="1779f1ce3e076528fe29025eec8de433c0f320e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Promise.all&lt;/code&gt; waits for all fulfillments (or the first rejection).</source>
          <target state="translated">&lt;code&gt;Promise.all&lt;/code&gt; ждет всех выполнений (или первого отказа).</target>
        </trans-unit>
        <trans-unit id="a625dd03d23e3099e19df92140494934737b67c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8103b45ff17330ca30e0658080a58009174f1b97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeError()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4343fae7508efe378b1bd8618bc224a943f270" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RangeError&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;RangeError&lt;/code&gt; экземпляры</target>
        </trans-unit>
        <trans-unit id="240f68857cb2a56a74e6bdf920bb36e5ff9c3a28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReferenceError()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d89dab2fd0357de6930904b7a38260826a206f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReferenceError&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;ReferenceError&lt;/code&gt; экземпляры</target>
        </trans-unit>
        <trans-unit id="fd0fdfd7cced3dc672976ed442f8f44890b2f0e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reflect.construct()&lt;/code&gt; allows you to invoke a constructor with a variable number of arguments. (This would also be possible by using the &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;spread syntax&lt;/a&gt; combined with the &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; operator&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fdd1b07f271312217740c97b19c393e76ea995" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reflect.construct()&lt;/code&gt; vs &lt;code&gt;Object.create()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Reflect.construct()&lt;/code&gt; против &lt;code&gt;Object.create()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0005212f36f3af64abe52dfbde826f99406f9b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reflect.construct&lt;/code&gt; allows you to invoke a constructor with a variable number of arguments (which would also be possible by using the &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;spread operator&lt;/a&gt; combined with the &lt;a href=&quot;../../operators/new&quot;&gt;new operator&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;Reflect.construct&lt;/code&gt; позволяет вызывать конструктор с переменным числом аргументов (что также возможно при использовании &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;оператора распространения в&lt;/a&gt; сочетании с &lt;a href=&quot;../../operators/new&quot;&gt;оператором new&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a08fe7a7d6107a9ec2388db5830e7f61fe4ddc23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reflect.has&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; for any inherited properties, like the &lt;a href=&quot;../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt; operator&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea23ab9b01d0cfe7defbb0a6803b803f616e4457" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d13e5e6e3252272976e4077c65e96a0381bce7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp.input&lt;/code&gt; (&lt;code&gt;$_&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;RegExp.input&lt;/code&gt; ( &lt;code&gt;$_&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c5a6e56004d43ed90f7662c7348f8eafbb851351" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp.lastMatch&lt;/code&gt; (&lt;code&gt;$&amp;amp;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;RegExp.lastMatch&lt;/code&gt; ( &lt;code&gt;$&amp;amp;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e82214b185df399209fe38a4c764e6638f8fa6d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp.lastParen&lt;/code&gt; (&lt;code&gt;$+&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;RegExp.lastParen&lt;/code&gt; ( &lt;code&gt;$+&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fe1706da132a2dc4ca5f40ca1cdad320ab2745c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp.leftContext&lt;/code&gt; (&lt;code&gt;$`&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;RegExp.leftContext&lt;/code&gt; ( &lt;code&gt;$`&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="22bdaf6cf0e6c7e8e144ef9cf93d72f4dd25dfc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp.rightContext&lt;/code&gt; (&lt;code&gt;$'&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;RegExp.rightContext&lt;/code&gt; ( &lt;code&gt;$'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="901e3ed9a19c003ba09bea4a74e0e24ea6e4b83c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegExp&lt;/code&gt; prototype objects and instances</source>
          <target state="translated">&lt;code&gt;RegExp&lt;/code&gt; Объекты и экземпляры прототипа RegExp</target>
        </trans-unit>
        <trans-unit id="ab009d3d930769a6206411674e56ca868feae25b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuntimeError()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201f1da8c9bcadca98b84682cba79b6f3b42a6ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Seal&lt;/code&gt;-ed Arrays</source>
          <target state="translated">&lt;code&gt;Seal&lt;/code&gt; -ed Массивы</target>
        </trans-unit>
        <trans-unit id="03afb3a1eb7aa8f96f2bb19e4cc53c5861633315" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61f06a37cebf33215f3a9cb8335e9f3c14d9519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Set()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="d6a80c9b6ae5f4647c03a1658debdf4e0a4b0021" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; экземпляры</target>
        </trans-unit>
        <trans-unit id="1f92b81cefbafeaa8650e7c3eefc1944acf4c0de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set&lt;/code&gt; objects are collections of values. You can iterate through the elements of a set in insertion order. A value in the &lt;code&gt;Set&lt;/code&gt;&lt;strong&gt;may only occur once&lt;/strong&gt;; it is unique in the &lt;code&gt;Set&lt;/code&gt;'s collection.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; объекты коллекции значений. Вы можете перебирать элементы набора в порядке вставки. Значение в &lt;code&gt;Set&lt;/code&gt; &lt;strong&gt;может встречаться только один раз&lt;/strong&gt; ; он единственный в коллекции &lt;code&gt;Set&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9fce2994959b0a2cf78e24f9571af7a693d7743a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SharedArrayBuffer()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eb5ecf3461603f67c3f67cd2f47b959b3a673c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SharedArrayBuffer&lt;/code&gt; accepted as buffer</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer&lt;/code&gt; принят как буфер</target>
        </trans-unit>
        <trans-unit id="2fe9d5dcf0aaf6b3ed3111d726e2acaa0c80ed81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SharedArrayBuffer&lt;/code&gt; constructors are required to be constructed with a &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator. Calling a &lt;code&gt;SharedArrayBuffer&lt;/code&gt; constructor as a function without &lt;code&gt;new&lt;/code&gt; will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer&lt;/code&gt; должны быть созданы с помощью &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператора. Вызов конструктора &lt;code&gt;SharedArrayBuffer&lt;/code&gt; как функции без &lt;code&gt;new&lt;/code&gt; вызовет &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="694c118c1629579f247a93ffc7fd668d97bb1cc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SharedArrayBuffer&lt;/code&gt; in &lt;code&gt;DataView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer&lt;/code&gt; в &lt;code&gt;DataView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ade1b689bf7cf96d39fcd871aa0d1d63000489bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SharedArrayBuffer&lt;/code&gt; instances inherit from &lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt;. As with all constructors, you can change the constructor's prototype object to make changes to all &lt;code&gt;SharedArrayBuffer&lt;/code&gt; instances.</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer&lt;/code&gt; наследуются от &lt;code&gt;SharedArrayBuffer.prototype&lt;/code&gt; . Как и во всех конструкторах, вы можете изменить объект-прототип конструктора, чтобы внести изменения во все экземпляры &lt;code&gt;SharedArrayBuffer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8fc56ca15d004263ba5b1f48fa789e9512d92a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SharedArrayBuffer&lt;/code&gt; prototype object</source>
          <target state="translated">&lt;code&gt;SharedArrayBuffer&lt;/code&gt; прототипа SharedArrayBuffer</target>
        </trans-unit>
        <trans-unit id="358db96534e930da46d15248e0771ea729f9e3cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541fe17ffc5feb6b770cbfd3fc0d4488e46ffbe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String.fromCodePoint()&lt;/code&gt;, on the other hand, can return 4-byte supplementary characters, as well as the more common 2-byte BMP characters, by specifying their code point (which is equivalent to the UTF-32 code unit):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026c37320625e09f6db4af1c40c338f8c8a2154f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String.raw()&lt;/code&gt; is the only built-in tag function of template strings. It works just like the default template function and performs concatenation. You can even re-implement it with normal JavaScript code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5b052c278a476ba803b4b1ad945f01d09c6da3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String.raw()&lt;/code&gt; is the only built-in tag function of template strings; it works just like the default template function and performs concatenation. You can even re-implement it with normal JavaScript code.</source>
          <target state="translated">&lt;code&gt;String.raw()&lt;/code&gt; - единственная встроенная функция тега строк шаблона; он работает так же, как функция шаблона по умолчанию, и выполняет конкатенацию. Вы даже можете повторно реализовать его с помощью обычного кода JavaScript.</target>
        </trans-unit>
        <trans-unit id="3d311077157d6496d82bad21613ee0fd7f94d723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; generic methods</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; универсальные методы</target>
        </trans-unit>
        <trans-unit id="957f6d3c2e44b0fd76092286d9bef8d94dd4f558" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; Экземпляры строк</target>
        </trans-unit>
        <trans-unit id="ee2f64a7a60e1d8dda64b274f58d0013d5a297a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt;'s &lt;a href=&quot;global_objects/string/@@iterator&quot;&gt;default iterator&lt;/a&gt; returns the string's code points one by one:</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; и т.п. &amp;laquo;сек по &lt;a href=&quot;global_objects/string/@@iterator&quot;&gt;умолчанию итератора&lt;/a&gt; возвращает код точки струны один за другим:</target>
        </trans-unit>
        <trans-unit id="7ec85924b7b04029cd624feab4237ad86df2247d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringView&lt;/code&gt; &amp;mdash; a C-like representation of strings based on typed arrays</source>
          <target state="translated">&lt;code&gt;StringView&lt;/code&gt; - C-подобное представление строк на основе типизированных массивов</target>
        </trans-unit>
        <trans-unit id="60b4ae79f4c4ca3aa84db8f03aebcd14d7363410" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol(&quot;foo&quot;) + &quot;bar&quot; &lt;/code&gt;throws a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (can't convert symbol to string). This prevents you from silently creating a new string property name from a symbol, for example.</source>
          <target state="translated">&lt;code&gt;Symbol(&quot;foo&quot;) + &quot;bar&quot; &lt;/code&gt; выдает &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; (невозможно преобразовать символ в строку). Это не позволяет, например, автоматически создать новое имя строкового свойства из символа.</target>
        </trans-unit>
        <trans-unit id="1dc1e462828d4f605f5aeaf3ce482a9527bc0e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a9b316ef591a13d2301c578627b2a8184b49b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Symbol&lt;/code&gt; prototype</source>
          <target state="translated">&lt;code&gt;Symbol&lt;/code&gt; Прототип символа</target>
        </trans-unit>
        <trans-unit id="963a6c546f50b738589289258a5c772502b63d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyntaxError()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0fbdd60d6177c53a5d8b524c88338047bd6ece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyntaxError&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;SyntaxError&lt;/code&gt; экземпляры</target>
        </trans-unit>
        <trans-unit id="393e41ca447aa46f70bfc53773c21010f27a3781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyntaxError&lt;/code&gt;s are also generated in the following code examples which use &lt;code&gt;break&lt;/code&gt; statements within functions that are nested within a loop, or labeled block that the &lt;code&gt;break&lt;/code&gt; statements are intended to break out of.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c162c221ac4fb83c72b25ffbbfe5b1ffd6e42b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Table()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a1df3ead8a0aeaa592ae24a0b035af0bc7189d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Table&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;Table&lt;/code&gt; Экземпляры таблиц</target>
        </trans-unit>
        <trans-unit id="a62bcbcff4c2e0bcb718fd7779a3dfd5bc4bf567" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypeError()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185c2de94de6aeb9761d5ba13e0e86b799e248a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypeError&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;TypeError&lt;/code&gt; Экземпляры TypeError</target>
        </trans-unit>
        <trans-unit id="d2fb3b3a17d823468e0d9433cfcedb993264cf7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypedArray()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;TypedArray()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="773caa00fe82d64d0260e842b2fc9e4d6cb87400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypedArray.from()&lt;/code&gt; uses &lt;code&gt;[[Put]]&lt;/code&gt; where &lt;code&gt;Array.from()&lt;/code&gt; uses &lt;code&gt;[[DefineProperty]]&lt;/code&gt;. Hence, when working with &lt;a href=&quot;../proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; objects, it calls &lt;a href=&quot;../proxy/proxy/set&quot;&gt;&lt;code&gt;handler.set&lt;/code&gt;&lt;/a&gt; to create new elements rather than &lt;a href=&quot;../proxy/proxy/defineproperty&quot;&gt;&lt;code&gt;handler.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b4bd4bfbd2ade293baa6571fc777f0c72400e9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypedArray&lt;/code&gt; objects differ from each other in the number of bytes per element and in the way the bytes are interpreted. The &lt;code&gt;BYTES_PER_ELEMENT&lt;/code&gt; constant contains the number of bytes each element in the given &lt;code&gt;TypedArray&lt;/code&gt; has.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf82f0112a728b3aa1d32123c6535a3162ee9df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TypedArray&lt;/code&gt; objects differ from each other in the number of bytes per element and in the way the bytes are interpreted. The &lt;code&gt;name&lt;/code&gt; property describes of what data type the array consists. The first part can be &lt;code&gt;Int&lt;/code&gt; for &quot;integer&quot; or &lt;code&gt;Uint&lt;/code&gt; for an &quot;unsigned integer&quot;, also &lt;code&gt;Float&lt;/code&gt; for &quot;floating point&quot; is used. The second part is a number describing the bit-size of the array. Finally, the object type is &lt;code&gt;Array&lt;/code&gt;, with &lt;code&gt;ClampedArray&lt;/code&gt; as a special case. Please see &lt;a href=&quot;../uint8clampedarray&quot;&gt;&lt;code&gt;Uint8ClampedArray&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447d6374256296bf26fbc7b786c5e3f68e621761" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Typeof&lt;/code&gt; operator and &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Typeof&lt;/code&gt; Оператор typeof и &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ce41596ac632d894d8222e798b826827610096c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;URIError()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9346949e2074624e5362d491abdd876543e6023f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;URIError&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;URIError&lt;/code&gt; экземпляры</target>
        </trans-unit>
        <trans-unit id="485d7b1ee3239b11791f99a4347c824bc0ab2f7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UTC()&lt;/code&gt; is a static method of &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;, so it's called as &lt;code&gt;Date.UTC()&lt;/code&gt; rather than as a method of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">&lt;code&gt;UTC()&lt;/code&gt; - это статический метод &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; , поэтому он называется &lt;code&gt;Date.UTC()&lt;/code&gt; а не как метод экземпляра &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bda763fc1cf6d424a141aa626488983c45c2ca10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UTC()&lt;/code&gt; takes comma-delimited date and time parameters and returns the number of milliseconds between January 1, 1970, 00:00:00, universal time and the specified date and time.</source>
          <target state="translated">&lt;code&gt;UTC()&lt;/code&gt; принимает параметры даты и времени, разделенные запятыми, и возвращает количество миллисекунд между 1 января 1970 г., 00:00:00 по всемирному координированному времени и указанными датой и временем.</target>
        </trans-unit>
        <trans-unit id="54a0222ec25be2720a01373f3636d2978b84d8ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint16Array()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6e7a5ffdffc9021c092c72ccaaba4f2e64fcbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint16Array()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Uint16Array()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="74a1d80e3e57591d71e2205e004d0d02d85276bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint16Array&lt;/code&gt; prototype</source>
          <target state="translated">&lt;code&gt;Uint16Array&lt;/code&gt; Прототип Uint16Array</target>
        </trans-unit>
        <trans-unit id="4c8e814c6371a0758d623c702025602fcc5928a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint32Array()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611ad5dd041251513f59b98b814862ef0c0f3509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint32Array()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Uint32Array()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="4a55b60c159dc73bd9dcc8397e5cd20dda0d1c0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint32Array&lt;/code&gt; prototype</source>
          <target state="translated">&lt;code&gt;Uint32Array&lt;/code&gt; Прототип Uint32Array</target>
        </trans-unit>
        <trans-unit id="57d26d5791c35dfbe491dd5db9baad164e3b864a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint8Array()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1b499796aa64d7c04a80ed44405eed3064fc43f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint8Array()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Uint8Array()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="31e72035046a0e9477a2259121e9a3e0b40f17b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint8Array&lt;/code&gt; prototype</source>
          <target state="translated">&lt;code&gt;Uint8Array&lt;/code&gt; Прототип Uint8Array</target>
        </trans-unit>
        <trans-unit id="c972df39997b34a6c0310e46ef259e0f5a1b5f11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint8ClampedArray()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6957e8798c1c746c336c6d6ecaaa7eb1ae361dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint8ClampedArray()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;Uint8ClampedArray()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="0bb1807b874692b9f5f2ec19b59c221125cfb6c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Uint8ClampedArray&lt;/code&gt; prototype</source>
          <target state="translated">&lt;code&gt;Uint8ClampedArray&lt;/code&gt; Прототип Uint8ClampedArray</target>
        </trans-unit>
        <trans-unit id="3f4c761b5e2888241d269b969f3a10984c07eca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Void&lt;/code&gt; operator and &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Void&lt;/code&gt; Оператор пустоты и &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d0c1e4954b2e20c960af9358f0e0212b5bd5e971" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakMap()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2a9fa90f329749427e6240e67bc971f9b9b621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakMap()&lt;/code&gt; without &lt;code&gt;new&lt;/code&gt; throws</source>
          <target state="translated">&lt;code&gt;WeakMap()&lt;/code&gt; без &lt;code&gt;new&lt;/code&gt; бросков</target>
        </trans-unit>
        <trans-unit id="06853438c8ea15de5f6857455ca09cd186bdf823" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakMap.prototype&lt;/code&gt; is itself just an ordinary object:</source>
          <target state="translated">&lt;code&gt;WeakMap.prototype&lt;/code&gt; сам по себе является обычным объектом:</target>
        </trans-unit>
        <trans-unit id="5bff6adc35bafe83014779e372f5ec78848dbe3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakMap&lt;/code&gt; There is no method to obtain a list of the keys. If they were, the list would depend on the state of garbage collection, introducing non-determinism. If you want to have a list of keys, you should use a &lt;a href=&quot;map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87d565c959998a4bd024f99645ab8acaa498666" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakMap&lt;/code&gt; and &lt;code&gt;WeakSet&lt;/code&gt; objects require object keys</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; объектов WeakMap и &lt;code&gt;WeakSet&lt;/code&gt; требуются ключи объекта</target>
        </trans-unit>
        <trans-unit id="83c5e696b7470198277f00d16ad92acea89ede24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakMap&lt;/code&gt; in the JavaScript guide</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; в руководстве по JavaScript</target>
        </trans-unit>
        <trans-unit id="1ca5b9af4fe2a0160dd07e19c618f1c599524fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakMap&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;WeakMap&lt;/code&gt; экземпляры</target>
        </trans-unit>
        <trans-unit id="b000a344d761e25504218f9b82d55629f3e08ad3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakSet()&lt;/code&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dff1f18e6a87478f9e9d0096e88834d404f1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakSet.prototype&lt;/code&gt; is itself just an ordinary object:</source>
          <target state="translated">&lt;code&gt;WeakSet.prototype&lt;/code&gt; сам по себе является обычным объектом:</target>
        </trans-unit>
        <trans-unit id="fac397a4016c006f74ce6d33be39720720eb2ad6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakSet&lt;/code&gt; instances</source>
          <target state="translated">&lt;code&gt;WeakSet&lt;/code&gt; экземпляры</target>
        </trans-unit>
        <trans-unit id="059de5eafbc88297797b683bee1abb4c63f54a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakSet&lt;/code&gt; objects are collections of objects. An object in the &lt;code&gt;WeakSet&lt;/code&gt; may occur only once; it is unique in the &lt;code&gt;WeakSet&lt;/code&gt;'s collection.</source>
          <target state="translated">&lt;code&gt;WeakSet&lt;/code&gt; Объекты WeakSet - это коллекции объектов. Объект в &lt;code&gt;WeakSet&lt;/code&gt; может встречаться только один раз; он уникален в коллекции &lt;code&gt;WeakSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cfb49531f17908e2f314fe08aec439a3f5655b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakSet&lt;/code&gt; objects are collections of objects. Just as with &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;s, each object in a &lt;code&gt;WeakSet&lt;/code&gt; may occur only once; all objects in a &lt;code&gt;WeakSet&lt;/code&gt;'s collection are unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d481a1df4d52801b921dd1c0aaf64403ee49a864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakSet&lt;/code&gt;s are collections of &lt;strong&gt;objects only&lt;/strong&gt;. They cannot contain arbitrary values of any type, as &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt;s can.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c4fc1f2d33cc015027e7da4bb77347eb56df72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WeakSet&lt;/code&gt;s are ideal for this purpose:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d453c8b8014fa71df7de4e97471f2e8280d52f9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Writable&lt;/code&gt;: If this attribute set to &lt;code&gt;false&lt;/code&gt;, the value of the property cannot be changed.</source>
          <target state="translated">&lt;code&gt;Writable&lt;/code&gt; : если для этого атрибута установлено значение &lt;code&gt;false&lt;/code&gt; , значение свойства не может быть изменено.</target>
        </trans-unit>
        <trans-unit id="8edb0b191e85e764e4009acc85f62e49faf4a154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u&lt;var&gt;XXXX&lt;/var&gt;&lt;/code&gt; (where &lt;code&gt;&lt;var&gt;XXXX&lt;/var&gt;&lt;/code&gt; is 4 hex digits; range of &lt;code&gt;0x0000&lt;/code&gt;&amp;ndash;&lt;code&gt;0xFFFF&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca0ada46c2db337c3c466182bee5ed23890fa2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u{&lt;var&gt;X&lt;/var&gt;}&lt;/code&gt; ... &lt;code&gt;\u{&lt;var&gt;XXXXXX&lt;/var&gt;}&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1704a7be629607f350b16ec85790ba13cfee3a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u{X}&lt;/code&gt; ... &lt;code&gt;\u{XXXXXX}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u{X}&lt;/code&gt; ... &lt;code&gt;\u{XXXXXX}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76f51741e9c758f6ba3a4fcb94e013e1a8f04e7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\w&lt;/code&gt; and &lt;code&gt;\W&lt;/code&gt; only matches ASCII based characters; for example, &lt;code&gt;a&lt;/code&gt; to &lt;code&gt;z&lt;/code&gt;, &lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;, and &lt;code&gt;_&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb904c02769fb826a92f1daca094dc3a49ecb987" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply&lt;/code&gt; is very similar to &lt;a href=&quot;call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt;, except for the type of arguments it supports. You use an arguments array instead of a list of arguments (parameters). With &lt;code&gt;apply&lt;/code&gt;, you can also use an array literal, for example, &lt;code&gt;&lt;em&gt;func&lt;/em&gt;.apply(this, ['eat', 'bananas'])&lt;/code&gt;, or an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; object, for example, &lt;code&gt;&lt;em&gt;func&lt;/em&gt;.apply(this, new Array('eat', 'bananas'))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; очень похож на &lt;a href=&quot;call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt; , за исключением типа поддерживаемых аргументов. Вы используете массив аргументов вместо списка аргументов (параметров). С помощью &lt;code&gt;apply&lt;/code&gt; вы также можете использовать литерал массива, например &lt;code&gt;&lt;em&gt;func&lt;/em&gt;.apply(this, ['eat', 'bananas'])&lt;/code&gt; , или объект &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , например &lt;code&gt;&lt;em&gt;func&lt;/em&gt;.apply(this, new Array('eat', 'bananas'))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="834e7e8de444204025622dfff22dc4cc64d0c99d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply&lt;/code&gt; is very similar to &lt;a href=&quot;call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt;, except for the type of arguments it supports. You use an arguments array instead of a list of arguments (parameters). With &lt;code&gt;apply&lt;/code&gt;, you can also use an array literal, for example, &lt;code&gt;&lt;var&gt;func&lt;/var&gt;.apply(this, ['eat', 'bananas'])&lt;/code&gt;, or an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; object, for example, &lt;code&gt;&lt;var&gt;func&lt;/var&gt;.apply(this, new Array('eat', 'bananas'))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed94fe1714597ff99435ce3873d622e408f55825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;apply&lt;/code&gt; to the rescue!</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; на помощь!</target>
        </trans-unit>
        <trans-unit id="1a40b9836c28a42eb40a6c4c4c03388261cef287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt; doesn't alias named function arguments</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; не являются псевдонимом именованных аргументов функции</target>
        </trans-unit>
        <trans-unit id="11797c48fbe5569e9f59ce5c8a3248e8d916e8fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt; is an &lt;code&gt;Array&lt;/code&gt;-like object accessible inside &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;functions&lt;/a&gt; that contains the values of the arguments passed to that function.</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; - это объект типа &lt;code&gt;Array&lt;/code&gt; , доступный внутри &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;функций,&lt;/a&gt; который содержит значения аргументов, переданных этой функции.</target>
        </trans-unit>
        <trans-unit id="1413a9600bc526c12a6896dab84d86e1cd12d220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt; is an &lt;code&gt;Array&lt;/code&gt;-like object accessible inside &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;functions&lt;/a&gt; that contains the values of the arguments passed to that function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f26671650a450c1763ae9c5d95eb3d93087962" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;arguments&lt;/code&gt;: always access function arguments via their name or perform a copy of the arguments object using:</source>
          <target state="translated">&lt;code&gt;arguments&lt;/code&gt; : всегда обращайтесь к аргументам функции по их имени или выполняйте копию объекта arguments, используя:</target>
        </trans-unit>
        <trans-unit id="e56044c126ce7ea9ee354877ad51896735cadb59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="404a2b042516b952ef414e5a84429d8e6243569c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;async function&lt;/code&gt; expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043df3f43f3f4e40e685d8d3e646d4725a01ebb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;begin&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;begin&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="2db6404b54bf7bbb8ebcce50e8245f60f4e6cac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bind()&lt;/code&gt; is also helpful in cases where you want to create a shortcut to a function which requires a specific &lt;code&gt;this&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;bind()&lt;/code&gt; также полезен в тех случаях, когда вы хотите создать ярлык для функции, для которой требуется конкретное значение &lt;code&gt;this&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55e2c210d071867bf1d329374d1e52d98bbaf2ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;byteLength&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;byteLength&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="6978f11195abed41788f154dab42c60de2021bfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;byteOffset&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;byteOffset&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="23e35f4831a4b726b4898d17186ce1efe269dd34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call()&lt;/code&gt; provides a new value of &lt;code&gt;this&lt;/code&gt; to the function/method. With &lt;code&gt;call()&lt;/code&gt;, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8102d9c9c43038d1f942c33abe1f578b86b0bbae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;call()&lt;/code&gt; provides a new value of &lt;strong&gt;this&lt;/strong&gt; to the function/method. With &lt;code&gt;call&lt;/code&gt;, you can write a method once and then inherit it in another object, without having to rewrite the method for the new object.</source>
          <target state="translated">&lt;code&gt;call()&lt;/code&gt; предоставляет новое значение &lt;strong&gt;this&lt;/strong&gt; функции / методу. С помощью &lt;code&gt;call&lt;/code&gt; вы можете написать метод один раз, а затем унаследовать его от другого объекта без необходимости переписывать метод для нового объекта.</target>
        </trans-unit>
        <trans-unit id="b34459a1e9fa83cb7a51ab21b17b2292f23ac00d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is invoked with 3 arguments:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; вызывается с 3 аргументами:</target>
        </trans-unit>
        <trans-unit id="1b683124bcf90e20952715111bf3315fe756aae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is invoked with &lt;strong&gt;three arguments&lt;/strong&gt;:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; вызывается с &lt;strong&gt;тремя аргументами&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="8d223df244085ecabc4844335dd03fa473224d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is invoked with three arguments:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; вызывается с тремя аргументами:</target>
        </trans-unit>
        <trans-unit id="8f1ce3797aea99bfd523db41b004b5bfb2fe7251" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is invoked with three arguments: the value of the element, the index of the element, and the Array object being traversed.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; вызывается с тремя аргументами: значением элемента, индексом элемента и просматриваемым объектом Array.</target>
        </trans-unit>
        <trans-unit id="19cb9b2e0bdbec64e5ee2e03fc1f40f47bf02621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is invoked with three arguments: the value of the element, the index of the element, and the array object being traversed.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; вызывается с тремя аргументами: значением элемента, индексом элемента и объектом массива, по которому выполняется обход.</target>
        </trans-unit>
        <trans-unit id="e8801a2e66e2d1f55761428f8e246b7301aadda1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callback&lt;/code&gt; is invoked with three arguments: the value of the element, the index of the element, and the typed array object being traversed.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; вызывается с тремя аргументами: значением элемента, индексом элемента и просматриваемым типизированным объектом массива.</target>
        </trans-unit>
        <trans-unit id="7b5ce8375a4923fb5df1cd9966bc9fb3ff227bc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callee&lt;/code&gt; is a property of the &lt;code&gt;arguments&lt;/code&gt; object. It can be used to refer to the currently executing function inside the function body of that function. This is useful when the name of the function is unknown, such as within a function expression with no name (also called &quot;anonymous functions&quot;).</source>
          <target state="translated">&lt;code&gt;callee&lt;/code&gt; - это свойство объекта &lt;code&gt;arguments&lt;/code&gt; . Его можно использовать для ссылки на текущую выполняемую функцию внутри тела функции этой функции. Это полезно, когда имя функции неизвестно, например, в выражении функции без имени (также называемом &amp;laquo;анонимными функциями&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="a912464486baab4e26f9669d4a567ab63b8397ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;case &lt;var&gt;valueN&lt;/var&gt;&lt;/code&gt;Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1a69880471124e8cb9d048188b49911990a81e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;case valueN&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;case valueN&lt;/code&gt; Необязательно</target>
        </trans-unit>
        <trans-unit id="9f56292d53f4a10e95780fd1c744b10f929891de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;caseFirst&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;caseFirst&lt;/code&gt; option</target>
        </trans-unit>
        <trans-unit id="72cc25137abaff335761bfdde99edaacb8ca9d8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;catch_statements_1&lt;/code&gt;, &lt;code&gt;catch_statements_2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;catch_statements_1&lt;/code&gt; , &lt;code&gt;catch_statements_2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15ae45fe31540f354cd2dcafd8238ff21b93520c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charCodeAt()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if the given index is less than 0 or is equal to or greater than the length of the string.</source>
          <target state="translated">&lt;code&gt;charCodeAt()&lt;/code&gt; возвращает &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; ,&lt;/a&gt; если данный индекс меньше 0, равен или больше длины строки.</target>
        </trans-unit>
        <trans-unit id="5561ef4580972f409c7a7acdb87dc70250892c07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;charCodeAt()&lt;/code&gt; returns &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if the given index is less than &lt;code&gt;0&lt;/code&gt;, or if it is equal to or greater than the &lt;code&gt;length&lt;/code&gt; of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276aae309017edf2e8791e19cb51f0f15a6fc973" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;childModule1.js&lt;/code&gt;: exporting &lt;code&gt;myFunction&lt;/code&gt; and &lt;code&gt;myVariable&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f8b5b707d773d5651bb0dc81bf4fc4faf11802" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;childModule2.js&lt;/code&gt;: exporting &lt;code&gt;myClass&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461b470fcfda3a7797856c9bca86ab7f8902ec4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; declaration</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; объявление класса</target>
        </trans-unit>
        <trans-unit id="45206c79cec506b470947f6aa2660fcb15d1132a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; expression</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; выражение класса</target>
        </trans-unit>
        <trans-unit id="f49afc836f9ef9799e93bf3c927fbf2f9ef345e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class&lt;/code&gt; statement</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; заявление класса</target>
        </trans-unit>
        <trans-unit id="fc7b9dfaf8c17862dbf3fed450c41f3ecb9c59e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compareFunction(a, b)&lt;/code&gt; must always return the same value when given a specific pair of elements &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; as its two arguments. If inconsistent results are returned, then the sort order is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb33b070076760817bb0dea01f284644d7704346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compareFunction(a, b)&lt;/code&gt; must always return the same value when given a specific pair of elements a and b as its two arguments. If inconsistent results are returned then the sort order is undefined.</source>
          <target state="translated">&lt;code&gt;compareFunction(a, b)&lt;/code&gt; всегда должен возвращать одно и то же значение, если задана конкретная пара элементов a и b в качестве двух аргументов. Если возвращаются противоречивые результаты, то порядок сортировки не определен.</target>
        </trans-unit>
        <trans-unit id="4eaf8b79e4165f764a657b6e9689b842d9530f21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;compareFunction&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;compareFunction&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="e133550631b748a8dcb720b26bbbed184e8bdbb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt; and immutability</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; и неизменность</target>
        </trans-unit>
        <trans-unit id="6e472cacd6232538a972135f520492bb8074bb0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;const&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; or &lt;code&gt;var&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;const&lt;/code&gt; , &lt;code&gt;let&lt;/code&gt; или &lt;code&gt;var&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="e01fa501b4322ef44ce95c0c175da63ae3bbd392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue&lt;/code&gt;, &lt;code&gt;break&lt;/code&gt;, &lt;code&gt;throw&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;continue&lt;/code&gt; , &lt;code&gt;break&lt;/code&gt; , &lt;code&gt;throw&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a25aea120629c5b5ea9988ec84a632696d656e63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="b65412d24e8afe5c69c59b8f9f74d81f874963ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;currentIndex&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;currentIndex&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="e3862df225c9e8ff947612f8eee5b741056a97f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="c2555aecd5f6ec0d770f3fdb6bd2f086151603c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;day&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;day&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="eb02f953c91bdad6722f3d3783135f7290792dfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; keyword in &lt;code&gt;switch&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; ключевое слово по умолчанию в &lt;code&gt;switch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7f3e7550c678520ca60f63db6b375ada90b056e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; keyword with &lt;code&gt;export&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; ключевое слово по умолчанию с &lt;code&gt;export&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ecabcd6884ed0583a484f96388a0606249e0622f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="da35f1ff7c6dd5e16e2d0b59152de7fae2689c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete&lt;/code&gt; and the prototype chain</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; и цепочку прототипов</target>
        </trans-unit>
        <trans-unit id="d7553176536b328979b9e89f9c43e945f24dcf77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;delete&lt;/code&gt; оператор удаления</target>
        </trans-unit>
        <trans-unit id="05980f17e4337db7f5c8c25437f5ff5b3b78bd53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deleteCount&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;deleteCount&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="6c446dc8939a859b73b187440b0e5c5353baebe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;depth&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;depth&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="7887c816caf8050fa8cfb3b7e9983ce98ece533e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;description&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;description&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="4f4845f14c3933c5a299f4216e6180ea5ea01291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;document.all&lt;/code&gt; willful violation of the standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c0d36da02b5598b2f2d0cde960f6b616e4cb6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;done&lt;/code&gt; (boolean)</source>
          <target state="translated">&lt;code&gt;done&lt;/code&gt; (логическое)</target>
        </trans-unit>
        <trans-unit id="48cebe4d861a21baf77a09ab963fa2fee1d3abc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encodeURI()&lt;/code&gt; differs from &lt;a href=&quot;encodeuricomponent&quot;&gt;&lt;code&gt;encodeURIComponent()&lt;/code&gt;&lt;/a&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c423c9b97172f97ae484653ed99407b9f1ca361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encodeURI()&lt;/code&gt; escapes all characters &lt;strong&gt;except&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9f08e7012cddc9bb4aae7dc03dfb9d7c8c0699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encodeURI&lt;/code&gt; escapes all characters &lt;strong&gt;except&lt;/strong&gt;:</source>
          <target state="translated">&lt;code&gt;encodeURI&lt;/code&gt; экранирует все символы, &lt;strong&gt;кроме&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="0b21bd24927735d5778208ba887405bc83796032" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encodeURIComponent()&lt;/code&gt; differs from &lt;code&gt;encodeURI&lt;/code&gt; as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fab764458ff93b0f2aac61af7740d7c11e0c1f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encodeURIComponent()&lt;/code&gt; escapes all characters &lt;strong&gt;except&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b3ec6e6a492e76b558de1a3d4bde2dfd341658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encodeURIComponent&lt;/code&gt; differs from &lt;code&gt;encodeURI&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;encodeURIComponent&lt;/code&gt; отличается от &lt;code&gt;encodeURI&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="1b4027c5a1b271176f842f97cc4ba39af2defe6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;encodeURIComponent&lt;/code&gt; escapes all characters &lt;strong&gt;except&lt;/strong&gt;:</source>
          <target state="translated">&lt;code&gt;encodeURIComponent&lt;/code&gt; экранирует все символы, &lt;strong&gt;кроме&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="215ea8eb55071fe1cf9e4e79b9fbe718afa52c13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;end&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;end&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="8b5b1b29b6a8ade130b7d7071b108d2daca6dedb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval()&lt;/code&gt; is a dangerous function, which executes the code it's passed with the privileges of the caller. If you run &lt;code&gt;eval()&lt;/code&gt; with a string that could be affected by a malicious party, you may end up running malicious code on the user's machine with the permissions of your webpage / extension. More importantly, a third-party code can see the scope in which &lt;code&gt;eval()&lt;/code&gt; was invoked, which can lead to possible attacks in ways to which the similar &lt;a href=&quot;function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; is not susceptible.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; - опасная функция, которая выполняет переданный код с привилегиями вызывающей стороны. Если вы запустите &lt;code&gt;eval()&lt;/code&gt; со строкой, которая может быть затронута злоумышленником, вы можете запустить вредоносный код на компьютере пользователя с разрешениями вашей веб-страницы / расширения. Что еще более важно, сторонний код может видеть область, в которой был вызван &lt;code&gt;eval()&lt;/code&gt; , что может привести к возможным атакам способами, к которым аналогичная &lt;a href=&quot;function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; не восприимчива.</target>
        </trans-unit>
        <trans-unit id="d444ec6caafce939d286f3f1eb6742f337855da7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval()&lt;/code&gt; is a function property of the global object.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; - это свойство функции глобального объекта.</target>
        </trans-unit>
        <trans-unit id="00970df4a544864f72414b4fe0a99cc1510e380c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval()&lt;/code&gt; is also slower than the alternatives, since it has to invoke the JS interpreter, while many other constructs are optimized by modern JS engines.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; также медленнее, чем альтернативы, поскольку он должен вызывать интерпретатор JS, в то время как многие другие конструкции оптимизированы современными движками JS.</target>
        </trans-unit>
        <trans-unit id="703776839e4af188e662e930ccb4c5749b90877a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval()&lt;/code&gt; is also slower than the alternatives, since it has to invoke the JavaScript interpreter, while many other constructs are optimized by modern JS engines.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0f9927059fbe1fc1127829693be37c0a3a8dd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval()&lt;/code&gt; is slow and should be avoided whenever possible. Also, &lt;code&gt;strFormControl&lt;/code&gt; would have to hold an identifier, which is not required for names and &lt;code&gt;id&lt;/code&gt;s of form controls. It is better to use bracket notation instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89eac8b0f94f419df7d7b3c0485c55fef82a781b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval()&lt;/code&gt; returns the value of the last expression evaluated.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; возвращает значение последнего вычисленного выражения.</target>
        </trans-unit>
        <trans-unit id="600810b45ac04849e54a6d48db5380d1df16e701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt; as a string defining function requires &quot;(&quot; and &quot;)&quot; as prefix and suffix</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; как функция определения строки требует &quot;(&quot; и &quot;)&quot; в качестве префикса и суффикса</target>
        </trans-unit>
        <trans-unit id="608c30dcccba3dfc7943b5524689023a0fbb3ceb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eval&lt;/code&gt;: use it only if you know what you're doing</source>
          <target state="translated">&lt;code&gt;eval&lt;/code&gt; : используйте его, только если знаете, что делаете</target>
        </trans-unit>
        <trans-unit id="37eb8fa0218312c3ee9899c3d31da19a58c268f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;every&lt;/code&gt; acts like the &quot;for all&quot; quantifier in mathematics. In particular, for an empty array, it returns &lt;code&gt;true&lt;/code&gt;. (It is &lt;a href=&quot;https://en.wikipedia.org/wiki/Vacuous_truth&quot;&gt;vacuously true&lt;/a&gt; that all elements of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Empty_set#Properties&quot;&gt;empty set&lt;/a&gt; satisfy any given condition.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55c5195c0cfda1cfa9da357fb761012eeb49aa77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;every&lt;/code&gt; acts like the &quot;for all&quot; quantifier in mathematics. In particular, for an empty array, it returns true. (It is &lt;a href=&quot;http://en.wikipedia.org/wiki/Vacuous_truth&quot;&gt;vacuously true&lt;/a&gt; that all elements of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Empty_set#Properties&quot;&gt;empty set&lt;/a&gt; satisfy any given condition.)</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; действует как квантор &quot;для всех&quot; в математике. В частности, для пустого массива он возвращает true. ( &lt;a href=&quot;http://en.wikipedia.org/wiki/Vacuous_truth&quot;&gt;Верно,&lt;/a&gt; что все элементы &lt;a href=&quot;https://en.wikipedia.org/wiki/Empty_set#Properties&quot;&gt;пустого множества&lt;/a&gt; удовлетворяют любому заданному условию.)</target>
        </trans-unit>
        <trans-unit id="891404fa41e6aae11b5779138b084a82fe81f62e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;every&lt;/code&gt; does not mutate the array on which it is called.</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; не изменяет массив, в котором он вызывается.</target>
        </trans-unit>
        <trans-unit id="9ccac465949f0e492ead02fef05e94ba6c4ec794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;every&lt;/code&gt; does not mutate the typed array on which it is called.</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; не изменяет типизированный массив, для которого он вызывается.</target>
        </trans-unit>
        <trans-unit id="e3087b66f4b9e574f63c3fed9d188af769cc23e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;every&lt;/code&gt; was added to the ECMA-262 standard in the 5&lt;sup&gt;th&lt;/sup&gt; edition, and it may not be present in other implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;every&lt;/code&gt; in implementations which do not natively support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99408d1717d0b5e5b375cff696ec223b859d9d87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;every&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in other implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;every&lt;/code&gt; in implementations which do not natively support it. This algorithm is exactly the one specified in ECMA-262, 5th edition, assuming &lt;code&gt;Object&lt;/code&gt; and &lt;code&gt;TypeError&lt;/code&gt; have their original values and that &lt;code&gt;callbackfn.call&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;every&lt;/code&gt; был добавлен в стандарт ECMA-262 в 5-м издании; как таковой он может отсутствовать в других реализациях стандарта. Вы можете обойти это, вставив следующий код в начало ваших скриптов, что позволит использовать &lt;code&gt;every&lt;/code&gt; в реализациях, которые изначально не поддерживают его. Этот алгоритм в точности тот, что указан в ECMA-262, 5-е издание, при условии, что &lt;code&gt;Object&lt;/code&gt; и &lt;code&gt;TypeError&lt;/code&gt; имеют свои исходные значения и что &lt;code&gt;callbackfn.call&lt;/code&gt; оценивает исходное значение &lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;Function.prototype.call&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5693b9d905ee483c02061dab44f0b7573db2bbe2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exception_var_1&lt;/code&gt;, &lt;code&gt;exception_var_2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exception_var_1&lt;/code&gt; , &lt;code&gt;exception_var_2&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a3facaf044474f653c6aa42a5281dc1c816d34e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr1&lt;/code&gt;, &lt;code&gt;expr2, expr3...&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;expr1&lt;/code&gt; , &lt;code&gt;expr2, expr3...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8c2b372109f8df6e4890e3e96b9c114c9b22c00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expr1&lt;/code&gt;, &lt;code&gt;expr2&lt;/code&gt;, &lt;code&gt;expr3&lt;/code&gt;...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc223973a504fc821ee91ae00447c7e6e5257008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;exprT&lt;/code&gt;, &lt;code&gt;exprF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;exprT&lt;/code&gt; , &lt;code&gt;exprF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e634146ccb066a22c654e72d6518777b77cbe55c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false &amp;amp;&amp;amp; (&lt;em&gt;anything)&lt;/em&gt;&lt;/code&gt; is short-circuit evaluated to false.</source>
          <target state="translated">&lt;code&gt;false &amp;amp;&amp;amp; (&lt;em&gt;anything)&lt;/em&gt;&lt;/code&gt; короткое замыкание оценивается как false.</target>
        </trans-unit>
        <trans-unit id="5e134ff37fc872f42a8b1e5eef59a551d6527ddf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if the argument is (or will be coerced to) positive or negative &lt;a href=&quot;infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;; otherwise, &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4390b42cc8144a9d2785547c1fe93b7e0127cb7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; if the argument is positive or negative &lt;a href=&quot;infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;; otherwise, &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; , если аргумент положительный или отрицательный &lt;a href=&quot;infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; ; в противном случае &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab08eb4a28f7a7e73119b02f77d3ac35228a8e3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fileName&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;fileName&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="0dc9688ea5ea1a0fcee112b9b829b8a277eae78a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill&lt;/code&gt; is a mutable method, it will change &lt;code&gt;this&lt;/code&gt; object itself, and return it, not just return a copy of it.</source>
          <target state="translated">&lt;code&gt;fill&lt;/code&gt; - это изменяемый метод, он изменит сам &lt;code&gt;this&lt;/code&gt; объект и вернет его, а не просто вернет его копию.</target>
        </trans-unit>
        <trans-unit id="48f54546a2d209d77a06d2fef46bb0dd11ca0764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill&lt;/code&gt; is a mutator method: it will change the array itself and return it, not a copy of it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2244ef1443d5b96b9e16546a26da7bd93f39dff3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill&lt;/code&gt; is intentionally generic, it does not require that its &lt;code&gt;this&lt;/code&gt; value be an Array object.</source>
          <target state="translated">&lt;code&gt;fill&lt;/code&gt; намеренно общий характер , она не требует , чтобы его &lt;code&gt;this&lt;/code&gt; значение является объектом типа Array.</target>
        </trans-unit>
        <trans-unit id="f4a3ca486fde38d256953f4821b7418b8489f960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fill&lt;/code&gt; is intentionally generic: it does not require that its &lt;code&gt;this&lt;/code&gt; value be an &lt;code&gt;Array&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e75a13d4dcb4c2b543db91637bdac58d1eb23b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter()&lt;/code&gt; calls a provided &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function once for each element in an array, and constructs a new array of all the values for which &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; returns &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Truthy&quot;&gt;a value that coerces to &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is invoked only for indexes of the array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values. Array elements which do not pass the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; test are simply skipped, and are not included in the new array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9931eb055735f06ef92202cbff1c458a76c30a3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter()&lt;/code&gt; calls a provided &lt;code&gt;callback&lt;/code&gt; function once for each element in an array, and constructs a new array of all the values for which &lt;code&gt;callback&lt;/code&gt; returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Truthy&quot;&gt;a value that coerces to &lt;code&gt;true&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values. Array elements which do not pass the &lt;code&gt;callback&lt;/code&gt; test are simply skipped, and are not included in the new array.</source>
          <target state="translated">&lt;code&gt;filter()&lt;/code&gt; вызывает предоставленную &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента в массиве и создает новый массив всех значений, для которых &lt;code&gt;callback&lt;/code&gt; возвращает &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Truthy&quot;&gt;значение, которое приводит к &lt;code&gt;true&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;callback&lt;/code&gt; вызывается только для индексов массива, которым присвоены значения; он не вызывается для индексов, которые были удалены или которым никогда не были присвоены значения. Элементы массива, не прошедшие проверку &lt;code&gt;callback&lt;/code&gt; , просто пропускаются и не включаются в новый массив.</target>
        </trans-unit>
        <trans-unit id="cb4070c4aa57dd9cc4cea03e95495a23fa00a0fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter()&lt;/code&gt; does not mutate the array on which it is called.</source>
          <target state="translated">&lt;code&gt;filter()&lt;/code&gt; не изменяет массив, для которого он вызывается.</target>
        </trans-unit>
        <trans-unit id="0a8bc74b97e6a37b56b48708bcc6d54acffa7cbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter()&lt;/code&gt; does not mutate the typed array on which it is called.</source>
          <target state="translated">&lt;code&gt;filter()&lt;/code&gt; не изменяет типизированный массив, для которого он вызывается.</target>
        </trans-unit>
        <trans-unit id="dcb7240b9b0c5996aed924c4d65ff740632936bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter()&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition. Therefore, it may not be present in all implementations of the standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196ae0582902d699ef32320143b093b6f8a8e679" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter()&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;filter()&lt;/code&gt; in ECMA-262 implementations which do not natively support it. This algorithm is exactly equivalent to the one specified in ECMA-262, 5th edition, assuming that &lt;code&gt;fn.call&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/bind&quot;&gt;&lt;code&gt;Function.prototype.bind()&lt;/code&gt;&lt;/a&gt;, and that &lt;a href=&quot;push&quot;&gt;&lt;code&gt;Array.prototype.push()&lt;/code&gt;&lt;/a&gt; has its original value.</source>
          <target state="translated">&lt;code&gt;filter()&lt;/code&gt; был добавлен в стандарт ECMA-262 в 5-й редакции; как таковой он может присутствовать не во всех реализациях стандарта. Вы можете обойти это, вставив следующий код в начало ваших скриптов, что позволяет использовать &lt;code&gt;filter()&lt;/code&gt; в реализациях ECMA-262, которые изначально не поддерживают его. Этот алгоритм в точности эквивалентен алгоритму, указанному в ECMA-262, 5-е издание, при условии, что &lt;code&gt;fn.call&lt;/code&gt; оценивает исходное значение &lt;a href=&quot;../function/bind&quot;&gt; &lt;code&gt;Function.prototype.bind()&lt;/code&gt; &lt;/a&gt; и что &lt;a href=&quot;push&quot;&gt; &lt;code&gt;Array.prototype.push()&lt;/code&gt; &lt;/a&gt; имеет исходное значение.</target>
        </trans-unit>
        <trans-unit id="ca6df0f89bd872fa089404a26641bda49ad386d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt; does not mutate the array on which it is called.</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; не изменяет массив, для которого он вызван.</target>
        </trans-unit>
        <trans-unit id="4c7118cc9110fcbad2161e45e547d7d0573d2f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find&lt;/code&gt; does not mutate the typed array on which it is called.</source>
          <target state="translated">&lt;code&gt;find&lt;/code&gt; не изменяет типизированный массив, для которого он вызывается.</target>
        </trans-unit>
        <trans-unit id="32f03428cf96c1472f765e850c9fa116c6b3524e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;findIndex&lt;/code&gt; does not mutate the typed array on which it is called.</source>
          <target state="translated">&lt;code&gt;findIndex&lt;/code&gt; не изменяет типизированный массив, для которого он вызывается.</target>
        </trans-unit>
        <trans-unit id="11d5c35a35b4042381fd598510b58c08ec9985c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; was a non standard second argument only available in Gecko : &lt;var&gt;str&lt;/var&gt;.match(&lt;var&gt;regexp, flags&lt;/var&gt;)</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; был нестандартным вторым аргументом, доступным только в Gecko: &lt;var&gt;str&lt;/var&gt; .match ( &lt;var&gt;regexp, flags&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="fa22972dd8b2049c3b74e2db623902d15ea6b989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; was a non standard second argument only available in Gecko : &lt;var&gt;str&lt;/var&gt;.search(&lt;var&gt;regexp, flags&lt;/var&gt;)</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; был нестандартным вторым аргументом, доступным только в Gecko: &lt;var&gt;str&lt;/var&gt; .search ( &lt;var&gt;regexp, flags&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="6eb79e623cafc579061ffa3d7507c5996a293abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flags&lt;/code&gt; was a non standard third argument only available in Gecko : &lt;var&gt;str&lt;/var&gt;.replace(&lt;var&gt;regexp&lt;/var&gt;|&lt;var&gt;substr&lt;/var&gt;, &lt;var&gt;newSubStr&lt;/var&gt;|&lt;var&gt;function, flags&lt;/var&gt;)</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; был нестандартным третьим аргументом, доступным только в Gecko: &lt;var&gt;str&lt;/var&gt; .replace ( &lt;var&gt;regexp&lt;/var&gt; | &lt;var&gt;substr&lt;/var&gt; , &lt;var&gt;newSubStr&lt;/var&gt; | &lt;var&gt;function, flags&lt;/var&gt; )</target>
        </trans-unit>
        <trans-unit id="fd5a8027993d656faa80570c5456d1dce5693040" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flatMap&lt;/code&gt; can be used as a way to add and remove items (modify the number of items) during a &lt;code&gt;map&lt;/code&gt;. In other words, it allows you to map &lt;em&gt;many items to many items&lt;/em&gt; (by handling each input item separately), rather than always &lt;em&gt;one-to-one&lt;/em&gt;. In this sense, it works like the opposite of &lt;a href=&quot;filter&quot;&gt;filter&lt;/a&gt;. Simply return a 1-element array to keep the item, a multiple-element array to add items, or a 0-element array to remove the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadce4710263583bae4d6b17367b7bbc5b9b0b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;foo&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or not &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, or &lt;code&gt;0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e3ca26ee2fc73b8886ad494b8a3c91137c6e36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for await...of&lt;/code&gt; doesn't work with async iterators that are not async iterables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d9c567d1fb44edbb51b4f6e5fe2cd824f016ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for await...of&lt;/code&gt; loop also consumes sync iterables and generators. In that case it internally awaits emitted values before assign them to the loop control variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621ea668ec4d59c0023fff8f56596614bf4f90d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;for&lt;/code&gt; loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c684ce48c8d812f15369e4a493eca4e5496d6a46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; calls a provided &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function once for each element in an array in ascending order. It is not invoked for index properties that have been deleted or are uninitialized. (For sparse arrays, &lt;a href=&quot;#sparseArray&quot;&gt;see example below&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ac8916f2eb97628882e3c16c67a2d5584209d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; does not make a copy of the array before iterating.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505e473e1c8501db66c179fe2b1fedcb11f696ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; does not mutate the array on which it is called (although &lt;code&gt;callback&lt;/code&gt;, if invoked, may do so).</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; не изменяет массив, для которого он вызывается (хотя &lt;code&gt;callback&lt;/code&gt; , если он вызван, может это сделать).</target>
        </trans-unit>
        <trans-unit id="122cb2dd89516d084f4686e3ecf131715d2e7f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; does not mutate the array on which it is called. (However, &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; may do so)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8f41d7ab222de50ea48c43d8c2fca696da45cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; executes the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function once for each array element; unlike &lt;a href=&quot;map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;reduce&quot;&gt;&lt;code&gt;reduce()&lt;/code&gt;&lt;/a&gt; it always returns the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; and is not chainable. The typical use case is to execute side effects at the end of a chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140bf08672d99e7b40deb6802e23f8969e7c2afc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; executes the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function once for each element in the &lt;code&gt;Set&lt;/code&gt; object; it does not return a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f318df590ff64ad8dd7b8d3ecdd2aef08f80d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; executes the &lt;code&gt;callback&lt;/code&gt; function once for each array element; unlike &lt;a href=&quot;map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;reduce&quot;&gt;&lt;code&gt;reduce()&lt;/code&gt;&lt;/a&gt; it always returns the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; and is not chainable. The typical use case is to execute side effects at the end of a chain.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; выполняет функцию &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента массива; в отличие от &lt;a href=&quot;map&quot;&gt; &lt;code&gt;map()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;reduce&quot;&gt; &lt;code&gt;reduce()&lt;/code&gt; &lt;/a&gt; он всегда возвращает значение &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; и не объединяется в цепочку. Типичный вариант использования - выполнение побочных эффектов в конце цепочки.</target>
        </trans-unit>
        <trans-unit id="15d32f13145a9ff97ee2e682abbdd4776ccd249d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; executes the &lt;code&gt;callback&lt;/code&gt; function once for each element in the &lt;code&gt;Set&lt;/code&gt; object; it does not return a value.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; выполняет функцию &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента в объекте &lt;code&gt;Set&lt;/code&gt; ; он не возвращает значения.</target>
        </trans-unit>
        <trans-unit id="e9e6d7b52dbc9c50a38e45b44bcab9cc49997800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; executes the &lt;code&gt;callback&lt;/code&gt; function once for each typed array element; unlike &lt;a href=&quot;every&quot;&gt;&lt;code&gt;every()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;some&quot;&gt;&lt;code&gt;some()&lt;/code&gt;&lt;/a&gt; it, always returns the value &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; выполняет функцию &lt;code&gt;callback&lt;/code&gt; один раз для каждого типизированного элемента массива; в отличие от &lt;a href=&quot;every&quot;&gt; &lt;code&gt;every()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;some&quot;&gt; &lt;code&gt;some()&lt;/code&gt; &lt;/a&gt; он всегда возвращает значение &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d99514785a66a9f4359da83a2ddc20e98c722d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; executes the provided &lt;code&gt;callback&lt;/code&gt; once for each element present in the array in ascending order. It is not invoked for index properties that have been deleted or are uninitialized (i.e. on sparse arrays).</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; выполняет предоставленный &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента, присутствующего в массиве, в порядке возрастания. Он не вызывается для свойств индекса, которые были удалены или не инициализированы (например, для разреженных массивов).</target>
        </trans-unit>
        <trans-unit id="8d2c67472eea83a470614c382d174137cffcb87b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; was added to the ECMA-262 standard in the 5&lt;sup&gt;th&lt;/sup&gt; edition, and it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;forEach()&lt;/code&gt; in implementations which do not natively support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38045490e0afb0ca144c992bf77a2cad99e4033d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach()&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in other implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;forEach()&lt;/code&gt; in implementations that don't natively support it. This algorithm is exactly the one specified in ECMA-262, 5th edition, assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; have their original values and that &lt;code&gt;callback.call()&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; был добавлен в стандарт ECMA-262 в 5-м издании; как таковой он может отсутствовать в других реализациях стандарта. Вы можете обойти это, вставив следующий код в начало ваших скриптов, что позволит использовать &lt;code&gt;forEach()&lt;/code&gt; в реализациях, которые изначально не поддерживают его. Этот алгоритм в точности тот, что указан в ECMA-262, 5-е издание, при условии, что &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; имеют свои исходные значения и что &lt;code&gt;callback.call()&lt;/code&gt; оценивает исходное значение &lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b99ab58892f9484da11488a904d6063d972cd6bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach&lt;/code&gt; does not wait for promises. Kindly make sure you are aware of the implications while using promises(or async functions) as &lt;code&gt;forEach&lt;/code&gt; callback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="066c1e2d96d50172521b1ae46c75a9f2b8485324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;forEach&lt;/code&gt; executes the &lt;code&gt;callback&lt;/code&gt; function once for each element in the &lt;code&gt;Map&lt;/code&gt; object; it does not return a value.</source>
          <target state="translated">&lt;code&gt;forEach&lt;/code&gt; выполняет функцию &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента в объекте &lt;code&gt;Map&lt;/code&gt; ; он не возвращает значения.</target>
        </trans-unit>
        <trans-unit id="ba33f3b489e4013319156f61afcc85d9e87bc69c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;freeze()&lt;/code&gt; returns the same object that was passed into the function. It &lt;em&gt;does not&lt;/em&gt; create a frozen copy.</source>
          <target state="translated">&lt;code&gt;freeze()&lt;/code&gt; возвращает тот же объект, который был передан в функцию. Он &lt;em&gt;не&lt;/em&gt; создает замороженную копию.</target>
        </trans-unit>
        <trans-unit id="7e2f1ff38536e9c9e9a8136c2cdd2294572a1038" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&amp;nbsp;&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;fromIndex&amp;nbsp;&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="bee6e19ad3c9099da8b9ab2424c4b2b5946d8cd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt; is greater than or equal to the array length</source>
          <target state="translated">&lt;code&gt;fromIndex&lt;/code&gt; больше или равен длине массива</target>
        </trans-unit>
        <trans-unit id="6c937141dbd3191462f80c54be496e44e1992bd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;fromIndex&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;fromIndex&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="358cdb10e770108a8b2b3b281e873a6ad5335b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function*&lt;/code&gt; expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a85f3ea7f1c9dcc4a388cf90f234f42f13ff66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; (replacement)</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; (замена)</target>
        </trans-unit>
        <trans-unit id="d8799ddb01f20c5e14ad56d122cf4986814f3897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; declaration</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; объявление функции</target>
        </trans-unit>
        <trans-unit id="4b1865c25c16f8ff52fcc0e153e75cf1961038e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;function&lt;/code&gt; expression</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; выражение функции</target>
        </trans-unit>
        <trans-unit id="4a359f4c773eaf213776da6c135989fb617bed85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; Vs. &lt;code&gt;defineProperty&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;get&lt;/code&gt; Vs. &lt;code&gt;defineProperty&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbf2e02a7b2dc35a45872173748ff16b3bce11a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;get&lt;/code&gt; vs. &lt;code&gt;defineProperty&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d3b8684e292ff6949ea8327e9c163e1bba65e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; must return an object or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; должен возвращать объект или &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a675b0c321cf6b5904dc47877f2eec161a8731b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getPrototypeOf&lt;/code&gt; method must return an object or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getPrototypeOf&lt;/code&gt; Метод getPrototypeOf должен возвращать объект или значение &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="801f0cf750aa9bea1079d2acc9918d26727d3ac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;global&lt;/code&gt; is now a prototype accessor property rather than an instance's own data property.</source>
          <target state="translated">&lt;code&gt;global&lt;/code&gt; теперь является свойством аксессора прототипа, а не собственным свойством данных экземпляра.</target>
        </trans-unit>
        <trans-unit id="44f5763fb31f15b11a6fba466b8fb4cd8653a215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;handler&lt;/code&gt;: an object that defines which operations will be intercepted and how to redefine intercepted operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864a74d4da5b68e8fedfb93ead7e04a274d1b988" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hasOwnProperty&lt;/code&gt; returns true even if the value of the property is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hasOwnProperty&lt;/code&gt; возвращает true, даже если значение свойства равно &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1784eeb21131a356713b8f2fc7dd33eab1982729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4fe1ee02a25dfb97bf42b7c74afece58cd943c02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; , &lt;code&gt;second&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d7e43e3815d75bf8e8566e5254388513e8b3e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hours&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;hours&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="9977172d403109221c163470004205c3655feb13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ignoreCase&lt;/code&gt; is now a prototype accessor property rather than an instance's own data property.</source>
          <target state="translated">&lt;code&gt;ignoreCase&lt;/code&gt; теперь является свойством аксессора прототипа, а не собственным свойством данных экземпляра.</target>
        </trans-unit>
        <trans-unit id="16f65165c4d8bc6321cfbce2d04807e2abe6c280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;import&lt;/code&gt;, &lt;code&gt;export&lt;/code&gt;, module declaration</source>
          <target state="translated">&lt;code&gt;import&lt;/code&gt; , &lt;code&gt;export&lt;/code&gt; , объявление модуля</target>
        </trans-unit>
        <trans-unit id="729f06e23eea04de4eb06501468f86352a9d8df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;in&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;in&lt;/code&gt; операторе</target>
        </trans-unit>
        <trans-unit id="63089956eea3d1b5b12ee81c2484d81a752d0ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includes()&lt;/code&gt; method is intentionally generic. It does not require &lt;code&gt;this&lt;/code&gt; value to be an Array object, so it can be applied to other kinds of objects (e.g. array-like objects).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c7175c8b0be83e3f5c561485512895741c5f0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includes()&lt;/code&gt; method is intentionally generic. It does not require &lt;code&gt;this&lt;/code&gt; value to be an Array object, so it can be applied to other kinds of objects (e.g. array-like objects). The example below illustrates &lt;code&gt;includes()&lt;/code&gt; method called on the function's &lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;includes()&lt;/code&gt; является намеренно универсальным. Это не требует, чтобы &lt;code&gt;this&lt;/code&gt; значение было объектом массива, поэтому его можно применять к другим типам объектов (например, объектам типа массивов). В приведенном ниже примере показан метод &lt;code&gt;includes()&lt;/code&gt; вызываемый для объекта &lt;a href=&quot;../../functions/arguments&quot;&gt;аргументов&lt;/a&gt; функции .</target>
        </trans-unit>
        <trans-unit id="379e18331c93ef94aa3c77faa0ac94bc7d417cd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;includes()&lt;/code&gt; used as a generic method</source>
          <target state="translated">&lt;code&gt;includes()&lt;/code&gt; используется как общий метод</target>
        </trans-unit>
        <trans-unit id="56e97b568cbc9fbfd601257310f762a373899fbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="f0a72c71f73b90aaab7762c65221e8a0bf196685" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexOf()&lt;/code&gt; and case-sensitivity</source>
          <target state="translated">&lt;code&gt;indexOf()&lt;/code&gt; и чувствительность к регистру</target>
        </trans-unit>
        <trans-unit id="25533fe1dedd3d23ca89fb498c89238a1e15c359" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexOf()&lt;/code&gt; compares &lt;code&gt;&lt;var&gt;searchElement&lt;/var&gt;&lt;/code&gt; to elements of the Array using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Strict_equality&quot;&gt;strict equality&lt;/a&gt; (the same method used by the &lt;code&gt;===&lt;/code&gt; or triple-equals operator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ff0e251d85a9886b9b96038a87352179a4ea29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexOf()&lt;/code&gt; compares &lt;code&gt;searchElement&lt;/code&gt; to elements of the Array using &lt;a href=&quot;../../operators/comparison_operators#Using_the_Equality_Operators&quot;&gt;strict equality&lt;/a&gt; (the same method used by the &lt;code&gt;===&lt;/code&gt; or triple-equals operator).</source>
          <target state="translated">&lt;code&gt;indexOf()&lt;/code&gt; сравнивает &lt;code&gt;searchElement&lt;/code&gt; с элементами Array, используя &lt;a href=&quot;../../operators/comparison_operators#Using_the_Equality_Operators&quot;&gt;строгое равенство&lt;/a&gt; (тот же метод, что и для оператора &lt;code&gt;===&lt;/code&gt; или оператора тройного равенства).</target>
        </trans-unit>
        <trans-unit id="fb945b69bce56c487bbd5ab28dc8600bdedc9b48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexOf()&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in all browsers. You can work around this by utilizing the following code at the beginning of your scripts. This will allow you to use &lt;code&gt;indexOf()&lt;/code&gt; when there is still no native support. This algorithm matches the one specified in ECMA-262, 5th edition, assuming &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../math/abs&quot;&gt;&lt;code&gt;Math.abs()&lt;/code&gt;&lt;/a&gt; have their original values.</source>
          <target state="translated">&lt;code&gt;indexOf()&lt;/code&gt; был добавлен в стандарт ECMA-262 в 5-м издании; поэтому он может присутствовать не во всех браузерах. Вы можете обойти это, используя следующий код в начале ваших скриптов. Это позволит вам использовать &lt;code&gt;indexOf()&lt;/code&gt; когда все еще нет встроенной поддержки. Этот алгоритм соответствует одному указанному в ECMA-262, 5 - е издание, предполагая &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../math/abs&quot;&gt; &lt;code&gt;Math.abs()&lt;/code&gt; &lt;/a&gt; имеют свои первоначальные значения.</target>
        </trans-unit>
        <trans-unit id="07b5bcc8ec621659ddc920118c5f84093d89b02d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexOf&lt;/code&gt; compares &lt;code&gt;&lt;var&gt;searchElement&lt;/var&gt;&lt;/code&gt; to elements of the typed array using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Using_the_Equality_Operators&quot;&gt;strict equality&lt;/a&gt; (the same method used by the ===, or triple-equals, operator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd0640cfd2574c0ffeb45d92a4029c92577a53c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;indexOf&lt;/code&gt; compares &lt;code&gt;searchElement&lt;/code&gt; to elements of the typed array using &lt;a href=&quot;../../operators/comparison_operators#Using_the_Equality_Operators&quot;&gt;strict equality&lt;/a&gt; (the same method used by the ===, or triple-equals, operator).</source>
          <target state="translated">&lt;code&gt;indexOf&lt;/code&gt; сравнивает &lt;code&gt;searchElement&lt;/code&gt; с элементами типизированного массива, используя &lt;a href=&quot;../../operators/comparison_operators#Using_the_Equality_Operators&quot;&gt;строгое равенство&lt;/a&gt; (тот же метод, который используется оператором === или тройным равенством).</target>
        </trans-unit>
        <trans-unit id="9f42a3aed7d7d9b7c92972f3e06ccc9b78cb9a51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialValue&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;initialValue&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="a492a507d4fb6b8bf3add697f0744aef2eb88479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instance&lt;/code&gt;: A &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; object that contains all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly functions&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;instance&lt;/code&gt; : объект &lt;a href=&quot;instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt; , содержащий все &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;экспортируемые функции WebAssembly&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ceed7d000d9c56cb7c6c5a7157bded93d8365bec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instance&lt;/code&gt;: A &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; object that contains all the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly functions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f40adc2d9149e7d2788a10342a44a60c6112844" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instanceof&lt;/code&gt; and multiple context (e.g. frames or windows)</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; и множественный контекст (например, фреймы или окна)</target>
        </trans-unit>
        <trans-unit id="06143afd51c718da002970cafe8b8e2ee936ec97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instanceof&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; оператор instanceof</target>
        </trans-unit>
        <trans-unit id="765a0abe9ec887d90d01da8f0a01bea77faeb433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;instanceof&lt;/code&gt; vs &lt;code&gt;isArray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;instanceof&lt;/code&gt; против &lt;code&gt;isArray&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="939c9dc0aaff8bb1d4fe5d5b9c115e46e8c4a06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isFinite&lt;/code&gt; is a function property of the global object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e2a027e362ac052d31a7654b0c37de6f2514f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isFinite&lt;/code&gt; is a top-level function and is not associated with any object.</source>
          <target state="translated">&lt;code&gt;isFinite&lt;/code&gt; - это функция верхнего уровня, которая не связана ни с каким объектом.</target>
        </trans-unit>
        <trans-unit id="899d654d9872fce9b9b929b5bc4064e7c4fa5ae7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isPrototypeOf()&lt;/code&gt; differs from the &lt;a href=&quot;../../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt;&lt;/a&gt; operator. In the expression &quot;&lt;code&gt;object instanceof AFunction&lt;/code&gt;&quot;, the &lt;code&gt;object&lt;/code&gt; prototype chain is checked against &lt;code&gt;AFunction.prototype&lt;/code&gt;, not against &lt;code&gt;AFunction&lt;/code&gt; itself.</source>
          <target state="translated">&lt;code&gt;isPrototypeOf()&lt;/code&gt; отличается от оператора &lt;a href=&quot;../../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;/a&gt; . В выражении &amp;laquo; &lt;code&gt;object instanceof AFunction&lt;/code&gt; &amp;raquo; цепочка прототипов &lt;code&gt;object&lt;/code&gt; проверяется по &lt;code&gt;AFunction.prototype&lt;/code&gt; , а не по самой &lt;code&gt;AFunction&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24981d89f983eafa2f7ed0ce22611f6a983b331b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;isPrototypeOf()&lt;/code&gt; method, along with the &lt;a href=&quot;../../operators/instanceof&quot;&gt;&lt;code&gt;instanceof&lt;/code&gt;&lt;/a&gt; operator particularly comes in handy if you have code that can only function when dealing with objects descended from a specific prototype chain, e.g., to guarantee that certain methods or properties will be present on that object.</source>
          <target state="translated">&lt;code&gt;isPrototypeOf()&lt;/code&gt; вместе с оператором &lt;a href=&quot;../../operators/instanceof&quot;&gt; &lt;code&gt;instanceof&lt;/code&gt; &lt;/a&gt; особенно полезен, если у вас есть код, который может работать только при работе с объектами, производными от определенной цепочки прототипов, например, чтобы гарантировать, что определенные методы или свойства будут присутствовать в этом объекте.</target>
        </trans-unit>
        <trans-unit id="643e854dbba61944e3251da5b8f1a5f3449c237a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;item1, item2, &lt;em&gt;...&lt;/em&gt;&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;item1, item2, &lt;em&gt;...&lt;/em&gt;&lt;/code&gt; Необязательно</target>
        </trans-unit>
        <trans-unit id="b34594d7601e63262cea8313640fe4f1931e6e5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lastIndexOf&lt;/code&gt; compares &lt;code&gt;&lt;var&gt;searchElement&lt;/var&gt;&lt;/code&gt; to elements of the typed array using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Using_the_Equality_Operators&quot;&gt;strict equality&lt;/a&gt; (the same method used by the ===, or triple-equals, operator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd9081c42cfb8c91e1feb43ab7884a70b776093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lastIndexOf&lt;/code&gt; compares &lt;code&gt;searchElement&lt;/code&gt; to elements of the Array using &lt;a href=&quot;../../operators/comparison_operators#Using_the_Equality_Operators&quot;&gt;strict equality&lt;/a&gt; (the same method used by the ===, or triple-equals, operator).</source>
          <target state="translated">&lt;code&gt;lastIndexOf&lt;/code&gt; сравнивает &lt;code&gt;searchElement&lt;/code&gt; с элементами массива, используя &lt;a href=&quot;../../operators/comparison_operators#Using_the_Equality_Operators&quot;&gt;строгое равенство&lt;/a&gt; (тот же метод, который используется оператором === или тройным равенством).</target>
        </trans-unit>
        <trans-unit id="853e89e96e9dcfddbfd8fdd2c68dbd41b39b2ccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lastIndexOf&lt;/code&gt; compares &lt;code&gt;searchElement&lt;/code&gt; to elements of the Array using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Using_the_Equality_Operators&quot;&gt;strict equality&lt;/a&gt; (the same method used by the ===, or triple-equals, operator).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d600a7491d52a042a3747106c14e80e1c228eb1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lastIndexOf&lt;/code&gt; compares &lt;code&gt;searchElement&lt;/code&gt; to elements of the typed array using &lt;a href=&quot;../../operators/comparison_operators#Using_the_Equality_Operators&quot;&gt;strict equality&lt;/a&gt; (the same method used by the ===, or triple-equals, operator).</source>
          <target state="translated">&lt;code&gt;lastIndexOf&lt;/code&gt; сравнивает &lt;code&gt;searchElement&lt;/code&gt; с элементами типизированного массива, используя &lt;a href=&quot;../../operators/comparison_operators#Using_the_Equality_Operators&quot;&gt;строгое равенство&lt;/a&gt; (тот же метод, который используется оператором === или тройным равенством).</target>
        </trans-unit>
        <trans-unit id="c27aa6a59fc580db6f23a5fe5efe997412979d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lastIndexOf&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in other implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;lastIndexOf&lt;/code&gt; in implementations which do not natively support it. This algorithm is exactly the one specified in ECMA-262, 5th edition, assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../math/floor&quot;&gt;&lt;code&gt;Math.floor&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../math/abs&quot;&gt;&lt;code&gt;Math.abs&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../math/min&quot;&gt;&lt;code&gt;Math.min&lt;/code&gt;&lt;/a&gt; have their original values.</source>
          <target state="translated">&lt;code&gt;lastIndexOf&lt;/code&gt; был добавлен в стандарт ECMA-262 в 5-й редакции; как таковой он может отсутствовать в других реализациях стандарта. Вы можете обойти это, вставив следующий код в начало ваших скриптов, что позволит использовать &lt;code&gt;lastIndexOf&lt;/code&gt; в реализациях, которые изначально не поддерживают его. Этот алгоритм в точности тот, что указан в ECMA-262, 5-е издание, при условии, что &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../math/floor&quot;&gt; &lt;code&gt;Math.floor&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../math/abs&quot;&gt; &lt;code&gt;Math.abs&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../math/min&quot;&gt; &lt;code&gt;Math.min&lt;/code&gt; &lt;/a&gt; имеют свои исходные значения.</target>
        </trans-unit>
        <trans-unit id="e1494054b2864371304dcf168fa269c57a88dc12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; is a property of a function object, and indicates how many arguments the function expects, i.e. the number of formal parameters. This number excludes the &lt;a href=&quot;../../functions/rest_parameters&quot;&gt;rest parameter&lt;/a&gt; and only includes parameters before the first one with a default value. By contrast, &lt;a href=&quot;../../functions/arguments/length&quot;&gt;&lt;code&gt;arguments.length&lt;/code&gt;&lt;/a&gt; is local to a function and provides the number of arguments actually passed to the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f359b5e345426d9bf6ba59f0790a690636177b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;length&lt;/code&gt; is a property of a function object, and indicates how many arguments the function expects, i.e. the number of formal parameters. This number excludes the &lt;a href=&quot;../../functions/rest_parameters&quot;&gt;rest parameter&lt;/a&gt; and only includes parameters before the first one with a default value. By contrast, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments/length&quot;&gt;&lt;code&gt;arguments.length&lt;/code&gt;&lt;/a&gt; is local to a function and provides the number of arguments actually passed to the function.</source>
          <target state="translated">&lt;code&gt;length&lt;/code&gt; - это свойство объекта функции, которое указывает, сколько аргументов ожидает функция, то есть количество формальных параметров. Это число исключает &lt;a href=&quot;../../functions/rest_parameters&quot;&gt;остальные параметры&lt;/a&gt; и включает только параметры перед первым со значением по умолчанию. Напротив, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/arguments/length&quot;&gt; &lt;code&gt;arguments.length&lt;/code&gt; &lt;/a&gt; является локальным для функции и предоставляет количество аргументов, фактически переданных функции.</target>
        </trans-unit>
        <trans-unit id="61223d52bfa6ffb8d595751e1469103ccd1961ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; allows you to declare variables that are limited in scope to the block, statement, or expression on which it is used. This is unlike the &lt;a href=&quot;var&quot;&gt;&lt;code&gt;var&lt;/code&gt;&lt;/a&gt; keyword, which defines a variable globally, or locally to an entire function regardless of block scope.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; позволяет объявлять переменные, которые ограничены в области видимости блоком, оператором или выражением, в которых он используется. В этом отличие от ключевого слова &lt;a href=&quot;var&quot;&gt; &lt;code&gt;var&lt;/code&gt; &lt;/a&gt; , которое определяет переменную глобально или локально для всей функции, независимо от области действия блока.</target>
        </trans-unit>
        <trans-unit id="822fcb1bfcb03aa68b4ab3d211f4de95c6048a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; allows you to declare variables that are limited to the scope of a &lt;a href=&quot;../statements/block&quot;&gt;block&lt;/a&gt; statement, or expression on which it is used, unlike the &lt;a href=&quot;../statements/var&quot;&gt;&lt;code&gt;var&lt;/code&gt;&lt;/a&gt; keyword, which declares a variable globally, or locally to an entire function regardless of block scope. The other difference between &lt;a href=&quot;../statements/var&quot;&gt;&lt;code&gt;var&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;let&lt;/code&gt; is that the latter is initialized to a value only when a &lt;a href=&quot;#Temporal_dead_zone&quot;&gt;parser evaluates it (see below)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28700d9a888e1b6a0cec7993d7cfde5ee80c0d86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt; bindings are created at the top of the (block) scope containing the declaration, commonly referred to as &quot;hoisting&quot;. Unlike variables declared with &lt;code&gt;&lt;a href=&quot;var#var_hoisting&quot;&gt;var&lt;/a&gt;&lt;/code&gt;, which will start with the value &lt;code&gt;undefined&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; variables are &lt;em&gt;not&lt;/em&gt; initialized until their definition is evaluated. Accessing the variable before the initialization results in a &lt;code&gt;&lt;a href=&quot;../global_objects/referenceerror&quot;&gt;ReferenceError&lt;/a&gt;&lt;/code&gt;. The variable is in a &quot;temporal dead zone&quot; from the start of the block until the initialization is processed.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; Привязки let создаются в верхней части (блочной) области, содержащей объявление, обычно называемой &amp;laquo;подъемом&amp;raquo;. В отличие от переменных, объявленных с помощью &lt;code&gt;&lt;a href=&quot;var#var_hoisting&quot;&gt;var&lt;/a&gt;&lt;/code&gt; , которые будут начинаться со значения &lt;code&gt;undefined&lt;/code&gt; , переменные &lt;code&gt;let&lt;/code&gt; &lt;em&gt;не&lt;/em&gt; инициализируются до тех пор, пока не будет оценено их определение. Доступ к переменной до инициализации приводит к &lt;code&gt;&lt;a href=&quot;../global_objects/referenceerror&quot;&gt;ReferenceError&lt;/a&gt;&lt;/code&gt; . Переменная находится во &amp;laquo;временной мертвой зоне&amp;raquo; от начала блока до обработки инициализации.</target>
        </trans-unit>
        <trans-unit id="6634b62facb18e92b00a216b96f06a1e139dc81a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;let&lt;/code&gt;, &lt;code&gt;const&lt;/code&gt;, variable statement</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; , &lt;code&gt;const&lt;/code&gt; , оператор переменной</target>
        </trans-unit>
        <trans-unit id="e72e4b1e66e02de9140db23dd83df205ea597263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="d7f9cffd4f74afa4801161ace29d01cb665195a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lineNumber&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;lineNumber&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="e712bfe6ecb688ba32226dbefb5354e6d725e103" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locale&lt;/code&gt; and &lt;code&gt;option&lt;/code&gt; parameter definitions.</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; и &lt;code&gt;option&lt;/code&gt; параметров определения.</target>
        </trans-unit>
        <trans-unit id="60a815eab185eaffdecdce195568be8a4df143ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locale&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="8b1219aab945d5132e5f2b35f5244596fcaec49d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;localeCompare()&lt;/code&gt; enables case-insensitive sorting for an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20a44dfcca998c5ef503eff3becc16118b7b710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;localeCompare&lt;/code&gt; enables a case-insensitive sort of an array.</source>
          <target state="translated">&lt;code&gt;localeCompare&lt;/code&gt; включает сортировку массива без учета регистра.</target>
        </trans-unit>
        <trans-unit id="da6bd07002699a30e46870ede88d7a681743ae9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locales&lt;/code&gt; argument</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt; аргумент locales</target>
        </trans-unit>
        <trans-unit id="49d2c825203adc463bf3d692bed66344507e517f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;locales&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;locales&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="c04fc9f45a7c9cb08466db65c0f83719b0340636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map()&lt;/code&gt; and &lt;code&gt;flatMap()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d933424e1b1c5d9493824146a1599d7add5d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map()&lt;/code&gt; does not mutate the typed array on which it is called (although &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt;, if invoked, may do so).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b1070a11e663243cc897c90af46f99c6df445c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; and &lt;code&gt;flatMap&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; и &lt;code&gt;flatMap&lt;/code&gt; карта</target>
        </trans-unit>
        <trans-unit id="e57a3fd231e88a7547f9de2db947f8cada7aef65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; calls a provided &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function &lt;strong&gt;once for each element&lt;/strong&gt; in an array, in order, and constructs a new array from the results. &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is invoked only for indexes of the array which have assigned values (including &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96cc5b436c888c25476cb2dbf8e94df66eabfc8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; calls a provided &lt;code&gt;callback&lt;/code&gt; function &lt;strong&gt;once for each element&lt;/strong&gt; in an array, in order, and constructs a new array from the results. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the array which have assigned values, including &lt;a href=&quot;../undefined&quot;&gt;undefined&lt;/a&gt;. It is not called for missing elements of the array (that is, indexes that have never been set, which have been deleted or which have never been assigned a value).</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; называет представленную &lt;code&gt;callback&lt;/code&gt; функции &lt;strong&gt;один раз для каждого элемента&lt;/strong&gt; в массиве, в порядке, и формирует новый массив из результатов. &lt;code&gt;callback&lt;/code&gt; вызывается только для индексов массива, которым присвоены значения, включая &lt;a href=&quot;../undefined&quot;&gt;undefined&lt;/a&gt; . Он не вызывается для отсутствующих элементов массива (то есть индексов, которые никогда не устанавливались, которые были удалены или которым никогда не было присвоено значение).</target>
        </trans-unit>
        <trans-unit id="e0c23f070663cb2915f56370ea143dc4868c5938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; does not mutate the array on which it is called (although &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;, if invoked, may do so).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17ed71a37d5b65ffb0eeb6231a2013dd37931f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; does not mutate the array on which it is called (although &lt;code&gt;callback&lt;/code&gt;, if invoked, may do so).</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; не изменяет массив, для которого он вызывается (хотя &lt;code&gt;callback&lt;/code&gt; , если он вызван, может это сделать).</target>
        </trans-unit>
        <trans-unit id="55e8ffd2f0cfc3a7a058db12dcbf51d63c959f0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; does not mutate the typed array on which it is called (although &lt;code&gt;callback&lt;/code&gt;, if invoked, may do so).</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; не изменяет типизированный массив, для которого он вызывается (хотя &lt;code&gt;callback&lt;/code&gt; , если он вызван, может это сделать).</target>
        </trans-unit>
        <trans-unit id="cafa7ca5004263e211a23b1ac00fee8761e93337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition. Therefore, it may not be present in all implementations of the standard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc420628951d5ff30d148e62effd16d526a1f18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;map&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;map&lt;/code&gt; in implementations which do not natively support it. This algorithm is exactly the one specified in ECMA-262, 5th edition, assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; have their original values and that &lt;code&gt;callback.call&lt;/code&gt; evaluates to the original value of &lt;code&gt;&lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;map&lt;/code&gt; была добавлена ​​в стандарт ECMA-262 в 5-й редакции; как таковой он может присутствовать не во всех реализациях стандарта. Вы можете обойти это, вставив следующий код в начало ваших скриптов, что позволит использовать &lt;code&gt;map&lt;/code&gt; в реализациях, которые изначально не поддерживают ее. Этот алгоритм в точности тот, что указан в ECMA-262, 5-е издание, при условии, что &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; имеют свои исходные значения и что &lt;code&gt;callback.call&lt;/code&gt; оценивает исходное значение &lt;code&gt;&lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="229ea5beb0c00342e4f861fcdb34073bc4227946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mapFn&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;mapFn&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="7423960ad7b7cd8782f87524a1f286508f9169eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;message&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="54687aeffccec4fbf3906cafca5811891cf8de0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;milliseconds&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;milliseconds&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="7bec0eddee15fcea03a00fc66c2039b6f38a0780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;minutes&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;minutes&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="cab863f9c8e7a621ab3319be4113367dd1c08e73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt;: A &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object representing the compiled WebAssembly module. This &lt;code&gt;Module&lt;/code&gt; can be instantiated again or shared via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; : объект &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; ,&lt;/a&gt; представляющий скомпилированный модуль WebAssembly. Этот &lt;code&gt;Module&lt;/code&gt; можно создать снова или поделиться через &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5689a43f501cd71795d1d667f7206c15c2e1e8cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt;: A &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object representing the compiled WebAssembly module. This &lt;code&gt;Module&lt;/code&gt; can be instantiated again or shared via &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570037a5d65dbd849625a8cab9872a559b518e7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt;: A &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object representing the compiled WebAssembly module. This &lt;code&gt;Module&lt;/code&gt; can be instantiated again, shared via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Caching_modules&quot;&gt;cached in IndexedDB&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;module&lt;/code&gt; : объект &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; ,&lt;/a&gt; представляющий скомпилированный модуль WebAssembly. Этот &lt;code&gt;Module&lt;/code&gt; можно создать снова, поделиться через &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage ()&lt;/a&gt; или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly/Caching_modules&quot;&gt;кэшировать в IndexedDB&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fc134d6450f86e7a6724daf78b78adb312805c57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;module&lt;/code&gt;: A &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object representing the compiled WebAssembly module. This &lt;code&gt;Module&lt;/code&gt; can be instantiated again, shared via &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Caching_modules&quot;&gt;cached in IndexedDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df19f489f733c86b7b7bcd72782bc7a2e1800a64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;month&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2a1acc7d30a7c5dacbd2d1aab8b125592a7291c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;multiline&lt;/code&gt; is now a prototype accessor property rather than an instance's own data property.</source>
          <target state="translated">&lt;code&gt;multiline&lt;/code&gt; теперь является свойством средства доступа прототипа, а не собственным свойством данных экземпляра.</target>
        </trans-unit>
        <trans-unit id="e666c8f51154bbcf68f816b9dfc58ee28346e8a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mutable&lt;/code&gt;: A boolean value that determines whether the global is mutable or not. By default, this is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mutable&lt;/code&gt; : логическое значение, определяющее, является ли глобальный изменчивым или нет. По умолчанию это &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32a18f6c94a79fb46945b65f077d9c265b494b87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;new&lt;/code&gt; оператор</target>
        </trans-unit>
        <trans-unit id="85f59cdf7d685517bc3f5651df6cf2d502964309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newSubStr&lt;/code&gt; (replacement)</source>
          <target state="translated">&lt;code&gt;newSubStr&lt;/code&gt; (замена)</target>
        </trans-unit>
        <trans-unit id="d17007687f3a99f714d9d260f795e29a2b0ec361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;newTarget&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;newTarget&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="30d3fa6853f76c881084956d744a7e1c78f35fa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt;;</target>
        </trans-unit>
        <trans-unit id="4abe21d3341151eecd4969352592801fdea88152" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;number&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="5244ccb067ab9d4431750169d11696d9bf36936a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onFulfilled&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;onFulfilled&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="9f726bced0ba01ba4cfbd1e6ee1918fc41560308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onRejected&amp;nbsp;&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;onRejected&amp;nbsp;&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="f881a71ea084724bb42dd595f47466ac0583c43c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onRejected&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;onRejected&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="cb95c8ee705426c47ba89027128d9ef4168b36c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; argument</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; аргумент опций</target>
        </trans-unit>
        <trans-unit id="3210cfefc5d87bfad12d64d89fcf375275f108b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="4d5084bd7d4339ac2ccb75678c4a506c3a413f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;padString&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;padString&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="8088aff0e0317cef88623399f1d8160d8c5c6bff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parentModule.js&lt;/code&gt;: acting as an aggregator (and doing nothing else)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a360387f23771e444dd7daeed80d461294ce6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parse&lt;/code&gt;: ISO 8601 format</source>
          <target state="translated">&lt;code&gt;parse&lt;/code&gt; : формат ISO 8601</target>
        </trans-unit>
        <trans-unit id="0947306acda4ddd1a5cf6f10a435ca59aa3ce255" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; and &lt;code&gt;BigInt&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a8927b9e38c8bc77bf97f12457660717a0ab643" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; can also parse and return &lt;a href=&quot;infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d1686c4d9e40c080766590b5d9888d77570f77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; can also parse and return the value &lt;code&gt;Infinity&lt;/code&gt;. You can use the &lt;a href=&quot;isfinite&quot;&gt;&lt;code&gt;isFinite&lt;/code&gt;&lt;/a&gt; function to determine if the result is a finite number (not &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt;, or &lt;code&gt;NaN&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;parseFloat&lt;/code&gt; также может анализировать и возвращать значение &lt;code&gt;Infinity&lt;/code&gt; . Вы можете использовать функцию &lt;a href=&quot;isfinite&quot;&gt; &lt;code&gt;isFinite&lt;/code&gt; ,&lt;/a&gt; чтобы определить, является ли результат конечным числом (не &lt;code&gt;Infinity&lt;/code&gt; , &lt;code&gt;-Infinity&lt;/code&gt; или &lt;code&gt;NaN&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="40fddb6d720adba759e183b974832e39d40b5e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; converts &lt;a href=&quot;bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; syntax to &lt;a href=&quot;number&quot;&gt;&lt;code&gt;Numbers&lt;/code&gt;&lt;/a&gt;, losing precision. This happens because the trailing &lt;code&gt;n&lt;/code&gt; character is discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed06ab8d1ef80cb9d0c2aecb83f1ac769b32d235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; is a function property of the global object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e833e009bf6d96e7580e00e81e79474c6101d516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; is a top-level function and is not associated with any object.</source>
          <target state="translated">&lt;code&gt;parseFloat&lt;/code&gt; - это функция верхнего уровня, которая не связана ни с каким объектом.</target>
        </trans-unit>
        <trans-unit id="c752e1cc1ed89d3cc5b1e95b1fa353bbff053244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; is also able to parse an object if it has a &lt;code&gt;toString&lt;/code&gt; or &lt;code&gt;valueOf&lt;/code&gt; method defined. The returned value is the same as if &lt;code&gt;parseFloat&lt;/code&gt; had been called on the result of calling that method.</source>
          <target state="translated">&lt;code&gt;parseFloat&lt;/code&gt; также может анализировать объект, если для него определен метод &lt;code&gt;toString&lt;/code&gt; или &lt;code&gt;valueOf&lt;/code&gt; . Возвращаемое значение такое же, как если бы &lt;code&gt;parseFloat&lt;/code&gt; был вызван в результате вызова этого метода.</target>
        </trans-unit>
        <trans-unit id="512af01629ed1f2f64dbc4d20a68658cce4d04cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; parses its argument, and returns a floating point number. If it encounters a character other than a sign (+ or -), numeral (0-9), a decimal point, or an exponent, it returns the value up to that point and ignores that character and all succeeding characters. Leading and trailing spaces are allowed.</source>
          <target state="translated">&lt;code&gt;parseFloat&lt;/code&gt; анализирует свой аргумент и возвращает число с плавающей запятой. Если он встречает символ, отличный от знака (+ или -), числа (0-9), десятичной точки или показателя степени, он возвращает значение до этой точки и игнорирует этот символ и все последующие символы. Разрешены начальные и конечные пробелы.</target>
        </trans-unit>
        <trans-unit id="dc4d1144569338664864cf74314032a54052defe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; returning &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c564d64ddcd2e6b477aebac437fd30fc7d3c9ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; returning NaN</source>
          <target state="translated">&lt;code&gt;parseFloat&lt;/code&gt; возвращает NaN</target>
        </trans-unit>
        <trans-unit id="7b82697d079ee451f8d08adc44b466d16a58f984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; returning a number</source>
          <target state="translated">&lt;code&gt;parseFloat&lt;/code&gt; возвращает число</target>
        </trans-unit>
        <trans-unit id="debdd5e01ab62bc3885c17016a45f499580cae76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseFloat&lt;/code&gt; will parse non-string objects if they have a &lt;a href=&quot;object/tostring&quot;&gt;&lt;code&gt;toString&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;object/valueof&quot;&gt;&lt;code&gt;valueOf&lt;/code&gt;&lt;/a&gt; method. The returned value is the same as if &lt;code&gt;parseFloat&lt;/code&gt; had been called on the result of those methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9cc97bca43306de8337457eb72736b3da3c5cdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseInt&lt;/code&gt; doesn't work with &lt;a href=&quot;../lexical_grammar#Numeric_separators&quot;&gt;numeric separators&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad844b7b48b7392f9e0839617c1cb44f0467d5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parseInt&lt;/code&gt; understands exactly two signs: &lt;code&gt;+&lt;/code&gt; for positive, and &lt;code&gt;-&lt;/code&gt; for negative (since ECMAScript 1). It is done as an initial step in the parsing after whitespace is removed. If no signs are found, the algorithm moves to the following step; otherwise, it removes the sign and runs the number-parsing on the rest of the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88486a3a2be7fe33994788c2f4fac2845014952c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pop&lt;/code&gt; is intentionally generic; this method can be &lt;a href=&quot;../function/call&quot;&gt;called&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;applied&lt;/a&gt; to objects resembling arrays. Objects which do not contain a &lt;code&gt;length&lt;/code&gt; property reflecting the last in a series of consecutive, zero-based numerical properties may not behave in any meaningful manner.</source>
          <target state="translated">&lt;code&gt;pop&lt;/code&gt; преднамеренно носит общий характер; этот метод можно &lt;a href=&quot;../function/call&quot;&gt;назвать&lt;/a&gt; или &lt;a href=&quot;../function/apply&quot;&gt;применены&lt;/a&gt; к объектам , напоминающих массивы. Объекты, которые не содержат свойство &lt;code&gt;length&lt;/code&gt; отражающее последнее в серии последовательных числовых свойств с отсчетом от нуля, могут не вести себя каким-либо значимым образом.</target>
        </trans-unit>
        <trans-unit id="6a8fa3c796449db4a213d5cc2b7b10858c8fdb79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position&amp;nbsp;&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;position&amp;nbsp;&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="64dc41635d1bb28845a6ca824a743234d18c19d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;position&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="789e43667203fa7c1507d9c5e506e81f5e11b37f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;precision&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;precision&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="73937dff81681f8e5ee4b1551bdfbe4f70c2c3a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;property_name&lt;/code&gt; is a string. The string does not have to be a valid identifier; it can have any value, e.g. &quot;1foo&quot;, &quot;!bar!&quot;, or even &quot; &quot; (a space).</source>
          <target state="translated">&lt;code&gt;property_name&lt;/code&gt; - это строка. Строка не обязательно должна быть действительным идентификатором; он может иметь любое значение, например, &amp;laquo;1foo&amp;raquo;, &amp;laquo;! bar!&amp;raquo; или даже &amp;laquo;&amp;raquo; (пробел).</target>
        </trans-unit>
        <trans-unit id="6e6c5a92bf165d55a69dcdd790ec75642103d7b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prototype&lt;/code&gt;: Ordinary object (ES2015)</source>
          <target state="translated">&lt;code&gt;prototype&lt;/code&gt; : Обычный объект (ES2015)</target>
        </trans-unit>
        <trans-unit id="412cbba62e710f9fda920ebc4cc9a20a08e11e2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;push&lt;/code&gt; is intentionally generic. This method can be used with &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt; on objects resembling arrays. The &lt;code&gt;push&lt;/code&gt; method relies on a &lt;code&gt;length&lt;/code&gt; property to determine where to start inserting the given values. If the &lt;code&gt;length&lt;/code&gt; property cannot be converted into a number, the index used is 0. This includes the possibility of &lt;code&gt;length&lt;/code&gt; being nonexistent, in which case &lt;code&gt;length&lt;/code&gt; will also be created.</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; намеренно общий. Этот метод можно использовать с &lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt; для объектов, похожих на массивы. Метод &lt;code&gt;push&lt;/code&gt; использует свойство &lt;code&gt;length&lt;/code&gt; , чтобы определить, где начать вставку заданных значений. Если свойство &lt;code&gt;length&lt;/code&gt; не может быть преобразовано в число, используется индекс 0. Это включает в себя возможность того, что &lt;code&gt;length&lt;/code&gt; не существует, и в этом случае &lt;code&gt;length&lt;/code&gt; также будет создана.</target>
        </trans-unit>
        <trans-unit id="ff437e1d27781fa8fde8129f602fde7e4d2dfb7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reduce()&lt;/code&gt; and &lt;code&gt;concat()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36091360e3739c71f986e08864dc9e15354071d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reduce()&lt;/code&gt; executes the &lt;code&gt;callback&lt;/code&gt; function once for each element present in the array, excluding holes in the array, receiving four arguments:</source>
          <target state="translated">&lt;code&gt;reduce()&lt;/code&gt; выполняет функцию &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента, присутствующего в массиве, исключая дыры в массиве, получая четыре аргумента:</target>
        </trans-unit>
        <trans-unit id="1b3c57cbbdda6a36df177dbe374329222c4c22c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reduce&lt;/code&gt; and &lt;code&gt;concat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;reduce&lt;/code&gt; и &lt;code&gt;concat&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19f7daca497866407a804d2515195e9b50de7a0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reduceRight&lt;/code&gt; executes the callback function once for each element present in the array, excluding holes in the array, receiving four arguments: the initial value (or value from the previous callback call), the value of the current element, the current index, and the array over which iteration is occurring.</source>
          <target state="translated">&lt;code&gt;reduceRight&lt;/code&gt; выполняет функцию обратного вызова один раз для каждого элемента, присутствующего в массиве, исключая дыры в массиве, получая четыре аргумента: начальное значение (или значение из предыдущего вызова обратного вызова), значение текущего элемента, текущий индекс и массив, по которому происходит итерация.</target>
        </trans-unit>
        <trans-unit id="e183bcee9fa0461929a460275eb46398543ac401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reduceRight&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;reduceRight&lt;/code&gt; in implementations which do not natively support it.</source>
          <target state="translated">&lt;code&gt;reduceRight&lt;/code&gt; был добавлен в стандарт ECMA-262 в 5-й редакции; как таковой он может присутствовать не во всех реализациях стандарта. Вы можете обойти это, вставив следующий код в начало ваших скриптов, что позволит использовать &lt;code&gt;reduceRight&lt;/code&gt; в реализациях, которые изначально не поддерживают его.</target>
        </trans-unit>
        <trans-unit id="33516876493d7ab271acd01e5cd4df9b508bb817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regexp&lt;/code&gt; (pattern)</source>
          <target state="translated">&lt;code&gt;regexp&lt;/code&gt; (шаблон)</target>
        </trans-unit>
        <trans-unit id="3b50cdeee94225760e2f7747c9332b8825ee7e2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;replacer&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;replacer&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="8370a5faedcbe09d86c0241713208a1aca553593" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reverse&lt;/code&gt; is intentionally generic; this method can be &lt;a href=&quot;../function/call&quot;&gt;called&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;applied&lt;/a&gt; to objects resembling arrays. Objects which do not contain a &lt;code&gt;length&lt;/code&gt; property reflecting the last in a series of consecutive, zero-based numerical properties may not behave in any meaningful manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf09657a6cd9369f4157f23ba0b5f27d5b6de5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reviver&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;reviver&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="f0e904f8c24ecf682a6f5e63458cb1cbcee9bac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;seconds&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;seconds&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="ff83357cc1b6979bd79773394fe6ea40a346fe11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;separator&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;separator&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="7170a35caeba3e97dec9aca1b6e4db73bc4bd2fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;shift&lt;/code&gt; is intentionally generic; this method can be &lt;a href=&quot;../function/call&quot;&gt;called&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;applied&lt;/a&gt; to objects resembling arrays. Objects which do not contain a &lt;code&gt;length&lt;/code&gt; property reflecting the last in a series of consecutive, zero-based numerical properties may not behave in any meaningful manner.</source>
          <target state="translated">&lt;code&gt;shift&lt;/code&gt; намеренно общий; этот метод можно &lt;a href=&quot;../function/call&quot;&gt;назвать&lt;/a&gt; или &lt;a href=&quot;../function/apply&quot;&gt;применены&lt;/a&gt; к объектам , напоминающих массивы. Объекты, которые не содержат свойство &lt;code&gt;length&lt;/code&gt; отражающее последнее в серии последовательных числовых свойств с отсчетом от нуля, могут не вести себя каким-либо значимым образом.</target>
        </trans-unit>
        <trans-unit id="daf9baeb2c55cc5db46ec106ce982f897f699f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice()&lt;/code&gt; also treats &lt;code&gt;NaN&lt;/code&gt; arguments as &lt;code&gt;0&lt;/code&gt;, but when it is given negative values it counts backwards from the end of the string to find the indexes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160dad759dd0e75b44cd564955c2cdc5c93e7148" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice()&lt;/code&gt; extracts the text from one string and returns a new string. Changes to the text in one string do not affect the other string.</source>
          <target state="translated">&lt;code&gt;slice()&lt;/code&gt; извлекает текст из одной строки и возвращает новую строку. Изменения текста в одной строке не влияют на другую строку.</target>
        </trans-unit>
        <trans-unit id="76c7627f2bf06346ac2769ec493e76edbc0bb0ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice()&lt;/code&gt; extracts up to but not including &lt;code&gt;&lt;var&gt;endIndex&lt;/var&gt;&lt;/code&gt;. &lt;code&gt;&lt;var&gt;str&lt;/var&gt;.slice(1, 4)&lt;/code&gt; extracts the second character through the fourth character (characters indexed &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, and &lt;code&gt;3&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f97bc4748414b9af188076accbb28e2bc86ead" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice()&lt;/code&gt; extracts up to but not including &lt;code&gt;endIndex&lt;/code&gt;. &lt;code&gt;str.slice(1, 4)&lt;/code&gt; extracts the second character through the fourth character (characters indexed 1, 2, and 3).</source>
          <target state="translated">&lt;code&gt;slice()&lt;/code&gt; извлекает до &lt;code&gt;endIndex&lt;/code&gt; , но не включая его . &lt;code&gt;str.slice(1, 4)&lt;/code&gt; извлекает символы со второго по четвертый (символы с индексами 1, 2 и 3).</target>
        </trans-unit>
        <trans-unit id="c3e1099202446c7e4ab7ef63ac55d9f8ec063f3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice&lt;/code&gt; does not alter the original array. It returns a shallow copy of elements from the original array. Elements of the original array are copied into the returned array as follows:</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; не изменяет исходный массив. Он возвращает мелкую копию элементов из исходного массива. Элементы исходного массива копируются в возвращаемый массив следующим образом:</target>
        </trans-unit>
        <trans-unit id="179b14e482dd2bf02a96de7ee24337cd6514dc71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice&lt;/code&gt; method can also be called to convert Array-like objects / collections to a new Array. You just bind the method to the object. The &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; inside a function is an example of an 'array-like object'.</source>
          <target state="translated">&lt;code&gt;slice&lt;/code&gt; Также можно вызвать метод slice для преобразования объектов / коллекций, подобных массиву, в новый массив. Вы просто привязываете метод к объекту. Эти &lt;a href=&quot;../../functions/arguments&quot;&gt; &lt;code&gt;arguments&lt;/code&gt; &lt;/a&gt; внутри функции является примером &amp;laquo;массив типа объекта&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="a233c16db0b04f34febcbccaa3c2964718da7174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;slice&lt;/code&gt; method can also be called to convert Array-like objects/collections to a new Array. You just &lt;a href=&quot;../function/bind&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; the method to the object. The &lt;a href=&quot;../../functions/arguments&quot;&gt;&lt;code&gt;arguments&lt;/code&gt;&lt;/a&gt; inside a function is an example of an 'array-like object'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c5dda2e59bbcd28149fa9d5e0afd8d273ac68e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some()&lt;/code&gt; does not mutate the array on which it is called.</source>
          <target state="translated">&lt;code&gt;some()&lt;/code&gt; не изменяет массив, для которого он вызывается.</target>
        </trans-unit>
        <trans-unit id="11b28e4ba0863d328756279e3c3292205af51c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some()&lt;/code&gt; executes the &lt;code&gt;callback&lt;/code&gt; function once for each element present in the array until it finds one where &lt;code&gt;callback&lt;/code&gt; returns a &lt;em&gt;truthy&lt;/em&gt; value (a value that becomes true when converted to a Boolean). If such an element is found, &lt;code&gt;some()&lt;/code&gt; immediately returns &lt;code&gt;true&lt;/code&gt;. Otherwise, &lt;code&gt;some()&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. &lt;code&gt;callback&lt;/code&gt; is invoked only for indexes of the array which have assigned values; it is not invoked for indexes which have been deleted or which have never been assigned values.</source>
          <target state="translated">&lt;code&gt;some()&lt;/code&gt; выполняет функцию &lt;code&gt;callback&lt;/code&gt; один раз для каждого элемента, присутствующего в массиве, пока не найдет тот, где &lt;code&gt;callback&lt;/code&gt; возвращает &lt;em&gt;истинное&lt;/em&gt; значение (значение, которое становится истинным при преобразовании в логическое значение). Если такой элемент найден, &lt;code&gt;some()&lt;/code&gt; немедленно возвращает &lt;code&gt;true&lt;/code&gt; . В противном случае &lt;code&gt;some()&lt;/code&gt; возвращает &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;callback&lt;/code&gt; вызывается только для индексов массива, которым присвоены значения; он не вызывается для индексов, которые были удалены или которым никогда не были присвоены значения.</target>
        </trans-unit>
        <trans-unit id="55765333c3af73f2cdee6fec903b8092522ffe32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some()&lt;/code&gt; was added to the ECMA-262 standard in the 5&lt;sup&gt;th&lt;/sup&gt; edition, and it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;some()&lt;/code&gt; in implementations which do not natively support it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1794642ba04e4d6337bfd3f3640e4918152c675c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some()&lt;/code&gt; was added to the ECMA-262 standard in the 5th edition; as such it may not be present in all implementations of the standard. You can work around this by inserting the following code at the beginning of your scripts, allowing use of &lt;code&gt;some()&lt;/code&gt; in implementations which do not natively support it. This algorithm is exactly the one specified in ECMA-262, 5th edition, assuming &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; have their original values and that &lt;code&gt;fun.call&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;some()&lt;/code&gt; был добавлен в стандарт ECMA-262 в 5-м издании; как таковой он может присутствовать не во всех реализациях стандарта. Вы можете обойти это, вставив следующий код в начало ваших скриптов, что позволит использовать &lt;code&gt;some()&lt;/code&gt; в реализациях, которые изначально не поддерживают его. Этот алгоритм в точности тот, что указан в ECMA-262, 5-е издание, при условии, что &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; имеют свои исходные значения и что &lt;code&gt;fun.call&lt;/code&gt; оценивает исходное значение &lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="814c33c4bbb96e5e855c39b48aa6eebdeb69b0f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;some&lt;/code&gt; does not mutate the typed array on which it is called.</source>
          <target state="translated">&lt;code&gt;some&lt;/code&gt; не изменяет типизированный массив, для которого он вызывается.</target>
        </trans-unit>
        <trans-unit id="be6f45d77c2c5ad4e6d66e946743407f28d80e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; is now a prototype accessor property rather than an instance's own data property.</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; теперь является свойством средства доступа прототипа, а не собственным свойством данных экземпляра.</target>
        </trans-unit>
        <trans-unit id="ec32f67a13e274cee41ce0b037a6bd6e20a67d84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;space&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;space&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="facf33433b0c7fdcba36fd5d05001e4a2741b9cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="00e4a88804e5cd470ac0711199de74522ec38452" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;substr()&lt;/code&gt; extracts &lt;code&gt;&lt;var&gt;length&lt;/var&gt;&lt;/code&gt; characters from a &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;, counting from the &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt; index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32bc7ebdd7a94be9c6d291b91bbee7e102177381" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;substr()&lt;/code&gt; extracts &lt;code&gt;length&lt;/code&gt; characters from a &lt;code&gt;string&lt;/code&gt;, counting from the &lt;code&gt;start&lt;/code&gt; index.</source>
          <target state="translated">&lt;code&gt;substr()&lt;/code&gt; извлекает символы &lt;code&gt;length&lt;/code&gt; из &lt;code&gt;string&lt;/code&gt; , считая от &lt;code&gt;start&lt;/code&gt; индекса.</target>
        </trans-unit>
        <trans-unit id="ba89e1d86344d4b9f6294322e48f8743d850e860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;substr&lt;/code&gt; (pattern)</source>
          <target state="translated">&lt;code&gt;substr&lt;/code&gt; (шаблон)</target>
        </trans-unit>
        <trans-unit id="0ea2b9dd54c521c8b0568f54307c19c64d1e9292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;substring()&lt;/code&gt; extracts characters from &lt;code&gt;&lt;var&gt;indexStart&lt;/var&gt;&lt;/code&gt; up to &lt;em&gt;but not including&lt;/em&gt;&lt;code&gt;&lt;var&gt;indexEnd&lt;/var&gt;&lt;/code&gt;. In particular:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bf3cc5b028ce89b3830152d34219ed010da730" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;substring()&lt;/code&gt; extracts characters from &lt;code&gt;indexStart&lt;/code&gt; up to &lt;em&gt;but not including&lt;/em&gt;&lt;code&gt;indexEnd&lt;/code&gt;. In particular:</source>
          <target state="translated">&lt;code&gt;substring()&lt;/code&gt; извлекает символы от &lt;code&gt;indexStart&lt;/code&gt; до indexEnd , &lt;em&gt;но не включая &lt;/em&gt; &lt;code&gt;indexEnd&lt;/code&gt; . В частности:</target>
        </trans-unit>
        <trans-unit id="f44a4e0f38b52ecf0a8a2003b18a78ebea1791aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;super.prop&lt;/code&gt; cannot overwrite non-writable properties</source>
          <target state="translated">&lt;code&gt;super.prop&lt;/code&gt; не может перезаписывать свойства, недоступные для записи</target>
        </trans-unit>
        <trans-unit id="8ec1da6f6f76d69f8e15863e8233f7a1bbd22277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;target&lt;/code&gt;: the original object which you want to proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5594874f7480f484387f72310ff0d93b8fc375" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; in function calls</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; в вызовах функций</target>
        </trans-unit>
        <trans-unit id="2b5ee3fe1f8e0e75aa710db2fa0a27deb969033d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; on the object's prototype chain</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; в цепочке прототипов объекта</target>
        </trans-unit>
        <trans-unit id="b501381387afcdf844a20f96f0b6091228630172" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt; with a getter or setter</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; с помощью геттера или сеттера</target>
        </trans-unit>
        <trans-unit id="0d5e6c58c5cd9b050c7049083d44fd11c2eec388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;this&lt;/code&gt;: only use &lt;code&gt;this&lt;/code&gt; when it refers to an object you created.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; : используйте &lt;code&gt;this&lt;/code&gt; только тогда, когда он относится к созданному вами объекту.</target>
        </trans-unit>
        <trans-unit id="779aceeb7270cdad00cb940de800bd7521481776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thisArg&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;thisArg&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="5a08d5948b2def2607aed3f4f4280c011a8b47f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timeout&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="cd6efa8c28d1b71498be4ed0b4c22dea950a0fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toFixed()&lt;/code&gt; returns a string representation of &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt; that does not use exponential notation and has exactly &lt;code&gt;&lt;var&gt;digits&lt;/var&gt;&lt;/code&gt; digits after the decimal place. The number is rounded if necessary, and the fractional part is padded with zeros if necessary so that it has the specified length. If the absolute value of &lt;code&gt;&lt;var&gt;numObj&lt;/var&gt;&lt;/code&gt; is greater or equal to &lt;code&gt;1e+21&lt;/code&gt;, this method simply calls &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt; and returns a string in exponential notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e9c8c91a10a0289e722c74917e77510f78f592" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toFixed()&lt;/code&gt; returns a string representation of &lt;code&gt;numObj&lt;/code&gt; that does not use exponential notation and has exactly &lt;code&gt;digits&lt;/code&gt; digits after the decimal place. The number is rounded if necessary, and the fractional part is padded with zeros if necessary so that it has the specified length. If &lt;code&gt;numObj&lt;/code&gt; is greater than &lt;code&gt;1e+21&lt;/code&gt;, this method simply calls &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt; and returns a string in exponential notation.</source>
          <target state="translated">&lt;code&gt;toFixed()&lt;/code&gt; возвращает строковое представление &lt;code&gt;numObj&lt;/code&gt; , которое не использует экспоненциальную запись и имеет ровно &lt;code&gt;digits&lt;/code&gt; цифр после десятичной точки. При необходимости число округляется, а дробная часть при необходимости дополняется нулями, чтобы она имела указанную длину. Если &lt;code&gt;numObj&lt;/code&gt; больше &lt;code&gt;1e+21&lt;/code&gt; , этот метод просто вызывает &lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;Number.prototype.toString()&lt;/code&gt; &lt;/a&gt; и возвращает строку в экспоненциальной записи.</target>
        </trans-unit>
        <trans-unit id="a8b651b9c77ed0ce1c0de403bac2282de958ed8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toJSON()&lt;/code&gt; behavior</source>
          <target state="translated">&lt;code&gt;toJSON()&lt;/code&gt; поведение</target>
        </trans-unit>
        <trans-unit id="80382765aecda671c63e02055ef7711dfa13c7c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toLocaleDateString&lt;/code&gt;: IANA time zone names in &lt;code&gt;timeZone&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;toLocaleDateString&lt;/code&gt; : имена IANA часовых поясов в &lt;code&gt;timeZone&lt;/code&gt; опции</target>
        </trans-unit>
        <trans-unit id="1b752b34a5916bc298b5c8206b28f514ea8ff59f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toLocaleString&lt;/code&gt;: IANA time zone names in &lt;code&gt;timeZone&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;toLocaleString&lt;/code&gt; : имена IANA часовых поясов в &lt;code&gt;timeZone&lt;/code&gt; опции</target>
        </trans-unit>
        <trans-unit id="6eb277cafd46f4159c896025370f12a2f6d64434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toLocaleTimeString&lt;/code&gt;: IANA time zone names in &lt;code&gt;timeZone&lt;/code&gt; option</source>
          <target state="translated">&lt;code&gt;toLocaleTimeString&lt;/code&gt; : имена IANA часовых поясов в &lt;code&gt;timeZone&lt;/code&gt; опции</target>
        </trans-unit>
        <trans-unit id="f2357bc54ea5d43b9624cc032c23bbef3e951d3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; can be used with every object and (by default) allows you to get its class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c0e4e4bc808aeef7016fa7c11598fcba4dde6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; can be used with every object and allows you to get its class. To use the &lt;code&gt;Object.prototype.toString()&lt;/code&gt; with every object, you need to call &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; on it, passing the object you want to inspect as the first parameter called &lt;code&gt;thisArg&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; может использоваться с любым объектом и позволяет получить его класс. Чтобы использовать &lt;code&gt;Object.prototype.toString()&lt;/code&gt; с каждым объектом, вам необходимо вызвать для него &lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt; , передав объект, который вы хотите проверить, в качестве первого параметра с именем &lt;code&gt;thisArg&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebaec00cdc4f2608e90c999113783bb2ce314eb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toString()&lt;/code&gt; is a generic method, it does not require that its &lt;code&gt;this&lt;/code&gt; is a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance. However, it must have an internal &lt;code&gt;[[TimeValue]]&lt;/code&gt; property that can't be constructed using native javascript, so it's effectively limited to use with &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instances. If called on a non&amp;ndash;Date instance, a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; - это общий метод, он не требует, чтобы &lt;code&gt;this&lt;/code&gt; был экземпляр &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; . Однако он должен иметь внутреннее &lt;code&gt;[[TimeValue]]&lt;/code&gt; которое не может быть создано с использованием собственного javascript, поэтому его можно эффективно использовать только с экземплярами &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; . При вызове экземпляра, отличного от Date, &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ca2801f838535a0ed5aff213d7462469b98e89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;toStringTag&lt;/code&gt; available on all DOM prototype objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03e7516d03397c9f071fe8f614d35da9a8a7cb33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true || (&lt;em&gt;anything)&lt;/em&gt;&lt;/code&gt; is short-circuit evaluated to true.</source>
          <target state="translated">&lt;code&gt;true || (&lt;em&gt;anything)&lt;/em&gt;&lt;/code&gt; короткое замыкание оценивается как истина.</target>
        </trans-unit>
        <trans-unit id="3a75a9892ce646bf1a1c3e7454deee3185504855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; for all cases except when the property is an &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;own&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../errors/cant_delete&quot;&gt;&lt;code&gt;non-configurable&lt;/code&gt;&lt;/a&gt; property, in which case, &lt;code&gt;false&lt;/code&gt; is returned in non-strict mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38cbb75fcf75ae853ba9352668f45a213d129616" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; for all cases except when the property is an &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;own&lt;/a&gt;&lt;a href=&quot;../errors/cant_delete&quot;&gt;non-configurable&lt;/a&gt; property, in which case, &lt;code&gt;false&lt;/code&gt; is returned in non-strict mode.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; для всех случаев, кроме случаев, когда свойство является &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;собственным &lt;/a&gt;&lt;a href=&quot;../errors/cant_delete&quot;&gt;ненастраиваемым&lt;/a&gt; свойством, и в этом случае в нестрогом режиме возвращается значение &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43d49a42f4ac24a23d7b0dc480f52bb724400658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if an element in the &lt;code&gt;Map&lt;/code&gt; object existed and has been removed, or &lt;code&gt;false&lt;/code&gt; if the element does not exist.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если элемент в объекте &lt;code&gt;Map&lt;/code&gt; существовал и был удален, или &lt;code&gt;false&lt;/code&gt; , если элемент не существует.</target>
        </trans-unit>
        <trans-unit id="b52fa274694ea5a1179413a7e3384afacd0c8c93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if an element in the &lt;code&gt;Set&lt;/code&gt; object has been removed successfully; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если элемент в объекте &lt;code&gt;Set&lt;/code&gt; был успешно удален; в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad47e78b85ff8fcadb3f477f5ee28babaf94f1aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if an element in the &lt;code&gt;WeakMap&lt;/code&gt; object has been removed successfully. &lt;code&gt;false&lt;/code&gt; if the key is not found in the &lt;code&gt;WeakMap&lt;/code&gt; or if the key is not an object.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; &lt;code&gt;WeakMap&lt;/code&gt; true, если элемент в объекте WeakMap был успешно удален. &lt;code&gt;false&lt;/code&gt; , если ключ не найден в &lt;code&gt;WeakMap&lt;/code&gt; или если ключ не является объектом.</target>
        </trans-unit>
        <trans-unit id="29b415aaceb085945bf44324421e03d6e9dd9d79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if an element in the &lt;code&gt;WeakSet&lt;/code&gt; object has been removed successfully. &lt;code&gt;false&lt;/code&gt; if the &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; is not found in the &lt;code&gt;WeakSet&lt;/code&gt; or if the &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; is not an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d10e10b35c90a25c38dcec81ac0307fdb144459e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if an element with the specified key exists in the &lt;code&gt;Map&lt;/code&gt; object; otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd4f5c319694e7739e297c51a6f63c48382b8ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; тогда и только тогда, когда тип этого дескриптора свойства может быть изменен и если свойство может быть удалено из соответствующего объекта.</target>
        </trans-unit>
        <trans-unit id="a261c928f83c6ef114df5a7b67df45bdfdd4d65e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if the value associated with the property may be changed (data descriptors only).</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; Значение true тогда и только тогда, когда значение, связанное со свойством, может быть изменено (только дескрипторы данных).</target>
        </trans-unit>
        <trans-unit id="2998d7302bb6803e20e9c8b2bacf115cfee7be97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if the value associated with the property may be changed with an &lt;a href=&quot;../../operators/assignment_operators&quot;&gt;assignment operator&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; Значение true тогда и только тогда, когда значение, связанное со свойством, может быть изменено с помощью &lt;a href=&quot;../../operators/assignment_operators&quot;&gt;оператора присваивания&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d00d86a6d8a92e37edb6285755a29d872a473677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if the value associated with the property may be changed with an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;assignment operator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f79a7d054490db92eba9d372aa4b719752b605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if and only if this property shows up during enumeration of the properties on the corresponding object.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; тогда и только тогда, когда это свойство отображается во время перечисления свойств соответствующего объекта.</target>
        </trans-unit>
        <trans-unit id="4c3da4f0fa6fb277cb9092ad700602053d320d24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; function returns a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; value for every array element. Otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d3dd43c68d5e696a9e5641f1bcd93c50c6e202" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the callback function returns a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/truthy&quot;&gt;truthy&lt;/a&gt; value for at least one element in the array. Otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c21a792f1196a7bf318d7ddda31a497ec72af276" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given argument is one of the &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; views; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403ab8fef7185da9ea8f236690743212ee3f4511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given argument is one of the &lt;code&gt;ArrayBuffer&lt;/code&gt; views; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если данный аргумент является одним из представлений &lt;code&gt;ArrayBuffer&lt;/code&gt; ; в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ad722b1a78f0b3aaa3ab9fc3122d01b5ab72196" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given characters are found at the beginning of the string; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если данные символы находятся в начале строки; в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="599635e4a36f0da6f478ec8cea82bf84c7e4eba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given characters are found at the end of the string; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если данные символы находятся в конце строки; в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efce8eb89437ea55e8a2d32953d36dcf92c4b621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the given value is &lt;a href=&quot;nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если заданное значение - &lt;a href=&quot;nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; ; в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="342737374e8a91e88099d9b9c6cf35e172a22132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the search string is found anywhere within the given string; otherwise, &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если строка поиска найдена где-нибудь в заданной строке; в противном случае - &lt;code&gt;false&lt;/code&gt; , если нет.</target>
        </trans-unit>
        <trans-unit id="b45b62d5368b4c0e9efcd190abd4657b28482aac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the type of this property descriptor may be changed and if the property may be deleted from the corresponding object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adc4051d3bc152ed3183c5026223536cde154b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the value associated with the property may be changed with an &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators&quot;&gt;assignment operator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c424b5f4868e1250efd5e39d0663d70bdfaf0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if the value is an &lt;a href=&quot;../array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если значение - &lt;a href=&quot;../array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; ; в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="559a1263b837d64ca49563260ab655c8946e0b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if there is a match between the regular expression and the specified string; otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; если есть соответствие между регулярным выражением и указанной строкой; в противном случае - &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5aa4fc19ff2fed2084866086fd95c9826c1eb21b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; if there is a match between the regular expression and the string &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;. Otherwise, &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77828a19827fbdc424b84d1895fdd02871afd19b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; is very useful, but it's not as versatile as might be required. For example, &lt;code&gt;typeof([])&lt;/code&gt; , is &lt;code&gt;'object'&lt;/code&gt;, as well as &lt;code&gt;typeof(new Date())&lt;/code&gt;, &lt;code&gt;typeof(/abc/)&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06a8d0aa1f35f09637f0a833487b8ac3df2eaf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;typeof&lt;/code&gt; operator</source>
          <target state="translated">&lt;code&gt;typeof&lt;/code&gt; оператор typeof</target>
        </trans-unit>
        <trans-unit id="a0e464a434c0829ccdda8e446f04c6aa52dfeef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt; is a property of the &lt;em&gt;global object&lt;/em&gt;. That is, it is a variable in global scope. The initial value of &lt;code&gt;undefined&lt;/code&gt; is the primitive value &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39019e70685809a646df8badf13aa6fcb90f191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt; is a property of the &lt;em&gt;global object&lt;/em&gt;; i.e., it is a variable in global scope. The initial value of &lt;code&gt;undefined&lt;/code&gt; is the primitive value &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; - свойство &lt;em&gt;глобального объекта&lt;/em&gt; ; т.е. это переменная в глобальной области видимости. Начальное значение &lt;code&gt;undefined&lt;/code&gt; - это примитивное значение &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e32478874aacd9d501e1cb1554de2adde3425fe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="583f1a093d9e0daac2d6218f56fbe2b878d0a75c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;uneval()&lt;/code&gt; is a top-level function and is not associated with any object.</source>
          <target state="translated">&lt;code&gt;uneval()&lt;/code&gt; - это функция верхнего уровня, которая не связана ни с одним объектом.</target>
        </trans-unit>
        <trans-unit id="32c095e38b4ee414da4e757f9bfe9348be4e3399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unshift&lt;/code&gt; is intentionally generic. This method can be &lt;a href=&quot;../function/call&quot;&gt;called&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;applied&lt;/a&gt; to objects resembling arrays. Objects which do not contain a &lt;code&gt;length&lt;/code&gt; property&amp;mdash;reflecting the last in a series of consecutive, zero-based numerical properties&amp;mdash;may not behave in any meaningful manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ea170c667936dd460a01147aec68e0e36f24d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unshift&lt;/code&gt; is intentionally generic; this method can be &lt;a href=&quot;../function/call&quot;&gt;called&lt;/a&gt; or &lt;a href=&quot;../function/apply&quot;&gt;applied&lt;/a&gt; to objects resembling arrays. Objects which do not contain a &lt;code&gt;length&lt;/code&gt; property reflecting the last in a series of consecutive, zero-based numerical properties may not behave in any meaningful manner.</source>
          <target state="translated">&lt;code&gt;unshift&lt;/code&gt; намеренно общий; этот метод можно &lt;a href=&quot;../function/call&quot;&gt;назвать&lt;/a&gt; или &lt;a href=&quot;../function/apply&quot;&gt;применены&lt;/a&gt; к объектам , напоминающих массивы. Объекты, которые не содержат свойство &lt;code&gt;length&lt;/code&gt; отражающее последнее в серии последовательных числовых свойств с отсчетом от нуля, могут не вести себя каким-либо значимым образом.</target>
        </trans-unit>
        <trans-unit id="082c78c82d02cfa1aa55b9668629269cfe246e0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value1&lt;/code&gt;, &lt;code&gt;value2&lt;/code&gt;, &amp;hellip;, &lt;code&gt;valueN&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;value1&lt;/code&gt; , &lt;code&gt;value2&lt;/code&gt; ,&amp;hellip;, &lt;code&gt;valueN&lt;/code&gt; Необязательно</target>
        </trans-unit>
        <trans-unit id="d8fca77d17b58678670fbc0cae9a64a21cc517f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; - any JavaScript value returned by the iterator. Can be omitted when &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; - любое значение JavaScript, возвращаемое итератором. Может быть опущено , когда &lt;code&gt;done&lt;/code&gt; это &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="719b0a44fa3a7cc390dda454c3238006d814f0f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt;: A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/USVString&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; representing the data type of the global. This can be one of &lt;code&gt;i32&lt;/code&gt;, &lt;code&gt;i64&lt;/code&gt;, &lt;code&gt;f32&lt;/code&gt;, and &lt;code&gt;f64&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/USVString&quot;&gt; &lt;code&gt;USVString&lt;/code&gt; ,&lt;/a&gt; представляющая тип данных глобального. Это может быть один из &lt;code&gt;i32&lt;/code&gt; , &lt;code&gt;i64&lt;/code&gt; , &lt;code&gt;f32&lt;/code&gt; , и &lt;code&gt;f64&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e73f3f1f5fa4d6bd92c5a843d08920d8f064e14a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;Optional</source>
          <target state="translated">&lt;code&gt;value&lt;em&gt;N&lt;/em&gt;&lt;/code&gt;Optional</target>
        </trans-unit>
        <trans-unit id="b278bbc667f37602237e3f657c44d68ec7b00636" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var1&lt;/code&gt;, &lt;code&gt;var2&lt;/code&gt;, &amp;hellip;, &lt;code&gt;varN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;var1&lt;/code&gt; , &lt;code&gt;var2&lt;/code&gt; ,&amp;hellip;, &lt;code&gt;varN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5198c43a0a2c8e761576d62222bceee6d227648e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declarations, wherever they occur, are processed before any code is executed. This is called</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="185c9b3f09ed3b97953f5ab491884df10b2d1078" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;var&lt;/code&gt; declarations, wherever they occur, are processed before any code is executed. This is called hoisting, and is discussed further below.</source>
          <target state="translated">&lt;code&gt;var&lt;/code&gt; Объявления var , где бы они ни появлялись, обрабатываются до выполнения любого кода. Это называется подъемом и обсуждается ниже.</target>
        </trans-unit>
        <trans-unit id="e29396e88101aa5c9c6e5b1a6ea79a0ca2383722" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;weekday&lt;/code&gt; , &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1ab0381dcfa7096741dbbe819c3f0cd4e33a1de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;weekday&lt;/code&gt; , &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt; , &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; , &lt;code&gt;second&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4a3d71da112f61025ed1ed587e449658a6dd9467" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with&lt;/code&gt; check&lt;code&gt;: with(proxy) { (foo); }&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; проверкой &lt;code&gt;: with(proxy) { (foo); }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e21e2f9b82bc91902812d873f3f79cfae15e1f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="127e3bef85bcf72c62d28958d52e82b0eba14fa6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f44ca90616094f82848fbe5144c223df70db8b64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yield*&lt;/code&gt; is an expression, not a statement&amp;mdash;so it evaluates to a value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c455c86448186ceb1938325bdc16b3566e6f09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yield*&lt;/code&gt; is an expression, not a statement, so it evaluates to a value.</source>
          <target state="translated">&lt;code&gt;yield*&lt;/code&gt; - это выражение, а не оператор, поэтому он возвращает значение.</target>
        </trans-unit>
        <trans-unit id="c4818477820572aa3eba10723060b580dabd13d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yield&lt;/code&gt; can only be called directly from the generator function that contains it. It cannot be called from nested functions or from callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419dd5b8fccd2a6487579a6a8a9b5e7f19fe9565" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yield&lt;/code&gt;, &lt;code&gt;yield*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; , &lt;code&gt;yield*&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="341bf96f46b0c81adb002d295542211646e18d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{a, b} = {a: 1, b: 2}&lt;/code&gt; is not valid stand-alone syntax, as the &lt;code&gt;{a, b}&lt;/code&gt; on the left-hand side is considered a block and not an object literal.</source>
          <target state="translated">&lt;code&gt;{a, b} = {a: 1, b: 2}&lt;/code&gt; не является допустимым автономным синтаксисом, так как &lt;code&gt;{a, b}&lt;/code&gt; слева считается блоком, а не литералом объекта.</target>
        </trans-unit>
        <trans-unit id="5230ab5dda2ed412cc89baa47822f4d75125653e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(But if same object is created simply in different order -- at least in some implementations...)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(Но если один и тот же объект создается просто в другом порядке - по крайней мере, в некоторых реализациях ...)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c80e7c4a9494fcf16c8427fb8b64aa835e6b0f9c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(But if the same object is created simply in a different order -- at least in some implementations...)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb02ceb026e6ae5ac6f0be402c1b301d7940564" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;(In addition to all the string-related functions shown above, this also adds:)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;(В дополнение ко всем функциям, связанным со строками, показанным выше, это также добавляет :)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2eef995cc95e10cdc733dccecfaa31698e73159" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A simple common debugging function:&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Простая общая функция отладки:&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d5b905aab17381457ccd41c46671a2d91479799" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Implementation-dependent&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Implementation-dependent&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7fa0ad8b5a8291adb411d07ca7859a1bddd190ce" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Not such simple results: (especially if silent error-trapping had hidden the error messages)&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Не такие простые результаты: (особенно если скрытый отлов ошибок скрыл сообщения об ошибках)&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="717f3e3fcef4bcf703ec3a92b35b6d2e55c89b37" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;CompileError&lt;/code&gt; constructor contains no methods of its own, however, it does inherit some methods through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Конструктор &lt;code&gt;CompileError&lt;/code&gt; не содержит собственных методов, однако он наследует некоторые методы через цепочку прототипов.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="87700a667a6673156a97eafb30f14af47b5921a3" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;CompileError&lt;/code&gt; constructor contains no unique properties of its own, however, it does inherit some properties through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Конструктор &lt;code&gt;CompileError&lt;/code&gt; не содержит собственных уникальных свойств, однако он наследует некоторые свойства через цепочку прототипов.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f15b7e992ab5dd1f13952a86ad0bf02cdea5df4b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;LinkError&lt;/code&gt; constructor contains no methods of its own, however, it does inherit some methods through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Конструктор &lt;code&gt;LinkError&lt;/code&gt; не содержит собственных методов, однако он наследует некоторые методы через цепочку прототипов.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6c1ba8efd28bc55d3bdf90dfe77d00fb1c86e62d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;LinkError&lt;/code&gt; constructor contains no unique properties of its own, however, it does inherit some properties through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Конструктор &lt;code&gt;LinkError&lt;/code&gt; не содержит собственных уникальных свойств, однако он наследует некоторые свойства через цепочку прототипов.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="81ab2d2c1255f7e1753ac01cc91d81c8f9c48501" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;RuntimeError&lt;/code&gt; constructor contains no methods of its own, however, it does inherit some methods through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Конструктор &lt;code&gt;RuntimeError&lt;/code&gt; не содержит собственных методов, однако он наследует некоторые методы через цепочку прототипов.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74095f42de4d7f5475ae1dbc4725b9be3544fd4f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The &lt;code&gt;RuntimeError&lt;/code&gt; constructor contains no unique properties of its own, however, it does inherit some properties through the prototype chain.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Конструктор &lt;code&gt;RuntimeError&lt;/code&gt; не содержит собственных уникальных свойств, однако он наследует некоторые свойства через цепочку прототипов.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8cb7b844be425a6fac5553f6a15fb2935cc155cf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;TypedArray&lt;/em&gt;.length</source>
          <target state="translated">&lt;em&gt;TypedArray&lt;/em&gt;.length</target>
        </trans-unit>
        <trans-unit id="1c710b3236a880a923694bf6a06886ddbacad493" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;bufferSource&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;bufferSource&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1fba8cd3f7f6217871e25861874ae318826487b9" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;descriptor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;descriptor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="54072ae3218999871450d1ac7d5ccf9caab714d0" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;element&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;element&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="842439d5a5b16c0e40a6c0b28aaf23f3b2e8f80e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fulfilled&lt;/em&gt;: meaning that the operation completed successfully.</source>
          <target state="translated">&lt;em&gt;выполнено&lt;/em&gt; : означает, что операция успешно завершена.</target>
        </trans-unit>
        <trans-unit id="9d5941e7369e2245ec8324630f746a5f579fa604" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;fulfilled&lt;/em&gt;: meaning that the operation was completed successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd168aa9d4ae49e271eef17edb16794501f68041" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;getTime() always uses UTC for time representation. For example, a client browser in one timezone, getTime() will be the same as a client browser in any other timezone.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;getTime () всегда использует UTC для представления времени. Например, клиентский браузер в одном часовом поясе getTime () будет таким же, как клиентский браузер в любом другом часовом поясе.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5202973f7bda6ae438bed3c03b95c200d8b18c2c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;importObject&lt;/em&gt;Optional</source>
          <target state="translated">&lt;em&gt;importObject&lt;/em&gt;Optional</target>
        </trans-unit>
        <trans-unit id="4bdbec4903c75d928d10089c854073ed37579d4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;index&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;index&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d7b87c5aff182ec43148180c5da2bc7e9cebaa8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;initial&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;initial&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="598521aec28dde71093d6bbc59ff5cfc1299ca0e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;maximum Optional&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;максимум Дополнительно&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="934ace61f06798239432f0fa44e4ff08d6329c5a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;memoryDescriptor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;memoryDescriptor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="38e0f8032431764a059a1cb9cc659b02c68bf62d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;module&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;module&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb30455a66424f3529cb89fcf9b7e15c3d5db894" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;number&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;number&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d8d22cc104a692c502f9dcdf46a40697fc074e64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;or&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;or&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c43da98eedb6185b4e71f1eec7e1639f100b2700" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;pending&lt;/em&gt;: initial state, neither fulfilled nor rejected.</source>
          <target state="translated">&lt;em&gt;в ожидании&lt;/em&gt; : исходное состояние, не выполнено и не отклонено.</target>
        </trans-unit>
        <trans-unit id="62469c9ee4d6d79ce6f2f8d4741fef5526fd9e0a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;rejected&lt;/em&gt;: meaning that the operation failed.</source>
          <target state="translated">&lt;em&gt;отклонено&lt;/em&gt; : означает, что операция не удалась.</target>
        </trans-unit>
        <trans-unit id="076c60f25ec5e538e4ed4f4fecd6fb1b67cb4534" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;sectionName&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;sectionName&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="24bcdb791ccc08a22b157d613997e10cb880d5ab" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;source&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;source&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="90915625bd23460bbd44a00cfa9cf6a30f7e2120" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tableDescriptor&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;tableDescriptor&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="10724613722309506661f9165cfb6951a5777c68" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;tagged template&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b94954efb552b29d0a51dd28abd1e100e2963d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;value&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;value&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="186298d2b51234bde601493ff83fbb5fe6dc2235" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arity&quot;&gt;&lt;code&gt;Function.arity&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/arity&quot;&gt;&lt;code&gt;Function.arity&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="6029dc0e32d5181c9fba478ecc8d70c25b2353fa" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toInteger&quot;&gt;&lt;code&gt;Number.toInteger()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toInteger&quot;&gt;&lt;code&gt;Number.toInteger()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="3d323408d32352f03d18541923ef7caf562d4d7d" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/count&quot;&gt;&lt;code&gt;Object.prototype.__count__&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/count&quot;&gt;&lt;code&gt;Object.prototype.__count__&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="21cd6cc7bf1095aefebe43ef37e8ced2ea2fbe4a" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/eval&quot;&gt;&lt;code&gt;Object.prototype.eval()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/eval&quot;&gt;&lt;code&gt;Object.prototype.eval()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="df274dbbedd00a1dd82f3a4a7d6246936b3a95f4" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/parent&quot;&gt;&lt;code&gt;Object.prototype.__parent__&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/parent&quot;&gt;&lt;code&gt;Object.prototype.__parent__&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="22a2cc28c8fd46b420a8e8c936878a517cb20ea9" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/quote&quot;&gt;&lt;code&gt;String.prototype.quote()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/quote&quot;&gt;&lt;code&gt;String.prototype.quote()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="f519c17b9e05ab642f70b7f859003b50b27c3755" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap/clear&quot;&gt;&lt;code&gt;WeakMap.prototype.clear()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap/clear&quot;&gt;&lt;code&gt;WeakMap.prototype.clear()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="0af0f742385c87deb76114ccabb08706485d454d" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet/clear&quot;&gt;&lt;code&gt;WeakSet.prototype.clear()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet/clear&quot;&gt;&lt;code&gt;WeakSet.prototype.clear()&lt;/code&gt;&lt;/a&gt; &lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="3562043c28d38e818e1d9187523ab791d7e15d59" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Removes all elements from the &lt;code&gt;WeakSet&lt;/code&gt; object.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Удаляет все элементы из объекта &lt;code&gt;WeakSet&lt;/code&gt; .&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="62be5d11388f2bf91d12309fb1a47e2b90a86249" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Removes all key/value pairs from the &lt;code&gt;WeakMap&lt;/code&gt; object. Note that it is possible to implement a &lt;code&gt;WeakMap&lt;/code&gt;-like object that has a &lt;code&gt;.clear()&lt;/code&gt; method by encapsulating a &lt;code&gt;WeakMap&lt;/code&gt; object that hasn't it (see example on page &lt;a href=&quot;../weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt;)&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Удаляет все пары ключ / значение из объекта &lt;code&gt;WeakMap&lt;/code&gt; . Обратите внимание, что можно реализовать объект, &lt;code&gt;WeakMap&lt;/code&gt; на WeakMap, который имеет метод &lt;code&gt;.clear()&lt;/code&gt; путем инкапсуляции объекта &lt;code&gt;WeakMap&lt;/code&gt; , у которого его нет (см. Пример на странице &lt;a href=&quot;../weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt; )&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="3c7aa0f3f104fcbc272e3a3584e844979b6c8c0f" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Removes all key/value pairs from the &lt;code&gt;WeakMap&lt;/code&gt; object. Note that it is possible to implement a &lt;code&gt;WeakMap&lt;/code&gt;-like object that has a &lt;code&gt;.clear()&lt;/code&gt; method by encapsulating a &lt;code&gt;WeakMap&lt;/code&gt; object that hasn't it (see example on page &lt;a href=&quot;weakmap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt;)&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Удаляет все пары ключ / значение из объекта &lt;code&gt;WeakMap&lt;/code&gt; . Обратите внимание, что можно реализовать объект, &lt;code&gt;WeakMap&lt;/code&gt; на WeakMap, который имеет метод &lt;code&gt;.clear()&lt;/code&gt; путем инкапсуляции объекта &lt;code&gt;WeakMap&lt;/code&gt; , у которого его нет (см. Пример на странице &lt;a href=&quot;weakmap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt; )&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="f336d80dafe45ae2ae62932e7bc01ae45e6a6a39" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to evaluate a string of JavaScript code in the context of the specified object, but has been removed.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Используется для оценки строки кода JavaScript в контексте указанного объекта, но был удален.&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="0bc2f9caec433cdab4e0c56b5932cc0751fa2a1f" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to evaluate the passed value and convert it to an integer (or &lt;a href=&quot;infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;), but has been removed.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Используется для оценки переданного значения и преобразования его в целое число (или &lt;a href=&quot;infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; ), но было удалено.&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="06147fd5b0330a3bd35221810117c0104614dc3b" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to point to an object's context, but has been removed.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Используется для указания контекста объекта, но был удален.&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="6df39bb87236c6a95814f2126d778ad77c7fb09b" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to return the number of enumerable properties directly on a user-defined object, but has been removed.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Используется для возврата количества перечислимых свойств непосредственно для определенного пользователем объекта, но был удален.&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="06fd1cef6bdb79a0e58063eda9afba9011f52ad0" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to specifiy the number of arguments expected by the function, but has been removed. Use the &lt;a href=&quot;function/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property instead.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Используется для указания количества аргументов, ожидаемых функцией, но был удален. Вместо этого используйте свойство &lt;a href=&quot;function/length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; .&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="265633d3d66ddc1de561025f67cfe5ba36aeb85a" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Used to specifiy the number of arguments expected by the function, but has been removed. Use the &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property instead.&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Используется для указания количества аргументов, ожидаемых функцией, но был удален. Вместо этого используйте свойство &lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; .&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="82c4c36b0afe843b69360745935e5cc612adb09e" translate="yes" xml:space="preserve">
          <source>&lt;s&gt;Wraps the string in double quotes (&quot;&lt;code&gt;&quot;&lt;/code&gt;&quot;).&lt;/s&gt;</source>
          <target state="translated">&lt;s&gt;Заключает строку в двойные кавычки (&quot; &lt;code&gt;&quot;&lt;/code&gt; &quot;).&lt;/s&gt;</target>
        </trans-unit>
        <trans-unit id="c2edd1d39238dfdee97d64fcceb59811e32c0b09" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.from' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .from&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ec21b87dec9278fc8594eefd0e2feb0afbe15dc4" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.of' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .of&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="50181da8c7ca3c3c77058e8d742194f188be30cb" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.entries()' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.entries ()&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="93618b2469ae3ba1395c666fa06c56e602111c2a" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.find' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.find&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a9e67246a6424819b8bcc17c0b6092e768e1685d" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.findIndex' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.findIndex&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fd6f4e0049a23c4bbca92eaa29f39479abb6cff8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.forEach' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.forEach&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c9859be65b844ff2599639efb57bf72ca0f2591b" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.keys()' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.keys ()&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="555530e63b597af98450a9d80fdf1ab621870a26" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.reduce' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.reduce&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a82a5ae53ccbde6340335955d077126e6c8107f9" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.reduceRight' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.reduceRight&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7f63a5a0facf86d23bc51132692430599e3505e8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.slice' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.slice&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="04b318feae6f39c1e4b739df7abff3764dccc63f" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype.values()' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype.values ​​()&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2c67a3e5fb004d6ce59b555006262218dbe4b79c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of '%TypedArray%.prototype[@@iterator]()' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &quot;% TypedArray% .prototype [@@ iterator] ()&quot; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6b8b94313c26b169ad06a3892984eea7a1275836" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'Array.prototype.toString' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение Array.prototype.toString в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="05f0d395a01f847edbb134cddbd70a230cd72ba0" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray prototype' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение прототипа TypedArray в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="aaf87eb60417d761e3d1bde5b784dd3965f4f7a2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.buffer' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.buffer в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="041e9f1d779d6b664311d0decdc5c7422f8cc02c" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.byteLength' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.byteLength в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5b09b27abc95298efd70295bf57bb217c76c725e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.byteOffset' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.byteOffset в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c9fb7375e045d8b7e636f00da7f6d87a9f5b45ad" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.copyWithin' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.copyWithin в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="498626fed36d12b550426d39d4185197eba02bc5" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.every' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.every в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2964fb1fedc0fc2fb8cf624c61dbc8c8dcbc8a46" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.fill' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.fill в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6880629eea61e0e7e26ff10d8d36960ce8e472b1" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.filter' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.filter в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="00dd7391b48af10ba809bd9c0714cd1f2d6af8f8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.includes' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.includes в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="22830ca445ed4afca15737a437b93580a3f8e624" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.indexOf' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.indexOf в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3da3282a0b835f58d03e8f6a1d380259e47a0097" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.join' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.join в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ceedb06a6a4c3d0e33d4085fecbe7774c125920e" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.lastIndexOf' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.lastIndexOf в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="15f3571954f021e744e2c2871a084e198cf3beea" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.length' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.length в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d504b9133964d32f917280196b75ed9e5c33acb2" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.map' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.map в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="855c656d01612dc788a429a8d6753591ac413ab8" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.reverse' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.reverse в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="30bebe3efea7dfe7266798053e324280beb1bc59" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.set' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.set в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="84545422c6366771aa76bd4ef9c53e10164fb432" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.some' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.some в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="34fca14ece1e544a703fd6b52d3f97dba54ac6a6" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.sort' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.sort в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="531d01a0bd87594f9ca5ae61086e88b35418c538" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.subarray' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.subarray в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b35e02e72a8f9d3d05d568b57e778b65d09f80b7" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.toLocaleString' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.toLocaleString в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d21658e80923eecc6538b3617f1a3f50482446da" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'TypedArray.prototype.toString' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение TypedArray.prototype.toString в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d0c8ecd9ee0131f54965f622aaaba0fcec001e26" translate="yes" xml:space="preserve">
          <source>&lt;small&gt;The definition of 'get %TypedArray% [ @@species ]' in that specification.&lt;/small&gt;</source>
          <target state="translated">&lt;small&gt;Определение &amp;laquo;получить% TypedArray% [@@ разновидностей]&amp;raquo; в этой спецификации.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8e3853505372fe592bda8804bbd1d24bacc08f84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Deprecated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; Deprecated&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3a6d428e3c3bdac121ee984826a4318bc3046d02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Non-standard&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; Non-standard&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0a1898e32517f0ac48473cf7b8bf5b7c1c216e9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Obsolete since Gecko 58 (Firefox 58 / Thunderbird 58 / SeaMonkey 2.55)&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; Устарело с Gecko 58 (Firefox 58 / Thunderbird 58 / SeaMonkey 2.55)&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e23e7b16b1b356401be67f3b11f39c65f93e89ff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt; Obsolete&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; Obsolete&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="172ae4e6fbe9c24145f8a36e109db427455dec6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8d371e0d12d95e7320be76e5fa753778071b3bcc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; Warning:&lt;/strong&gt;&lt;code&gt;parseInt&lt;/code&gt; converts a &lt;a href=&quot;bigint&quot;&gt;&lt;code&gt;BigInt&lt;/code&gt;&lt;/a&gt; to a &lt;a href=&quot;number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; and loses precision in the process. This is because trailing non-numeric values, including &quot;&lt;code&gt;n&lt;/code&gt;&quot;, are discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eae18544e969ea1ae19359bce2f08c71a822945" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;dataview&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="192a9d0b0d4b42aeaf456019c947cee4aa7fb9bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;JavaScript typed arrays&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d85d7843cdb7df149eb099678f0570262bb69ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;https://tc39.es/ecma262/#table-49&quot;&gt;ECMAScript (ECMA-262)&lt;br/&gt;&lt;small&gt;The definition of 'TypedArray constructors' in that specification.&lt;/small&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ef1555a226014cc707d85fff35e034455a34a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;typedarray/@@iterator&quot;&gt;&lt;code&gt;Int16Array.prototype[@@iterator]()&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;typedarray/@@iterator&quot;&gt;&lt;code&gt;Int16Array.prototype[@@iterator]()&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5a0d75516c25b530476ea55684eb6bf843042cce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;typedarray/tolocalestring&quot;&gt;&lt;code&gt;Int16Array.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;typedarray/tolocalestring&quot;&gt;&lt;code&gt;Int16Array.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="51dd3dd05b5cdb95cc4486f7aea8876baa98b207" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;a href=&quot;typedarray/tostring&quot;&gt;&lt;code&gt;Int16Array.prototype.toString()&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;a href=&quot;typedarray/tostring&quot;&gt;&lt;code&gt;Int16Array.prototype.toString()&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bb813b811a0f9583c1dd4e86873f316e12ee9b48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Desktop&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Chrome&lt;/th&gt;
&lt;th&gt;Edge&lt;/th&gt;
&lt;th&gt;Firefox&lt;/th&gt;
&lt;th&gt;Internet Explorer&lt;/th&gt;
&lt;th&gt;Opera&lt;/th&gt;
&lt;th&gt;Safari&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;Int16Array&lt;/code&gt;&lt;/th&gt;
&lt;td&gt; 7&lt;/td&gt;
&lt;td&gt; 12&lt;/td&gt;
&lt;td&gt; 4&lt;/td&gt;
&lt;td&gt; 10&lt;/td&gt;
&lt;td&gt; 11.6&lt;/td&gt;
&lt;td&gt; 5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href=&quot;int16array/int16array&quot;&gt;&lt;code&gt;Int16Array()&lt;/code&gt; constructor&lt;/a&gt;&lt;/th&gt;
&lt;td&gt; 7&lt;/td&gt;
&lt;td&gt; 12&lt;/td&gt;
&lt;td&gt; 4&lt;/td&gt;
&lt;td&gt; 10&lt;/td&gt;
&lt;td&gt; 11.6&lt;/td&gt;
&lt;td&gt; 5.1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Mobile&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Android webview&lt;/th&gt;
&lt;th&gt;Chrome for Android&lt;/th&gt;
&lt;th&gt;Firefox for Android&lt;/th&gt;
&lt;th&gt;Opera for Android&lt;/th&gt;
&lt;th&gt;Safari on iOS&lt;/th&gt;
&lt;th&gt;Samsung Internet&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;Int16Array&lt;/code&gt;&lt;/th&gt;
&lt;td&gt; 4&lt;/td&gt;
&lt;td&gt; 18&lt;/td&gt;
&lt;td&gt; 4&lt;/td&gt;
&lt;td&gt; 12&lt;/td&gt;
&lt;td&gt; 4.2&lt;/td&gt;
&lt;td&gt; 1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href=&quot;int16array/int16array&quot;&gt;&lt;code&gt;Int16Array()&lt;/code&gt; constructor&lt;/a&gt;&lt;/th&gt;
&lt;td&gt; 4&lt;/td&gt;
&lt;td&gt; 18&lt;/td&gt;
&lt;td&gt; 4&lt;/td&gt;
&lt;td&gt; 12&lt;/td&gt;
&lt;td&gt; 4.2&lt;/td&gt;
&lt;td&gt; 1.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Server&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Node.js&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th&gt;&lt;code&gt;Int16Array&lt;/code&gt;&lt;/th&gt;
&lt;td&gt; 0.10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;th&gt;&lt;a href=&quot;int16array/int16array&quot;&gt;&lt;code&gt;Int16Array()&lt;/code&gt; constructor&lt;/a&gt;&lt;/th&gt;
&lt;td&gt; 0.10&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f31cb3d7955b486489fd58e39cfdefd88275fb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access (index into) an Array item&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Доступ (индексирование) к элементу массива&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ef1aa2b0af88f29eaa02e667c11f0a596eb6784" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access an Array item using the index position&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d1954ee33201c308252226266e4dbe9d2091905" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add an item to the beginning of an Array&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f44b98376b3b51d5d6d07c61bcc50bed6d74788" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add an item to the end of an Array&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdcb55dedfa87a860f62cc64679e147f49a4d6f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add to the end of an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Добавить в конец массива&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="05ea62e60330916a6489b6ce7bb5b8dc0c78c4b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Add to the front of an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Добавить в начало массива&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e633bdcc75b5a6296dc8a21f7a534980415f5537" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All&lt;/strong&gt; browsers include the &lt;code&gt;CustomError&lt;/code&gt; constructor in the stack trace when using a prototypal declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b02d206997d55697090cf6e35836cc1d3eaf90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;All&lt;/strong&gt; browsers include the CustomError constructor in the stack trace when using a prototypal declaration.</source>
          <target state="translated">&lt;strong&gt;Все&lt;/strong&gt; браузеры включают конструктор CustomError в трассировку стека при использовании объявления прототипа.</target>
        </trans-unit>
        <trans-unit id="3c72d46e3e32099dbea132c4b0fa513f2bc991b3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Any JSON text is a valid JavaScript expression...&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b683df0325a5c3aa0ff6b82a0efd33ff4fb848b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Any JSON text is a valid JavaScript expression&lt;/strong&gt; &amp;ndash; but only in JavaScript engines that have implemented the &lt;a href=&quot;https://github.com/tc39/proposal-json-superset&quot;&gt;proposal to make all JSON text valid ECMA-262&lt;/a&gt;. In engines that haven't implemented the proposal, U+2028 LINE SEPARATOR and U+2029 PARAGRAPH SEPARATOR are allowed in string literals and property keys in JSON; but their use in these features in JavaScript literals is a &lt;a href=&quot;syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Любой текст JSON является допустимым выражением JavaScript,&lt;/strong&gt; но только в механизмах JavaScript, которые реализовали &lt;a href=&quot;https://github.com/tc39/proposal-json-superset&quot;&gt;предложение сделать весь текст JSON действительным ECMA-262&lt;/a&gt; . В механизмах, которые не реализовали это предложение, разрешены U + 2028 LINE SEPARATOR и U + 2029 PARAGRAPH SEPARATOR в строковых литералах и ключах свойств в JSON; но их использование в этих функциях в литералах JavaScript - это &lt;a href=&quot;syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea3e336bbbe349f686d1a7de34680c471c0c7441" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Any&lt;/strong&gt; object of which the value is not &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, including a &lt;code&gt;Boolean&lt;/code&gt; object whose value is &lt;code&gt;false&lt;/code&gt;, evaluates to &lt;code&gt;true&lt;/code&gt; when passed to a conditional statement. For example, the condition in the following &lt;a href=&quot;../statements/if...else&quot;&gt;&lt;code&gt;if&lt;/code&gt;&lt;/a&gt; statement evaluates to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0c0be5998f55ce07f49b011955c83a425bf461" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arithmetic operators&lt;/strong&gt; take numerical values (either literals or variables) as their operands and return a single numerical value. The standard arithmetic operators are addition (+), subtraction (-), multiplication (*), and division (/).</source>
          <target state="translated">&lt;strong&gt;Арифметические операторы&lt;/strong&gt; принимают числовые значения (литералы или переменные) в качестве своих операндов и возвращают одно числовое значение. Стандартными арифметическими операторами являются сложение (+), вычитание (-), умножение (*) и деление (/).</target>
        </trans-unit>
        <trans-unit id="d58761037eb102cdd483560e6c7d7030ff86f575" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array generics are non-standard, deprecated and will get removed in the near future&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Дженерики массивов нестандартны, устарели и будут удалены в ближайшем будущем&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b30cb3c4fca448be47cfe32dca81740b30ec763e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array.prototype.values&lt;/strong&gt; is default implementation of &lt;strong&gt;Array.prototype[Symbol.iterator]&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Array.prototype.values&lt;/strong&gt; - это реализация по умолчанию для &lt;strong&gt;Array.prototype [Symbol.iterator]&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="6efb3bf91a95bec8d1d30e9bea61156f9c22e13d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arrow Example:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805aa3dec6c8b5cb37863bc74e5c0608ae28b5e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Arrow functions&lt;/strong&gt; do&lt;strong&gt; not &lt;/strong&gt;default &lt;code&gt;this&lt;/code&gt; to the window &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt;, rather they execute in the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Scope&quot;&gt;scope&lt;/a&gt; they are created:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36c7566dc578690db6b36befa24d4cca31c20a6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As a function&lt;/strong&gt;, it takes two parameters: the &lt;var&gt;key&lt;/var&gt; and the &lt;var&gt;value&lt;/var&gt; being stringified. The object in which the key was found is provided as the &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt;'s &lt;code&gt;this&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe77fb8f9d3ead7aa894195d340299d87c05d7e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;As a function&lt;/strong&gt;, it takes two parameters: the &lt;var&gt;key&lt;/var&gt; and the &lt;var&gt;value&lt;/var&gt; being stringified. The object in which the key was found is provided as the replacer's &lt;code&gt;this&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;strong&gt;В качестве функции&lt;/strong&gt; он принимает два параметра: &lt;var&gt;key&lt;/var&gt; и строковое &lt;var&gt;value&lt;/var&gt; . Объект, в котором был найден ключ, предоставляется как параметр &lt;code&gt;this&lt;/code&gt; заменителя .</target>
        </trans-unit>
        <trans-unit id="c7ec23eb0448e3f81c2c2f60a57dc525e6125f5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Be careful.&lt;/strong&gt; While it is possible to use it as an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/identifier&quot;&gt;identifier&lt;/a&gt; (variable name) in any scope other than the global scope (because &lt;code&gt;undefined&lt;/code&gt; is not a &lt;a href=&quot;../lexical_grammar&quot;&gt;reserved word&lt;/a&gt;), doing so is a very bad idea that will make your code difficult to maintain and debug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08de02d64d63b964ff314d3c7beb845b2d276f35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bitwise operators&lt;/strong&gt; treat their operands as a sequence of 32 bits (zeroes and ones), rather than as decimal, hexadecimal, or octal &lt;code&gt;&lt;a href=&quot;../global_objects/number&quot;&gt;numbers&lt;/a&gt;&lt;/code&gt;. For example, the decimal number nine has a binary representation of 1001. Bitwise operators perform their operations on such binary representations, but they return standard JavaScript numerical values.</source>
          <target state="translated">&lt;strong&gt;Поразрядные операторы&lt;/strong&gt; обрабатывают свои операнды как последовательность из 32 бит (нулей и единиц), а не как десятичные, шестнадцатеричные или восьмеричные &lt;code&gt;&lt;a href=&quot;../global_objects/number&quot;&gt;numbers&lt;/a&gt;&lt;/code&gt; . Например, десятичное число девять имеет двоичное представление 1001. Побитовые операторы выполняют свои операции с такими двоичными представлениями, но они возвращают стандартные числовые значения JavaScript.</target>
        </trans-unit>
        <trans-unit id="1f68cd6401f243f6a15630c0fd88ba2ba9d0cc08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bonus:&lt;/strong&gt; use &lt;a href=&quot;../../operators/comparison_operators#Identity_strict_equality_(===)&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; operator to test if the original string was palindrome.</source>
          <target state="translated">&lt;strong&gt;Бонус:&lt;/strong&gt; используйте оператор &lt;a href=&quot;../../operators/comparison_operators#Identity_strict_equality_(===)&quot;&gt; &lt;code&gt;===&lt;/code&gt; ,&lt;/a&gt; чтобы проверить, была ли исходная строка палиндромом.</target>
        </trans-unit>
        <trans-unit id="8d086d03331e84de998e1bf1a70efb9ec37db280" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Bonus:&lt;/strong&gt; use &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Identity_strict_equality_(===)&quot;&gt;&lt;code&gt;===&lt;/code&gt;&lt;/a&gt; operator to test if the original string was a palindrome.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f12d95482e50bf60a5c3eccb3489d7df27695b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution:&lt;/strong&gt; If you need to support truly obsolete JavaScript engines that do not support &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Object/defineProperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;, it is best not to polyfill &lt;code&gt;Array.prototype&lt;/code&gt; methods at all, as you cannot make them &lt;strong&gt;non-enumerable&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5dc729bef9476d8b9fa887d570ead303840acd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution:&lt;/strong&gt; In certain cases, &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; may not be the actual value seen by the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e57e3b48007a9688af856b535c037d2d8b0475f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution:&lt;/strong&gt; In strict mode, the value of &lt;code&gt;this&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt;. See below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f91b49c0b3ad0d52d00d17e539c6788e8af3a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution&lt;/strong&gt;: Calling this method on an empty array returns &lt;code&gt;false&lt;/code&gt; for any condition!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0955feb1440a51e876ff4dcc97a71276f8119aa1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Caution&lt;/strong&gt;: Calling this method on an empty array will return &lt;code&gt;true&lt;/code&gt; for any condition!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05d85b02380728c9b8f869506264468b6420bed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Comparing traditional functions to arrow functions&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354d7cd920e22988d709c2fcafbfc3b986052128" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Contra: &lt;/strong&gt;Code using &lt;code&gt;with&lt;/code&gt; may not be forward compatible, especially when used with something other than a plain object. Consider this example:</source>
          <target state="translated">&lt;strong&gt;Противоположность:&lt;/strong&gt; код, использующий &lt;code&gt;with&lt;/code&gt; , может быть несовместимым, особенно при использовании с чем-то отличным от простого объекта. Рассмотрим этот пример:</target>
        </trans-unit>
        <trans-unit id="4b1d91dbcdb082d80f433f735c070501aa6f7059" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Contra:&lt;/strong&gt; The &lt;code&gt;with&lt;/code&gt; statement forces the specified object to be searched first for all name lookups. Therefore all identifiers that aren't members of the specified object will be found more slowly in a 'with' block. Where performance is important, 'with' should only be used to encompass code blocks that access members of the specified object.</source>
          <target state="translated">&lt;strong&gt;Contra: &lt;/strong&gt; &lt;code&gt;with&lt;/code&gt; заявлением силами указанного объект для поиска первой для всех операций поиска имен. Поэтому все идентификаторы, которые не являются членами указанного объекта, будут медленнее обнаруживаться в блоке with. Если производительность важна, 'with' следует использовать только для включения блоков кода, которые обращаются к членам указанного объекта.</target>
        </trans-unit>
        <trans-unit id="fd571b82c00d35e92b4ad6f646719c1880c12581" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Contra:&lt;/strong&gt; The &lt;code&gt;with&lt;/code&gt; statement makes it hard for a human reader or JavaScript compiler to decide whether an unqualified name will be found along the scope chain, and if so, in which object. So given this example:</source>
          <target state="translated">&lt;strong&gt;Contra: &lt;/strong&gt; &lt;code&gt;with&lt;/code&gt; утверждением делает его трудным для читателя человека или компилятор JavaScript , чтобы решить , будет ли неквалифицированное имя можно найти по цепочке областей видимости, и если да, то в какой объект. Итак, учитывая этот пример:</target>
        </trans-unit>
        <trans-unit id="0002fefd9f47b1f2fb792e23d2c9c3abaea8a1cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Copy an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Копировать массив&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f9fc669e554526f585dd24406b20edb1293ae49d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Create an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Создать массив&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8d9129ebb409db374dea0252562001e3362acce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;DO NOT rely on exact return values of -1 or 1. &lt;/strong&gt;Negative and positive integer results vary between browsers (as well as between browser versions) because the W3C specification only mandates negative and positive values. Some browsers may return -2 or 2 or even some other negative or positive value.</source>
          <target state="translated">&lt;strong&gt;НЕ полагайтесь на точные возвращаемые значения -1 или 1.&lt;/strong&gt; Отрицательные и положительные целочисленные результаты различаются между браузерами (а также между версиями браузеров), поскольку спецификация W3C требует только отрицательные и положительные значения. Некоторые браузеры могут возвращать -2 или 2 или даже другое отрицательное или положительное значение.</target>
        </trans-unit>
        <trans-unit id="1d10557d3984d83778d01243f0951be3fe40e695" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default function parameters&lt;/strong&gt; allow named parameters to be initialized with default values if no value or &lt;code&gt;undefined&lt;/code&gt; is passed.</source>
          <target state="translated">&lt;strong&gt;Параметры функции по умолчанию&lt;/strong&gt; позволяют инициализировать именованные параметры значениями по умолчанию, если не передается значение или значение &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75559a8556e3c27c5d912beff976b58d02107da3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Defaults to &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;По умолчанию &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3bfbcff8db90762ab7b7cbc62ec24a1263a90015" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deleting array elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удаление элементов массива&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bbf74f16f95e0cf9b687fa6ce03d882c2fd5437e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Demonstration of the internal call:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Демонстрация внутреннего звонка:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="11376d94d46ae6467f3f97216bb3abcd3d09da55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated. Avoid these methods.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a2d9d7036ccea7bde0ff0c57610643265b9bc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecated&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Deprecated&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53c5b98fc1bbd6480cc2a37258052f312d640c9e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation warning:&lt;/strong&gt; Do not use &lt;code&gt;unwatch()&lt;/code&gt; and &lt;a href=&quot;watch&quot;&gt;&lt;code&gt;watch()&lt;/code&gt;&lt;/a&gt;! These two methods were implemented only in Firefox prior to version 58, they're &lt;strong&gt;deprecated and removed in Firefox 58+&lt;/strong&gt;. In addition, using watchpoints has a serious negative impact on performance, which is especially true when used on global objects, such as &lt;code&gt;window&lt;/code&gt;. You can usually use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;setters and getters&lt;/a&gt; or &lt;a href=&quot;../proxy&quot;&gt;proxies&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Предупреждение об &lt;/strong&gt; &lt;code&gt;unwatch()&lt;/code&gt; &lt;strong&gt;:&lt;/strong&gt; не используйте unwatch () и &lt;a href=&quot;watch&quot;&gt; &lt;code&gt;watch()&lt;/code&gt; &lt;/a&gt; ! Эти два метода были реализованы только в Firefox до версии 58, они &lt;strong&gt;устарели и удалены в Firefox 58+&lt;/strong&gt; . Кроме того, использование точек наблюдения оказывает серьезное негативное влияние на производительность, что особенно верно при использовании с глобальными объектами, такими как &lt;code&gt;window&lt;/code&gt; . Вместо этого вы обычно можете использовать &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;сеттеры и геттеры&lt;/a&gt; или &lt;a href=&quot;../proxy&quot;&gt;прокси&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69de191aa06761f1ef525b205cd37c6dd77d7c9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Deprecation warning:&lt;/strong&gt; Do not use &lt;code&gt;watch()&lt;/code&gt; and &lt;a href=&quot;unwatch&quot;&gt;&lt;code&gt;unwatch()&lt;/code&gt;&lt;/a&gt;! These two methods were implemented only in Firefox prior to version 58, they're &lt;strong&gt;deprecated and removed in Firefox 58+&lt;/strong&gt;. In addition, using watchpoints has a serious negative impact on performance, which is especially true when used on global objects, such as &lt;code&gt;window&lt;/code&gt;. You can usually use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;setters and getters&lt;/a&gt; or &lt;a href=&quot;../proxy&quot;&gt;proxies&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;Предупреждение об &lt;/strong&gt;&lt;a href=&quot;unwatch&quot;&gt; &lt;code&gt;unwatch()&lt;/code&gt; &lt;/a&gt;&lt;strong&gt; :&lt;/strong&gt; не используйте &lt;code&gt;watch()&lt;/code&gt; и unwatch () ! Эти два метода были реализованы только в Firefox до версии 58, они &lt;strong&gt;устарели и удалены в Firefox 58+&lt;/strong&gt; . Кроме того, использование точек наблюдения оказывает серьезное негативное влияние на производительность, что особенно верно при использовании с глобальными объектами, такими как &lt;code&gt;window&lt;/code&gt; . Вместо этого вы обычно можете использовать &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Defining_getters_and_setters&quot;&gt;сеттеры и геттеры&lt;/a&gt; или &lt;a href=&quot;../proxy&quot;&gt;прокси&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c13e0b1023aac3ff5f304015f3a3d6767b8ab1ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Differences &amp;amp; Limitations:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3685363e10992fdc7b2a54614f433adcc3e026c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Different ways to create an Int16Array&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f25933184a39ab3e6cd8618d81473fbf8cd9d07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Do NOT rely on exact return values of &lt;code&gt;-1&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;! &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5715d4940925e6e262a8369986cf65e9ecbb1389" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ECMAScript 2016 and earlier:&lt;/strong&gt;&lt;em&gt;(&lt;code&gt;&lt;var&gt;month&lt;/var&gt;&lt;/code&gt; used to be required)&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e884d831e5e132f6ef9afd897a615ea2d905c763" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Edge case alert:&lt;/strong&gt; Unlike other array methods such as &lt;a href=&quot;some&quot;&gt;&lt;code&gt;Array.some()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; is run even for indexes with unassigned values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25222a23c95aa0f2d21abd7571810ca19e4c7730" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Find the index of an item in the Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Найдите индекс элемента в массиве&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dcdd1b9ec2a97e86f7bd99f0a71c4f5d77cebf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Firefox now warns about the usage of &lt;code&gt;for each...in&lt;/code&gt; and it no longer works starting with Firefox 57.&lt;br/&gt; Please see &lt;a href=&quot;../errors/for-each-in_loops_are_deprecated&quot;&gt;Warning: JavaScript 1.6's for-each-in loops are deprecated&lt;/a&gt; for migration help.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Firefox теперь предупреждает об использовании &lt;code&gt;for each...in&lt;/code&gt; и он больше не работает, начиная с Firefox 57. &lt;br/&gt;См. &lt;a href=&quot;../errors/for-each-in_loops_are_deprecated&quot;&gt;Предупреждение: циклы for-each-in в JavaScript 1.6 устарели&lt;/a&gt; для помощи по миграции.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="be8d6e51472f943aefdf0780162eb41648ba3c87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If it is a number&lt;/strong&gt;, successive levels in the stringification will each be indented by this many space characters (up to 10).</source>
          <target state="translated">&lt;strong&gt;Если это число&lt;/strong&gt; , каждый последующий уровень в строковой обработке будет иметь отступ таким количеством пробелов (до 10).</target>
        </trans-unit>
        <trans-unit id="c1116add768a684f4e58eaf62c48388c556991ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If it is a string&lt;/strong&gt;, successive levels will be indented by this string (or the first ten characters of it).</source>
          <target state="translated">&lt;strong&gt;Если это строка&lt;/strong&gt; , последовательные уровни будут иметь отступ этой строкой (или ее первыми десятью символами).</target>
        </trans-unit>
        <trans-unit id="f9f4496bc64957b286836cb0dca59830923c8967" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;If it's absolutely necessary and performance is not a concern&lt;/strong&gt;, a far slower (but more specification-compliant solution) can be found at &lt;a href=&quot;https://github.com/Raynos/function-bind&quot;&gt;https://github.com/Raynos/function-bind&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef21b1de11bce68cd05ab1e28ca9d6039c56334" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important:&lt;/strong&gt; Keep in mind that &lt;em&gt;the data itself&lt;/em&gt; is not cloned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c257781cc4b92a9f97156dca91f0debe711918" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: Since compilation for large modules can be expensive, developers should only use the &lt;code&gt;Module()&lt;/code&gt; constructor when synchronous compilation is absolutely required; the asynchronous &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method should be used at all other times.</source>
          <target state="translated">&lt;strong&gt;Важно&lt;/strong&gt; : поскольку компиляция больших модулей может быть дорогостоящей, разработчикам следует использовать конструктор &lt;code&gt;Module()&lt;/code&gt; тогда, когда синхронная компиляция абсолютно необходима; в остальное время следует использовать асинхронный метод &lt;a href=&quot;compilestreaming&quot;&gt; &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd1aefe99b2310836321b557de98b25cf407e51f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: Since instantiation for large modules can be expensive, developers should only use the &lt;code&gt;Instance()&lt;/code&gt; constructor when synchronous instantiation is absolutely required; the asynchronous &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method should be used at all other times.</source>
          <target state="translated">&lt;strong&gt;Важно&lt;/strong&gt; : поскольку создание экземпляров больших модулей может быть дорогостоящим, разработчикам следует использовать конструктор &lt;code&gt;Instance()&lt;/code&gt; тогда, когда синхронное создание экземпляров абсолютно необходимо; в остальное время следует использовать асинхронный метод &lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14c42c01d279faea2c8328245769b59a152a811c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: This method is not the most efficient way of fetching and instantiating wasm modules. If at all possible, you should use the newer &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method instead, which fetches, compiles, and instantiates a module all in one step, directly from the raw bytecode, so doesn't require conversion to an &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bf07972f40544b9b201abb81e01b4ac7dbd3dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Important&lt;/strong&gt;: This method is not the most efficient way of fetching and instantiating wasm modules. If at all possible, you should use the newer &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method instead, which fetches, compiles, and instantiates a module all in one step, directly from the raw bytecode, so doesn't require conversion to an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Важно&lt;/strong&gt; : этот метод не является наиболее эффективным способом получения и создания экземпляров модулей wasm. Если это вообще возможно, вам следует вместо этого использовать более новый метод &lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; , который извлекает, компилирует и создает экземпляр модуля за один шаг, непосредственно из необработанного байт-кода, поэтому не требует преобразования в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d8ff1f9032591ebf283b62753a8815882b515c8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Input:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Input:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e04e672456b4ff723c5f9f6e53dc395cb83b4bac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Loop over an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Цикл по массиву&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="48dde77d098e09c30903fcaf542b212d7acfa42e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non-configurable properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Ненастраиваемые свойства&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5709d241af5f68117d5d8e9f9e8ba6cd6442579b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Non-standard. Do not use!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Нестандартные. Не используй!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9cd8cdcde972ac7d0c144f44a32217226c13bf66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not to be confused with:&lt;/strong&gt; Several other languages have mechanisms for lazy evaluation and deferring a computation, which they also call &quot;promises&quot;, e.g. Scheme. Promises in JavaScript represent processes that are already happening, which can be chained with callback functions. If you are looking to lazily evaluate an expression, consider the &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow function&lt;/a&gt; with no arguments: &lt;code&gt;f = () =&amp;gt; &lt;em&gt;expression&lt;/em&gt;&lt;/code&gt; to create the lazily-evaluated expression, and &lt;code&gt;f()&lt;/code&gt; to evaluate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ac491f9ac5113b463db546a5ed84958fab0c7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not to be confused with:&lt;/strong&gt; Several other languages have mechanisms for lazy evaluation and deferring a computation, which they also call &quot;promises&quot;, e.g. Scheme. Promises in JavaScript represent processes which are already happening, which can be chained with callback functions. If you are looking to lazily evaluate an expression, consider the &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow function&lt;/a&gt; with no arguments: &lt;code&gt;f = () =&amp;gt; &lt;em&gt;expression&lt;/em&gt;&lt;/code&gt; to create the lazily-evaluated expression, and &lt;code&gt;f()&lt;/code&gt; to evaluate.</source>
          <target state="translated">&lt;strong&gt;Не путать: в&lt;/strong&gt; некоторых других языках есть механизмы для отложенного вычисления и отложенного вычисления, которые они также называют &amp;laquo;обещаниями&amp;raquo;, например Scheme. Обещания в JavaScript представляют собой процессы, которые уже происходят, которые могут быть связаны с функциями обратного вызова. Если вы хотите лениво вычислить выражение, рассмотрите &lt;a href=&quot;../functions/arrow_functions&quot;&gt;стрелочную функцию&lt;/a&gt; без аргументов: &lt;code&gt;f = () =&amp;gt; &lt;em&gt;expression&lt;/em&gt;&lt;/code&gt; чтобы создать &lt;em&gt;выражение&lt;/em&gt; с отложенным вычислением, и &lt;code&gt;f()&lt;/code&gt; чтобы оценить.</target>
        </trans-unit>
        <trans-unit id="d61ea3464cad9c0ab62e9b7e02009f31bada4249" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note :&lt;/strong&gt; In UTF-16, Unicode characters above &lt;code&gt;\uFFFF&lt;/code&gt; are encoded as two surrogate code units, of the range &lt;code&gt;\uD800&lt;/code&gt;-&lt;code&gt;\uDFFF&lt;/code&gt;. The value of each code unit is taken separately into account for the comparison. Thus the character formed by the surrogate pair &lt;code&gt;\uD655\uDE55&lt;/code&gt; will be sorted before the character &lt;code&gt;\uFF3A&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; В UTF-16 символы Unicode выше &lt;code&gt;\uFFFF&lt;/code&gt; кодируются как две единицы суррогатного кода из диапазона &lt;code&gt;\uD800&lt;/code&gt; - &lt;code&gt;\uDFFF&lt;/code&gt; . Значение каждой кодовой единицы учитывается отдельно для сравнения. Таким образом, символ, образованный суррогатной парой &lt;code&gt;\uD655\uDE55&lt;/code&gt; будет отсортирован до символа &lt;code&gt;\uFF3A&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9ee1c1c79242cef0d6a8d6908b45f5bd0aa2279" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note for Mozilla developers:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Примечание для разработчиков Mozilla:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0d49e205123b74544e699dde5af47486480c8533" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;&lt;code&gt;Math.ceil(&lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;)&lt;/code&gt; returns integer 0 and does not give a &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11988984f50812d4be2739340bf8761830dab235" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;&lt;code&gt;Math.floor(null)&lt;/code&gt; returns 0, not a &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266386213fc144f5ea42932675546d6395a6da7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: &lt;/strong&gt;&lt;code&gt;\d&lt;/code&gt; matches the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Character_Classes&quot;&gt;character class&lt;/a&gt; for digits between 0 and 9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220e1fbc78a51bbe255c0338790e6417361b15cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: =&amp;gt;&lt;/strong&gt; is not an operator, but the notation for &lt;a href=&quot;functions/arrow_functions&quot;&gt;Arrow functions&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание. =&amp;gt;&lt;/strong&gt; - это не оператор, а обозначение &lt;a href=&quot;functions/arrow_functions&quot;&gt;стрелочных функций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="355567dbdd8638060c3a628610d64ffb90c96389" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; &amp;ldquo;Array-like&amp;rdquo; means that &lt;code&gt;arguments&lt;/code&gt; has a &lt;a href=&quot;arguments/length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property and properties indexed from zero, but it doesn't have &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;'s built-in methods like &lt;a href=&quot;../global_objects/array/foreach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;map()&lt;/code&gt;&lt;/a&gt;. See &lt;a href=&quot;#Description&quot;&gt;&amp;sect;Description&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21af73758032257908f95eb10b99a3fa25edcefd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; &amp;ldquo;Array-like&amp;rdquo; means that &lt;code&gt;arguments&lt;/code&gt; has a &lt;code&gt;&lt;a href=&quot;arguments/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; property and properties indexed from zero, but it doesn't have &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;'s built-in methods like &lt;code&gt;&lt;a href=&quot;../global_objects/array/foreach&quot;&gt;forEach&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../global_objects/array/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;#Description&quot;&gt;&amp;sect;Description&lt;/a&gt; for details.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; &amp;laquo;Подобно массиву&amp;raquo; означает, что &lt;code&gt;arguments&lt;/code&gt; имеют свойство &lt;code&gt;&lt;a href=&quot;arguments/length&quot;&gt;length&lt;/a&gt;&lt;/code&gt; и свойства, индексированные с нуля, но не имеют встроенных методов &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; ,&lt;/a&gt; таких как &lt;code&gt;&lt;a href=&quot;../global_objects/array/foreach&quot;&gt;forEach&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../global_objects/array/map&quot;&gt;map&lt;/a&gt;&lt;/code&gt; . См. Подробности в &lt;a href=&quot;#Description&quot;&gt;&amp;sect;Описание&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fdbf3840a2f6f9eeaa020c7a23c885188c93bd94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; A &lt;code&gt;throw&lt;/code&gt; (or returning a rejected promise) in the &lt;code&gt;finally&lt;/code&gt; callback will reject the new promise with the rejection reason specified when calling &lt;code&gt;throw()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Команда &lt;code&gt;throw&lt;/code&gt; (или возврат отклоненного обещания) в обратном вызове &lt;code&gt;finally&lt;/code&gt; отклоняет новое обещание с указанием причины отклонения при вызове &lt;code&gt;throw()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24948113914476639ee1466e70b24ea1653cfffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; A &lt;code&gt;throw&lt;/code&gt; (or returning a rejected promise) in the &lt;code&gt;finally&lt;/code&gt; callback will reject the new promise with the rejection reason specified when calling &lt;code&gt;throw&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1925ccbf9ec06b8d3228b3952cf7825ef523dc72" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; As long as &lt;code&gt;test()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;lastIndex&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; reset&amp;mdash;even when testing a different string!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec31a31990208b6eee691568983f588d9d526ab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; As of ES5, this can be bypassed by using &lt;a href=&quot;object/create&quot;&gt;&lt;code&gt;Object.create(null)&lt;/code&gt;&lt;/a&gt;, but this is seldom done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2d2aa8e4c5677b17e394010e4566e6c0629d2a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Calling &lt;code&gt;watch()&lt;/code&gt; on an object for a specific property overrides any previous handler attached for that property.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Вызов функции &lt;code&gt;watch()&lt;/code&gt; для объекта для определенного свойства отменяет любой предыдущий обработчик, прикрепленный к этому свойству.</target>
        </trans-unit>
        <trans-unit id="c5e1b863217894f54f5c1996cbd75468632a7d09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Class &lt;strong&gt;expressions&lt;/strong&gt; are subject to the same hoisting restrictions as described in the &lt;a href=&quot;#Class_declarations&quot;&gt;Class declarations&lt;/a&gt; section.</source>
          <target state="translated">&lt;strong&gt;Примечание. На &lt;/strong&gt;&lt;strong&gt;выражения&lt;/strong&gt; классов распространяются те же ограничения на подъем, что описаны в разделе &lt;a href=&quot;#Class_declarations&quot;&gt;объявлений классов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a03d1d8c57afa6faee49ee93b7f49ba08b9c218d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Classes are always strict mode code. Calling methods with an undefined &lt;code&gt;this&lt;/code&gt; will throw an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bba440ee116b0187025292f62bac9e6b3181db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Concatenating array(s)/value(s) will leave the originals untouched. Furthermore, any operation on the new array (except operations on elements which are object references) will have no effect on the original arrays, and vice versa.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Объединение массивов / значений не затрагивает оригиналы. Более того, любая операция с новым массивом (кроме операций с элементами, которые являются ссылками на объекты) не повлияет на исходные массивы, и наоборот.</target>
        </trans-unit>
        <trans-unit id="f7ce291d511f0fc928b257e47c776f63c996ccb6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; ECMAScript 2019 and older permitted implementations to have &lt;code&gt;typeof&lt;/code&gt; return any implementation-defined string value for non-callable non-standard exotic objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3b4b48eb733544d15ad2e35bdd85b6a5d52409" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; ECMAScript Internationalization API, implemented with Firefox 29, added the &lt;code&gt;locales&lt;/code&gt; argument to the &lt;code&gt;Number.toLocaleString()&lt;/code&gt; method. If the argument is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, this method returns localized digits specified by the OS, while the previous versions of Firefox returned&lt;a href=&quot;https://en.wikipedia.org/wiki/Arabic_numerals&quot;&gt; Western Arabic&lt;/a&gt; digits. This change has been reported as a regression affecting backward compatibility which might be fixed soon. (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=999003&quot;&gt;bug 999003&lt;/a&gt;)</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; API интернационализации ECMAScript, реализованный в Firefox 29, добавил аргумент &lt;code&gt;locales&lt;/code&gt; в метод &lt;code&gt;Number.toLocaleString()&lt;/code&gt; . Если аргумент не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , этот метод возвращает локализованные цифры, указанные в ОС, тогда как предыдущие версии Firefox возвращали &lt;a href=&quot;https://en.wikipedia.org/wiki/Arabic_numerals&quot;&gt;западные арабские&lt;/a&gt; цифры. Об этом изменении сообщалось как о регрессе, влияющем на обратную совместимость, который вскоре может быть исправлен. ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=999003&quot;&gt;ошибка 999003&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="8b005bd4745ae59192a510679861adb544ac3246" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For another possible approach to strings in JavaScript, please read the article about &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView&quot;&gt;&lt;code&gt;StringView&lt;/code&gt; &amp;mdash; a C-like representation of strings based on typed arrays&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Чтобы узнать о другом возможном подходе к строкам в JavaScript, прочтите статью о &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/StringView&quot;&gt; &lt;code&gt;StringView&lt;/code&gt; - C-подобном представлении строк на основе типизированных массивов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49422b1f67b73c938af873bfc9a6d9fcd09fafa8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For the Array method, see &lt;a href=&quot;../array/indexof&quot;&gt;&lt;code&gt;Array.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Для метода Array см. &lt;a href=&quot;../array/indexof&quot;&gt; &lt;code&gt;Array.prototype.indexOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fafbf00abcf5c63c2ca82ab257820e3938f88e17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For the String method, see &lt;a href=&quot;../string/indexof&quot;&gt;&lt;code&gt;String.prototype.indexOf()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Для метода String см. &lt;a href=&quot;../string/indexof&quot;&gt; &lt;code&gt;String.prototype.indexOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60ae19d75f16acd84824e590ac493d39c4b2e3e8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is not provided, &lt;code&gt;reduce()&lt;/code&gt; will execute the callback function starting at index &lt;code&gt;1&lt;/code&gt;, skipping the first index. If &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided, it will start at index &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f89811eda018557eeb00403726d33bfa160377" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If &lt;code&gt;initialValue&lt;/code&gt; isn't provided, &lt;code&gt;reduce()&lt;/code&gt; will execute the callback function starting at index 1, skipping the first index. If &lt;code&gt;initialValue&lt;/code&gt; is provided, it will start at index 0.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если &lt;code&gt;initialValue&lt;/code&gt; не указан , &lt;code&gt;reduce()&lt;/code&gt; выполнит функцию обратного вызова, начиная с индекса 1, пропуская первый индекс. Если &lt;code&gt;initialValue&lt;/code&gt; , оно начинается с индекса 0.</target>
        </trans-unit>
        <trans-unit id="684ec8c40e719415d1bba76189c015fc69263264" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If needed, the full name of a day (&quot;&lt;code&gt;Monday&lt;/code&gt;&quot; for example) can be obtained by using &lt;a href=&quot;../intl/datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; with an &lt;code&gt;options&lt;/code&gt; parameter. Using this method, the internationalization is made easier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23fb56081f7a141997ed5ab497891b83d99e197" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If needed, the full name of a month (&lt;code&gt;January&lt;/code&gt; for example) can be obtained by using &lt;code&gt;&lt;a href=&quot;../intl/datetimeformat#Using_options&quot;&gt;Intl.DateTimeFormat()&lt;/a&gt;&lt;/code&gt; with an &lt;code&gt;options&lt;/code&gt; parameter. Using this method, internationalization is made easier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358de7eb45f10875788ff4438c63a1720a968f2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If passing the callback function uses an &lt;a href=&quot;../../functions/arrow_functions&quot;&gt;arrow function expression&lt;/a&gt;, the &lt;code&gt;&lt;var&gt;thisArg&lt;/var&gt;&lt;/code&gt; parameter can be omitted, since all arrow functions lexically bind the &lt;a href=&quot;../../operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd4187a04e0a8e4bf553061e2ab071ddd4c5e3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you are using an environment compatible with &lt;a href=&quot;../set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;from&quot;&gt;&lt;code&gt;Array.from()&lt;/code&gt;&lt;/a&gt;, you could use &lt;code&gt;let orderedArray = Array.from(new Set(myArray))&lt;/code&gt; to get an array where duplicate items have been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7822b5aeb75f5d2a582a80d085cdebe05016e60b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you wish the &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; to distinguish an initial object from a key with an empty string property (since both would give the empty string as key and potentially an object as value), you will have to keep track of the iteration count (if it is beyond the first iteration, it is a genuine empty string key).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0606f016259513e72d37c5d9a393efa4b1bbb49c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you wish the replacer to distinguish an initial object from a key with an empty string property (since both would give the empty string as key and potentially an object as value), you will have to keep track of the iteration count (if it is beyond the first iteration, it is a genuine empty string key).</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если вы хотите, чтобы средство замены отличало исходный объект от ключа со свойством пустой строки (так как оба будут давать пустую строку в качестве ключа и потенциально объект в качестве значения), вам необходимо будет отслеживать счетчик итераций (если он выходит за рамки первой итерации, это настоящий ключ пустой строки).</target>
        </trans-unit>
        <trans-unit id="25fd065e6e03dfd2256bad0756539873eb842f47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you're writing ES6 compatible code, then &lt;a href=&quot;rest_parameters&quot;&gt;rest parameters&lt;/a&gt; should be preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74f245ac8626bc2488812fdb3f76579068c2d13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In IE8, it won't delete all when &lt;code&gt;&lt;var&gt;deleteCount&lt;/var&gt;&lt;/code&gt; is omitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7ec0a50ad5c171c36ec4b7997d54a3f65a816b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In browsers that support the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt;Web Performance API&lt;/a&gt;'s high-resolution time feature, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt;&lt;code&gt;Performance.now()&lt;/code&gt;&lt;/a&gt; can provide more reliable and precise measurements of elapsed time than &lt;a href=&quot;date/now&quot;&gt;&lt;code&gt;Date.now()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; В браузерах, которые поддерживают функцию высокого разрешения времени &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/performance&quot;&gt;Web Performance API&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Performance/now&quot;&gt; &lt;code&gt;Performance.now()&lt;/code&gt; &lt;/a&gt; может обеспечивать более надежные и точные измерения прошедшего времени, чем &lt;a href=&quot;date/now&quot;&gt; &lt;code&gt;Date.now()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd6287d6d9ed836fbba50b27a65c0f35a8c77248" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In order to display the content of an array in the console, you can use &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Console/table&quot;&gt;&lt;code&gt;console.table()&lt;/code&gt;&lt;/a&gt;, which prints a formatted version of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f976fd9fea9d5aa4ce715d9bf46bd7fa9796846" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It is a good idea to comment the intentional use of the empty statement, as it is not really obvious to distinguish between a normal semicolon. In the following example the usage is probably not intentional:</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; это хорошая идея, чтобы прокомментировать намеренное использование пустого оператора, так как не совсем очевидно различать обычную точку с запятой. В следующем примере это, вероятно, не преднамеренное использование:</target>
        </trans-unit>
        <trans-unit id="bcfea8397f57ed908ca1ce86c587c0948329e841" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It is not possible to know reflectively whether a particular object implements the iterator protocol. However, it is easy to create an object that satisfies &lt;em&gt;both&lt;/em&gt; the iterator and iterable protocols (as shown in the example below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bfe1f5b870b1d60d48fcd5c7b5fcea78b71eb90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; It's important to keep in mind that while the time value at the heart of a Date object is UTC, the basic methods to fetch the date and time or its components all work in the local (i.e. host system) time zone and offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4bbacf6321e13f6eb99261e1d22c24b709b5c2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; JavaScript &lt;code&gt;Date&lt;/code&gt; objects can only be instantiated by calling JavaScript &lt;code&gt;Date&lt;/code&gt; as a constructor: calling it as a regular function (i.e. without the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator) will return a string rather than a &lt;code&gt;Date&lt;/code&gt; object; unlike other JavaScript object types, JavaScript &lt;code&gt;Date&lt;/code&gt; objects have no literal syntax.</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; объекты JavaScript &lt;code&gt;Date&lt;/code&gt; могут быть созданы только путем вызова JavaScript &lt;code&gt;Date&lt;/code&gt; в качестве конструктора: вызов его как обычной функции (т. Е. Без оператора &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; ) вернет строку, а не объект &lt;code&gt;Date&lt;/code&gt; ; в отличие от других типов объектов JavaScript, объекты &lt;code&gt;Date&lt;/code&gt; JavaScript не имеют буквального синтаксиса.</target>
        </trans-unit>
        <trans-unit id="cba716c445446c37823ee39ce035c3f7e61e130a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; JavaScript also has &lt;a href=&quot;bitwise_operators#Bitwise_XOR&quot;&gt;a bitwise operator ^ (logical XOR)&lt;/a&gt;. &lt;code&gt;**&lt;/code&gt; and &lt;code&gt;^&lt;/code&gt; are different (for example : &lt;code&gt;2 ** 3 === 8&lt;/code&gt; when &lt;code&gt;2 ^ 3 === 1&lt;/code&gt;.)</source>
          <target state="translated">&lt;strong&gt;Примечание. В&lt;/strong&gt; JavaScript также есть &lt;a href=&quot;bitwise_operators#Bitwise_XOR&quot;&gt;побитовый оператор ^ (логический XOR)&lt;/a&gt; . &lt;code&gt;**&lt;/code&gt; и &lt;code&gt;^&lt;/code&gt; различны (например: &lt;code&gt;2 ** 3 === 8&lt;/code&gt; когда &lt;code&gt;2 ^ 3 === 1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="771025a125bb3c93ccfe202888079e1424a8e069" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Labeled loops or blocks are very uncommon. Usually function calls can be used instead of loop jumps.</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; помеченные петли или блоки очень редки. Обычно вместо циклических переходов можно использовать вызовы функций.</target>
        </trans-unit>
        <trans-unit id="817378a03f44c8672a6044bd391916398bcb3fea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Many &lt;code&gt;Math&lt;/code&gt; functions have a precision that&amp;rsquo;s &lt;em&gt;implementation-dependent.&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51f56c9c6eb301eeeac8ec59172e72208de14f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Many older browsers&amp;mdash;including Chrome &amp;lt;17 and Internet Explorer &amp;lt;9&amp;mdash;don't accept array-like objects, and will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fac8f55feeec11dca5f652a1e6bc14af58f7c8b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Month are 0-indexed when used as an argument of &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; (thus 0 corresponds to January and 11 to December).</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Месяц индексируется 0 при использовании в качестве аргумента &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; (таким образом, 0 соответствует январю, а 11 - декабрю).</target>
        </trans-unit>
        <trans-unit id="6aefc9efe8abe1e05cdb3d94a2c17571efaa3b6b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Objects in string contexts convert via the &lt;a href=&quot;tostring&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method, which is different from &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; objects converting to string primitives using &lt;code&gt;valueOf&lt;/code&gt;. All objects have a string conversion, if only &quot;&lt;code&gt;[object &lt;em&gt;type&lt;/em&gt;]&lt;/code&gt;&quot;. But many objects do not convert to number, boolean, or function.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Объекты в строковых контекстах преобразуются с помощью метода &lt;a href=&quot;tostring&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; , который отличается от преобразования объектов &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; в строковые примитивы с помощью &lt;code&gt;valueOf&lt;/code&gt; . Все объекты имеют строковое преобразование, если только &amp;laquo; &lt;code&gt;[object &lt;em&gt;type&lt;/em&gt;]&lt;/code&gt; &amp;raquo;. Но многие объекты не преобразуются в числа, логические значения или функции.</target>
        </trans-unit>
        <trans-unit id="6af260530dffa5616e1a97f776680caae737db0c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Parsing of date strings with the &lt;code&gt;Date&lt;/code&gt; constructor (and &lt;code&gt;Date.parse&lt;/code&gt;, they are equivalent) is strongly discouraged due to browser differences and inconsistencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727266a08c0b936a62b4097f40ecb0ef35024e59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Parsing of strings with &lt;code&gt;Date.parse&lt;/code&gt; is strongly discouraged due to browser differences and inconsistencies.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Синтаксический анализ строк с помощью &lt;code&gt;Date.parse&lt;/code&gt; настоятельно не рекомендуется из-за различий и несоответствий браузеров.</target>
        </trans-unit>
        <trans-unit id="0c6387929bf8e20366e124fb355a09268278b5c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; See &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;this guide&lt;/a&gt; for more explanations about regular expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc36416db2a62f5b79c686618c268478b428ae4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; See also &lt;a href=&quot;matchall&quot;&gt;&lt;code&gt;String.prototype.matchAll()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Advanced_searching_with_flags&quot;&gt;Advanced searching with flags&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d90c5d6d9b94a1f7230d93bf106368245455c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Spread syntax effectively goes one level deep while copying an array. Therefore, it may be unsuitable for copying multidimensional arrays as the following example shows (it's the same with &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; and spread syntax).</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; При копировании массива синтаксис Spread эффективно расширяется на один уровень. Следовательно, он может не подходить для копирования многомерных массивов, как показано в следующем примере (то же самое с &lt;a href=&quot;../global_objects/object/assign&quot;&gt; &lt;code&gt;Object.assign()&lt;/code&gt; &lt;/a&gt; и синтаксисом распространения).</target>
        </trans-unit>
        <trans-unit id="b1e58dd8b5aa3a0080bb077a9ad00d39a01d1e04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Spread syntax effectively goes one level deep while copying an array. Therefore, it may be unsuitable for copying multidimensional arrays, as the following example shows. (The same is true with &lt;a href=&quot;../global_objects/object/assign&quot;&gt;&lt;code&gt;Object.assign()&lt;/code&gt;&lt;/a&gt; and spread syntax.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358e3ce297689d443eafc4cf6dc6e850fef804bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Starting in JavaScript 1.8.5 &lt;code&gt;toString()&lt;/code&gt; called on &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;[object &lt;em&gt;Null&lt;/em&gt;]&lt;/code&gt;, and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;[object &lt;em&gt;Undefined&lt;/em&gt;]&lt;/code&gt;, as defined in the 5th Edition of ECMAScript and a subsequent Errata. See &lt;a href=&quot;#Using_toString()_to_detect_object_class&quot;&gt;Using_toString()_to_detect_object_class&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Начиная с JavaScript 1.8.5 &lt;code&gt;toString()&lt;/code&gt; вызываемый для &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; ,&lt;/a&gt; возвращает &lt;code&gt;[object &lt;em&gt;Null&lt;/em&gt;]&lt;/code&gt; , а &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; возвращает &lt;code&gt;[object &lt;em&gt;Undefined&lt;/em&gt;]&lt;/code&gt; , как определено в 5-м издании ECMAScript и последующих исправлениях. См. &lt;a href=&quot;#Using_toString()_to_detect_object_class&quot;&gt;Раздел Using_toString () _ to_detect_object_class&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a15d9c1ea2b0a0e1c267bed84cbe1cdc7fe69654" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Starting in JavaScript 1.8.5, &lt;code&gt;toString()&lt;/code&gt; called on &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;[object &lt;em&gt;Null&lt;/em&gt;]&lt;/code&gt;, and &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;[object &lt;em&gt;Undefined&lt;/em&gt;]&lt;/code&gt;, as defined in the 5&lt;sup&gt;th&lt;/sup&gt; Edition of ECMAScript and subsequent Errata.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d57bc72c11abaf69eb43644d025eb28d1419aee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Static methods are not properties of &lt;code&gt;this&lt;/code&gt;. They are properties of the class itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e12c8b40a6c873368a85592313dce66b1e2b5dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; String objects are Type Object, not String! String objects are rarely used, so the following results might be surprising:</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Строковые объекты относятся к типу Object, а не к String! Строковые объекты используются редко, поэтому следующие результаты могут быть неожиданными:</target>
        </trans-unit>
        <trans-unit id="61d22cf1bf09fb835287646ba1ff636d7d5dfd9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Technically speaking, &lt;code&gt;has()&lt;/code&gt; uses the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;Same-value-zero&lt;/a&gt; algorithm to determine whether the given element is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fe9a5fbe07ccdfcfe25ab1224f1a2b8b21eb68" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Technically speaking, &lt;code&gt;has()&lt;/code&gt; uses the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; algorithm to determine whether the given element is found.</source>
          <target state="translated">&lt;strong&gt;Примечание. С&lt;/strong&gt; технической точки зрения &lt;code&gt;has()&lt;/code&gt; использует алгоритм &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; , чтобы определить, найден ли данный элемент.</target>
        </trans-unit>
        <trans-unit id="932b8bb42efb809689f0c3094f4532ecc539146e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Technically speaking, &lt;code&gt;includes()&lt;/code&gt; uses the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; algorithm to determine whether the given element is found.</source>
          <target state="translated">&lt;strong&gt;Примечание. С&lt;/strong&gt; технической точки &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; &lt;code&gt;includes()&lt;/code&gt; использует алгоритм sameValueZero для определения, найден ли данный элемент.</target>
        </trans-unit>
        <trans-unit id="a26e8f7c200274b339ac0e717593fe6705fc9661" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Technically speaking, &lt;code&gt;includes()&lt;/code&gt; uses the &lt;code&gt;&lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Same-value-zero_equality&quot;&gt;sameValueZero&lt;/a&gt;&lt;/code&gt; algorithm to determine whether the given element is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b0a7fbbe7fc19a335dd9a46844842671c58994" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;Object.create()&lt;/code&gt; method used above is relatively new. For alternative methods, please consider one of the following approaches:</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Использованный &lt;code&gt;Object.create()&lt;/code&gt; метод Object.create () относительно новый. Для альтернативных методов рассмотрите один из следующих подходов:</target>
        </trans-unit>
        <trans-unit id="600193aeb66c423b3e68da8317526519bcbd1aab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;length&lt;/code&gt; property is used to control the number of object properties to be added. In the above example, &lt;code&gt;length:2&lt;/code&gt; indicates two properties has to be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18120179463c581abf4bb091c97434a0b8908b11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;em&gt;strict equality&lt;/em&gt; operator (as opposed to the &lt;em&gt;standard equality&lt;/em&gt; operator) must be used here, because &lt;code&gt;x == undefined&lt;/code&gt; also checks whether &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, while strict equality doesn't. This is because &lt;code&gt;null&lt;/code&gt; is not equivalent to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2092b16cccf693b8d8fff7395070e011bb2ec6d4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The argument &lt;code&gt;monthIndex&lt;/code&gt; is 0-based. This means that &lt;code&gt;January = 0&lt;/code&gt; and &lt;code&gt;December = 11&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Аргумент &lt;code&gt;monthIndex&lt;/code&gt; отсчитывается от 0. Это означает, что &lt;code&gt;January = 0&lt;/code&gt; а &lt;code&gt;December = 11&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78e59a989e9e78fba04060c0dc59ccc7a4a2add3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The following is syntactically invalid despite its import equivalent:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1955d1efaa1f8720eb71242a2a0fe4e7c8e0d0b5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The reason for &lt;code&gt;unwatch()&lt;/code&gt; to take the property name &lt;em&gt;prop&lt;/em&gt; as its only parameter is due to the &quot;single handler allowing&quot; behavior of the &lt;a href=&quot;watch&quot;&gt;&lt;code&gt;watch()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; Причина &lt;code&gt;unwatch()&lt;/code&gt; , чтобы взять на себя имя свойства &lt;em&gt;подпорку&lt;/em&gt; в качестве единственного параметра связано с &amp;laquo;одного обработчика , позволяющего&amp;raquo; поведение &lt;a href=&quot;watch&quot;&gt; &lt;code&gt;watch()&lt;/code&gt; &lt;/a&gt; метод.</target>
        </trans-unit>
        <trans-unit id="40b2c17bd14e9e2f0d83c335e3a0b242c8caae4f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The value of &lt;code&gt;this&lt;/code&gt; will be &lt;code&gt;undefined&lt;/code&gt; in strict mode. See below.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Значение &lt;code&gt;this&lt;/code&gt; будет &lt;code&gt;undefined&lt;/code&gt; в строгом режиме. Увидеть ниже.</target>
        </trans-unit>
        <trans-unit id="28e45baa0bcb5c4340df55ba049e2a785cb346b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This also means that there is no list of current objects stored in the collection. &lt;code&gt;WeakSets&lt;/code&gt; are not enumerable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7727adbde630d97ded4c8afef19d6a4439e805" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This article describes the &lt;code&gt;Promise&lt;/code&gt; constructor and the methods and properties of such objects. To learn about the way promises work and how you can use them, we advise you to read &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;Using promises&lt;/a&gt; first. The constructor is primarily used to wrap functions that do not already support promises.</source>
          <target state="translated">&lt;strong&gt;Примечание. В&lt;/strong&gt; этой статье описывается конструктор &lt;code&gt;Promise&lt;/code&gt; , а также методы и свойства таких объектов. Чтобы узнать, как работают обещания и как их использовать, мы советуем вам сначала прочитать &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Using_promises&quot;&gt;Использование обещаний&lt;/a&gt; . Конструктор в основном используется для обертывания функций, которые еще не поддерживают обещания.</target>
        </trans-unit>
        <trans-unit id="63e3c87f450a346f40b18eca582548e2deeb51f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is one of the few cases in JavaScript where &lt;strong&gt;the semicolon is mandatory&lt;/strong&gt;. Indeed, without the semicolon the line that follows the cycle declaration will be considered a statement.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Это один из немногих случаев в JavaScript, где &lt;strong&gt;точка с запятой является обязательной&lt;/strong&gt; . Действительно, без точки с запятой строка, следующая за объявлением цикла, будет считаться утверждением.</target>
        </trans-unit>
        <trans-unit id="d0ad1118a4dbbaf1b10c897edea38f62e7d5039e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This non-native &lt;code&gt;Function.construct&lt;/code&gt; method will not work with some native constructors; like &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;, for example. In these cases you have to use the &lt;a href=&quot;bind&quot;&gt;&lt;code&gt;Function.prototype.bind&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70fb05109e87bae7ee85aa0c96458c3ad964ea2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This non-native &lt;code&gt;Function.construct&lt;/code&gt; method will not work with some native constructors; like &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt;, for example. In these cases you have to use the &lt;a href=&quot;bind&quot;&gt;&lt;code&gt;Function.prototype.bind&lt;/code&gt;&lt;/a&gt; method. For example, imagine having an array like the following, to be used with &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; constructor: &lt;code&gt;[2012, 11, 4]&lt;/code&gt;; in this case you have to write something like: &lt;code&gt;new (Function.prototype.bind.apply(Date, [null].concat([2012, 11, 4])))()&lt;/code&gt;. This is not the best way to do things, and probably not to be used in any production environment.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Этот неродной метод &lt;code&gt;Function.construct&lt;/code&gt; не будет работать с некоторыми собственными конструкторами; например, &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; . В этих случаях вы должны использовать метод &lt;a href=&quot;bind&quot;&gt; &lt;code&gt;Function.prototype.bind&lt;/code&gt; &lt;/a&gt; . Например, представьте, что у конструктора &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; есть такой массив : &lt;code&gt;[2012, 11, 4]&lt;/code&gt; ; в этом случае вы должны написать что-то вроде: &lt;code&gt;new (Function.prototype.bind.apply(Date, [null].concat([2012, 11, 4])))()&lt;/code&gt; . Это не лучший способ делать что-то, и, вероятно, его нельзя использовать в какой-либо производственной среде.</target>
        </trans-unit>
        <trans-unit id="24502e3f5823bcbfeccb81fd33ffa25b3f363c52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This operation only works with a shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; and may not be allowed on the main thread.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Эта операция работает только с общим &lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt; и может быть запрещена в основном потоке.</target>
        </trans-unit>
        <trans-unit id="ef427d917c001b1f4650cf5e5def0d0fc7c777bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This operation works with a shared &lt;a href=&quot;../int32array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; only.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Эта операция работает только с общим &lt;a href=&quot;../int32array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e500d399515becb665391f5e8c5556e3dc0ddc69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Unlike &lt;code&gt;unshift()&lt;/code&gt;, this creates a new &lt;code&gt;arr1&lt;/code&gt;, and does not modify the original &lt;code&gt;arr1&lt;/code&gt; array in-place.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="459514910373cc21fc85761c674b24cfc7d00d66" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using the &lt;code&gt;Function&lt;/code&gt; constructor to create functions is not recommended since it needs the function body as a string which may prevent some JS engine optimizations and can also cause other problems.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Использование конструктора &lt;code&gt;Function&lt;/code&gt; для создания функций не рекомендуется, поскольку для этого требуется тело функции в виде строки, что может помешать некоторым оптимизациям движка JS, а также может вызвать другие проблемы.</target>
        </trans-unit>
        <trans-unit id="725b65434e6935214fd79e2f1684e8b9c1ce58bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor to create functions is not recommended since it needs the function body as a string which may prevent some JS engine optimizations and can also cause other problems.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Использование конструктора &lt;code&gt;GeneratorFunction&lt;/code&gt; для создания функций не рекомендуется, поскольку для него требуется тело функции в виде строки, которая может помешать некоторым оптимизациям движка JS, а также может вызвать другие проблемы.</target>
        </trans-unit>
        <trans-unit id="6cf46a3d7059d3673cfb92d7b3e5d229fd13029e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When comparing strings and characters, &lt;code&gt;includes()&lt;/code&gt; is &lt;em&gt;case-sensitive&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c319751ff83b08966d7270386045fb1f98bd7b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When loading a library (such as jQuery), make sure it is loaded before you access library variables, such as &quot;$&quot;. Put the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; tag that loads the library before your code that uses it.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; При загрузке библиотеки (например, jQuery) убедитесь, что она загружена, прежде чем обращаться к переменным библиотеки, таким как &amp;laquo;$&amp;raquo;. Поместите &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt; , загружающий библиотеку, перед кодом, который ее использует.</target>
        </trans-unit>
        <trans-unit id="ad4e82294745878a54c69e55c811a42836c1ccaa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When loading a library (such as jQuery), make sure it is loaded before you access library variables, such as &quot;$&quot;. Put the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; tag that loads the library before your code that uses it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a25d81475121b131542b82b7c0571e1ed01b13" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When the first argument is undefined or null a similar outcome can be achieved using the array &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;spread syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a681172ba1c89d6f086e8f2d83d03e01913d5ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When the non-standard property &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document#Properties&quot;&gt;document.all&lt;/a&gt;&lt;/code&gt; is used as an argument for this constructor, the result is a &lt;code&gt;Boolean&lt;/code&gt; object with the value &lt;code&gt;false&lt;/code&gt;. This property is legacy and non-standard and should not be used.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Когда нестандартное свойство &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Document#Properties&quot;&gt;document.all&lt;/a&gt;&lt;/code&gt; используется в качестве аргумента для этого конструктора, результатом является &lt;code&gt;Boolean&lt;/code&gt; объект со значением &lt;code&gt;false&lt;/code&gt; . Это свойство является устаревшим и нестандартным, и его не следует использовать.</target>
        </trans-unit>
        <trans-unit id="78fe89a73001c5f232175ca238a51a999dec2f14" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When the string is empty, &lt;code&gt;split()&lt;/code&gt; returns an array containing one empty string, rather than an empty array. If the string and separator are both empty strings, an empty array is returned.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Когда строка пуста, &lt;code&gt;split()&lt;/code&gt; возвращает массив, содержащий одну пустую строку, а не пустой массив. Если строка и разделитель являются пустыми строками, возвращается пустой массив.</target>
        </trans-unit>
        <trans-unit id="a96e44fab969f1254bb7b66f556f52c2916c9cd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Where &lt;code&gt;Date&lt;/code&gt; is called as a constructor with more than one argument, if values are greater than their logical range (e.g. 13 is provided as the month value or 70 for the minute value), the adjacent value will be adjusted. E.g. &lt;code&gt;new Date(2013, 13, 1)&lt;/code&gt; is equivalent to &lt;code&gt;new Date(2014, 1, 1)&lt;/code&gt;, both create a date for &lt;code&gt;2014-02-01&lt;/code&gt; (note that the month is 0-based). Similarly for other values: &lt;code&gt;new Date(2013, 2, 1, 0, 70)&lt;/code&gt; is equivalent to &lt;code&gt;new Date(2013, 2, 1, 1, 10)&lt;/code&gt; which both create a date for &lt;code&gt;2013-03-01T01:10:00&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если &lt;code&gt;Date&lt;/code&gt; вызывается как конструктор с более чем одним аргументом, если значения превышают их логический диапазон (например, 13 предоставляется как значение месяца или 70 как значение минут), соседнее значение будет скорректировано. Например, &lt;code&gt;new Date(2013, 13, 1)&lt;/code&gt; эквивалентна &lt;code&gt;new Date(2014, 1, 1)&lt;/code&gt; , обе создают дату для &lt;code&gt;2014-02-01&lt;/code&gt; (обратите внимание, что месяц отсчитывается от 0). Аналогичным образом для других значений: &lt;code&gt;new Date(2013, 2, 1, 0, 70)&lt;/code&gt; эквивалентна &lt;code&gt;new Date(2013, 2, 1, 1, 10)&lt;/code&gt; которые создают дату для &lt;code&gt;2013-03-01T01:10:00&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c376b19033b5623261bc5e616fe9c13de6b18217" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Where &lt;code&gt;Date&lt;/code&gt; is called as a constructor with more than one argument, the specified arguments represent local time. If UTC is desired, use &lt;code&gt;new Date(&lt;a href=&quot;date/utc&quot;&gt;&lt;code&gt;Date.UTC(...)&lt;/code&gt;&lt;/a&gt;)&lt;/code&gt; with the same arguments.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Если &lt;code&gt;Date&lt;/code&gt; вызывается как конструктор с более чем одним аргументом, указанные аргументы представляют местное время. Если требуется UTC, используйте &lt;code&gt;new Date(&lt;a href=&quot;date/utc&quot;&gt;&lt;code&gt;Date.UTC(...)&lt;/code&gt;&lt;/a&gt;)&lt;/code&gt; с теми же аргументами.</target>
        </trans-unit>
        <trans-unit id="483e9d92a6e22a6218f96269fd44e507007c34f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; While the syntax of this function is almost identical to that of &lt;a href=&quot;apply&quot;&gt;&lt;code&gt;apply()&lt;/code&gt;&lt;/a&gt;, the fundamental difference is that &lt;code&gt;call()&lt;/code&gt; accepts an &lt;strong&gt;argument list&lt;/strong&gt;, while &lt;code&gt;apply()&lt;/code&gt; accepts a &lt;strong&gt;single array of arguments&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Хотя синтаксис этой функции почти идентичен синтаксису &lt;a href=&quot;apply&quot;&gt; &lt;code&gt;apply()&lt;/code&gt; &lt;/a&gt; , фундаментальное отличие состоит в том, что &lt;code&gt;call()&lt;/code&gt; принимает &lt;strong&gt;список аргументов&lt;/strong&gt; , а &lt;code&gt;apply()&lt;/code&gt; принимает &lt;strong&gt;единственный массив аргументов&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="45de165c548b297c79c481f99d672f8cf89f9257" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; While the syntax of this function is almost identical to that of &lt;a href=&quot;call&quot;&gt;&lt;code&gt;call()&lt;/code&gt;&lt;/a&gt;, the fundamental difference is that &lt;code&gt;call()&lt;/code&gt; accepts an &lt;strong&gt;argument list&lt;/strong&gt;, while &lt;code&gt;apply()&lt;/code&gt; accepts a &lt;strong&gt;single array of arguments&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Хотя синтаксис этой функции почти идентичен синтаксису &lt;a href=&quot;call&quot;&gt; &lt;code&gt;call()&lt;/code&gt; &lt;/a&gt; , основное отличие состоит в том, что &lt;code&gt;call()&lt;/code&gt; принимает &lt;strong&gt;список аргументов&lt;/strong&gt; , а &lt;code&gt;apply()&lt;/code&gt; принимает &lt;strong&gt;единственный массив аргументов&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2d59bee38265027466360229e7e458140b2cc379" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You call this method directly on the &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; constructor rather than on an instance of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Этот метод вызывается непосредственно в конструкторе &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; ,&lt;/a&gt; а не в экземпляре типа &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b6b52c30f35b960fa7e13f1a53aad477d6c88a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can always easily get the global object using the global &lt;a href=&quot;../global_objects/globalthis&quot;&gt;&lt;code&gt;globalThis&lt;/code&gt;&lt;/a&gt; property, regardless of the current context in which your code is running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7493391a1888e76b1ca7eb3c4a37230bbebd6bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You cannot use the &lt;code&gt;&lt;var&gt;replacer&lt;/var&gt;&lt;/code&gt; function to remove values from an array. If you return &lt;code&gt;undefined&lt;/code&gt; or a function then &lt;code&gt;null&lt;/code&gt; is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd8ec3585d0563d461a40a712d9dd099952dd2e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You cannot use the &lt;code&gt;replacer&lt;/code&gt; function to remove values from an array. If you return &lt;code&gt;undefined&lt;/code&gt; or a function then &lt;code&gt;null&lt;/code&gt; is used instead.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Вы не можете использовать функцию &lt;code&gt;replacer&lt;/code&gt; для удаления значений из массива. Если вы возвращаете &lt;code&gt;undefined&lt;/code&gt; или функцию, вместо этого используется &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9d59ed7fc798253e15c8a8e7e933de0f3f06878" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You cannot write a &lt;code&gt;&quot;use strict&quot;;&lt;/code&gt; directive in the body of a function definition that accepts rest, default, or destructured parameters. Doing so will throw &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Strict_Non_Simple_Params&quot;&gt;a syntax error&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9f17cd84782a44036af0759ea462aad9301397" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You won't get a valid JSON representation of your Object.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Вы не получите действительное представление объекта в формате JSON.</target>
        </trans-unit>
        <trans-unit id="5d742ca8820cc8f4f5c4af33dd908bfaf75b2050" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; if separator is an array, then Array is coerced to String and used as separator.</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; если разделитель является массивом, тогда массив приводится к String и используется как разделитель.</target>
        </trans-unit>
        <trans-unit id="f0992c6b2919932b092fd0f7a0df506e469dfbe6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; parsing of date strings with the &lt;code&gt;Date&lt;/code&gt; constructor (and &lt;code&gt;Date.parse&lt;/code&gt;, they are equivalent) is strongly discouraged due to browser differences and inconsistencies.</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; синтаксический анализ строк даты с помощью конструктора &lt;code&gt;Date&lt;/code&gt; (и &lt;code&gt;Date.parse&lt;/code&gt; , они эквивалентны) настоятельно не рекомендуется из-за различий и несоответствий браузеров.</target>
        </trans-unit>
        <trans-unit id="9b9dfd33cb91f3fcb5263a6223e75ed8d7fccfcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; parsing of date strings with the &lt;code&gt;Date&lt;/code&gt; constructor (and &lt;code&gt;Date.parse&lt;/code&gt;, they are equivalent) is strongly discouraged due to browser differences and inconsistencies. Support for RFC 2822 format strings is by convention only. Support for ISO 8601 formats differs in that date-only strings (e.g. &quot;1970-01-01&quot;) are treated as UTC, not local.</source>
          <target state="translated">&lt;strong&gt;Примечание:&lt;/strong&gt; синтаксический анализ строк даты с помощью конструктора &lt;code&gt;Date&lt;/code&gt; (и &lt;code&gt;Date.parse&lt;/code&gt; , они эквивалентны) категорически не рекомендуется из-за различий и несоответствий браузеров. Строки формата RFC 2822 поддерживаются только по соглашению. Поддержка форматов ISO 8601 отличается тем, что строки, содержащие только дату (например, &amp;laquo;1970-01-01&amp;raquo;) обрабатываются как UTC, а не как локальные.</target>
        </trans-unit>
        <trans-unit id="8c39a996edba84df7911753e2829b63a5f8e3c59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;../statements/async_function&quot;&gt;&lt;code&gt;async functions&lt;/code&gt;&lt;/a&gt; created with the &lt;code&gt;AsyncFunction&lt;/code&gt; constructor do not create closures to their creation contexts; they are always created in the global scope. When running them, they will only be able to access their own local variables and global ones, not the ones from the scope in which the &lt;code&gt;AsyncFunction&lt;/code&gt; constructor was called. This is different from using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with code for an async function expression.</source>
          <target state="translated">&lt;strong&gt;Примечание: &lt;/strong&gt;&lt;a href=&quot;../statements/async_function&quot;&gt; &lt;code&gt;async functions&lt;/code&gt; &lt;/a&gt; созданные с &lt;code&gt;AsyncFunction&lt;/code&gt; конструктора AsyncFunction , не создают замыканий для своих контекстов создания; они всегда создаются в глобальном масштабе. При их запуске они смогут получить доступ только к своим собственным локальным и глобальным переменным, а не к тем из области, в которой был &lt;code&gt;AsyncFunction&lt;/code&gt; конструктор AsyncFunction . Это отличается от использования &lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; с кодом для выражения асинхронной функции.</target>
        </trans-unit>
        <trans-unit id="2eb6541f8ccf55c4468e1e49fcdb6938ff45e9ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;../statements/async_function&quot;&gt;async functions&lt;/a&gt; created with the &lt;code&gt;AsyncFunction&lt;/code&gt; constructor do not create closures to their creation contexts; they are always created in the global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82da84f38fe49ba1869bdfebddcc97658eb025b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;../statements/function*&quot;&gt;&lt;code&gt;generator function&lt;/code&gt;&lt;/a&gt; created with the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor do not create closures to their creation contexts; they always are created in the global scope. When running them, they will only be able to access their own local variables and global ones, not the ones from the scope in which the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor was called. This is different from using &lt;a href=&quot;eval&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; with code for a generator function expression.</source>
          <target state="translated">&lt;strong&gt;Примечание: &lt;/strong&gt;&lt;a href=&quot;../statements/function*&quot;&gt; &lt;code&gt;generator function&lt;/code&gt; &lt;/a&gt; созданная с помощью конструктора &lt;code&gt;GeneratorFunction&lt;/code&gt; , не создает замыканий для их контекстов создания; они всегда создаются в глобальном масштабе. При их запуске они смогут получить доступ только к своим собственным локальным и глобальным переменным, а не к тем из области, в которой был вызван конструктор &lt;code&gt;GeneratorFunction&lt;/code&gt; . Это отличается от использования &lt;a href=&quot;eval&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; с кодом для выражения функции генератора.</target>
        </trans-unit>
        <trans-unit id="d357069579fd95b82d03b53b937bff1269c19d78" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;a href=&quot;../statements/function*&quot;&gt;&lt;code&gt;generator function&lt;/code&gt;&lt;/a&gt; created with the &lt;code&gt;GeneratorFunction&lt;/code&gt; constructor do not create closures to their creation contexts; they are always created in the global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="495863d88fbf751d8ba6907c004a3f640c826674" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;'abab'.lastIndexOf('ab', 2)&lt;/code&gt; will return 2 and not 0, as fromIndex limits only the beginning of the match.</source>
          <target state="translated">&lt;strong&gt;Примечание. &lt;/strong&gt; &lt;code&gt;'abab'.lastIndexOf('ab', 2)&lt;/code&gt; вернет 2, а не 0, поскольку fromIndex ограничивает только начало совпадения.</target>
        </trans-unit>
        <trans-unit id="3c3f63d30d20997aaae6a490d7c647f38e169899" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;'abab'.lastIndexOf('ab', 2)&lt;/code&gt; will return &lt;code&gt;2&lt;/code&gt; and not &lt;code&gt;0&lt;/code&gt;, as &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; limits only the beginning of the match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8f89b113bc9a50274099344d40a045c940ddd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt; is not a global object, but could be obtained from generator function instance (see &lt;a href=&quot;global_objects/generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt; for more detail).</source>
          <target state="translated">&lt;strong&gt;Примечание. &lt;/strong&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; не является глобальным объектом, но может быть получен из экземпляра функции генератора (см. &lt;a href=&quot;global_objects/generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; &lt;/a&gt; для более подробной информации).</target>
        </trans-unit>
        <trans-unit id="e58c973f9676387f338549e440d8a09c618f73e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;Object.assign()&lt;/code&gt; does not throw on &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf64f1863041dc269140d2615eaae0c0d9d7a47b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;charCodeAt()&lt;/code&gt; will always return a value that is less than &lt;code&gt;65536&lt;/code&gt;. This is because the higher code points are represented by &lt;em&gt;a pair&lt;/em&gt; of (lower valued) &quot;surrogate&quot; pseudo-characters which are used to comprise the real character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def3ad9fe5c564448194b0f63f7804b66d49b157" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;for...in&lt;/code&gt; should not be used to iterate over an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; where the index order is important.</source>
          <target state="translated">&lt;strong&gt;Примечание: &lt;/strong&gt; &lt;code&gt;for...in&lt;/code&gt; не следует использовать для перебора &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; котором важен порядок индекса.</target>
        </trans-unit>
        <trans-unit id="902116d4fd6f892124eb1f57a56121a9e95812bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: &lt;code&gt;javascript:&lt;/code&gt; pseudo protocol is discouraged over other alternatives, such as unobtrusive event handlers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882cfe6315be7052cd357e441923163e031b87d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: A WebAssembly page has a constant size of 65,536 bytes, i.e., 64KiB.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Страница WebAssembly имеет постоянный размер 65 536 байт, т. Е. 64 КБ.</target>
        </trans-unit>
        <trans-unit id="a8fd1ef24f654d71e16ff8445c0538324825d038" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: A promise is said to be &lt;em&gt;settled&lt;/em&gt; if it is either fulfilled or rejected, but not pending. You will also hear the term &lt;em&gt;resolved&lt;/em&gt; used with promises &amp;mdash; this means that the promise is settled or &amp;ldquo;locked in&amp;rdquo; to match the state of another promise. &lt;a href=&quot;https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md&quot;&gt;States and fates&lt;/a&gt; contains more details about promise terminology.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; : Обещание называется &lt;em&gt;решен&lt;/em&gt; , если оно либо выполнено или отклонено, но не принято. Вы также услышите, что термин &amp;laquo; &lt;em&gt;разрешено&amp;raquo;&lt;/em&gt; используется с обещаниями - это означает, что обещание установлено или &amp;laquo;заблокировано&amp;raquo;, чтобы соответствовать состоянию другого обещания. &lt;a href=&quot;https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md&quot;&gt;Состояния и судьбы&lt;/a&gt; содержат более подробную информацию о терминологии обещаний.</target>
        </trans-unit>
        <trans-unit id="ea4f7bcefb8aac710664b2121ecc43f91e37c33c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: A promise is said to be &lt;em&gt;settled&lt;/em&gt; if it is either fulfilled or rejected, but not pending. You will also hear the term &lt;em&gt;resolved&lt;/em&gt; used with promises &amp;mdash; this means that the promise is settled or &amp;ldquo;locked-in&amp;rdquo; to match the state of another promise. &lt;a href=&quot;https://github.com/domenic/promises-unwrapping/blob/master/docs/states-and-fates.md&quot;&gt;States and fates&lt;/a&gt; contain more details about promise terminology.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da18c4aef283b425565115d98ea8cafe9e4b7eab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: For this to work, &lt;code&gt;.wasm&lt;/code&gt; files should be returned with an &lt;code&gt;application/wasm&lt;/code&gt; MIME type by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68110d5a709768ad094da32f390cd8a532bb582" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Hashbang comments in JavaScript mimic &lt;a href=&quot;https://en.wikipedia.org/wiki/Shebang_(Unix)&quot;&gt;shebangs in Unix&lt;/a&gt; used to run files with proper interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76700c50c5fa16db7054238c2711b85fbd934f9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Properties of non-array objects are not guaranteed to be stringified in any particular order. Do not rely on ordering of properties within the same object within the stringification.</source>
          <target state="translated">&lt;strong&gt;Примечание.&lt;/strong&gt; Не гарантируется, что свойства объектов, не являющихся массивами, будут преобразованы в строку в каком-либо конкретном порядке. Не полагайтесь на упорядочение свойств внутри одного и того же объекта в рамках строковой модификации.</target>
        </trans-unit>
        <trans-unit id="26b2b5a3e93fc7fc264fe77e39dc89a93f9c95c9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: See also this &lt;a href=&quot;https://stackoverflow.com/questions/25574963/ies-tolocalestring-has-strange-characters-in-results&quot;&gt;StackOverflow thread&lt;/a&gt; for more details and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6afb69d4eebfc7e3036f03848bafb35d8fd458" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Tables can currently only store function references, but this will likely be expanded in the future.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . В настоящее время в таблицах могут храниться только ссылки на функции, но в будущем это, вероятно, будет расширено.</target>
        </trans-unit>
        <trans-unit id="b8f7874282f151cfbcdd89b40732976fc8043def" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The &lt;code&gt;keys()&lt;/code&gt; method is an alias for this method (for similarity with &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; objects), hence the &lt;code&gt;keys()&lt;/code&gt; page redirecting here. It behaves exactly the same and returns &lt;strong&gt;values&lt;/strong&gt; of &lt;code&gt;Set&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730c3fbd9fa3f3ea98a713ccc6d273af0217ce1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method returns &lt;code&gt;false&lt;/code&gt; for any condition put on an empty array.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Этот метод возвращает &lt;code&gt;false&lt;/code&gt; для любого условия, помещенного в пустой массив.</target>
        </trans-unit>
        <trans-unit id="a15ca51ca715b47d988eb0b32907c1c0c57fc3ef" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: This method returns &lt;code&gt;true&lt;/code&gt; for any condition put on an empty array.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Этот метод возвращает значение &lt;code&gt;true&lt;/code&gt; для любого условия, помещенного в пустой массив.</target>
        </trans-unit>
        <trans-unit id="268ad9f0404aa4d4c9f3de0de141d7fb9b970ee9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can also find this example as &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;instantiate-streaming.html&lt;/a&gt; on GitHub (&lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;view it live also&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Вы также можете найти этот пример как &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;instantiate-streaming.html&lt;/a&gt; на GitHub (также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;просмотрите его вживую&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="dabecf3ab82a6b52a81ab3fa4b0de9cf41a94cba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can also find this example at &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index.html&quot;&gt;index.html&lt;/a&gt; on GitHub (&lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/&quot;&gt;view it live also&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Вы также можете найти этот пример по адресу &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index.html&quot;&gt;index.html&lt;/a&gt; на GitHub (также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/&quot;&gt;просмотрите его вживую&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="91bc1fdd36d938de9da490fa6cbe55d7c58f4983" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You can see the example &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/global.html&quot;&gt;running live on GitHub&lt;/a&gt;; see also the &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html&quot;&gt;source code&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание&lt;/strong&gt; . Вы можете увидеть этот пример в &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/global.html&quot;&gt;реальном времени на GitHub&lt;/a&gt; ; см. также &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/global.html&quot;&gt;исходный код&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="be682e2136e817b30ce287371c8a73287c26fcdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You'll probably want to use &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; in most cases, as it is more efficient than &lt;code&gt;compile()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание. В&lt;/strong&gt; большинстве случаев вы, вероятно, захотите использовать &lt;a href=&quot;compilestreaming&quot;&gt; &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; &lt;/a&gt; , так как он более эффективен, чем &lt;code&gt;compile()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a46e1cbe0687c5ef74a0082002606802b10569f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: You'll probably want to use &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; in most cases, as it is more efficient than &lt;code&gt;instantiate()&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Примечание. В&lt;/strong&gt; большинстве случаев вы, вероятно, захотите использовать &lt;a href=&quot;instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; , поскольку он более эффективен, чем &lt;code&gt;instantiate()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfe6590d93bda764d8848600573bf4b249233971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: be aware of yielding rejected promises from sync generator. In such case &lt;code&gt;for await...of&lt;/code&gt; throws when consuming rejected promise and DOESN'T CALL &lt;code&gt;finally&lt;/code&gt; blocks within that generator. This can be undesireable if you need to free some allocated resources with &lt;code&gt;try/finally&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f3eb9c75799b6711da351bfde82222637c772a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Notes&lt;/strong&gt;: The parentheses &lt;code&gt;( ... )&lt;/code&gt; around the assignment statement are required when using object literal destructuring assignment without a declaration.</source>
          <target state="translated">&lt;strong&gt;Примечания&lt;/strong&gt; : круглые скобки &lt;code&gt;( ... )&lt;/code&gt; вокруг оператора присваивания необходимы при использовании деструктурирующего присваивания литерала объекта без объявления.</target>
        </trans-unit>
        <trans-unit id="a14401185f3ff5bd99f02a62b740692d031437ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Numbers&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Numbers&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="328dbb416ec43a5d5908babc2a4d818c1d1b4d94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Numbers&lt;/strong&gt;: Leading zeros are prohibited (in &lt;a href=&quot;json/stringify&quot;&gt;&lt;code&gt;JSON.stringify&lt;/code&gt;&lt;/a&gt; zeros will be ignored, but in &lt;a href=&quot;json/parse&quot;&gt;&lt;code&gt;JSON.parse&lt;/code&gt;&lt;/a&gt; it will throw SyntaxError); a decimal point must be followed by at least one digit.</source>
          <target state="translated">&lt;strong&gt;Числа&lt;/strong&gt; : &lt;a href=&quot;json/stringify&quot;&gt; &lt;code&gt;JSON.stringify&lt;/code&gt; &lt;/a&gt; нули запрещены (в JSON.stringify нули будут игнорироваться, но в &lt;a href=&quot;json/parse&quot;&gt; &lt;code&gt;JSON.parse&lt;/code&gt; &lt;/a&gt; это вызовет SyntaxError); после десятичной точки должна следовать как минимум одна цифра.</target>
        </trans-unit>
        <trans-unit id="159ea910cec98f0557276fc2767d13225aa489ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Objects and Arrays&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ece7382735109b62c363babb434637eaa506bff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Objects and Arrays&lt;/strong&gt;: Property names must be double-quoted strings; trailing commas are forbidden.</source>
          <target state="translated">&lt;strong&gt;Объекты и массивы&lt;/strong&gt; : имена свойств должны быть строками в двойных кавычках; конечные запятые запрещены.</target>
        </trans-unit>
        <trans-unit id="1826f809cf822bd5667504e48b0c2d2304b96d8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old comprehensions syntax (do not use anymore!):&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Старый синтаксис понимания (больше не использовать!):&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69bd1ed79ee9bc0bb621aeef86c416fd19b0ce7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;One key difference:&lt;/strong&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt; returns the object or throws a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; if the property has not been successfully defined. &lt;code&gt;Reflect.defineProperty&lt;/code&gt;, however, simply returns a &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property was successfully defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d6139fc4fa8f83bc90057837ed73ede18b2f4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Operator precedence&lt;/strong&gt; determines how operators are parsed concerning each other. Operators with higher precedence become the operands of operators with lower precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccfff51da82250c6945871fe29c0806ff574c48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Output:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Output:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52d9ccdbcabfbe2a23a0a89b1f853ca9fcd3e609" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Polyfill Notes:&lt;/strong&gt; This algorithm is exactly as specified in ECMA-262 6&lt;sup&gt;th&lt;/sup&gt; Edition (assuming &lt;code&gt;Object&lt;/code&gt; and &lt;code&gt;TypeError&lt;/code&gt; have their original values and that &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;.call()&lt;/code&gt; evaluates to the original value of &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68122dbb7070cbaf7691a8bb5160ae8529b51c44" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Pro:&lt;/strong&gt; The &lt;code&gt;with&lt;/code&gt; statement can help reduce file size by reducing the need to repeat a lengthy object reference without performance penalty. The scope chain change required by 'with' is not computationally expensive. Use of 'with' will relieve the interpreter of parsing repeated object references. Note, however, that in many cases this benefit can be achieved by using a temporary variable to store a reference to the desired object.</source>
          <target state="translated">&lt;strong&gt;Pro: &lt;/strong&gt; &lt;code&gt;with&lt;/code&gt; заявлением может помочь уменьшить размер файла за счет уменьшения необходимости повторять длинную ссылку на объект без потери производительности. Изменение цепочки областей видимости, требуемое с помощью 'with', не требует больших вычислительных затрат. Использование 'with' избавит интерпретатор от синтаксического анализа повторяющихся ссылок на объекты. Обратите внимание, однако, что во многих случаях это преимущество может быть достигнуто путем использования временной переменной для хранения ссылки на желаемый объект.</target>
        </trans-unit>
        <trans-unit id="b6b834226693d404aecf56319d99c8560bccf62c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Property accessors&lt;/strong&gt; provide access to an object's properties by using the dot notation or the bracket notation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e2daf6ab78ab4941f50d31c4d73b3f5fe43db5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflect&lt;/strong&gt; is a built-in object that provides methods for interceptable JavaScript operations. The methods are the same as those of &lt;a href=&quot;proxy/handler&quot;&gt;proxy handlers&lt;/a&gt;. &lt;code&gt;Reflect&lt;/code&gt; is not a function object, so it's not constructible.</source>
          <target state="translated">&lt;strong&gt;Reflect&lt;/strong&gt; - это встроенный объект, который предоставляет методы для перехватываемых операций JavaScript. Методы такие же, как и у &lt;a href=&quot;proxy/handler&quot;&gt;обработчиков прокси&lt;/a&gt; . &lt;code&gt;Reflect&lt;/code&gt; не является функциональным объектом, поэтому его нельзя построить.</target>
        </trans-unit>
        <trans-unit id="47ffe6b9b671e8b4220d15217c304878663344ae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reflect&lt;/strong&gt; is a built-in object that provides methods for interceptable JavaScript operations. The methods are the same as those of &lt;a href=&quot;proxy/proxy&quot;&gt;proxy handlers&lt;/a&gt;. &lt;code&gt;Reflect&lt;/code&gt; is not a function object, so it's not constructible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363799465d2aa7632d4980182a2fafaaec66a181" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Relation with strict mode&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2968057f98255a54a356baa8a6298169e0b0da1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove an item by index position&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалить элемент по позиции индекса&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="836d4522c55df23783cf3a14d604005a6b553333" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove an item from the beginning of an Array&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ba0905a651cec43ed2e2b9063c36aa963060e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove an item from the end of an Array&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e47fa095321df3a7f10f4fedbd3b9a8987634de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove from the end of an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалить с конца массива&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2c08b8bf8fa04b2a3d5c5cdfdce58bcf6945232b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove from the front of an Array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалить с лицевой стороны массива&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1dce4b02f92aa1d139f10dc83a34e567ed4967a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remove items from an index position&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Удалить элементы из позиции индекса&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2659efc4c4a02d37ec8a044e804f7ca9b1c07d17" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns a localized string representing the array and its elements. See also &lt;a href=&quot;array/tolocalestring&quot;&gt;&lt;code&gt;Array.prototype.toLocaleString()&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d7ecfc95623c2033f63fd590afd75b15836010" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns a new &lt;em&gt;array iterator&lt;/em&gt; object that contains the values for each index in the array.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50faf647e72a7f4c8c5501075b83bcc0eb62ebd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Returns a string representing the array and its elements. See also &lt;a href=&quot;array/tostring&quot;&gt;&lt;code&gt;Array.prototype.toString()&lt;/code&gt;&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0540c505c27086dc25fba77674774ebc1e5e656" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Since ECMAScript 2017:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364e95219afdc861c39574e473e8e92a19cd552a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Snippet:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Snippet:&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="50772e896681591579a59c57654fcb7f272b94bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Specification&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Specification&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="36538cd5dd56100c3fc7024ecb42c3b35b4d611a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spread syntax&lt;/strong&gt; (&lt;code&gt;...&lt;/code&gt;) allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d7a85c5e31389a97538ee981b219beb53784f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Spread syntax&lt;/strong&gt; allows an iterable such as an array expression or string to be expanded in places where zero or more arguments (for function calls) or elements (for array literals) are expected, or an object expression to be expanded in places where zero or more key-value pairs (for object literals) are expected.</source>
          <target state="translated">&lt;strong&gt;Синтаксис Spread&lt;/strong&gt; позволяет расширять итерируемый объект, такой как выражение массива или строка, в местах, где ожидается ноль или более аргументов (для вызовов функций) или элементов (для литералов массива), или выражение объекта, которое должно быть расширено в местах, где ноль или более Ожидаются пары ключ-значение (для объектных литералов).</target>
        </trans-unit>
        <trans-unit id="01304236fb3fbdd845e39d7a2be8f942c7fc22fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Strict vs. non-strict mode&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Строгий и нестрогий режимы&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1c9d22131e0b891bce0d6de6b15ad73403e3bc1e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;String generics are non-standard, deprecated and will get removed in the near future&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;Строковые дженерики нестандартны, устарели и будут удалены в ближайшем будущем&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="900a3612f842cf82393dfc779b0606d885442dff" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary&lt;/strong&gt;: Manually updating or setting the constructor can lead to differrent and sometimes confusing consequences. To prevent this, just define the role of &lt;code&gt;constructor&lt;/code&gt; in each specific case. In most cases, &lt;code&gt;constructor&lt;/code&gt; is not used and reassignment of it is not necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fcf8539d8a98297d80b69a936a76ae9287a571" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Summary&lt;/strong&gt;: manually updating or setting the constructor can lead to differrent and sometimes confusing consequences. To prevent this just define the role of constructor in each specific case. In most cases constructor is not used and reassignment of it is not necessary.</source>
          <target state="translated">&lt;strong&gt;Резюме&lt;/strong&gt; : обновление или настройка конструктора вручную может привести к различным, а иногда и запутанным последствиям. Чтобы этого не произошло, просто определите роль конструктора в каждом конкретном случае. В большинстве случаев конструктор не используется, и его переназначение не требуется.</target>
        </trans-unit>
        <trans-unit id="31a1b77662216c732a1cc2217e29d26879ca9806" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The constructor function's&lt;/strong&gt; parameters are not enclosed between slashes but do use quotation marks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6cfbd516cc2269ef92aff805f8c3609006b8a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The iterable protocol&lt;/strong&gt; allows JavaScript objects to define or customize their iteration behavior, such as what values are looped over in a &lt;a href=&quot;statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; construct. Some built-in types are &lt;a href=&quot;#Built-in_iterables&quot;&gt;built-in iterables&lt;/a&gt; with a default iteration behavior, such as &lt;a href=&quot;global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;global_objects/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt;, while other types (such as &lt;a href=&quot;global_objects/object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;) are not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a3bd24feb600ef1f532bf3d1570bac82bef0bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The iterator protocol&lt;/strong&gt; defines a standard way to produce a sequence of values (either finite or infinite), and potentially a return value when all values have been generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ef9c91b9ae5e2f70c31a181b25e9d9b15ee64b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The literal notation's&lt;/strong&gt; parameters are enclosed between slashes and do not use quotation marks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9833331fd9a6aef6d0b22322f7e75ecf6f7892ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental&quot;&gt;experimental technology&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Это &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/MDN/Contribute/Guidelines/Conventions_definitions#Experimental&quot;&gt;экспериментальная технология&lt;/a&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="17a05e908ffe0476bab1d69ee8f5ea9d7ca892ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Traditional Example:&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ecbbdacf3e506b08947cf29bf7c078336b5206" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Traditional functions&lt;/strong&gt; default &lt;code&gt;this&lt;/code&gt; to the window scope:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717bc18ee99931dbee84a9e8cb53beb20c99f5ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage note:&lt;/strong&gt; The &amp;lt;big&amp;gt; element has been removed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt; and shouldn't be used anymore. Instead web developers should use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; properties.</source>
          <target state="translated">&lt;strong&gt;Примечание по использованию:&lt;/strong&gt; элемент &amp;lt;big&amp;gt; был удален из &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt; и больше не должен использоваться. Вместо этого веб-разработчики должны использовать свойства &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="348f7621b2818898cce4b82ca02a826dfbbe6c15" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage note:&lt;/strong&gt; The &amp;lt;big&amp;gt; element has been removed in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt; and shouldn't be used anymore. Instead web developers should use &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64d0614cf0f35a92dc16f50aca15eb7c0be0a39" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage note:&lt;/strong&gt; The &amp;lt;font&amp;gt; element has been removed in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt; and shouldn't be used anymore. Instead web developers should use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; properties.</source>
          <target state="translated">&lt;strong&gt;Примечание по использованию:&lt;/strong&gt; элемент &amp;lt;font&amp;gt; был удален из &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt; и больше не должен использоваться. Вместо этого веб-разработчики должны использовать свойства &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4601d7cd12f611d7b1cb6a36d90b3d601b3b6db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Usage note:&lt;/strong&gt; The &amp;lt;font&amp;gt; element has been removed in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt; and shouldn't be used anymore. Instead web developers should use &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/CSS&quot;&gt;CSS&lt;/a&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f325a31580be62078e7fb5fe92896c3171b548f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Value&lt;/strong&gt;: there are no values stored in the array Iterator object; instead it stores the address of the array used in its creation and so depends on the values stored in that array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f386da939ae3ec34638a5a475319e8fe20344697" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Be careful when using &lt;code&gt;Function.name&lt;/code&gt; and source code transformations, such as those carried out by JavaScript compressors (minifiers) or obfuscators. These tools are often used as part of a JavaScript build pipeline to reduce the size of a program prior to deploying it to production. Such transformations often change a function's name at build-time.</source>
          <target state="translated">&lt;strong&gt;Предупреждение:&lt;/strong&gt; будьте осторожны при использовании &lt;code&gt;Function.name&lt;/code&gt; и преобразований исходного кода, таких как те, которые выполняются компрессорами (минификаторами) или обфускаторами JavaScript. Эти инструменты часто используются как часть конвейера сборки JavaScript, чтобы уменьшить размер программы перед ее развертыванием в производственной среде. Такие преобразования часто меняют имя функции во время сборки.</target>
        </trans-unit>
        <trans-unit id="55e70cb40ee5f019a59e614e90a54c1a2fc6b0b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Blinking text is frowned upon by several accessibility standards. The &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; element itself is non-standard and deprecated!</source>
          <target state="translated">&lt;strong&gt;Предупреждение.&lt;/strong&gt; Мигающий текст не одобряется некоторыми стандартами доступности. Сам элемент &lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; нестандартен и устарел!</target>
        </trans-unit>
        <trans-unit id="f2c5ca7243a79a7f8cb01c07d3ee075834da8402" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Changing the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is, by the nature of &lt;a href=&quot;https://mathiasbynens.be/notes/prototypes&quot;&gt;how modern JavaScript engines optimize property accesses&lt;/a&gt;, currently a very slow operation in every browser and JavaScript engine. In addition, the effects of altering inheritance are subtle and far-flung, and are not limited to simply the time spent in the &lt;code&gt;Object.setPrototypeOf(...)&lt;/code&gt; statement, but may extend to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; code that has access to any object whose &lt;code&gt;[[Prototype]]&lt;/code&gt; has been altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5d0d7d0d2f5fe9dfc395db3dd646dfc2ae6e5f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Changing the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is, by the nature of how modern JavaScript engines optimize property accesses, a very slow operation, in &lt;strong&gt;&lt;em&gt;every&lt;/em&gt;&lt;/strong&gt; browser and JavaScript engine. The effects on performance of altering inheritance are subtle and far-flung, and are not limited to simply the time spent in &lt;code&gt;obj.__proto__ = ...&lt;/code&gt; statement, but may extend to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; code that has access to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; object whose &lt;code&gt;[[Prototype]]&lt;/code&gt; has been altered. If you care about performance you should avoid setting the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object. Instead, create a new object with the desired &lt;code&gt;[[Prototype]]&lt;/code&gt; using &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Предупреждение:&lt;/strong&gt; изменение &lt;code&gt;[[Prototype]]&lt;/code&gt; объекта по природе того, как современные движки JavaScript оптимизируют доступ к свойствам, является очень медленной операцией в &lt;strong&gt;&lt;em&gt;каждом&lt;/em&gt;&lt;/strong&gt; браузере и движке JavaScript. Влияние изменения наследования на производительность незначительно и далеко и не ограничивается простым временем, проведенным в &lt;code&gt;obj.__proto__ = ...&lt;/code&gt; , но может распространяться на &lt;strong&gt;&lt;em&gt;любой&lt;/em&gt;&lt;/strong&gt; код, имеющий доступ к &lt;strong&gt;&lt;em&gt;любому&lt;/em&gt;&lt;/strong&gt; объекту, чей &lt;code&gt;[[Prototype]]&lt;/code&gt; был изменен. Если вы заботитесь о производительности, вам следует избегать установки &lt;code&gt;[[Prototype]]&lt;/code&gt; объекта. Вместо этого создайте новый объект с желаемым &lt;code&gt;[[Prototype]]&lt;/code&gt; с помощью &lt;a href=&quot;create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt;,</target>
        </trans-unit>
        <trans-unit id="f84a273039ca68a151552997ce032eae196ac263" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Changing the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is, by the nature of how modern JavaScript engines optimize property accesses, a very slow operation, in &lt;strong&gt;&lt;em&gt;every&lt;/em&gt;&lt;/strong&gt; browser and JavaScript engine. The effects on performance of altering inheritance are subtle and far-flung, and are not limited to simply the time spent in the &lt;code&gt;Object.setPrototypeOf(...)&lt;/code&gt; statement, but may extend to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; code that has access to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; object whose &lt;code&gt;[[Prototype]]&lt;/code&gt; has been altered. If you care about performance you should avoid setting the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object. Instead, create a new object with the desired &lt;code&gt;[[Prototype]]&lt;/code&gt; using &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Предупреждение:&lt;/strong&gt; изменение &lt;code&gt;[[Prototype]]&lt;/code&gt; объекта по природе того, как современные движки JavaScript оптимизируют доступ к свойствам, является очень медленной операцией в &lt;strong&gt;&lt;em&gt;каждом&lt;/em&gt;&lt;/strong&gt; браузере и движке JavaScript. Влияние изменения наследования на производительность незаметно и далеко и не ограничивается простым временем, проведенным в &lt;code&gt;Object.setPrototypeOf(...)&lt;/code&gt; , но может распространяться на &lt;strong&gt;&lt;em&gt;любой&lt;/em&gt;&lt;/strong&gt; код, имеющий доступ к &lt;strong&gt;&lt;em&gt;любому&lt;/em&gt;&lt;/strong&gt; объекту, чей &lt;code&gt;[[Prototype]]&lt;/code&gt; изменен. Если вы заботитесь о производительности, вам следует избегать установки &lt;code&gt;[[Prototype]]&lt;/code&gt; объекта. Вместо этого создайте новый объект с желаемым &lt;code&gt;[[Prototype]]&lt;/code&gt; , используя&lt;a href=&quot;create&quot;&gt; &lt;code&gt;Object.create()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7964cb103261810defa389e77079ccc22cb65f6f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Changing the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object is, by the nature of how modern JavaScript engines optimize property accesses, a very slow operation, in &lt;strong&gt;&lt;em&gt;every&lt;/em&gt;&lt;/strong&gt; browser and JavaScript engine. The effects on the performance of altering inheritance are subtle and far-flung, and are not limited to simply the time spent in &lt;code&gt;obj.__proto__ = ...&lt;/code&gt; statements, but may extend to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; code that has access to &lt;strong&gt;&lt;em&gt;any&lt;/em&gt;&lt;/strong&gt; object whose &lt;code&gt;[[Prototype]]&lt;/code&gt; has been altered. If you care about performance you should avoid setting the &lt;code&gt;[[Prototype]]&lt;/code&gt; of an object. Instead, create a new object with the desired &lt;code&gt;[[Prototype]]&lt;/code&gt; using &lt;a href=&quot;create&quot;&gt;&lt;code&gt;Object.create()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18dd0f800e40f86aaabb796c180dca2b9b0e4ac3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Executing JavaScript from a string is an enormous security risk. It is far too easy for a bad actor to run arbitrary code when you use &lt;code&gt;eval()&lt;/code&gt;. See &lt;a href=&quot;#Never_use_eval!&quot;&gt;Never use eval()!&lt;/a&gt;, below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e85094cf11795c6f63aad79a4176e958d70dbd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Floating point numbers cannot represent all decimals precisely in binary. This can lead to unexpected results, such as &lt;code&gt;0.1 + 0.2 === 0.3&lt;/code&gt; returning &lt;code&gt;false&lt;/code&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248749449464dd9efaec982a0437b9634b4e3780" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Never use a loop like this on arrays. Only use it on objects. See &lt;a href=&quot;for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;strong&gt;Предупреждение:&lt;/strong&gt; никогда не используйте такой цикл для массивов. Используйте его только на объектах. Подробнее см. &lt;a href=&quot;for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="46ba90dc0e6bb8c05d0ffaf09a6a1e56a4e049a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; Referring to &lt;code&gt;this&lt;/code&gt; before calling &lt;code&gt;super()&lt;/code&gt; will throw an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfb69c8eec1421056abb8beea5c19c0b31c53352" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The 5th edition of ECMAScript (ES5) forbids use of &lt;code&gt;arguments.callee()&lt;/code&gt; in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Strict_mode&quot;&gt;strict mode&lt;/a&gt;. Avoid using &lt;code&gt;arguments.callee()&lt;/code&gt; by either giving function expressions a name or use a function declaration where a function must call itself.</source>
          <target state="translated">&lt;strong&gt;Предупреждение:&lt;/strong&gt; 5-е издание ECMAScript (ES5) запрещает использование &lt;code&gt;arguments.callee()&lt;/code&gt; в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Strict_mode&quot;&gt;строгом режиме&lt;/a&gt; . Избегайте использования &lt;code&gt;arguments.callee()&lt;/code&gt; , задавая функциональным выражениям имя или используя объявление функции, в котором функция должна вызывать сама себя.</target>
        </trans-unit>
        <trans-unit id="ad4f51aaab05099d88692e1cde006304c24394d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The 5th edition of ECMAScript (ES5) forbids use of &lt;code&gt;arguments.callee()&lt;/code&gt; in &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Strict_mode&quot;&gt;strict mode&lt;/a&gt;. Avoid using &lt;code&gt;arguments.callee()&lt;/code&gt; by either giving function expressions a name or use a function declaration where a function must call itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f498e75f5d9e31af159052fc376e06d40082fac7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; The script interpreter will set the built-in &lt;code&gt;Function.name&lt;/code&gt; property only if a function does not have an own property called &lt;em&gt;name&lt;/em&gt; (see section &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-setfunctionname&quot;&gt;9.2.11 of the ECMAScript2015 Language Specification&lt;/a&gt;). However, ES2015 specifies the &lt;em&gt;static&lt;/em&gt; keyword such that static methods will be set as OwnProperty of the class constructor function (ECMAScript2015, &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-runtime-semantics-classdefinitionevaluation&quot;&gt;14.5.14.21.b&lt;/a&gt; + &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer-runtime-semantics-propertydefinitionevaluation&quot;&gt;12.2.6.9&lt;/a&gt;).</source>
          <target state="translated">&lt;strong&gt;Предупреждение.&lt;/strong&gt; Интерпретатор сценария установит встроенное свойство &lt;code&gt;Function.name&lt;/code&gt; только в том случае, если функция не имеет собственного свойства с именем &lt;em&gt;name&lt;/em&gt; (см. Раздел &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-setfunctionname&quot;&gt;9.2.11 спецификации языка ECMAScript2015&lt;/a&gt; ). Однако в ES2015 указано ключевое слово &lt;em&gt;static,&lt;/em&gt; поэтому статические методы будут установлены как OwnProperty функции конструктора класса (ECMAScript2015, &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-runtime-semantics-classdefinitionevaluation&quot;&gt;14.5.14.21.b&lt;/a&gt; + &lt;a href=&quot;https://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer-runtime-semantics-propertydefinitionevaluation&quot;&gt;12.2.6.9&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5c745d6239349e8d5d523555b821c67826074919" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; This section demonstrates JavaScript capabilities and documents some edge cases of the &lt;code&gt;bind()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f75778df4c35dd67da903044e9651178f5ebb11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; This section demonstrates JavaScript capabilities and documents some edge cases of the &lt;code&gt;bind()&lt;/code&gt; method. The methods shown below are not the best way to do things and probably should not be used in any production environment.</source>
          <target state="translated">&lt;strong&gt;Предупреждение. В&lt;/strong&gt; этом разделе демонстрируются возможности JavaScript и документируются некоторые крайние случаи использования метода &lt;code&gt;bind()&lt;/code&gt; . Методы, показанные ниже, не являются лучшим решением и, вероятно, не должны использоваться в какой-либо производственной среде.</target>
        </trans-unit>
        <trans-unit id="f8edd84388c56ed250f5c50a100a3a210b61dfad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; When the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) is used as a separator, the string is &lt;strong&gt;not&lt;/strong&gt; split by &lt;em&gt;user-perceived characters&lt;/em&gt; (&lt;a href=&quot;https://unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries&quot;&gt;grapheme clusters&lt;/a&gt;) or unicode characters (codepoints), but by UTF-16 codeunits. This destroys &lt;a href=&quot;http://unicode.org/faq/utf_bom.html#utf16-2&quot;&gt;surrogate pairs&lt;/a&gt;. See &lt;a href=&quot;https://stackoverflow.com/a/34717402&quot;&gt;&amp;ldquo;How do you get a string to a character array in JavaScript?&amp;rdquo; on StackOverflow&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10eae4778a6e80dd66cdfbd34f4e810f358284c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; While &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; is supported today in most browsers, its existence and exact behavior has only been standardized in the ECMAScript 2015 specification as a legacy feature to ensure compatibility for web browsers. For better support, it is recommended that only &lt;a href=&quot;getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">&lt;strong&gt;Предупреждение:&lt;/strong&gt; хотя &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; сегодня поддерживается в большинстве браузеров, его существование и точное поведение были стандартизированы только в спецификации ECMAScript 2015 как устаревшая функция для обеспечения совместимости с веб-браузерами. Для лучшей поддержки рекомендуется вместо этого использовать только &lt;a href=&quot;getprototypeof&quot;&gt; &lt;code&gt;Object.getPrototypeOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b7f4fab08bb59d4616bd2fce594968e7f145d8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt; While &lt;code&gt;Object.prototype.__proto__&lt;/code&gt; is supported today in most browsers, its existence and exact behavior has only been standardized in the ECMAScript 2015 specification as a legacy feature to ensure compatibility for web browsers. For better support, use &lt;a href=&quot;getprototypeof&quot;&gt;&lt;code&gt;Object.getPrototypeOf()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="990856b6e7ab811cec9e31655324efe55cff20ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning:&lt;/strong&gt;&lt;strong&gt;Do &lt;em&gt;not&lt;/em&gt; place the regular expression literal (or &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; constructor) within the &lt;code&gt;while&lt;/code&gt; condition! &lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5612383cfdef07dbdbaccf59a6815b748fc594" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Do not call &lt;code&gt;Promise.resolve&lt;/code&gt; on a thenable that resolves to itself. This will cause infinite recursion as it tries to flatten what seems to be an infinitely nested promise. An &lt;a href=&quot;https://stackblitz.com/edit/angular-promiseresovle-with-async-pipe?file=src/app/app.component.ts&quot;&gt;example&lt;/a&gt; would be using it along with the &lt;code&gt;async&lt;/code&gt; Pipe in Angular. Find more on that &lt;a href=&quot;https://angular.io/guide/template-syntax#avoid-side-effects&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Предупреждение&lt;/strong&gt; : не вызывайте &lt;code&gt;Promise.resolve&lt;/code&gt; для объекта, который разрешается сам. Это вызовет бесконечную рекурсию, поскольку она пытается сгладить то, что кажется бесконечно вложенным обещанием. В качестве &lt;a href=&quot;https://stackblitz.com/edit/angular-promiseresovle-with-async-pipe?file=src/app/app.component.ts&quot;&gt;примера&lt;/a&gt; можно использовать его вместе с &lt;code&gt;async&lt;/code&gt; Pipe в Angular. Узнайте больше об этом &lt;a href=&quot;https://angular.io/guide/template-syntax#avoid-side-effects&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a9f32395d01e090845cd2b2405d5899dc04c443" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[[BoundArguments]]&lt;/strong&gt; - a list of values whose elements are used as the first arguments to any call to the wrapped function.</source>
          <target state="translated">&lt;strong&gt;[[BoundArguments]]&lt;/strong&gt; - список значений, элементы которых используются в качестве первых аргументов любого вызова обернутой функции.</target>
        </trans-unit>
        <trans-unit id="1c457b9ae473d9a8e5d4eaa6ce3d27b852eb32db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[[BoundTargetFunction]] &lt;/strong&gt;- the wrapped function object;</source>
          <target state="translated">&lt;strong&gt;[[BoundTargetFunction]]&lt;/strong&gt; - обернутый объект функции;</target>
        </trans-unit>
        <trans-unit id="efa00c9a92d0f0da9ba1722378f62c5f9d65f3dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[[BoundThis]]&lt;/strong&gt; - the value that is always passed as &lt;strong&gt;this&lt;/strong&gt; value when calling the wrapped function.</source>
          <target state="translated">&lt;strong&gt;[[BoundThis]]&lt;/strong&gt; - значение, которое всегда передается как &lt;strong&gt;это&lt;/strong&gt; значение при вызове обернутой функции.</target>
        </trans-unit>
        <trans-unit id="577f5d8afff0a44a9df13b8bae9dde88197fd9df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;[[Call]]&lt;/strong&gt; - executes code associated with this object. Invoked via a function call expression. The arguments to the internal method are a &lt;strong&gt;this&lt;/strong&gt; value and a list containing the arguments passed to the function by a call expression.</source>
          <target state="translated">&lt;strong&gt;[[Call]]&lt;/strong&gt; - выполняет код, связанный с этим объектом. Вызывается через выражение вызова функции. Аргументами внутреннего метода являются значение &lt;strong&gt;this&lt;/strong&gt; и список, содержащий аргументы, переданные функции выражением вызова.</target>
        </trans-unit>
        <trans-unit id="ae7cb4a73e4dd561b5d7fc00661b50aa5c37f30d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;reason:&lt;/strong&gt; When &lt;code&gt;next().done=true&lt;/code&gt; or &lt;code&gt;currentIndex&amp;gt;length&lt;/code&gt; the &lt;code&gt;for..of&lt;/code&gt; loop ends. See &lt;a href=&quot;../../iteration_protocols&quot;&gt;Iteration protocols.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f965c5efb247e9f1ca771f32bbb0bebddb9805" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;true&lt;/strong&gt; if the given value is &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; and its type is &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;истина,&lt;/strong&gt; если заданное значение - &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; ,&lt;/a&gt; а его тип - &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; ; в противном случае - &lt;strong&gt;ложь&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e3e5cc75c1ee99fc843d327a7bd84a06634ec132" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;&lt;code&gt;fromIndex&lt;/code&gt;&lt;/var&gt;Optional</source>
          <target state="translated">&lt;var&gt;&lt;code&gt;fromIndex&lt;/code&gt;&lt;/var&gt;Optional</target>
        </trans-unit>
        <trans-unit id="228dfd5f782ef2106d4a039fb5d023e738ebc476" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;fromIndex&lt;/var&gt;Optional</source>
          <target state="translated">&lt;var&gt;fromIndex&lt;/var&gt;Optional</target>
        </trans-unit>
        <trans-unit id="7ff930fa6ee78c9cd2e66ff9e5033f26ff39845a" translate="yes" xml:space="preserve">
          <source>&lt;var&gt;obj&lt;/var&gt;)</source>
          <target state="translated">&lt;var&gt;obj&lt;/var&gt;)</target>
        </trans-unit>
        <trans-unit id="21606782c65e44cac7afbb90977d8b6f82140e76" translate="yes" xml:space="preserve">
          <source>=</source>
          <target state="translated">=</target>
        </trans-unit>
        <trans-unit id="6947818ac409551f11fbaa78f0ea6391960aa5b8" translate="yes" xml:space="preserve">
          <source>==</source>
          <target state="translated">==</target>
        </trans-unit>
        <trans-unit id="b64cc2760536699c09c33fd0c38b16350e500872" translate="yes" xml:space="preserve">
          <source>===</source>
          <target state="translated">===</target>
        </trans-unit>
        <trans-unit id="5bab61eb53176449e25c2c82f172b82cb13ffb9d" translate="yes" xml:space="preserve">
          <source>?</source>
          <target state="translated">?</target>
        </trans-unit>
        <trans-unit id="6be66c429c3c727cd324ae89b834ffe534a6d50d" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 15</source>
          <target state="translated">? - 15</target>
        </trans-unit>
        <trans-unit id="a98a00019d88037faae9cad68367d907f7fac409" translate="yes" xml:space="preserve">
          <source>? &amp;mdash; 9</source>
          <target state="translated">? - 9</target>
        </trans-unit>
        <trans-unit id="6dcd4ce23d88e2ee9568ba546c007c63d9131c1b" translate="yes" xml:space="preserve">
          <source>A</source>
          <target state="translated">A</target>
        </trans-unit>
        <trans-unit id="33438fbb207f3814ad9d1d3dd93280603933fa16" translate="yes" xml:space="preserve">
          <source>A (possibly empty) array containing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; copies of the contents of all custom sections matching &lt;code&gt;sectionName&lt;/code&gt;.</source>
          <target state="translated">(Возможно, пустой) массив, содержащий копии &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; содержимого всех настраиваемых разделов, соответствующих &lt;code&gt;sectionName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92a14ad6ed14659d6e4d9b4f06b9c42dd38a55ba" translate="yes" xml:space="preserve">
          <source>A (possibly empty) array containing &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; copies of the contents of all custom sections matching &lt;code&gt;sectionName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdf4b0ddf701f0a261a049420bf2794fe00b49ba" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../errors/not_a_codepoint&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown if an invalid Unicode code point is given (e.g. &lt;code&gt;&quot;RangeError: NaN is not a valid code point&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfbb4d84766b2b34712b399ea54b5d0ef56bec9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../statements/for...of&quot;&gt;for...of&lt;/a&gt; / &lt;a href=&quot;../../statements/for...in&quot;&gt;for...in&lt;/a&gt; loops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053a7abfdbcf7d9b895fd54cebc0c7e4b5efa722" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../statements/for...of&quot;&gt;for...of&lt;/a&gt; loop</source>
          <target state="translated">&lt;a href=&quot;../../statements/for...of&quot;&gt;Для ... из&lt;/a&gt; цикла</target>
        </trans-unit>
        <trans-unit id="84f12357f8487d95cc0257115743a5b38de4fff7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../../template_literals&quot;&gt;template string&lt;/a&gt;, optionally with substitutions (&lt;code&gt;${...}&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../../template_literals&quot;&gt;Шаблон строки&lt;/a&gt; , необязательно с заменами ( &lt;code&gt;${...}&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2b3930bb8348a508fdb54c0020887be0f3785bc4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not setting the property was successful.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; указывающие , действительно ли установка свойства было успешным.</target>
        </trans-unit>
        <trans-unit id="5260414e39e626cf5a9dbd296956bc4afd34a379" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; has the property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a8ff2390c96888656c4062d94bf43a017fd129" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given object is extensible.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающий , является ли расширяемый данный объект.</target>
        </trans-unit>
        <trans-unit id="13c6697fbe602dcae192f8dcc845ae9ab4207982" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given object is frozen.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; указывающий , действительно ли заморожен данный объект.</target>
        </trans-unit>
        <trans-unit id="8601cb9e9f1154f2ab964d9e588eeeb3c5c2a758" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given object is sealed.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; указывающие , действительно ли запечатан данный объект.</target>
        </trans-unit>
        <trans-unit id="3843ab2b6ba6be1add2b690cce1819a1dccb7ebb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given value is a finite number.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающий , является ли данное значение является конечным числом.</target>
        </trans-unit>
        <trans-unit id="5109483ee5c933868d96d80dd336f7312b80822c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given value is a number that is a safe integer.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающий , является ли данное значение является числом , которое является безопасным целым числом.</target>
        </trans-unit>
        <trans-unit id="bf5065726fcac4c9533050ddcf27e1e32ed27061" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the given value is an integer.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающий , является ли данное значение является целым числом.</target>
        </trans-unit>
        <trans-unit id="4b808b286549ba59f8f3c5071d19f3337b726b63" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the object has the specified property as own property.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; указывающее , имеет ли или нет объект указанного свойства в качестве собственного имущества.</target>
        </trans-unit>
        <trans-unit id="4efefca3b380f5db951ff7c20fcb46e9716a8785" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property was successfully defined.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающее , была ли успешно определено свойство.</target>
        </trans-unit>
        <trans-unit id="ce0f69c8908cf96c2359f44a2dcf5356276e2139" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the property was successfully deleted.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающее , был ли успешно удален свойство.</target>
        </trans-unit>
        <trans-unit id="294a9c25ebbb3040a39065ef8dde07c4ba94ecf2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the prototype was successfully set.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающее , был ли успешно установлен прототип.</target>
        </trans-unit>
        <trans-unit id="560eec06c5f5994e73c61896c4df515cb01f8b8d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the target has the property.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; указывающее , имеет ли или нет целевой свойство.</target>
        </trans-unit>
        <trans-unit id="f263166801049c433aa11d6df481ee2d7e4fe2cf" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the target is extensible.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающий , является ли целевой является расширяемым.</target>
        </trans-unit>
        <trans-unit id="6169a91c19a2f0a7c8ce1da8d9495da52b4cb48d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the target was successfully set to prevent extensions.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающее , была ли цель успешно установить для предотвращения расширения.</target>
        </trans-unit>
        <trans-unit id="8c0c304da546848f8bd08511c1595d81c9e894ce" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether or not the two arguments are the same value.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; указывает на два аргумента , являются ли или нет такое же значение.</target>
        </trans-unit>
        <trans-unit id="15d7965c265aafad8cc8bee3c70112fdaa7ce321" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether the calling object lies in the prototype chain of the specified object.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; указывающий , является ли вызывающий объект лежит в цепи прототипов указанного объекта.</target>
        </trans-unit>
        <trans-unit id="b7862e7910f50c683ca4dac57c31bb0247ac2083" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether the operation is lock free.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; , указывающий , является ли блокировка свободна операция.</target>
        </trans-unit>
        <trans-unit id="3748e765d557a5251ef3f5e01724509815c72391" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether the specified property is enumerable and is the object's own property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3564dcfc5fb3b8f6620d15d3682485bd0fbae055" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating whether the specified property is enumerable.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; указывающий , является ли указанное свойство перечислимо.</target>
        </trans-unit>
        <trans-unit id="f87e9900a6ac3ce5ee1e6cc8b9af2f1bc396440d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; which is &lt;code&gt;true&lt;/code&gt; if the value &lt;code&gt;&lt;var&gt;valueToFind&lt;/var&gt;&lt;/code&gt; is found within the array (or the part of the array indicated by the index &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt;, if specified).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd33b59987796a772d1e0ba229850e91fc8bb00" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; which is &lt;code&gt;true&lt;/code&gt; if the value &lt;code&gt;searchElement&lt;/code&gt; is found within the array (or the part of the array beginning at the index &lt;code&gt;fromIndex&lt;/code&gt;, if specified). Values of zero are all considered to be equal regardless of sign (that is, -0 is considered to be equal to both 0 and +0), but &lt;code&gt;false&lt;/code&gt; is not considered to be the same as 0.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; который является &lt;code&gt;true&lt;/code&gt; , если значение &lt;code&gt;searchElement&lt;/code&gt; находится в пределах массива (или его частей в начале массива на индекс &lt;code&gt;fromIndex&lt;/code&gt; , если указано). Все нулевые значения считаются равными независимо от знака (то есть -0 считается равным как 0, так и +0), но &lt;code&gt;false&lt;/code&gt; не считается равным 0.</target>
        </trans-unit>
        <trans-unit id="a66270d224cc8bf2fa8d27d680e79fbbfe7f4411" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2db7cf0bf42425e60ea87710df41debe3fea586e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; called if the &lt;code&gt;Promise&lt;/code&gt; is fulfilled. This function has one argument, the &lt;code&gt;fulfillment value&lt;/code&gt;. If it is not a function, it is internally replaced with an &quot;Identity&quot; function (it returns the received argument).</source>
          <target state="translated">&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; вызывается , если &lt;code&gt;Promise&lt;/code&gt; выполнено. Эта функция имеет один аргумент - &lt;code&gt;fulfillment value&lt;/code&gt; . Если это не функция, она внутренне заменяется функцией &amp;laquo;Идентичность&amp;raquo; (возвращает полученный аргумент).</target>
        </trans-unit>
        <trans-unit id="cbfe09aafac5cb3179827c64b978f884c1925f95" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; called if the &lt;code&gt;Promise&lt;/code&gt; is rejected. This function has one argument, the &lt;code&gt;rejection reason&lt;/code&gt;. If it is not a function, it is internally replaced with a &quot;Thrower&quot; function (it throws an error it received as argument).</source>
          <target state="translated">&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; вызывается , если &lt;code&gt;Promise&lt;/code&gt; будет отклонено. Эта функция имеет один аргумент - &lt;code&gt;rejection reason&lt;/code&gt; . Если это не функция, она внутренне заменяется функцией &amp;laquo;Метатель&amp;raquo; (выдает ошибку, полученную в качестве аргумента).</target>
        </trans-unit>
        <trans-unit id="dd5b8dd934e6350b0cf2d693a280a94187b707ee" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; called when the &lt;code&gt;Promise&lt;/code&gt; is rejected. This function has one argument:</source>
          <target state="translated">&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; вызывается , когда &lt;code&gt;Promise&lt;/code&gt; отвергается. У этой функции один аргумент:</target>
        </trans-unit>
        <trans-unit id="09c8336afa2c0f03310b3bd721ff74a91274c2f7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; called when the &lt;code&gt;Promise&lt;/code&gt; is settled.</source>
          <target state="translated">&lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; вызывается , когда &lt;code&gt;Promise&lt;/code&gt; решен.</target>
        </trans-unit>
        <trans-unit id="48c6bb1eeac96194bbb9e1a5cfbbd1044a7ee089" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; object's read-only &lt;code&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/code&gt; property indicates the function's name as specified when it was created, or &lt;code&gt;&quot;anonymous&quot;&lt;/code&gt; for functions created anonymously.</source>
          <target state="translated">A &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; A только для чтения объекта &lt;code&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/code&gt; свойство указывает имя функции , как указано , когда она была создана, или &lt;code&gt;&quot;anonymous&quot;&lt;/code&gt; для функций , созданных анонимно.</target>
        </trans-unit>
        <trans-unit id="04b5b3627cc05aeaef677200d2ca03594a8ae2b9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; object's read-only &lt;code&gt;name&lt;/code&gt; property indicates the function's name as specified when it was created, or it may be either &lt;code&gt;anonymous&lt;/code&gt; or &lt;code&gt;''&lt;/code&gt; (an empty string) for functions created anonymously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a354f1c57ffdef2987affbea832125989711c3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; or any value to wait for.</source>
          <target state="translated">&lt;a href=&quot;../global_objects/promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; или любое значение ждать.</target>
        </trans-unit>
        <trans-unit id="2a9409986c75e586634b3c1a14ae67713dfe46c5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../global_objects/promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which will be resolved with the value returned by the async function, or rejected with an exception thrown from, or uncaught within, the async function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c80d77bffcf8142f404e17f78525e7b54c16234" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Объект &lt;a href=&quot;../module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="35975415f4e0e0e5a26be836b5c62773dfdf9df3" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; representing the milliseconds elapsed since the UNIX epoch.</source>
          <target state="translated">&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; представляющих миллисекунд с начала эпохи UNIX.</target>
        </trans-unit>
        <trans-unit id="c72f514d5ea1869e64d0f1bc89c9c57ec95165e8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt;. If the parameter is of a different type, it will get converted to a number or to &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; if it cannot be converted.</source>
          <target state="translated">&lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; &lt;/a&gt; . Если параметр имеет другой тип, он будет преобразован в число или в &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; ,&lt;/a&gt; если его нельзя преобразовать.</target>
        </trans-unit>
        <trans-unit id="90e69c14f902310947e3c38b04e08ebd2c85319c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that is rejected with the given reason.</source>
          <target state="translated">&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; , что отвергается с данной причиной.</target>
        </trans-unit>
        <trans-unit id="6227ec584abbfb76dde45384e4e66d6abe4214dc" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that is resolved with the given value, or the promise passed as value, if the value was a promise object.</source>
          <target state="translated">&lt;a href=&quot;../promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; , что не будет решен с заданным значением, или обещанием , переданным в качестве значения, если значение было объект обещания.</target>
        </trans-unit>
        <trans-unit id="b9a91fb791a6682e16518a8761044575d6b36084" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; (&quot;invalid language tag: xx_yy&quot;) is thrown if a &lt;code&gt;locale&lt;/code&gt; argument isn't a valid language tag.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; &lt;/a&gt; (&amp;laquo;недопустимый языковой тег: xx_yy&amp;raquo;) выдается, если аргумент &lt;code&gt;locale&lt;/code&gt; не является допустимым языковым тегом.</target>
        </trans-unit>
        <trans-unit id="b7986ca1a037ff7f8ae7007ac7b84d094da8a9c8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown if &lt;code&gt;form&lt;/code&gt; isn't one of the values specified above.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; выдается,&lt;/a&gt; если &lt;code&gt;form&lt;/code&gt; не является одним из значений, указанных выше.</target>
        </trans-unit>
        <trans-unit id="4cc137914405f207b04e2bb42c2ecb3a32a9d966" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt;, if the &lt;code&gt;offset&lt;/code&gt; is set such as it would store beyond the end of the typed array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f558645b9de1e4e2da7498b8e61ea4d1488ef9c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object or literal. The match or matches are replaced with &lt;code&gt;&lt;var&gt;newSubstr&lt;/var&gt;&lt;/code&gt; or the value returned by the specified &lt;code&gt;&lt;var&gt;function&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be6d9353dd183a4200cfb353cbbacdb730746840" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object or literal. The match or matches are replaced with &lt;code&gt;newSubStr&lt;/code&gt; or the value returned by the specified &lt;code&gt;function&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; объект или буквальный. &lt;code&gt;newSubStr&lt;/code&gt; или совпадения заменяются на newSubStr или значение, возвращаемое указанной &lt;code&gt;function&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09e51ecccc0c015bb3a71a4169a8700f5747f19a" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../statements/return&quot;&gt;&lt;code&gt;return&lt;/code&gt;&lt;/a&gt; statement is reached. In this case, execution of the generator ends and an &lt;code&gt;IteratorResult&lt;/code&gt; is returned to the caller in which the &lt;code&gt;value&lt;/code&gt; is the value specified by the &lt;code&gt;return&lt;/code&gt; statement and &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../statements/return&quot;&gt; &lt;code&gt;return&lt;/code&gt; &lt;/a&gt; заявление будет достигнуто. В этом случае выполнение генератора завершается, и вызывающей стороне возвращается &lt;code&gt;IteratorResult&lt;/code&gt; , в котором &lt;code&gt;value&lt;/code&gt; является значением, указанным в операторе &lt;code&gt;return&lt;/code&gt; , а &lt;code&gt;done&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e1aa954b278ec1663990456965e6048580d642d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; of the specified &lt;code&gt;&lt;var&gt;targetLength&lt;/var&gt;&lt;/code&gt; with &lt;code&gt;&lt;var&gt;padString&lt;/var&gt;&lt;/code&gt; applied from the start.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50790a46d8164ee53132627ac511b4e1dd02aca2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; of the specified &lt;code&gt;&lt;var&gt;targetLength&lt;/var&gt;&lt;/code&gt; with the &lt;code&gt;&lt;var&gt;padString&lt;/var&gt;&lt;/code&gt; applied at the end of the current &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d94099f13bcc9046ee189be6871175e002a0e79" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; of the specified length with the pad string applied at the end of the current string.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; заданной длины со строкой площадки применяется в конце текущей строки.</target>
        </trans-unit>
        <trans-unit id="18d9a51534f1f350de06c0937b0a55e28682578c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; of the specified length with the pad string applied from the start.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; заданной длины со строкой колодки применяется с самого начала.</target>
        </trans-unit>
        <trans-unit id="e619d2320e5ad77f52d56b8d7d547d0534e91e71" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../number&quot;&gt;&lt;code&gt;Number&lt;/code&gt;&lt;/a&gt; object that's used to insert white space into the output JSON string for readability purposes.</source>
          <target state="translated">Объект &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../number&quot;&gt; &lt;code&gt;Number&lt;/code&gt; ,&lt;/a&gt; который используется для вставки пробела в выходную строку JSON для удобства чтения.</target>
        </trans-unit>
        <trans-unit id="a3d807fa0fea94c766a6c6572f0b90ef6d57c40e" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is a target of the match.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , которая является объектом матча.</target>
        </trans-unit>
        <trans-unit id="1f9628c09235d84d6c607c47ab7f0b35d2579237" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is a target of the replacement.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , которая является целью замены.</target>
        </trans-unit>
        <trans-unit id="31c6d9a58da4c9f834f057ef6fa796e72be6fa17" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is a target of the search.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , которая является объектом поиска.</target>
        </trans-unit>
        <trans-unit id="304317f55942a3503cae4260a97027921c1571a0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is to be replaced by &lt;code&gt;&lt;var&gt;newSubstr&lt;/var&gt;&lt;/code&gt;. It is treated as a literal string and is &lt;em&gt;not&lt;/em&gt; interpreted as a regular expression. Only the first occurrence will be replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d08401a35fd3d4dfe70bd6e1cce1b74421c152" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; that is to be replaced by &lt;code&gt;newSubStr&lt;/code&gt;. It is treated as a verbatim string and is &lt;em&gt;not&lt;/em&gt; interpreted as a regular expression. Only the first occurrence will be replaced.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , которая должна быть заменена &lt;code&gt;newSubStr&lt;/code&gt; . Он рассматривается как дословная строка и &lt;em&gt;не&lt;/em&gt; интерпретируется как регулярное выражение. Будет заменено только первое вхождение.</target>
        </trans-unit>
        <trans-unit id="ca459661381b77f41d22ce3c0494894ae4e1ba9d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; which is either &quot;&lt;code&gt;ok&lt;/code&gt;&quot;, &quot;&lt;code&gt;not-equal&lt;/code&gt;&quot;, or &quot;&lt;code&gt;timed-out&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; , которая либо &amp;laquo; &lt;code&gt;ok&lt;/code&gt; &amp;raquo;, &amp;laquo; &lt;code&gt;not-equal&lt;/code&gt; &amp;raquo;, или &amp;laquo; &lt;code&gt;timed-out&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="5206fa01860ba323314f7b5cb23869068e675be0" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; (&quot;invalid element in locales argument&quot;) is thrown if an array element isn't of type string.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; (&amp;laquo;недопустимый элемент в аргументе языковых стандартов&amp;raquo;) выдается, если элемент массива не является строковым.</target>
        </trans-unit>
        <trans-unit id="2247216a7a1393502ff5b58f70d6da4ee07e55e4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception if the &lt;code&gt;propertiesObject&lt;/code&gt; parameter is &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; or a non-primitive-wrapper object.</source>
          <target state="translated">&lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; Исключение , если &lt;code&gt;propertiesObject&lt;/code&gt; параметр является &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; или объектом непримитивной-обертки.</target>
        </trans-unit>
        <trans-unit id="71de3f580d90f2a856a9417fce77d2635344565c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown if &lt;code&gt;&lt;var&gt;prototypeObj&lt;/var&gt;&lt;/code&gt; is undefined or null.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; выдается,&lt;/a&gt; если &lt;code&gt;&lt;var&gt;prototypeObj&lt;/var&gt;&lt;/code&gt; не определен или равен нулю.</target>
        </trans-unit>
        <trans-unit id="be026a6500abab62c0f3c1a1ba06cd11a8f384d4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown if the first argument is not a well formed object.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; выдается,&lt;/a&gt; если первый аргумент не является правильно сформированным объектом.</target>
        </trans-unit>
        <trans-unit id="8ea6550e87c19533be1b1b05083247fbab1affd2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown if the first argument is not a well-formed object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea07a755143c730ed47d3beacdfc13a38ef990d8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; is thrown when attempts are made to change non-configurable property attributes (except &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;writable&lt;/code&gt;, if permitted) unless the current and new values are the same.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; выдается,&lt;/a&gt; когда предпринимаются попытки изменить атрибуты ненастраиваемого свойства (кроме &lt;code&gt;value&lt;/code&gt; и возможности &lt;code&gt;writable&lt;/code&gt; , если это разрешено), если текущие и новые значения не совпадают.</target>
        </trans-unit>
        <trans-unit id="6463d2c6731078f517b4e22a252369338a3097ce" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; is not an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; or if &lt;code&gt;&lt;var&gt;prototype&lt;/var&gt;&lt;/code&gt; is neither an object nor &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac0967d7d2f9f6ffffb8f3562b8103acf8e1eaa" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; is not an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2279139d707f31041c549ee0285a86559669dadd" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; or &lt;code&gt;&lt;var&gt;newTarget&lt;/var&gt;&lt;/code&gt; are not constructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972b69f66ebc9f00367b3e5530ed4825e43881ea" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;target&lt;/code&gt; is not an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; or if &lt;code&gt;prototype&lt;/code&gt; is neither an object nor &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , если &lt;code&gt;target&lt;/code&gt; не является &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; или если &lt;code&gt;prototype&lt;/code&gt; является ни объектом, ни &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0bafdafc405566d9d7ce7f3627fc33d25478b42" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;target&lt;/code&gt; is not an &lt;a href=&quot;../object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , если &lt;code&gt;target&lt;/code&gt; не является &lt;a href=&quot;../object&quot;&gt; &lt;code&gt;Object&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb25e77ff949453c52dedd7a3fa7b9e4563573ec" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if &lt;code&gt;target&lt;/code&gt; or &lt;code&gt;newTarget&lt;/code&gt; are not constructors.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , если &lt;code&gt;target&lt;/code&gt; или &lt;code&gt;newTarget&lt;/code&gt; не являются конструкторами.</target>
        </trans-unit>
        <trans-unit id="1491a3ec350d12aecea2b1d725775ccdffd1b9fb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if the &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; is not callable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb15c2753e0f618afb24d5a14ee6b5db238bcd6" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;, if the &lt;em&gt;target&lt;/em&gt; is not callable.</source>
          <target state="translated">Ошибка &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; , если &lt;em&gt;цель&lt;/em&gt; не вызывается.</target>
        </trans-unit>
        <trans-unit id="fee685859972af60789d465f8fb015138440f81c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;function&quot;&gt;function declaration&lt;/a&gt; is also limited in scope inside the block where the declaration occurs:</source>
          <target state="translated">Объявление &lt;a href=&quot;function&quot;&gt;функции&lt;/a&gt; также ограничено по объему внутри блока, в котором происходит объявление:</target>
        </trans-unit>
        <trans-unit id="c3a85985b63ce553463a294256a3b99359ec75d4" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;global_objects/generator&quot;&gt;generator object&lt;/a&gt; is &lt;em&gt;both&lt;/em&gt; iterator and iterable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c8325a51827282f908faa46975e6ad3bbb3dc5" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;global_objects/generator&quot;&gt;generator object&lt;/a&gt; is both, iterator and iterable:</source>
          <target state="translated">Объект- &lt;a href=&quot;global_objects/generator&quot;&gt;генератор&lt;/a&gt; может быть итератором и итерируемым:</target>
        </trans-unit>
        <trans-unit id="9687726c5be4bf3421292dc48ea0095ad087dd28" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; is an example of a built-in iterable object:</source>
          <target state="translated">&lt;a href=&quot;global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; является примером встроенной итерации объекта:</target>
        </trans-unit>
        <trans-unit id="7a4d552f9e15f73d3e404f4fe0efc7a20b98e8b9" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object or a promise that will fulfill with one, representing the underlying source of a .wasm module you want to stream and compile.</source>
          <target state="translated">Объект &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; или обещание, которое будет выполнено с ним, представляющее базовый источник модуля .wasm, который вы хотите транслировать и компилировать.</target>
        </trans-unit>
        <trans-unit id="4905e7c0c4ab4689a993b295b78420fffca1e446" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object or a promise that will fulfill with one, representing the underlying source of a .wasm module you want to stream, compile, and instantiate.</source>
          <target state="translated">Объект &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; или обещание, которое будет выполнено с ним, представляющее базовый источник модуля .wasm, который вы хотите передать, скомпилировать и создать экземпляр.</target>
        </trans-unit>
        <trans-unit id="594c3ca6cf174be325d2d0ef16c5b85b3a5347c2" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown if an invalid Unicode code point is given (e.g. &quot;RangeError: NaN is not a valid code point&quot;).</source>
          <target state="translated">Ошибка &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Not_a_codepoint&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; выдается,&lt;/a&gt; если задана недопустимая кодовая точка Unicode (например, &amp;laquo;RangeError: NaN не является допустимой кодовой точкой&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="53ae6707d219d3eb2e8246151c524b14aa57a31b" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; containing WebAssembly binary code to be validated.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;Набран массив&lt;/a&gt; или &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; содержащего WebAssembly двоичного кода для проверки.</target>
        </trans-unit>
        <trans-unit id="704e58931dfc471fd6ce93bd72109c41236ee60c" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; containing the binary code of the .wasm module you want to compile.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;Набран массив&lt;/a&gt; или &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; , содержащий двоичный код модуля .wasm вы хотите скомпилировать.</target>
        </trans-unit>
        <trans-unit id="6746a446d99dcd971da402aa449b7f521efaf633" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://en.wikipedia.org/wiki/Code_point&quot;&gt;code point&lt;/a&gt; is a value in the Unicode codespace; that is, the range of integers from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;0x10FFFF&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_point&quot;&gt;Код точка&lt;/a&gt; представляет собой значение в codespace Unicode; то есть диапазон целых чисел от &lt;code&gt;0&lt;/code&gt; до &lt;code&gt;0x10FFFF&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c620066ef288b8c2b029d6d5b17169fa27669a7" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object or a promise that will fulfill with one, representing the underlying source of a .wasm module you want to stream and compile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397c029cb2a3025103ce337b7fc71760d6f8bf72" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object or a promise that will fulfill with one, representing the underlying source of a .wasm module you want to stream, compile, and instantiate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10cb79a2cbadc25bfefdbb505afc29c140b4ae64" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;regular expression&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e95c4f3869393c21907f1480f0937f39e717bba" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators#Unary_plus&quot;&gt;(unary) plus sign&lt;/a&gt; can sometimes be used as a shorthand for &lt;code&gt;valueOf&lt;/code&gt;, e.g. in &lt;code&gt;+new Number()&lt;/code&gt;. Also see &lt;a href=&quot;#Using_unary_plus&quot;&gt;Using unary plus&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13aa2d6e618fc96b9efaf90a5c4d02e85b883b9d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; containing the binary code of the .wasm module you want to compile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1138ff85d38349b299a8cdd0d28fb428997c90f" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; containing WebAssembly binary code to be validated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4241d9ed00504596a1dbe6e7ba4330e782dec06" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; containing the binary code of the .wasm module you want to compile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fd0b75aaad9386e86ed8d4602a208acead2548" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;rangeerror&quot;&gt;&lt;code&gt;RangeError&lt;/code&gt;&lt;/a&gt; is thrown if the &lt;code&gt;length&lt;/code&gt; is larger than &lt;a href=&quot;number/max_safe_integer&quot;&gt;&lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt;&lt;/a&gt; (&amp;gt;= 2 ** 53) or negative.</source>
          <target state="translated">Ошибка &lt;a href=&quot;rangeerror&quot;&gt; &lt;code&gt;RangeError&lt;/code&gt; выдается,&lt;/a&gt; если &lt;code&gt;length&lt;/code&gt; больше &lt;a href=&quot;number/max_safe_integer&quot;&gt; &lt;code&gt;Number.MAX_SAFE_INTEGER&lt;/code&gt; &lt;/a&gt; (&amp;gt; = 2 ** 53) или отрицательная.</target>
        </trans-unit>
        <trans-unit id="7205bac44021b8d708776412ea558802ff4460d6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive is not allowed at the top of such functions per the ECMAScript specification.</source>
          <target state="translated">В соответствии со спецификацией ECMAScript директива &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; не допускается в начале таких функций.</target>
        </trans-unit>
        <trans-unit id="04db161867abd892d1879650dd50a42a3241956f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&quot;use strict&quot;&lt;/code&gt; directive is written at the top of a function that has one of the following parameters:</source>
          <target state="translated">&lt;code&gt;&quot;use strict&quot;&lt;/code&gt; директива написана в верхней части функции , которая имеет один из следующих параметров:</target>
        </trans-unit>
        <trans-unit id="36fa3b6ca02d560835a571b61d60a0be9ae0ff72" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../statements/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../operators/yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; statement is called outside of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;function&lt;/a&gt;. Maybe there are missing curly brackets somewhere? The &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;yield&lt;/code&gt; statements must be in a function, because they end (or pause and resume) function execution and specify a value to be returned to the function caller.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../statements/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../operators/yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; утверждение называется за пределами &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;функции&lt;/a&gt; . Может, где-то отсутствуют фигурные скобки? Операторы &lt;code&gt;return&lt;/code&gt; и &lt;code&gt;yield&lt;/code&gt; должны быть в функции, потому что они завершают (или приостанавливают и возобновляют) выполнение функции и определяют значение, которое должно быть возвращено вызывающей функции.</target>
        </trans-unit>
        <trans-unit id="3bc1f12cc4610e6a640a36899a61f966c9beb9e3" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;../statements/return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../operators/yield&quot;&gt;yield&lt;/a&gt;&lt;/code&gt; statement is called outside of a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Functions&quot;&gt;function&lt;/a&gt;. Maybe there are missing curly brackets somewhere? The &lt;code&gt;return&lt;/code&gt; and &lt;code&gt;yield&lt;/code&gt; statements must be in a function, because they end (or pause and resume) function execution and specify a value to be returned to the function caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a5c49fef452a6040ad34681ccecffc50d13bda" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/code&gt; which will be resolved with the value returned by the async function, or rejected with an uncaught exception thrown from within the async function.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/code&gt; , которое будет решено со значением возвращаемого функцией асинхронной или отклонено с неперехваченным исключением , брошенным из функции асинхронной.</target>
        </trans-unit>
        <trans-unit id="ee2f9d9e32a76553f9da405c9dff57319320c2cf" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/code&gt; is a proxy for a value not necessarily known when the promise is created. It allows you to associate handlers with an asynchronous action's eventual success value or failure reason. This lets asynchronous methods return values like synchronous methods: instead of immediately returning the final value, the asynchronous method returns a &lt;em&gt;promise&lt;/em&gt; to supply the value at some point in the future.</source>
          <target state="translated">&lt;code&gt;&lt;strong&gt;Promise&lt;/strong&gt;&lt;/code&gt; является прокси для значения не обязательно известно , когда создается обещание. Он позволяет связать обработчики с возможным значением успеха или причиной сбоя асинхронного действия. Это позволяет асинхронным методам возвращать значения, как синхронные методы: вместо того, чтобы немедленно возвращать окончательное значение, асинхронный метод возвращает &lt;em&gt;обещание&lt;/em&gt; предоставить значение в какой-то момент в будущем.</target>
        </trans-unit>
        <trans-unit id="aadcbd699b9905adade866c2e59b1be431005843" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;GlobalDescriptor&lt;/code&gt; dictionary object, which contains two properties:</source>
          <target state="translated">&lt;code&gt;GlobalDescriptor&lt;/code&gt; объект словаря, который содержит два свойства:</target>
        </trans-unit>
        <trans-unit id="302d0f2581a34faed1323cc92dd5949b191e5b9b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; does not contain any keys by default. It only contains what is explicitly put into it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5200ff483f97e4666f3e1ef542a97c6bbf3a87d7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;iterable&lt;/a&gt; and can thus be directly iterated, whereas iterating over an &lt;code&gt;Object&lt;/code&gt; requires obtaining its keys in some fashion and iterating over them.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; представляет собой &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;итерацию&lt;/a&gt; и , таким образом , может быть непосредственно итеративно, в то время как итерации по &lt;code&gt;Object&lt;/code&gt; требуется получить свои ключи каким - либо образом и итерации над ними.</target>
        </trans-unit>
        <trans-unit id="01c9f5f8b7410341962fa7d9e7bf78f9999cb745" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/iterable&quot;&gt;iterable&lt;/a&gt;, so it can be directly iterated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb049fe93ca3b653d2fbae6338cee77ded205c54" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; may perform better in scenarios involving frequent addition and removal of key pairs.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; может работать лучше в сценариях , включающих частое добавление и удаление ключевых пар.</target>
        </trans-unit>
        <trans-unit id="dc73c071c929148729b9420be3041ca64eac8cf7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; object iterates its elements in insertion order &amp;mdash; a &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; loop returns an array of &lt;code&gt;[&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;]&lt;/code&gt; for each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3560b3d3847df14e26f9c3ea9810d33ac4d21c46" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt; object iterates its elements in insertion order &amp;mdash; a &lt;a href=&quot;../statements/for...of&quot;&gt;&lt;code&gt;for...of&lt;/code&gt;&lt;/a&gt; loop returns an array of &lt;code&gt;[key, value]&lt;/code&gt; for each iteration.</source>
          <target state="translated">Объект &lt;code&gt;Map&lt;/code&gt; выполняет итерацию своих элементов в порядке вставки - цикл &lt;a href=&quot;../statements/for...of&quot;&gt; &lt;code&gt;for...of&lt;/code&gt; &lt;/a&gt; возвращает массив &lt;code&gt;[key, value]&lt;/code&gt; для каждой итерации.</target>
        </trans-unit>
        <trans-unit id="a7ba904943bf8419dbb280f39ddcf9c62fce0411" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Map&lt;/code&gt;'s keys can be any value (including functions, objects, or any primitive).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac1d45331418e486ac804b5e04469781abfba9c" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; is in one of these states:</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; находится в одном из этих состояний:</target>
        </trans-unit>
        <trans-unit id="2b185f8ebf5ef7f3ba82db7735ad53af609f886d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; object is created using the &lt;code&gt;new &lt;/code&gt;keyword and its constructor. This constructor takes as its argument a function, called the &quot;executor function&quot;. This function should take two functions as parameters. The first of these functions (&lt;code&gt;resolve&lt;/code&gt;) is called when the asynchronous task completes successfully and returns the results of the task as a value. The second (&lt;code&gt;reject&lt;/code&gt;) is called when the task fails, and returns the reason for failure, which is typically an error object.</source>
          <target state="translated">Объект &lt;code&gt;Promise&lt;/code&gt; создается с использованием ключевого слова &lt;code&gt;new &lt;/code&gt; и его конструктора. Этот конструктор принимает в качестве аргумента функцию, называемую &amp;laquo;функцией-исполнителем&amp;raquo;. Эта функция должна принимать в качестве параметров две функции. Первая из этих функций ( &lt;code&gt;resolve&lt;/code&gt; ) вызывается при успешном завершении асинхронной задачи и возвращает результаты задачи в виде значения. Второй ( &lt;code&gt;reject&lt;/code&gt; ) вызывается при сбое задачи и возвращает причину сбоя, которая обычно является объектом ошибки.</target>
        </trans-unit>
        <trans-unit id="c6964b5866f2007ccb24c5905bc563e99dde8fb9" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; that resolves to a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object representing the compiled module.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; , что разрешается в &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; объект , представляющий скомпилированный модуль.</target>
        </trans-unit>
        <trans-unit id="4de9b416e1fbc7481a27bb8429d6397a2254b14e" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; that resolves to a &lt;code&gt;ResultObject&lt;/code&gt; which contains two fields:</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; , что разрешается в &lt;code&gt;ResultObject&lt;/code&gt; , который содержит два поля:</target>
        </trans-unit>
        <trans-unit id="00d05183f590cb4b14e769763ee8c647e28e7d60" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Promise&lt;/code&gt; that resolves to an &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;code&gt;Promise&lt;/code&gt; , что разрешается в &lt;a href=&quot;instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt; объекта.</target>
        </trans-unit>
        <trans-unit id="58bed01a455c63c2bacc8d30de36ebeceba3b281" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Proxy&lt;/code&gt; is created with two parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6776eb1ba4361a0a1c3320bfcfd51905b52e43" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RangeError&lt;/code&gt; is thrown when trying to pass a value as an argument to a function that does not allow a range that includes the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfb25bd057c28192df1cb63abbb26d409cf50fa" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;RangeError&lt;/code&gt; is thrown when trying to pass a value as an argument to a function that does not allow a range that includes the value. This can be encountered when passing a value that is not one of the allowed string values to &lt;a href=&quot;string/normalize&quot;&gt;&lt;code&gt;String.prototype.normalize()&lt;/code&gt;&lt;/a&gt;, or when attempting to create an array of an illegal length with the &lt;a href=&quot;array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; constructor, or when passing bad values to the numeric methods &lt;a href=&quot;number/toexponential&quot;&gt;&lt;code&gt;Number.toExponential()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;number/tofixed&quot;&gt;&lt;code&gt;Number.toFixed()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;number/toprecision&quot;&gt;&lt;code&gt;Number.toPrecision()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Ошибка &lt;code&gt;RangeError&lt;/code&gt; возникает при попытке передать значение в качестве аргумента функции, которая не позволяет диапазон, включающий значение. С этим можно столкнуться при передаче значения, которое не является одним из допустимых строковых значений в &lt;a href=&quot;string/normalize&quot;&gt; &lt;code&gt;String.prototype.normalize()&lt;/code&gt; &lt;/a&gt; , или при попытке создать массив недопустимой длины с помощью конструктора &lt;a href=&quot;array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; , или при передаче неверных значений в числовой методы &lt;a href=&quot;number/toexponential&quot;&gt; &lt;code&gt;Number.toExponential()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;number/tofixed&quot;&gt; &lt;code&gt;Number.toFixed()&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;number/toprecision&quot;&gt; &lt;code&gt;Number.toPrecision()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed2befd856c4255cc5994cf904901277fc2776d4" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;ReferenceError&lt;/code&gt; is thrown when trying to dereference a variable that has not been declared.</source>
          <target state="translated">Ошибка &lt;code&gt;ReferenceError&lt;/code&gt; возникает при попытке разыменовать переменную, которая не была объявлена.</target>
        </trans-unit>
        <trans-unit id="be2a7b3a6debeb9c96cf1d10b1a0a4c542b3fa7b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt; object can always be converted to its primitive counterpart with the &lt;a href=&quot;string/valueof&quot;&gt;&lt;code&gt;valueOf()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Объект &lt;code&gt;String&lt;/code&gt; всегда можно преобразовать в его примитивный аналог с помощью метода &lt;a href=&quot;string/valueof&quot;&gt; &lt;code&gt;valueOf()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f87d17361da9b7795965121199c3f88b970071f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;SyntaxError&lt;/code&gt; is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code.</source>
          <target state="translated">Ошибка &lt;code&gt;SyntaxError&lt;/code&gt; возникает, когда механизм JavaScript обнаруживает токены или порядок токенов, который не соответствует синтаксису языка при синтаксическом анализе кода.</target>
        </trans-unit>
        <trans-unit id="ce36c6d1ef6544f01f6fb69c452e505dbbd0e818" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TypeError&lt;/code&gt; is thrown when an operand or argument passed to a function is incompatible with the type expected by that operator or function.</source>
          <target state="translated">Ошибка &lt;code&gt;TypeError&lt;/code&gt; возникает, когда операнд или аргумент, переданный функции, несовместим с типом, ожидаемым этим оператором или функцией.</target>
        </trans-unit>
        <trans-unit id="8c46622e068bd97ff39ba7c2f9991052ca2402ec" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;TypeError&lt;/code&gt; may be thrown when:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6903451e264fc3512b6bd0a4d441040a526ae25d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;URIError&lt;/code&gt; is thrown when the global URI handling functions are passed a malformed URI.</source>
          <target state="translated">Ошибка &lt;code&gt;URIError&lt;/code&gt; возникает, когда глобальным функциям обработки URI передается искаженный URI.</target>
        </trans-unit>
        <trans-unit id="98fc25d38ba5089b4c8b88bc8b8397aaa28c8500" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebAssembly.Global&lt;/code&gt; object represents a global variable instance, accessible from both JavaScript and importable/exportable across one or more &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; instances. This allows dynamic linking of multiple modules.</source>
          <target state="translated">Объект &lt;code&gt;WebAssembly.Global&lt;/code&gt; представляет собой экземпляр глобальной переменной, доступный как из JavaScript, так и импортируемый / экспортируемый через один или несколько экземпляров &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; . Это позволяет динамически связывать несколько модулей.</target>
        </trans-unit>
        <trans-unit id="baea619bf22cc53ed4d9acabfd2cc6e2bbc53cc6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;WebAssembly.Instance&lt;/code&gt; object is a stateful, executable instance of a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;Instance&lt;/code&gt; objects contain all the &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/WebAssembly/Exported_functions&quot;&gt;Exported WebAssembly functions&lt;/a&gt; that allow calling into WebAssembly code from JavaScript.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
