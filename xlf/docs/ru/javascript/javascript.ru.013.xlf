<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="javascript">
    <body>
      <group id="javascript">
        <trans-unit id="7cad76dfde920321524d3fa684e08460364eae69" translate="yes" xml:space="preserve">
          <source>The argument of &lt;a href=&quot;../global_objects/array/sort&quot;&gt;&lt;code&gt;Array.prototype.sort()&lt;/code&gt;&lt;/a&gt; is expected to be either &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or a function which compares its operands.</source>
          <target state="translated">Предполагается, что аргумент &lt;a href=&quot;../global_objects/array/sort&quot;&gt; &lt;code&gt;Array.prototype.sort()&lt;/code&gt; &lt;/a&gt; либо &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; либо функция, сравнивающая его операнды.</target>
        </trans-unit>
        <trans-unit id="6f2610db3899781e47b828d98a30ce2343116de0" translate="yes" xml:space="preserve">
          <source>The argument of the &lt;code&gt;eval()&lt;/code&gt; function is a string. If the string represents an expression, &lt;code&gt;eval()&lt;/code&gt; evaluates the expression. If the argument represents one or more JavaScript statements, &lt;code&gt;eval()&lt;/code&gt; evaluates the statements. Do not call &lt;code&gt;eval()&lt;/code&gt; to evaluate an arithmetic expression; JavaScript evaluates arithmetic expressions automatically.</source>
          <target state="translated">Аргументом функции &lt;code&gt;eval()&lt;/code&gt; является строка. Если строка представляет собой выражение, &lt;code&gt;eval()&lt;/code&gt; оценивает выражение. Если аргумент представляет один или несколько операторов JavaScript, &lt;code&gt;eval()&lt;/code&gt; оценивает эти операторы. Не вызывайте &lt;code&gt;eval()&lt;/code&gt; для вычисления арифметического выражения; JavaScript автоматически вычисляет арифметические выражения.</target>
        </trans-unit>
        <trans-unit id="86421c1a1ea2fb7e300781ab95602ea6e5e9b867" translate="yes" xml:space="preserve">
          <source>The argument passed to this function will be converted to &lt;code&gt;number&lt;/code&gt; type implicitly.</source>
          <target state="translated">Аргумент, переданный этой функции, будет неявно преобразован в &lt;code&gt;number&lt;/code&gt; тип.</target>
        </trans-unit>
        <trans-unit id="2642b281b11a45379b1899c8bfdfa20fded62cac" translate="yes" xml:space="preserve">
          <source>The argument passed to this method will be converted to number type implicitly.</source>
          <target state="translated">Аргумент,переданный этому методу,будет неявно приведен к числовому типу.</target>
        </trans-unit>
        <trans-unit id="ad8b914095fbf6c1921676be0fbe503c75e3bc36" translate="yes" xml:space="preserve">
          <source>The argument to be checked.</source>
          <target state="translated">Аргумент,который нужно проверить.</target>
        </trans-unit>
        <trans-unit id="568b31681a37df3f00fb42424598962a14f30d09" translate="yes" xml:space="preserve">
          <source>The arguments &quot;&lt;code&gt;a&lt;/code&gt;&quot; and &quot;&lt;code&gt;b&lt;/code&gt;&quot; are formal argument names that are used in the function body, &quot;&lt;code&gt;return a + b&lt;/code&gt;&quot;.</source>
          <target state="translated">Аргументы &amp;laquo; &lt;code&gt;a&lt;/code&gt; &amp;raquo; и &amp;laquo; &lt;code&gt;b&lt;/code&gt; &amp;raquo; - это формальные имена аргументов, которые используются в теле функции &amp;laquo; &lt;code&gt;return a + b&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="d01f440c1503d60bc2f15078825ee9b7b4dd13f7" translate="yes" xml:space="preserve">
          <source>The arguments of &lt;code&gt;substring()&lt;/code&gt; represent the starting and ending indexes, while the arguments of &lt;code&gt;substr()&lt;/code&gt; represent the starting index and the length of characters to include in the returned string.</source>
          <target state="translated">Аргументы &lt;code&gt;substring()&lt;/code&gt; представляют собой начальный и конечный индексы, а аргументы &lt;code&gt;substr()&lt;/code&gt; представляют начальный индекс и длину символов, которые необходимо включить в возвращаемую строку.</target>
        </trans-unit>
        <trans-unit id="96e62f55bfabf27002f18dc6cc9411b91c3d89da" translate="yes" xml:space="preserve">
          <source>The arguments of &lt;code&gt;substring()&lt;/code&gt; represent the starting and ending indexes, while the arguments of &lt;code&gt;substr()&lt;/code&gt; represent the starting index and the number of characters to include in the returned string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c05bc8168ca994804516a468e85cd019d331fe5" translate="yes" xml:space="preserve">
          <source>The arguments to the function are as follows:</source>
          <target state="translated">Аргументы к функции следующие:</target>
        </trans-unit>
        <trans-unit id="ce50c2eb1731e30f651e83e65a160b7d9cb292ed" translate="yes" xml:space="preserve">
          <source>The arguments.length property provides the number of arguments actually passed to a function. This can be more or less than the defined parameter's count (see &lt;a href=&quot;../../global_objects/function/length&quot;&gt;&lt;code&gt;Function.length&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Свойство arguments.length предоставляет количество аргументов, фактически переданных функции. Это может быть больше или меньше заданного количества параметров (см. &lt;a href=&quot;../../global_objects/function/length&quot;&gt; &lt;code&gt;Function.length&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d6ace2dacc3116721ac085e0aa2ff5a3b5910fd8" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;every&lt;/code&gt; was called upon.</source>
          <target state="translated">Массив &lt;code&gt;every&lt;/code&gt; был призван.</target>
        </trans-unit>
        <trans-unit id="b0a5990c1febd7c0456b1d95c2919dd12ea41ed9" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;filter&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массивный &lt;code&gt;filter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="739231e797b44686b6cb1d90214cc6c87045d6c4" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;find&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван &lt;code&gt;find&lt;/code&gt; массива .</target>
        </trans-unit>
        <trans-unit id="cca6c09af2617cd7edc0dae16991867e9b40c49e" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;findIndex()&lt;/code&gt; was called upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd246a8490071c05ff637a363cae6c8e36958f15" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;findIndex&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массив &lt;code&gt;findIndex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab72b62dc5410c1069e9b77f96e6c04c204b365d" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;forEach()&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массив &lt;code&gt;forEach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3186a1a627eaeb3ebe86c8859078581c3a2241f" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;map&lt;/code&gt; was called upon.</source>
          <target state="translated">Была запрошена &lt;code&gt;map&lt;/code&gt; массива .</target>
        </trans-unit>
        <trans-unit id="d8556e513816f3230a6e95e0d7cca63a630bf152" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;reduce()&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массив &lt;code&gt;reduce()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4bc918402b106b22d0715b5db9cbc982610a958" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;reduce&lt;/code&gt; was called upon.</source>
          <target state="translated">Вызвано &lt;code&gt;reduce&lt;/code&gt; массива .</target>
        </trans-unit>
        <trans-unit id="f059576f65fd507515e526c54e2416467c8d0136" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;reduceRight()&lt;/code&gt; was called upon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ab5cf3467b3f84dd374afb2b77922d7f6dba9d" translate="yes" xml:space="preserve">
          <source>The array &lt;code&gt;some()&lt;/code&gt; was called upon.</source>
          <target state="translated">Был вызван массив &lt;code&gt;some()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dad5186f2394322d0d048218bd4971959e5c71d" translate="yes" xml:space="preserve">
          <source>The array &lt;strong&gt;iterator&lt;/strong&gt; function, which is the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">Функция &lt;strong&gt;итератора&lt;/strong&gt; массива , которая по умолчанию является функцией &lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="baf0ca63b09065862fb6a8e2d7fe2f07e5b3e61c" translate="yes" xml:space="preserve">
          <source>The array comprehensions syntax is non-standard and removed starting with Firefox 58. For future-facing usages, consider using &lt;a href=&quot;../global_objects/array/map&quot;&gt;&lt;code&gt;Array.prototype.map&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../global_objects/array/filter&quot;&gt;&lt;code&gt;Array.prototype.filter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../functions/arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, and &lt;a href=&quot;spread_syntax&quot;&gt;spread syntax&lt;/a&gt;.</source>
          <target state="translated">Синтаксис &lt;a href=&quot;../global_objects/array/map&quot;&gt; &lt;code&gt;Array.prototype.map&lt;/code&gt; &lt;/a&gt; массива нестандартен и удален, начиная с Firefox 58. Для будущего использования рассмотрите возможность использования Array.prototype.map , &lt;a href=&quot;../global_objects/array/filter&quot;&gt; &lt;code&gt;Array.prototype.filter&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../functions/arrow_functions&quot;&gt;стрелочных функций&lt;/a&gt; и &lt;a href=&quot;spread_syntax&quot;&gt;синтаксиса распространения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="574cf9211229dd7de993204fbc819629088b32dd" translate="yes" xml:space="preserve">
          <source>The array from which to copy values. All values from the source array are copied into the target array, unless the length of the source array plus the offset exceeds the length of the target array, in which case an exception is thrown.</source>
          <target state="translated">Массив,из которого копируются значения.Все значения из массива-источника копируются в целевой массив,если только длина массива-источника плюс смещение не превышает длину целевого массива,в этом случае бросается исключение.</target>
        </trans-unit>
        <trans-unit id="063bbc7e8b95dfb2a20635172ab4d25b248ab7b7" translate="yes" xml:space="preserve">
          <source>The array may contain fewer entries than &lt;code&gt;limit&lt;/code&gt; if the end of the string is reached before the limit is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8c296b177d1726314c8984d3dca410ee5bb07d" translate="yes" xml:space="preserve">
          <source>The array that &lt;code&gt;find&lt;/code&gt; was called on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3ea3e65da8f7c4b65c1da2a62251e8c8e8b334" translate="yes" xml:space="preserve">
          <source>The array that &lt;code&gt;forEach()&lt;/code&gt; is being applied to.</source>
          <target state="translated">Массив, к которому применяется &lt;code&gt;forEach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="518a56af12e1c2665fe6da5982dd5a9e68f5bc6c" translate="yes" xml:space="preserve">
          <source>The arrow function expression (=&amp;gt;)</source>
          <target state="translated">Выражение стрелочной функции (=&amp;gt;)</target>
        </trans-unit>
        <trans-unit id="ec1bb50d7c8ede459b02e9171f3e6a273551bc48" translate="yes" xml:space="preserve">
          <source>The asterisk (&lt;code&gt;*&lt;/code&gt;) in the shorthand syntax must be &lt;em&gt;before&lt;/em&gt; the generator property name. (That is, &lt;code&gt;* g(){}&lt;/code&gt; will work, but &lt;code&gt;g *(){}&lt;/code&gt; will not.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59183250f0677ed86b491a4145e3847b2edb3225" translate="yes" xml:space="preserve">
          <source>The attributes for the property being defined or modified.</source>
          <target state="translated">Атрибуты определяемого или изменяемого свойства.</target>
        </trans-unit>
        <trans-unit id="f79e2a6915396dcde507e68f69aa0bcc1ad9f2b1" translate="yes" xml:space="preserve">
          <source>The base 10 logarithm of the given number. If the number is negative, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Базовый десятичный логарифм данного числа. Если число отрицательное, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="19f44bd8b33b87013e304114f54f4d54ffa56d4d" translate="yes" xml:space="preserve">
          <source>The base 2 logarithm of the given number. If the number is negative, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Логарифм по основанию 2 данного числа. Если число отрицательное, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="598eb94105d30e9010db45a9322f00161e0043ff" translate="yes" xml:space="preserve">
          <source>The base number.</source>
          <target state="translated">Базовый номер.</target>
        </trans-unit>
        <trans-unit id="9138e5420219b68a65111246e358ee019b383637" translate="yes" xml:space="preserve">
          <source>The basic assignment operator is equal (&lt;code&gt;=&lt;/code&gt;), which assigns the value of its right operand to its left operand. That is, &lt;code&gt;x = y&lt;/code&gt; assigns the value of &lt;code&gt;y&lt;/code&gt; to &lt;code&gt;x&lt;/code&gt;. The other assignment operators are usually shorthand for standard operations, as shown in the following definitions and examples.</source>
          <target state="translated">Основной оператор присваивания равен ( &lt;code&gt;=&lt;/code&gt; ), который присваивает значение правого операнда левому операнду. То есть, &lt;code&gt;x = y&lt;/code&gt; присваивает значение &lt;code&gt;y&lt;/code&gt; к &lt;code&gt;x&lt;/code&gt; . Другие операторы присваивания обычно являются сокращениями для стандартных операций, как показано в следующих определениях и примерах.</target>
        </trans-unit>
        <trans-unit id="2802dc8e28fd850a2101c483c80ff9abc2cd12d3" translate="yes" xml:space="preserve">
          <source>The behavior of &lt;code&gt;this&lt;/code&gt; in &lt;a href=&quot;../classes&quot;&gt;classes&lt;/a&gt; and functions is similar, since classes are functions under the hood. But there are some differences and caveats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064d3957a78ce04301d5080c985ea903ba7311e2" translate="yes" xml:space="preserve">
          <source>The bitwise AND assignment operator uses the binary representation of both operands, does a bitwise AND operation on them and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Bitwise_AND&quot;&gt;bitwise AND operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор побитового И присваивания использует двоичное представление обоих операндов, выполняет над ними побитовую операцию И и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Bitwise_AND&quot;&gt;Побитовый оператор AND&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="740026f0cc3692131272c79998e3dd563a72e7a0" translate="yes" xml:space="preserve">
          <source>The bitwise AND operation only yields 1, if both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are 1. The truth table for the AND operation is:</source>
          <target state="translated">Побитовая операция И дает только 1, если и &lt;code&gt;a&lt;/code&gt; , и &lt;code&gt;b&lt;/code&gt; равны 1. Таблица истинности для операции AND:</target>
        </trans-unit>
        <trans-unit id="d2f6914a63e091d61d1a3d787cf628bb0b651f2b" translate="yes" xml:space="preserve">
          <source>The bitwise OR assignment operator uses the binary representation of both operands, does a bitwise OR operation on them and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Bitwise_OR&quot;&gt;bitwise OR operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания побитового ИЛИ использует двоичное представление обоих операндов, выполняет над ними побитовую операцию ИЛИ и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Bitwise_OR&quot;&gt;Побитовый оператор ИЛИ&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e346339363a3470fe9e3b74cc1f4d1f99862ea69" translate="yes" xml:space="preserve">
          <source>The bitwise OR operation yields 1, if either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; are 1. The truth table for the OR operation is:</source>
          <target state="translated">Побитовая операция ИЛИ дает 1, если &lt;code&gt;a&lt;/code&gt; или &lt;code&gt;b&lt;/code&gt; равны 1. Таблица истинности для операции ИЛИ:</target>
        </trans-unit>
        <trans-unit id="867db60d4f73f82b6e6d70b093e9389fd0ce51de" translate="yes" xml:space="preserve">
          <source>The bitwise XOR assignment operator uses the binary representation of both operands, does a bitwise XOR operation on them and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Bitwise_XOR&quot;&gt;bitwise XOR operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания побитового XOR использует двоичное представление обоих операндов, выполняет над ними побитовую операцию XOR и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Bitwise_XOR&quot;&gt;Побитовый оператор XOR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f2136d7ce96d0b55459d54b5b473e1285c2c9cfa" translate="yes" xml:space="preserve">
          <source>The bitwise XOR operation yields 1, if &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are different. The truth table for the XOR operation is:</source>
          <target state="translated">Побитовая операция XOR дает 1, если &lt;code&gt;a&lt;/code&gt; и &lt;code&gt;b&lt;/code&gt; различны. Таблица истинности для операции XOR:</target>
        </trans-unit>
        <trans-unit id="9c276658178589b2b39f0ac029ac097652b8b966" translate="yes" xml:space="preserve">
          <source>The bitwise logical operators are often used to create, manipulate, and read sequences of &lt;em&gt;flags&lt;/em&gt;, which are like binary variables. Variables could be used instead of these sequences, but binary flags take much less memory (by a factor of 32).</source>
          <target state="translated">Поразрядные логические операторы часто используются для создания, управления и чтения последовательностей &lt;em&gt;флагов&lt;/em&gt; , которые подобны двоичным переменным. Вместо этих последовательностей можно использовать переменные, но двоичные флаги занимают гораздо меньше памяти (в 32 раза).</target>
        </trans-unit>
        <trans-unit id="48f10e0cc5e63026f354f72ce42f1b440b6efc91" translate="yes" xml:space="preserve">
          <source>The bitwise shift operators take two operands: the first is a quantity to be shifted, and the second specifies the number of bit positions by which the first operand is to be shifted. The direction of the shift operation is controlled by the operator used.</source>
          <target state="translated">Операторы битового сдвига берут два операндов:первый-это количество,которое должно быть сдвинуто,а второй-количество битовых позиций,на которые должен быть сдвинут первый операнд.Направление операции сдвига контролируется используемым оператором.</target>
        </trans-unit>
        <trans-unit id="175ebbaf313d101be1d46496e89b9a5e9de11c06" translate="yes" xml:space="preserve">
          <source>The block statement is often called &lt;strong&gt;compound statement&lt;/strong&gt; in other languages. It allows you to use multiple statements where JavaScript expects only one statement. Combining statements into blocks is a common practice in JavaScript. The opposite behavior is possible using an &lt;a href=&quot;empty&quot;&gt;empty statement&lt;/a&gt;, where you provide no statement, although one is required.</source>
          <target state="translated">Оператор блока часто называется &lt;strong&gt;составным оператором&lt;/strong&gt; на других языках. Это позволяет вам использовать несколько операторов, где JavaScript ожидает только один оператор. Объединение операторов в блоки - обычная практика в JavaScript. Противоположное поведение возможно при использовании &lt;a href=&quot;empty&quot;&gt;пустого оператора&lt;/a&gt; , где вы не предоставляете никакого оператора, хотя он требуется.</target>
        </trans-unit>
        <trans-unit id="7477e48593995ef9da932d151626c02fe6996b24" translate="yes" xml:space="preserve">
          <source>The body of a class is executed in &lt;a href=&quot;strict_mode&quot;&gt;strict mode&lt;/a&gt;, i.e., code written here is subject to stricter syntax for increased performance, some otherwise silent errors will be thrown, and certain keywords are reserved for future versions of ECMAScript.</source>
          <target state="translated">Тело класса выполняется в &lt;a href=&quot;strict_mode&quot;&gt;строгом режиме&lt;/a&gt; , т. Е. Для написанного здесь кода применяется более строгий синтаксис для повышения производительности, в противном случае будут возникать некоторые скрытые ошибки, а некоторые ключевые слова зарезервированы для будущих версий ECMAScript.</target>
        </trans-unit>
        <trans-unit id="4bca9151f6cc6d585fadc8a648f58c470c08c10c" translate="yes" xml:space="preserve">
          <source>The body of a class is the part that is in curly brackets &lt;code&gt;{}&lt;/code&gt;. This is where you define class members, such as methods or constructor.</source>
          <target state="translated">Тело класса - это часть, заключенная в фигурные скобки &lt;code&gt;{}&lt;/code&gt; . Здесь вы определяете члены класса, такие как методы или конструктор.</target>
        </trans-unit>
        <trans-unit id="04f2edc36f17bd99c04c802e883bde6dc207dc91" translate="yes" xml:space="preserve">
          <source>The body of an async function can be thought of as being split by zero or more await expressions. Top-level code, up to and including the first await expression (if there is one), is run synchronously. In this way, an async function without an await expression will run synchronously. If there is an await expression inside the function body, however, the async function will always complete asynchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf69735072234ebcbd50f368e02a05de91363f5" translate="yes" xml:space="preserve">
          <source>The brackets may look correct at first, but note how the &lt;code&gt;||&lt;/code&gt; is outside the brackets. Correct would be putting brackets around the &lt;code&gt;||&lt;/code&gt;:</source>
          <target state="translated">Поначалу скобки могут выглядеть правильно, но обратите внимание на то, как &lt;code&gt;||&lt;/code&gt; находится вне скобок. Правильно было бы заключить в скобки &lt;code&gt;||&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a60abbe84992cc75d4e2129371f5adf4277c742a" translate="yes" xml:space="preserve">
          <source>The byte length of the new &lt;code&gt;ArrayBuffer&lt;/code&gt; object.</source>
          <target state="translated">Длина в &lt;code&gt;ArrayBuffer&lt;/code&gt; нового объекта ArrayBuffer .</target>
        </trans-unit>
        <trans-unit id="c21c288ef2e0b85c532a0aaaba3bb8ac28da056c" translate="yes" xml:space="preserve">
          <source>The call to the &lt;code&gt;reduceRight&lt;/code&gt; callback would look something like this:</source>
          <target state="translated">Вызов обратного вызова &lt;code&gt;reduceRight&lt;/code&gt; будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="dfab73d51d567713a590136fee55b409dd6eb610" translate="yes" xml:space="preserve">
          <source>The call to the reduceRight &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; would look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f6077747036c2b9f4ce1ca2d356c8f847aea6d" translate="yes" xml:space="preserve">
          <source>The call to the reduceRight &lt;code&gt;callback&lt;/code&gt; would look something like this:</source>
          <target state="translated">Вызов &lt;code&gt;callback&lt;/code&gt; reduceRight будет выглядеть примерно так:</target>
        </trans-unit>
        <trans-unit id="61dd799b0f0b49b745fa73d43d16c56e02fb34fc" translate="yes" xml:space="preserve">
          <source>The callback would be invoked four times, with the arguments and return values in each call being as follows:</source>
          <target state="translated">Обратный вызов будет вызван четыре раза,аргументы и возвращаемые значения в каждом вызове будут следующими:</target>
        </trans-unit>
        <trans-unit id="529358e5ae65198672839644ebda30bb0834f61a" translate="yes" xml:space="preserve">
          <source>The capturing groups are numbered according to the order of left parentheses of capturing groups, starting from 1. The matched substring can be recalled from the resulting array's elements &lt;code&gt;[1], ..., [n]&lt;/code&gt; or from the predefined &lt;code&gt;RegExp&lt;/code&gt; object's properties &lt;code&gt;$1, ..., $9&lt;/code&gt;.</source>
          <target state="translated">Группы захвата нумеруются в соответствии с порядком левых скобок групп захвата, начиная с 1. Соответствующая подстрока может быть вызвана из элементов результирующего массива &lt;code&gt;[1], ..., [n]&lt;/code&gt; или из свойств предопределенного объекта &lt;code&gt;RegExp&lt;/code&gt; &lt;code&gt;$1, ..., $9&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7dfdaa9a05626c2e4e94877772b10e055057793" translate="yes" xml:space="preserve">
          <source>The characters to be searched for at the end of &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea4a7d34afcf6a20ca9f68e6a0423534999cad7" translate="yes" xml:space="preserve">
          <source>The characters to be searched for at the end of this string.</source>
          <target state="translated">Символы,которые необходимо искать в конце этой строки.</target>
        </trans-unit>
        <trans-unit id="ea4040c6f18cef23c2d1fe587d1104e905e7f6ab" translate="yes" xml:space="preserve">
          <source>The characters to be searched for at the start of this string.</source>
          <target state="translated">Символы,которые необходимо искать в начале этой строки.</target>
        </trans-unit>
        <trans-unit id="b47a75f9e191f52f785a5588c08b45fa6d1cf028" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to lower case while respecting the current locale. For most languages, this will return the same as &lt;a href=&quot;string/tolowercase&quot;&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Символы в строке преобразуются в нижний регистр с учетом текущей локали. Для большинства языков будет возвращено то же значение, что и &lt;a href=&quot;string/tolowercase&quot;&gt; &lt;code&gt;toLowerCase()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="02a4044b5eff1ebaa85a95b61d51842f7688126c" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to lower case while respecting the current locale. For most languages, this will return the same as &lt;a href=&quot;tolowercase&quot;&gt;&lt;code&gt;toLowerCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Символы в строке преобразуются в нижний регистр с учетом текущей локали. Для большинства языков будет возвращено то же значение, что и &lt;a href=&quot;tolowercase&quot;&gt; &lt;code&gt;toLowerCase()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4daba78aa07385bac2a4e581c1f5b76fe96e7b2c" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to lowercase while respecting the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9149f43ab1f76f894c71b38c8bcdfb7b581734" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to upper case while respecting the current locale. For most languages, this will return the same as &lt;a href=&quot;string/touppercase&quot;&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Символы в строке преобразуются в верхний регистр с учетом текущей локали. Для большинства языков будет возвращено то же значение, что и &lt;a href=&quot;string/touppercase&quot;&gt; &lt;code&gt;toUpperCase()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efa62672806348552a404536b413669fee7e627a" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to upper case while respecting the current locale. For most languages, this will return the same as &lt;a href=&quot;touppercase&quot;&gt;&lt;code&gt;toUpperCase()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Символы в строке преобразуются в верхний регистр с учетом текущей локали. Для большинства языков будет возвращено то же значение, что и &lt;a href=&quot;touppercase&quot;&gt; &lt;code&gt;toUpperCase()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3a9b3fe31d44429f68aa4abf79c83a3e60a997b" translate="yes" xml:space="preserve">
          <source>The characters within a string are converted to uppercase while respecting the current locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0427b1e20dba4046e5ffec03d2d0954bc7d3df70" translate="yes" xml:space="preserve">
          <source>The class body of a class declaration is executed in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;. The &lt;code&gt;constructor&lt;/code&gt; method is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c1ed43d7a20e3b448e88650183e95808a68a1b7" translate="yes" xml:space="preserve">
          <source>The class body of a class declaration is executed in &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;. The constructor property is optional.</source>
          <target state="translated">Тело класса объявления класса выполняется в &lt;a href=&quot;../strict_mode&quot;&gt;строгом режиме&lt;/a&gt; . Свойство конструктора не является обязательным.</target>
        </trans-unit>
        <trans-unit id="04bd176ecf0b4c0d2e361fed92486d9bb741b211" translate="yes" xml:space="preserve">
          <source>The code above may seem inefficiently slow because of the triple nested function, but let's analyse the benefits of the above efficient method:</source>
          <target state="translated">Вышеприведенный код может показаться неэффективно медленным из-за тройной вложенной функции,но давайте проанализируем преимущества вышеописанного эффективного метода:</target>
        </trans-unit>
        <trans-unit id="7d153594cf7d720f098751dcce41c33e4bdfab27" translate="yes" xml:space="preserve">
          <source>The code above may seem inefficiently slow because of the triple nested function, but let's analyze the benefits of the above efficient method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b06f1e2d79ed3ea44e8951423a811c3379ede8" translate="yes" xml:space="preserve">
          <source>The code above serves as an example for substring operations. If you need to replace substrings, most of the time you will want to use &lt;a href=&quot;replace&quot;&gt;&lt;code&gt;String.prototype.replace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Приведенный выше код служит примером операций с подстрокой. Если вам нужно заменить подстроки, большую часть времени вы захотите использовать &lt;a href=&quot;replace&quot;&gt; &lt;code&gt;String.prototype.replace()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29efbb3fdcfaf150956a6e65df3297511df904b2" translate="yes" xml:space="preserve">
          <source>The code below shows how to import from a secondary module to assist in processing an AJAX JSON request.</source>
          <target state="translated">Код ниже показывает,как импортировать из вторичного модуля для помощи в обработке AJAX JSON запроса.</target>
        </trans-unit>
        <trans-unit id="e11f2707655ac5e8f02c2112c63f9540f1a12903" translate="yes" xml:space="preserve">
          <source>The code does not use &lt;code&gt;eval()&lt;/code&gt;, making it orders of magnitude faster than otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77babd566d6e7c423057c0cbb7be3bc8ea0af041" translate="yes" xml:space="preserve">
          <source>The code point for &lt;code&gt;&quot;n&quot;&lt;/code&gt; (U+006E) followed by the code point for the combining tilde (U+0303).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84b0cd589932cf33c346a00c77f36d47f4be22a" translate="yes" xml:space="preserve">
          <source>The comma operator allows multiple expressions to be evaluated in a single statement and returns the result of the last expression.</source>
          <target state="translated">Оператор запятая позволяет вычислить несколько выражений в одном операторе и возвращает результат последнего выражения.</target>
        </trans-unit>
        <trans-unit id="1250480c705913bbdc22c071498ae62f28af5d1a" translate="yes" xml:space="preserve">
          <source>The comma operator is fully different from the comma within arrays, objects, and function arguments and parameters.</source>
          <target state="translated">Оператор запятая полностью отличается от запятой в массивах,объектах,аргументах и параметрах функции.</target>
        </trans-unit>
        <trans-unit id="7fab18439a7793e4c9d265e0a1eb2b9a108df7ab" translate="yes" xml:space="preserve">
          <source>The completion value of evaluating the given code. If the completion value is empty, &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Значение завершения оценки данного кода. Если значение завершения пусто, возвращается &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ed9f5c4fd781b14194aff34ea8d3f8fbfa23a0d9" translate="yes" xml:space="preserve">
          <source>The concept of compose function is simple it combines n functions. It&amp;rsquo;s a flowing right-to-left, calling each function with the output of the last one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0621346efbf3c869cb91624fd5861f953bb9a30a" translate="yes" xml:space="preserve">
          <source>The conditional operator returns one of two values based on the logical value of the condition.</source>
          <target state="translated">Условный оператор возвращает одно из двух значений,основанных на логическом значении условия.</target>
        </trans-unit>
        <trans-unit id="fba8e0ecfce285b4bc6ff7ab720824ece9546a9f" translate="yes" xml:space="preserve">
          <source>The console will warn &quot;unreachable code after return statement&quot;.</source>
          <target state="translated">Консоль предупредит &quot;недоступный код после оператора возврата&quot;.</target>
        </trans-unit>
        <trans-unit id="6e123d397cc379ed5365e7a4deebd0d4e9c23f0d" translate="yes" xml:space="preserve">
          <source>The constant's name, which can be any legal &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/identifier&quot;&gt;identifier&lt;/a&gt;.</source>
          <target state="translated">Имя константы, которое может быть любым допустимым &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/identifier&quot;&gt;идентификатором&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5246174ff64cef2f713e1d5ea251a47b175d8301" translate="yes" xml:space="preserve">
          <source>The constant's value. This can be any legal &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt;, including a function expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da19f405b29faa24595e62c88e9d6fc4e1d0aa7" translate="yes" xml:space="preserve">
          <source>The constant's value; this can be any legal &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;expression&lt;/a&gt;, including a function expression.</source>
          <target state="translated">Значение константы; это может быть любое допустимое &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Expressions_and_Operators#Expressions&quot;&gt;выражение&lt;/a&gt; , включая выражение функции.</target>
        </trans-unit>
        <trans-unit id="83547aca79f778b81fe2242fe412640398fb2951" translate="yes" xml:space="preserve">
          <source>The constructor function &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; is called with the specified arguments, and with &lt;code&gt;&lt;a href=&quot;this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; bound to the newly created object. &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; is equivalent to &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;()&lt;/code&gt;, i.e. if no argument list is specified, &lt;code&gt;&lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; is called without arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6c865a9918ebbc467c3613c73d166c77549f56" translate="yes" xml:space="preserve">
          <source>The constructor function &lt;em&gt;&lt;code&gt;Foo&lt;/code&gt;&lt;/em&gt; is called with the specified arguments, and with &lt;code&gt;&lt;a href=&quot;this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; bound to the newly created object. &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; is equivalent to &lt;code&gt;new &lt;/code&gt;&lt;em&gt;&lt;code&gt;Foo&lt;/code&gt;&lt;/em&gt;&lt;code&gt;()&lt;/code&gt;, i.e. if no argument list is specified, &lt;em&gt;&lt;code&gt;Foo&lt;/code&gt;&lt;/em&gt; is called without arguments.</source>
          <target state="translated">Функция конструктора &lt;em&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;/em&gt; вызывается с указанными аргументами, и с &lt;code&gt;&lt;a href=&quot;this&quot;&gt;this&lt;/a&gt;&lt;/code&gt; связаны с вновь созданным объектом. &lt;code&gt;new &lt;em&gt;Foo&lt;/em&gt;&lt;/code&gt; эквивалентен &lt;code&gt;new &lt;/code&gt; &lt;em&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;/em&gt; &lt;code&gt;()&lt;/code&gt; , т.е. если список аргументов не указан, &lt;em&gt; &lt;code&gt;Foo&lt;/code&gt; &lt;/em&gt; вызывается без аргументов.</target>
        </trans-unit>
        <trans-unit id="99a33382d6cbb2aba7d55f16f795e9406be2db23" translate="yes" xml:space="preserve">
          <source>The constructor function is used to create derived objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a169aedbb3ba1ad7d6dfd37dd0fae85249dc777" translate="yes" xml:space="preserve">
          <source>The constructor function that is used to create derived objects.</source>
          <target state="translated">Функция конструктора,которая используется для создания производных объектов.</target>
        </trans-unit>
        <trans-unit id="a0823006c92a5341fb65cd323ee457691765bce0" translate="yes" xml:space="preserve">
          <source>The constructor function used to create derived objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0613ad00b70286ab1934d869ea67a250ca17b390" translate="yes" xml:space="preserve">
          <source>The constructor of the regular expression object&amp;mdash;for example, &lt;code&gt;new RegExp('ab+c')&lt;/code&gt;&amp;mdash;results in runtime compilation of the regular expression. Use the constructor function when you know the regular expression pattern will be changing, or you don't know the pattern and obtain it from another source, such as user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982b985b74049b6033e81bffd9464c5eb31a7a91" translate="yes" xml:space="preserve">
          <source>The constructor of the regular expression object, for example, &lt;code&gt;new RegExp('ab+c')&lt;/code&gt;, provides runtime compilation of the regular expression. Use the constructor function when you know the regular expression pattern will be changing, or you don't know the pattern and are getting it from another source, such as user input.</source>
          <target state="translated">Конструктор объекта регулярного выражения, например &lt;code&gt;new RegExp('ab+c')&lt;/code&gt; , обеспечивает компиляцию регулярного выражения во время выполнения. Используйте функцию-конструктор, если вы знаете, что шаблон регулярного выражения будет изменяться, или если вы не знаете шаблон и получаете его из другого источника, например из пользовательского ввода.</target>
        </trans-unit>
        <trans-unit id="416fbf4bb9cd00c0ca84cc3b37fc7b52c1bbf60f" translate="yes" xml:space="preserve">
          <source>The constructor that was originally called, &lt;code&gt;p&lt;/code&gt; above.</source>
          <target state="translated">Конструктор, который был первоначально вызван, &lt;code&gt;p&lt;/code&gt; Выше.</target>
        </trans-unit>
        <trans-unit id="93c6cb8f42276b96072df277b561d67f9ecc48f6" translate="yes" xml:space="preserve">
          <source>The constructor whose prototype should be used. See also the &lt;a href=&quot;../../operators/new.target&quot;&gt;&lt;code&gt;new.target&lt;/code&gt;&lt;/a&gt; operator. If &lt;code&gt;&lt;var&gt;newTarget&lt;/var&gt;&lt;/code&gt; is not present, its value defaults to &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0c8a18e529cda55e6b202394037a0f7a759263" translate="yes" xml:space="preserve">
          <source>The constructor whose prototype should be used. See also the &lt;code&gt;&lt;a href=&quot;../../operators/new.target&quot;&gt;new.target&lt;/a&gt;&lt;/code&gt; operator. If &lt;code&gt;newTarget&lt;/code&gt; is not present, it is &lt;code&gt;target&lt;/code&gt;.</source>
          <target state="translated">Конструктор, прототип которого следует использовать. См. Также оператор &lt;code&gt;&lt;a href=&quot;../../operators/new.target&quot;&gt;new.target&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;newTarget&lt;/code&gt; отсутствует, это &lt;code&gt;target&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ff09419e5e10e3cf52a3dbe62e4abf0918d5d1f" translate="yes" xml:space="preserve">
          <source>The corollary is that you need not do anything special to create a bound function to be called plainly, even if you would rather require the bound function to only be called using &lt;a href=&quot;../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013d2f56a045b9e0a7a2b73d84c720cef68dd7ca" translate="yes" xml:space="preserve">
          <source>The correct function name is &lt;code&gt;getElementByI&lt;strong&gt;d&lt;/strong&gt;&lt;/code&gt;:</source>
          <target state="translated">Правильное имя функции - &lt;code&gt;getElementByI&lt;strong&gt;d&lt;/strong&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="23fb87e0180430148ebbc4575f3db9ebc6b874bb" translate="yes" xml:space="preserve">
          <source>The correct import usage (&lt;code&gt;App.js&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4b0c7f032e4cefae8338cbd162866b17419003" translate="yes" xml:space="preserve">
          <source>The correct usage for storing data in the Map is through the &lt;code&gt;set(&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;)&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8f0e6875ef581c720496aa923969901df56b65" translate="yes" xml:space="preserve">
          <source>The correct way of doing this is to rename the export:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de3945364d45317b571a832343df34f694f7d73" translate="yes" xml:space="preserve">
          <source>The cosine of the given number.</source>
          <target state="translated">Косинус данного числа.</target>
        </trans-unit>
        <trans-unit id="1c930f93fb8868cc6815569cb4309a14122dc34d" translate="yes" xml:space="preserve">
          <source>The cube root of the given number.</source>
          <target state="translated">Кубический корень данного числа.</target>
        </trans-unit>
        <trans-unit id="c114c8f5d2e6f7f010683b95d33e20f9c1b64386" translate="yes" xml:space="preserve">
          <source>The curly brackets look correct at a first glance, but this code snippet is missing a &lt;code&gt;{&lt;/code&gt; after the first &lt;code&gt;if&lt;/code&gt; statement. Correct would be:</source>
          <target state="translated">Фигурные скобки на первый взгляд выглядят правильно, но в этом фрагменте кода отсутствует &lt;code&gt;{&lt;/code&gt; после первого оператора &lt;code&gt;if&lt;/code&gt; . Правильно было бы:</target>
        </trans-unit>
        <trans-unit id="5f5245cf8dfef36fe67c21f6ce9d68b1136ece88" translate="yes" xml:space="preserve">
          <source>The currency string, such as the symbols &quot;$&quot; and &quot;&amp;euro;&quot; or the name &quot;Dollar&quot;, &quot;Euro&quot; depending on how &lt;code&gt;currencyDisplay&lt;/code&gt; is specified.</source>
          <target state="translated">Строка валюты, например символы &amp;laquo;$&amp;raquo; и &amp;laquo;&amp;euro;&amp;raquo; или имя &amp;laquo;Доллар&amp;raquo;, &amp;laquo;Евро&amp;raquo;, в зависимости от того, как указано &lt;code&gt;currencyDisplay&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b19ba0bd00ac262399d753d908b7d49bd67d4d73" translate="yes" xml:space="preserve">
          <source>The currency to use in currency formatting. Possible values are the ISO 4217 currency codes, such as &lt;code&gt;&quot;USD&quot;&lt;/code&gt; for the US dollar, &lt;code&gt;&quot;EUR&quot;&lt;/code&gt; for the euro, or &lt;code&gt;&quot;CNY&quot;&lt;/code&gt; for the Chinese RMB &amp;mdash; see the &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;Current currency &amp;amp; funds code list&lt;/a&gt;. There is no default value; if the &lt;code&gt;style&lt;/code&gt; is &lt;code&gt;&quot;currency&quot;&lt;/code&gt;, the &lt;code&gt;currency&lt;/code&gt; property must be provided.</source>
          <target state="translated">Валюта, используемая при форматировании валюты. Возможные значения - коды валют ISO 4217, такие как &lt;code&gt;&quot;USD&quot;&lt;/code&gt; для доллара США, &lt;code&gt;&quot;EUR&quot;&lt;/code&gt; для евро или &lt;code&gt;&quot;CNY&quot;&lt;/code&gt; для китайского юаня - см. &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;Список кодов текущей валюты и фондов&lt;/a&gt; . Нет значения по умолчанию; если &lt;code&gt;style&lt;/code&gt; является &lt;code&gt;&quot;currency&quot;&lt;/code&gt; , то &lt;code&gt;currency&lt;/code&gt; должна быть предоставлена собственность.</target>
        </trans-unit>
        <trans-unit id="5dc9e50d81823798a643f009d726e60aa602bf91" translate="yes" xml:space="preserve">
          <source>The current day of month will have an impact on the behaviour of this method. Conceptually it will add the number of days given by the current day of the month to the 1st day of the new month specified as the parameter, to return the new date. For example, if the current value is 31st August 2016, calling setMonth with a value of 1 will return 2nd March 2016. This is because in 2016 February had 29 days.</source>
          <target state="translated">Текущий день месяца повлияет на поведение этого метода.Концептуально он прибавит к 1-му дню нового месяца,указанному в качестве параметра,количество дней,заданных текущим днем месяца,для возврата новой даты.Например,если текущее значение равно 31 августа 2016 года,то звонок в setMonth со значением 1 вернётся 2 марта 2016 года.Это связано с тем,что в 2016 году февраль имел 29 дней.</target>
        </trans-unit>
        <trans-unit id="07bc1f220d7417fecbaf41181d3f1e75442bc0de" translate="yes" xml:space="preserve">
          <source>The current element being processed in the &lt;code&gt;Set&lt;/code&gt;. As there are no keys in &lt;code&gt;Set&lt;/code&gt;, the value is passed for both arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d81a6aba37ff18bd5d8c2ff73ec50a431f3bde" translate="yes" xml:space="preserve">
          <source>The current element being processed in the array.</source>
          <target state="translated">Текущий элемент обрабатывается в массиве.</target>
        </trans-unit>
        <trans-unit id="524f1003256858d5c9cdfa90bf0c2de1c7abe3e7" translate="yes" xml:space="preserve">
          <source>The current element being processed in the typed array.</source>
          <target state="translated">Текущий элемент обрабатывается в типизированном массиве.</target>
        </trans-unit>
        <trans-unit id="5d4c2ee3a20a466583eb13b2f1a146123c0d3ed2" translate="yes" xml:space="preserve">
          <source>The current element in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60f4c692eb4dfbdfed4ca0839000a6e47bd0087" translate="yes" xml:space="preserve">
          <source>The data type &lt;strong&gt;symbol&lt;/strong&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive data type&lt;/a&gt;.</source>
          <target state="translated">Типа данных &lt;strong&gt;символы&lt;/strong&gt; являются &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;примитивным типом данных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e7072b9ca0edc6984be99368bfce251184b17f7c" translate="yes" xml:space="preserve">
          <source>The data type &lt;strong&gt;symbol&lt;/strong&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive data type&lt;/a&gt;. The &lt;code&gt;Symbol()&lt;/code&gt; function returns a value of type &lt;strong&gt;symbol&lt;/strong&gt;, has static properties that expose several members of built-in objects, has static methods that expose the global symbol registry, and resembles a built-in object class, but is incomplete as a constructor because it does not support the syntax &quot;&lt;code&gt;new Symbol()&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4fccd524441cf00caefa27a863039b3cf91544" translate="yes" xml:space="preserve">
          <source>The date and time formats can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Форматы даты и времени можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="666a0d44dc5f74d5cba4609d254e995f1bf62311" translate="yes" xml:space="preserve">
          <source>The date time string may be in a simplified &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO 8601&lt;/a&gt; format. For example, &lt;code&gt;&quot;2011-10-10&quot;&lt;/code&gt; (just date) or &lt;code&gt;&quot;2011-10-10T14:48:00&quot;&lt;/code&gt; (date and time) can be passed and parsed. Where the string is ISO 8601 date only, the UTC time zone is used to interpret arguments. If the string is date and time in &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO 8601&lt;/a&gt; format, it will be treated as local.</source>
          <target state="translated">Строка даты и времени может быть в упрощенном формате &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO 8601&lt;/a&gt; . Например, &lt;code&gt;&quot;2011-10-10&quot;&lt;/code&gt; (только дата) или &lt;code&gt;&quot;2011-10-10T14:48:00&quot;&lt;/code&gt; (дата и время) можно передать и проанализировать. Если строка представляет собой только дату ISO 8601, часовой пояс UTC используется для интерпретации аргументов. Если строка представляет собой дату и время в формате &lt;a href=&quot;http://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO 8601&lt;/a&gt; , она будет рассматриваться как локальная.</target>
        </trans-unit>
        <trans-unit id="d130d221e393af90c0ed6eeecc502bde90336a08" translate="yes" xml:space="preserve">
          <source>The date to format.</source>
          <target state="translated">Дата для форматирования.</target>
        </trans-unit>
        <trans-unit id="dfa58d4d180b7df388a433a28b25b9a135add3f3" translate="yes" xml:space="preserve">
          <source>The decimal exponential literal is specified by the following format: &lt;code&gt;beN&lt;/code&gt;; where &lt;code&gt;b&lt;/code&gt; is a base number (integer or floating), followed by &lt;code&gt;e&lt;/code&gt; char (which serves as separator or &lt;em&gt;exponent indicator&lt;/em&gt;) and&lt;code&gt;N&lt;/code&gt;, which is &lt;em&gt;exponent&lt;/em&gt; or &lt;em&gt;power&lt;/em&gt; number &amp;ndash; a signed integer (as per 2019 ECMA-262 specs):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f108ef11ec4436baa6c0f00ae9e1b84307280093" translate="yes" xml:space="preserve">
          <source>The decimal separator string (&quot;.&quot;).</source>
          <target state="translated">Десятичная разделительная строка (&quot;.&quot;).</target>
        </trans-unit>
        <trans-unit id="910c3fbe938cfd9b387a32e9bc34f0a45b870d47" translate="yes" xml:space="preserve">
          <source>The decrement operator decrements (subtracts one from) its operand and returns a value.</source>
          <target state="translated">Оператор декремента декрементирует (вычитает один из)свой операнд и возвращает значение.</target>
        </trans-unit>
        <trans-unit id="759bfc7bc1feeabfc407984ea40226d336b9acd4" translate="yes" xml:space="preserve">
          <source>The default argument is evaluated at &lt;em&gt;call time&lt;/em&gt;. So, unlike (for example) Python, a new object is created each time the function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490855b400d057b93a21637883df08ab89c24f3f" translate="yes" xml:space="preserve">
          <source>The default argument is evaluated at call time, so unlike e.g. Python, a new object is created each time the function is called.</source>
          <target state="translated">Аргумент по умолчанию вычисляется во время вызова,поэтому в отличие от,например,Python,каждый раз при вызове функции создается новый объект.</target>
        </trans-unit>
        <trans-unit id="957b857fe9032487dca6277c4f80f6900d49b5d3" translate="yes" xml:space="preserve">
          <source>The default array properties that are excluded from &lt;code&gt;with&lt;/code&gt; bindings are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60352eea3410e84a3191b72431afaa8b6d3183fe" translate="yes" xml:space="preserve">
          <source>The default array properties that are excluded from &lt;code&gt;with&lt;/code&gt; bindings are: copyWithin, entries, fill, find, findIndex, includes, keys, and values.</source>
          <target state="translated">Свойства массива по умолчанию, которые исключены из &lt;code&gt;with&lt;/code&gt; креплениями являются: copyWithin, записей, заливка, найти, findIndex, включает в себя, ключи и значения.</target>
        </trans-unit>
        <trans-unit id="fc7be41d69f72f251344d3a32f7d3500e5b19a26" translate="yes" xml:space="preserve">
          <source>The default function just concatenates the parts into a single string. If there is an expression preceding the template literal (&lt;code&gt;&lt;var&gt;tag&lt;/var&gt;&lt;/code&gt; here), this is called a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2e5c202585ddc67e01c8a15ad6c14853b1024b" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;&quot;variant&quot;&lt;/code&gt; for usage &lt;code&gt;&quot;sort&quot;&lt;/code&gt;; it's locale dependent for usage &lt;code&gt;&quot;search&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию &lt;code&gt;&quot;variant&quot;&lt;/code&gt; для использования &lt;code&gt;&quot;sort&quot;&lt;/code&gt; ; это зависит от локали для использования &lt;code&gt;&quot;search&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="575ea9e4c460d8bcd17e3b3e10695e0d5c392b70" translate="yes" xml:space="preserve">
          <source>The default line ending varies depending on the platform (Unix, Windows, etc.). The line splitting provided in this example works on all platforms.</source>
          <target state="translated">Окончание строки по умолчанию варьируется в зависимости от платформы (Unix,Windows и т.д.).Деление строк,представленное в данном примере,работает на всех платформах.</target>
        </trans-unit>
        <trans-unit id="51d5bc9828c9f3e697bdef77251371c861406400" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if the &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt; properties are all &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, and &lt;code&gt;second&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию для каждого свойства компонента даты и времени является &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , но если &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; , &lt;code&gt;second&lt;/code&gt; свойства все &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , то &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; , и &lt;code&gt;second&lt;/code&gt; считаются &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4ddf17b02e4292879e3db354784c90cfc09a8e02" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if the &lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt; properties are all &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию для каждого свойства компонента даты и времени не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , но если все свойства &lt;code&gt;day&lt;/code&gt; &lt;code&gt;weekday&lt;/code&gt; , &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и дня не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , то предполагается , что &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; являются &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50ec5acd3f905b8f0cc746b02ed2067efd52b285" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if the &lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, &lt;code&gt;second&lt;/code&gt; properties are all &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, &lt;code&gt;day&lt;/code&gt;, &lt;code&gt;hour&lt;/code&gt;, &lt;code&gt;minute&lt;/code&gt;, and &lt;code&gt;second&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию для каждого свойства компонента даты и времени не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , но если все свойства &lt;code&gt;weekday&lt;/code&gt; , &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt; , &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; , &lt;code&gt;second&lt;/code&gt; не &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , то предполагается , что &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; , &lt;code&gt;day&lt;/code&gt; , &lt;code&gt;hour&lt;/code&gt; , &lt;code&gt;minute&lt;/code&gt; и &lt;code&gt;second&lt;/code&gt; быть &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a1cad2c938251528e24aa9f15953e623a4c08304" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;. But, if the &lt;code&gt;weekday&lt;/code&gt;, &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; properties are all &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df60473a24d4fcd4ef04c265bb72340d1de6ef6c" translate="yes" xml:space="preserve">
          <source>The default value for each date-time component property is &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, but if all component properties are &lt;a href=&quot;undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;year&lt;/code&gt;, &lt;code&gt;month&lt;/code&gt;, and &lt;code&gt;day&lt;/code&gt; are assumed to be &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;.</source>
          <target state="translated">Значение по умолчанию для каждого свойства компонента даты и времени не &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , но если все свойства компонента не &lt;a href=&quot;undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; , то &lt;code&gt;year&lt;/code&gt; , &lt;code&gt;month&lt;/code&gt; и &lt;code&gt;day&lt;/code&gt; считаются &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b0122a05c7a89cab56eaaa6e72bda4166aef309" translate="yes" xml:space="preserve">
          <source>The deprecated &lt;code&gt;&lt;strong&gt;compile&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; method is used to (re-)compile a regular expression during execution of a script. It is basically the same as the &lt;code&gt;RegExp&lt;/code&gt; constructor.</source>
          <target state="translated">Устаревший метод &lt;code&gt;&lt;strong&gt;compile&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; используется для (повторной) компиляции регулярного выражения во время выполнения скрипта. По сути, он такой же, как конструктор &lt;code&gt;RegExp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a6e3caec01441368ab687b0ffe79769141bf583" translate="yes" xml:space="preserve">
          <source>The depth level specifying how deep a nested array structure should be flattened. Defaults to 1.</source>
          <target state="translated">Уровень глубины,определяющий,насколько глубокой должна быть вложенная структура массива.По умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="6a1ffc0dfd620e5610e05b3f9fb111a07803fd2a" translate="yes" xml:space="preserve">
          <source>The descriptor for the property being defined or modified.</source>
          <target state="translated">Дескриптор определяемого или изменяемого свойства.</target>
        </trans-unit>
        <trans-unit id="d8912c766c52dc003027b1c9513ec42e96773a76" translate="yes" xml:space="preserve">
          <source>The destructuring assignment uses similar syntax, but on the left-hand side of the assignment to define what values to unpack from the sourced variable.</source>
          <target state="translated">Деструктивное присваивание использует аналогичный синтаксис,но в левой части присваивания для определения того,какие значения распаковывать из исходной переменной.</target>
        </trans-unit>
        <trans-unit id="aa3175f58177aea6864d139aca99112779859078" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; and the &lt;code&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/code&gt; constructor is in the handling of integer arguments: &lt;code&gt;&lt;strong&gt;Array.of(7)&lt;/strong&gt;&lt;/code&gt; creates an array with a single element, &lt;code&gt;7&lt;/code&gt;, whereas &lt;code&gt;&lt;strong&gt;Array(7)&lt;/strong&gt;&lt;/code&gt; creates an empty array with a &lt;code&gt;length&lt;/code&gt; property of 7 (&lt;strong&gt;Note:&lt;/strong&gt; this implies an array of &lt;code&gt;7&lt;/code&gt; empty slots, not slots with actual &lt;code&gt;undefined&lt;/code&gt; values).</source>
          <target state="translated">Разница между &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; и конструктором &lt;code&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/code&gt; заключается в обработке целочисленных аргументов: &lt;code&gt;&lt;strong&gt;Array.of(7)&lt;/strong&gt;&lt;/code&gt; создает массив с одним элементом, &lt;code&gt;7&lt;/code&gt; , тогда как &lt;code&gt;&lt;strong&gt;Array(7)&lt;/strong&gt;&lt;/code&gt; создает пустой массив со свойством &lt;code&gt;length&lt;/code&gt; , равным 7 ( &lt;strong&gt;Примечание:&lt;/strong&gt; это подразумевает массив из &lt;code&gt;7&lt;/code&gt; пустых слотов, а не слотов с фактическими &lt;code&gt;undefined&lt;/code&gt; значениями).</target>
        </trans-unit>
        <trans-unit id="7c253f6c8a51a3d09b9af4dfdf88febba9d717d8" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;&lt;strong&gt;Array.of()&lt;/strong&gt;&lt;/code&gt; and the &lt;code&gt;&lt;strong&gt;Array&lt;/strong&gt;&lt;/code&gt; constructor is in the handling of integer arguments: &lt;code&gt;&lt;strong&gt;Array.of(7)&lt;/strong&gt;&lt;/code&gt; creates an array with a single element, &lt;code&gt;7&lt;/code&gt;, whereas &lt;code&gt;&lt;strong&gt;Array(7)&lt;/strong&gt;&lt;/code&gt; creates an empty array with a &lt;code&gt;length&lt;/code&gt; property of &lt;code&gt;7&lt;/code&gt; (&lt;strong&gt;Note:&lt;/strong&gt; this implies an array of &lt;code&gt;7&lt;/code&gt; empty slots, not slots with actual &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; values).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b16c2a8e0bc7fd5abd66647095b4ab23e4208d" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;substring()&lt;/code&gt; and &lt;code&gt;substr()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116f60e8f0a2b57e4e20e4c0a1dd8bf787152c51" translate="yes" xml:space="preserve">
          <source>The difference between the sticky flag and the global flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29060c7294aaeb4cdb06a46f8fc802bff5a30dec" translate="yes" xml:space="preserve">
          <source>The difference in associativity comes into play when there are multiple operators of the same precedence. With only one operator or operators of different precedences, associativity doesn't affect the output, as seen in the example above. In the example below, observe how associativity affects the output when multiple of the same operator are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3480a79be927bbb5f14ae973492e695c7b92b89e" translate="yes" xml:space="preserve">
          <source>The display name of the function.</source>
          <target state="translated">Отображаемое имя функции.</target>
        </trans-unit>
        <trans-unit id="bceca5f189abd8f44b0e66132ffed15f1fbbb42b" translate="yes" xml:space="preserve">
          <source>The division assignment operator &lt;strong&gt;divides&lt;/strong&gt; a variable by the value of the right operand and assigns the result to the variable. See the &lt;a href=&quot;arithmetic_operators#Division&quot;&gt;division operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присвоения деления &lt;strong&gt;делит&lt;/strong&gt; переменную на значение правого операнда и присваивает результат переменной. Подробнее см. &lt;a href=&quot;arithmetic_operators#Division&quot;&gt;Оператор деления&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f7cc1394d79a2c585ebb42aab308a2519ba5bda" translate="yes" xml:space="preserve">
          <source>The division operator produces the quotient of its operands where the left operand is the dividend and the right operand is the divisor.</source>
          <target state="translated">Оператор деления производит коэффициент своих операндов,где левый операнд является дивидендом,а правый операнд-делителем.</target>
        </trans-unit>
        <trans-unit id="702e5e606f58d4f03d2c9bb6f52b7860f6794ad9" translate="yes" xml:space="preserve">
          <source>The dot operator (&lt;code&gt;.&lt;/code&gt;) is used for &lt;a href=&quot;../operators/property_accessors&quot;&gt;property access&lt;/a&gt;. You will have to specify the name of the property that you want to access. For computed property access, you might need to change your property access from using a dot to using square brackets. These will allow you to compute an expression. Maybe you intended to do concatenation instead? A plus operator (&lt;code&gt;+&lt;/code&gt;) is needed in that case. Please see the examples below.</source>
          <target state="translated">Оператор точки ( &lt;code&gt;.&lt;/code&gt; ) Используется для &lt;a href=&quot;../operators/property_accessors&quot;&gt;доступа&lt;/a&gt; к свойствам . Вам нужно будет указать имя свойства, к которому вы хотите получить доступ. Для доступа к вычисляемым свойствам вам может потребоваться изменить доступ к свойству с точки на квадратные скобки. Это позволит вам вычислить выражение. Может быть, вы вместо этого намеревались выполнить конкатенацию? В этом случае необходим оператор &amp;laquo;плюс&amp;raquo; ( &lt;code&gt;+&lt;/code&gt; ). См. Примеры ниже.</target>
        </trans-unit>
        <trans-unit id="b463ff929e9917b779b4e606caf8f57bb7992205" translate="yes" xml:space="preserve">
          <source>The element associated with the specified key in the &lt;code&gt;WeakMap&lt;/code&gt; object. If the key can't be found, &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Элемент, связанный с указанным ключом в объекте &lt;code&gt;WeakMap&lt;/code&gt; . Если ключ не может быть найден, возвращается &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2669c5d093ce3ab35bb3b29e181037db1a32f431" translate="yes" xml:space="preserve">
          <source>The element associated with the specified key, or &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if the key can't be found in the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c984bdef63710214dd443ae7be9a3a7a954b51b3" translate="yes" xml:space="preserve">
          <source>The element to search for.</source>
          <target state="translated">Элемент для поиска.</target>
        </trans-unit>
        <trans-unit id="c9ded09aa440d2ecd650a1c98bf1dc5f92d1a085" translate="yes" xml:space="preserve">
          <source>The element(s) to add to the end of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61dfe96ca0e23c5dcafb50b3016bc202759318e2" translate="yes" xml:space="preserve">
          <source>The elements interval to fill is [&lt;code&gt;start&lt;/code&gt;, &lt;code&gt;end&lt;/code&gt;).</source>
          <target state="translated">Интервал заполнения элементов - [ &lt;code&gt;start&lt;/code&gt; , &lt;code&gt;end&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b2f71b15736679a743df6338568998902eadb28" translate="yes" xml:space="preserve">
          <source>The elements of the array are converted to strings using their &lt;code&gt;toLocaleString&lt;/code&gt; methods.</source>
          <target state="translated">Элементы массива преобразуются в строки с помощью их методов &lt;code&gt;toLocaleString&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="976857b63ffa0fa8b49868356a30331d1c7ead7f" translate="yes" xml:space="preserve">
          <source>The elements to add to the array, beginning at the &lt;code&gt;start&lt;/code&gt; index. If you don't specify any elements, &lt;code&gt;splice()&lt;/code&gt; will only remove elements from the array.</source>
          <target state="translated">Элементы, которые нужно добавить в массив, начиная с &lt;code&gt;start&lt;/code&gt; индекса. Если вы не укажете никаких элементов, &lt;code&gt;splice()&lt;/code&gt; удалит только элементы из массива.</target>
        </trans-unit>
        <trans-unit id="198667ef5375d85508c4e39fb04519665c2c61fc" translate="yes" xml:space="preserve">
          <source>The elements to add to the array, beginning from &lt;code&gt;&lt;var&gt;start&lt;/var&gt;&lt;/code&gt;. If you do not specify any elements, &lt;code&gt;splice()&lt;/code&gt; will only remove elements from the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3edd07e7b05dfcea108ea0bcdc3aa9e974a7a9" translate="yes" xml:space="preserve">
          <source>The elements to add to the end of the array.</source>
          <target state="translated">Элементы для добавления в конец массива.</target>
        </trans-unit>
        <trans-unit id="f40d6feae1f747e51cf8f3a327e47b924b1b49ef" translate="yes" xml:space="preserve">
          <source>The elements to add to the front of the &lt;code&gt;&lt;var&gt;arr&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d8d77140911a1a18dc3282b0bb04677e86f944" translate="yes" xml:space="preserve">
          <source>The elements to add to the front of the array.</source>
          <target state="translated">Элементы для добавления во фронт массива.</target>
        </trans-unit>
        <trans-unit id="964309413cb886b8ad9a40d1f14f5d85eb64b4e5" translate="yes" xml:space="preserve">
          <source>The empty statement is a semicolon (;) indicating that no statement will be executed, even if JavaScript syntax requires one. The opposite behavior, where you want multiple statements, but JavaScript only allows a single one, is possible using a&lt;a href=&quot;block&quot;&gt; block statement&lt;/a&gt;; it combines several statements into a single one.</source>
          <target state="translated">Пустой оператор - это точка с запятой (;), указывающая, что ни один оператор не будет выполняться, даже если синтаксис JavaScript этого требует. Обратное поведение, когда вам нужно несколько операторов, а JavaScript допускает только один, возможно с использованием оператора &lt;a href=&quot;block&quot;&gt;блока&lt;/a&gt; ; он объединяет несколько утверждений в одно.</target>
        </trans-unit>
        <trans-unit id="f9c9dd7c3b2248ae60552eb4dbd9dc092a101bf8" translate="yes" xml:space="preserve">
          <source>The empty statement is a semicolon (&lt;code&gt;;&lt;/code&gt;) indicating that no statement will be executed, even if JavaScript syntax requires one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e66a9d24a75b87f328012bbcd3828a1b25f0042" translate="yes" xml:space="preserve">
          <source>The empty statement is sometimes used with loop statements. See the following example with an empty loop body:</source>
          <target state="translated">Пустой оператор иногда используется с циклами.См.следующий пример с пустым телом цикла:</target>
        </trans-unit>
        <trans-unit id="0b5add654fda5490901940118cf18012fb2f509a" translate="yes" xml:space="preserve">
          <source>The end of the generator function is reached. In this case, execution of the generator ends and an &lt;code&gt;IteratorResult&lt;/code&gt; is returned to the caller in which the &lt;code&gt;value&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e729cba7ea56759d3b8069fa2efa9020b6cc62" translate="yes" xml:space="preserve">
          <source>The end of the generator function is reached; in this case, execution of the generator ends and an &lt;code&gt;IteratorResult&lt;/code&gt; is returned to the caller in which the &lt;code&gt;value&lt;/code&gt; is &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;done&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Достигнут конец функции генератора; в этом случае выполнение генератора завершается, и вызывающей стороне возвращается &lt;code&gt;IteratorResult&lt;/code&gt; , в котором &lt;code&gt;value&lt;/code&gt; не &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; а &lt;code&gt;done&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1fbca4f8f7dbe7cb1b69857d4c5fefd4afb8e501" translate="yes" xml:space="preserve">
          <source>The equality operator converts the operands if they are &lt;strong&gt;not of the same type&lt;/strong&gt;, then applies strict comparison. If &lt;strong&gt;both operands are objects&lt;/strong&gt;, then JavaScript compares internal references which are equal when operands refer to the same object in memory.</source>
          <target state="translated">Оператор равенства преобразует операнды, если они &lt;strong&gt;не одного типа&lt;/strong&gt; , а затем применяет строгое сравнение. Если &lt;strong&gt;оба операнда являются объектами&lt;/strong&gt; , тогда JavaScript сравнивает внутренние ссылки, которые равны, когда операнды ссылаются на один и тот же объект в памяти.</target>
        </trans-unit>
        <trans-unit id="8cb51ee8b35550f1e821d2a598b3340865194239" translate="yes" xml:space="preserve">
          <source>The equivalent call in traditional syntax looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f25f2b97a54ffd73232014fd7417667a535120" translate="yes" xml:space="preserve">
          <source>The example below illustrates &lt;code&gt;includes()&lt;/code&gt; method called on the function's &lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e78bc7c4d863ae5f10706cc11d89d0d5f18cb90" translate="yes" xml:space="preserve">
          <source>The example below shows how to implement a self-archiving object. When &lt;code&gt;temperature&lt;/code&gt; property is set, the &lt;code&gt;archive&lt;/code&gt; array gets a log entry.</source>
          <target state="translated">В приведенном ниже примере показано, как реализовать объект самоархивирования. Когда задано свойство &lt;code&gt;temperature&lt;/code&gt; , &lt;code&gt;archive&lt;/code&gt; массив получает запись журнала.</target>
        </trans-unit>
        <trans-unit id="7d8d6dfa3c30cdcccd15cfd9b45e7e2e601d4b42" translate="yes" xml:space="preserve">
          <source>The example below shows how to set a getter for a property. It doesn't specify a &lt;a href=&quot;../functions/set&quot;&gt;setter&lt;/a&gt;, so a &lt;code&gt;TypeError&lt;/code&gt; will be thrown upon trying to set the &lt;code&gt;temperature&lt;/code&gt; property to &lt;code&gt;30&lt;/code&gt;. For more details see also the &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2faf576348d1b75c7c5750450ed07e4e5aa37c08" translate="yes" xml:space="preserve">
          <source>The example below shows how to set getter for a property. It doesn't specify a &lt;a href=&quot;../functions/set&quot;&gt;setter&lt;/a&gt;, so a &lt;code&gt;TypeError&lt;/code&gt; will be thrown upon trying to set the &lt;code&gt;temperature&lt;/code&gt; property to &lt;code&gt;30&lt;/code&gt;. For more details see also the &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt; page.</source>
          <target state="translated">В приведенном ниже примере показано, как установить геттер для свойства. Он не указывает &lt;a href=&quot;../functions/set&quot;&gt;сеттер&lt;/a&gt; , поэтому при попытке установить для свойства &lt;code&gt;temperature&lt;/code&gt; значение &lt;code&gt;30&lt;/code&gt; будет &lt;code&gt;TypeError&lt;/code&gt; . Для получения дополнительных сведений см. Также &lt;a href=&quot;../global_objects/object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9f3833ca0dced6eccd9dc2686c178826f0540b65" translate="yes" xml:space="preserve">
          <source>The example function &lt;code&gt;tetheredGetNumber()&lt;/code&gt; shows that a promise generator will utilize &lt;code&gt;reject()&lt;/code&gt; while setting up an asynchronous call, or within the call-back, or both. The function &lt;code&gt;promiseGetWord()&lt;/code&gt; illustrates how an API function might generate and return a promise in a self-contained manner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a543c742aa81833c02ea279d11b67484a1b79a93" translate="yes" xml:space="preserve">
          <source>The examples below are throwing strings. This is considered bad practice. Always throw an instance of &lt;a href=&quot;../error&quot;&gt;Error&lt;/a&gt;. Otherwise the part doing the catching would have to make checks to see if the argument was a string or an error, and you might lose valuable information like stack traces</source>
          <target state="translated">Примеры ниже - это бросание струн. Это считается плохой практикой. Всегда генерируйте экземпляр &lt;a href=&quot;../error&quot;&gt;Error&lt;/a&gt; . В противном случае часть, выполняющая перехват, должна будет выполнить проверки, чтобы увидеть, является ли аргумент строкой или ошибкой, и вы можете потерять ценную информацию, такую ​​как трассировки стека.</target>
        </trans-unit>
        <trans-unit id="bb1bcdbffff91b9c3ff449f3a1db34d1c49b45ab" translate="yes" xml:space="preserve">
          <source>The exception identifier</source>
          <target state="translated">Идентификатор исключения</target>
        </trans-unit>
        <trans-unit id="ce80bced1d577c0ec07cff7172c9496c59661560" translate="yes" xml:space="preserve">
          <source>The exception to throw. For debugging purposes, it is useful to make it an &lt;code&gt;instanceof&lt;/code&gt;&lt;a href=&quot;../error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Исключение, которое нужно выбросить. В целях отладки полезно сделать его &lt;code&gt;instanceof&lt;/code&gt; &lt;a href=&quot;../error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="54ac630246e15feb3e415b9e4a0af2998597121e" translate="yes" xml:space="preserve">
          <source>The expected value to test .</source>
          <target state="translated">Ожидаемое значение для проверки .</target>
        </trans-unit>
        <trans-unit id="afe3f22e84d4424195badcc3f4b24fba7253849f" translate="yes" xml:space="preserve">
          <source>The expected value to test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2746092c21a3490e05af5310de9a2a714ec48b94" translate="yes" xml:space="preserve">
          <source>The experimental pipeline operator &lt;code&gt;|&amp;gt;&lt;/code&gt; (currently at stage 1) allows the creation of chained function calls in a readable manner. Basically, the pipeline operator provides syntactic sugar on a function call with a single argument allowing you to write</source>
          <target state="translated">Экспериментальный оператор конвейера &lt;code&gt;|&amp;gt;&lt;/code&gt; (в настоящее время на этапе 1) позволяет создавать связанные вызовы функций в удобочитаемой форме. По сути, оператор конвейера обеспечивает синтаксический сахар при вызове функции с одним аргументом, позволяющим писать</target>
        </trans-unit>
        <trans-unit id="320dabf35549ff785ee3314d282478c9cf5cca62" translate="yes" xml:space="preserve">
          <source>The experimental pipeline operator &lt;code&gt;|&amp;gt;&lt;/code&gt; (currently at stage 1) pipes the value of an expression into a function. This allows the creation of chained function calls in a readable manner. The result is syntactic sugar in which a function call with a single argument can be written like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f035e240e14007c0c27a0f4417979f25ca82a137" translate="yes" xml:space="preserve">
          <source>The exponent used to raise the &lt;code&gt;&lt;var&gt;base&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1e08828c1c1c64a2e274d4ee8e4d2a3195e57a" translate="yes" xml:space="preserve">
          <source>The exponent used to raise the &lt;code&gt;base&lt;/code&gt;.</source>
          <target state="translated">Показатель степени используется для увеличения &lt;code&gt;base&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec4a21ddf5867a520cbd03423b51cdda85a33100" translate="yes" xml:space="preserve">
          <source>The exponentiation assignment operator evaluates to the result of raising first operand to the &lt;strong&gt;power&lt;/strong&gt; second operand. See the &lt;a href=&quot;arithmetic_operators#Exponentiation&quot;&gt;exponentiation operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания возведения в степень оценивает результат возведения первого операнда в &lt;strong&gt;степень&lt;/strong&gt; второго операнда. Подробнее см. &lt;a href=&quot;arithmetic_operators#Exponentiation&quot;&gt;Оператор возведения&lt;/a&gt; в степень .</target>
        </trans-unit>
        <trans-unit id="a4176a32312ff185a693c46e64c016529338241a" translate="yes" xml:space="preserve">
          <source>The exponentiation operator returns the result of raising first operand to the power second operand. that is, &lt;code&gt;var1&lt;/code&gt;&lt;sup&gt;&lt;code&gt;var2&lt;/code&gt;&lt;/sup&gt;, in the preceding statement, where &lt;code&gt;var1&lt;/code&gt; and &lt;code&gt;var2&lt;/code&gt; are variables. Exponentiation operator is right associative. &lt;code&gt;a ** b ** c&lt;/code&gt; is equal to &lt;code&gt;a ** (b ** c)&lt;/code&gt;.</source>
          <target state="translated">Оператор возведения в степень возвращает результат возведения первого операнда в степень второго операнда. то есть &lt;code&gt;var1&lt;/code&gt; &lt;sup&gt; &lt;code&gt;var2&lt;/code&gt; &lt;/sup&gt; в предыдущем операторе, где &lt;code&gt;var1&lt;/code&gt; и &lt;code&gt;var2&lt;/code&gt; - переменные. Оператор возведения в степень ассоциативен справа. &lt;code&gt;a ** b ** c&lt;/code&gt; равно &lt;code&gt;a ** (b ** c)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0ff10bc03a45ce0e9291e3e6951c8f6cb0e9efe" translate="yes" xml:space="preserve">
          <source>The expression after the &lt;code&gt;yield&lt;/code&gt; keyword is optional and omitting it no longer throws a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;: &lt;code&gt;function* countAppleSales() { yield; }&lt;/code&gt;</source>
          <target state="translated">Выражение после ключевого слова &lt;code&gt;yield&lt;/code&gt; является необязательным, и его &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; больше не вызывает SyntaxError : &lt;code&gt;function* countAppleSales() { yield; }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6688448e60de73657152c36c5e46b89ebe52ab99" translate="yes" xml:space="preserve">
          <source>The expression closure syntax is a shorthand for writing simple function.</source>
          <target state="translated">Синтаксис закрытия выражения-это сокращение для написания простой функции.</target>
        </trans-unit>
        <trans-unit id="21383b56f31b618cf9bbdf7920f702063119a5ac" translate="yes" xml:space="preserve">
          <source>The expression is not allowed at the start of a statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96688ce440f140a42b107e921ec490d12daf7cab" translate="yes" xml:space="preserve">
          <source>The expression to throw.</source>
          <target state="translated">Выражение,чтобы бросить.</target>
        </trans-unit>
        <trans-unit id="520c80691ea2d4a4e974359ab8a8851d7f401d54" translate="yes" xml:space="preserve">
          <source>The expression which returns an iterable object.</source>
          <target state="translated">Выражение,которое возвращает итерабельный объект.</target>
        </trans-unit>
        <trans-unit id="a8bb2c9604319c8bb786e0cb1b99192e83f0a82e" translate="yes" xml:space="preserve">
          <source>The expression whose value is to be returned. If omitted, &lt;code&gt;undefined&lt;/code&gt; is returned instead.</source>
          <target state="translated">Выражение, значение которого должно быть возвращено. Если опущено, вместо этого возвращается &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed5c50ebb92756f0707c6ed0a09e38af923761d0" translate="yes" xml:space="preserve">
          <source>The finally-block</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee5dce18bb14a0cbef372bf3dc3a7962d359dcfc" translate="yes" xml:space="preserve">
          <source>The first element for comparison.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4ed9da9983831b6e15987af90f3bd77d33de85" translate="yes" xml:space="preserve">
          <source>The first element to be searched is found at &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; for positive values of &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt;, or at &lt;code&gt;&lt;var&gt;arr&lt;/var&gt;.length + &lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; for negative values of &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; (using the &lt;a href=&quot;https://en.wikipedia.org/wiki/absolute%20value&quot;&gt;absolute value&lt;/a&gt; of &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt;&lt;/code&gt; as the number of elements from the end of the array at which to start the search).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faf3645812e98e818a8b880cea16c9a0cd2b180" translate="yes" xml:space="preserve">
          <source>The first example creates a class called &lt;code&gt;Square&lt;/code&gt; from a class called &lt;code&gt;Polygon&lt;/code&gt;. This example is extracted from this &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;live demo&lt;/a&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;(source)&lt;/a&gt;.</source>
          <target state="translated">В первом примере создается класс &lt;code&gt;Square&lt;/code&gt; из класса &lt;code&gt;Polygon&lt;/code&gt; . Этот пример взят из этой &lt;a href=&quot;https://googlechrome.github.io/samples/classes-es6/index.html&quot;&gt;живой демонстрации &lt;/a&gt;&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/classes-es6/index.html&quot;&gt;(источник)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1687b2101b8a8d269aea32aabe07e05c04201095" translate="yes" xml:space="preserve">
          <source>The first index of the element in the array; &lt;code&gt;-1&lt;/code&gt; if not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6023d482470ad1c2cdb57b2bfef6b50e5f030b1f" translate="yes" xml:space="preserve">
          <source>The first index of the element in the array; &lt;strong&gt;-1&lt;/strong&gt; if not found.</source>
          <target state="translated">Первый индекс элемента в массиве; &lt;strong&gt;-1,&lt;/strong&gt; если не найден.</target>
        </trans-unit>
        <trans-unit id="e9e21f4e3a3ffd5c425a4b62c284801bdbcc39a4" translate="yes" xml:space="preserve">
          <source>The first line of the body of function &lt;code&gt;foo&lt;/code&gt; is executed synchronously, with the await expression configured with the pending promise. Progress through &lt;code&gt;foo&lt;/code&gt; is then suspended and control is yielded back to the function that called &lt;code&gt;foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b8fb4edcec4c4a905b93de6600a7d06138fb65" translate="yes" xml:space="preserve">
          <source>The first one is an &lt;em&gt;O(&lt;var&gt;n&lt;/var&gt;)&lt;/em&gt; set and search (&lt;var&gt;n&lt;/var&gt; being the number of keys in the map) since both operations must iterate through the list of keys to find a matching value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1845f10e7d138b68d6c058652b5f826e70a6408a" translate="yes" xml:space="preserve">
          <source>The first one is much smaller and more performant, but does not work when using the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875815fb2257b9e334b66f58bfb0281f9e9c9f44" translate="yes" xml:space="preserve">
          <source>The first time the callback is called, &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; can be one of two values. If &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided in the call to &lt;code&gt;reduce()&lt;/code&gt;, then &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; will be equal to &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt;, and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; will be equal to the first value in the array. If no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; is provided, then &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; will be equal to the first value in the array, and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; will be equal to the second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f839bd6e11cf838ef3faf30d60b9b58c1b93524" translate="yes" xml:space="preserve">
          <source>The first time the callback is called, &lt;code&gt;accumulator&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; can be one of two values. If &lt;code&gt;initialValue&lt;/code&gt; is provided in the call to &lt;code&gt;reduce()&lt;/code&gt;, then &lt;code&gt;accumulator&lt;/code&gt; will be equal to &lt;code&gt;initialValue&lt;/code&gt;, and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the first value in the array. If no &lt;code&gt;initialValue&lt;/code&gt; is provided, then &lt;code&gt;accumulator&lt;/code&gt; will be equal to the first value in the array, and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the second.</source>
          <target state="translated">При первом вызове обратного вызова &lt;code&gt;accumulator&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; могут иметь одно из двух значений. Если &lt;code&gt;initialValue&lt;/code&gt; обеспечивается в вызове &lt;code&gt;reduce()&lt;/code&gt; , то &lt;code&gt;accumulator&lt;/code&gt; будет равен &lt;code&gt;initialValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; будет равен первым значение в массиве. Если &lt;code&gt;initialValue&lt;/code&gt; не указано, &lt;code&gt;accumulator&lt;/code&gt; будет равен первому значению в массиве, а &lt;code&gt;currentValue&lt;/code&gt; будет равно второму.</target>
        </trans-unit>
        <trans-unit id="b780c1625556bb97e02bb2df7f774177e170222b" translate="yes" xml:space="preserve">
          <source>The first time the callback is called, &lt;code&gt;previousValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; can be one of two values. If &lt;code&gt;initialValue&lt;/code&gt; is provided in the call to &lt;code&gt;reduce&lt;/code&gt;, then &lt;code&gt;previousValue&lt;/code&gt; will be equal to &lt;code&gt;initialValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the first value in the typed array. If no &lt;code&gt;initialValue&lt;/code&gt; was provided, then &lt;code&gt;previousValue&lt;/code&gt; will be equal to the first value in the typed array and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the second.</source>
          <target state="translated">При первом вызове обратного вызова &lt;code&gt;previousValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; могут быть одним из двух значений. Если &lt;code&gt;initialValue&lt;/code&gt; предусмотрено в вызове &lt;code&gt;reduce&lt;/code&gt; , то &lt;code&gt;previousValue&lt;/code&gt; будет равно &lt;code&gt;initialValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; будет равен первым значение набранного массива. Если значение &lt;code&gt;initialValue&lt;/code&gt; не указано, то &lt;code&gt;previousValue&lt;/code&gt; будет равно первому значению в типизированном массиве, а &lt;code&gt;currentValue&lt;/code&gt; будет равно второму.</target>
        </trans-unit>
        <trans-unit id="53aed0f9f0e168d572e9df10eac3b60e872c5cc5" translate="yes" xml:space="preserve">
          <source>The first time the function is called, the &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; can be one of two values. If an &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; was provided in the call to &lt;code&gt;reduceRight&lt;/code&gt;, then &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; will be equal to &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; will be equal to the last value in the array. If no &lt;code&gt;&lt;var&gt;initialValue&lt;/var&gt;&lt;/code&gt; was provided, then &lt;code&gt;&lt;var&gt;accumulator&lt;/var&gt;&lt;/code&gt; will be equal to the last value in the array and &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; will be equal to the second-to-last value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ea80c0a2f8772cd47bde2d54d604e56483dbc4" translate="yes" xml:space="preserve">
          <source>The first time the function is called, the &lt;code&gt;accumulator&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; can be one of two values. If an &lt;code&gt;initialValue&lt;/code&gt; was provided in the call to &lt;code&gt;reduceRight&lt;/code&gt;, then &lt;code&gt;accumulator&lt;/code&gt; will be equal to &lt;code&gt;initialValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the last value in the array. If no &lt;code&gt;initialValue&lt;/code&gt; was provided, then &lt;code&gt;accumulator&lt;/code&gt; will be equal to the last value in the array and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the second-to-last value.</source>
          <target state="translated">При первом вызове функции &lt;code&gt;accumulator&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; могут иметь одно из двух значений. Если &lt;code&gt;initialValue&lt;/code&gt; был предоставлен в вызове &lt;code&gt;reduceRight&lt;/code&gt; , то &lt;code&gt;accumulator&lt;/code&gt; будет равен &lt;code&gt;initialValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; будет равно последнему значению в массиве. Если значение &lt;code&gt;initialValue&lt;/code&gt; не задано , &lt;code&gt;accumulator&lt;/code&gt; будет равен последнему значению в массиве, а &lt;code&gt;currentValue&lt;/code&gt; будет равен предпоследнему значению.</target>
        </trans-unit>
        <trans-unit id="fcd4413a46ca7b4a40f9a396ef6da68bf067bd4c" translate="yes" xml:space="preserve">
          <source>The first time the function is called, the &lt;code&gt;previousValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; can be one of two values. If an &lt;code&gt;initialValue&lt;/code&gt; was provided in the call to &lt;code&gt;reduceRight&lt;/code&gt;, then &lt;code&gt;previousValue&lt;/code&gt; will be equal to &lt;code&gt;initialValue&lt;/code&gt; and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the last value in the typed array. If no &lt;code&gt;initialValue&lt;/code&gt; was provided, then &lt;code&gt;previousValue&lt;/code&gt; will be equal to the last value in the typed array and &lt;code&gt;currentValue&lt;/code&gt; will be equal to the second-to-last value.</source>
          <target state="translated">При первом вызове функции &lt;code&gt;previousValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; могут быть одним из двух значений. Если &lt;code&gt;initialValue&lt;/code&gt; был предоставлен в вызове &lt;code&gt;reduceRight&lt;/code&gt; , то &lt;code&gt;previousValue&lt;/code&gt; будет равно &lt;code&gt;initialValue&lt;/code&gt; и &lt;code&gt;currentValue&lt;/code&gt; будет равен последним значение в типизированном массиве. Если значение &lt;code&gt;initialValue&lt;/code&gt; не было указано, то &lt;code&gt;previousValue&lt;/code&gt; будет равно последнему значению в типизированном массиве, а &lt;code&gt;currentValue&lt;/code&gt; будет равно предпоследнему значению.</target>
        </trans-unit>
        <trans-unit id="e3e25923e75e57fe4c8cd666578c83d081cde684" translate="yes" xml:space="preserve">
          <source>The first value to compare.</source>
          <target state="translated">Первое значение для сравнения.</target>
        </trans-unit>
        <trans-unit id="9b15ba4c6a8fb0f073e1bccafbc57018dbc9e83f" translate="yes" xml:space="preserve">
          <source>The first way is the &lt;code&gt;//&lt;/code&gt; comment; this makes all text following it on the same line into a comment. For example:</source>
          <target state="translated">Первый способ - это &lt;code&gt;//&lt;/code&gt; комментарий; это превращает весь следующий за ним текст в одной строке в комментарий. Например:</target>
        </trans-unit>
        <trans-unit id="9041df23a8ecb0dc00120e416d6e0a9bb6f9c8d7" translate="yes" xml:space="preserve">
          <source>The first way is the &lt;code&gt;//&lt;/code&gt; comment&lt;strong&gt;;&lt;/strong&gt; this makes all text following it on the same line into a comment. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb49b60e3be5a52747d92e8a22a6d16279f2fe8" translate="yes" xml:space="preserve">
          <source>The fixed version:</source>
          <target state="translated">Исправленная версия:</target>
        </trans-unit>
        <trans-unit id="c8c39436f5730eb348e872deaf1fa667ab721807" translate="yes" xml:space="preserve">
          <source>The flat method removes empty slots in arrays:</source>
          <target state="translated">Плоский метод удаляет пустые слоты в массивах:</target>
        </trans-unit>
        <trans-unit id="6b0d4d52f56cccbfbab6df299402dd57a39fb92c" translate="yes" xml:space="preserve">
          <source>The following (contrived) example updates an object's properties from each entry in the array:</source>
          <target state="translated">Следующий (нарисованный)пример обновляет свойства объекта из каждого элемента массива:</target>
        </trans-unit>
        <trans-unit id="19d94a7fc32d04cec65c6d24ddf49ca8f47ec558" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;for&lt;/code&gt; cycle calculates the offset position of a node in the &lt;code&gt;&lt;var&gt;final-expression&lt;/var&gt;&lt;/code&gt; section, and therefore it does not require the use of a &lt;code&gt;&lt;var&gt;statement&lt;/var&gt;&lt;/code&gt; section, a semicolon is used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="637b63e14680d42936462840375bb75b4e4b3acf" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;for&lt;/code&gt; cycle calculates the offset position of a node in the &lt;em&gt;[final-expression]&lt;/em&gt; section, and therefore it does not require the use of a &lt;code&gt;statement&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement&lt;/code&gt; section, a semicolon is used instead.</source>
          <target state="translated">Следующая команда &lt;code&gt;for&lt;/code&gt; cycle вычисляет позицию смещения узла в разделе &lt;em&gt;[final-expression]&lt;/em&gt; , и, следовательно, не требует использования секции &lt;code&gt;statement&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;block&quot;&gt;block&lt;/a&gt; statement&lt;/code&gt; , вместо этого используется точка с запятой.</target>
        </trans-unit>
        <trans-unit id="60d614556ee4f8fb1680ea3ab2ac38d5027c5e26" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;for&lt;/code&gt; statement starts by declaring the variable &lt;code&gt;i&lt;/code&gt; and initializing it to &lt;code&gt;0&lt;/code&gt;. It checks that &lt;code&gt;i&lt;/code&gt; is less than nine, performs the two succeeding statements, and increments &lt;code&gt;i&lt;/code&gt; by 1 after each pass through the loop.</source>
          <target state="translated">Следующий оператор &lt;code&gt;for&lt;/code&gt; начинается с объявления переменной &lt;code&gt;i&lt;/code&gt; и инициализации ее значением &lt;code&gt;0&lt;/code&gt; . Он проверяет, что &lt;code&gt;i&lt;/code&gt; меньше девяти, выполняет два последующих оператора и увеличивает &lt;code&gt;i&lt;/code&gt; на 1 после каждого прохождения цикла.</target>
        </trans-unit>
        <trans-unit id="c13b20cee0f661617bd8015d0c1f583881d10e96" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;while&lt;/code&gt; loop iterates as long as &lt;code&gt;n&lt;/code&gt; is less than three.</source>
          <target state="translated">Следующие в &lt;code&gt;while&lt;/code&gt; итерации цикла до тех пор , как &lt;code&gt;n&lt;/code&gt; меньше , чем три.</target>
        </trans-unit>
        <trans-unit id="bd682eef69193f4fdb44336fd479f91bb7ada667" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;with&lt;/code&gt; statement specifies that the &lt;a href=&quot;../global_objects/math&quot;&gt;&lt;code&gt;Math&lt;/code&gt;&lt;/a&gt; object is the default object. The statements following the &lt;code&gt;with&lt;/code&gt; statement refer to the &lt;a href=&quot;../global_objects/math/pi&quot;&gt;&lt;code&gt;PI&lt;/code&gt;&lt;/a&gt; property and the &lt;a href=&quot;../global_objects/math/cos&quot;&gt;&lt;code&gt;cos&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../global_objects/math/sin&quot;&gt;&lt;code&gt;sin&lt;/code&gt;&lt;/a&gt; methods, without specifying an object. JavaScript assumes the &lt;code&gt;Math&lt;/code&gt; object for these references.</source>
          <target state="translated">Следующая инструкция &lt;code&gt;with&lt;/code&gt; указывает, что объект &lt;a href=&quot;../global_objects/math&quot;&gt; &lt;code&gt;Math&lt;/code&gt; &lt;/a&gt; является объектом по умолчанию. Операторы, следующие за оператором &lt;code&gt;with&lt;/code&gt; , относятся к свойству &lt;a href=&quot;../global_objects/math/pi&quot;&gt; &lt;code&gt;PI&lt;/code&gt; &lt;/a&gt; и методам &lt;a href=&quot;../global_objects/math/cos&quot;&gt; &lt;code&gt;cos&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../global_objects/math/sin&quot;&gt; &lt;code&gt;sin&lt;/code&gt; &lt;/a&gt; без указания объекта. JavaScript предполагает использование объекта &lt;code&gt;Math&lt;/code&gt; для этих ссылок.</target>
        </trans-unit>
        <trans-unit id="5b9e90596ec38fff87485beade9e5f8deb49143a" translate="yes" xml:space="preserve">
          <source>The following are only reserved when they are found in module code:</source>
          <target state="translated">Следующее зарезервировано только в том случае,если оно найдено в коде модуля:</target>
        </trans-unit>
        <trans-unit id="c0c352e275f96b24c86f4d19b3dc013b58dfed6e" translate="yes" xml:space="preserve">
          <source>The following are only reserved when they are found in strict mode code:</source>
          <target state="translated">Следующее зарезервировано только в строгом режиме:</target>
        </trans-unit>
        <trans-unit id="94a1f4c078dadf907ee9c9a9ba75dd45389036ba" translate="yes" xml:space="preserve">
          <source>The following are reserved as future keywords by older ECMAScript specifications (ECMAScript 1 till 3).</source>
          <target state="translated">Следующие ключевые слова зарезервированы в качестве будущих ключевых слов старыми спецификациями ECMAScript (ECMAScript 1-3).</target>
        </trans-unit>
        <trans-unit id="14042eda201db9dbf94f4c7e43f79039471fa58d" translate="yes" xml:space="preserve">
          <source>The following are reserved as future keywords by the ECMAScript specification. They have no special functionality at present, but they might at some future time, so they cannot be used as identifiers.</source>
          <target state="translated">Следующее зарезервировано спецификацией ECMAScript в качестве будущих ключевых слов.В настоящее время они не имеют специальной функциональности,но могут в будущем использоваться в качестве идентификаторов.</target>
        </trans-unit>
        <trans-unit id="a4e1da54087efaf8adb80147425713d13e38e3f4" translate="yes" xml:space="preserve">
          <source>The following assigns the &lt;code&gt;toString()&lt;/code&gt; value of a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to &lt;code&gt;myVar&lt;/code&gt;:</source>
          <target state="translated">Следующее присваивает &lt;code&gt;myVar&lt;/code&gt; значение &lt;code&gt;toString()&lt;/code&gt; объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="cae1e8968e0d8a4226ccdf6fb081349da0152b2c" translate="yes" xml:space="preserve">
          <source>The following call, which does not specify a time zone will be set to 2019-01-01 at 00:00:00 in the local timezone of the system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e09e75af226c19f33d52f40e585da0f7a8b4f94" translate="yes" xml:space="preserve">
          <source>The following calls all return &lt;code&gt;1546300800000&lt;/code&gt;. The first according to ES5 will imply UTC time, and the others are specifying UTC timezone via the ISO date specification (&lt;code&gt;Z&lt;/code&gt; and &lt;code&gt;+00:00&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08ac54043b648876203b3e3803e638644ac0bbc" translate="yes" xml:space="preserve">
          <source>The following code also uses &lt;code&gt;break&lt;/code&gt; statements with labeled blocks but generates a Syntax Error because its &lt;code&gt;break&lt;/code&gt; statement is within &lt;code&gt;block_1&lt;/code&gt; but references &lt;code&gt;block_2&lt;/code&gt;. A &lt;code&gt;break&lt;/code&gt; statement must always be nested within any label it references.</source>
          <target state="translated">Следующий код также использует операторы &lt;code&gt;break&lt;/code&gt; с помеченными блоками, но генерирует синтаксическую ошибку, поскольку его оператор &lt;code&gt;break&lt;/code&gt; находится внутри &lt;code&gt;block_1&lt;/code&gt; но ссылается на &lt;code&gt;block_2&lt;/code&gt; . &lt;code&gt;break&lt;/code&gt; заявление всегда должны быть вложены в любой этикетке ссылки.</target>
        </trans-unit>
        <trans-unit id="80178a12951e6b00ea750b365c3ae966140db726" translate="yes" xml:space="preserve">
          <source>The following code also uses &lt;code&gt;break&lt;/code&gt; statements with labeled blocks, but generates a &lt;code&gt;SyntaxError&lt;/code&gt; because its &lt;code&gt;break&lt;/code&gt; statement is within &lt;code&gt;block_1&lt;/code&gt; but references &lt;code&gt;block_2&lt;/code&gt;. A &lt;code&gt;break&lt;/code&gt; statement must always be nested within any label it references.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc61c85b553d7e6d7463201fbcc2c38c73015b80" translate="yes" xml:space="preserve">
          <source>The following code concatenates nested arrays and demonstrates retention of references:</source>
          <target state="translated">Следующий код конкатенует вложенные массивы и демонстрирует сохранение ссылок:</target>
        </trans-unit>
        <trans-unit id="721189f7a2b285c23287b114247606fc04335c83" translate="yes" xml:space="preserve">
          <source>The following code concatenates three arrays:</source>
          <target state="translated">Следующий код объединяет три массива:</target>
        </trans-unit>
        <trans-unit id="88e4d6b9479b0ed44364219826710b43fc799fde" translate="yes" xml:space="preserve">
          <source>The following code concatenates three values to an array:</source>
          <target state="translated">Следующий код объединяет три значения в массив:</target>
        </trans-unit>
        <trans-unit id="d88678328d1fce2a8f610a73f6b66390f32726cb" translate="yes" xml:space="preserve">
          <source>The following code concatenates two arrays:</source>
          <target state="translated">Следующий код объединяет два массива:</target>
        </trans-unit>
        <trans-unit id="110cf46adcf71aba1fd2a9d72394b04b71419aa9" translate="yes" xml:space="preserve">
          <source>The following code creates a &lt;code&gt;Function&lt;/code&gt; object that takes two arguments.</source>
          <target state="translated">Следующий код создает объект &lt;code&gt;Function&lt;/code&gt; , который принимает два аргумента.</target>
        </trans-unit>
        <trans-unit id="46f073b8de326c165cbd60cc08891029d5c55341" translate="yes" xml:space="preserve">
          <source>The following code creates a copy of a given object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9849a78b721a404fa7122bbef9cb4e417ecb54b" translate="yes" xml:space="preserve">
          <source>The following code creates a copy of a given object. There are different ways to create a copy of an object; the following is just one way and is presented to explain how &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; works by using ECMAScript 5 &lt;code&gt;Object.*&lt;/code&gt; meta property functions.</source>
          <target state="translated">Следующий код создает копию данного объекта. Есть разные способы создать копию объекта; Следующее является лишь одним из способов и представлено для объяснения того, как &lt;code&gt;Array.prototype.forEach()&lt;/code&gt; работает с использованием функций мета-свойств ECMAScript 5 &lt;code&gt;Object.*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71484bb1315e7ead24501719aa5731a2deb6cc7d" translate="yes" xml:space="preserve">
          <source>The following code creates an object type &lt;code&gt;Car&lt;/code&gt; and an instance of that object type, &lt;code&gt;mycar&lt;/code&gt;. The &lt;code&gt;instanceof&lt;/code&gt; operator demonstrates that the &lt;code&gt;mycar&lt;/code&gt; object is of type &lt;code&gt;Car&lt;/code&gt; and of type &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Следующий код создает объектный тип &lt;code&gt;Car&lt;/code&gt; и экземпляр этого объектного типа &lt;code&gt;mycar&lt;/code&gt; . Оператор &lt;code&gt;instanceof&lt;/code&gt; демонстрирует, что объект &lt;code&gt;mycar&lt;/code&gt; имеет тип &lt;code&gt;Car&lt;/code&gt; и тип &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="67ba62584852fb890616fcc0a2c09fda249c7266" translate="yes" xml:space="preserve">
          <source>The following code creates an object with three properties and the keys are &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, &lt;code&gt;&quot;age&quot;&lt;/code&gt; and &lt;code&gt;&quot;baz&quot;&lt;/code&gt;. The values of these keys are a string &lt;code&gt;&quot;bar&quot;&lt;/code&gt;, the number &lt;code&gt;42&lt;/code&gt;, and another object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28fa1c2b41f239a7356294e9946fbce3f7aae1b" translate="yes" xml:space="preserve">
          <source>The following code creates and assigns &lt;code&gt;dogToString()&lt;/code&gt; to override the default &lt;code&gt;toString()&lt;/code&gt; method. This function generates a string containing the &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;breed&lt;/code&gt;, &lt;code&gt;color&lt;/code&gt;, and &lt;code&gt;sex&lt;/code&gt; of the object, in the form &quot;&lt;code&gt;property = value;&lt;/code&gt;&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f1f0dc224fbf380d776e34e3dd118d0155b6b5" translate="yes" xml:space="preserve">
          <source>The following code creates and assigns &lt;code&gt;dogToString()&lt;/code&gt; to override the default &lt;code&gt;toString()&lt;/code&gt; method. This function generates a string containing the name, breed, color, and sex of the object, in the form &quot;&lt;code&gt;property = value;&lt;/code&gt;&quot;.</source>
          <target state="translated">Следующий код создает и назначает &lt;code&gt;dogToString()&lt;/code&gt; для переопределения метода &lt;code&gt;toString()&lt;/code&gt; по умолчанию . Эта функция генерирует строку, содержащую имя, породу, цвет и пол объекта в форме &amp;laquo; &lt;code&gt;property = value;&lt;/code&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f9ae4575b00eb655fe2bc58c8c2ed78bc0bf00a2" translate="yes" xml:space="preserve">
          <source>The following code creates the &lt;code&gt;myFish&lt;/code&gt; array containing four elements, then removes its last element.</source>
          <target state="translated">Следующий код создает массив &lt;code&gt;myFish&lt;/code&gt; , содержащий четыре элемента, а затем удаляет его последний элемент.</target>
        </trans-unit>
        <trans-unit id="57ea99bca4b49baa8b5033cc82ddd78a6fa41b95" translate="yes" xml:space="preserve">
          <source>The following code creates the &lt;code&gt;myFish&lt;/code&gt; array-like object containing four elements and a length parameter, then removes its last element and decrements the length parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee25846ad2f6848444fd67100bb8495aeb28612" translate="yes" xml:space="preserve">
          <source>The following code creates the &lt;code&gt;sports&lt;/code&gt; array containing two elements, then appends two elements to it. The &lt;code&gt;total&lt;/code&gt; variable contains the new length of the array.</source>
          <target state="translated">Следующий код создает массив &lt;code&gt;sports&lt;/code&gt; содержащий два элемента, а затем добавляет к нему два элемента. &lt;code&gt;total&lt;/code&gt; переменная содержит новую длину массива.</target>
        </trans-unit>
        <trans-unit id="5413c9f47f7525067295e645eb7a51acc99bc3ba" translate="yes" xml:space="preserve">
          <source>The following code declares a function that returns the total amount of sales, when given the number of units sold of products &lt;code&gt;a&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt;.</source>
          <target state="translated">Следующий код объявляет функцию, которая возвращает общий объем продаж, если задано количество проданных единиц продуктов &lt;code&gt;a&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; и &lt;code&gt;c&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ac5f417776932fa98a727d7e5e02064aafd61d7" translate="yes" xml:space="preserve">
          <source>The following code defines the &lt;code&gt;Dog&lt;/code&gt; object type and creates &lt;code&gt;theDog&lt;/code&gt;, an object of type &lt;code&gt;Dog&lt;/code&gt;:</source>
          <target state="translated">Следующий код определяет тип объекта &lt;code&gt;Dog&lt;/code&gt; и создает &lt;code&gt;theDog&lt;/code&gt; , объект типа &lt;code&gt;Dog&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="bfb04ee46c737543b1cf531796942fcab6e602ea" translate="yes" xml:space="preserve">
          <source>The following code displays the &lt;code&gt;myFish&lt;/code&gt; array before and after removing its first element. It also displays the removed element:</source>
          <target state="translated">Следующий код отображает массив &lt;code&gt;myFish&lt;/code&gt; до и после удаления его первого элемента. Также отображается удаленный элемент:</target>
        </trans-unit>
        <trans-unit id="ffdac7d52063387499a1184a4731dd0d49cf9966" translate="yes" xml:space="preserve">
          <source>The following code divides two numeric values. If the result is greater than or equal to &lt;code&gt;MIN_VALUE&lt;/code&gt;, the &lt;code&gt;func1&lt;/code&gt; function is called; otherwise, the &lt;code&gt;func2&lt;/code&gt; function is called.</source>
          <target state="translated">Следующий код делит два числовых значения. Если результат больше или равен &lt;code&gt;MIN_VALUE&lt;/code&gt; , &lt;code&gt;func1&lt;/code&gt; функция func1 ; в противном случае &lt;code&gt;func2&lt;/code&gt; функция func2 .</target>
        </trans-unit>
        <trans-unit id="34ea08a0429c988f788b3868433bf1a2db2c2010" translate="yes" xml:space="preserve">
          <source>The following code has a &lt;code&gt;break&lt;/code&gt; statement that terminates the &lt;a href=&quot;switch&quot;&gt;&lt;code&gt;switch&lt;/code&gt;&lt;/a&gt; statement when a case is matched and the corresponding code has ran</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aebfbac775644f52742648c8188228c29aec3c2" translate="yes" xml:space="preserve">
          <source>The following code improperly initializes the proxy. The &lt;code&gt;target&lt;/code&gt; in Proxy initialization must itself be a valid constructor for the &lt;code&gt;new&lt;/code&gt; operator.</source>
          <target state="translated">Следующий код неправильно инициализирует прокси. &lt;code&gt;target&lt;/code&gt; при инициализации прокси сам должен быть действительным конструктор для &lt;code&gt;new&lt;/code&gt; оператора.</target>
        </trans-unit>
        <trans-unit id="ac713b40525625199d7a101c2127f6d4f76c80da" translate="yes" xml:space="preserve">
          <source>The following code is the declaration of an example generator function.</source>
          <target state="translated">Следующий код является декларацией функции генератора примеров.</target>
        </trans-unit>
        <trans-unit id="1b2d53d50b851e948adb1e6d5da2847f3cf5987b" translate="yes" xml:space="preserve">
          <source>The following code logs a line for each element in a &lt;code&gt;Set&lt;/code&gt; object:</source>
          <target state="translated">Следующий код регистрирует строку для каждого элемента в объекте &lt;code&gt;Set&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0cbf9e164e68b93693f30543959a7f06e0dec2e9" translate="yes" xml:space="preserve">
          <source>The following code logs a line for each element in a typed array:</source>
          <target state="translated">Следующий код регистрирует строку для каждого элемента в типизированном массиве:</target>
        </trans-unit>
        <trans-unit id="9572c259a051431f4f450301d23fc521a93a28a7" translate="yes" xml:space="preserve">
          <source>The following code logs a line for each element in an &lt;code&gt;Map&lt;/code&gt; object:</source>
          <target state="translated">Следующий код регистрирует строку для каждого элемента в объекте &lt;code&gt;Map&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="05e676495dcfad5f9d42d6c2de9e3bca1f4630c4" translate="yes" xml:space="preserve">
          <source>The following code logs a line for each element in an array:</source>
          <target state="translated">Следующий код регистрирует строку для каждого элемента массива:</target>
        </trans-unit>
        <trans-unit id="555c0c32448becb397f810790a2420788ccadd71" translate="yes" xml:space="preserve">
          <source>The following code multiplies two numeric values. If the result is less than or equal to &lt;code&gt;MAX_VALUE&lt;/code&gt;, the &lt;code&gt;func1&lt;/code&gt; function is called; otherwise, the &lt;code&gt;func2&lt;/code&gt; function is called.</source>
          <target state="translated">Следующий код умножает два числовых значения. Если результат меньше или равен &lt;code&gt;MAX_VALUE&lt;/code&gt; , &lt;code&gt;func1&lt;/code&gt; функция func1 ; в противном случае &lt;code&gt;func2&lt;/code&gt; функция func2 .</target>
        </trans-unit>
        <trans-unit id="1dad9ae9491ee1eb3386f8bbf689412c9a122c35" translate="yes" xml:space="preserve">
          <source>The following code prints the values of the diagonal elements in the array:</source>
          <target state="translated">Следующий код печатает значения диагональных элементов в массиве:</target>
        </trans-unit>
        <trans-unit id="446e09962f6db0b1d8da76d9107b976aea69c91f" translate="yes" xml:space="preserve">
          <source>The following code shows examples of the &lt;code&gt;!&lt;/code&gt; (logical NOT) operator.</source>
          <target state="translated">В следующем коде показаны примеры &lt;code&gt;!&lt;/code&gt; (логическое НЕ) оператор.</target>
        </trans-unit>
        <trans-unit id="657425e8ce502911d7f0c1f47f8e38c9591acb40" translate="yes" xml:space="preserve">
          <source>The following code shows examples of the &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (logical AND) operator.</source>
          <target state="translated">В следующем коде показаны примеры оператора &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; (логическое И).</target>
        </trans-unit>
        <trans-unit id="087b529d19673cc07b3d2ea0403068125326b88d" translate="yes" xml:space="preserve">
          <source>The following code shows examples of the &lt;code&gt;||&lt;/code&gt; (logical OR) operator.</source>
          <target state="translated">В следующем коде показаны примеры &lt;code&gt;||&lt;/code&gt; (логическое ИЛИ) оператор.</target>
        </trans-unit>
        <trans-unit id="40c22740464b0d18057f074a4ca9a6f4c262fe5f" translate="yes" xml:space="preserve">
          <source>The following code shows how &lt;code&gt;map&lt;/code&gt; works when a function requiring one argument is used with it. The argument will automatically be assigned from each element of the array as &lt;code&gt;map&lt;/code&gt; loops through the original array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6128024108440d20cd751bb31df0569a7704752f" translate="yes" xml:space="preserve">
          <source>The following code shows how map works when a function requiring one argument is used with it. The argument will automatically be assigned from each element of the array as map loops through the original array.</source>
          <target state="translated">Следующий код показывает,как работает карта,когда с ней используется функция,требующая одного аргумента.Аргумент будет автоматически присваиваться из каждого элемента массива в виде циклов map через исходный массив.</target>
        </trans-unit>
        <trans-unit id="93cbd7a9b13ccbb2681320f45c12dc3e14c7a3b6" translate="yes" xml:space="preserve">
          <source>The following code shows how map works when a function requiring one argument is used with it. The argument will automatically be assigned to each element of the typed array as map loops through the original typed array.</source>
          <target state="translated">Следующий код показывает,как работает карта,когда с ней используется функция,требующая одного аргумента.Аргумент будет автоматически присваиваться каждому элементу типизированного массива в виде циклов map через исходный типизированный массив.</target>
        </trans-unit>
        <trans-unit id="23544ad4adcdcbd6a5e3021ebfaf4350ede55f3a" translate="yes" xml:space="preserve">
          <source>The following code takes a typed array and creates a new typed array containing the square roots of the numbers in the first typed array.</source>
          <target state="translated">Следующий код берет типизированный массив и создает новый типизированный массив,содержащий квадратные корни чисел в первом типизированном массиве.</target>
        </trans-unit>
        <trans-unit id="91dfb78c282609f0ca90e823f00a7c1bcabc053d" translate="yes" xml:space="preserve">
          <source>The following code takes an array of numbers and creates a new array containing the square roots of the numbers in the first array.</source>
          <target state="translated">Следующий код берет массив чисел и создает новый массив,содержащий квадратные корни чисел в первом массиве.</target>
        </trans-unit>
        <trans-unit id="990fbd2a82909cc731cb6de1db1e4e7e5988d7ca" translate="yes" xml:space="preserve">
          <source>The following code takes an array of objects and creates a new array containing the newly reformatted objects.</source>
          <target state="translated">Следующий код берет массив объектов и создает новый массив,содержащий вновь переформатированные объекты.</target>
        </trans-unit>
        <trans-unit id="b6a73ccf50bc94f930d475afad31b662aad507c8" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a4ae609986c2bf700187679a0155e67f383001d4" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/getownpropertydescriptor&quot;&gt;&lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/getownpropertydescriptor&quot;&gt; &lt;code&gt;Object.getOwnPropertyDescriptor()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7fbdba357c15d5ef4893b679bc519284fa94e89" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2316ce910c2a16a8f31a8d35f44ce184b5d5110b" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/isextensible&quot;&gt;&lt;code&gt;Object.isExtensible()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/isextensible&quot;&gt; &lt;code&gt;Object.isExtensible()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f43f449540c9caa7886889ce45d41a2cbc1b2b1d" translate="yes" xml:space="preserve">
          <source>The following code traps &lt;a href=&quot;../../object/preventextensions&quot;&gt;&lt;code&gt;Object.preventExtensions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../object/preventextensions&quot;&gt; &lt;code&gt;Object.preventExtensions()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="36b83b244b13ce0e00fbb489c5813644ab6b0abf" translate="yes" xml:space="preserve">
          <source>The following code traps a function call.</source>
          <target state="translated">Следующий код ловит вызов функции.</target>
        </trans-unit>
        <trans-unit id="4ee4a393b6cbc0d511ffdc59d8483abe6e9b1be3" translate="yes" xml:space="preserve">
          <source>The following code traps getting a property value.</source>
          <target state="translated">Следующие кодовые ловушки получают стоимость недвижимости.</target>
        </trans-unit>
        <trans-unit id="ab8ce6ea525ee3a1bd25238d16dafa8cfd2ab091" translate="yes" xml:space="preserve">
          <source>The following code traps setting a property value.</source>
          <target state="translated">Следующие кодовые ловушки устанавливают значение свойства.</target>
        </trans-unit>
        <trans-unit id="4a3d5a01f344846da6a7dad4757ca86f93853d89" translate="yes" xml:space="preserve">
          <source>The following code traps the &lt;a href=&quot;../../../operators/delete&quot;&gt;&lt;code&gt;delete&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">Следующий код перехватывает оператор &lt;a href=&quot;../../../operators/delete&quot;&gt; &lt;code&gt;delete&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e483290e7f76f08d2648b23c16bc2204b6ff38ba" translate="yes" xml:space="preserve">
          <source>The following code traps the &lt;a href=&quot;../../../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">Следующий код перехватывает оператор &lt;a href=&quot;../../../operators/in&quot;&gt; &lt;code&gt;in&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="25504055279ad082d3562335a453315f18588211" translate="yes" xml:space="preserve">
          <source>The following code traps the &lt;a href=&quot;../../../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator.</source>
          <target state="translated">Следующий код перехватывает &lt;a href=&quot;../../../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; оператор.</target>
        </trans-unit>
        <trans-unit id="79f411fcb5d68a6edc77d42c81be12111b8fbca2" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;break&lt;/code&gt; statements with labeled blocks. A &lt;code&gt;break&lt;/code&gt; statement must be nested within any label it references. Notice that &lt;code&gt;inner_block&lt;/code&gt; is nested within &lt;code&gt;outer_block&lt;/code&gt;.</source>
          <target state="translated">В следующем коде используются операторы &lt;code&gt;break&lt;/code&gt; с помеченными блоками. &lt;code&gt;break&lt;/code&gt; оператор должен быть вложен в любой этикетке ссылки. Обратите внимание, что &lt;code&gt;inner_block&lt;/code&gt; вложен в &lt;code&gt;outer_block&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a5972c72258c23f426a231b566e63137af62bd5" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;instanceof&lt;/code&gt; to demonstrate that &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Date&lt;/code&gt; objects are also of type &lt;code&gt;Object&lt;/code&gt; (they are derived from &lt;code&gt;Object&lt;/code&gt;).</source>
          <target state="translated">В следующем коде используется &lt;code&gt;instanceof&lt;/code&gt; , чтобы продемонстрировать, что объекты &lt;code&gt;String&lt;/code&gt; и &lt;code&gt;Date&lt;/code&gt; также относятся к типу &lt;code&gt;Object&lt;/code&gt; (они являются производными от &lt;code&gt;Object&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef022a2af0822c75bf6d97a3907794c965929c70" translate="yes" xml:space="preserve">
          <source>The following code violates an invariant.</source>
          <target state="translated">Следующий код нарушает инвариант.</target>
        </trans-unit>
        <trans-unit id="2cccfb58d874a9ff644e87a991d031d323732fb2" translate="yes" xml:space="preserve">
          <source>The following code violates the invariant.</source>
          <target state="translated">Следующий код нарушает инвариант.</target>
        </trans-unit>
        <trans-unit id="be65d173a4ebcaa7bda004853274c64fd29e4be8" translate="yes" xml:space="preserve">
          <source>The following code was used to check the value of &lt;code&gt;arguments.caller&lt;/code&gt; in a function, but doesn't work anymore.</source>
          <target state="translated">Следующий код использовался для проверки значения &lt;code&gt;arguments.caller&lt;/code&gt; в функции, но больше не работает.</target>
        </trans-unit>
        <trans-unit id="f66a2585b75f449626494103e61d755dfb30114c" translate="yes" xml:space="preserve">
          <source>The following code will throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Следующий код вызовет &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7814b38c4660f2f789f848f5e4d62c2ad7b2f22d" translate="yes" xml:space="preserve">
          <source>The following code works fine in ES5 and below. However, in ECMAScript 2015 and later, the &lt;a href=&quot;../array/keys&quot;&gt;&lt;code&gt;Array.prototype.keys()&lt;/code&gt;&lt;/a&gt; method was introduced. That means that inside &lt;code&gt;with&lt;/code&gt; environment &quot;keys&quot; would now be the method and not the variable. That's when the &lt;code&gt;unscopable&lt;/code&gt;s symbol was introduced. A built-in &lt;code&gt;unscopables&lt;/code&gt; setting is implemented as &lt;a href=&quot;../array/@@unscopables&quot;&gt;&lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt;&lt;/a&gt; to prevent that some of the Array methods are being scoped into the &lt;code&gt;with&lt;/code&gt; statement.</source>
          <target state="translated">Следующий код отлично работает в ES5 и ниже. Однако в ECMAScript 2015 и более поздних &lt;a href=&quot;../array/keys&quot;&gt; &lt;code&gt;Array.prototype.keys()&lt;/code&gt; &lt;/a&gt; был представлен метод Array.prototype.keys () . Это означает , что внутри &lt;code&gt;with&lt;/code&gt; &amp;laquo;ключами&amp;raquo; среды теперь будет метод , а не переменная. Именно тогда был введен &lt;code&gt;unscopable&lt;/code&gt; символ s. Встроенный параметр &lt;code&gt;unscopables&lt;/code&gt; реализован как &lt;a href=&quot;../array/@@unscopables&quot;&gt; &lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt; &lt;/a&gt; чтобы предотвратить включение некоторых методов Array в оператор &lt;code&gt;with&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65ed457c8a763018d44cf10f276cc37398e395c2" translate="yes" xml:space="preserve">
          <source>The following code works fine in ES5 and below. However, in ECMAScript 2015 and later, the &lt;a href=&quot;keys&quot;&gt;&lt;code&gt;Array.prototype.keys()&lt;/code&gt;&lt;/a&gt; method was introduced. That means that inside &lt;code&gt;with&lt;/code&gt; environments, &quot;keys&quot; would now be the method and not the variable. This is where now the built-in &lt;code&gt;@@unscopables&lt;/code&gt;&lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt; symbol property comes into play and prevents that some of the Array methods are being scoped into the &lt;code&gt;with&lt;/code&gt; statement.</source>
          <target state="translated">Следующий код отлично работает в ES5 и ниже. Однако в ECMAScript 2015 и более поздних &lt;a href=&quot;keys&quot;&gt; &lt;code&gt;Array.prototype.keys()&lt;/code&gt; &lt;/a&gt; был представлен метод Array.prototype.keys () . Это означает , что внутри &lt;code&gt;with&lt;/code&gt; окружающей средой, &amp;laquo;ключи&amp;raquo; теперь будут метод , а не переменные. Именно здесь теперь вступает в игру &lt;code&gt;Array.prototype[@@unscopables]&lt;/code&gt; свойство символа &lt;code&gt;@@unscopables&lt;/code&gt; Array.prototype [@@ unscopables], которое предотвращает включение некоторых методов Array в оператор &lt;code&gt;with&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb142fc147e63e6c8e71931fb3e4597a4a15e0f3" translate="yes" xml:space="preserve">
          <source>The following composite operation involving Booleans:</source>
          <target state="translated">Следующая составная операция с участием Булеана:</target>
        </trans-unit>
        <trans-unit id="f56868c1c01d0df57c3b0204e374f8e3a30a51f9" translate="yes" xml:space="preserve">
          <source>The following comprehension takes an array of numbers and creates a new array of the double of each of those numbers.</source>
          <target state="translated">Следующее понимание берет массив чисел и создает новый массив двойника каждого из этих чисел.</target>
        </trans-unit>
        <trans-unit id="8c8184ab9029406f0c35972bd8af1634a5c88cd5" translate="yes" xml:space="preserve">
          <source>The following creates a chess board as a two-dimensional array of strings. The first move is made by copying the 'p' in (6,4) to (4,4). The old position (6,4) is made blank.</source>
          <target state="translated">Далее создается шахматная доска в виде двумерного массива строк.Первый ход выполняется путем копирования 'p' в (6,4)в (4,4).Старая позиция (6,4)делается пустой.</target>
        </trans-unit>
        <trans-unit id="2c333cf31e985dcd9c5648af15242b10417d6e7e" translate="yes" xml:space="preserve">
          <source>The following creates a chessboard as a two-dimensional array of strings. The first move is made by copying the &lt;code&gt;'p'&lt;/code&gt; in &lt;code&gt;board[6][4]&lt;/code&gt; to &lt;code&gt;board[4][4]&lt;/code&gt;. The old position at &lt;code&gt;[6][4]&lt;/code&gt; is made blank.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22448211d9daeba006917d76dca51732108327f5" translate="yes" xml:space="preserve">
          <source>The following encodes &lt;code&gt;~314&lt;/code&gt;, i.e. the ones' complement of &lt;code&gt;314&lt;/code&gt;:</source>
          <target state="translated">Следующее кодирует &lt;code&gt;~314&lt;/code&gt; , то есть дополнение до &lt;code&gt;314&lt;/code&gt; единиц :</target>
        </trans-unit>
        <trans-unit id="17470c9f776b2250318b28cf1d1ffc7e6f3a5e08" translate="yes" xml:space="preserve">
          <source>The following example (see &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html&quot;&gt;memory.html&lt;/a&gt; on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/memory.html&quot;&gt;view it live also&lt;/a&gt;) fetches and instantiates the loaded memory.wasm byte code using the &lt;a href=&quot;../instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method, while importing the memory created in the line above. It then stores some values in that memory, then exports a function and uses it to sum some values.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/memory.html&quot;&gt;Memory.html&lt;/a&gt; на GitHub и также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/memory.html&quot;&gt;просмотрите его в режиме реального времени&lt;/a&gt; ) извлекает и создает экземпляр загруженного байтового кода memory.wasm с помощью метода &lt;a href=&quot;../instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; при импорте памяти, созданной в строке выше. Затем он сохраняет некоторые значения в этой памяти, затем экспортирует функцию и использует ее для суммирования некоторых значений.</target>
        </trans-unit>
        <trans-unit id="981dbbb700347ec94c9580cfc5638be5b3b0be36" translate="yes" xml:space="preserve">
          <source>The following example (see &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.html&quot;&gt;table.html&lt;/a&gt; on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table.html&quot;&gt;view it live&lt;/a&gt; also) compiles and instantiates the loaded table.wasm byte code using the &lt;a href=&quot;../instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; method. It then retrieves the references stored in the exported table.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table.html&quot;&gt;Table.html&lt;/a&gt; на GitHub и также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table.html&quot;&gt;просмотрите его вживую&lt;/a&gt; ) компилирует и создает экземпляр загруженного байтового кода table.wasm с помощью метода &lt;a href=&quot;../instantiatestreaming&quot;&gt; &lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt; &lt;/a&gt; . Затем он извлекает ссылки, хранящиеся в экспортированной таблице.</target>
        </trans-unit>
        <trans-unit id="7f7270c5a457873286226e276262e42332f056a3" translate="yes" xml:space="preserve">
          <source>The following example (see imports.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/imports.html&quot;&gt;source code&lt;/a&gt;; &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/imports.html&quot;&gt;see it live also&lt;/a&gt;) compiles the loaded simple.wasm module. This module is then queried for its imports.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/imports.html&quot;&gt;Исходный код&lt;/a&gt; imports.html ; также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/imports.html&quot;&gt;посмотрите его вживую&lt;/a&gt; ) компилируется загруженный модуль simple.wasm. Затем у этого модуля запрашивается его импорт.</target>
        </trans-unit>
        <trans-unit id="8be40e21a9e877159efe0525f36b240712dbcbd2" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/compile-streaming.html&quot;&gt;compile-streaming.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/compile-streaming.html&quot;&gt;view it live&lt;/a&gt; also) directly streams a .wasm module from an underlying source then compiles it to a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object. Because the &lt;code&gt;compileStreaming()&lt;/code&gt; function accepts a promise for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, you can directly pass it a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, and it will pass the response into the function when it fulfills.</source>
          <target state="translated">В следующем примере (см. Нашу демонстрацию &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/compile-streaming.html&quot;&gt;compile-streaming.html&lt;/a&gt; на GitHub, а также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/compile-streaming.html&quot;&gt;просмотрите ее вживую&lt;/a&gt; ) напрямую передает модуль .wasm из базового источника, а затем компилирует его в объект &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; . Поскольку &lt;code&gt;compileStreaming()&lt;/code&gt; принимает обещание для объекта &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; , вы можете напрямую передать ему &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt; , и он передаст ответ функции, когда она выполнится.</target>
        </trans-unit>
        <trans-unit id="a6ae5b74d8e14e8953b0f9fe248151245b6413e0" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/compile-streaming.html&quot;&gt;compile-streaming.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/compile-streaming.html&quot;&gt;view it live&lt;/a&gt; also) directly streams a .wasm module from an underlying source then compiles it to a &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; object. Because the &lt;code&gt;compileStreaming()&lt;/code&gt; function accepts a promise for a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, you can directly pass it a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, and it will pass the response into the function when it fulfills.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53be014f3a4cb1626bdfbf9e32e14585455937df" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded &lt;code&gt;simple.wasm&lt;/code&gt; byte code using the &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends the resulting &lt;code&gt;Module&lt;/code&gt; instance to a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbc142b33431162d5fa601429ab3ef586de33d3" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded simple.wasm byte code using the &lt;a href=&quot;../compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;Нашу&lt;/a&gt; демонстрацию index-compile.html на GitHub, а также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;просмотрите ее вживую&lt;/a&gt; ) компилирует загруженный байтовый код simple.wasm с помощью метода &lt;a href=&quot;../compilestreaming&quot;&gt; &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; &lt;/a&gt; а затем отправляет его &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;работнику&lt;/a&gt; с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="425eee5fd9b831445fafddc4cbc8f451497cb3b7" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded simple.wasm byte code using the &lt;a href=&quot;../compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4be8e69110269721fd01b14c26ce7095dc1f463" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded simple.wasm byte code using the &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;Нашу&lt;/a&gt; демонстрацию index-compile.html на GitHub, а также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;просмотрите ее вживую&lt;/a&gt; ) компилирует загруженный байтовый код simple.wasm с помощью метода &lt;a href=&quot;compilestreaming&quot;&gt; &lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt; &lt;/a&gt; а затем отправляет его &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;работнику&lt;/a&gt; с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99830cdcbf9155363e0babc88536b78d2f5ed898" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/index-compile.html&quot;&gt;index-compile.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/index-compile.html&quot;&gt;view it live&lt;/a&gt; also) compiles the loaded simple.wasm byte code using the &lt;a href=&quot;compilestreaming&quot;&gt;&lt;code&gt;WebAssembly.compileStreaming()&lt;/code&gt;&lt;/a&gt; method and then sends it to a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ed400983182592d2bee361ee8810fd4e6d4f77" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;instantiate-streaming.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;view it live&lt;/a&gt; also) directly streams a .wasm module from an underlying source then compiles and instantiates it, the promise fulfilling with a &lt;code&gt;ResultObject&lt;/code&gt;. Because the &lt;code&gt;instantiateStreaming()&lt;/code&gt; function accepts a promise for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, you can directly pass it a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, and it will pass the response into the function when it fulfills.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;Нашу&lt;/a&gt; демонстрацию instantiate-streaming.html на GitHub, а также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;просмотрите ее вживую&lt;/a&gt; ) напрямую передает модуль .wasm из базового источника, затем компилирует и создает его экземпляр, обещание выполняется с помощью &lt;code&gt;ResultObject&lt;/code&gt; . Поскольку функция &lt;code&gt;instantiateStreaming()&lt;/code&gt; принимает обещание для объекта &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; , вы можете напрямую передать ему &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt; , и он передаст ответ функции, когда она выполнится.</target>
        </trans-unit>
        <trans-unit id="4f226b89a3d4aad9c212a95fed47ada052b698d3" translate="yes" xml:space="preserve">
          <source>The following example (see our &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/instantiate-streaming.html&quot;&gt;instantiate-streaming.html&lt;/a&gt; demo on GitHub, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/instantiate-streaming.html&quot;&gt;view it live&lt;/a&gt; also) directly streams a .wasm module from an underlying source then compiles and instantiates it, the promise fulfilling with a &lt;code&gt;ResultObject&lt;/code&gt;. Because the &lt;code&gt;instantiateStreaming()&lt;/code&gt; function accepts a promise for a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; object, you can directly pass it a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, and it will pass the response into the function when it fulfills.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074b310b066d2912c353138074d2c4298ef9da96" translate="yes" xml:space="preserve">
          <source>The following example (see table2.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;source code&lt;/a&gt; and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;live version&lt;/a&gt;) creates a new WebAssembly Table instance with an initial size of 2 elements. We then print out the table length and contents of the two indexes (retrieved via &lt;a href=&quot;table/get&quot;&gt;&lt;code&gt;Table.prototype.get()&lt;/code&gt;&lt;/a&gt; to show that the length is two and both elements are &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;Исходный код&lt;/a&gt; table2.html и &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;действующую версию&lt;/a&gt; ) создается новый экземпляр таблицы WebAssembly с начальным размером 2 элемента. Затем мы распечатываем длину таблицы и содержимое двух индексов (полученных с помощью &lt;a href=&quot;table/get&quot;&gt; &lt;code&gt;Table.prototype.get()&lt;/code&gt; &lt;/a&gt; чтобы показать, что длина равна двум, а оба элемента равны &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51d5684213f352c1a7b4119e2be51a68e2b42266" translate="yes" xml:space="preserve">
          <source>The following example (see table2.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;source code&lt;/a&gt; and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;live version&lt;/a&gt;) creates a new WebAssembly Table instance with an initial size of 2 references. We then print out the table length and contents of the two indexes (retrieved via &lt;a href=&quot;get&quot;&gt;&lt;code&gt;Table.prototype.get()&lt;/code&gt;&lt;/a&gt;) to show that the length is two, and the indexes currently contain no function references (they currently return &lt;a href=&quot;../../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/table2.html&quot;&gt;Исходный код&lt;/a&gt; table2.html и &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/table2.html&quot;&gt;действующую версию&lt;/a&gt; ) создается новый экземпляр таблицы WebAssembly с начальным размером 2 ссылки. Затем мы распечатываем длину таблицы и содержимое двух индексов (полученных с помощью &lt;a href=&quot;get&quot;&gt; &lt;code&gt;Table.prototype.get()&lt;/code&gt; &lt;/a&gt; ), чтобы показать, что длина равна двум, а индексы в настоящее время не содержат ссылок на функции (в настоящее время они возвращают значение &lt;a href=&quot;../../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e90898c64d263a3ab47f788727fb41a2af7847f1" translate="yes" xml:space="preserve">
          <source>The following example (see the custom-section.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/other-examples/custom-section.html&quot;&gt;source&lt;/a&gt; and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/other-examples/custom-section.html&quot;&gt;live example&lt;/a&gt;) compiles the loaded simple-name-section.wasm byte code.</source>
          <target state="translated">В следующем примере (см. Исходный &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/other-examples/custom-section.html&quot;&gt;код&lt;/a&gt; custom-section.html и &lt;a href=&quot;https://mdn.github.io/webassembly-examples/other-examples/custom-section.html&quot;&gt;живой пример&lt;/a&gt; ) компилируется загруженный байт-код simple-name-section.wasm.</target>
        </trans-unit>
        <trans-unit id="8925708cf4fd51b195340d4fd06ff264de3c4d2c" translate="yes" xml:space="preserve">
          <source>The following example (see the validate.html &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/validate.html&quot;&gt;source code&lt;/a&gt;, and &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/validate.html&quot;&gt;see it live too&lt;/a&gt;) fetches a .wasm module and converts it into a typed array. The &lt;code&gt;validate()&lt;/code&gt; method is then used to check whether the module is valid.</source>
          <target state="translated">В следующем примере (см. &lt;a href=&quot;https://github.com/mdn/webassembly-examples/blob/master/js-api-examples/validate.html&quot;&gt;Исходный код&lt;/a&gt; validate.html и также &lt;a href=&quot;https://mdn.github.io/webassembly-examples/js-api-examples/validate.html&quot;&gt;просмотрите его вживую&lt;/a&gt; ) извлекается модуль .wasm и преобразуется в типизированный массив. &lt;code&gt;validate()&lt;/code&gt; метод используется для проверки , является ли модуль.</target>
        </trans-unit>
        <trans-unit id="04b5c2595d411a19b733d6b6fa76801e2bd24eab" translate="yes" xml:space="preserve">
          <source>The following example assigns the day of month of the current date to the variable &lt;code&gt;dayOfMonth&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dcad8447c089842b32b6c84f713c3990f8a460" translate="yes" xml:space="preserve">
          <source>The following example assigns the day portion of the current date to the variable &lt;code&gt;day&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;day&lt;/code&gt; присваивается дневная часть текущей даты .</target>
        </trans-unit>
        <trans-unit id="329ba32469ae5d1cee5124ac53f13a8d2e5ee8c4" translate="yes" xml:space="preserve">
          <source>The following example assigns the four-digit value of the current year to the variable &lt;code&gt;year&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;year&lt;/code&gt; присваивается четырехзначное значение текущего года .</target>
        </trans-unit>
        <trans-unit id="42327da23d2132b0665c321f6e511d64099c2105" translate="yes" xml:space="preserve">
          <source>The following example assigns the hours portion of the current time to the variable &lt;code&gt;hours&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;hours&lt;/code&gt; присваивается часть часов текущего времени .</target>
        </trans-unit>
        <trans-unit id="f5cf3c20aaeef2c685c52ccdf2761f9b637b94e2" translate="yes" xml:space="preserve">
          <source>The following example assigns the milliseconds portion of the current time to the variable &lt;code&gt;milliseconds&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;milliseconds&lt;/code&gt; назначаются миллисекунды текущего времени .</target>
        </trans-unit>
        <trans-unit id="93f95efff30459ece8c91e6f0e8eea1145c0f574" translate="yes" xml:space="preserve">
          <source>The following example assigns the milliseconds portion of the current time to the variable &lt;code&gt;milliseconds&lt;/code&gt;:</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;milliseconds&lt;/code&gt; назначаются миллисекунды текущего времени :</target>
        </trans-unit>
        <trans-unit id="078d56fd7b9b4ca87d573476a1b430aaf18cc0df" translate="yes" xml:space="preserve">
          <source>The following example assigns the minutes portion of the current time to the variable &lt;code&gt;minutes&lt;/code&gt;.</source>
          <target state="translated">В следующем примере значение минут текущего времени назначается переменной &lt;code&gt;minutes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fade3624fc5f764985a36f92a2d97d640c27075" translate="yes" xml:space="preserve">
          <source>The following example assigns the month portion of the current date to the variable &lt;code&gt;month&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;month&lt;/code&gt; присваивается часть текущей даты &amp;laquo; месяц&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="ac4df3ac8ffa391b3525c78b9876dbb78d6bd995" translate="yes" xml:space="preserve">
          <source>The following example assigns the seconds portion of the current time to the variable &lt;code&gt;seconds&lt;/code&gt;.</source>
          <target state="translated">В следующем примере переменной &lt;code&gt;seconds&lt;/code&gt; назначается часть текущего времени в секундах .</target>
        </trans-unit>
        <trans-unit id="343545b7b29be8cda1dcf0cbd75601808cd0809f" translate="yes" xml:space="preserve">
          <source>The following example assigns the weekday portion of the current date to the variable &lt;code&gt;weekday&lt;/code&gt;.</source>
          <target state="translated">В следующем примере значение дня недели текущей даты присваивается переменной &lt;code&gt;weekday&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="767d60c06ca1ff299270f38eff52362c32dbcb7c" translate="yes" xml:space="preserve">
          <source>The following example combines strings into a new string.</source>
          <target state="translated">Следующий пример объединяет строки в новую строку.</target>
        </trans-unit>
        <trans-unit id="ce1f80f7ce973aac6a68718ef1d5ef4c0a63d97a" translate="yes" xml:space="preserve">
          <source>The following example compiles the loaded simple.wasm byte code using the &lt;code&gt;compile()&lt;/code&gt; function and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="translated">Следующий пример компилирует загруженный код simple.wasm байт с использованием &lt;code&gt;compile()&lt;/code&gt; функции , а затем посылает его к &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;рабочему&lt;/a&gt; с помощью &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;PostMessage ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e24149b342bc29c992c104b8a241bca44d6191c" translate="yes" xml:space="preserve">
          <source>The following example compiles the loaded simple.wasm byte code using the &lt;code&gt;compile()&lt;/code&gt; function and then sends it to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;worker&lt;/a&gt; using &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage&quot;&gt;postMessage()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c1aae55651ebc7d95593ee71eb5a2d80993538" translate="yes" xml:space="preserve">
          <source>The following example converts the &lt;a href=&quot;date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to a numerical value using &lt;code&gt;Number&lt;/code&gt; as a function:</source>
          <target state="translated">В следующем примере объект &lt;a href=&quot;date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; преобразуется в числовое значение с использованием &lt;code&gt;Number&lt;/code&gt; в качестве функции:</target>
        </trans-unit>
        <trans-unit id="90bee3ba074ae4959eca3ef45c5c2b24977b7e28" translate="yes" xml:space="preserve">
          <source>The following example creates a constructor (&lt;code&gt;Tree&lt;/code&gt;) and an object of that type (&lt;code&gt;theTree&lt;/code&gt;). The example then displays the &lt;code&gt;constructor&lt;/code&gt; property for the object &lt;code&gt;theTree&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d3d920082d0c9559583ab75e2b0ed8ba94a88c" translate="yes" xml:space="preserve">
          <source>The following example creates a new WebAssembly Memory instance with an initial size of 1 page (64KiB), and a maximum size of 10 pages (640KiB).</source>
          <target state="translated">В следующем примере создается новый экземпляр WebAssembly Memory с начальным размером 1 страницы (64КиБ)и максимальным размером 10 страниц (640КиБ).</target>
        </trans-unit>
        <trans-unit id="40392ebf224f08b9413114ec5e26a7d27a004ce6" translate="yes" xml:space="preserve">
          <source>The following example creates a new WebAssembly Table instance with an initial size of 2 and a maximum size of 10.</source>
          <target state="translated">В следующем примере создается новый экземпляр WebAssembly Table с начальным размером 2 и максимальным размером 10.</target>
        </trans-unit>
        <trans-unit id="987625d9a34f6b1500f4c39852a2fcd13e8078e4" translate="yes" xml:space="preserve">
          <source>The following example creates a prototype, &lt;code&gt;Tree&lt;/code&gt;, and an object of that type, &lt;code&gt;theTree&lt;/code&gt;. The example then displays the &lt;code&gt;constructor&lt;/code&gt; property for the object &lt;code&gt;theTree&lt;/code&gt;.</source>
          <target state="translated">В следующем примере создается прототип &lt;code&gt;Tree&lt;/code&gt; и объект этого типа &lt;code&gt;theTree&lt;/code&gt; . Затем в примере отображается свойство &lt;code&gt;constructor&lt;/code&gt; для объекта &lt;code&gt;theTree&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e024257f78c408de5dbe3924322f58fda0791ae" translate="yes" xml:space="preserve">
          <source>The following example creates an array &lt;code&gt;a&lt;/code&gt;, containing three elements, then reverses the array. The call to &lt;code&gt;reverse()&lt;/code&gt; returns a reference to the reversed array &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">В следующем примере создается массив &lt;code&gt;a&lt;/code&gt; , содержащий три элемента, а затем массив переворачивается. Вызов функции &lt;code&gt;reverse()&lt;/code&gt; возвращает ссылку на обратный массив &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d385d069b10480e7c6f5d55e94f57807563c9d85" translate="yes" xml:space="preserve">
          <source>The following example creates an array, &lt;code&gt;&lt;var&gt;msgArray&lt;/var&gt;&lt;/code&gt;, with a length of &lt;code&gt;0&lt;/code&gt;, then assigns values to &lt;code&gt;msgArray[0]&lt;/code&gt; and &lt;code&gt;msgArray[99]&lt;/code&gt;, changing the &lt;code&gt;length&lt;/code&gt; of the array to &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7ccf2c333889f3e25b5af825d678cedd99f53b" translate="yes" xml:space="preserve">
          <source>The following example creates an array, &lt;code&gt;a&lt;/code&gt;, with three elements, then joins the array four times: using the default separator, then a comma and a space, then a plus and an empty string.</source>
          <target state="translated">В следующем примере создается массив &lt;code&gt;a&lt;/code&gt; с тремя элементами, затем он объединяется четыре раза: с использованием разделителя по умолчанию, затем запятой и пробела, затем плюс и пустая строка.</target>
        </trans-unit>
        <trans-unit id="94ed75046a42e69d01d296a24ea2163f50def55f" translate="yes" xml:space="preserve">
          <source>The following example creates an array, &lt;code&gt;msgArray&lt;/code&gt;, with a length of 0, then assigns values to &lt;code&gt;msgArray[0]&lt;/code&gt; and &lt;code&gt;msgArray[99]&lt;/code&gt;, changing the length of the array to 100.</source>
          <target state="translated">В следующем примере создается массив &lt;code&gt;msgArray&lt;/code&gt; с длиной 0, затем присваиваются значения &lt;code&gt;msgArray[0]&lt;/code&gt; и &lt;code&gt;msgArray[99]&lt;/code&gt; , изменяя длину массива на 100.</target>
        </trans-unit>
        <trans-unit id="eaea1362d9c752d1acd789d7f6adfdb9ced93027" translate="yes" xml:space="preserve">
          <source>The following example creates an array-like object &lt;code&gt;a&lt;/code&gt;, containing three elements and a length property, then reverses the array-like object. The call to &lt;code&gt;reverse()&lt;/code&gt; returns a reference to the reversed array-like object &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6e3ef17d5ed26b9f90461bb26fa01c086129786" translate="yes" xml:space="preserve">
          <source>The following example creates four arrays and displays the original array, then the sorted arrays. The numeric arrays are sorted without a compare function, then sorted using one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acec17eec6a860d29cc75e011e0974ef6eecfdad" translate="yes" xml:space="preserve">
          <source>The following example creates four arrays and displays the original array, then the sorted arrays. The numeric arrays are sorted without, then with, a compare function.</source>
          <target state="translated">В следующем примере создается четыре массива и отображается исходный массив,а затем отсортированные массивы.Числовые массивы сортируются без функции сравнения,а затем с помощью функции сравнения.</target>
        </trans-unit>
        <trans-unit id="e7b9f96843bc2693d00e570144e308453edb6f01" translate="yes" xml:space="preserve">
          <source>The following example define a pseudo-property &lt;code&gt;current&lt;/code&gt; of object &lt;code&gt;language&lt;/code&gt;. When &lt;code&gt;current&lt;/code&gt; is assigned a value, it updates &lt;code&gt;log&lt;/code&gt; with that value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8659a61c736495c98b2b579b5596a17089ed728b" translate="yes" xml:space="preserve">
          <source>The following example defines a function that splits a string into an array of strings using &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt;. After splitting the string, the function logs messages indicating the original string (before the split), the separator used, the number of elements in the array, and the individual array elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac6d9979086fed726d30810239f0df73d45c5df" translate="yes" xml:space="preserve">
          <source>The following example defines a function that splits a string into an array of strings using the specified separator. After splitting the string, the function logs messages indicating the original string (before the split), the separator used, the number of elements in the array, and the individual array elements.</source>
          <target state="translated">Следующий пример определяет функцию,которая разбивает строку на массив строк с помощью указанного разделителя.После разбиения строки функция регистрирует сообщения,указывающие на исходную строку (до разбиения),используемый разделитель,количество элементов в массиве и отдельные элементы массива.</target>
        </trans-unit>
        <trans-unit id="92b53dacb75ae1e45d107fe4e0d1af48934e0a9c" translate="yes" xml:space="preserve">
          <source>The following example defines a function, which, in turn, defines and returns a factorial function. This example isn't very practical, and there are nearly no cases where the same result cannot be achieved with &lt;a href=&quot;../../operators/function&quot;&gt;named function expressions&lt;/a&gt;.</source>
          <target state="translated">В следующем примере определяется функция, которая, в свою очередь, определяет и возвращает факториальную функцию. Этот пример не очень практичен, и почти нет случаев, когда тот же результат не может быть достигнут с помощью &lt;a href=&quot;../../operators/function&quot;&gt;выражений именованных функций&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab0f8b17dc95108d00ead468122ed886ad0787e7" translate="yes" xml:space="preserve">
          <source>The following example defines an unnamed function and assigns it to &lt;code&gt;x&lt;/code&gt;. The function returns the square of its argument:</source>
          <target state="translated">В следующем примере определяется безымянная функция и присваивается ей &lt;code&gt;x&lt;/code&gt; . Функция возвращает квадрат своего аргумента:</target>
        </trans-unit>
        <trans-unit id="4f8ffa34b31c533441565020a3902f90686081d1" translate="yes" xml:space="preserve">
          <source>The following example defines an unnamed generator function and assigns it to &lt;code&gt;x&lt;/code&gt;. The function yields the square of its argument:</source>
          <target state="translated">В следующем примере определяется безымянная функция-генератор и назначается ей &lt;code&gt;x&lt;/code&gt; . Функция возвращает квадрат своего аргумента:</target>
        </trans-unit>
        <trans-unit id="c24d2dc4ab700e16094a6b07ebfc466de9d9388c" translate="yes" xml:space="preserve">
          <source>The following example defines two string variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca6fb2df23581f1f3ea75626e31d34e85d25092" translate="yes" xml:space="preserve">
          <source>The following example defines two string variables. The variables contain the same string except that the second string contains uppercase letters. The first &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Console/log&quot;&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/a&gt; method displays 19. But because the &lt;code&gt;indexOf()&lt;/code&gt; method is case sensitive, the string &lt;code&gt;&quot;cheddar&quot;&lt;/code&gt; is not found in &lt;code&gt;myCapString&lt;/code&gt;, so the second &lt;code&gt;console.log()&lt;/code&gt; method displays -1.</source>
          <target state="translated">В следующем примере определяются две строковые переменные. Переменные содержат ту же строку, за исключением того, что вторая строка содержит буквы верхнего регистра. Первый метод &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Console/log&quot;&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;/a&gt; отображает 19. Но поскольку метод &lt;code&gt;indexOf()&lt;/code&gt; чувствителен к регистру, строка &lt;code&gt;&quot;cheddar&quot;&lt;/code&gt; не найдена в &lt;code&gt;myCapString&lt;/code&gt; , поэтому второй метод &lt;code&gt;console.log()&lt;/code&gt; отображает -1.</target>
        </trans-unit>
        <trans-unit id="547d34e148fee3b5c81ff45fb75c1ba9349a6db8" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how constants behave. Try this in your browser console.</source>
          <target state="translated">Следующий пример демонстрирует,как ведут себя константы.Попробуйте это в консоли браузера.</target>
        </trans-unit>
        <trans-unit id="98ff2a6ba484f518866c30fcdddf29c37ad2fdc0" translate="yes" xml:space="preserve">
          <source>The following example demonstrates several things:</source>
          <target state="translated">Следующий пример демонстрирует несколько вещей:</target>
        </trans-unit>
        <trans-unit id="4acb5dc736da7509eb051a3f3fb33a2adf5a1511" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the different potential results for a string occurring before, after, or at the same level as another:</source>
          <target state="translated">Следующий пример демонстрирует различные потенциальные результаты для строки,происходящей до,после или на том же уровне,что и другая строка:</target>
        </trans-unit>
        <trans-unit id="76991b080a89f297062fcd2b209588b4476dff9d" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the enumerability of user-defined vs. built-in properties:</source>
          <target state="translated">Следующий пример демонстрирует возможность пересчета пользовательских и встроенных свойств:</target>
        </trans-unit>
        <trans-unit id="c2e952e4b1b1ab4ce31fdb525a4580a9807c8c4e" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of the global and ignore case flags with &lt;code&gt;match()&lt;/code&gt;. All letters &lt;code&gt;A&lt;/code&gt; through &lt;code&gt;E&lt;/code&gt; and &lt;code&gt;a&lt;/code&gt; through &lt;code&gt;e&lt;/code&gt; are returned, each its own element in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535735172236e9bfa62c1b8539c90dbbb7bcde3f" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the use of the global and ignore case flags with &lt;code&gt;match()&lt;/code&gt;. All letters A through E and a through e are returned, each its own element in the array.</source>
          <target state="translated">В следующем примере демонстрируется использование флагов global и ignore case с &lt;code&gt;match()&lt;/code&gt; . Возвращаются все буквы от A до E и от a до e, каждый свой элемент в массиве.</target>
        </trans-unit>
        <trans-unit id="cabe28f20b2239beb68252e8521440dc3608037d" translate="yes" xml:space="preserve">
          <source>The following example demonstrates this behaviour:</source>
          <target state="translated">Следующий пример демонстрирует такое поведение:</target>
        </trans-unit>
        <trans-unit id="f1a20b08e6b9a8caed404a5a3d2e883966a78b3f" translate="yes" xml:space="preserve">
          <source>The following example determines whether the &lt;code&gt;o&lt;/code&gt; object contains a property named &lt;code&gt;prop&lt;/code&gt;:</source>
          <target state="translated">В следующем примере определяется, содержит ли объект &lt;code&gt;o&lt;/code&gt; свойство с именем &lt;code&gt;prop&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b86a1dde5df429b8d830bc2153042ec3baf37734" translate="yes" xml:space="preserve">
          <source>The following example differentiates between direct properties and properties inherited through the prototype chain:</source>
          <target state="translated">В следующем примере различаются прямые свойства и свойства,унаследованные через цепочку прототипов:</target>
        </trans-unit>
        <trans-unit id="e28904a6f35eeb800c143e3dee50dcff00bd1737" translate="yes" xml:space="preserve">
          <source>The following example displays characters at different locations in the string &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt;:</source>
          <target state="translated">В следующем примере символы отображаются в разных местах строки &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d5069cc5724ce085e15d25e5d352954d833f1196" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;' &amp;nbsp; foo'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5458354badab7ff4adbcb6d487cdf785f3f80ce" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;' foo'&lt;/code&gt;:</source>
          <target state="translated">В следующем примере отображается строчная строка &lt;code&gt;' foo'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7e291b2b732970f23d715257c0f8a9eb7c68acc7" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;'foo &amp;nbsp;'&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfcf6eed9257eea6ea96db09db7d70185bcca9b" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;'foo '&lt;/code&gt;:</source>
          <target state="translated">В следующем примере отображается строчная строка &lt;code&gt;'foo '&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5f7e0cd9f847bc1e944b777e688a83943d4b275d" translate="yes" xml:space="preserve">
          <source>The following example displays the lowercase string &lt;code&gt;'foo'&lt;/code&gt;:</source>
          <target state="translated">В следующем примере отображается строчная строка &lt;code&gt;'foo'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3de0baed5bb079a0ffbb4bf89fc9d1cfda35e9f0" translate="yes" xml:space="preserve">
          <source>The following example displays the string value of a &lt;a href=&quot;../regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">В следующем примере отображается строковое значение объекта &lt;a href=&quot;../regexp&quot;&gt; &lt;code&gt;RegExp&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="b52750760089a6c0542b8391fd7147e5b5454c38" translate="yes" xml:space="preserve">
          <source>The following example displays the string value of a &lt;a href=&quot;../string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">В следующем примере отображается строковое значение объекта &lt;a href=&quot;../string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="18561723849ba2c212dfe8fbd1d0094dd72468e7" translate="yes" xml:space="preserve">
          <source>The following example displays the word &quot;MDN&quot; as a hypertext link that returns the user to the Mozilla Developer Network.</source>
          <target state="translated">В следующем примере слово &quot;MDN&quot; отображается как гипертекстовая ссылка,которая возвращает пользователя в Mozilla Developer Network.</target>
        </trans-unit>
        <trans-unit id="36f1186c333290c25b528c1d31b9417d9e9b895a" translate="yes" xml:space="preserve">
          <source>The following example finds an element in the array that is a prime number (or returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no prime number).</source>
          <target state="translated">В следующем примере выполняется поиск элемента в массиве, который является простым числом (или возвращается &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; ,&lt;/a&gt; если простого числа нет).</target>
        </trans-unit>
        <trans-unit id="d5456ae8de25799bf8c9164d723032bea5544e2e" translate="yes" xml:space="preserve">
          <source>The following example finds an element in the array that is a prime number (or returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no prime number):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71e655d2f693b29caaacf6e44d06930198e94b3" translate="yes" xml:space="preserve">
          <source>The following example finds an element in the typed array that is a prime number (or returns &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if there is no prime number).</source>
          <target state="translated">В следующем примере выполняется поиск элемента в типизированном массиве, который является простым числом (или возвращается &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; ,&lt;/a&gt; если простого числа нет).</target>
        </trans-unit>
        <trans-unit id="123a7cc3c410ee8833d83619d1741b726a071c58" translate="yes" xml:space="preserve">
          <source>The following example finds the index of a fruit using an arrow function:</source>
          <target state="translated">В следующем примере индекс фрукта найден с помощью функции стрелки:</target>
        </trans-unit>
        <trans-unit id="c3043c7e35e655f7354b6f1b8d8089ebb3dcfa97" translate="yes" xml:space="preserve">
          <source>The following example finds the index of an element in the typed array that is a prime number (or returns -1 if there is no prime number).</source>
          <target state="translated">Следующий пример находит индекс элемента в типизированном массиве,который является простым числом (или возвращает -1,если простое число отсутствует).</target>
        </trans-unit>
        <trans-unit id="c5c6b7cffaee77e66f9d1e62fcb17bb0df5b0be7" translate="yes" xml:space="preserve">
          <source>The following example illustrates an alternative approach, using &lt;code&gt;forEach()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04878c2dd68886e6bf3de28ed14d3ae057e21b4a" translate="yes" xml:space="preserve">
          <source>The following example is only here for learning purpose. If you want to flatten an array using built-in methods you can use &lt;a href=&quot;flat&quot;&gt;&lt;code&gt;Array.prototype.flat()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9921b6dcf2965ab71a7bbbf0b7bd58d30abfff93" translate="yes" xml:space="preserve">
          <source>The following example joins array-like object (&lt;code&gt;&lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt;&lt;/code&gt;), by calling &lt;a href=&quot;../function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt; on &lt;code&gt;Array.prototype.join&lt;/code&gt;.</source>
          <target state="translated">В следующем примере объединяется объект, подобный массиву ( &lt;code&gt;&lt;a href=&quot;../../functions/arguments&quot;&gt;arguments&lt;/a&gt;&lt;/code&gt; ), путем вызова &lt;a href=&quot;../function/call&quot;&gt; &lt;code&gt;Function.prototype.call&lt;/code&gt; &lt;/a&gt; для &lt;code&gt;Array.prototype.join&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fc86f8bd44257f235a0ee34207fabb06957cf4e" translate="yes" xml:space="preserve">
          <source>The following example logs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a6eb7e50a75d3ce30d69979c6deb4427e65027" translate="yes" xml:space="preserve">
          <source>The following example logs &quot;one&quot;, &quot;two&quot;, &quot;four&quot;. When the entry containing the value &quot;two&quot; is reached, the first entry of the whole array is shifted off, which results in all remaining entries moving up one position. Because element &quot;four&quot; is now at an earlier position in the array, &quot;three&quot; will be skipped. &lt;code&gt;forEach()&lt;/code&gt; does not make a copy of the array before iterating.</source>
          <target state="translated">В следующем примере регистрируются &amp;laquo;один&amp;raquo;, &amp;laquo;два&amp;raquo;, &amp;laquo;четыре&amp;raquo;. Когда достигается запись, содержащая значение &amp;laquo;два&amp;raquo;, первая запись всего массива смещается, в результате чего все оставшиеся записи перемещаются на одну позицию вверх. Поскольку элемент &amp;laquo;четыре&amp;raquo; теперь находится на более ранней позиции в массиве, &amp;laquo;три&amp;raquo; будет пропущено. &lt;code&gt;forEach()&lt;/code&gt; не делает копию массива перед повторением.</target>
        </trans-unit>
        <trans-unit id="40e228d899d08f05aeecc38dce80833d2bd90269" translate="yes" xml:space="preserve">
          <source>The following example logs a message which depends on the success of the test:</source>
          <target state="translated">В следующем примере регистрируется сообщение,которое зависит от успешности теста:</target>
        </trans-unit>
        <trans-unit id="1d7aef234432711a2e9c30b19e8ad50d7434e224" translate="yes" xml:space="preserve">
          <source>The following example opens a file and then executes statements that use the file (server-side JavaScript allows you to access files). If an exception is thrown while the file is open, the &lt;code&gt;finally&lt;/code&gt; clause closes the file before the script fails. The code in &lt;code&gt;finally&lt;/code&gt; also executes upon explicitly returning from &lt;code&gt;try&lt;/code&gt; or &lt;code&gt;catch&lt;/code&gt; block.</source>
          <target state="translated">В следующем примере открывается файл, а затем выполняются операторы, использующие этот файл (серверный JavaScript позволяет вам получить доступ к файлам). Если при открытом файле возникает исключение, предложение &lt;code&gt;finally&lt;/code&gt; закрывает файл до того, как сценарий завершится ошибкой. Код в &lt;code&gt;finally&lt;/code&gt; также выполняется после явного возврата из блока &lt;code&gt;try&lt;/code&gt; или &lt;code&gt;catch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ae682e556b86f0a9c680f91cf8500371aa1c3fc" translate="yes" xml:space="preserve">
          <source>The following example provides the special encoding required within UTF-8 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition&quot;&gt;&lt;code&gt;Content-Disposition&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Link&quot;&gt;&lt;code&gt;Link&lt;/code&gt;&lt;/a&gt; server response header parameters (e.g., UTF-8 filenames):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b446e3f60ff448f09a2a16a2121c515e355b2ea" translate="yes" xml:space="preserve">
          <source>The following example provides the special encoding required within UTF-8 &lt;code&gt;Content-Disposition&lt;/code&gt; and &lt;code&gt;Link&lt;/code&gt; server response header parameters (e.g., UTF-8 filenames):</source>
          <target state="translated">В следующем примере представлена ​​специальная кодировка, требуемая в параметрах заголовка ответа сервера UTF-8 &lt;code&gt;Content-Disposition&lt;/code&gt; и &lt;code&gt;Link&lt;/code&gt; (например, имена файлов UTF-8):</target>
        </trans-unit>
        <trans-unit id="87039910df2dc3a9a34e9fafe993bc06eedfa65a" translate="yes" xml:space="preserve">
          <source>The following example replaces a Fahrenheit degree with its equivalent Celsius degree. The Fahrenheit degree should be a number ending with &lt;code&gt;&quot;F&quot;&lt;/code&gt;. The function returns the Celsius number ending with &lt;code&gt;&quot;C&quot;&lt;/code&gt;. For example, if the input number is &lt;code&gt;&quot;212F&quot;&lt;/code&gt;, the function returns &lt;code&gt;&quot;100C&quot;&lt;/code&gt;. If the number is &lt;code&gt;&quot;0F&quot;&lt;/code&gt;, the function returns &lt;code&gt;&quot;-17.77777777777778C&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f6d94ed30d3e9137ae631064c77221c72decf99" translate="yes" xml:space="preserve">
          <source>The following example replaces a Fahrenheit degree with its equivalent Celsius degree. The Fahrenheit degree should be a number ending with F. The function returns the Celsius number ending with C. For example, if the input number is 212F, the function returns 100C. If the number is 0F, the function returns -17.77777777777778C.</source>
          <target state="translated">Следующий пример заменяет степень Фаренгейта на эквивалентную ей по Цельсию.Степень Фаренгейта должна быть числом,оканчивающимся на F.Функция возвращает число по Цельсию,оканчивающееся на C.Например,если входное число 212F,функция возвращает 100C.Если число 0F,функция возвращает -17.7777777778C.</target>
        </trans-unit>
        <trans-unit id="933f02ade97f0adfd5b355b0f382856566007dbf" translate="yes" xml:space="preserve">
          <source>The following example replaces a substring within a string. It will replace both individual characters and substrings. The function call at the end of the example changes the string &lt;code&gt;'Brave New World'&lt;/code&gt; to &lt;code&gt;'Brave New Web'&lt;/code&gt;.</source>
          <target state="translated">В следующем примере заменяется подстрока в строке. Он заменит как отдельные символы, так и подстроки. Вызов функции в конце примера меняет строку &lt;code&gt;'Brave New World'&lt;/code&gt; на &lt;code&gt;'Brave New Web'&lt;/code&gt; мир &amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="24da5523828c57db976cc0d7542f115e6815bd27" translate="yes" xml:space="preserve">
          <source>The following example replaces a substring within a string. It will replace both individual characters and substrings. The function call at the end of the example changes the string &lt;code&gt;Brave New World&lt;/code&gt; to &lt;code&gt;Brave New Web&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f8e958f94323ef8dc0f42259773df78c457ee2" translate="yes" xml:space="preserve">
          <source>The following example returns 65, the Unicode value for A.</source>
          <target state="translated">В следующем примере возвращается 65,значение Юникода для А.</target>
        </trans-unit>
        <trans-unit id="90c5cda0c96e649f69caa007d659268d33f22c88" translate="yes" xml:space="preserve">
          <source>The following example returns &lt;code&gt;224&lt;/code&gt;:</source>
          <target state="translated">В следующем примере возвращается &lt;code&gt;224&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d056fa1c9f0d837fbff2ba8b0f5d0ca6c4894ca4" translate="yes" xml:space="preserve">
          <source>The following example returns &lt;code&gt;65&lt;/code&gt;, the Unicode value for A.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24de5fa4059fba34b62190fb50374f94f80ed5c0" translate="yes" xml:space="preserve">
          <source>The following example returns &lt;code&gt;NaN&lt;/code&gt;</source>
          <target state="translated">В следующем примере возвращается &lt;code&gt;NaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="31f6a40a3ae89d54d434b54adbad2740ade91bc9" translate="yes" xml:space="preserve">
          <source>The following example returns &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06a45e6f36f881a97a538d21281592a5f8ba252" translate="yes" xml:space="preserve">
          <source>The following example returns all prime numbers in the array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4b71ecc767d2d15324f41767df1acba8db96b8" translate="yes" xml:space="preserve">
          <source>The following example returns the index of an element in the array that is a prime number, or -1 if there is no prime number.</source>
          <target state="translated">В следующем примере возвращается индекс элемента в массиве,являющегося простым числом,или -1,если простое число отсутствует.</target>
        </trans-unit>
        <trans-unit id="e1fcf59259ff9369d86d16c1da62190398e9f9b0" translate="yes" xml:space="preserve">
          <source>The following example returns the index of the first element in the array that is a prime number, or &lt;code&gt;-1&lt;/code&gt; if there is no prime number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083a6a8c3e4bb9a9632eb9fe92d73307b122fa08" translate="yes" xml:space="preserve">
          <source>The following example returns the string &quot;ABC&quot;.</source>
          <target state="translated">Следующий пример возвращает строку &quot;ABC&quot;.</target>
        </trans-unit>
        <trans-unit id="82cdc405f088054aabe6122997be993169860e4c" translate="yes" xml:space="preserve">
          <source>The following example searches a string with 2 different regex objects to show a successful search (positive value) vs. an unsuccessful search (-1)</source>
          <target state="translated">Следующий пример ищет строку с 2 различными регекс-объектами,чтобы показать успешный поиск (положительное значение)в сравнении с неудачным поиском (-1)</target>
        </trans-unit>
        <trans-unit id="aaf3eb4f9f086aa6db911648687cea5cc758ee3d" translate="yes" xml:space="preserve">
          <source>The following example searches a string with two different regex objects to show a successful search (positive value) vs. an unsuccessful search (&lt;code&gt;-1&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7630dc749db4775b009b43ad2cba5bd2e12024" translate="yes" xml:space="preserve">
          <source>The following example sets &lt;code&gt;count&lt;/code&gt; to the number of occurrences of the letter &lt;code&gt;e&lt;/code&gt; in the string &lt;code&gt;str&lt;/code&gt;:</source>
          <target state="translated">В следующем примере &lt;code&gt;count&lt;/code&gt; устанавливается равным количеству вхождений буквы &lt;code&gt;e&lt;/code&gt; в строку &lt;code&gt;str&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="11e92c9c5fada2aa828677183258974748dd4cfa" translate="yes" xml:space="preserve">
          <source>The following example shortens the array &lt;code&gt;numbers&lt;/code&gt; to a length of 3 if the current length is greater than 3.</source>
          <target state="translated">В следующем примере &lt;code&gt;numbers&lt;/code&gt; массива сокращаются до 3, если текущая длина больше 3.</target>
        </trans-unit>
        <trans-unit id="716fdf3d5254acc41f4ed6f3a01cae908d494b0b" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; loop that has a &lt;code&gt;continue&lt;/code&gt; statement that executes when the value of &lt;code&gt;i&lt;/code&gt; is 3. Thus, &lt;code&gt;n&lt;/code&gt; takes on the values 1, 3, 7, and 12.</source>
          <target state="translated">В следующем примере показано , &lt;a href=&quot;while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt; цикл , который имеет по- &lt;code&gt;continue&lt;/code&gt; о том , что выполняется , когда значение &lt;code&gt;i&lt;/code&gt; равно 3. Таким образом, &lt;code&gt;n&lt;/code&gt; принимает значения 1, 3, 7 и 12.</target>
        </trans-unit>
        <trans-unit id="2005d00ce0209b5fceaa8ac912192339ee89a7e4" translate="yes" xml:space="preserve">
          <source>The following example shows a new global instance being created using the &lt;code&gt;WebAssembly.Global()&lt;/code&gt; constructor. It is being defined as a mutable &lt;code&gt;i32&lt;/code&gt; type, with a value of 0.</source>
          <target state="translated">В следующем примере показан новый глобальный экземпляр, создаваемый с помощью конструктора &lt;code&gt;WebAssembly.Global()&lt;/code&gt; . Он определяется как изменяемый тип &lt;code&gt;i32&lt;/code&gt; со значением 0.</target>
        </trans-unit>
        <trans-unit id="727fa2dc7c87295a2654df609e735dc343947cff" translate="yes" xml:space="preserve">
          <source>The following example shows a simple generator and an error that is thrown using the &lt;code&gt;throw&lt;/code&gt; method. An error can be caught by a &lt;a href=&quot;../../statements/try...catch&quot;&gt;&lt;code&gt;try...catch&lt;/code&gt;&lt;/a&gt; block as usual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7266a2391590ed65c478f38c97fa18c57a2cf6" translate="yes" xml:space="preserve">
          <source>The following example shows a simple generator and an error that is thrown using the &lt;code&gt;throw&lt;/code&gt; method. An error can be caught by a &lt;code&gt;&lt;a href=&quot;../../statements/try...catch&quot;&gt;try...catch&lt;/a&gt;&lt;/code&gt; block as usual.</source>
          <target state="translated">В следующем примере показан простой генератор и ошибка, возникающая с использованием метода &lt;code&gt;throw&lt;/code&gt; . Ошибка может быть обнаружена блоком &lt;code&gt;&lt;a href=&quot;../../statements/try...catch&quot;&gt;try...catch&lt;/a&gt;&lt;/code&gt; как обычно.</target>
        </trans-unit>
        <trans-unit id="1f7f361180b31b6042d618b49166807c6f929d75" translate="yes" xml:space="preserve">
          <source>The following example shows a simple generator and the &lt;code&gt;return&lt;/code&gt; method.</source>
          <target state="translated">В следующем примере показан простой генератор и метод &lt;code&gt;return&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b72df2105ef3ff7ff1bfba2b4454bda5b2038cff" translate="yes" xml:space="preserve">
          <source>The following example shows a simple generator and the object that the &lt;code&gt;next&lt;/code&gt; method returns:</source>
          <target state="translated">В следующем примере показан простой генератор и объект, который возвращает &lt;code&gt;next&lt;/code&gt; метод:</target>
        </trans-unit>
        <trans-unit id="d850c82a100dbc6d6a59799d003ca63c04585e27" translate="yes" xml:space="preserve">
          <source>The following example shows code where a &lt;code&gt;debugger&lt;/code&gt; statement has been inserted, to invoke a debugger (if one exists) when the function is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc6be9816c449546ff2ea6de11e640bab27e489" translate="yes" xml:space="preserve">
          <source>The following example shows code where a debugger statement has been inserted, to invoke a debugger (if one exists) when the function is called.</source>
          <target state="translated">В следующем примере показан код,в который был вставлен отладочный оператор для вызова отладчика (если таковой существует)при вызове функции.</target>
        </trans-unit>
        <trans-unit id="38d40650a327908143a9507b756e781dad6e3669" translate="yes" xml:space="preserve">
          <source>The following example shows example usage of &lt;code&gt;Math.ceil()&lt;/code&gt;.</source>
          <target state="translated">В следующем примере показан пример использования &lt;code&gt;Math.ceil()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6aef66a7fd07b717af62aec60881c68c4a467ffc" translate="yes" xml:space="preserve">
          <source>The following example shows how to iterate over the properties of an object without executing on inherited properties. Note that the &lt;a href=&quot;../../statements/for...in&quot;&gt;&lt;code&gt;for...in&lt;/code&gt;&lt;/a&gt; loop is already only iterating enumerable items, so one should not assume based on the lack of non-enumerable properties shown in the loop that &lt;code&gt;hasOwnProperty&lt;/code&gt; itself is confined strictly to enumerable items (as with &lt;a href=&quot;getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">В следующем примере показано, как перебирать свойства объекта без выполнения унаследованных свойств. Обратите внимание, что цикл &lt;a href=&quot;../../statements/for...in&quot;&gt; &lt;code&gt;for...in&lt;/code&gt; &lt;/a&gt; уже выполняет только итерацию перечисляемых элементов, поэтому не следует предполагать, что из-за отсутствия неперечислимых свойств, показанных в цикле, сам &lt;code&gt;hasOwnProperty&lt;/code&gt; ограничен строго перечисляемыми элементами (как в случае с &lt;a href=&quot;getownpropertynames&quot;&gt; &lt;code&gt;Object.getOwnPropertyNames()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="05588cf5df11a1b0b917f7765e24afc5d0c27049" translate="yes" xml:space="preserve">
          <source>The following example shows how to modify constructor value of generic objects. Only &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;&quot;test&quot;&lt;/code&gt; will not be affected as they have read-only native constructors. This example shows that it is not always safe to rely on the &lt;code&gt;constructor&lt;/code&gt; property of an object.</source>
          <target state="translated">В следующем примере показано, как изменить значение конструктора универсальных объектов. Только &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;1&lt;/code&gt; и &lt;code&gt;&quot;test&quot;&lt;/code&gt; не будут затронуты, поскольку они имеют собственные конструкторы только для чтения. Этот пример показывает , что не всегда безопасно полагаться на &lt;code&gt;constructor&lt;/code&gt; свойства объекта.</target>
        </trans-unit>
        <trans-unit id="512794980e61d7b8e7fce733381b52be22b2f50f" translate="yes" xml:space="preserve">
          <source>The following example shows how to recompile a regular expression with a new pattern and a new flag.</source>
          <target state="translated">Следующий пример показывает,как перекомпилировать регулярное выражение с новым паттерном и новым флагом.</target>
        </trans-unit>
        <trans-unit id="8b2b53fd0c381f6602455a835cc7ce21bd9f543d" translate="yes" xml:space="preserve">
          <source>The following example shows one use case for the &lt;code&gt;finally&lt;/code&gt;-block. The code opens a file and then executes statements that use the file; the &lt;code&gt;finally&lt;/code&gt;-block makes sure the file always closes after it is used even if an exception was thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a9e7677db754327f388f87c25488c6eafb7c04" translate="yes" xml:space="preserve">
          <source>The following example shows the difference between a &lt;code&gt;for...of&lt;/code&gt; loop and a &lt;code&gt;for...in&lt;/code&gt; loop when used with an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В следующем примере показана разница между циклом &lt;code&gt;for...of&lt;/code&gt; циклом &lt;code&gt;for...in&lt;/code&gt; при использовании с &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb030f0bc0c064aa49218c4bc53dbe7177787ab2" translate="yes" xml:space="preserve">
          <source>The following example shows the minimum and maximum integer values that can be represented as &lt;code&gt;Number&lt;/code&gt; object (for details, refer to ECMAScript standard, chapter &lt;em&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type&quot;&gt;6.1.6 The Number Type&lt;/a&gt;&lt;/em&gt;):</source>
          <target state="translated">Следующий пример показывает минимальное и максимальное целые значения , которые могут быть представлены как &lt;code&gt;Number&lt;/code&gt; объекта (подробнее см стандарт ECMAScript, глава &lt;em&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type&quot;&gt;6.1.6 Номер Тип&lt;/a&gt;&lt;/em&gt; ):</target>
        </trans-unit>
        <trans-unit id="79a5899f282772844bfdc39b15a2d76d1357f7c0" translate="yes" xml:space="preserve">
          <source>The following example shows the minimum and maximum integer values that can be represented as &lt;code&gt;Number&lt;/code&gt; object. (More details on this are described in the ECMAScript standard, chapter &lt;em&gt;&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-ecmascript-language-types-number-type&quot;&gt;6.1.6 The Number Type&lt;/a&gt;.&lt;/em&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b668e0e307c5ee65cb2f062aacbf2cbff673850" translate="yes" xml:space="preserve">
          <source>The following example shows the use of &lt;code&gt;propertyIsEnumerable&lt;/code&gt; on objects and arrays:</source>
          <target state="translated">В следующем примере показано использование &lt;code&gt;propertyIsEnumerable&lt;/code&gt; для объектов и массивов:</target>
        </trans-unit>
        <trans-unit id="f585c8845f1eff70fb70f7c28ef793920b1cf083" translate="yes" xml:space="preserve">
          <source>The following example takes a string pattern and converts it into an array of objects.</source>
          <target state="translated">Следующий пример берет строковый шаблон и преобразует его в массив объектов.</target>
        </trans-unit>
        <trans-unit id="526ac138e4fc7f1b7bcc8fdaa130fb0ea5e63515" translate="yes" xml:space="preserve">
          <source>The following example tests an input string for a U.S. zip code. If the zip code uses an invalid format, the throw statement throws an exception by creating an object of type &lt;code&gt;ZipCodeFormatException&lt;/code&gt;.</source>
          <target state="translated">В следующем примере проверяется входная строка для почтового индекса США. Если в почтовом индексе используется недопустимый формат, инструкция throw вызывает исключение, создавая объект типа &lt;code&gt;ZipCodeFormatException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4dc1382682a3dc481d70442f3a24f55d37812838" translate="yes" xml:space="preserve">
          <source>The following example tests whether all elements in the array are bigger than 10.</source>
          <target state="translated">Следующий пример проверяет,все ли элементы в массиве больше 10.</target>
        </trans-unit>
        <trans-unit id="013658f9ea00d8fe11ae283ad06c24b51bcc9655" translate="yes" xml:space="preserve">
          <source>The following example tests whether all elements in the typed array are bigger than 10.</source>
          <target state="translated">Следующий пример проверяет,все ли элементы в типизированном массиве больше 10.</target>
        </trans-unit>
        <trans-unit id="810860b8f4faa61dd02c1765fe41a001722d2b62" translate="yes" xml:space="preserve">
          <source>The following example tests whether any element in the array is bigger than 10.</source>
          <target state="translated">Следующий пример проверяет,не больше ли 10 элементов в массиве.</target>
        </trans-unit>
        <trans-unit id="5b1e373ef2933c1c4d588de3f2529dcb712e28b7" translate="yes" xml:space="preserve">
          <source>The following example tests whether any element in the typed array is bigger than 10.</source>
          <target state="translated">Следующий пример проверяет,не больше ли 10 элементов в типизированном массиве.</target>
        </trans-unit>
        <trans-unit id="44133647ac3e03eff2080839e68c70a985445297" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;a href=&quot;indexof&quot;&gt;&lt;code&gt;indexOf()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;lastIndexOf()&lt;/code&gt; to locate values in the string &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt;.</source>
          <target state="translated">В следующем примере используются &lt;a href=&quot;indexof&quot;&gt; &lt;code&gt;indexOf()&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;lastIndexOf()&lt;/code&gt; для поиска значений в строке &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1ae8e3bcf29b717f3d084a3dbee7ee86f3a45f7" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;eval()&lt;/code&gt; to evaluate the string &lt;code&gt;str&lt;/code&gt;. This string consists of JavaScript statements that assigns &lt;code&gt;z&lt;/code&gt; a value of 42 if &lt;code&gt;x&lt;/code&gt; is five, and assigns 0 to &lt;code&gt;z&lt;/code&gt; otherwise. When the second statement is executed, &lt;code&gt;eval()&lt;/code&gt; will cause these statements to be performed, and it will also evaluate the set of statements and return the value that is assigned to &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8706b2456fc38fbc87d8e44f1573948714487850" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;eval()&lt;/code&gt; to evaluate the string &lt;code&gt;str&lt;/code&gt;. This string consists of JavaScript statements that open an alert dialog box and assign &lt;code&gt;z&lt;/code&gt; a value of 42 if &lt;code&gt;x&lt;/code&gt; is five, and assigns 0 to &lt;code&gt;z&lt;/code&gt; otherwise. When the second statement is executed, &lt;code&gt;eval()&lt;/code&gt; will cause these statements to be performed, and it will also evaluate the set of statements and return the value that is assigned to &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">В следующем примере &lt;code&gt;eval()&lt;/code&gt; для оценки строки &lt;code&gt;str&lt;/code&gt; . Эта строка состоит из операторов JavaScript, которые открывают диалоговое окно предупреждения и присваивают &lt;code&gt;z&lt;/code&gt; значение 42, если &lt;code&gt;x&lt;/code&gt; равно пяти, и присваивают 0 для &lt;code&gt;z&lt;/code&gt; в противном случае. Когда выполняется второй оператор, &lt;code&gt;eval()&lt;/code&gt; вызывает выполнение этих операторов, а также оценивает набор операторов и возвращает значение, присвоенное &lt;code&gt;z&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83750d81b6626f0f19b9c906f35d785ebdddf04c" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;filter()&lt;/code&gt; to create a filtered array that has all elements with values less than 10 removed.</source>
          <target state="translated">В следующем примере &lt;code&gt;filter()&lt;/code&gt; для создания фильтрованного массива, из которого удалены все элементы со значениями менее 10.</target>
        </trans-unit>
        <trans-unit id="ac871f7b929b9a65b972498979af9ddeef82d1a2" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;filter()&lt;/code&gt; to create a filtered array that has all elements with values less than &lt;code&gt;10&lt;/code&gt; removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eca07736cd4beef1170a4d86fc01b7db4d3548e8" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;filter()&lt;/code&gt; to create a filtered json of all elements with non-zero, numeric &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">В следующем примере &lt;code&gt;filter()&lt;/code&gt; для создания отфильтрованного json всех элементов с ненулевым числовым &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c51b4796506339dc0c87c3cab6544c7dba551328" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;filter()&lt;/code&gt; to create a filtered typed array that has all elements with values less than 10 removed.</source>
          <target state="translated">В следующем примере &lt;code&gt;filter()&lt;/code&gt; для создания фильтрованного типизированного массива, в котором удалены все элементы со значениями менее 10.</target>
        </trans-unit>
        <trans-unit id="d105cc6b7d41842946081721deaa55136ba97875" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;indexOf()&lt;/code&gt; to locate values in an array.</source>
          <target state="translated">В следующем примере &lt;code&gt;indexOf()&lt;/code&gt; для поиска значений в массиве.</target>
        </trans-unit>
        <trans-unit id="33b7e82a7ae088a9da2094234cc0c9414479160f" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;indexOf()&lt;/code&gt; to locate values in the string &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt;.</source>
          <target state="translated">В следующем примере &lt;code&gt;indexOf()&lt;/code&gt; для поиска значений в строке &lt;code&gt;&quot;Brave new world&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3563a82dd6d10528fb8c409c142a55fe8a3d0dc1" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;lastIndexOf&lt;/code&gt; to find all the indices of an element in a given array, using &lt;a href=&quot;push&quot;&gt;&lt;code&gt;push&lt;/code&gt;&lt;/a&gt; to add them to another array as they are found.</source>
          <target state="translated">В следующем примере &lt;code&gt;lastIndexOf&lt;/code&gt; используется для поиска всех индексов элемента в данном массиве, используя &lt;a href=&quot;push&quot;&gt; &lt;code&gt;push&lt;/code&gt; &lt;/a&gt; для добавления их в другой массив по мере их нахождения.</target>
        </trans-unit>
        <trans-unit id="fa55c84d0b64c6544714e03305cd92ceaddfdd06" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;lastIndexOf&lt;/code&gt; to locate values in an array.</source>
          <target state="translated">В следующем примере &lt;code&gt;lastIndexOf&lt;/code&gt; используется для поиска значений в массиве.</target>
        </trans-unit>
        <trans-unit id="408ea0e67fa187a40dc0544085fe1a65911bf6bd" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;slice()&lt;/code&gt; to create a new string.</source>
          <target state="translated">В следующем примере &lt;code&gt;slice()&lt;/code&gt; для создания новой строки.</target>
        </trans-unit>
        <trans-unit id="c2149c5a632f0d09bdbded683bcc74118d5045fd" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;slice()&lt;/code&gt; with negative indexes.</source>
          <target state="translated">В следующем примере &lt;code&gt;slice()&lt;/code&gt; с отрицательными индексами.</target>
        </trans-unit>
        <trans-unit id="813e7509ea2b05dc5c2035b3fc62aeb74055342a" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;substring()&lt;/code&gt; to display characters from the string &lt;code&gt;'Mozilla'&lt;/code&gt;:</source>
          <target state="translated">В следующем примере &lt;code&gt;substring()&lt;/code&gt; для отображения символов из строки &lt;code&gt;'Mozilla'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ae0dc5a257ac00973dde41fe43965d487b04c877" translate="yes" xml:space="preserve">
          <source>The following example uses string methods to change the formatting of a string:</source>
          <target state="translated">В следующем примере используются методы строк для изменения форматирования строки:</target>
        </trans-unit>
        <trans-unit id="3a70f0bb2decb7901197bd26b68fdae1b9564471" translate="yes" xml:space="preserve">
          <source>The following example uses string methods to change the size of a string:</source>
          <target state="translated">В следующем примере используются методы строк для изменения размера строки:</target>
        </trans-unit>
        <trans-unit id="4180e0d970ae019777a0641952c4a65ecc2fca9e" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;a href=&quot;sub&quot;&gt;&lt;code&gt;sub()&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;sup()&lt;/code&gt; methods to format a string:</source>
          <target state="translated">В следующем примере для форматирования строки используются методы &lt;a href=&quot;sub&quot;&gt; &lt;code&gt;sub()&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;sup()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ae58843fab413870a1d38b37fcce84796d875d3e" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;Number&lt;/code&gt; object's properties to assign values to several numeric variables:</source>
          <target state="translated">В следующем примере свойства объекта &lt;code&gt;Number&lt;/code&gt; используются для присвоения значений нескольким числовым переменным:</target>
        </trans-unit>
        <trans-unit id="e553a46648eb3a34731f83c0bd5fb843b999f45a" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;fixed&lt;/code&gt; method to change the formatting of a string:</source>
          <target state="translated">В следующем примере &lt;code&gt;fixed&lt;/code&gt; метод используется для изменения форматирования строки:</target>
        </trans-unit>
        <trans-unit id="0ba649a48b369ce41e56cac9e631a466d1f3d2e6" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;fontcolor()&lt;/code&gt; method to change the color of a string by producing a string with the HTML &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">В следующем примере метод &lt;code&gt;fontcolor()&lt;/code&gt; используется для изменения цвета строки путем создания строки с тегом HTML &lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2741b5548ce2b91dc9b83dc11887f2061a4fa0d7" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;sub()&lt;/code&gt; and &lt;a href=&quot;sup&quot;&gt;&lt;code&gt;sup()&lt;/code&gt;&lt;/a&gt; methods to format a string:</source>
          <target state="translated">В следующем примере для форматирования строки используются методы &lt;code&gt;sub()&lt;/code&gt; и &lt;a href=&quot;sup&quot;&gt; &lt;code&gt;sup()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d01d6d761c44f4ec20ae9515f311bfeec40bd9c7" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;substring()&lt;/code&gt; method and &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property to extract the last characters of a particular string. This method may be easier to remember, given that you don't need to know the starting and ending indices as you would in the above examples.</source>
          <target state="translated">В следующем примере используется метод &lt;code&gt;substring()&lt;/code&gt; и свойство &lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; для извлечения последних символов определенной строки. Этот метод может быть проще запомнить, поскольку вам не нужно знать начальный и конечный индексы, как в приведенных выше примерах.</target>
        </trans-unit>
        <trans-unit id="8cef8be6def4d53d9db920de695a3beb3735c5ae" translate="yes" xml:space="preserve">
          <source>The following example will set &lt;code&gt;newString&lt;/code&gt; to &lt;code&gt;'abc - 12345 - #$*%'&lt;/code&gt;:</source>
          <target state="translated">Следующий пример устанавливает &lt;code&gt;newString&lt;/code&gt; к &lt;code&gt;'abc - 12345 - #$*%'&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="db073cd2d7888217720fedbda911e6c1f1f841cc" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;-15&lt;/code&gt;:</source>
          <target state="translated">Все следующие примеры возвращают &lt;code&gt;-15&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="34a1e33a7b6601f1111cf496f1432579381b9760" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;15&lt;/code&gt;:</source>
          <target state="translated">Все следующие примеры возвращают &lt;code&gt;15&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0c67575a7bbd9542216d33d9903fcb058d319fe1" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;3.14&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e06406230bdfd0929a994515fa0a52280b98d7" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;4&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f67eae0e84ccc42894c490679176dfdcad7be93" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;4&lt;/code&gt;:</source>
          <target state="translated">Все следующие примеры возвращают &lt;code&gt;4&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5ff9122e5995efca958ff02b74f1566414c905dd" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;code&gt;NaN&lt;/code&gt;:</source>
          <target state="translated">Все следующие примеры возвращают &lt;code&gt;NaN&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="711caf5a07449b66228282fa47346718e569e6c4" translate="yes" xml:space="preserve">
          <source>The following examples all return &lt;strong&gt;3.14&lt;/strong&gt;</source>
          <target state="translated">Все следующие примеры возвращают &lt;strong&gt;3.14&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10a5e7d6004c86d8ed05d5600d52cd94a7fa93cf" translate="yes" xml:space="preserve">
          <source>The following examples both return &lt;code&gt;900719925474099300&lt;/code&gt;, losing precision as the integer is too large to be represented as a float:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac5b2ffb028b3baddc1190b4432d1d1d9c12746" translate="yes" xml:space="preserve">
          <source>The following examples show how to determine the elapsed time between two JavaScript dates in milliseconds.</source>
          <target state="translated">Следующие примеры показывают,как определить прошедшее время между двумя датами JavaScript в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="d708ec64f0c9fb52e98615f0755e414a69b3bfde" translate="yes" xml:space="preserve">
          <source>The following examples show several ways to create JavaScript dates:</source>
          <target state="translated">Следующие примеры показывают несколько способов создания дат на JavaScript:</target>
        </trans-unit>
        <trans-unit id="ef8caf2cb455686379e6980d62ad84f795a1d598" translate="yes" xml:space="preserve">
          <source>The following examples show some uses of the &lt;code&gt;in&lt;/code&gt; operator.</source>
          <target state="translated">В следующих примерах показаны некоторые варианты использования оператора &lt;code&gt;in&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06307bf40766a28da868d2d0d96f0e0f81dca1e3" translate="yes" xml:space="preserve">
          <source>The following examples show that non-existent and deleted elements are visited and that the value passed to the callback is their value when visited.</source>
          <target state="translated">Следующие примеры показывают,что посещаются несуществующие и удаленные элементы,и что значение,передаваемое обратному вызову,является их значением при посещении.</target>
        </trans-unit>
        <trans-unit id="5f82acbcf60bd7e2c8c6b78cada8435dc6768ce3" translate="yes" xml:space="preserve">
          <source>The following examples show that nonexistent and deleted elements &lt;em&gt;are&lt;/em&gt; visited, and that the value passed to the callback is their value when visited:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ada68584028ec8e2b96787ed7c983c4d955b5c8" translate="yes" xml:space="preserve">
          <source>The following examples store &lt;a href=&quot;boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; objects in &lt;code&gt;o&lt;/code&gt;:</source>
          <target state="translated">В следующих примерах &lt;a href=&quot;boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; объекты хранятся в &lt;code&gt;o&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="008bd3049d296db93026852d2849ec7d78fd3f90" translate="yes" xml:space="preserve">
          <source>The following examples store an empty &lt;code&gt;Object&lt;/code&gt; object in &lt;code&gt;o&lt;/code&gt;:</source>
          <target state="translated">Следующие примеры хранят пустой &lt;code&gt;Object&lt;/code&gt; в &lt;code&gt;o&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8fef4b50028cdb88086c17d2aee9b09481826204" translate="yes" xml:space="preserve">
          <source>The following examples tests the behavior of the &lt;code&gt;filter&lt;/code&gt; method when the array is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caabcbd43a7a1f8ed462cc01fbd31f1ed5e2843e" translate="yes" xml:space="preserve">
          <source>The following examples tests the behaviour of the &lt;code&gt;every&lt;/code&gt; method when the array is modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff6dca67484421184735163b0fe041a33f46347" translate="yes" xml:space="preserve">
          <source>The following extends Strings to include the &lt;code&gt;codePointAt()&lt;/code&gt; function as specified in ECMAScript 2015 for browsers not supporting it natively.</source>
          <target state="translated">Следующее &lt;code&gt;codePointAt()&lt;/code&gt; Strings включает функцию codePointAt (), как указано в ECMAScript 2015, для браузеров, не поддерживающих ее изначально.</target>
        </trans-unit>
        <trans-unit id="33149eda90c352e457bb8250c4d75e7b01e69dc2" translate="yes" xml:space="preserve">
          <source>The following extends Strings to include the &lt;code&gt;codePointAt()&lt;/code&gt; function as specified in ECMAScript 2015 for browsers without native support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609bc9cce458f2a52665bae5b65b88626e11c48b" translate="yes" xml:space="preserve">
          <source>The following function has a &lt;code&gt;break&lt;/code&gt; statement that terminates the &lt;a href=&quot;while&quot;&gt;&lt;code&gt;while&lt;/code&gt;&lt;/a&gt; loop when &lt;code&gt;i&lt;/code&gt; is 3, and then returns the value 3 * &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">Следующая функция имеет &lt;code&gt;break&lt;/code&gt; утверждение , что прерывает &lt;a href=&quot;while&quot;&gt; &lt;code&gt;while&lt;/code&gt; &lt;/a&gt; цикл , когда &lt;code&gt;i&lt;/code&gt; равен 3, а затем возвращает значение 3 * &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="caa4bf05dc819f2ed88500d41f908336b1dcdfb1" translate="yes" xml:space="preserve">
          <source>The following function illustrates the use of &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt;&lt;code&gt;hasOwnProperty()&lt;/code&gt;&lt;/a&gt;: the inherited properties are not displayed.</source>
          <target state="translated">Следующая функция иллюстрирует использование &lt;a href=&quot;../global_objects/object/hasownproperty&quot;&gt; &lt;code&gt;hasOwnProperty()&lt;/code&gt; &lt;/a&gt; : унаследованные свойства не отображаются.</target>
        </trans-unit>
        <trans-unit id="aa92ee05403e2462ea327819008ce7363daad6a8" translate="yes" xml:space="preserve">
          <source>The following function returns 1 over the square root of 2:</source>
          <target state="translated">Следующая функция возвращает 1 над квадратным корнем 2:</target>
        </trans-unit>
        <trans-unit id="931ac3d73d87ac19897a0087ce63b1954cf0539d" translate="yes" xml:space="preserve">
          <source>The following function returns a string containing the formatted representation of a number padded with leading zeros.</source>
          <target state="translated">Следующая функция возвращает строку,содержащую отформатированное представление числа,дополненное ведущими нулями.</target>
        </trans-unit>
        <trans-unit id="77e731f07946e10af167dd8396531fa4d99b8a73" translate="yes" xml:space="preserve">
          <source>The following function returns e:</source>
          <target state="translated">Следующая функция возвращает e:</target>
        </trans-unit>
        <trans-unit id="0d438216dab9bca6470fa8564949eab43f0f4a5f" translate="yes" xml:space="preserve">
          <source>The following function returns the base 10 logarithm of e:</source>
          <target state="translated">Следующая функция возвращает базовый логарифм 10 e:</target>
        </trans-unit>
        <trans-unit id="2dd0c0a9fa8c406a7feff85a2ce117a1b3b439f6" translate="yes" xml:space="preserve">
          <source>The following function returns the base 2 logarithm of e:</source>
          <target state="translated">Следующая функция возвращает базовый логарифм 2 e:</target>
        </trans-unit>
        <trans-unit id="c5b9eb8e4062a89f78e54edf94221d43ec5068cd" translate="yes" xml:space="preserve">
          <source>The following function returns the logarithm of &lt;code&gt;y&lt;/code&gt; with base &lt;code&gt;&lt;var&gt;x&lt;/var&gt;&lt;/code&gt; (ie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adfb09a340eeb80ec88a7e373cf9d30a06fd7bc" translate="yes" xml:space="preserve">
          <source>The following function returns the logarithm of &lt;code&gt;y&lt;/code&gt; with base &lt;code&gt;x&lt;/code&gt; (ie.</source>
          <target state="translated">Следующая функция возвращает логарифм &lt;code&gt;y&lt;/code&gt; с основанием &lt;code&gt;x&lt;/code&gt; (т.е.</target>
        </trans-unit>
        <trans-unit id="a25bfd8e218e8f88e0778acd6e8859d846a35ea0" translate="yes" xml:space="preserve">
          <source>The following function returns the natural log of 10:</source>
          <target state="translated">Следующая функция возвращает естественный журнал 10:</target>
        </trans-unit>
        <trans-unit id="3c3ec30f04bc1a3998ebf4f0dc81cd0c2c01b785" translate="yes" xml:space="preserve">
          <source>The following function returns the natural log of 2:</source>
          <target state="translated">Следующая функция возвращает естественный журнал 2:</target>
        </trans-unit>
        <trans-unit id="26d5ec963fd7f5f6207a9e3b41b9a2e3ab8e9042" translate="yes" xml:space="preserve">
          <source>The following function returns the square root of 2:</source>
          <target state="translated">Следующая функция возвращает квадратный корень 2:</target>
        </trans-unit>
        <trans-unit id="412a99fabb8e3c670dc34d566914e0d7fea0ae81" translate="yes" xml:space="preserve">
          <source>The following function uses &lt;a href=&quot;../function/apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt; to get the maximum of an array. &lt;code&gt;getMaxOfArray([1, 2, 3])&lt;/code&gt; is equivalent to &lt;code&gt;Math.max(1, 2, 3)&lt;/code&gt;, but you can use &lt;code&gt;getMaxOfArray()&lt;/code&gt; on programmatically constructed arrays. This should only be used for arrays with relatively few elements.</source>
          <target state="translated">Следующая функция использует &lt;a href=&quot;../function/apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt; для получения максимума массива. &lt;code&gt;getMaxOfArray([1, 2, 3])&lt;/code&gt; эквивалентен &lt;code&gt;Math.max(1, 2, 3)&lt;/code&gt; , но вы можете использовать &lt;code&gt;getMaxOfArray()&lt;/code&gt; для программно построенных массивов. Это следует использовать только для массивов с относительно небольшим количеством элементов.</target>
        </trans-unit>
        <trans-unit id="ccb0be88cc25761bcd560b56f507413ede58db69" translate="yes" xml:space="preserve">
          <source>The following function uses &lt;code&gt;Math.PI&lt;/code&gt; to calculate the circumference of a circle with a passed radius.</source>
          <target state="translated">Следующая функция использует &lt;code&gt;Math.PI&lt;/code&gt; для вычисления длины окружности с переданным радиусом.</target>
        </trans-unit>
        <trans-unit id="061834eb03b809e146925d275495f661a7f57d90" translate="yes" xml:space="preserve">
          <source>The following function will throw a &lt;code&gt;ReferenceError&lt;/code&gt; when invoked, because the default parameter value does not have access to the child scope of the function body:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ef984e932abcf03110d58a2bded6764a8dfd40" translate="yes" xml:space="preserve">
          <source>The following is a shim to provide support to non-supporting browsers:</source>
          <target state="translated">Ниже приведена шайба для обеспечения поддержки не поддерживающих браузеров:</target>
        </trans-unit>
        <trans-unit id="0e15c332b22241976e1db8d7e980cc1baf421b50" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;getPrototypeOf&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующий параметр передается методу &lt;code&gt;getPrototypeOf&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="12eb00305c6476161a442726f9a073d4e04c0503" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;isExtensible&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующий параметр передается методу &lt;code&gt;isExtensible&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="4f50a67a4cb80545dd6f4c711e4a32fe5d645118" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;ownKeys&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующий параметр передается методу &lt;code&gt;ownKeys&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="0a1f873b3102e21ab765ec8cf3fc4c3058971a48" translate="yes" xml:space="preserve">
          <source>The following parameter is passed to the &lt;code&gt;preventExtensions&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующий параметр передается методу &lt;code&gt;preventExtensions&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="f479504b2ba267fee6c0c8ed8019bd2b17c573e9" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to &lt;code&gt;has&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">В метод &lt;code&gt;has&lt;/code&gt; передаются следующие параметры . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="fa43a582adf98ab045cf8c54e0843d43ab6b8373" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;apply&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;apply&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="4ab797515f7bfb7482091c203b75ba0da8332710" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;construct&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">В метод &lt;code&gt;construct&lt;/code&gt; передаются следующие параметры . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="ab7420398c074e030c2b2d0b274113b31eb5b2d2" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;defineProperty&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;defineProperty&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="b8c5bf5c6d27943370526bc5d8f400e52212e0fd" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;deleteProperty&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;deleteProperty&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="da5425b4c0210ec636acf5c70a1fd4a34950ab62" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;get&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">В метод &lt;code&gt;get&lt;/code&gt; передаются следующие параметры . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="99c63ab197516e310b74aa729d3c01403ed918f7" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;getOwnPropertyDescriptor&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="e3e64ab36836bcc7d94cada04ab31978e10fc95d" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;set&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">В метод &lt;code&gt;set&lt;/code&gt; передаются следующие параметры . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="5cc1a72fc13e9b21ee388b431e079b9391cc0a59" translate="yes" xml:space="preserve">
          <source>The following parameters are passed to the &lt;code&gt;setPrototypeOf&lt;/code&gt; method. &lt;code&gt;this&lt;/code&gt; is bound to the handler.</source>
          <target state="translated">Следующие параметры передаются методу &lt;code&gt;setPrototypeOf&lt;/code&gt; . &lt;code&gt;this&lt;/code&gt; привязано к обработчику.</target>
        </trans-unit>
        <trans-unit id="937e588a79f7bab77d0e4e260afa82cace945198" translate="yes" xml:space="preserve">
          <source>The following polyfill is the most efficient.</source>
          <target state="translated">Следующий полипропилен является наиболее эффективным.</target>
        </trans-unit>
        <trans-unit id="d7bf164e0c77563f43e44def0b05325de3f4d410" translate="yes" xml:space="preserve">
          <source>The following properties describe the date-time components to use in formatted output, and their desired representations. Implementations are required to support at least the following subsets:</source>
          <target state="translated">Следующие свойства описывают компоненты дата-время для использования в отформатированном выводе,а также их желаемые представления.Для поддержки,по крайней мере,следующих подмножеств,требуется внедрение:</target>
        </trans-unit>
        <trans-unit id="c41695df01ac9ec4823cf03dcadef70433c3ff69" translate="yes" xml:space="preserve">
          <source>The following properties fall into two groups: &lt;code&gt;minimumIntegerDigits&lt;/code&gt;, &lt;code&gt;minimumFractionDigits&lt;/code&gt;, and &lt;code&gt;maximumFractionDigits&lt;/code&gt; in one group, &lt;code&gt;minimumSignificantDigits&lt;/code&gt; and &lt;code&gt;maximumSignificantDigits&lt;/code&gt; in the other. If at least one property from the second group is defined, then the first group is ignored.</source>
          <target state="translated">Следующие свойства делятся на две группы: &lt;code&gt;minimumIntegerDigits&lt;/code&gt; , &lt;code&gt;minimumFractionDigits&lt;/code&gt; и &lt;code&gt;maximumFractionDigits&lt;/code&gt; в одной группе, &lt;code&gt;minimumSignificantDigits&lt;/code&gt; и &lt;code&gt;maximumSignificantDigits&lt;/code&gt; в другой. Если определено хотя бы одно свойство из второй группы, то первая группа игнорируется.</target>
        </trans-unit>
        <trans-unit id="8151545a55b4403615db64103afa64686625755e" translate="yes" xml:space="preserve">
          <source>The following provides a means of ensuring that going through a string loop always provides a whole character, even if the string contains characters that are not in the Basic Multi-lingual Plane.</source>
          <target state="translated">Ниже приведено обеспечение того,что проходя через цикл строки,всегда можно получить целый символ,даже если строка содержит символы,которых нет в базовой мультиязычной плоскости.</target>
        </trans-unit>
        <trans-unit id="c12fd1be813759e3abb66c9468accaac214413c2" translate="yes" xml:space="preserve">
          <source>The following return statements all break the function execution:</source>
          <target state="translated">Все приведенные ниже возвратные сообщения нарушают выполнение функции:</target>
        </trans-unit>
        <trans-unit id="f5f13e29076e638f41dab991b29c38412e7787fe" translate="yes" xml:space="preserve">
          <source>The following script switches the words in the string. For the replacement text, the script uses &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions/Groups_and_Ranges&quot;&gt;capturing groups&lt;/a&gt; and the &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; replacement patterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccbd0bc8090028acdf0c4af34c15e6b0660f4fc" translate="yes" xml:space="preserve">
          <source>The following script switches the words in the string. For the replacement text, the script uses the &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; replacement patterns.</source>
          <target state="translated">Следующий скрипт переключает слова в строке. Для текста замены сценарий использует шаблоны замены &lt;code&gt;$1&lt;/code&gt; и &lt;code&gt;$2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="743ac89ab1b2ca9932b0dd8ebbba282b86ac2700" translate="yes" xml:space="preserve">
          <source>The following script uses the &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instance to match a name in the format &lt;em&gt;first last&lt;/em&gt; and output it in the format &lt;em&gt;last, first&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e53b869cfd8a1e72141eb6dd27f0fefc4c4247" translate="yes" xml:space="preserve">
          <source>The following script uses the &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;replace()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; instance to match a name in the format &lt;em&gt;first last&lt;/em&gt; and output it in the format &lt;em&gt;last, first&lt;/em&gt;. In the replacement text, the script uses &lt;code&gt;$1&lt;/code&gt; and &lt;code&gt;$2&lt;/code&gt; to indicate the results of the corresponding matching parentheses in the regular expression pattern.</source>
          <target state="translated">Следующий скрипт использует &lt;a href=&quot;string/replace&quot;&gt; &lt;code&gt;replace()&lt;/code&gt; &lt;/a&gt; метода &lt;a href=&quot;string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; экземпляра должны совпадать с именем в формате &lt;em&gt;первые в прошлом&lt;/em&gt; и вывод его в формате &lt;em&gt;наконец, первым&lt;/em&gt; . В тексте замены сценарий использует &lt;code&gt;$1&lt;/code&gt; и &lt;code&gt;$2&lt;/code&gt; для обозначения результатов соответствующих совпадающих круглых скобок в шаблоне регулярного выражения.</target>
        </trans-unit>
        <trans-unit id="9e253082ec00603de24a49b6d772894def1dae7a" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;CompileError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">Следующий фрагмент &lt;code&gt;CompileError&lt;/code&gt; создает новый экземпляр CompileError и записывает сведения о нем в консоль:</target>
        </trans-unit>
        <trans-unit id="17a2bebde57b4cb514bc78c904588f7cea008cb6" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;LinkError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">Следующий фрагмент &lt;code&gt;LinkError&lt;/code&gt; создает новый экземпляр LinkError и записывает его данные в консоль:</target>
        </trans-unit>
        <trans-unit id="85be124bb9c01dcf7e77b8d2221144dae9cd2243" translate="yes" xml:space="preserve">
          <source>The following snippet creates a new &lt;code&gt;RuntimeError&lt;/code&gt; instance, and logs its details to the console:</source>
          <target state="translated">Следующий фрагмент &lt;code&gt;RuntimeError&lt;/code&gt; создает новый экземпляр RuntimeError и записывает его данные в консоль:</target>
        </trans-unit>
        <trans-unit id="aacd224c0453ffca49e10cdd635cd96ecb5da5b4" translate="yes" xml:space="preserve">
          <source>The following snippet gives a simple example:</source>
          <target state="translated">Следующий отрывок дает простой пример:</target>
        </trans-unit>
        <trans-unit id="ec30df8c04565398d5637d415038b1acc414b4c6" translate="yes" xml:space="preserve">
          <source>The following snippet iterates over an object's properties, calculating their sum:</source>
          <target state="translated">Следующий фрагмент итератует над свойствами объекта,вычисляя их сумму:</target>
        </trans-unit>
        <trans-unit id="2afcc2c0b447fea8186479457c7efcba60ca15c4" translate="yes" xml:space="preserve">
          <source>The following statement creates a &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object with the arguments treated as UTC instead of local:</source>
          <target state="translated">Следующий оператор создает объект &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; с аргументами, рассматриваемыми как UTC вместо локальных:</target>
        </trans-unit>
        <trans-unit id="fe2843b8cc5971e75ecc8c346caa1d4aade94543" translate="yes" xml:space="preserve">
          <source>The following statements call the padZeros function.</source>
          <target state="translated">Следующие утверждения вызывают функцию padZeros.</target>
        </trans-unit>
        <trans-unit id="0438afddea1b305aee1bf6561c3be0974673f1f8" translate="yes" xml:space="preserve">
          <source>The following syntax does not export a default export from the imported module:</source>
          <target state="translated">Следующий синтаксис не экспортирует экспорт по умолчанию из импортируемого модуля:</target>
        </trans-unit>
        <trans-unit id="9158f4b1519f530409f2abee6e30bd14b500ade1" translate="yes" xml:space="preserve">
          <source>The following syntax with the &lt;a href=&quot;../operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt;&lt;/a&gt; operator will throw a &lt;a href=&quot;typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Следующий синтаксис с оператором &lt;a href=&quot;../operators/new&quot;&gt; &lt;code&gt;new&lt;/code&gt; &lt;/a&gt; вызовет &lt;a href=&quot;typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="d93d4de577b5f2425afae26013b10c61f38724e8" translate="yes" xml:space="preserve">
          <source>The following table is ordered from highest (20) to lowest (1) precedence.</source>
          <target state="translated">Следующая таблица расположена в порядке убывания от наибольшей (20)до наименьшей (1)старшинства.</target>
        </trans-unit>
        <trans-unit id="7e8baa3183748ed8f70e1d1a358edcd710d1b98e" translate="yes" xml:space="preserve">
          <source>The following table is ordered from highest (21) to lowest (1) precedence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9657752ef9e7009f8dcd490e5697024aa2425102" translate="yes" xml:space="preserve">
          <source>The following table provides a daily implementation status for this feature, because this feature has not yet reached cross-browser stability. The data is generated by running the relevant feature tests in &lt;a href=&quot;https://github.com/tc39/test262&quot;&gt;Test262&lt;/a&gt;, the standard test suite of JavaScript, in the nightly build, or latest release of each browser's JavaScript engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4844a753006c31a8bf5c5f7bf55bc1e379707d8" translate="yes" xml:space="preserve">
          <source>The following table shows the results for this script:</source>
          <target state="translated">В следующей таблице приведены результаты для этого скрипта:</target>
        </trans-unit>
        <trans-unit id="c85c017993b5e507c59172ead41a6b6e3c0b9455" translate="yes" xml:space="preserve">
          <source>The following table summarizes JavaScript's bitwise operators:</source>
          <target state="translated">В следующей таблице приведены битовые операторы JavaScript:</target>
        </trans-unit>
        <trans-unit id="5ac8fabfc5529ca28984a3d751a601da81f5fc87" translate="yes" xml:space="preserve">
          <source>The following table summarizes the possible return values of &lt;code&gt;typeof&lt;/code&gt;. For more information about types and primitives, see also the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;JavaScript data structure&lt;/a&gt; page.</source>
          <target state="translated">В следующей таблице приведены возможные возвращаемые значения &lt;code&gt;typeof&lt;/code&gt; . Дополнительные сведения о типах и примитивах см. Также на странице &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures&quot;&gt;структуры данных JavaScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63f5e3ac538b2874e6dfa60bc002f4adfb4b1416" translate="yes" xml:space="preserve">
          <source>The following three expressions create the same regular expression object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d291780671c706d14403b4280496b1c4c62a91d" translate="yes" xml:space="preserve">
          <source>The following works because NaN is the only value in JavaScript which is not equal to itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79b67a698098b87e6657a6f4fb9b62eab007283" translate="yes" xml:space="preserve">
          <source>The following works because NaN is the only value in javascript which is not equal to itself.</source>
          <target state="translated">Следующее работает,потому что NaN-единственное значение в javascript,которое не равно самому себе.</target>
        </trans-unit>
        <trans-unit id="d269af0c76f97a031495ac252672eba2a214b9e6" translate="yes" xml:space="preserve">
          <source>The for-of iteration is always the first component. Multiple for-of iterations or if statements are allowed.</source>
          <target state="translated">Итерация всегда является первым компонентом.Множественные форы итераций или если разрешены утверждения.</target>
        </trans-unit>
        <trans-unit id="c7d42cd2807709742cac1dab07e7e6429265eba9" translate="yes" xml:space="preserve">
          <source>The for...in loop &lt;a href=&quot;../statements/for...in#Array_iteration_and_for...in&quot;&gt;shouldn't be used for Array iteration&lt;/a&gt;. Did you intend to use a &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; loop instead of a &lt;code&gt;for-in&lt;/code&gt; loop to iterate an &lt;a href=&quot;../global_objects/array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;? The &lt;code&gt;for&lt;/code&gt; loop allows you to set an initializer then as well:</source>
          <target state="translated">Цикл for ... in &lt;a href=&quot;../statements/for...in#Array_iteration_and_for...in&quot;&gt;не следует использовать для итерации массива&lt;/a&gt; . Вы намеревались использовать цикл &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; вместо цикла &lt;code&gt;for-in&lt;/code&gt; для итерации &lt;a href=&quot;../global_objects/array&quot;&gt; &lt;code&gt;Array&lt;/code&gt; &lt;/a&gt; ? Цикл &lt;code&gt;for&lt;/code&gt; также позволяет вам установить инициализатор:</target>
        </trans-unit>
        <trans-unit id="9be3bfe024b9dcc99081002eafbe6a99f4645ec3" translate="yes" xml:space="preserve">
          <source>The format matching algorithm to use. Possible values are &lt;code&gt;&quot;basic&quot;&lt;/code&gt; and &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;. See the following paragraphs for information about the use of this property.</source>
          <target state="translated">Используемый алгоритм сопоставления формата. Возможные значения: &lt;code&gt;&quot;basic&quot;&lt;/code&gt; и &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; ; по умолчанию установлено &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; . См. Следующие абзацы для получения информации об использовании этого свойства.</target>
        </trans-unit>
        <trans-unit id="b51249a9c5efba458f27d56c20290516ae481d15" translate="yes" xml:space="preserve">
          <source>The formatting style to use. Possible values are &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; for plain number formatting, &lt;code&gt;&quot;currency&quot;&lt;/code&gt; for currency formatting, and &lt;code&gt;&quot;percent&quot;&lt;/code&gt; for percent formatting; the default is &lt;code&gt;&quot;decimal&quot;&lt;/code&gt;.</source>
          <target state="translated">Используемый стиль форматирования. Возможные значения: &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; для форматирования простых чисел, &lt;code&gt;&quot;currency&quot;&lt;/code&gt; для форматирования валюты и &lt;code&gt;&quot;percent&quot;&lt;/code&gt; для форматирования процентов; по умолчанию - &lt;code&gt;&quot;decimal&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9a2687bd75f51167d86ce5a12b20e5afcab2ff4" translate="yes" xml:space="preserve">
          <source>The former approach means that any operation that performs such mutation, that throws an exception on failure to mutate, will have to create the exception itself. For example, &lt;a href=&quot;../../object/setprototypeof&quot;&gt;&lt;code&gt;Object.setPrototypeOf()&lt;/code&gt;&lt;/a&gt; will create and throw a &lt;code&gt;TypeError&lt;/code&gt; itself. If the mutation is performed by an operation that &lt;em&gt;doesn't&lt;/em&gt; ordinarily throw in case of failure, such as &lt;a href=&quot;../../reflect/setprototypeof&quot;&gt;&lt;code&gt;Reflect.setPrototypeOf()&lt;/code&gt;&lt;/a&gt;, no exception will be thrown.</source>
          <target state="translated">Первый подход означает, что любая операция, которая выполняет такую ​​мутацию, которая генерирует исключение в случае неудачи изменения, должна будет создать исключение самостоятельно. Например, &lt;a href=&quot;../../object/setprototypeof&quot;&gt; &lt;code&gt;Object.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; создаст и выбросит &lt;code&gt;TypeError&lt;/code&gt; . Если мутация выполняется операцией, &lt;em&gt;которая&lt;/em&gt; обычно &lt;em&gt;не&lt;/em&gt; срабатывает в случае сбоя, например &lt;a href=&quot;../../reflect/setprototypeof&quot;&gt; &lt;code&gt;Reflect.setPrototypeOf()&lt;/code&gt; &lt;/a&gt; , исключение не генерируется .</target>
        </trans-unit>
        <trans-unit id="c85d5da70ac3a90e9c2e6569717a34b4468c3322" translate="yes" xml:space="preserve">
          <source>The fraction number.</source>
          <target state="translated">Дробное число.</target>
        </trans-unit>
        <trans-unit id="657b4d938f69ada8c1426df2f622cc4907247752" translate="yes" xml:space="preserve">
          <source>The fulfillment of the promise is simply logged, via a fulfill callback set using &lt;a href=&quot;promise/then&quot;&gt;&lt;code&gt;p1.then()&lt;/code&gt;&lt;/a&gt;. A few logs show how the synchronous part of the method is decoupled from the asynchronous completion of the promise.</source>
          <target state="translated">Выполнение обещания просто регистрируется через набор обратных вызовов выполнения с помощью &lt;a href=&quot;promise/then&quot;&gt; &lt;code&gt;p1.then()&lt;/code&gt; &lt;/a&gt; . Несколько журналов показывают, как синхронная часть метода отделяется от асинхронного завершения обещания.</target>
        </trans-unit>
        <trans-unit id="ececd6466ab35c55722b37e4f78dcf8d3e5a682a" translate="yes" xml:space="preserve">
          <source>The full JSON syntax is as follows:</source>
          <target state="translated">Полный синтаксис JSON выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="4c8b7fb65617ce93232fc91b4b6cbfcf63167c0e" translate="yes" xml:space="preserve">
          <source>The full string of characters matched</source>
          <target state="translated">Полная строка символов совпадает</target>
        </trans-unit>
        <trans-unit id="2ecaf2f261d49b30f7d0da994fcbe6c2636cb485" translate="yes" xml:space="preserve">
          <source>The function declaration (&lt;code&gt;function&lt;/code&gt; statement)</source>
          <target state="translated">Объявление &lt;code&gt;function&lt;/code&gt; ( оператор функции )</target>
        </trans-unit>
        <trans-unit id="9e921e507f8b7f8d1442786ea718cddb26e1fe39" translate="yes" xml:space="preserve">
          <source>The function expression (&lt;code&gt;function&lt;/code&gt; expression)</source>
          <target state="translated">Выражение &lt;code&gt;function&lt;/code&gt; ( выражение функции )</target>
        </trans-unit>
        <trans-unit id="da3b1e53fe2413cb7f204420522784474bf1d935" translate="yes" xml:space="preserve">
          <source>The function name also appears when the function is serialized via &lt;a href=&quot;global_objects/function/tostring&quot;&gt;&lt;code&gt;Function&lt;/code&gt;'s toString method&lt;/a&gt;.</source>
          <target state="translated">Имя функции также появляется , когда функция сериализации с помощью &lt;a href=&quot;global_objects/function/tostring&quot;&gt; &lt;code&gt;Function&lt;/code&gt; методы ToString &amp;laquo;s&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd88e0a29a4aed692f0ed42a9304d90f8c1ec00a" translate="yes" xml:space="preserve">
          <source>The function name.</source>
          <target state="translated">Имя функции.</target>
        </trans-unit>
        <trans-unit id="62bdd69c0a22b0df01e076d42d909e2bfb16837c" translate="yes" xml:space="preserve">
          <source>The function name. Can be omitted, in which case the function becomes known as an anonymous function.</source>
          <target state="translated">Имя функции.Может быть опущена,в этом случае функция становится анонимной.</target>
        </trans-unit>
        <trans-unit id="f7614240b44bca06d14b83cf1abe2f594314766d" translate="yes" xml:space="preserve">
          <source>The function name. Can be omitted, in which case the function is &lt;em&gt;anonymous&lt;/em&gt;. The name is only local to the function body.</source>
          <target state="translated">Имя функции. Может быть опущено, и в этом случае функция &lt;em&gt;анонимна&lt;/em&gt; . Имя является локальным только для тела функции.</target>
        </trans-unit>
        <trans-unit id="ab196234ca12cda83f1a5f88cc198e3eb542db95" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;compare&lt;/code&gt; getter returns a number indicating how &lt;code&gt;string1&lt;/code&gt; and &lt;code&gt;string2&lt;/code&gt; compare to each other according to the sort order of this &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; object: a negative value if &lt;code&gt;string1&lt;/code&gt; comes before &lt;code&gt;string2&lt;/code&gt;; a positive value if &lt;code&gt;string1&lt;/code&gt; comes after &lt;code&gt;string2&lt;/code&gt;; 0 if they are considered equal.</source>
          <target state="translated">Функция, возвращаемая геттером &lt;code&gt;compare&lt;/code&gt; возвращает число, показывающее, как &lt;code&gt;string1&lt;/code&gt; и &lt;code&gt;string2&lt;/code&gt; сравниваются друг с другом в соответствии с порядком сортировки этого объекта &lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; : отрицательное значение, если &lt;code&gt;string1&lt;/code&gt; предшествует &lt;code&gt;string2&lt;/code&gt; ; положительное значение, если &lt;code&gt;string1&lt;/code&gt; идет после &lt;code&gt;string2&lt;/code&gt; ; 0, если они считаются равными.</target>
        </trans-unit>
        <trans-unit id="429ee9f92f94546f7fbcc8bb211322a922e1895d" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;format&lt;/code&gt; getter formats a date into a string according to the locale and formatting options of this &lt;a href=&quot;../datetimeformat&quot;&gt;&lt;code&gt;Intl.DateTimeFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Функция, возвращаемая получателем &lt;code&gt;format&lt;/code&gt; форматирует дату в строку в соответствии с языковым стандартом и параметрами форматирования этого объекта &lt;a href=&quot;../datetimeformat&quot;&gt; &lt;code&gt;Intl.DateTimeFormat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c00b71412d9e081095256bc3342a353d70f7cd4e" translate="yes" xml:space="preserve">
          <source>The function returned by the &lt;code&gt;format&lt;/code&gt; getter formats a number into a string according to the locale and formatting options of this &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Функция, возвращаемая получателем &lt;code&gt;format&lt;/code&gt; форматирует число в строку в соответствии с языковым стандартом и параметрами форматирования этого объекта &lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2ecc673f0d69994e7b149448cc587280408b2af2" translate="yes" xml:space="preserve">
          <source>The function&amp;rsquo;s name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e3509a5feb3dd200ea681696cf06d22c571073" translate="yes" xml:space="preserve">
          <source>The generator function declaration (&lt;code&gt;function*&lt;/code&gt; statement)</source>
          <target state="translated">Объявление &lt;code&gt;function*&lt;/code&gt; генератора ( оператор function * )</target>
        </trans-unit>
        <trans-unit id="d2a434a0139db7e8a2d62a84236951cfb748eba1" translate="yes" xml:space="preserve">
          <source>The generator function expression (&lt;code&gt;function*&lt;/code&gt; expression)</source>
          <target state="translated">Выражение &lt;code&gt;function*&lt;/code&gt; генератора ( функция * выражение)</target>
        </trans-unit>
        <trans-unit id="880264df9dd784fe5a4ce45e4105f3d5e5b98c6b" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Глобальный объект &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c36297780bfef1220ae202613574c746319748e" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../parsefloat&quot;&gt;&lt;code&gt;parseFloat()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Глобальный &lt;a href=&quot;../parsefloat&quot;&gt; &lt;code&gt;parseFloat()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="027cdd1d38c80faf686eadfdd4a47631060f7d95" translate="yes" xml:space="preserve">
          <source>The global &lt;a href=&quot;../parseint&quot;&gt;&lt;code&gt;parseInt()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Глобальный метод &lt;a href=&quot;../parseint&quot;&gt; &lt;code&gt;parseInt()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb00c981780b71f173fbee37d38368abbfa3ca8b" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;Infinity&lt;/strong&gt;&lt;/code&gt; property is a numeric value representing infinity.</source>
          <target state="translated">Глобальное свойство &lt;code&gt;&lt;strong&gt;Infinity&lt;/strong&gt;&lt;/code&gt; - это числовое значение, представляющее бесконечность.</target>
        </trans-unit>
        <trans-unit id="64d1f1892749fa9bc4b2887262f573c88b4a2326" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;NaN&lt;/strong&gt;&lt;/code&gt; property is a value representing Not-A-Number.</source>
          <target state="translated">Глобальное свойство &lt;code&gt;&lt;strong&gt;NaN&lt;/strong&gt;&lt;/code&gt; - это значение, представляющее Not-A-Number.</target>
        </trans-unit>
        <trans-unit id="999e627c54c2e101c2088742c26c98fb467de2c0" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;isFinite()&lt;/strong&gt;&lt;/code&gt; function determines whether the passed value is a finite number. If needed, the parameter is first converted to a number.</source>
          <target state="translated">Глобальная &lt;code&gt;&lt;strong&gt;isFinite()&lt;/strong&gt;&lt;/code&gt; определяет, является ли переданное значение конечным числом. При необходимости параметр сначала преобразуется в число.</target>
        </trans-unit>
        <trans-unit id="d4a30173e0cacba49859820c763dd1ac741d5dd9" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;&lt;strong&gt;undefined&lt;/strong&gt;&lt;/code&gt; property represents the primitive value &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt;. It is one of JavaScript's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;primitive types&lt;/a&gt;.</source>
          <target state="translated">Глобальное свойство &lt;code&gt;&lt;strong&gt;undefined&lt;/strong&gt;&lt;/code&gt; представляет примитивное значение &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Undefined&quot;&gt;undefined&lt;/a&gt;&lt;/code&gt; . Это один из &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Primitive&quot;&gt;примитивных типов&lt;/a&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="82f901481098e88993e1cd494a6822ac3943ed2f" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;Error&lt;/code&gt; object contains no methods of its own, however, it does inherit some methods from the prototype chain.</source>
          <target state="translated">Глобальный объект &lt;code&gt;Error&lt;/code&gt; не содержит собственных методов, однако он наследует некоторые методы из цепочки прототипов.</target>
        </trans-unit>
        <trans-unit id="3eff31a0b0151004fb3e955a32c430d53d60856a" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;EvalError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальный &lt;code&gt;EvalError&lt;/code&gt; не содержит собственных методов, однако он наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="4aadaebc86eb9d6affc602bf697f4904db9ee3a9" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;Function&lt;/code&gt; object has no methods or properties of its own. However, since it is a function itself, it does inherit some methods and properties through the prototype chain from &lt;a href=&quot;function/prototype&quot;&gt;&lt;code&gt;Function.prototype&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Глобальный объект &lt;code&gt;Function&lt;/code&gt; не имеет собственных методов или свойств. Однако, поскольку это сама функция, она наследует некоторые методы и свойства через цепочку прототипов от &lt;a href=&quot;function/prototype&quot;&gt; &lt;code&gt;Function.prototype&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="31910ae3741fa6eddc0fa94ed342eebc1b687403" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;RangeError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальный &lt;code&gt;RangeError&lt;/code&gt; содержит собственных методов, однако он наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="32b7d95293e623785f895fff9fa203362d640505" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;RegExp&lt;/code&gt; object has no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальный объект &lt;code&gt;RegExp&lt;/code&gt; не имеет собственных методов, однако он наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="eebb3136a50f28fa26c762ba41d905d8743880e2" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;SyntaxError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальная &lt;code&gt;SyntaxError&lt;/code&gt; содержит собственных методов, однако она наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="bc8162c03bf05356af9524614d6142c7da0ed75f" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;TypeError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальная &lt;code&gt;TypeError&lt;/code&gt; содержит собственных методов, однако она наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="d1fd9211b62420f34112db872d8541779750647a" translate="yes" xml:space="preserve">
          <source>The global &lt;code&gt;URIError&lt;/code&gt; contains no methods of its own, however, it does inherit some methods through the prototype chain.</source>
          <target state="translated">Глобальная &lt;code&gt;URIError&lt;/code&gt; содержит собственных методов, однако она наследует некоторые методы через цепочку прототипов.</target>
        </trans-unit>
        <trans-unit id="53bf27a19683454ca1af3b5ff3d4b6098045bd86" translate="yes" xml:space="preserve">
          <source>The global function &lt;a href=&quot;../isfinite&quot;&gt;&lt;code&gt;isFinite&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Глобальная функция &lt;a href=&quot;../isfinite&quot;&gt; &lt;code&gt;isFinite&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7563140ff98acbeb55e75e9556852f09e6fdc769" translate="yes" xml:space="preserve">
          <source>The global object sits at the top of the scope chain. When attempting to resolve a name to a value, the scope chain is searched. This means that properties on the global object are conveniently visible from every scope, without having to qualify the names with &lt;code&gt;globalThis.&lt;/code&gt; or &lt;code&gt;window.&lt;/code&gt; or &lt;code&gt;global.&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a170fbae6a70c557450474289bc1b51471ec03" translate="yes" xml:space="preserve">
          <source>The global property &lt;code&gt;&lt;strong&gt;Infinity&lt;/strong&gt;&lt;/code&gt; is a numeric value representing infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82cd1c256ddf0c828a7e89ab645b7cc1cb848df6" translate="yes" xml:space="preserve">
          <source>The global scope is bound to the &lt;a href=&quot;globalthis&quot;&gt;global object&lt;/a&gt;, so checking the existence of a variable in the global context can be done by checking the existence of a property on the &lt;em&gt;global object&lt;/em&gt;, using the &lt;a href=&quot;../operators/in&quot;&gt;&lt;code&gt;in&lt;/code&gt;&lt;/a&gt; operator, for instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2533a6aeb5454bbd59ef5fea39ae759465302a42" translate="yes" xml:space="preserve">
          <source>The global symbol registry is a list with the following record structure and it is initialized empty:</source>
          <target state="translated">Глобальный реестр символов представляет собой список со следующей структурой записи и инициализируется как пустой:</target>
        </trans-unit>
        <trans-unit id="7891007b001dfcd3d8d85de10fc342d652cd8184" translate="yes" xml:space="preserve">
          <source>The global variable &lt;code&gt;undefined&lt;/code&gt; is also read-only, so you can't silence the infamous &quot;undefined is not a function&quot; error by doing this:</source>
          <target state="translated">Глобальная переменная &lt;code&gt;undefined&lt;/code&gt; также доступна только для чтения, поэтому вы не можете заглушить печально известную ошибку &amp;laquo;undefined is not a function&amp;raquo;, сделав следующее:</target>
        </trans-unit>
        <trans-unit id="a0d5cf30e70f187fc72dc65cc1830fe095e7a188" translate="yes" xml:space="preserve">
          <source>The global variable or object property that was assigned to is a read-only property. (Technically, it is a &lt;a href=&quot;../global_objects/object/defineproperty#Writable_attribute&quot;&gt;non-writable data property&lt;/a&gt;.)</source>
          <target state="translated">Глобальная переменная или свойство объекта, которому было назначено, доступно только для чтения. (Технически это &lt;a href=&quot;../global_objects/object/defineproperty#Writable_attribute&quot;&gt;свойство данных, которое нельзя записывать&lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="8fc2ae19dad606a0c63b9c278d7c96ffb47eb8df" translate="yes" xml:space="preserve">
          <source>The greater than operator returns true if the left operand is greater than the right operand.</source>
          <target state="translated">Больше чем оператор возвращает true,если левый операнд больше правого.</target>
        </trans-unit>
        <trans-unit id="79a71e127d44c490ee6822b91d839605a85d99ed" translate="yes" xml:space="preserve">
          <source>The greater than or equal operator returns true if the left operand is greater than or equal to the right operand.</source>
          <target state="translated">Оператор больше или равен возвращает true,если левый операнд больше или равен правому операнду.</target>
        </trans-unit>
        <trans-unit id="97b1aaae463ca711f77445c710b6ada37cd0fdf4" translate="yes" xml:space="preserve">
          <source>The group separator string (&quot;,&quot;).</source>
          <target state="translated">Строка разделителя групп (&quot;,&quot;).</target>
        </trans-unit>
        <trans-unit id="8974e128d16a8d8a8ac454a73fd5382ad405106a" translate="yes" xml:space="preserve">
          <source>The grouping operator &lt;code&gt;( )&lt;/code&gt; controls the precedence of evaluation in expressions.</source>
          <target state="translated">Оператор группировки &lt;code&gt;( )&lt;/code&gt; управляет приоритетом оценки в выражениях.</target>
        </trans-unit>
        <trans-unit id="48684e74df907fcd7bdc50a836019abf2ed147b9" translate="yes" xml:space="preserve">
          <source>The grouping operator consists of a pair of parentheses around an expression or sub-expression to override the normal &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence&lt;/a&gt; so that expressions with lower precedence can be evaluated before an expression with higher priority. As it sounds it groups what's inside of the parentheses.</source>
          <target state="translated">Оператор группировки состоит из пары круглых скобок вокруг выражения или подвыражения, чтобы переопределить обычный &lt;a href=&quot;operator_precedence&quot;&gt;приоритет оператора,&lt;/a&gt; чтобы выражения с более низким приоритетом могли оцениваться перед выражением с более высоким приоритетом. Как бы то ни было, он группирует то, что внутри скобок.</target>
        </trans-unit>
        <trans-unit id="7e59b51c3d728abaed95fc5f2cba0caf059019bf" translate="yes" xml:space="preserve">
          <source>The grouping operator consists of a pair of parentheses around an expression or sub-expression to override the normal &lt;a href=&quot;operator_precedence&quot;&gt;operator precedence&lt;/a&gt; so that expressions with lower precedence can be evaluated before an expression with higher priority. As it sounds, it groups what's inside of the parentheses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb6a388fc5ab3b064cb0fe4fd00fa7c8e775174" translate="yes" xml:space="preserve">
          <source>The handler object is a placeholder object which contains traps for &lt;code&gt;Proxy&lt;/code&gt;.</source>
          <target state="translated">Объект-обработчик - это объект-заполнитель, который содержит ловушки для &lt;code&gt;Proxy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82caaf3cf8501fb595b30e400f51b26e47b25959" translate="yes" xml:space="preserve">
          <source>The hashbang comment specifies the path to a specific JavaScript interpreter that you want to use to execute the script. An example is as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbf0b146da97882ce0ccfda5db5731fc125bfa2" translate="yes" xml:space="preserve">
          <source>The head of a&lt;a href=&quot;../statements/for...in&quot;&gt; for...in&lt;/a&gt; loop contains an initializer expression. That is, a variable is declared and assigned a value |&lt;code&gt;for (var i = 0 in obj)&lt;/code&gt;|. In non-strict mode, this head declaration is silently ignored and behaves like &lt;code&gt;|for (var i in obj)|&lt;/code&gt;. In &lt;a href=&quot;../strict_mode&quot;&gt;strict mode&lt;/a&gt;, however, a &lt;code&gt;SyntaxError&lt;/code&gt; is thrown.</source>
          <target state="translated">Заголовок цикла &lt;a href=&quot;../statements/for...in&quot;&gt;for ... in&lt;/a&gt; содержит выражение инициализатора. То есть объявлена ​​переменная и ей присвоено значение | &lt;code&gt;for (var i = 0 in obj)&lt;/code&gt; |. В нестрогом режиме это объявление заголовка игнорируется и ведет себя как &lt;code&gt;|for (var i in obj)|&lt;/code&gt; , В &lt;a href=&quot;../strict_mode&quot;&gt;строгом режиме&lt;/a&gt; , однако, &lt;code&gt;SyntaxError&lt;/code&gt; выбрасывается.</target>
        </trans-unit>
        <trans-unit id="174e1373198a9ce05a7767bfaa5ca4d663f360ad" translate="yes" xml:space="preserve">
          <source>The head of a&lt;a href=&quot;../statements/for...of&quot;&gt; for...of&lt;/a&gt; loop contains an initializer expression. That is, a variable is declared and assigned a value |&lt;code&gt;for (var i = 0 of iterable)&lt;/code&gt;|. This is not allowed in for-of loops. You might want a &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; loop that does allow an initializer.</source>
          <target state="translated">Заголовок цикла &lt;a href=&quot;../statements/for...of&quot;&gt;for ... of&lt;/a&gt; содержит выражение инициализатора. То есть объявлена ​​переменная и ей присвоено значение | &lt;code&gt;for (var i = 0 of iterable)&lt;/code&gt; |. Это не допускается в циклах for-of. Возможно, вам понадобится цикл &lt;code&gt;&lt;a href=&quot;../statements/for&quot;&gt;for&lt;/a&gt;&lt;/code&gt; , который разрешает инициализатор.</target>
        </trans-unit>
        <trans-unit id="552ab113655d627cecf03ba0878ba8a32000b73c" translate="yes" xml:space="preserve">
          <source>The hour cycle to use. Possible values are &lt;code&gt;&quot;h11&quot;&lt;/code&gt;, &lt;code&gt;&quot;h12&quot;&lt;/code&gt;, &lt;code&gt;&quot;h23&quot;&lt;/code&gt;, or &lt;code&gt;&quot;h24&quot;&lt;/code&gt;. This option overrides the &lt;code&gt;hc&lt;/code&gt; language tag, if both are present, and the &lt;code&gt;hour12&lt;/code&gt; option takes precedence in case both options have been specified.</source>
          <target state="translated">Используемый часовой цикл. Возможные значения: &lt;code&gt;&quot;h11&quot;&lt;/code&gt; , &lt;code&gt;&quot;h12&quot;&lt;/code&gt; , &lt;code&gt;&quot;h23&quot;&lt;/code&gt; или &lt;code&gt;&quot;h24&quot;&lt;/code&gt; . Эта опция переопределяет языковой тег &lt;code&gt;hc&lt;/code&gt; , если присутствуют оба, и опция &lt;code&gt;hour12&lt;/code&gt; имеет приоритет, если указаны обе опции.</target>
        </trans-unit>
        <trans-unit id="3e2b706b1f7b76b1b675661c5ec4c77cca954fba" translate="yes" xml:space="preserve">
          <source>The hyperbolic arc-cosine of the given number. If the number is less than &lt;strong&gt;1&lt;/strong&gt;, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Гиперболический арккосинус заданного числа. Если число меньше &lt;strong&gt;1&lt;/strong&gt; , &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ea882b733d44011c36add7c1fd849755068be2ac" translate="yes" xml:space="preserve">
          <source>The hyperbolic arcsine of the given number.</source>
          <target state="translated">Гиперболический арксинус данного числа.</target>
        </trans-unit>
        <trans-unit id="7eb791a354a28fce45fbb892d0739717a1614f2f" translate="yes" xml:space="preserve">
          <source>The hyperbolic arctangent of the given number.</source>
          <target state="translated">Гиперболический арткангент данного числа.</target>
        </trans-unit>
        <trans-unit id="b2e438be83482889943cb4fc40b62059d88da573" translate="yes" xml:space="preserve">
          <source>The hyperbolic cosine of the given number.</source>
          <target state="translated">Гиперболический косинус данного числа.</target>
        </trans-unit>
        <trans-unit id="f1400f32dc9a455d3edae0a1f17e5028080a8e40" translate="yes" xml:space="preserve">
          <source>The hyperbolic sine of the given number.</source>
          <target state="translated">Гиперболический синус данного числа.</target>
        </trans-unit>
        <trans-unit id="6f604e097a4e9615a5020d901c221426a71dfcf6" translate="yes" xml:space="preserve">
          <source>The hyperbolic tangent of the given number.</source>
          <target state="translated">Гиперболический тангенс данного числа.</target>
        </trans-unit>
        <trans-unit id="b3fc67980048970e777d8b570d676169f31017c5" translate="yes" xml:space="preserve">
          <source>The identity operator returns true if the operands are strictly equal (see above) &lt;strong&gt;with no type conversion&lt;/strong&gt;.</source>
          <target state="translated">Оператор идентификации возвращает истину, если операнды строго равны (см. Выше) &lt;strong&gt;без преобразования типов&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4b86f1ae628e43bb330e15419a0a0c54faf3960c" translate="yes" xml:space="preserve">
          <source>The if block's &lt;code&gt;foo&lt;/code&gt; is still in the temporal dead zone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299ebba163fd49b025df2cefd8d6147e128674bb" translate="yes" xml:space="preserve">
          <source>The implicit wrapping of return values in &lt;a href=&quot;../global_objects/promise/resolve&quot;&gt;&lt;code&gt;Promise.resolve&lt;/code&gt;&lt;/a&gt; does not imply that &lt;code&gt;return await promiseValue&lt;/code&gt; is functionally equivalent to &lt;code&gt;return promiseValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e73dd9f1dac7496631e451063177665bce7fa2b" translate="yes" xml:space="preserve">
          <source>The increment operator increments (adds one to) its operand and returns a value.</source>
          <target state="translated">Оператор инкремента инкрементирует (добавляет один к)своему операнду и возвращает значение.</target>
        </trans-unit>
        <trans-unit id="67a85865c54da3334c97faa1a88ed42752ec9bc2" translate="yes" xml:space="preserve">
          <source>The index (position) of the current element in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffe01267591f8837241810ff457b1900bdfd8c5" translate="yes" xml:space="preserve">
          <source>The index at which to start changing the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81aa488abb81c9d5fd6b63cb29e600c39183d5c" translate="yes" xml:space="preserve">
          <source>The index at which to start searching backwards. Defaults to the array's length minus one (&lt;code&gt;arr.length - 1&lt;/code&gt;), i.e. the whole array will be searched. If the index is greater than or equal to the length of the array, the whole array will be searched. If negative, it is taken as the offset from the end of the array. Note that even when the index is negative, the array is still searched from back to front. If the calculated index is less than 0, -1 is returned, i.e. the array will not be searched.</source>
          <target state="translated">Индекс, с которого следует начать поиск в обратном направлении. По умолчанию длина массива минус один ( &lt;code&gt;arr.length - 1&lt;/code&gt; ), то есть поиск будет выполняться по всему массиву. Если индекс больше или равен длине массива, поиск будет выполняться по всему массиву. Если отрицательный, он принимается как смещение от конца массива. Обратите внимание, что даже если индекс отрицательный, поиск в массиве по-прежнему ведется снизу вверх. Если рассчитанный индекс меньше 0, возвращается -1, т.е. поиск в массиве не производится.</target>
        </trans-unit>
        <trans-unit id="12e7d9cf2e5fbb26b7b487a33779ebff623e7933" translate="yes" xml:space="preserve">
          <source>The index at which to start the next match.</source>
          <target state="translated">Индекс,с которого начинается следующий матч.</target>
        </trans-unit>
        <trans-unit id="81c96e9bd927f63dc2c2dc29803f1d1685b4b755" translate="yes" xml:space="preserve">
          <source>The index at which to start the next match. If &lt;code&gt;g&lt;/code&gt; is absent, this will always be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Индекс, с которого начинается следующее совпадение. Если &lt;code&gt;g&lt;/code&gt; отсутствует, всегда будет &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a34d6c9e7707b92ea48cc03f89d2de3f58eeb35c" translate="yes" xml:space="preserve">
          <source>The index of &lt;code&gt;&lt;var&gt;currentValue&lt;/var&gt;&lt;/code&gt; in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1ff8860b10df902ebff81881a58b531468f649" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array.</source>
          <target state="translated">Индекс текущего элемента,обрабатываемого в массиве.</target>
        </trans-unit>
        <trans-unit id="2fd6e929430e6974adbca5e947ca4d58bafa9f80" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array. Starts at index 0, if an &lt;code&gt;initialValue&lt;/code&gt; is provided, and at index 1 otherwise.</source>
          <target state="translated">Индекс текущего обрабатываемого элемента в массиве. Начинается с индекса 0, если &lt;code&gt;initialValue&lt;/code&gt; , и с индекса 1 в противном случае.</target>
        </trans-unit>
        <trans-unit id="7f9d6fb873da6b62063da7d4f1b7d6b55b21fcdc" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array. Starts from index &lt;code&gt;0&lt;/code&gt; if an &lt;code&gt;initialValue&lt;/code&gt; is provided. Otherwise, it starts from index &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b7b8ecfbd9528e0672019a2333fad8bf860ef2" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the typed array.</source>
          <target state="translated">Индекс текущего элемента,обрабатываемого в типизированном массиве.</target>
        </trans-unit>
        <trans-unit id="4e62fd3255e9662d7685ba2ca3e94d371d4e4e4a" translate="yes" xml:space="preserve">
          <source>The index of the element</source>
          <target state="translated">Индекс элемента</target>
        </trans-unit>
        <trans-unit id="7e20c5326e47c6b69c12859e953192437092dc48" translate="yes" xml:space="preserve">
          <source>The index of the first character to exclude from the returned substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f78231231b933e396fae84668988f35e42d8e9f" translate="yes" xml:space="preserve">
          <source>The index of the first character to include in the returned substring.</source>
          <target state="translated">Индекс первого символа,включаемого в возвращаемую подстроку.</target>
        </trans-unit>
        <trans-unit id="fcccb837d8b0bea139158aebd624645ac5b1f678" translate="yes" xml:space="preserve">
          <source>The index of the first element in the array that passes the test. Otherwise, &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f65d5609b33c7459e10d0ad201dbc7ec922d04b" translate="yes" xml:space="preserve">
          <source>The index of the first match between the regular expression and the given string, or &lt;code&gt;-1&lt;/code&gt; if no match was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36739cd660d201d481956db3ac5d01ca1bd6793f" translate="yes" xml:space="preserve">
          <source>The index of the first match between the regular expression and the given string; if not found, &lt;strong&gt;-1&lt;/strong&gt;.</source>
          <target state="translated">Индекс первого совпадения регулярного выражения и заданной строки; если не найден, &lt;strong&gt;-1&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7eeb649d19a6bf315759f881b8cbad67f58f3e5e" translate="yes" xml:space="preserve">
          <source>The index of the first occurrence of &lt;code&gt;&lt;var&gt;searchValue&lt;/var&gt;&lt;/code&gt;, or &lt;code&gt;&lt;strong&gt;-1&lt;/strong&gt;&lt;/code&gt; if not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9d07e044583fff7d5c1a63242f20eed8c8db73" translate="yes" xml:space="preserve">
          <source>The index of the first occurrence of &lt;var&gt;searchValue&lt;/var&gt;, or &lt;strong&gt;-1&lt;/strong&gt; if not found.</source>
          <target state="translated">Индекс первого вхождения &lt;var&gt;searchValue&lt;/var&gt; или &lt;strong&gt;-1,&lt;/strong&gt; если не найдено.</target>
        </trans-unit>
        <trans-unit id="ba96976abfa8c19822be4aba22902ebe7ea8580a" translate="yes" xml:space="preserve">
          <source>The index of the function reference you want to mutate.</source>
          <target state="translated">Индекс ссылки на функцию,которую вы хотите мутировать.</target>
        </trans-unit>
        <trans-unit id="ff7eb733f5b352e4ae9d707707716fe0f304ceda" translate="yes" xml:space="preserve">
          <source>The index of the function reference you want to retrieve.</source>
          <target state="translated">Индекс ссылки на функцию,которую вы хотите получить.</target>
        </trans-unit>
        <trans-unit id="d3b2834eee8d6320aac950150fcf1393ecfa37cf" translate="yes" xml:space="preserve">
          <source>The index of the last character in the string to be considered as the beginning of a match. The default value is &lt;code&gt;+Infinity&lt;/code&gt;. If &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt; &amp;gt;= &lt;var&gt;str&lt;/var&gt;.length&lt;/code&gt;, the whole string is searched. If &lt;code&gt;&lt;var&gt;fromIndex&lt;/var&gt; &amp;lt; 0&lt;/code&gt;, the behavior will be the same as if it would be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1f18f22d47ed0b5f34040af817342c18952c1f" translate="yes" xml:space="preserve">
          <source>The index of the last character in the string to be considered as the beginning of a match. The default value is &lt;code&gt;+Infinity&lt;/code&gt;. If &lt;code&gt;fromIndex &amp;gt;= str.length&lt;/code&gt;, the whole string is searched. If &lt;code&gt;fromIndex &amp;lt; 0&lt;/code&gt;, the behavior will be the same as if it would be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">Индекс последнего символа в строке, который будет считаться началом совпадения. Значение по умолчанию - &lt;code&gt;+Infinity&lt;/code&gt; . Если &lt;code&gt;fromIndex &amp;gt;= str.length&lt;/code&gt; , ищется вся строка. Если &lt;code&gt;fromIndex &amp;lt; 0&lt;/code&gt; , поведение будет таким же, как если бы было &lt;code&gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="007f291855720542b1afc8d57acd3fb3cc988272" translate="yes" xml:space="preserve">
          <source>The index of the last occurrence of &lt;code&gt;&lt;var&gt;searchValue&lt;/var&gt;&lt;/code&gt;; &lt;code&gt;&lt;strong&gt;-1&lt;/strong&gt;&lt;/code&gt; if not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2688e8b0da8edc7eb408045b2e1977530d37c596" translate="yes" xml:space="preserve">
          <source>The index of the last occurrence of the specified value; &lt;strong&gt;-1&lt;/strong&gt; if not found.</source>
          <target state="translated">Индекс последнего появления указанного значения; &lt;strong&gt;-1,&lt;/strong&gt; если не найден.</target>
        </trans-unit>
        <trans-unit id="62d0db95ea8db301c0efb25238eefb7d18b0e228" translate="yes" xml:space="preserve">
          <source>The index of the search at which the result was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa293dfc3493ff8b6c630513657905198938ab16" translate="yes" xml:space="preserve">
          <source>The index to start the search at. If the index is greater than or equal to the array's length, -1 is returned, which means the array will not be searched. If the provided index value is a negative number, it is taken as the offset from the end of the array. Note: if the provided index is negative, the array is still searched from front to back. If the provided index is 0, then the whole array will be searched. Default: 0 (entire array is searched).</source>
          <target state="translated">Индекс для начала поиска.Если индекс больше или равен длине массива,возвращается -1,что означает,что поиск массива не будет осуществляться.Если предоставленное значение индекса является отрицательным числом,то оно принимается за смещение от конца массива.Примечание:если предоставленный индекс имеет отрицательное значение,то поиск массива все равно будет вестись спереди и сзади.Если предоставленный индекс равен 0,поиск будет выполняться по всему массиву.По умолчанию:0 (выполняется поиск всего массива).</target>
        </trans-unit>
        <trans-unit id="4d2a4eec9e0b63b8347194f0bc4e552a4976fa62" translate="yes" xml:space="preserve">
          <source>The index to start the search at. If the index is greater than or equal to the typed array's length, -1 is returned, which means the typed array will not be searched. If the provided index value is a negative number, it is taken as the offset from the end of the typed array. Note: if the provided index is negative, the typed array is still searched from front to back. If the calculated index is less than 0, then the whole typed array will be searched. Default: 0 (entire typed array is searched).</source>
          <target state="translated">Индекс для начала поиска.Если индекс больше или равен длине типизированного массива,то возвращается -1,что означает,что поиск типизированного массива не будет осуществляться.Если предоставленное значение индекса является отрицательным числом,то оно принимается за смещение от конца типизированного массива.Примечание:если предоставленный индекс имеет отрицательное значение,то поиск введенного массива все равно будет осуществляться спереди и сзади.Если вычисленный индекс меньше 0,то поиск будет вестись по всему типизированному массиву.По умолчанию:0 (выполняется поиск всего введенного массива).</target>
        </trans-unit>
        <trans-unit id="d8b8a3f2c8db364b3507cacf9ce21da83426f378" translate="yes" xml:space="preserve">
          <source>The inequality operator returns true if the operands are not equal. If the two operands are &lt;strong&gt;not of the same type&lt;/strong&gt;, JavaScript attempts to convert the operands to an appropriate type for the comparison. If &lt;strong&gt;both operands are objects&lt;/strong&gt;, then JavaScript compares internal references which are not equal when operands refer to different objects in memory.</source>
          <target state="translated">Оператор неравенства возвращает истину, если операнды не равны. Если два операнда &lt;strong&gt;не одного типа&lt;/strong&gt; , JavaScript пытается преобразовать операнды в соответствующий тип для сравнения. Если &lt;strong&gt;оба операнда являются объектами&lt;/strong&gt; , тогда JavaScript сравнивает внутренние ссылки, которые не равны, когда операнды ссылаются на разные объекты в памяти.</target>
        </trans-unit>
        <trans-unit id="4c62e98a3197c6dd398fc51d1f97f017634d0607" translate="yes" xml:space="preserve">
          <source>The initial implementation of arrow functions in Firefox made them automatically strict. This has been changed as of Firefox 24. The use of &lt;code&gt;'use strict';&lt;/code&gt; is now required.</source>
          <target state="translated">Первоначальная реализация стрелочных функций в Firefox автоматически сделала их строгими. Это было изменено в Firefox 24. Использование &lt;code&gt;'use strict';&lt;/code&gt; теперь требуется.</target>
        </trans-unit>
        <trans-unit id="e2cedbf2ad5a475ab7c6f1a3d65b05101d8d5d7d" translate="yes" xml:space="preserve">
          <source>The initial number of elements of the WebAssembly Table.</source>
          <target state="translated">Начальное количество элементов таблицы WebAssembly.</target>
        </trans-unit>
        <trans-unit id="6d97d69ef87b8296fe966c39e1420dc1ec050479" translate="yes" xml:space="preserve">
          <source>The initial size of the WebAssembly Memory, in units of WebAssembly pages.</source>
          <target state="translated">Начальный размер памяти WebAssembly,в единицах страниц WebAssembly.</target>
        </trans-unit>
        <trans-unit id="384db43a561603d590c01e012347d7dfb5b09373" translate="yes" xml:space="preserve">
          <source>The initial value given by the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt;&lt;strong&gt;iterator&lt;/strong&gt;. By default, using &lt;code&gt;arr[Symbol.iterator]&lt;/code&gt; will return the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Начальное значение, заданное &lt;strong&gt;итератором &lt;/strong&gt;&lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; . По умолчанию использование &lt;code&gt;arr[Symbol.iterator]&lt;/code&gt; вернет функцию &lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97add4859ccc1075488c28286e2eb1e14afa1a9f" translate="yes" xml:space="preserve">
          <source>The initial value is &lt;a href=&quot;../asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Начальное значение - &lt;a href=&quot;../asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aee7909b565a55b9102d403b3a9f7ca7c8d88ccf" translate="yes" xml:space="preserve">
          <source>The initial value is &lt;a href=&quot;../generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Начальное значение - &lt;a href=&quot;../generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="076448d00c0ef80b7d65965bf6ea4b611fe16bf8" translate="yes" xml:space="preserve">
          <source>The initial value is &lt;a href=&quot;asyncfunction&quot;&gt;&lt;code&gt;AsyncFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Начальное значение - &lt;a href=&quot;asyncfunction&quot;&gt; &lt;code&gt;AsyncFunction&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="63e81e42fd0462c78d2acf6f66ad54f0748df6bd" translate="yes" xml:space="preserve">
          <source>The initial value is &lt;a href=&quot;generatorfunction&quot;&gt;&lt;code&gt;GeneratorFunction&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Начальное значение - &lt;a href=&quot;generatorfunction&quot;&gt; &lt;code&gt;GeneratorFunction&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="11a201eaed53ca1f42ae6eaa962b4ec5c5b3f9d9" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;Infinity&lt;/code&gt; is &lt;a href=&quot;number/positive_infinity&quot;&gt;&lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt;. The value &lt;code&gt;Infinity&lt;/code&gt; (positive infinity) is greater than any other number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f65b271a3137f2d97bec42645a6d8a33b1633fd" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;Infinity&lt;/code&gt; is &lt;a href=&quot;number/positive_infinity&quot;&gt;&lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt;&lt;/a&gt;. The value &lt;code&gt;Infinity&lt;/code&gt; (positive infinity) is greater than any other number. Mathematically, this value behaves the same as infinity; for example, any positive number multiplied by &lt;code&gt;Infinity&lt;/code&gt; equals &lt;code&gt;Infinity&lt;/code&gt;, and any number divided by &lt;code&gt;Infinity&lt;/code&gt; equals 0.</source>
          <target state="translated">Начальное значение &lt;code&gt;Infinity&lt;/code&gt; - &lt;a href=&quot;number/positive_infinity&quot;&gt; &lt;code&gt;Number.POSITIVE_INFINITY&lt;/code&gt; &lt;/a&gt; . Значение &lt;code&gt;Infinity&lt;/code&gt; (положительная бесконечность) больше любого другого числа. Математически это значение ведет себя так же, как бесконечность; например, любое положительное число, умноженное на &lt;code&gt;Infinity&lt;/code&gt; равно &lt;code&gt;Infinity&lt;/code&gt; , а любое число, деленное на &lt;code&gt;Infinity&lt;/code&gt; равно 0.</target>
        </trans-unit>
        <trans-unit id="c418a3fa301bec1069877c8dc7042090de30c82d" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;NaN&lt;/code&gt; is Not-A-Number &amp;mdash; the same as the value of &lt;a href=&quot;number/nan&quot;&gt;&lt;code&gt;Number.NaN&lt;/code&gt;&lt;/a&gt;. In modern browsers, &lt;code&gt;NaN&lt;/code&gt; is a non-configurable, non-writable property. Even when this is not the case, avoid overriding it.</source>
          <target state="translated">Начальным значением &lt;code&gt;NaN&lt;/code&gt; является Not-A-Number - то же самое, что и значение &lt;a href=&quot;number/nan&quot;&gt; &lt;code&gt;Number.NaN&lt;/code&gt; &lt;/a&gt; . В современных браузерах &lt;code&gt;NaN&lt;/code&gt; не является настраиваемым и недоступным для записи свойством. Даже если это не так, не игнорируйте его.</target>
        </trans-unit>
        <trans-unit id="be7e08fe713546ae096b3cf0ae964a3e47acb908" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;NaN&lt;/code&gt; is Not-A-Number &amp;mdash; the same as the value of &lt;a href=&quot;number/nan&quot;&gt;&lt;code&gt;Number.NaN&lt;/code&gt;&lt;/a&gt;. In modern browsers, &lt;code&gt;NaN&lt;/code&gt; is a non-configurable, non-writable property. Even when this is not the case, avoid overriding it. It is rather rare to use &lt;code&gt;NaN&lt;/code&gt; in a program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0124b194767f126534be91644b40181ea57381" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;a href=&quot;../../symbol/tostringtag&quot;&gt;@@toStringTag&lt;/a&gt; property is the String value &quot;WebAssembly.Global&quot;.</source>
          <target state="translated">Начальным значением свойства &lt;a href=&quot;../../symbol/tostringtag&quot;&gt;@@ toStringTag&lt;/a&gt; является строковое значение &amp;laquo;WebAssembly.Global&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="80a39f1289d57e9b7acde6c3c12f79a398087487" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;a href=&quot;../../symbol/tostringtag&quot;&gt;@@toStringTag&lt;/a&gt; property is the String value &quot;WebAssembly.Module&quot;.</source>
          <target state="translated">Начальным значением свойства &lt;a href=&quot;../../symbol/tostringtag&quot;&gt;@@ toStringTag&lt;/a&gt; является строковое значение &amp;laquo;WebAssembly.Module&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="b0d241fff69293ce9e49dc1b559b97c8cb54b884" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;a href=&quot;../symbol/tostringtag&quot;&gt;@@toStringTag&lt;/a&gt; property is the String value &quot;WebAssembly.Global&quot;.</source>
          <target state="translated">Начальным значением свойства &lt;a href=&quot;../symbol/tostringtag&quot;&gt;@@ toStringTag&lt;/a&gt; является строковое значение &amp;laquo;WebAssembly.Global&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9371f12289009957f08e8d76c6fd856e4b2e5784" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;a href=&quot;../symbol/tostringtag&quot;&gt;@@toStringTag&lt;/a&gt; property is the String value &quot;WebAssembly.Module&quot;.</source>
          <target state="translated">Начальным значением свойства &lt;a href=&quot;../symbol/tostringtag&quot;&gt;@@ toStringTag&lt;/a&gt; является строковое значение &amp;laquo;WebAssembly.Module&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="712e5c4e8ec05e3b52fd206af05fda8828fa72c7" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;../../global_objects/array/values&quot;&gt;&lt;code&gt;Array.prototype.values&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Начальным значением свойства &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; является тот же объект функции, что и начальное значение свойства &lt;a href=&quot;../../global_objects/array/values&quot;&gt; &lt;code&gt;Array.prototype.values&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b2d88202cf167ea232a92a23340f333bf22c2ee" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;entries&quot;&gt;&lt;code&gt;entries&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">Начальным значением свойства &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; является тот же объект функции, что и начальное значение метода &lt;a href=&quot;entries&quot;&gt; &lt;code&gt;entries&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="992e738b4469cf33753b498f2228027ceb609d0d" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values()&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Начальным значением свойства &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; является тот же объект функции, что и начальное значение свойства &lt;a href=&quot;values&quot;&gt; &lt;code&gt;values()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eb75aec2ed25274744212f06bc40052dea8d2895" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Начальным значением свойства &lt;code&gt;&lt;strong&gt;@@iterator&lt;/strong&gt;&lt;/code&gt; является тот же объект функции, что и начальное значение свойства &lt;a href=&quot;values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7f8d5716bc997a4ea02c10dfefa6c90666bf523f" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;@@iterator&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;entries&quot;&gt;&lt;code&gt;entries&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc793fecbee3106a83bb88206c01e248be004375" translate="yes" xml:space="preserve">
          <source>The initial value of the &lt;code&gt;@@iterator&lt;/code&gt; property is the same function object as the initial value of the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0276b8452afec103e0d6f2bce86d41251d1d525" translate="yes" xml:space="preserve">
          <source>The initial value of the @@iterator property is the same function object as the initial value of the &lt;a href=&quot;values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">Начальным значением свойства @@ итератора является тот же объект функции, что и начальное значение свойства &lt;a href=&quot;values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b3d9964c6f6b12a69d601e5a1895356521b6dac" translate="yes" xml:space="preserve">
          <source>The input to an array comprehension does not itself need to be an array; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;iterators and generators&lt;/a&gt; can also be used.</source>
          <target state="translated">Входными данными для понимания массива не обязательно должен быть массив; также могут использоваться &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;итераторы и генераторы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2fa9cbac508b25de09d188d60d05781a41f27e0d" translate="yes" xml:space="preserve">
          <source>The instances of &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; implement the &lt;code&gt;toJSON()&lt;/code&gt; function by returning a string (the same as &lt;code&gt;date.toISOString()&lt;/code&gt;). Thus, they are treated as strings.</source>
          <target state="translated">Экземпляры &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; реализуют &lt;code&gt;toJSON()&lt;/code&gt; , возвращая строку (так же, как &lt;code&gt;date.toISOString()&lt;/code&gt; ). Таким образом, они рассматриваются как строки.</target>
        </trans-unit>
        <trans-unit id="50b637825f6db8a063c62c3d0839f81edfc5dbaf" translate="yes" xml:space="preserve">
          <source>The integer number.</source>
          <target state="translated">Целое число.</target>
        </trans-unit>
        <trans-unit id="39a0cd03f3df0893aa1d9bce2051e7012e00edf1" translate="yes" xml:space="preserve">
          <source>The integer part of the given number.</source>
          <target state="translated">Целая часть заданного числа.</target>
        </trans-unit>
        <trans-unit id="4ca3837b8e5127cde99f915542009d4c7095f100" translate="yes" xml:space="preserve">
          <source>The internationalization constructors as well as several language sensitive methods of other constructors (listed under &lt;a href=&quot;#See_also&quot;&gt;See also&lt;/a&gt;) use a common pattern for identifying locales and determing the one they will actually use: they all accept &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, and negotiate the requested locale(s) against the locales they support using an algorithm specified in the &lt;code&gt;options.localeMatcher&lt;/code&gt; property.</source>
          <target state="translated">Конструкторы интернационализации, а также несколько чувствительных к языку методов других конструкторов (перечисленных в разделе &lt;a href=&quot;#See_also&quot;&gt;См. Также&lt;/a&gt; ) используют общий шаблон для идентификации локалей и определения того, который они будут фактически использовать: все они принимают аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; и согласовывают запрошенные языковые стандарты (ы). ) против поддерживаемых ими локалей с помощью алгоритма, указанного в свойстве &lt;code&gt;options.localeMatcher&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec2b19cacb666c23b3f9fe5a980e1192cf9219cc" translate="yes" xml:space="preserve">
          <source>The internationalization constructors as well as several language sensitive methods of other constructors (listed under &lt;a href=&quot;#See_also&quot;&gt;See also&lt;/a&gt;) use a common pattern for identifying locales and determining the one they will actually use: they all accept &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, and negotiate the requested locale(s) against the locales they support using an algorithm specified in the &lt;code&gt;options.localeMatcher&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afaec0fcc64f246e903edaa8bb2b4e101dc76db2" translate="yes" xml:space="preserve">
          <source>The inverted order of the logs is due to the fact that the &lt;code&gt;then&lt;/code&gt; handlers are called asynchronously. See how &lt;code&gt;then&lt;/code&gt; works &lt;a href=&quot;then#Return_value&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Инвертированный порядок журналов связан с тем, что обработчики &lt;code&gt;then&lt;/code&gt; вызываются асинхронно. Посмотрите , как &lt;code&gt;then&lt;/code&gt; работает &lt;a href=&quot;then#Return_value&quot;&gt;здесь&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e2407a47bc811ed16f411c7aa7f8c69fef16c07a" translate="yes" xml:space="preserve">
          <source>The iterable protocol</source>
          <target state="translated">Итерабельный протокол</target>
        </trans-unit>
        <trans-unit id="6a49d38d3e9af007b56150fc6cc735996df7207d" translate="yes" xml:space="preserve">
          <source>The iterator protocol</source>
          <target state="translated">Протокол итератора</target>
        </trans-unit>
        <trans-unit id="c1b64483d71e82bf0db593563f457a8c78317073" translate="yes" xml:space="preserve">
          <source>The key of the element to add to the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1868524840cb8c9373d2e11b9f2e161936f51617" translate="yes" xml:space="preserve">
          <source>The key of the element to remove from the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="translated">Ключ элемента, который нужно удалить из объекта &lt;code&gt;Map&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5ea5fb7fd444c843ca9edf509a1d4a07414236f" translate="yes" xml:space="preserve">
          <source>The key of the element to remove from the &lt;code&gt;WeakMap&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b08a924b9ddd5faf279b294a411c3221871b979" translate="yes" xml:space="preserve">
          <source>The key of the element to return from the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc3693407796aadd1b54ea18a2e94bb767ecf3e" translate="yes" xml:space="preserve">
          <source>The key of the element to test for presence in the &lt;code&gt;Map&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e35d193d3aadcf285e8ef1dc74935b95bd853a" translate="yes" xml:space="preserve">
          <source>The keys in &lt;code&gt;Map&lt;/code&gt; are ordered in a simple, straightforward way: A &lt;code&gt;Map&lt;/code&gt; object iterates entries, keys, and values in the order of entry insertion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211433a70ab11e97b43158c1ee7e05bc7ddce2d0" translate="yes" xml:space="preserve">
          <source>The keys in Map are ordered while keys added to object are not. Thus, when iterating over it, a Map object returns keys in order of insertion.</source>
          <target state="translated">Клавиши на карте упорядочены,а клавиши,добавляемые к объекту,нет.Таким образом,при итерации по нему объект Map возвращает ключи в порядке их вставки.</target>
        </trans-unit>
        <trans-unit id="6211d93351d1d4483c62d7f40f7a3dd0844ca0e1" translate="yes" xml:space="preserve">
          <source>The keys of an &lt;code&gt;Object&lt;/code&gt; are &lt;a href=&quot;string&quot;&gt;&lt;code&gt;Strings&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbols&lt;/code&gt;&lt;/a&gt;, whereas they can be any value for a &lt;code&gt;Map&lt;/code&gt;, including functions, objects, and any primitive.</source>
          <target state="translated">Ключи &lt;code&gt;Object&lt;/code&gt; - это &lt;a href=&quot;string&quot;&gt; &lt;code&gt;Strings&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;symbol&quot;&gt; &lt;code&gt;Symbols&lt;/code&gt; &lt;/a&gt; , тогда как они могут быть любым значением для &lt;code&gt;Map&lt;/code&gt; , включая функции, объекты и любой примитив.</target>
        </trans-unit>
        <trans-unit id="6747ecf216749394cb9c66886089f753478a281b" translate="yes" xml:space="preserve">
          <source>The keys of an &lt;code&gt;Object&lt;/code&gt; must be either a &lt;a href=&quot;string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866ff8399d6ef75a53519a8e870348f9133e3e03" translate="yes" xml:space="preserve">
          <source>The largest of the given numbers. If any of the arguments are &lt;code&gt;NaN&lt;/code&gt; or cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc94c4750c8d568e4f0b60dafef98fd45b17a18f" translate="yes" xml:space="preserve">
          <source>The largest of the given numbers. If at least one of the arguments cannot be converted to a number, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Наибольшее из приведенных чисел. Если хотя бы один из аргументов не может быть преобразован в число, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f07b0bca82f376241bf56059c0415eeb6ab39970" translate="yes" xml:space="preserve">
          <source>The largest positive representable number.</source>
          <target state="translated">Самое большое положительное репрезентативное число.</target>
        </trans-unit>
        <trans-unit id="49c65db2ab615eb7f210bbeee34dbf5701ac3a2d" translate="yes" xml:space="preserve">
          <source>The last index of the element in the array; &lt;code&gt;-1&lt;/code&gt; if not found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19eafe8fd5db358ddfcd304b8bed92efe70d1500" translate="yes" xml:space="preserve">
          <source>The last index of the element in the array; &lt;strong&gt;-1&lt;/strong&gt; if not found.</source>
          <target state="translated">Последний индекс элемента в массиве; &lt;strong&gt;-1,&lt;/strong&gt; если не найден.</target>
        </trans-unit>
        <trans-unit id="86599324ad1c7b940955456bbdbd5ce54c5d61eb" translate="yes" xml:space="preserve">
          <source>The last matched characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db12265443921a1cee13cdabf0c5d4c0b508019a" translate="yes" xml:space="preserve">
          <source>The latest version of ECMAScript (ES2015) contains the &lt;a href=&quot;number/isnan&quot;&gt;&lt;code&gt;Number.isNaN()&lt;/code&gt;&lt;/a&gt; function. &lt;code&gt;Number.isNaN(x)&lt;/code&gt; will be a reliable way to test whether &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or not. Even with &lt;code&gt;Number.isNaN&lt;/code&gt;, however, the meaning of &lt;code&gt;NaN&lt;/code&gt; remains the precise numeric meaning, and not simply, &quot;not a number&quot;. Alternatively, in absense of &lt;code&gt;Number.isNaN&lt;/code&gt;, the expression &lt;code&gt;(x != x)&lt;/code&gt; is a more reliable way to test whether variable &lt;code&gt;x&lt;/code&gt; is &lt;code&gt;NaN&lt;/code&gt; or not, as the result is not subject to the false positives that make &lt;code&gt;isNaN&lt;/code&gt; unreliable.</source>
          <target state="translated">Последняя версия ECMAScript (ES2015) содержит &lt;a href=&quot;number/isnan&quot;&gt; &lt;code&gt;Number.isNaN()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Number.isNaN(x)&lt;/code&gt; будет надежным способом проверить, является ли &lt;code&gt;x&lt;/code&gt; &lt;code&gt;NaN&lt;/code&gt; или нет. Однако даже с &lt;code&gt;Number.isNaN&lt;/code&gt; значение &lt;code&gt;NaN&lt;/code&gt; остается точным числовым значением, а не просто &amp;laquo;не числом&amp;raquo;. В качестве альтернативы, в отсутствие &lt;code&gt;Number.isNaN&lt;/code&gt; выражение &lt;code&gt;(x != x)&lt;/code&gt; является более надежным способом проверить, является ли переменная &lt;code&gt;x&lt;/code&gt; &lt;code&gt;NaN&lt;/code&gt; или нет, поскольку результат не подвержен ложным срабатываниям, которые делают &lt;code&gt;isNaN&lt;/code&gt; ненадежным.</target>
        </trans-unit>
        <trans-unit id="336d2cf539e17bb1afd7a1270afba25d8f127ea1" translate="yes" xml:space="preserve">
          <source>The latter approach will cause &lt;em&gt;any&lt;/em&gt; operation that attempts to mutate, to throw. This approach is required if you want even non-throwing operations to throw on failure, or you want to throw a custom exception value.</source>
          <target state="translated">Последний подход приведет к сбою &lt;em&gt;любой&lt;/em&gt; операции, которая пытается изменить. Этот подход требуется, если вы хотите, чтобы даже операции, не вызывающие выброса, вызывали сбой, или если вы хотите создать настраиваемое значение исключения.</target>
        </trans-unit>
        <trans-unit id="0cbbb0ab6793d975f719fbef2c67c6385ccf1a65" translate="yes" xml:space="preserve">
          <source>The left shift assignment operator moves the specified amount of bits to the left and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Left_shift&quot;&gt;left shift operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания сдвига влево перемещает указанное количество бит влево и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Left_shift&quot;&gt;Оператор сдвига влево&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b3c2c94f936040ea46d72272cfabd914c2f6437" translate="yes" xml:space="preserve">
          <source>The legacy Iterator protocol</source>
          <target state="translated">Унаследованный протокол Итератора</target>
        </trans-unit>
        <trans-unit id="3f1956bcda7ec78590c84d8bc374c074b819abeb" translate="yes" xml:space="preserve">
          <source>The legacy generator function</source>
          <target state="translated">Унаследованная функция генератора</target>
        </trans-unit>
        <trans-unit id="c29848494777d9229bbbb16d3bed7009b060e54f" translate="yes" xml:space="preserve">
          <source>The legacy generator function expression</source>
          <target state="translated">Выражение наследственной функции генератора</target>
        </trans-unit>
        <trans-unit id="da00f0c0d7a586703b854f143d86be4ec9fe0746" translate="yes" xml:space="preserve">
          <source>The length (in bytes) of this view from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Длина (в байтах) этого представления от начала его &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="77008722c9777866e545efeaee6431ea6dd2a61e" translate="yes" xml:space="preserve">
          <source>The length (in bytes) of this view from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Длина (в байтах) этого представления от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c0951926215dfc9e12476ded77d10961b76fd784" translate="yes" xml:space="preserve">
          <source>The length of the resulting string once the current &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; has been padded. If the value is less than &lt;code&gt;&lt;var&gt;str.&lt;/var&gt;length&lt;/code&gt;, then &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; is returned as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c368be97586cd765b450c64fcdbe05ae43efa8c" translate="yes" xml:space="preserve">
          <source>The length of the resulting string once the current &lt;code&gt;&lt;var&gt;str&lt;/var&gt;&lt;/code&gt; has been padded. If the value is lower than &lt;code&gt;&lt;var&gt;str.&lt;/var&gt;length&lt;/code&gt;, the current string will be returned as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db0c884f71c632e913847c53c3b91d57782f8da" translate="yes" xml:space="preserve">
          <source>The length of the resulting string once the current string has been padded. If the value is less than the current string's length, the current string is returned as is.</source>
          <target state="translated">Длина результирующей строки после добавления текущей строки.Если значение меньше длины текущей строки,то текущая строка возвращается как есть.</target>
        </trans-unit>
        <trans-unit id="59a7fdc58b461568171aeae93e15395e1ca39535" translate="yes" xml:space="preserve">
          <source>The length of the resulting string once the current string has been padded. If the value is lower than the current string's length, the current string will be returned as is.</source>
          <target state="translated">Длина результирующей строки после добавления текущей строки.Если значение меньше длины текущей строки,то текущая строка будет возвращена как есть.</target>
        </trans-unit>
        <trans-unit id="097a58ccc4c76e84486d168761668af816c206fe" translate="yes" xml:space="preserve">
          <source>The length property of the &lt;a href=&quot;../function&quot;&gt;&lt;code&gt;Function&lt;/code&gt;&lt;/a&gt; prototype object has a value of 0.</source>
          <target state="translated">Свойство length объекта- прототипа &lt;a href=&quot;../function&quot;&gt; &lt;code&gt;Function&lt;/code&gt; &lt;/a&gt; имеет значение 0.</target>
        </trans-unit>
        <trans-unit id="2512fd4fad823950bad2897cd47f75878de9cef5" translate="yes" xml:space="preserve">
          <source>The less than operator returns true if the left operand is less than the right operand.</source>
          <target state="translated">Меньше чем оператор возвращает true,если левый операнд меньше чем правый.</target>
        </trans-unit>
        <trans-unit id="fc1d5ba2e8f8fbc3e0fe7f1234102289d52aa0cc" translate="yes" xml:space="preserve">
          <source>The less than or equal operator returns true if the left operand is less than or equal to the right operand.</source>
          <target state="translated">Оператор меньше или равен возвращает true,если левый операнд меньше или равен правому операнду.</target>
        </trans-unit>
        <trans-unit id="ab7556bfbedd075dad431bc7e1df48dc530681a4" translate="yes" xml:space="preserve">
          <source>The line number of the code that caused the exception</source>
          <target state="translated">Номер строки кода,вызвавшего исключение</target>
        </trans-unit>
        <trans-unit id="2c1794b2194b8f84bbf8cdc0171c5eaf6690c183" translate="yes" xml:space="preserve">
          <source>The line number of the code that caused the exception.</source>
          <target state="translated">Номер строки кода,вызвавшего исключение.</target>
        </trans-unit>
        <trans-unit id="11787947e310495c41e64e406969f0ee7b2d021b" translate="yes" xml:space="preserve">
          <source>The line terminator restriction is now implemented. No line terminator between &quot;yield&quot; and &quot;*&quot; is allowed. Code like the following will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Теперь реализовано ограничение на терминатор строки. Знак конца строки между &quot;yield&quot; и &quot;*&quot; не допускается. Код, подобный следующему, вызовет &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="dfcc2f244bcd66b891e4eecbe426929f7ec254e3" translate="yes" xml:space="preserve">
          <source>The list of arguments for the call.</source>
          <target state="translated">Список аргументов для вызова.</target>
        </trans-unit>
        <trans-unit id="ae31076a9f177eccd00fa3c413520f8a494b792b" translate="yes" xml:space="preserve">
          <source>The list of arguments for the constructor.</source>
          <target state="translated">Список аргументов для конструктора.</target>
        </trans-unit>
        <trans-unit id="fb39eae30439dd3c090ea07c8777ac4f939b4994" translate="yes" xml:space="preserve">
          <source>The list of locales specified by the &lt;code&gt;locales&lt;/code&gt; argument, after Unicode extensions have been removed from them, is interpreted as a prioritized request from the application. The runtime compares it against the locales it has available and picks the best one available. Two matching algorithms exist: the &quot;&lt;code&gt;lookup&lt;/code&gt;&quot; matcher follows the Lookup algorithm specified in &lt;a href=&quot;http://tools.ietf.org/html/rfc4647#section-3.4&quot;&gt;BCP 47&lt;/a&gt;; the &quot;&lt;code&gt;best fit&lt;/code&gt;&quot; matcher lets the runtime provide a locale that's at least, but possibly more, suited for the request than the result of the Lookup algorithm. If the application doesn't provide a &lt;code&gt;locales&lt;/code&gt; argument, or the runtime doesn't have a locale that matches the request, then the runtime's default locale is used. The matcher can be selected using a property of the &lt;code&gt;options&lt;/code&gt; argument (see below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e09c928783446c582c9061aeea7d31de17f49c41" translate="yes" xml:space="preserve">
          <source>The literal notation provides a compilation of the regular expression when the expression is evaluated. Use literal notation when the regular expression will remain constant. For example, if you use literal notation to construct a regular expression used in a loop, the regular expression won't be recompiled on each iteration.</source>
          <target state="translated">Буквальная нотация обеспечивает компиляцию регулярного выражения,когда оно вычисляется.Используйте буквальную нотацию,когда регулярное выражение останется постоянным.Например,если для построения регулярного выражения,используемого в цикле,используется буквальная нотация,то регулярное выражение не будет перекомпилироваться при каждой итерации.</target>
        </trans-unit>
        <trans-unit id="e632d0f8f15b4a76b37368b62c4a2ea1576294c1" translate="yes" xml:space="preserve">
          <source>The literal notation results in compilation of the regular expression when the expression is evaluated. Use literal notation when the regular expression will remain constant. For example, if you use literal notation to construct a regular expression used in a loop, the regular expression won't be recompiled on each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdf487cb297ef007af9affba8a853e49d1d2f25" translate="yes" xml:space="preserve">
          <source>The locale matching algorithm to use. Possible values are &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; and &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;. For information about this option, see the &lt;a href=&quot;../intl#Locale_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="translated">Используемый алгоритм сопоставления языковых стандартов. Возможные значения: &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; и &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; ; по умолчанию установлено &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; . Для получения информации об этой опции см. &lt;a href=&quot;../intl#Locale_negotiation&quot;&gt;Страницу Intl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5ea4319b67bf575f5ea3e182713b594901f135ec" translate="yes" xml:space="preserve">
          <source>The locale matching algorithm to use. Possible values are &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; and &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;; the default is &lt;code&gt;&quot;best fit&quot;&lt;/code&gt;. For information about this option, see the &lt;a href=&quot;intl#Locale_negotiation&quot;&gt;Intl page&lt;/a&gt;.</source>
          <target state="translated">Используемый алгоритм сопоставления языковых стандартов. Возможные значения: &lt;code&gt;&quot;lookup&quot;&lt;/code&gt; и &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; ; по умолчанию установлено &lt;code&gt;&quot;best fit&quot;&lt;/code&gt; . Для получения информации об этой опции см. &lt;a href=&quot;intl#Locale_negotiation&quot;&gt;Страницу Intl&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a05dc32ac748f9ab7fcae6a5c8a111cdcf7619cc" translate="yes" xml:space="preserve">
          <source>The logical operators are described in the following table:</source>
          <target state="translated">Логические операторы описаны в следующей таблице:</target>
        </trans-unit>
        <trans-unit id="10ddbdac54892fdf37b69007fdde5c1641c2879e" translate="yes" xml:space="preserve">
          <source>The main differences to the &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; object are:</source>
          <target state="translated">Основные отличия от объекта &lt;a href=&quot;set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8a5c3728502f2419a9f163704dc5ab1d99fd9260" translate="yes" xml:space="preserve">
          <source>The main program: main.js</source>
          <target state="translated">Основная программа:main.js</target>
        </trans-unit>
        <trans-unit id="54a6539b67da7a728641f8b467252d0973af9215" translate="yes" xml:space="preserve">
          <source>The main purpose of the anonymous function here is to add a &lt;code&gt;print&lt;/code&gt; function to every object, which is able to print the correct index of the object in the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cce533cada724913297d3c94b69eb36109fa28" translate="yes" xml:space="preserve">
          <source>The major browsers now implement strict mode. However, don't blindly depend on it since there still are numerous &lt;a href=&quot;http://caniuse.com/use-strict&quot;&gt;Browser versions used in the wild that only have partial support for strict mode&lt;/a&gt; or do not support it at all (e.g. Internet Explorer below version 10!). &lt;em&gt;Strict mode changes semantics.&lt;/em&gt; Relying on those changes will cause mistakes and errors in browsers which don't implement strict mode. Exercise caution in using strict mode, and back up reliance on strict mode with feature tests that check whether relevant parts of strict mode are implemented. Finally, make sure to &lt;em&gt;test your code in browsers that do and don't support strict mode&lt;/em&gt;. If you test only in browsers that don't support strict mode, you're very likely to have problems in browsers that do, and vice versa.</source>
          <target state="translated">В основных браузерах теперь реализован строгий режим. Однако не стоит слепо полагаться на него, так как все еще существует множество &lt;a href=&quot;http://caniuse.com/use-strict&quot;&gt;версий&lt;/a&gt; браузеров, используемых в дикой природе, которые только частично поддерживают строгий режим или не поддерживают его вообще (например, Internet Explorer ниже версии 10!). &lt;em&gt;Строгий режим меняет семантику.&lt;/em&gt; Использование этих изменений приведет к ошибкам и ошибкам в браузерах, которые не поддерживают строгий режим. Соблюдайте осторожность при использовании строгого режима и поддерживайте строгий режим с помощью тестов функций, которые проверяют, реализованы ли соответствующие части строгого режима. Наконец, обязательно &lt;em&gt;протестируйте свой код в браузерах, которые поддерживают и не поддерживают строгий режим.&lt;/em&gt;, Если вы тестируете только в браузерах, которые не поддерживают строгий режим, у вас, скорее всего, возникнут проблемы в браузерах, которые поддерживают, и наоборот.</target>
        </trans-unit>
        <trans-unit id="bafbaa819a9cc472c9dd5abd2fda36f0258dfdd2" translate="yes" xml:space="preserve">
          <source>The map &lt;strong&gt;iterator&lt;/strong&gt; function, which is the &lt;a href=&quot;entries&quot;&gt;&lt;code&gt;entries()&lt;/code&gt;&lt;/a&gt; function by default.</source>
          <target state="translated">Функция &lt;strong&gt;итератора&lt;/strong&gt; карты , которая по умолчанию является функцией &lt;a href=&quot;entries&quot;&gt; &lt;code&gt;entries()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="590822045faf535e2a907e0b28b78117f22f50b9" translate="yes" xml:space="preserve">
          <source>The map being iterated (&lt;code&gt;&lt;var&gt;myMap&lt;/var&gt;&lt;/code&gt; in the above Syntax box).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4cf0dca556641f02466f88f1a006a236af87da2" translate="yes" xml:space="preserve">
          <source>The mask could also have been created with &lt;code&gt;~FLAG_A &amp;amp; ~FLAG_C&lt;/code&gt; (De Morgan's law):</source>
          <target state="translated">Маска также могла быть создана с помощью &lt;code&gt;~FLAG_A &amp;amp; ~FLAG_C&lt;/code&gt; (закон Де Моргана):</target>
        </trans-unit>
        <trans-unit id="dcf17b654d6c53d76495c7d1f5f32a02613493ed" translate="yes" xml:space="preserve">
          <source>The matched substring. (Corresponds to &lt;code&gt;$&amp;amp;&lt;/code&gt; above.)</source>
          <target state="translated">Соответствующая подстрока. (Соответствует &lt;code&gt;$&amp;amp;&lt;/code&gt; выше.)</target>
        </trans-unit>
        <trans-unit id="cb080417c46a159ac80f4c0040b9545a69d9c7de" translate="yes" xml:space="preserve">
          <source>The maximum number of elements the WebAssembly Table is allowed to grow to.</source>
          <target state="translated">Максимальное количество элементов таблицы WebAssembly может увеличиваться.</target>
        </trans-unit>
        <trans-unit id="b64129e5e3caa116968e5063fa3abe546865e288" translate="yes" xml:space="preserve">
          <source>The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of &lt;code&gt;minimumFractionDigits&lt;/code&gt; and 3; the default for currency formatting is the larger of &lt;code&gt;minimumFractionDigits&lt;/code&gt; and the number of minor unit digits provided by the &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;ISO 4217 currency code list&lt;/a&gt; (2 if the list doesn't provide that information); the default for percent formatting is the larger of &lt;code&gt;minimumFractionDigits&lt;/code&gt; and 0.</source>
          <target state="translated">Максимальное количество цифр дробной части для использования. Возможные значения от 0 до 20; значение по умолчанию для форматирования простых чисел - большее из &lt;code&gt;minimumFractionDigits&lt;/code&gt; и 3; по умолчанию для форматирования валюты используется большее из &lt;code&gt;minimumFractionDigits&lt;/code&gt; и количества младших разрядов единиц измерения, предоставленных &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;списком кодов валют ISO 4217&lt;/a&gt; (2, если список не предоставляет эту информацию); значение по умолчанию для процентного форматирования - большее из &lt;code&gt;minimumFractionDigits&lt;/code&gt; и 0.</target>
        </trans-unit>
        <trans-unit id="d29f6013407c2248ac7c06832b30a540c8c2ee1f" translate="yes" xml:space="preserve">
          <source>The maximum number of significant digits to use. Possible values are from 1 to 21; the default is 21.</source>
          <target state="translated">Максимальное количество значащих цифр.Возможные значения от 1 до 21;по умолчанию 21.</target>
        </trans-unit>
        <trans-unit id="750989a80cfa27f6160080f8566c63c3e7fc5e63" translate="yes" xml:space="preserve">
          <source>The maximum safe integer in JavaScript (&lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt;).</source>
          <target state="translated">Максимальное безопасное целое число в JavaScript ( &lt;code&gt;2&lt;sup&gt;53&lt;/sup&gt; - 1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="718a6c97bec80ce33fa4d87471469e027f780c5b" translate="yes" xml:space="preserve">
          <source>The maximum size the WebAssembly Memory is allowed to grow to, in units of WebAssembly pages. When present, the &lt;code&gt;maximum&lt;/code&gt; parameter acts as a hint to the engine to reserve memory up front. However, the engine may ignore or clamp this reservation request. In general, most WebAssembly modules shouldn't need to set a &lt;code&gt;maximum&lt;/code&gt;.</source>
          <target state="translated">Максимальный размер, до которого может увеличиваться память WebAssembly, в единицах страниц WebAssembly. Если он присутствует, &lt;code&gt;maximum&lt;/code&gt; параметр действует как подсказка для двигателя, чтобы заранее зарезервировать память. Однако механизм может игнорировать или ограничивать этот запрос на резервирование. В общем, для большинства модулей WebAssembly не нужно устанавливать &lt;code&gt;maximum&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fd5c373d3e2793fa46239311c0807bcbbab44b3c" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt;&lt;/a&gt; returns an array of symbols and lets you find symbol properties on a given object. Note that every object is initialized with no own symbol properties, so that this array will be empty unless you've set symbol properties on the object.</source>
          <target state="translated">Метод &lt;a href=&quot;object/getownpropertysymbols&quot;&gt; &lt;code&gt;Object.getOwnPropertySymbols()&lt;/code&gt; &lt;/a&gt; возвращает массив символов и позволяет находить свойства символа для данного объекта. Обратите внимание, что каждый объект инициализируется без собственных свойств символа, поэтому этот массив будет пустым, если вы не установили свойства символа для объекта.</target>
        </trans-unit>
        <trans-unit id="60dad2efad0b22f77e505717a23ffda8e983fe9a" translate="yes" xml:space="preserve">
          <source>The method returns values &lt;code&gt;Atomics.OK&lt;/code&gt;, &lt;code&gt;Atomics.TIMEDOUT&lt;/code&gt;, and &lt;code&gt;Atomics.NOTEQUAL&lt;/code&gt;, instead of the later-specified strings.</source>
          <target state="translated">Метод возвращает значения &lt;code&gt;Atomics.OK&lt;/code&gt; , &lt;code&gt;Atomics.TIMEDOUT&lt;/code&gt; и &lt;code&gt;Atomics.NOTEQUAL&lt;/code&gt; вместо указанных позже строк.</target>
        </trans-unit>
        <trans-unit id="b9f1f2ece69fae49f5a21177bf3c28cb118a4f77" translate="yes" xml:space="preserve">
          <source>The methods &lt;a href=&quot;atomics/wait&quot;&gt;&lt;code&gt;Atomics.wait()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wake&quot;&gt;&lt;code&gt;Atomics.wake()&lt;/code&gt;&lt;/a&gt; were named &lt;code&gt;Atomics.futexWait()&lt;/code&gt; and &lt;code&gt;Atomics.futexWake()&lt;/code&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1260910&quot;&gt;bug 1260910&lt;/a&gt;). Note: The old names have been removed in version 49 and later (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1262062&quot;&gt;bug 1262062&lt;/a&gt;). &lt;code&gt;Atomics.wake()&lt;/code&gt; has then been renamed to &lt;code&gt;Atomics.notify()&lt;/code&gt; in version 63.</source>
          <target state="translated">Методы &lt;a href=&quot;atomics/wait&quot;&gt; &lt;code&gt;Atomics.wait()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wake&quot;&gt; &lt;code&gt;Atomics.wake()&lt;/code&gt; &lt;/a&gt; получили названия &lt;code&gt;Atomics.futexWait()&lt;/code&gt; и &lt;code&gt;Atomics.futexWake()&lt;/code&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1260910&quot;&gt;ошибка 1260910&lt;/a&gt; ). Примечание: старые имена были удалены в версии 49 и новее ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1262062&quot;&gt;ошибка 1262062&lt;/a&gt; ). &lt;code&gt;Atomics.wake()&lt;/code&gt; был переименован в &lt;code&gt;Atomics.notify()&lt;/code&gt; в версии 63.</target>
        </trans-unit>
        <trans-unit id="f371a9482b5371820f5baf3a381a1b6d7b64bc27" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;Atomics.futexWakeOrRequeue()&lt;/code&gt; and &lt;code&gt;Atomics.fence()&lt;/code&gt; are now removed entirely (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1259544&quot;&gt;bug 1259544&lt;/a&gt; and &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1225028&quot;&gt;bug 1225028&lt;/a&gt;).</source>
          <target state="translated">Методы &lt;code&gt;Atomics.futexWakeOrRequeue()&lt;/code&gt; и &lt;code&gt;Atomics.fence()&lt;/code&gt; теперь полностью удалены ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1259544&quot;&gt;ошибка 1259544&lt;/a&gt; и &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1225028&quot;&gt;ошибка 1225028&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="5d590e5a7d3b15645275570326815157d6d45c9c" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;promise.then()&lt;/code&gt;, &lt;code&gt;promise.catch()&lt;/code&gt;, and &lt;code&gt;promise.finally()&lt;/code&gt; are used to associate further action with a promise that becomes settled. These methods also return a newly generated promise object, which can optionally be used for chaining; for example, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8b1bd3132eb7e61bbf9ca4e03ccc6a2fbaf6f78" translate="yes" xml:space="preserve">
          <source>The methods shown below are not the best way to do things, and probably should not be used in any production environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e29565d693411976b7ee91ee70c54bff5462838" translate="yes" xml:space="preserve">
          <source>The methods that provide property access. This is analogous to the concept of traps in operating systems.</source>
          <target state="translated">Методы,обеспечивающие доступ к собственности.Это аналогично концепции ловушек в операционных системах.</target>
        </trans-unit>
        <trans-unit id="763df0069b806ae2d2ced428f58a4492fd633031" translate="yes" xml:space="preserve">
          <source>The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0; the default for currency formatting is the number of minor unit digits provided by the &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;ISO 4217 currency code list&lt;/a&gt; (2 if the list doesn't provide that information).</source>
          <target state="translated">Минимальное количество знаков после запятой. Возможные значения от 0 до 20; значение по умолчанию для форматирования простых чисел и процентов - 0; по умолчанию для форматирования валюты используется количество второстепенных цифр единиц измерения, указанное в &lt;a href=&quot;http://www.currency-iso.org/en/home/tables/table-a1.html&quot;&gt;списке кодов валют ISO 4217&lt;/a&gt; (2, если список не предоставляет эту информацию).</target>
        </trans-unit>
        <trans-unit id="e859baf661ae604cb1d549a1afb8079362a2ca94" translate="yes" xml:space="preserve">
          <source>The minimum number of integer digits to use. Possible values are from 1 to 21; the default is 1.</source>
          <target state="translated">Минимальное количество используемых целых чисел.Возможные значения от 1 до 21;по умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="a67ed61e7c39c9ed18569163801f9408e01a5168" translate="yes" xml:space="preserve">
          <source>The minimum number of significant digits to use. Possible values are from 1 to 21; the default is 1.</source>
          <target state="translated">Минимальное количество значащих цифр.Возможные значения от 1 до 21;по умолчанию 1.</target>
        </trans-unit>
        <trans-unit id="ba4e9ae100f45417e01b853489d958a40d32ce2d" translate="yes" xml:space="preserve">
          <source>The minimum safe integer in JavaScript (&lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt;).</source>
          <target state="translated">Минимальное безопасное целое число в JavaScript ( &lt;code&gt;-(2&lt;sup&gt;53&lt;/sup&gt; - 1)&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="6b698914aa94159523cef2bc019c01c7660c3e2a" translate="yes" xml:space="preserve">
          <source>The minus sign string (&quot;-&quot;).</source>
          <target state="translated">Строка со знаком минус (&quot;-&quot;).</target>
        </trans-unit>
        <trans-unit id="74ab35e95a910537a35fbced3b5c61fa53ef82b9" translate="yes" xml:space="preserve">
          <source>The modified array, filled with &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25fd4a7a868b02af2fc1b7afb2e53c07c48a7b1" translate="yes" xml:space="preserve">
          <source>The modified array.</source>
          <target state="translated">Модифицированный массив.</target>
        </trans-unit>
        <trans-unit id="a0c786e12edac4e20f56f414da9f51f82fbda622" translate="yes" xml:space="preserve">
          <source>The module to import from. This is often a relative or absolute path name to the &lt;code&gt;.js&lt;/code&gt; file containing the module. Certain bundlers may permit or require the use of the extension; check your environment. Only single quoted and double quoted Strings are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea7edbb20a448cc1cb97971e0bc9df2771292a4" translate="yes" xml:space="preserve">
          <source>The module to import from. This is often a relative or absolute path name to the &lt;code&gt;.js&lt;/code&gt; file containing the module. Certain bundlers may permit or require the use of the extension; check your environment. Only single quotes and double quotes Strings are allowed.</source>
          <target state="translated">Модуль, из которого нужно импортировать. Часто это относительный или абсолютный путь к файлу &lt;code&gt;.js&lt;/code&gt; , содержащему модуль. Некоторые составители пакетов могут разрешать или требовать использование расширения; проверьте свою среду. Допускаются только одинарные и двойные кавычки. Строки.</target>
        </trans-unit>
        <trans-unit id="1728dd812298796c1cc3435e4a374671c8fdb897" translate="yes" xml:space="preserve">
          <source>The module: file.js</source>
          <target state="translated">Модуль:file.js</target>
        </trans-unit>
        <trans-unit id="dfb81342f946f5482b76a4486bcf238475710ae5" translate="yes" xml:space="preserve">
          <source>The most common radixes:</source>
          <target state="translated">Самые распространенные радиусы:</target>
        </trans-unit>
        <trans-unit id="76e9d1381a97d92808fb7202cd7432c8f40d2574" translate="yes" xml:space="preserve">
          <source>The multiplication assignment operator &lt;strong&gt;multiplies&lt;/strong&gt; a variable by the value of the right operand and assigns the result to the variable. See the &lt;a href=&quot;arithmetic_operators#Multiplication&quot;&gt;multiplication operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания &lt;strong&gt;умножения умножает&lt;/strong&gt; переменную на значение правого операнда и присваивает результат переменной. Подробнее об &lt;a href=&quot;arithmetic_operators#Multiplication&quot;&gt;операторе умножения&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="07c04dea55dedbdf9c86c085d62c2565d2d2a868" translate="yes" xml:space="preserve">
          <source>The multiplication operator produces the product of the operands.</source>
          <target state="translated">Оператор умножения производит продукт операндов.</target>
        </trans-unit>
        <trans-unit id="a36b6484d008e058f552129bae2641b50575d28d" translate="yes" xml:space="preserve">
          <source>The name of a formal parameter for the function.</source>
          <target state="translated">Имя формального параметра для функции.</target>
        </trans-unit>
        <trans-unit id="7da6a49079f3f00ae208d0fe491e14b9275bb90a" translate="yes" xml:space="preserve">
          <source>The name of a property of the object on which you wish to monitor changes.</source>
          <target state="translated">Имя свойства объекта,на котором вы хотите отслеживать изменения.</target>
        </trans-unit>
        <trans-unit id="367237829796e61e8d941751ab30eb528f92522e" translate="yes" xml:space="preserve">
          <source>The name of a property of the object to stop watching.</source>
          <target state="translated">Название свойства объекта,чтобы прекратить наблюдение.</target>
        </trans-unit>
        <trans-unit id="de532ad388967e52d26bcd33e30fd5c7d491ba33" translate="yes" xml:space="preserve">
          <source>The name of an argument to be passed to the function.</source>
          <target state="translated">Имя аргумента,передаваемого в функцию.</target>
        </trans-unit>
        <trans-unit id="6ce8197cac199d0c6b102526dac5899954ace763" translate="yes" xml:space="preserve">
          <source>The name of an argument to be passed to the function. A function can have up to 255 arguments.</source>
          <target state="translated">Имя аргумента,передаваемого в функцию.Функция может иметь до 255 аргументов.</target>
        </trans-unit>
        <trans-unit id="a5e25a2a144e74a60e1499c5291c5fd71c60ee1f" translate="yes" xml:space="preserve">
          <source>The name of an argument to be passed to the function. Maximum number of arguments varies in different engines.</source>
          <target state="translated">Имя аргумента,передаваемого в функцию.Максимальное количество аргументов варьируется в разных двигателях.</target>
        </trans-unit>
        <trans-unit id="24666bfdf5ce4fb588f0dc3645f4c102164077d3" translate="yes" xml:space="preserve">
          <source>The name of an argument. Zero arguments need to be indicated with &lt;code&gt;()&lt;/code&gt;. For only one argument, the parentheses are not required. (like &lt;code&gt;foo =&amp;gt; 1&lt;/code&gt;)</source>
          <target state="translated">Имя аргумента. Нулевые аргументы должны быть обозначены &lt;code&gt;()&lt;/code&gt; . Только для одного аргумента круглые скобки не требуются. (например, &lt;code&gt;foo =&amp;gt; 1&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a8eea5cbe47896a553b0b6de01f3790201a77215" translate="yes" xml:space="preserve">
          <source>The name of an object, or an expression evaluating to an object.</source>
          <target state="translated">Имя объекта или выражение,вычисляющее объект.</target>
        </trans-unit>
        <trans-unit id="275a58fec29e9e236a7c8e425113d65e815df4a4" translate="yes" xml:space="preserve">
          <source>The name of the file containing the code that caused the exception</source>
          <target state="translated">Имя файла,содержащего код,который вызвал исключение.</target>
        </trans-unit>
        <trans-unit id="f7a9edd78cfb4ca1e86741e132075a8ddc4c30a7" translate="yes" xml:space="preserve">
          <source>The name of the file containing the code that caused the exception.</source>
          <target state="translated">Имя файла,содержащего код,который вызвал исключение.</target>
        </trans-unit>
        <trans-unit id="ab3a145fce47d891a2e61310fbd2cd53663e04a2" translate="yes" xml:space="preserve">
          <source>The name of the function used for the tag can be whatever you want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d24347b639fc5c1199b8f3590bff6a146e13c82" translate="yes" xml:space="preserve">
          <source>The name of the function.</source>
          <target state="translated">Название функции.</target>
        </trans-unit>
        <trans-unit id="d20ee82caf5dcbe9b0057181866dc5e6c8cdd03e" translate="yes" xml:space="preserve">
          <source>The name of the property to be defined or modified.</source>
          <target state="translated">Имя свойства,которое будет определено или изменено.</target>
        </trans-unit>
        <trans-unit id="de9de21631261ef9bbf3a8297d8bcea6669a642b" translate="yes" xml:space="preserve">
          <source>The name of the property to be deleted.</source>
          <target state="translated">Имя свойства,подлежащего удалению.</target>
        </trans-unit>
        <trans-unit id="22cfab64b23ba9794cc07f1271bd3344a40a9d3e" translate="yes" xml:space="preserve">
          <source>The name of the property to bind to the given function.</source>
          <target state="translated">Имя свойства для привязки к данной функции.</target>
        </trans-unit>
        <trans-unit id="fc2975ca850e4bc98a8819068a30cce40bdf21fa" translate="yes" xml:space="preserve">
          <source>The name of the property to check.</source>
          <target state="translated">Название недвижимости для проверки.</target>
        </trans-unit>
        <trans-unit id="f38bfaab45215366afc5024fb671472a5e6592e9" translate="yes" xml:space="preserve">
          <source>The name of the property to get an own property descriptor for.</source>
          <target state="translated">Имя собственности для получения собственного дескриптора собственности.</target>
        </trans-unit>
        <trans-unit id="2e22159b8af57c29d0edb7193b221eb98a0ca996" translate="yes" xml:space="preserve">
          <source>The name of the property to get.</source>
          <target state="translated">Название собственности,которую нужно получить.</target>
        </trans-unit>
        <trans-unit id="f1c14f88a65230d7c15efb3a3d43e7bba43ad5af" translate="yes" xml:space="preserve">
          <source>The name of the property to set.</source>
          <target state="translated">Название объекта,который нужно установить.</target>
        </trans-unit>
        <trans-unit id="072ab24517a6c39844a42614a2b2313bced7c508" translate="yes" xml:space="preserve">
          <source>The name of the property to test.</source>
          <target state="translated">Название объекта для проверки.</target>
        </trans-unit>
        <trans-unit id="18e89c33fbbf1a858ab7ea4223bf1b5ffc3bb55e" translate="yes" xml:space="preserve">
          <source>The name of the property whose description should be retrieved.</source>
          <target state="translated">Название свойства,описание которого должно быть найдено.</target>
        </trans-unit>
        <trans-unit id="96dfc5262495727e7474b1c79ab763e265a37360" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to check for existence.</source>
          <target state="translated">Имя или &lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; свойства, существование которого необходимо проверить.</target>
        </trans-unit>
        <trans-unit id="48d8dc51b192220dbef92676b492b50e9f346b4a" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to delete.</source>
          <target state="translated">Имя или &lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; удаляемого свойства.</target>
        </trans-unit>
        <trans-unit id="a2aec28704e47ca94bbbbc1a7315d6eb01820184" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to get.</source>
          <target state="translated">Имя или &lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; свойства, которое нужно получить.</target>
        </trans-unit>
        <trans-unit id="94b70bd1f03ab362dd3a1a5c9336b84191997169" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to set.</source>
          <target state="translated">Имя или &lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; устанавливаемого свойства.</target>
        </trans-unit>
        <trans-unit id="52cb55e47e54fd554c1c9f1a3bce6aae49730f30" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property whose description is to be retrieved.</source>
          <target state="translated">Имя или &lt;a href=&quot;../../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; свойства, описание которого нужно получить.</target>
        </trans-unit>
        <trans-unit id="0029fe62245130a498dc98a1e5a5d91259893a3e" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property to be defined or modified.</source>
          <target state="translated">Имя или &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; свойства, которое необходимо определить или изменить.</target>
        </trans-unit>
        <trans-unit id="ad461d8b0ba91390ab5f764281af510114ef480f" translate="yes" xml:space="preserve">
          <source>The name or &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; of the property whose description is to be retrieved.</source>
          <target state="translated">Имя или &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; свойства, описание которого нужно получить.</target>
        </trans-unit>
        <trans-unit id="6dadfd92cf6738daf23bf50c404683d691411356" translate="yes" xml:space="preserve">
          <source>The name property is read-only and cannot be changed by the assigment operator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09aeb3409ebb71b44fc75612e81828cb7fa19a0" translate="yes" xml:space="preserve">
          <source>The names of the variable or variables to declare. Each must be a legal JavaScript identifier.</source>
          <target state="translated">Имена переменных или переменных для объявления.Каждое из них должно быть легальным идентификатором JavaScript.</target>
        </trans-unit>
        <trans-unit id="951348e7cb27e191828dfb4671b8e5c23f8e61b7" translate="yes" xml:space="preserve">
          <source>The names of variables, called &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Identifier&quot;&gt;identifiers&lt;/a&gt;, conform to certain rules, which your code must adhere to!</source>
          <target state="translated">Имена переменных, называемые &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Identifier&quot;&gt;идентификаторами&lt;/a&gt; , соответствуют определенным правилам, которых должен придерживаться ваш код!</target>
        </trans-unit>
        <trans-unit id="e0ff1cea8f3ecdc88768382088373dd040377d56" translate="yes" xml:space="preserve">
          <source>The names of variables, called &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Glossary/Identifier&quot;&gt;identifiers&lt;/a&gt;, conform to certain rules, which your code must adhere to!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd88dd9f8b42bafd07815195373b97b3ebfbb6ec" translate="yes" xml:space="preserve">
          <source>The natural logarithm (base &lt;a href=&quot;e&quot;&gt;&lt;code&gt;e&lt;/code&gt;&lt;/a&gt;) of &lt;strong&gt;1&lt;/strong&gt; plus the given number. If the number is less than &lt;strong&gt;-1&lt;/strong&gt;, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Натуральный логарифм (основание &lt;a href=&quot;e&quot;&gt; &lt;code&gt;e&lt;/code&gt; &lt;/a&gt; ) &lt;strong&gt;1&lt;/strong&gt; плюс заданное число. Если число меньше &lt;strong&gt;-1&lt;/strong&gt; , возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d313b29c30bbe5cfaa7edd780031234d8f7d64fd" translate="yes" xml:space="preserve">
          <source>The natural logarithm (base &lt;a href=&quot;e&quot;&gt;&lt;code&gt;e&lt;/code&gt;&lt;/a&gt;) of the given number. If the number is negative, &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Натуральный логарифм (основание &lt;a href=&quot;e&quot;&gt; &lt;code&gt;e&lt;/code&gt; &lt;/a&gt; ) заданного числа. Если число отрицательное, возвращается &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e544e53657061913445d2e57a74474507f1d6c85" translate="yes" xml:space="preserve">
          <source>The nearest &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision%20floating-point%20format&quot;&gt;32-bit single precision&lt;/a&gt; float representation of the given number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393b083b54d47b39619c41c132451295b58cab10" translate="yes" xml:space="preserve">
          <source>The nearest &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;32-bit single precision&lt;/a&gt; float representation of the given number.</source>
          <target state="translated">Ближайшее &lt;a href=&quot;https://en.wikipedia.org/wiki/Single-precision_floating-point_format&quot;&gt;32-битное&lt;/a&gt; представление заданного числа с плавающей запятой одинарной точности .</target>
        </trans-unit>
        <trans-unit id="55016b9cdc00feeb0fc50c6ef3c78c9e23e1d509" translate="yes" xml:space="preserve">
          <source>The necessity of an &lt;code&gt;isNaN&lt;/code&gt; function</source>
          <target state="translated">Необходимость функции &lt;code&gt;isNaN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d538a3f3125a5044904945af33cb3afd6e236c93" translate="yes" xml:space="preserve">
          <source>The necessity of an isNaN function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28da1899ba88419e5c0070fcfc31214e08e9946d" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;spread operator&lt;/a&gt; is a shorter way of writing the &lt;code&gt;apply&lt;/code&gt; solution to get the maximum of an array:</source>
          <target state="translated">Новый &lt;a href=&quot;../../operators/spread_syntax&quot;&gt;оператор распространения&lt;/a&gt; - это более короткий способ написания &lt;code&gt;apply&lt;/code&gt; решения для получения максимума массива:</target>
        </trans-unit>
        <trans-unit id="15e32319f478746591021d90d06710bd39e641b7" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property of the object upon which the method was called.</source>
          <target state="translated">Новое свойство &lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; объекта, для которого был вызван метод.</target>
        </trans-unit>
        <trans-unit id="a119df48b5040f53e992a07cc14681193b9c81a9" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments let applications specify the language whose formatting conventions should be used and customize the behavior of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7c6e6b2c84604d0b55f6e4f19c3286cf7b572d" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments let applications specify the language whose sort order should be used and customize the behavior of the function. In older implementations, which ignore the &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; and &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; arguments, the locale and sort order used are entirely implementation-dependent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ec580a79319a90f7040d3cb035ea54e34dedf5" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments customize the behavior of the function and let applications specify the language whose formatting conventions should be used. In older implementations, which ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale used and the form of the string returned are entirely implementation dependent.</source>
          <target state="translated">Новые аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; настраивают поведение функции и позволяют приложениям указывать язык, для которого следует использовать соглашения о форматировании. В более старых реализациях, которые игнорируют аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; , используемый языковой стандарт и форма возвращаемой строки полностью зависят от реализации.</target>
        </trans-unit>
        <trans-unit id="0d4931ce8fb67879fa37cf5601f98896d39cb08e" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments let applications specify the language whose sort order should be used and customize the behavior of the function. In older implementations, which ignore the &lt;code&gt;locales&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments, the locale and sort order used are entirely implementation dependent.</source>
          <target state="translated">Новые аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; позволяют приложениям указывать язык, порядок сортировки которого следует использовать, и настраивать поведение функции. В более старых реализациях, которые игнорируют аргументы &lt;code&gt;locales&lt;/code&gt; и &lt;code&gt;options&lt;/code&gt; , используемые языковой стандарт и порядок сортировки полностью зависят от реализации.</target>
        </trans-unit>
        <trans-unit id="a64e1c0c60e41953574fdf8aa63bda5884e93d3e" translate="yes" xml:space="preserve">
          <source>The new value of the property to set.</source>
          <target state="translated">Новая стоимость недвижимости,которую необходимо установить.</target>
        </trans-unit>
        <trans-unit id="a5929a3e16874afbd459c0c7ee192675ce9ae5ec" translate="yes" xml:space="preserve">
          <source>The next simplest use of &lt;code&gt;bind()&lt;/code&gt; is to make a function with pre-specified initial arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b48cd65e58876e403c7adf3d0a480e85996a3d7" translate="yes" xml:space="preserve">
          <source>The next simplest use of &lt;code&gt;bind()&lt;/code&gt; is to make a function with pre-specified initial arguments. These arguments (if any) follow the provided &lt;code&gt;this&lt;/code&gt; value and are then inserted at the start of the arguments passed to the target function, followed by the arguments passed to the bound function, whenever the bound function is called.</source>
          <target state="translated">Следующее простейшее использование &lt;code&gt;bind()&lt;/code&gt; - создание функции с заранее заданными начальными аргументами. Эти аргументы (если есть) следуют за предоставленным значением &lt;code&gt;this&lt;/code&gt; и затем вставляются в начало аргументов, переданных целевой функции, за которыми следуют аргументы, переданные связанной функции, всякий раз, когда вызывается связанная функция.</target>
        </trans-unit>
        <trans-unit id="7a9ea12d516aecf0eecc055e83dd2eda707d7102" translate="yes" xml:space="preserve">
          <source>The non-identity operator returns true if the operands &lt;strong&gt;are not equal and/or not of the same type&lt;/strong&gt;.</source>
          <target state="translated">Неидентификационный оператор возвращает истину, если операнды &lt;strong&gt;не равны и / или не одного типа&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="3280c8f6e0c09ac94ccf90707579eae49cae5772" translate="yes" xml:space="preserve">
          <source>The non-standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt;&lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt;&lt;/a&gt; method is deprecated and shouldn't be used anymore. It uses a format string in the same format expected by the &lt;code&gt;strftime()&lt;/code&gt; function in C. &lt;strong&gt;The function is no longer available in Firefox 58+&lt;/strong&gt;.</source>
          <target state="translated">Нестандартное &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt; &lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt; &lt;/a&gt; метод является устаревшим и не должен больше использоваться. Он использует строку формата в том же формате, который ожидается функцией &lt;code&gt;strftime()&lt;/code&gt; в C. &lt;strong&gt;Эта функция больше не доступна в Firefox 58+&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="39445ffb7e76d037fcab958794abe013d44e19b9" translate="yes" xml:space="preserve">
          <source>The non-standard &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Expression_closures&quot;&gt;expression closure&lt;/a&gt; syntax (shorthand function syntax) is deprecated and shouldn't be used anymore. This syntax will be removed entirely in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1083458&quot;&gt;bug 1083458&lt;/a&gt; and scripts using it will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; then.</source>
          <target state="translated">Синтаксис &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Expression_closures&quot;&gt;закрытия&lt;/a&gt; нестандартных выражений (сокращенный синтаксис функций) устарел и больше не должен использоваться. Этот синтаксис будет полностью удален в &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1083458&quot;&gt;ошибке 1083458,&lt;/a&gt; и тогда сценарии, использующие его, будут генерировать &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt; &lt;code&gt;SyntaxError&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78eff4754bd77983b2d8587cf88e766887549d6b" translate="yes" xml:space="preserve">
          <source>The non-standard &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleFormat&quot;&gt;&lt;code&gt;Date.prototype.toLocaleFormat&lt;/code&gt;&lt;/a&gt; method is deprecated and shouldn't be used anymore. It uses a format string in the same format expected by the &lt;code&gt;strftime()&lt;/code&gt; function in C. &lt;strong&gt;The function is no longer available in Firefox 58+&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efaa74070547b3ef34297f702f27340a75a2c3aa" translate="yes" xml:space="preserve">
          <source>The non-standard &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Expression_closures&quot;&gt;expression closure&lt;/a&gt; syntax (shorthand function syntax) is deprecated and shouldn't be used anymore. This syntax will be removed entirely in &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1083458&quot;&gt;bug 1083458&lt;/a&gt; and scripts using it will throw a &lt;a href=&quot;../global_objects/syntaxerror&quot;&gt;&lt;code&gt;SyntaxError&lt;/code&gt;&lt;/a&gt; then.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30473041dd548fdac7f85a6c0107f0ad821670e" translate="yes" xml:space="preserve">
          <source>The non-standard &lt;code&gt;ArrayBuffer.slice()&lt;/code&gt; method has been removed in Firefox 53 (but the standardized version &lt;code&gt;ArrayBuffer.prototype.slice()&lt;/code&gt; is kept.</source>
          <target state="translated">Нестандартное &lt;code&gt;ArrayBuffer.slice()&lt;/code&gt; метод был удален в Firefox 53 (но стандартизированы версия &lt;code&gt;ArrayBuffer.prototype.slice()&lt;/code&gt; сохраняется.</target>
        </trans-unit>
        <trans-unit id="0d2c1006d937b3726c4d73d8fa54089d1377852a" translate="yes" xml:space="preserve">
          <source>The non-standard generic &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; methods are deprecated and have been removed in Firefox 68 and later. String generics provide &lt;code&gt;String&lt;/code&gt; instance methods on the &lt;code&gt;String&lt;/code&gt; object allowing &lt;code&gt;String&lt;/code&gt; methods to be applied to any object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bf83b1741498b124fb7864a78c93e0d776606b" translate="yes" xml:space="preserve">
          <source>The non-standard generic &lt;a href=&quot;../global_objects/string&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; methods are deprecated and will be removed in the future (no cross-browser support, available in Firefox only). String generics provide &lt;code&gt;String&lt;/code&gt; instance methods on the &lt;code&gt;String&lt;/code&gt; object allowing &lt;code&gt;String&lt;/code&gt; methods to be applied to any object.</source>
          <target state="translated">Нестандартные универсальные методы &lt;a href=&quot;../global_objects/string&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt; устарели и будут удалены в будущем (кроссбраузерная поддержка отсутствует, доступно только в Firefox). Строка генерик обеспечивают &lt;code&gt;String&lt;/code&gt; методы экземпляра на &lt;code&gt;String&lt;/code&gt; объекте , позволяющий &lt;code&gt;String&lt;/code&gt; методы , которые будут применены к любому объекту.</target>
        </trans-unit>
        <trans-unit id="8355336269c0fe7b85ff46c367706faca0a7d8de" translate="yes" xml:space="preserve">
          <source>The number 1.5 can be precisely represented in the binary numeral system, and is identical in 32-bit and 64-bit:</source>
          <target state="translated">Число 1.5 может быть точно представлено в двоичной системе счисления и идентично 32-битному и 64-битному:</target>
        </trans-unit>
        <trans-unit id="0b2a130cab5fa2bd9042428d3a70e702fe39efc1" translate="yes" xml:space="preserve">
          <source>The number &lt;code&gt;-1&lt;/code&gt; is the integer that is composed completely of 1 bits.</source>
          <target state="translated">Число &lt;code&gt;-1&lt;/code&gt; - это целое число, полностью состоящее из 1 бита.</target>
        </trans-unit>
        <trans-unit id="bf7411000c2a1e4d71c535236650c7044e865106" translate="yes" xml:space="preserve">
          <source>The number &lt;code&gt;-2147483648&lt;/code&gt; (hexadecimal representation: &lt;code&gt;-0x80000000&lt;/code&gt;) is the integer that is composed completely of 0 bits except the first (left-most) one.</source>
          <target state="translated">Число &lt;code&gt;-2147483648&lt;/code&gt; (шестнадцатеричное представление: &lt;code&gt;-0x80000000&lt;/code&gt; ) - это целое число, полностью состоящее из 0 битов, кроме первого (самого левого).</target>
        </trans-unit>
        <trans-unit id="b2dc5b85eefd1c66f304322ae69186cb77d7b364" translate="yes" xml:space="preserve">
          <source>The number &lt;code&gt;0&lt;/code&gt; is the integer that is composed completely of 0 bits.</source>
          <target state="translated">Число &lt;code&gt;0&lt;/code&gt; - это целое число, полностью состоящее из 0 бит.</target>
        </trans-unit>
        <trans-unit id="66e1e7318b6530ea647ef20fcd11f44257ad8e60" translate="yes" xml:space="preserve">
          <source>The number &lt;code&gt;2147483647&lt;/code&gt; (hexadecimal representation: &lt;code&gt;0x7fffffff&lt;/code&gt;) is the integer that is composed completely of 1 bits except the first (left-most) one.</source>
          <target state="translated">Число &lt;code&gt;2147483647&lt;/code&gt; (шестнадцатеричное представление: &lt;code&gt;0x7fffffff&lt;/code&gt; ) - это целое число, полностью состоящее из 1 бита, кроме первого (самого левого).</target>
        </trans-unit>
        <trans-unit id="4864417096a91cbdc8c012ddeb7487521cff5836" translate="yes" xml:space="preserve">
          <source>The number of WebAssembly pages you want to grow the memory by (each one is 64KiB in size).</source>
          <target state="translated">Количество страниц WebAssembly,на которые необходимо увеличить память (каждая из них имеет размер 64 КБ).</target>
        </trans-unit>
        <trans-unit id="a87ac602665c8283cba4e7d8209fa56fed5cb859" translate="yes" xml:space="preserve">
          <source>The number of arguments that were passed to the function.</source>
          <target state="translated">Количество аргументов,переданных функции.</target>
        </trans-unit>
        <trans-unit id="b4f4bac267001b782702e6b98d620dc5817e0d90" translate="yes" xml:space="preserve">
          <source>The number of digits to appear after the decimal point; this may be a value between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;20&lt;/code&gt;, inclusive, and implementations may optionally support a larger range of values. If this argument is omitted, it is treated as &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa25dddac8bea7480324ef8dc8073b005c6fd22a" translate="yes" xml:space="preserve">
          <source>The number of elements in the byte array. If unspecified, the view's length will match the buffer's length.</source>
          <target state="translated">Количество элементов в массиве байт.Если не указано,то длина представления будет соответствовать длине буфера.</target>
        </trans-unit>
        <trans-unit id="0434bfc768016f46ab48c4b6269285869b0a1d1b" translate="yes" xml:space="preserve">
          <source>The number of elements you want to grow the table by.</source>
          <target state="translated">Количество элементов,на которые вы хотите увеличить таблицу.</target>
        </trans-unit>
        <trans-unit id="83c28c191f438cb2c6f747339f2fcfb9412a813c" translate="yes" xml:space="preserve">
          <source>The number of items in a &lt;code&gt;Map&lt;/code&gt; is easily retrieved from its &lt;a href=&quot;map/size&quot;&gt;&lt;code&gt;size&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac122d78fc16e382607937c70575742720949db" translate="yes" xml:space="preserve">
          <source>The number of items in an &lt;code&gt;Object&lt;/code&gt; must be determined manually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f253a501f866006979caa2e5778a8f67a52a7c1" translate="yes" xml:space="preserve">
          <source>The number of leading zero bits in the 32-bit binary representation of the given number.</source>
          <target state="translated">Количество опережающих нулевых битов в 32-битном двоичном представлении данного числа.</target>
        </trans-unit>
        <trans-unit id="b725648291d4c7f9480a4ff66adc75ff12bfb4b6" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between 1 January 1970 00:00:00 UTC and the given date (the &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object is also changed in place).</source>
          <target state="translated">Количество миллисекунд между 1 января 1970 00:00:00 UTC и заданной датой ( объект &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; также изменяется на месте).</target>
        </trans-unit>
        <trans-unit id="cf7a51aac4070623c4f4e3b2748768191df7468d" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between 1 January 1970 00:00:00 UTC and the given date.</source>
          <target state="translated">Количество миллисекунд между 1 января 1970 00:00 UTC и указанной датой.</target>
        </trans-unit>
        <trans-unit id="2fdc3c07c01a174ed264e0c8f4a9600053649fa8" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date (effectively, the value of the argument).</source>
          <target state="translated">Количество миллисекунд между 1 января 1970 00:00:00 UTC и обновленной датой (фактически,значение аргумента).</target>
        </trans-unit>
        <trans-unit id="d16d3d11b36d3a8e2d976723b523e29a606e12ed" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between 1 January 1970 00:00:00 UTC and the updated date.</source>
          <target state="translated">Количество миллисекунд между 1 января 1970 00:00 UTC и обновленной датой.</target>
        </trans-unit>
        <trans-unit id="e71993f33f98dfef7435a93c2236af6594582ace" translate="yes" xml:space="preserve">
          <source>The number of milliseconds between January 1, 1970 00:00:00 UTC and the updated date.</source>
          <target state="translated">Количество миллисекунд между 1 января 1970 00:00 UTC и обновленной датой.</target>
        </trans-unit>
        <trans-unit id="c59a2b53f39255122ccc0b48db5e91e385a5cba5" translate="yes" xml:space="preserve">
          <source>The number of objects or their traversal order is immaterial, so a &lt;code&gt;WeakSet&lt;/code&gt; is more suitable (and performant) than a &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; for tracking object references, especially if a very large number of objects is involved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51aca19bb861c8f5bed34bea7f13e6c45ce49d4" translate="yes" xml:space="preserve">
          <source>The number of possible parenthesized substrings is unlimited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c9f632510019aa6e6c1d1cb1d6180474816136" translate="yes" xml:space="preserve">
          <source>The number of sleeping agents to notify. Defaults to &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;+Infinity&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Количество уведомляемых спящих агентов. По умолчанию &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;+Infinity&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ad9875f50780d2e60921c6b63d95f13c01eb469c" translate="yes" xml:space="preserve">
          <source>The number to add.</source>
          <target state="translated">Номер,который нужно добавить.</target>
        </trans-unit>
        <trans-unit id="f9c014b7d052f8dbdee08287bf8389882209307c" translate="yes" xml:space="preserve">
          <source>The number to compute the bitwise AND with.</source>
          <target state="translated">Номер для вычисления побитового И с.</target>
        </trans-unit>
        <trans-unit id="b20fd4f192bd1de81e5397025e24869d303e2407" translate="yes" xml:space="preserve">
          <source>The number to compute the bitwise OR with.</source>
          <target state="translated">Номер для вычисления побитового ИЛИ с.</target>
        </trans-unit>
        <trans-unit id="2915f20bdad253a1d84d1288ff45321efc9eef3e" translate="yes" xml:space="preserve">
          <source>The number to compute the bitwise XOR with.</source>
          <target state="translated">Номер для вычисления битового XOR.</target>
        </trans-unit>
        <trans-unit id="659948d4af0ce0e538d9fc7583003bf96ae5183c" translate="yes" xml:space="preserve">
          <source>The number to exchange.</source>
          <target state="translated">Номер для обмена.</target>
        </trans-unit>
        <trans-unit id="3f218a15291c3c94b883e1d87d28d7c7a5476b0c" translate="yes" xml:space="preserve">
          <source>The number to format.</source>
          <target state="translated">Номер для форматирования.</target>
        </trans-unit>
        <trans-unit id="d7e7721433b70acead29556873e2e66eb4ff9fc5" translate="yes" xml:space="preserve">
          <source>The number to get a plural rule for.</source>
          <target state="translated">Номер,для которого нужно получить правило множественного числа.</target>
        </trans-unit>
        <trans-unit id="76f457c01e52adebc5d6acf13792848ed51de4c8" translate="yes" xml:space="preserve">
          <source>The number to store.</source>
          <target state="translated">Номер для хранения.</target>
        </trans-unit>
        <trans-unit id="02f9c65f5c74e609ef5af36ef9151b10739dd7d4" translate="yes" xml:space="preserve">
          <source>The number to subtract.</source>
          <target state="translated">Номер для вычитания.</target>
        </trans-unit>
        <trans-unit id="a11c5ee401f4705a50608aeb599eb8095aebe6b3" translate="yes" xml:space="preserve">
          <source>The numbering system to be used. Possible values include: &lt;code&gt;&quot;arab&quot;&lt;/code&gt;, &lt;code&gt;&quot;arabext&quot;&lt;/code&gt;, &lt;code&gt;&quot;bali&quot;&lt;/code&gt;, &lt;code&gt;&quot;beng&quot;&lt;/code&gt;, &lt;code&gt;&quot;deva&quot;&lt;/code&gt;, &lt;code&gt;&quot;fullwide&quot;&lt;/code&gt;, &lt;code&gt;&quot;gujr&quot;&lt;/code&gt;, &lt;code&gt;&quot;guru&quot;&lt;/code&gt;, &lt;code&gt;&quot;hanidec&quot;&lt;/code&gt;, &lt;code&gt;&quot;khmr&quot;&lt;/code&gt;, &lt;code&gt;&quot;knda&quot;&lt;/code&gt;, &lt;code&gt;&quot;laoo&quot;&lt;/code&gt;, &lt;code&gt;&quot;latn&quot;&lt;/code&gt;, &lt;code&gt;&quot;limb&quot;&lt;/code&gt;, &lt;code&gt;&quot;mlym&quot;&lt;/code&gt;, &lt;code&gt;&quot;mong&quot;&lt;/code&gt;, &lt;code&gt;&quot;mymr&quot;&lt;/code&gt;, &lt;code&gt;&quot;orya&quot;&lt;/code&gt;, &lt;code&gt;&quot;tamldec&quot;&lt;/code&gt;, &lt;code&gt;&quot;telu&quot;&lt;/code&gt;, &lt;code&gt;&quot;thai&quot;&lt;/code&gt;, &lt;code&gt;&quot;tibt&quot;&lt;/code&gt;.</source>
          <target state="translated">Используемая система нумерации. Возможные значения: &lt;code&gt;&quot;arab&quot;&lt;/code&gt; , &lt;code&gt;&quot;arabext&quot;&lt;/code&gt; , &lt;code&gt;&quot;bali&quot;&lt;/code&gt; , &lt;code&gt;&quot;beng&quot;&lt;/code&gt; , &lt;code&gt;&quot;deva&quot;&lt;/code&gt; , &lt;code&gt;&quot;fullwide&quot;&lt;/code&gt; , &lt;code&gt;&quot;gujr&quot;&lt;/code&gt; , &lt;code&gt;&quot;guru&quot;&lt;/code&gt; , &lt;code&gt;&quot;hanidec&quot;&lt;/code&gt; , &lt;code&gt;&quot;khmr&quot;&lt;/code&gt; , &lt;code&gt;&quot;knda&quot;&lt;/code&gt; , &lt;code&gt;&quot;laoo&quot;&lt;/code&gt; , &lt;code&gt;&quot;latn&quot;&lt;/code&gt; , &lt;code&gt;&quot;limb&quot;&lt;/code&gt; , &lt;code&gt;&quot;mlym&quot;&lt;/code&gt; , &lt;code&gt;&quot;mong&quot;&lt;/code&gt; , &lt;code&gt;&quot;mymr&quot;&lt;/code&gt; , &lt;code&gt;&quot;orya&quot;&lt;/code&gt; , &lt;code&gt;&quot;tamldec&quot;&lt;/code&gt; , &lt;code&gt;&quot;telu&quot;&lt;/code&gt; , &lt;code&gt;&quot;thai&quot;&lt;/code&gt; , &lt;code&gt;&quot;tibt&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e90dfd2aa880f980c6807ad11ce35690adf4c53b" translate="yes" xml:space="preserve">
          <source>The numbers &lt;a href=&quot;../infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../nan&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, as well as the value &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;, are all considered &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Числа &lt;a href=&quot;../infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;../nan&quot;&gt; &lt;code&gt;NaN&lt;/code&gt; &lt;/a&gt; , а также значение &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; считаются &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dab259e3c08340a782110f81c2b489db6950415f" translate="yes" xml:space="preserve">
          <source>The numbers &lt;code&gt;-2147483648&lt;/code&gt; and &lt;code&gt;2147483647&lt;/code&gt; are the minimum and the maximum integers representable through a 32bit signed number.</source>
          <target state="translated">Числа &lt;code&gt;-2147483648&lt;/code&gt; и &lt;code&gt;2147483647&lt;/code&gt; - это минимальное и максимальное целые числа, представимые 32-битным числом со знаком.</target>
        </trans-unit>
        <trans-unit id="b255e5a3d10a82cd08a282a87e3cd441549dcca8" translate="yes" xml:space="preserve">
          <source>The numeric value of the object being created.</source>
          <target state="translated">Числовое значение создаваемого объекта.</target>
        </trans-unit>
        <trans-unit id="aff7247f65f1de78346ce6acaafa45528068a21a" translate="yes" xml:space="preserve">
          <source>The object (not null, false, 3.1415 or other primitive types) returned by the constructor function becomes the result of the whole &lt;code&gt;new&lt;/code&gt; expression. If the constructor function doesn't explicitly return an object, the object created in step 1 is used instead. (Normally constructors don't return a value, but they can choose to do so if they want to override the normal object creation process.)</source>
          <target state="translated">Объект (не null, false, 3.1415 или другие примитивные типы), возвращаемый функцией-конструктором, становится результатом всего &lt;code&gt;new&lt;/code&gt; выражения. Если функция-конструктор не возвращает объект явно, вместо этого используется объект, созданный на шаге 1. (Обычно конструкторы не возвращают значение, но они могут сделать это, если они хотят переопределить обычный процесс создания объекта.)</target>
        </trans-unit>
        <trans-unit id="1e3f7c7169e8f8703602eafe9a24320e257b9a57" translate="yes" xml:space="preserve">
          <source>The object and array literal expressions provide an easy way to create &lt;em&gt;ad hoc&lt;/em&gt; packages of data.</source>
          <target state="translated">Литеральные выражения объекта и массива обеспечивают простой способ создания &lt;em&gt;специальных&lt;/em&gt; пакетов данных.</target>
        </trans-unit>
        <trans-unit id="ed5f64856277e53faa5995ee3ac53d31d498198c" translate="yes" xml:space="preserve">
          <source>The object being frozen is &lt;em&gt;immutable&lt;/em&gt;. However, it is not necessarily &lt;em&gt;constant&lt;/em&gt;. The following example shows that a frozen object is not constant (freeze is shallow).</source>
          <target state="translated">Замораживаемый объект &lt;em&gt;неизменен&lt;/em&gt; . Однако это не обязательно &lt;em&gt;постоянно&lt;/em&gt; . В следующем примере показано, что замороженный объект не является постоянным (замораживание неглубокое).</target>
        </trans-unit>
        <trans-unit id="39ccb1eed1434790f33e775bb46917d34dbd8c08" translate="yes" xml:space="preserve">
          <source>The object being made non-extensible.</source>
          <target state="translated">Объект не расширяется.</target>
        </trans-unit>
        <trans-unit id="65d1c6d16c6a9975ac052743ffb154f98815dbb7" translate="yes" xml:space="preserve">
          <source>The object being sealed.</source>
          <target state="translated">Объект запечатывается.</target>
        </trans-unit>
        <trans-unit id="72f1057afbcfb62419e70234f526fd639ac195e5" translate="yes" xml:space="preserve">
          <source>The object for which to get all own property descriptors.</source>
          <target state="translated">Объект,для которого необходимо получить все собственные дескрипторы свойств.</target>
        </trans-unit>
        <trans-unit id="5be727bb6fb858320f328547edd531732d26fe08" translate="yes" xml:space="preserve">
          <source>The object in which to look for the property.</source>
          <target state="translated">Объект,в котором нужно искать недвижимость.</target>
        </trans-unit>
        <trans-unit id="03a095c56888fd8bad6f1c01460d7416c443afe9" translate="yes" xml:space="preserve">
          <source>The object literal notation is not the same as the &lt;strong&gt;J&lt;/strong&gt;ava&lt;strong&gt;S&lt;/strong&gt;cript &lt;strong&gt;O&lt;/strong&gt;bject &lt;strong&gt;N&lt;/strong&gt;otation (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;). Although they look similar, there are differences between them:</source>
          <target state="translated">Литерал объекта обозначения не то же самое , как &lt;strong&gt;J&lt;/strong&gt; банках Северо- З &lt;strong&gt;S&lt;/strong&gt; cript &lt;strong&gt;O&lt;/strong&gt; ▪ Таблица &lt;strong&gt;N&lt;/strong&gt; otation ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt; ). Хотя они выглядят похоже, между ними есть различия:</target>
        </trans-unit>
        <trans-unit id="2a9e0c6f96f7ec07094918cc0911541556d97b98" translate="yes" xml:space="preserve">
          <source>The object of which the enumerable's own properties are to be returned.</source>
          <target state="translated">Объект,которому должны быть возвращены собственные свойства перечисляемого.</target>
        </trans-unit>
        <trans-unit id="df3eea7321d1fad8889ab8078b41a4196cfddec2" translate="yes" xml:space="preserve">
          <source>The object on which to define or modify properties.</source>
          <target state="translated">Объект,на котором необходимо определить или изменить свойства.</target>
        </trans-unit>
        <trans-unit id="63b76b7fd94cb9ee6818b8a9f5f445fcec7e16b2" translate="yes" xml:space="preserve">
          <source>The object on which to define the property.</source>
          <target state="translated">Объект,на котором нужно определить свойство.</target>
        </trans-unit>
        <trans-unit id="366d64e19cf9ba4de7a885be38083786e1aa0503" translate="yes" xml:space="preserve">
          <source>The object that was passed to the function.</source>
          <target state="translated">Объект,который был передан функции.</target>
        </trans-unit>
        <trans-unit id="293cb1e356ecc429d1fa1d057f7130d6aa4728dc" translate="yes" xml:space="preserve">
          <source>The object this method belongs to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d38b6ac42a7b6f65d8ae6b9c61a924c4a037303" translate="yes" xml:space="preserve">
          <source>The object to freeze.</source>
          <target state="translated">Объект для замораживания.</target>
        </trans-unit>
        <trans-unit id="9baca65f9cbd0fbc1015e93983d0544dfed81ca6" translate="yes" xml:space="preserve">
          <source>The object to test.</source>
          <target state="translated">Объект для испытания.</target>
        </trans-unit>
        <trans-unit id="1304624eb6d761703704344a50310762fdc81a0f" translate="yes" xml:space="preserve">
          <source>The object to which the assignment was originally directed. This is usually the proxy itself. But a &lt;code&gt;set&lt;/code&gt; handler can also be called indirectly, via the prototype chain or various other ways.</source>
          <target state="translated">Объект, на который изначально было направлено задание. Обычно это сам прокси. Но обработчик &lt;code&gt;set&lt;/code&gt; также может быть вызван косвенно, через цепочку прототипов или другими способами.</target>
        </trans-unit>
        <trans-unit id="aa0165de96c6193e5cb7d7b7c72dffc16de38e44" translate="yes" xml:space="preserve">
          <source>The object which is to have its prototype set.</source>
          <target state="translated">Объект,который должен иметь свой набор прототипов.</target>
        </trans-unit>
        <trans-unit id="201e863f2019256040397b303f37f3f38000b16f" translate="yes" xml:space="preserve">
          <source>The object which should be checked.</source>
          <target state="translated">Объект,который необходимо проверить.</target>
        </trans-unit>
        <trans-unit id="43a35898b1d8addc5cd09979f03c2e1b6dd1cb0b" translate="yes" xml:space="preserve">
          <source>The object which should be made non-extensible.</source>
          <target state="translated">Объект,который необходимо сделать не расширяемым.</target>
        </trans-unit>
        <trans-unit id="12d0dca3be70fcd44183f52424ceb694b1cfbf75" translate="yes" xml:space="preserve">
          <source>The object which should be sealed.</source>
          <target state="translated">Объект,который должен быть запечатан.</target>
        </trans-unit>
        <trans-unit id="a93422b357bfa928d2a0a105069bd82b0f6bc700" translate="yes" xml:space="preserve">
          <source>The object which should be the prototype of the newly-created object.</source>
          <target state="translated">Объект,который должен быть прототипом вновь созданного объекта.</target>
        </trans-unit>
        <trans-unit id="4c2739d4584b3eff7cd640e17bf777516e8c3311" translate="yes" xml:space="preserve">
          <source>The object whose enumerable &lt;em&gt;and non-enumerable&lt;/em&gt; own properties are to be returned.</source>
          <target state="translated">Объект, чьи перечисляемые &lt;em&gt;и неперечислимые&lt;/em&gt; собственные свойства должны быть возвращены.</target>
        </trans-unit>
        <trans-unit id="6a5634bf9a59eb88ae9abd12902c749baa8fbca2" translate="yes" xml:space="preserve">
          <source>The object whose enumerable and non-enumerable properties are to be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d26e6d1a406a06d81f56c71c21176892ec526d8" translate="yes" xml:space="preserve">
          <source>The object whose enumerable own property &lt;code&gt;[key, value]&lt;/code&gt; pairs are to be returned.</source>
          <target state="translated">Объект, чьи перечислимые пары собственное свойство &lt;code&gt;[key, value]&lt;/code&gt; должны быть возвращены.</target>
        </trans-unit>
        <trans-unit id="85a6b506897ee451c6b8ebcf6fc7b2debaee68eb" translate="yes" xml:space="preserve">
          <source>The object whose enumerable own property values are to be returned.</source>
          <target state="translated">Объект,которому должны быть возвращены бесчисленные собственные значения свойств.</target>
        </trans-unit>
        <trans-unit id="822b0f7c32d221e2f5345d0d5a927362ea023643" translate="yes" xml:space="preserve">
          <source>The object whose own enumerable string-keyed property &lt;code&gt;[&lt;var&gt;key&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt;]&lt;/code&gt; pairs are to be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efbf79d23ce1e9fcabc632125b5edf91e9033c0" translate="yes" xml:space="preserve">
          <source>The object whose prototype chain will be searched.</source>
          <target state="translated">Объект,цепочка прототипов которого будет искаться.</target>
        </trans-unit>
        <trans-unit id="075b152c4744470238c1aa2d7a7cab773348a22c" translate="yes" xml:space="preserve">
          <source>The object whose prototype is to be returned.</source>
          <target state="translated">Объект,прототип которого должен быть возвращен.</target>
        </trans-unit>
        <trans-unit id="c1d4d65e227817406a7a7c6076f0791fc4f0a0c5" translate="yes" xml:space="preserve">
          <source>The object whose symbol properties are to be returned.</source>
          <target state="translated">Объект,свойства символа которого должны быть возвращены.</target>
        </trans-unit>
        <trans-unit id="02ecf4c976c906f05327deb163703547357b02f0" translate="yes" xml:space="preserve">
          <source>The object's new prototype (an object or &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Новый прототип объекта (объект или &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="606abd8fbe64e746222130b2419c1cf2200ca9d6" translate="yes" xml:space="preserve">
          <source>The object's new prototype or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Новый прототип объекта или значение &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="775926049bbc2c83571495d9013c8195596905cf" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;arguments.caller&lt;/code&gt; property used to provide the function that invoked the currently executing function. This property has been removed and no longer works.</source>
          <target state="translated">Устаревшее свойство &lt;code&gt;arguments.caller&lt;/code&gt; , используемое для предоставления функции, которая вызвала выполняемую в данный момент функцию. Это свойство было удалено и больше не работает.</target>
        </trans-unit>
        <trans-unit id="87d933eeb78523a4be6d23a865347381192e4206" translate="yes" xml:space="preserve">
          <source>The offset (in bytes) of this view from the start of its &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Смещение (в байтах) этого представления от начала его &lt;a href=&quot;../arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d7293dbedd498867c3ff92402f6adf6fc514a200" translate="yes" xml:space="preserve">
          <source>The offset (in bytes) of this view from the start of its &lt;a href=&quot;arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;. Fixed at construction time and thus &lt;strong&gt;read only.&lt;/strong&gt;</source>
          <target state="translated">Смещение (в байтах) этого представления от начала его &lt;a href=&quot;arraybuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; . Исправлено во время строительства и поэтому &lt;strong&gt;доступно только для чтения.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dd0b97905b5240f9a6f92b84495a51c3d20542d" translate="yes" xml:space="preserve">
          <source>The offset into the target array at which to begin writing values from the source &lt;code&gt;array&lt;/code&gt;. If you omit this value, 0 is assumed (that is, the source &lt;code&gt;array&lt;/code&gt; will overwrite values in the target array starting at index 0).</source>
          <target state="translated">Смещение в целевом массиве, с которого следует начать запись значений из исходного &lt;code&gt;array&lt;/code&gt; . Если вы опустите это значение, предполагается, что 0 (то есть исходный &lt;code&gt;array&lt;/code&gt; перезапишет значения в целевом массиве, начиная с индекса 0).</target>
        </trans-unit>
        <trans-unit id="60de1ceeb1236d00f620e11d123f277fb0fa0466" translate="yes" xml:space="preserve">
          <source>The offset into the target array at which to begin writing values from the source array. If this value is omitted, 0 is assumed (that is, the source array will overwrite values in the target array starting at index 0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636fc596afc32de359f1d96eb3f0ae9a0fe3c66d" translate="yes" xml:space="preserve">
          <source>The offset of the matched substring within the whole string being examined. (For example, if the whole string was &lt;code&gt;'abcd'&lt;/code&gt;, and the matched substring was &lt;code&gt;'bc'&lt;/code&gt;, then this argument will be 1.)</source>
          <target state="translated">Смещение совпадающей подстроки во всей исследуемой строке. (Например, если вся строка была &lt;code&gt;'abcd'&lt;/code&gt; , а совпавшая подстрока была &lt;code&gt;'bc'&lt;/code&gt; , тогда этот аргумент будет равен 1.)</target>
        </trans-unit>
        <trans-unit id="f606e2f26797addd1300502cd3f1cbe446b51f78" translate="yes" xml:space="preserve">
          <source>The offset of the matched substring within the whole string being examined. (For example, if the whole string was &lt;code&gt;'abcd'&lt;/code&gt;, and the matched substring was &lt;code&gt;'bc'&lt;/code&gt;, then this argument will be &lt;code&gt;1&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1bb892481b2ac4142e9df11bd27b4a771ade0d" translate="yes" xml:space="preserve">
          <source>The offset, in byte, from the start of the view where to read the data.</source>
          <target state="translated">Смещение в байтах от начала представления,в котором необходимо считывать данные.</target>
        </trans-unit>
        <trans-unit id="35401d4c39cdb22722df825d14b1fa8a08c98b04" translate="yes" xml:space="preserve">
          <source>The offset, in byte, from the start of the view where to store the data.</source>
          <target state="translated">Смещение в байтах от начала представления,в котором должны храниться данные.</target>
        </trans-unit>
        <trans-unit id="cf328684716ea3c875f103fb9bf78e5fba9b57bf" translate="yes" xml:space="preserve">
          <source>The offset, in bytes, from the start of the view where to read the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dde8f5bd0ea9f29a8b77189d7a1a479575a92a0" translate="yes" xml:space="preserve">
          <source>The offset, in bytes, to the first byte in the above buffer for the new view to reference. If unspecified, the buffer view starts with the first byte.</source>
          <target state="translated">Смещение в байтах к первому байту в вышеуказанном буфере для нового вида для ссылки.Если не указано,вид буфера начинается с первого байта.</target>
        </trans-unit>
        <trans-unit id="990634359cf929d7e408f15e01f059bd9cfc6c4b" translate="yes" xml:space="preserve">
          <source>The old value at the given position (&lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;[&lt;var&gt;index&lt;/var&gt;]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308b7335f68f8120ce5c15ef7982db9e3f6acfef" translate="yes" xml:space="preserve">
          <source>The old value at the given position (&lt;code&gt;typedArray[index]&lt;/code&gt;).</source>
          <target state="translated">Старое значение в данной позиции ( &lt;code&gt;typedArray[index]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9e12822ef7cdf01510ae10f7497711deccf80d66" translate="yes" xml:space="preserve">
          <source>The only known browser to have actually taken advantage of this is old Internet Explorer (see &lt;a href=&quot;#IE-specific_notes&quot;&gt;below&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20be9c3270c4c09714a147b2b0ea506a7bbb42f8" translate="yes" xml:space="preserve">
          <source>The operand can't be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">Операнд не может быть &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="96b02bc5f7eb1057720563604824c413e6745a7a" translate="yes" xml:space="preserve">
          <source>The operands are converted to 32-bit integers and expressed by a series of bits (zeroes and ones). Numbers with more than 32 bits get their most significant bits discarded. For example, the following integer with more than 32 bits will be converted to a 32 bit integer:</source>
          <target state="translated">Операнд конвертируется в 32-битные целые числа и выражается серией битов (нулями и единицами).Числа с более чем 32 битами отбрасываются.Например,следующее целое число с более чем 32 битами будет преобразовано в 32-битное целое число:</target>
        </trans-unit>
        <trans-unit id="b571ea0bd93ed87a048ad53bd2f13df6bafe9a84" translate="yes" xml:space="preserve">
          <source>The operands of all bitwise operators are converted to signed 32-bit integers in two's complement format. Two's complement format means that a number's negative counterpart (e.g. 5 vs. -5) is all the number's bits inverted (bitwise NOT of the number, a.k.a. ones' complement of the number) plus one. For example, the following encodes the integer 314:</source>
          <target state="translated">Операндов всех битовых операторов преобразуется в подписанные 32-битные целые числа в формате двойного дополнения.Формат дополнения двоек означает,что отрицательный контрагент числа (например,5 против -5)-это все биты числа,инвертированные (битовое NOT числа,т.е.единичное дополнение числа)плюс один.Например,следующее кодирует целое число 314:</target>
        </trans-unit>
        <trans-unit id="060ac04672669b149249e9a458e1937a5a40653e" translate="yes" xml:space="preserve">
          <source>The operator is applied to each pair of bits, and the result is constructed bitwise.</source>
          <target state="translated">Оператор применяется к каждой паре битов,а результат строится битовым методом.</target>
        </trans-unit>
        <trans-unit id="8f6e8a41cab4646ab618bfef474696b573508951" translate="yes" xml:space="preserve">
          <source>The opposite behavior, where you want multiple statements, but JavaScript only allows a single one, is possible using a&lt;a href=&quot;block&quot;&gt; block statement&lt;/a&gt;, which combines several statements into a single one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f48e82409ce7c4dbd4710cffc99b7762b60d2a" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; statement associated with each &lt;code&gt;case&lt;/code&gt; label ensures that the program breaks out of &lt;code&gt;switch&lt;/code&gt; once the matched statement is executed and continues execution at the statement following &lt;code&gt;switch&lt;/code&gt;. If &lt;code&gt;break&lt;/code&gt; is omitted, the program continues execution at the next statement in the &lt;code&gt;switch&lt;/code&gt; statement. The &lt;code&gt;&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; statement is not required if a &lt;code&gt;&lt;a href=&quot;return&quot;&gt;return&lt;/a&gt;&lt;/code&gt; statement precedes it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113ef359e2fa153524143a2d07b6ac1a2e318560" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; statement associated with each case label ensures that the program breaks out of switch once the matched statement is executed and continues execution at the statement following switch. If &lt;code&gt;break&lt;/code&gt; is omitted, the program continues execution at the next statement in the &lt;code&gt;switch&lt;/code&gt; statement.</source>
          <target state="translated">Необязательный оператор &lt;code&gt;&lt;a href=&quot;break&quot;&gt;break&lt;/a&gt;&lt;/code&gt; , связанный с каждой меткой case, гарантирует, что программа выйдет из switch после выполнения согласованного оператора и продолжит выполнение с оператора, следующего за switch. Если &lt;code&gt;break&lt;/code&gt; опущен, программа продолжит выполнение со следующего оператора в операторе &lt;code&gt;switch&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="10ee8646e1976846bd327ccf1cc7b18dbb1f227f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;radix&lt;/code&gt; parameter of the &lt;a href=&quot;../global_objects/number/tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt; method was specified. Its value must be an integer (a number) between 2 and 36, specifying the base of the number system to be used for representing numeric values. For example, the decimal (base 10) number 169 is represented in hexadecimal (base 16) as A9.</source>
          <target state="translated">Был указан необязательный параметр &lt;code&gt;radix&lt;/code&gt; метода &lt;a href=&quot;../global_objects/number/tostring&quot;&gt; &lt;code&gt;Number.prototype.toString()&lt;/code&gt; &lt;/a&gt; . Его значение должно быть целым числом (числом) от 2 до 36, определяющим основу системы счисления, которая будет использоваться для представления числовых значений. Например, десятичное (основание 10) число 169 представлено в шестнадцатеричном (основание 16) как A9.</target>
        </trans-unit>
        <trans-unit id="62403c1dd03a2f93d232454a21ad7bf65895241e" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;radix&lt;/code&gt; parameter of the &lt;a href=&quot;../global_objects/number/tostring&quot;&gt;&lt;code&gt;Number.prototype.toString()&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../global_objects/bigint/tostring&quot;&gt;&lt;code&gt;BigInt.prototype.toString()&lt;/code&gt;&lt;/a&gt; method was specified. Its value must be an integer (a number) between 2 and 36, specifying the base of the number system to be used for representing numeric values. For example, the decimal (base 10) number 169 is represented in hexadecimal (base 16) as A9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c794f0ddf71b526f21629bc4a19c9dd7d1ba5b" translate="yes" xml:space="preserve">
          <source>The order of the array returned by &lt;code&gt;&lt;strong&gt;Object.entries()&lt;/strong&gt;&lt;/code&gt; does not depend on how an object is defined. If there is a need for certain ordering, then the array should be sorted first, like &lt;code&gt;Object.entries(obj).sort((a, b) =&amp;gt;&amp;nbsp;b[0].localeCompare(a[0]));&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b518001b2730bfd79b73a1ddfbb57de3a0b1024" translate="yes" xml:space="preserve">
          <source>The order was first defined for own properties only in ECMAScript 2015; ECMAScript 2020 defines order for inherited properties as well. See the &lt;a href=&quot;https://tc39.es/ecma262/#sec-ordinaryownpropertykeys&quot;&gt;OrdinaryOwnPropertyKeys&lt;/a&gt; and &lt;a href=&quot;https://tc39.es/ecma262/#sec-enumerate-object-properties&quot;&gt;EnumerateObjectProperties&lt;/a&gt; abstract specification operations. But note that no single mechanism iterates &lt;strong&gt;all&lt;/strong&gt; of an object's properties; the various mechanisms each include different subsets of properties. (&lt;a href=&quot;../statements/for...in&quot;&gt;&lt;code&gt;for-in&lt;/code&gt;&lt;/a&gt; includes only enumerable string-keyed properties; &lt;a href=&quot;object/keys&quot;&gt;&lt;code&gt;Object.keys&lt;/code&gt;&lt;/a&gt; includes only own, enumerable, string-keyed properties; &lt;a href=&quot;object/getownpropertynames&quot;&gt;&lt;code&gt;Object.getOwnPropertyNames&lt;/code&gt;&lt;/a&gt; includes own, string-keyed properties even if non-enumerable; &lt;a href=&quot;object/getownpropertysymbols&quot;&gt;&lt;code&gt;Object.getOwnPropertySymbols&lt;/code&gt;&lt;/a&gt; does the same for just &lt;code&gt;Symbol&lt;/code&gt;-keyed properties, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4e9e081a207a4bdff3b4ffadaca854fa879743" translate="yes" xml:space="preserve">
          <source>The original string against which the regular expression was matched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0294f36832fe89b2a01b7dac64f472413e428499" translate="yes" xml:space="preserve">
          <source>The original string is left unchanged.</source>
          <target state="translated">Оригинальная строка оставлена без изменений.</target>
        </trans-unit>
        <trans-unit id="e29382ccff54f72abbe49d022f7e11e7cb7a8b53" translate="yes" xml:space="preserve">
          <source>The original string that was matched against.</source>
          <target state="translated">Оригинальная струна,которая была сопоставлена.</target>
        </trans-unit>
        <trans-unit id="8d1a2dec47949be42039563b4b3cd254fdc3f118" translate="yes" xml:space="preserve">
          <source>The other Array methods: &lt;a href=&quot;every&quot;&gt;&lt;code&gt;every()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;some&quot;&gt;&lt;code&gt;some()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;find&quot;&gt;&lt;code&gt;find()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;findindex&quot;&gt;&lt;code&gt;findIndex()&lt;/code&gt;&lt;/a&gt; test the array elements with a predicate returning a truthy value to determine if further iteration is required.</source>
          <target state="translated">Другие методы Array: &lt;a href=&quot;every&quot;&gt; &lt;code&gt;every()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;some&quot;&gt; &lt;code&gt;some()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;find&quot;&gt; &lt;code&gt;find()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;findindex&quot;&gt; &lt;code&gt;findIndex()&lt;/code&gt; &lt;/a&gt; проверяют элементы массива с помощью предиката, возвращающего истинное значение, чтобы определить, требуется ли дальнейшая итерация.</target>
        </trans-unit>
        <trans-unit id="d3ab60f2cb9fec89dd219153a011787a68f370c6" translate="yes" xml:space="preserve">
          <source>The other way (introduced in ECMAScript 5) is to treat the string as an array-like object, where individual characters correspond to a numerical index:</source>
          <target state="translated">Другой способ (введенный в ECMAScript 5)-трактовать строку как массивный объект,где отдельные символы соответствуют числовому индексу:</target>
        </trans-unit>
        <trans-unit id="acc65d6b37eb2041f2cf152ca2fcc2f20f799ef7" translate="yes" xml:space="preserve">
          <source>The outer &quot;oops&quot; is not thrown because of the return in the &lt;code&gt;finally&lt;/code&gt;-block. The same would apply to any value returned from the &lt;code&gt;catch&lt;/code&gt;-block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896d0f785a9072c81f598851d416121b0a56b3a9" translate="yes" xml:space="preserve">
          <source>The outer &quot;oops&quot; is not thrown because of the return in the finally block. The same would apply to any value returned from the catch block.</source>
          <target state="translated">Внешние &quot;упсы&quot; не выбрасываются из-за возврата в конечном блоке.То же самое относится и к любому значению,возвращаемому из блока улавливания.</target>
        </trans-unit>
        <trans-unit id="6e7b10eb90956f8dbf9c29aacef62bdf7db86dbc" translate="yes" xml:space="preserve">
          <source>The output from this example:</source>
          <target state="translated">Вывод из этого примера:</target>
        </trans-unit>
        <trans-unit id="931ac897fa8f6aaf44b01b73d678c842b993097c" translate="yes" xml:space="preserve">
          <source>The output looks like this:</source>
          <target state="translated">Выход выглядит так:</target>
        </trans-unit>
        <trans-unit id="2339242fa4ce5b6def53d6c7ee27c2327adbc6cc" translate="yes" xml:space="preserve">
          <source>The parameters of a function call are the function's &lt;em&gt;arguments&lt;/em&gt;. Arguments are passed to functions &lt;em&gt;by value&lt;/em&gt;. If the function changes the value of an argument, this change is not reflected globally or in the calling function. However, object references are values, too, and they are special: if the function changes the referred object's properties, that change is visible outside the function, as shown in the following example:</source>
          <target state="translated">Параметры вызова функции - это &lt;em&gt;аргументы&lt;/em&gt; функции . Аргументы передаются функциям &lt;em&gt;по значению&lt;/em&gt; . Если функция изменяет значение аргумента, это изменение не отражается глобально или в вызывающей функции. Однако ссылки на объекты также являются значениями, и они особенные: если функция изменяет свойства указанного объекта, это изменение видно за пределами функции, как показано в следующем примере:</target>
        </trans-unit>
        <trans-unit id="cabcfd176963b76ec5c3f3f48807605c14a596e9" translate="yes" xml:space="preserve">
          <source>The parentheses are optional.</source>
          <target state="translated">Круглые скобки необязательны.</target>
        </trans-unit>
        <trans-unit id="dc6662eb6d4bd4bded2aa22975e313d411d51b8f" translate="yes" xml:space="preserve">
          <source>The parenthesized substring matches, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b38985b08a6ce87a4282ed323af9b21e221d7528" translate="yes" xml:space="preserve">
          <source>The parenthesized substring matches, if any. The number of possible parenthesized substrings is unlimited.</source>
          <target state="translated">Подстрока в скобках совпадает,если она есть.Количество возможных подстроек в скобках не ограничено.</target>
        </trans-unit>
        <trans-unit id="7fb79f7ce04432fed772112fc53c90019bf87a4e" translate="yes" xml:space="preserve">
          <source>The partial implementation creates bound functions whose &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property does not agree with that mandated by ECMA-262: it creates functions with &lt;code&gt;length&lt;/code&gt; of &lt;code&gt;0&lt;/code&gt;. A full implementation&amp;mdash;depending on the length of the target function and the number of pre-specified arguments&amp;mdash;may return a non-zero length.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63045c992f44f05cb5b836d1f1f62a5115521036" translate="yes" xml:space="preserve">
          <source>The partial implementation creates bound functions whose &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property does not agree with that mandated by ECMA-262: it creates functions with length 0, while a full implementation, depending on the length of the target function and the number of pre-specified arguments, may return a non-zero length.</source>
          <target state="translated">Частичная реализация создает связанные функции, свойство &lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt; которых не соответствует требованиям ECMA-262: она создает функции с длиной 0, в то время как полная реализация, в зависимости от длины целевой функции и количества заранее заданных аргументов, может вернуть ненулевую длину.</target>
        </trans-unit>
        <trans-unit id="de463d520d50677e75915de39c6ece760b3da4d7" translate="yes" xml:space="preserve">
          <source>The partial implementation creates bound functions whose &lt;a href=&quot;name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; property is not derived from the original function name. According to ECMA-262, name of the returned bound function should be &quot;bound &quot; + name of target function (note the space character).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b678326d62e0d4b1b5d26101a15fd5a24c132e8b" translate="yes" xml:space="preserve">
          <source>The partial implementation creates functions that do not have immutable &quot;poison pill&quot; &lt;a href=&quot;caller&quot;&gt;&lt;code&gt;caller&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;arguments&lt;/code&gt; properties that throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; upon get, set, or deletion. (This could be added if the implementation supports &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;, or partially implemented [without throw-on-delete behavior] if the implementation supports the &lt;a href=&quot;../object/__definegetter__&quot;&gt;&lt;code&gt;__defineGetter__&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../object/__definesetter__&quot;&gt;&lt;code&gt;__defineSetter__&lt;/code&gt;&lt;/a&gt; extensions.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd7cb6d3bc51077269d0d002286cc156def74430" translate="yes" xml:space="preserve">
          <source>The partial implementation creates functions that do not have immutable &quot;poison pill&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt;&lt;code&gt;caller&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;arguments&lt;/code&gt; properties that throw a &lt;a href=&quot;../typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; upon get, set, or deletion. (This could be added if the implementation supports &lt;a href=&quot;../object/defineproperty&quot;&gt;&lt;code&gt;Object.defineProperty&lt;/code&gt;&lt;/a&gt;, or partially implemented [without throw-on-delete behavior] if the implementation supports the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineGetter&quot;&gt;&lt;code&gt;__defineGetter__&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineSetter&quot;&gt;&lt;code&gt;__defineSetter__&lt;/code&gt;&lt;/a&gt; extensions.)</source>
          <target state="translated">Частичная реализация создает функции, которые не имеют неизменяемых свойств &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/caller&quot;&gt; &lt;code&gt;caller&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;arguments&lt;/code&gt; &amp;laquo;ядовитой таблетки&amp;raquo;, которые &lt;a href=&quot;../typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; при получении, установке или удалении. (Это может быть добавлено, если реализация поддерживает &lt;a href=&quot;../object/defineproperty&quot;&gt; &lt;code&gt;Object.defineProperty&lt;/code&gt; &lt;/a&gt; , или частично реализовано [без поведения выброса при удалении], если реализация поддерживает расширения &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineGetter&quot;&gt; &lt;code&gt;__defineGetter__&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineSetter&quot;&gt; &lt;code&gt;__defineSetter__&lt;/code&gt; &lt;/a&gt; .)</target>
        </trans-unit>
        <trans-unit id="cf75782bc788869bc385652ce4b520281786d4f4" translate="yes" xml:space="preserve">
          <source>The partial implementation creates functions that have a &lt;code&gt;prototype&lt;/code&gt; property. (Proper bound functions have none.)</source>
          <target state="translated">Частичная реализация создает функции, у которых есть свойство &lt;code&gt;prototype&lt;/code&gt; . (Правильные связанные функции не имеют.)</target>
        </trans-unit>
        <trans-unit id="d4cd0768060ee383d9cad3657a2bbf4fc9930391" translate="yes" xml:space="preserve">
          <source>The partial implementation relies on &lt;a href=&quot;../array/slice&quot;&gt;&lt;code&gt;Array.prototype.slice()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../array/concat&quot;&gt;&lt;code&gt;Array.prototype.concat()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;call&quot;&gt;&lt;code&gt;Function.prototype.call()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;apply&quot;&gt;&lt;code&gt;Function.prototype.apply()&lt;/code&gt;&lt;/a&gt;, built-in methods to have their original values.</source>
          <target state="translated">Частичная реализация полагается на &lt;a href=&quot;../array/slice&quot;&gt; &lt;code&gt;Array.prototype.slice()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../array/concat&quot;&gt; &lt;code&gt;Array.prototype.concat()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;call&quot;&gt; &lt;code&gt;Function.prototype.call()&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;apply&quot;&gt; &lt;code&gt;Function.prototype.apply()&lt;/code&gt; &lt;/a&gt; , которые имеют свои исходные значения.</target>
        </trans-unit>
        <trans-unit id="ddcf86d99e1e03f525ad09eb61c1bdf398ebdae4" translate="yes" xml:space="preserve">
          <source>The pattern describing where each split should occur. The &lt;code&gt;&lt;var&gt;separator&lt;/var&gt;&lt;/code&gt; can be a simple string or it can be a &lt;a href=&quot;../regexp&quot;&gt;regular expression&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84b6508d245cc64ec41448c4eb28d2c3b77ce38" translate="yes" xml:space="preserve">
          <source>The percent sign string (&quot;%&quot;).</source>
          <target state="translated">Строка со знаком процента (&quot;%&quot;).</target>
        </trans-unit>
        <trans-unit id="3b1e9b323d5a174f480d265ea17e005dd9696d22" translate="yes" xml:space="preserve">
          <source>The pipeline operator can improve readability when chaining several functions.</source>
          <target state="translated">Оператор трубопровода может улучшить читабельность при объединении нескольких функций.</target>
        </trans-unit>
        <trans-unit id="690fa9c35f9e446db788f93ccd50e03765cc5ab6" translate="yes" xml:space="preserve">
          <source>The plus sign string (&quot;+&quot;).</source>
          <target state="translated">Строка со знаком плюс (&quot;+&quot;).</target>
        </trans-unit>
        <trans-unit id="9335d6fa676fe2a40aeb23ba36ee60d41539ec6e" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; to add a &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1febefc0faa15c441ee073a3346b33bfae1c59cf" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; to compute the bitwise AND.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55397e5160cdea6cb262abf8b11f07fb0f8764cb" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; to compute the bitwise OR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033d51a09c29480fc1c41025d290b265674bacdb" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; to exchange a &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="314458fa9a0382f6433fc8ad3d19e0be1c9b4277" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; to store a &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6822225b1ff37900d28547d15db73dc99cc94b24" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; to subtract a &lt;code&gt;&lt;var&gt;value&lt;/var&gt;&lt;/code&gt; from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef29dcb242c4d4bca8ebec7d15d9a642a36d19e3" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;&lt;var&gt;typedArray&lt;/var&gt;&lt;/code&gt; to wait on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4660a15b25977a5de26cd9ebb8239f443109d6c4" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to add a &lt;code&gt;value&lt;/code&gt; to.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; , в которую нужно добавить &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="96d01bdb6e19130138f77c4387a2278063c835b0" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to compute the bitwise AND.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; для вычисления побитового AND.</target>
        </trans-unit>
        <trans-unit id="b0524650aadd24d8a057e0ef060c22beb8c95d51" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to compute the bitwise OR.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; для вычисления побитового ИЛИ.</target>
        </trans-unit>
        <trans-unit id="d4e742e0a8ee8ebf6e737e009efd3edb40e5951b" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to compute the bitwise XOR.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; для вычисления побитового XOR.</target>
        </trans-unit>
        <trans-unit id="477e94204b5068fde7b4dbd31eb1d3b528e67afd" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to exchange a &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; для обмена &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57c831e4bbc8b3d6acb703a1828680520d216e29" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to load from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb7e668e34a0e82e96759682ddeff9cb7853f4a" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to load from&lt;code&gt;.&lt;/code&gt;</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; , из которой выполняется загрузка &lt;code&gt;.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="07dda9b8d8370464647ce6e0b587c3847a50af4e" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to store a &lt;code&gt;value&lt;/code&gt; in.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; , в которой будет храниться &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b013ff61635bf78d7e3b3bafbb4d86b6e5e322da" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to subtract a &lt;code&gt;value&lt;/code&gt; from.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; ,из которой нужно вычесть &lt;code&gt;value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ff7e870bc99011014085c91489ad6c1fb6c31059" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to wait on.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; для ожидания.</target>
        </trans-unit>
        <trans-unit id="995f0ff73614acdbbbf63312b62aacdf3a9e0b44" translate="yes" xml:space="preserve">
          <source>The position in the &lt;code&gt;typedArray&lt;/code&gt; to wake up on.</source>
          <target state="translated">Позиция в &lt;code&gt;typedArray&lt;/code&gt; для пробуждения.</target>
        </trans-unit>
        <trans-unit id="88a544020eb55d47bb7e940c2c3f537616d7d683" translate="yes" xml:space="preserve">
          <source>The position in this array at which to begin searching for &lt;code&gt;&lt;var&gt;valueToFind&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6403921afb4b40874ce76103550d34ba2c07d906" translate="yes" xml:space="preserve">
          <source>The position in this array at which to begin searching for &lt;code&gt;searchElement&lt;/code&gt;. A negative value searches from the index of &lt;code&gt;array.length -&amp;nbsp;fromIndex&lt;/code&gt; by asc. Defaults to 0.</source>
          <target state="translated">Позиция в этом массиве, с которой следует начать поиск &lt;code&gt;searchElement&lt;/code&gt; . Отрицательное значение &lt;code&gt;array.length -&amp;nbsp;fromIndex&lt;/code&gt; из индекса array.length - fromIndex по asc. По умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="e7553803ca05289183d49ad22b8cef6ebb0d3fc8" translate="yes" xml:space="preserve">
          <source>The position in this string at which to begin searching for &lt;code&gt;&lt;var&gt;searchString&lt;/var&gt;&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef08508c5d7b9c72be1db76665ed617dcc84e13" translate="yes" xml:space="preserve">
          <source>The position in this string at which to begin searching for &lt;code&gt;searchString&lt;/code&gt;; defaults to 0.</source>
          <target state="translated">Позиция в этой строке, с которой следует начать поиск &lt;code&gt;searchString&lt;/code&gt; ; по умолчанию 0.</target>
        </trans-unit>
        <trans-unit id="e6b8ef69415540a581e473b22805e246067b1c6c" translate="yes" xml:space="preserve">
          <source>The position within the string at which to begin searching for &lt;code&gt;searchString&lt;/code&gt;. (Defaults to &lt;code&gt;0&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426363a10450adf1a90aceaf29c36ce5df6a292f" translate="yes" xml:space="preserve">
          <source>The position within the string at which to begin searching for &lt;code&gt;searchString&lt;/code&gt;. (defaults to 0).</source>
          <target state="translated">Позиция в строке, с которой следует начать поиск &lt;code&gt;searchString&lt;/code&gt; . (по умолчанию 0).</target>
        </trans-unit>
        <trans-unit id="6ca04baad82996766816c816df6628462f5aeff5" translate="yes" xml:space="preserve">
          <source>The preferred way to get an &lt;code&gt;Instance&lt;/code&gt; is asynchronously, for example using the &lt;a href=&quot;instantiatestreaming&quot;&gt;&lt;code&gt;WebAssembly.instantiateStreaming()&lt;/code&gt;&lt;/a&gt; function like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157affbbaf96277ae41da5f1304c385c9c28dac7" translate="yes" xml:space="preserve">
          <source>The previous length of the table.</source>
          <target state="translated">Предыдущая длина таблицы.</target>
        </trans-unit>
        <trans-unit id="8527ce61a473bc18ff2e027d31cc16cdaf53758c" translate="yes" xml:space="preserve">
          <source>The previous size of the memory, in units of WebAssembly pages.</source>
          <target state="translated">Предыдущий объем памяти,в единицах страниц WebAssembly.</target>
        </trans-unit>
        <trans-unit id="ed5e99f916bc6b6b7a0cf62aad9e922612e0c7e9" translate="yes" xml:space="preserve">
          <source>The primary API for compiling and instantiating WebAssembly code, returning both a &lt;code&gt;Module&lt;/code&gt; and its first &lt;code&gt;Instance&lt;/code&gt;.</source>
          <target state="translated">Основной API для компиляции и создания экземпляра кода WebAssembly, возвращающего как &lt;code&gt;Module&lt;/code&gt; и его первый &lt;code&gt;Instance&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45a3de942302f24c62de792544cb89da5128b30a" translate="yes" xml:space="preserve">
          <source>The primary overload takes the WebAssembly binary code, in the form of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt;, and performs both compilation and instantiation in one step. The returned &lt;code&gt;Promise&lt;/code&gt; resolves to both a compiled &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; and its first &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Основная перегрузка принимает двоичный код WebAssembly в форме &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;типизированного массива&lt;/a&gt; или &lt;a href=&quot;../arraybuffer&quot;&gt;ArrayBuffer&lt;/a&gt; и выполняет как компиляцию, так и создание экземпляра за один шаг. Возвращенный &lt;code&gt;Promise&lt;/code&gt; ПОСТАНОВЛЯЕТ как скомпилированный &lt;a href=&quot;module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt; и его первый &lt;a href=&quot;instance&quot;&gt; &lt;code&gt;WebAssembly.Instance&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="acc36b826a68dc11884efd2547b884322e4aaebd" translate="yes" xml:space="preserve">
          <source>The primary overload takes the WebAssembly binary code, in the form of a &lt;a href=&quot;https://wiki.developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed array&lt;/a&gt; or &lt;a href=&quot;../arraybuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;, and performs both compilation and instantiation in one step. The returned &lt;code&gt;Promise&lt;/code&gt; resolves to both a compiled &lt;a href=&quot;module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; and its first &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;WebAssembly.Instance&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43f5aa062dbad7234240cc781877ce058356cf4b" translate="yes" xml:space="preserve">
          <source>The primary uses for the &lt;code&gt;WebAssembly&lt;/code&gt; object are:</source>
          <target state="translated">Основное использование объекта &lt;code&gt;WebAssembly&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c071e03baa30ba69b94e584c81faf499085c11eb" translate="yes" xml:space="preserve">
          <source>The primary uses of the &lt;code&gt;Number&lt;/code&gt; object are:</source>
          <target state="translated">Основное использование объекта &lt;code&gt;Number&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b12b405b95a54ff8996417d2b8155eb32e3470ba" translate="yes" xml:space="preserve">
          <source>The primitive value of the given &lt;a href=&quot;../boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; object</source>
          <target state="translated">Примитивное значение данного &lt;a href=&quot;../boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; объекта</target>
        </trans-unit>
        <trans-unit id="6685f8d8e52bdb92a0a740870373b8493cde617a" translate="yes" xml:space="preserve">
          <source>The primitive value of the given &lt;a href=&quot;../date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object. Depending on the argument, the method can return either a string or a number.</source>
          <target state="translated">Примитивное значение данного объекта &lt;a href=&quot;../date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; . В зависимости от аргумента метод может возвращать строку или число.</target>
        </trans-unit>
        <trans-unit id="f976ff961378d26dd626ab2f478b25a918e0b971" translate="yes" xml:space="preserve">
          <source>The primitive value of the specified &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">Примитивное значение указанного объекта &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0592a04c61263d7e2102a44a37e50daeaba427c0" translate="yes" xml:space="preserve">
          <source>The primitive value of the specified object.</source>
          <target state="translated">Примитивное значение указанного объекта.</target>
        </trans-unit>
        <trans-unit id="ab5c23183c9650bc4b565f250a82d282d73b0d7b" translate="yes" xml:space="preserve">
          <source>The promises of a chain are nested like Russian dolls, but get popped like the top of a stack. The first promise in the chain is most deeply nested and is the first to pop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c80fea29c8aeb379b024ca147671669809080c" translate="yes" xml:space="preserve">
          <source>The properties &lt;code&gt;Atomics.OK&lt;/code&gt;, &lt;code&gt;Atomics.TIMEDOUT&lt;/code&gt;, &lt;code&gt;Atomics.NOTEQUAL&lt;/code&gt; have been removed. The &lt;a href=&quot;atomics/wait&quot;&gt;&lt;code&gt;Atomics.wait()&lt;/code&gt;&lt;/a&gt; method now returns the strings &quot;ok&quot;, &quot;timed-out&quot; and &quot;not-equal&quot; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1260835&quot;&gt;bug 1260835&lt;/a&gt;).</source>
          <target state="translated">Свойства &lt;code&gt;Atomics.OK&lt;/code&gt; , &lt;code&gt;Atomics.TIMEDOUT&lt;/code&gt; , &lt;code&gt;Atomics.NOTEQUAL&lt;/code&gt; были удалены. Метод &lt;a href=&quot;atomics/wait&quot;&gt; &lt;code&gt;Atomics.wait()&lt;/code&gt; &lt;/a&gt; теперь возвращает строки &amp;laquo;ok&amp;raquo;, &amp;laquo;timed-out&amp;raquo; и &amp;laquo;not-equal&amp;raquo; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1260835&quot;&gt;ошибка 1260835&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b4a4aa554ed7ee5e4e9ae23da9c48082b284e124" translate="yes" xml:space="preserve">
          <source>The properties and elements returned from this match are as follows:</source>
          <target state="translated">Свойства и элементы,возвращаемые из этого совпадения,следующие:</target>
        </trans-unit>
        <trans-unit id="0f382554c6e88b3c4b24cf6f423547c5aaf1a8d6" translate="yes" xml:space="preserve">
          <source>The properties are overwritten by other objects that have the same properties later in the parameters order.</source>
          <target state="translated">Свойства перезаписываются другими объектами,имеющими те же свойства,позже в порядке параметров.</target>
        </trans-unit>
        <trans-unit id="1459c05fc24e562823b13249afeb3dbdfeb35fe2" translate="yes" xml:space="preserve">
          <source>The property access was operated on &lt;a href=&quot;../global_objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../global_objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; value.</source>
          <target state="translated">Доступ к свойству производился с &lt;a href=&quot;../global_objects/undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../global_objects/null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; значением.</target>
        </trans-unit>
        <trans-unit id="7b47c0743d41c5177eb463aca055f534891aabfc" translate="yes" xml:space="preserve">
          <source>The property created on the global object for global variables, is set to be non-configurable because the identifier is to be treated as a variable, rather than a straightforward property of the global object. JavaScript has automatic memory management, and it would make no sense to be able to use the &lt;code&gt;delete&lt;/code&gt; operator on a global variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3c28a7c5a180051ef4c56cb921e6fba3489630" translate="yes" xml:space="preserve">
          <source>The property to delete.</source>
          <target state="translated">Свойство удалять.</target>
        </trans-unit>
        <trans-unit id="33a8b1d5374037f282ae6e0d114d0dab15dceac1" translate="yes" xml:space="preserve">
          <source>The prototype chain is looked up when the object is deconstructed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd81e9c0d95f3f4bc8a7a0de02d34b4f9527196" translate="yes" xml:space="preserve">
          <source>The prototype chain remains untouched. However, the &lt;a href=&quot;proto&quot;&gt;&lt;code&gt;__proto__&lt;/code&gt;&lt;/a&gt; property is sealed as well.</source>
          <target state="translated">Цепочка прототипов остается нетронутой. Однако свойство &lt;a href=&quot;proto&quot;&gt; &lt;code&gt;__proto__&lt;/code&gt; также&lt;/a&gt; запечатано.</target>
        </trans-unit>
        <trans-unit id="cb058d709a21f233014cf422de3c2c3adb08f766" translate="yes" xml:space="preserve">
          <source>The prototype of the given object. If there are no inherited properties, &lt;a href=&quot;../null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">Прототип данного объекта. Если унаследованных свойств нет, возвращается &lt;a href=&quot;../null&quot;&gt; &lt;code&gt;null&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86ca918f254ada7bddf176b0d1b0147cabc47321" translate="yes" xml:space="preserve">
          <source>The proxy's handler object is a placeholder object which contains traps for &lt;a href=&quot;../proxy&quot;&gt;proxies&lt;/a&gt;.</source>
          <target state="translated">Объект обработчика прокси - это объект-заполнитель, который содержит ловушки для &lt;a href=&quot;../proxy&quot;&gt;прокси&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7735fa1a6f06379c02f3817d1e632777161fe756" translate="yes" xml:space="preserve">
          <source>The purpose of &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; functions is to simplify the behavior of using promises synchronously and to perform some behavior on a group of &lt;code&gt;Promises&lt;/code&gt;. Just as &lt;code&gt;Promises&lt;/code&gt; are similar to structured callbacks, &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; is similar to combining generators and promises.</source>
          <target state="translated">Назначение функций &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; - упростить поведение при использовании обещаний синхронно и выполнить некоторое поведение для группы &lt;code&gt;Promises&lt;/code&gt; . Так же, как &lt;code&gt;Promises&lt;/code&gt; похожи на структурированные обратные вызовы, &lt;code&gt;async&lt;/code&gt; / &lt;code&gt;await&lt;/code&gt; похож на объединение генераторов и обещаний.</target>
        </trans-unit>
        <trans-unit id="f08dd48bdc370a62130eb28c2133fa17b9a9bc6a" translate="yes" xml:space="preserve">
          <source>The purpose of &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; is to simplify the syntax necessary to consume promise-based APIs. The behavior of &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; is similar to combining &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Iterators_and_Generators&quot;&gt;generators&lt;/a&gt; and promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f0f958d22886b36350f3a67640c310f801d8ad" translate="yes" xml:space="preserve">
          <source>The radix is coerced to a &lt;code&gt;Number&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24810b61cf35bc6e25d4d331237efdb51d694a76" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;every&lt;/code&gt; is set before the first invocation of &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. Therefore, &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; will not run on elements that are appended to the array after the call to &lt;code&gt;every&lt;/code&gt; begins. If existing elements of the array are changed, their value as passed to &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; will be the value at the time &lt;code&gt;every&lt;/code&gt; visits them. Elements that are deleted are not visited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da674bc4b1b8a7ab6adf4f36282bdc1e7f32c53" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;every&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;every&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the array are changed, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;every&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;every&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к массиву после вызова &lt;code&gt;every&lt;/code&gt; начала, не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующие элементы массива изменены, их значение, переданное в &lt;code&gt;callback&lt;/code&gt; будет значением на момент &lt;code&gt;every&lt;/code&gt; посещения их; элементы, которые удаляются, не посещаются.</target>
        </trans-unit>
        <trans-unit id="e715f1cc8e7a27fa8fca7e6a797ae6ff6511326d" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;filter()&lt;/code&gt; is set before the first invocation of &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. Elements which are appended to the array (from &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;) after the call to &lt;code&gt;filter()&lt;/code&gt; begins will not be visited by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If existing elements of the array are deleted in the same way they will not be visited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffc43fe022a56b04aa00aeb62eefc26a7fbdec25" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;filter()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;filter()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the array are changed, or deleted, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;filter()&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;filter()&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к массиву после начала вызова &lt;code&gt;filter()&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующие элементы массива изменены или удалены, их значение, переданное в &lt;code&gt;callback&lt;/code&gt; будет значением на момент их посещения &lt;code&gt;filter()&lt;/code&gt; ; элементы, которые удаляются, не посещаются.</target>
        </trans-unit>
        <trans-unit id="437ffa22e14610025c7fe48f3c107072231bf100" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;filter()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the typed array after the call to &lt;code&gt;filter()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the typed array are changed, or deleted, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;filter()&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;filter()&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к типизированному массиву после начала вызова &lt;code&gt;filter()&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующие элементы типизированного массива изменены или удалены, их значение, переданное в &lt;code&gt;callback&lt;/code&gt; будет значением во время их посещения &lt;code&gt;filter()&lt;/code&gt; ; элементы, которые удаляются, не посещаются.</target>
        </trans-unit>
        <trans-unit id="fbef2e2b7aaf6872600edc7c6e1e55c2d7451812" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;find&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the array after the call to &lt;code&gt;find&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the visiting &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;find&lt;/code&gt; visits that element's index; elements that are deleted are still visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых функцией &lt;code&gt;find&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к массиву после начала вызова &lt;code&gt;find&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующий, не посещенный элемент массива изменен &lt;code&gt;callback&lt;/code&gt; , его значение, переданное обратному &lt;code&gt;callback&lt;/code&gt; посещения, будет значением на момент посещения &lt;code&gt;find&lt;/code&gt; индекса этого элемента; элементы, которые были удалены, по-прежнему посещаются.</target>
        </trans-unit>
        <trans-unit id="f2b14ba27e1a10104c3d2a3d842c5ee832c8acab" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;find&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the typed array after the call to &lt;code&gt;find&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the typed array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the visiting &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;find&lt;/code&gt; visits that element's index; elements that are deleted are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых функцией &lt;code&gt;find&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к типизированному массиву после начала вызова &lt;code&gt;find&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующий, не посещенный элемент типизированного массива изменен &lt;code&gt;callback&lt;/code&gt; , его значение, переданное обратному &lt;code&gt;callback&lt;/code&gt; посещения, будет значением на момент посещения &lt;code&gt;find&lt;/code&gt; индекса этого элемента; элементы, которые удаляются, не посещаются.</target>
        </trans-unit>
        <trans-unit id="9c5b5fa6d1a05075a9ea097cb07399a26b15c0da" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;findIndex()&lt;/code&gt; is set before the first invocation of &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; will not process the elements appended to the array after the call to &lt;code&gt;findIndex()&lt;/code&gt; begins. If an existing, unvisited element of the array is changed by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;, its value passed to the &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; will be the value at the time &lt;code&gt;findIndex()&lt;/code&gt; visits the element's index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74827d61ac18463827bf5d41784e84ff1c29c61" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;findIndex&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements appended to the array after the call to &lt;code&gt;findIndex&lt;/code&gt; begins will not be processed by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;findIndex&lt;/code&gt; visits that element's index; elements that are &lt;a href=&quot;../../operators/delete&quot;&gt;deleted&lt;/a&gt; are still visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;findIndex&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, добавленные к массиву после начала вызова &lt;code&gt;findIndex&lt;/code&gt; , не будут обрабатываться &lt;code&gt;callback&lt;/code&gt; . Если существующий, не посещенный элемент массива изменен &lt;code&gt;callback&lt;/code&gt; , его значение, переданное &lt;code&gt;findIndex&lt;/code&gt; &lt;code&gt;callback&lt;/code&gt; будет значением в то время, когда findIndex посещает индекс этого элемента; элементы, которые были &lt;a href=&quot;../../operators/delete&quot;&gt;удалены&lt;/a&gt; , по-прежнему посещаются.</target>
        </trans-unit>
        <trans-unit id="ae3d4b2bb84a02d78f95eaf8d4998a1484900e2f" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;findIndex&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the typed array after the call to &lt;code&gt;findIndex&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the typed array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the visiting &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;findIndex&lt;/code&gt; visits that element's index; elements that are deleted are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;findIndex&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к типизированному массиву после начала вызова &lt;code&gt;findIndex&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующая, непосещенная элемент типизированного массива изменяется &lt;code&gt;callback&lt;/code&gt; , его значение , передаваемое посещающим &lt;code&gt;callback&lt;/code&gt; будет значением в то время, &lt;code&gt;findIndex&lt;/code&gt; посещение, индекс элемента; элементы, которые удаляются, не посещаются.</target>
        </trans-unit>
        <trans-unit id="49895da5e911ffebe6af9be50fa2605c3a725b73" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;forEach()&lt;/code&gt; is set before the first invocation of &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;forEach()&lt;/code&gt; begins will not be visited by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If existing elements of the array are changed or deleted, their value as passed to &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; will be the value at the time &lt;code&gt;forEach()&lt;/code&gt; visits them; elements that are deleted before being visited are not visited. If elements that are already visited are removed (e.g. using &lt;a href=&quot;shift&quot;&gt;&lt;code&gt;shift()&lt;/code&gt;&lt;/a&gt;) during the iteration, later elements will be skipped. (&lt;a href=&quot;foreach#Modifying_the_array_during_iteration&quot;&gt;See this example, below&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e67b5a5c412531a2f1bcee0d4174f89cbaee2f1" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;forEach()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the array after the call to &lt;code&gt;forEach()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If the values of existing elements of the array are changed, the value passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;forEach()&lt;/code&gt; visits them; elements that are deleted before being visited are not visited. If elements that are already visited are removed (e.g. using &lt;a href=&quot;shift&quot;&gt;&lt;code&gt;shift()&lt;/code&gt;&lt;/a&gt;) during the iteration, later elements will be skipped - see example below.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;forEach()&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к массиву после начала вызова &lt;code&gt;forEach()&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если значения существующих элементов массива изменяются, значение, переданное в &lt;code&gt;callback&lt;/code&gt; будет значением на момент их посещения &lt;code&gt;forEach()&lt;/code&gt; ; элементы, которые удаляются перед посещением, не посещаются. Если элементы, которые уже посещены, удаляются (например, с помощью &lt;a href=&quot;shift&quot;&gt; &lt;code&gt;shift()&lt;/code&gt; &lt;/a&gt; ) во время итерации, последующие элементы будут пропущены - см. Пример ниже.</target>
        </trans-unit>
        <trans-unit id="0c06a5847c75fadb80372b691d5e2713631aadce" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;forEach()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the typed array after the call to &lt;code&gt;forEach()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If the values of existing elements of the typed array are changed, the value passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;forEach()&lt;/code&gt; visits them; elements that are deleted before being visited are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;forEach()&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к типизированному массиву после начала вызова &lt;code&gt;forEach()&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если значения существующих элементов типизированного массива изменяются, значение, переданное в &lt;code&gt;callback&lt;/code&gt; будет значением на момент их посещения &lt;code&gt;forEach()&lt;/code&gt; ; элементы, которые удаляются перед посещением, не посещаются.</target>
        </trans-unit>
        <trans-unit id="8b98cdcddf3f8d17e5d789aea3af0c16449a3c29" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;map()&lt;/code&gt; is set before the first invocation of &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;map()&lt;/code&gt; begins will not be visited by &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt;. If existing elements of the typed array are changed, or deleted, their value as passed to &lt;code&gt;&lt;var&gt;mapFn&lt;/var&gt;&lt;/code&gt; will be the value at the time &lt;code&gt;map()&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df1d9751f2fa078148d85a295c3f44432c02f13" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;map&lt;/code&gt; is set before the first invocation of &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;map&lt;/code&gt; begins will not be visited by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If existing elements of the array are changed after the call to &lt;code&gt;map&lt;/code&gt;, their value will be the value at the time &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; visits them. Elements that are deleted after the call to &lt;code&gt;map&lt;/code&gt; begins and before being visited are not visited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e871371187bb129c37ca4223958103d8460a4eb" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;map&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;map&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the array are changed, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;map&lt;/code&gt; visits them. Elements that are deleted after the call to &lt;code&gt;map&lt;/code&gt; begins and before being visited are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;map&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к массиву после начала вызова &lt;code&gt;map&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующие элементы массива изменены, их значение, переданное в &lt;code&gt;callback&lt;/code&gt; будет значением на момент их посещения &lt;code&gt;map&lt;/code&gt; . Элементы, которые удаляются после начала вызова &lt;code&gt;map&lt;/code&gt; и до посещения, не посещаются.</target>
        </trans-unit>
        <trans-unit id="1ec15fb00691cba60bb1f8c04e40ee318d87d688" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;map&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements which are appended to the array after the call to &lt;code&gt;map&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If existing elements of the typed array are changed, or deleted, their value as passed to &lt;code&gt;callback&lt;/code&gt; will be the value at the time &lt;code&gt;map&lt;/code&gt; visits them; elements that are deleted are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;map&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к массиву после начала вызова &lt;code&gt;map&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующие элементы типизированного массива изменены или удалены, их значение, переданное в &lt;code&gt;callback&lt;/code&gt; будет значением на момент их посещения &lt;code&gt;map&lt;/code&gt; ; элементы, которые удаляются, не посещаются.</target>
        </trans-unit>
        <trans-unit id="a1d9561ef0be1264fad091a1f4ccd37e81b95153" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;some()&lt;/code&gt; is set before the first invocation of &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. Elements appended to the array after the call to &lt;code&gt;some()&lt;/code&gt; begins will not be visited by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;. If an existing, unvisited element of the array is changed by &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt;, its value passed to the visiting &lt;code&gt;&lt;var&gt;callback&lt;/var&gt;&lt;/code&gt; will be the value at the time that &lt;code&gt;some()&lt;/code&gt; visits that element's index. Elements that are deleted are not visited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17bb9c9e91a0f17fe42b0e4098979b25612b39c" translate="yes" xml:space="preserve">
          <source>The range of elements processed by &lt;code&gt;some()&lt;/code&gt; is set before the first invocation of &lt;code&gt;callback&lt;/code&gt;. Elements that are appended to the array after the call to &lt;code&gt;some()&lt;/code&gt; begins will not be visited by &lt;code&gt;callback&lt;/code&gt;. If an existing, unvisited element of the array is changed by &lt;code&gt;callback&lt;/code&gt;, its value passed to the visiting &lt;code&gt;callback&lt;/code&gt; will be the value at the time that &lt;code&gt;some()&lt;/code&gt; visits that element's index; elements that are deleted are not visited.</source>
          <target state="translated">Диапазон элементов, обрабатываемых &lt;code&gt;some()&lt;/code&gt; , устанавливается перед первым вызовом &lt;code&gt;callback&lt;/code&gt; . Элементы, которые добавляются к массиву после начала вызова &lt;code&gt;some()&lt;/code&gt; , не будут посещены &lt;code&gt;callback&lt;/code&gt; . Если существующий, не посещенный элемент массива изменен &lt;code&gt;callback&lt;/code&gt; , его значение, переданное обратному &lt;code&gt;callback&lt;/code&gt; посещения, будет значением в то время, когда &lt;code&gt;some()&lt;/code&gt; посещает индекс этого элемента; элементы, которые удаляются, не посещаются.</target>
        </trans-unit>
        <trans-unit id="65371679ab7fdc5f5b8139c6dc4a8371ee6bcd84" translate="yes" xml:space="preserve">
          <source>The range specified by &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; is clamped to the valid index range for the current array; if the computed length of the new array would be negative, it's clamped to zero. If either &lt;code&gt;begin&lt;/code&gt; or &lt;code&gt;end&lt;/code&gt; is negative, it refers to an index from the end of the array instead of from the beginning.</source>
          <target state="translated">Диапазон, указанный в параметрах &lt;code&gt;begin&lt;/code&gt; и &lt;code&gt;end&lt;/code&gt; , ограничивается допустимым диапазоном индексов для текущего массива; если вычисленная длина нового массива будет отрицательной, она будет ограничена нулем. Если &lt;code&gt;begin&lt;/code&gt; или &lt;code&gt;end&lt;/code&gt; отрицательны, это относится к индексу с конца массива, а не с начала.</target>
        </trans-unit>
        <trans-unit id="24b85dd06a6213cf1081464b71f955da06c850ba" translate="yes" xml:space="preserve">
          <source>The range specified by the &lt;code&gt;begin&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; parameters is clamped to the valid index range for the current array. If the computed length of the new &lt;code&gt;ArrayBuffer&lt;/code&gt; would be negative, it is clamped to zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b605edb84e51349013fff8a34d0333b8de9dbb3" translate="yes" xml:space="preserve">
          <source>The raw string form of a given template string.</source>
          <target state="translated">Форма необработанной строки заданного шаблона.</target>
        </trans-unit>
        <trans-unit id="4872ed5b22d0ae3b1f434987b2a71a41aa1f3ac0" translate="yes" xml:space="preserve">
          <source>The read-only &lt;code&gt;&lt;strong&gt;description&lt;/strong&gt;&lt;/code&gt; property is a string returning the optional description of &lt;a href=&quot;../symbol&quot;&gt;&lt;code&gt;Symbol&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">Свойство &lt;code&gt;&lt;strong&gt;description&lt;/strong&gt;&lt;/code&gt; только для чтения - это строка, возвращающая необязательное описание объектов &lt;a href=&quot;../symbol&quot;&gt; &lt;code&gt;Symbol&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="08a9d11278fec588286a47b1be22a5bfa5f38d06" translate="yes" xml:space="preserve">
          <source>The read-only size, in bytes, of the &lt;code&gt;ArrayBuffer&lt;/code&gt;. This is established when the array is constructed and cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d830bee0702ccb941693f924f1d7feabc1cfe3" translate="yes" xml:space="preserve">
          <source>The regular expression &lt;code&gt;test&lt;/code&gt; checks for any number that ends with &lt;code&gt;F&lt;/code&gt;. The number of Fahrenheit degree is accessible to the function through its second parameter, &lt;code&gt;p1&lt;/code&gt;. The function sets the Celsius number based on the Fahrenheit degree passed in a string to the &lt;code&gt;f2c()&lt;/code&gt; function. &lt;code&gt;f2c()&lt;/code&gt; then returns the Celsius number. This function approximates Perl's &lt;code&gt;s///e&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680739a0f2675354de9952a77ed275cf53cff009" translate="yes" xml:space="preserve">
          <source>The regular expression &lt;code&gt;test&lt;/code&gt; checks for any number that ends with F. The number of Fahrenheit degree is accessible to the function through its second parameter, &lt;code&gt;p1&lt;/code&gt;. The function sets the Celsius number based on the Fahrenheit degree passed in a string to the &lt;code&gt;f2c()&lt;/code&gt; function. &lt;code&gt;f2c()&lt;/code&gt; then returns the Celsius number. This function approximates Perl's &lt;code&gt;s///e&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;test&lt;/code&gt; регулярного выражения проверяет любое число, которое заканчивается на F. Число градусов Фаренгейта доступно функции через ее второй параметр, &lt;code&gt;p1&lt;/code&gt; . Функция устанавливает число Цельсия на основе градуса Фаренгейта, переданного в строке функции &lt;code&gt;f2c()&lt;/code&gt; . &lt;code&gt;f2c()&lt;/code&gt; возвращает число Цельсия. Эта функция аппроксимирует флаг Perl &lt;code&gt;s///e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6903197bb29b1a4407584ec864683e3ceab56a02" translate="yes" xml:space="preserve">
          <source>The regular expression includes the &lt;code&gt;i&lt;/code&gt; flag so that upper/lower case differences will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881be0a98334b09334fc00ba7f6f756fca437c4c" translate="yes" xml:space="preserve">
          <source>The rejection reason.</source>
          <target state="translated">Причина отказа.</target>
        </trans-unit>
        <trans-unit id="e46ec006c0b64ae3b2fb150411d2dcd7a25635ce" translate="yes" xml:space="preserve">
          <source>The remainder assignment operator &lt;strong&gt;divides&lt;/strong&gt; a variable by the value of the right operand and assigns the &lt;strong&gt;remainder&lt;/strong&gt; to the variable. See the &lt;a href=&quot;arithmetic_operators#Remainder&quot;&gt;remainder operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания остатка &lt;strong&gt;делит&lt;/strong&gt; переменную на значение правого операнда и присваивает переменной &lt;strong&gt;остаток&lt;/strong&gt; . Подробнее см. &lt;a href=&quot;arithmetic_operators#Remainder&quot;&gt;Оператор остатка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5187d3d5a221cd935660308eb842429ac63cd335" translate="yes" xml:space="preserve">
          <source>The remainder operator returns the remainder left over when one operand is divided by a second operand. It always takes the sign of the dividend.</source>
          <target state="translated">Оператор &quot;Остаток&quot; возвращает оставшуюся часть,когда один операнд делится на второй.Всегда берется знак дивиденда.</target>
        </trans-unit>
        <trans-unit id="07881a9c3a65a4aa5a5412756c2741ecf8904b70" translate="yes" xml:space="preserve">
          <source>The removed element from the array; &lt;a href=&quot;../undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt; if the array is empty.</source>
          <target state="translated">Удаленный элемент из массива; &lt;a href=&quot;../undefined&quot;&gt; &lt;code&gt;undefined&lt;/code&gt; ,&lt;/a&gt; если массив пуст.</target>
        </trans-unit>
        <trans-unit id="4f5d406eb2af9d7b2ee22726999b6d3a063f6ac7" translate="yes" xml:space="preserve">
          <source>The replacement function accepts the matched snippet as its parameter, and uses it to transform the case and concatenate the hyphen before returning.</source>
          <target state="translated">Функция замены принимает в качестве параметра соответствующий фрагмент и использует его для преобразования регистра и конкатенирования дефиса перед возвращением.</target>
        </trans-unit>
        <trans-unit id="ef6da55d14c626be633ee1c7607ca98d95b8befe" translate="yes" xml:space="preserve">
          <source>The replacement string can include the following special replacement patterns:</source>
          <target state="translated">Заменяющая строка может включать в себя следующие специальные заменяющие шаблоны:</target>
        </trans-unit>
        <trans-unit id="2dbdd21dce098779754830afcdc2304a7f54e54e" translate="yes" xml:space="preserve">
          <source>The replacer parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b89c2f925b29cf68119fa74ec1b4651ca20d8a" translate="yes" xml:space="preserve">
          <source>The representation of the day. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">Представление дня. Возможные значения: &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; , &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c8c124223283ec086ca537c93ff68fb8da7b0ae" translate="yes" xml:space="preserve">
          <source>The representation of the era. Possible values are &lt;code&gt;&quot;narrow&quot;&lt;/code&gt;, &lt;code&gt;&quot;short&quot;&lt;/code&gt;, &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="translated">Изображение эпохи. Возможные значения: &lt;code&gt;&quot;narrow&quot;&lt;/code&gt; , &lt;code&gt;&quot;short&quot;&lt;/code&gt; , &lt;code&gt;&quot;long&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75ec6c1d1661f5c67da276deded4103e969aef10" translate="yes" xml:space="preserve">
          <source>The representation of the hour. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">Представление часа. Возможные значения: &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; , &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca4f23dca9b476105cb4a1a4a06dc2052f9b71ba" translate="yes" xml:space="preserve">
          <source>The representation of the minute. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">Представление минуты. Возможные значения: &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; , &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4c386acd85fd7b31c2014e4750385f23ba4cfab" translate="yes" xml:space="preserve">
          <source>The representation of the month. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;, &lt;code&gt;&quot;narrow&quot;&lt;/code&gt;, &lt;code&gt;&quot;short&quot;&lt;/code&gt;, &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="translated">Представление месяца. Возможные значения: &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; , &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; , &lt;code&gt;&quot;narrow&quot;&lt;/code&gt; , &lt;code&gt;&quot;short&quot;&lt;/code&gt; , &lt;code&gt;&quot;long&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92c426ab4a82986c4ede5fbd7b75a68464cf99fa" translate="yes" xml:space="preserve">
          <source>The representation of the second. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">Представление второе. Возможные значения: &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; , &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98df1e349a808f0fc95c331db5dda3f987fa1cbf" translate="yes" xml:space="preserve">
          <source>The representation of the time zone name. Possible values are &lt;code&gt;&quot;short&quot;&lt;/code&gt;, &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="translated">Представление имени часового пояса. Возможные значения: &lt;code&gt;&quot;short&quot;&lt;/code&gt; , &lt;code&gt;&quot;long&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8ef3ad3a60a860da71831ec397a6a689eca3574" translate="yes" xml:space="preserve">
          <source>The representation of the weekday. Possible values are &lt;code&gt;&quot;narrow&quot;&lt;/code&gt;, &lt;code&gt;&quot;short&quot;&lt;/code&gt;, &lt;code&gt;&quot;long&quot;&lt;/code&gt;.</source>
          <target state="translated">Представление дня недели. Возможные значения: &lt;code&gt;&quot;narrow&quot;&lt;/code&gt; , &lt;code&gt;&quot;short&quot;&lt;/code&gt; , &lt;code&gt;&quot;long&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ad60c9eeb0a198829bffe136b86a4fd0c190858" translate="yes" xml:space="preserve">
          <source>The representation of the year. Possible values are &lt;code&gt;&quot;numeric&quot;&lt;/code&gt;, &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt;.</source>
          <target state="translated">Представление года. Возможные значения: &lt;code&gt;&quot;numeric&quot;&lt;/code&gt; , &lt;code&gt;&quot;2-digit&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7bcb26fe58915d354871d726097f83d6b12e3a8" translate="yes" xml:space="preserve">
          <source>The rest parameter syntax allows representing an indefinite number of arguments as an array. For more details, see &lt;a href=&quot;functions/rest_parameters&quot;&gt;rest parameters&lt;/a&gt;.</source>
          <target state="translated">Синтаксис остальных параметров позволяет представить неопределенное количество аргументов в виде массива. Подробнее см. &lt;a href=&quot;functions/rest_parameters&quot;&gt;Остальные параметры&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4ce073e32597bad3bae9968f9560c99c4b0fa2d" translate="yes" xml:space="preserve">
          <source>The result List must contain the keys of all non-configurable own properties of the target object.</source>
          <target state="translated">Список результатов должен содержать ключи всех неконфигурируемых собственных свойств целевого объекта.</target>
        </trans-unit>
        <trans-unit id="09500cf8f96c09694df346e1e07ff088ca5e9c86" translate="yes" xml:space="preserve">
          <source>The result must be an &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">Результатом должен быть &lt;code&gt;Object&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb3934e6405e7497942f7716dd9aeb27d642f83f" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;Object.getOwnPropertyDescriptor(target)&lt;/code&gt; can be applied to the target object using &lt;code&gt;Object.defineProperty&lt;/code&gt; and will not throw an exception.</source>
          <target state="translated">Результат &lt;code&gt;Object.getOwnPropertyDescriptor(target)&lt;/code&gt; может быть применен к целевому объекту с помощью &lt;code&gt;Object.defineProperty&lt;/code&gt; и не вызовет исключения.</target>
        </trans-unit>
        <trans-unit id="06d8bbf8b466f0cd6c19d723d1164c3c015447e5" translate="yes" xml:space="preserve">
          <source>The result of &lt;code&gt;ownKeys&lt;/code&gt; must be an array.</source>
          <target state="translated">Результат &lt;code&gt;ownKeys&lt;/code&gt; должен быть массивом.</target>
        </trans-unit>
        <trans-unit id="e6fd2a7a936185f63bd538f8e6eb93d8f9751f0a" translate="yes" xml:space="preserve">
          <source>The result of a match between a &lt;a href=&quot;regexp&quot;&gt;&lt;code&gt;RegExp&lt;/code&gt;&lt;/a&gt; and a string can create a JavaScript array. This array has properties and elements which provide information about the match. Such an array is returned by &lt;a href=&quot;regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string/match&quot;&gt;&lt;code&gt;String.match()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;String.replace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddba75b24cf56532b5f0afeed74ec2ccccd73b81" translate="yes" xml:space="preserve">
          <source>The result of a match between a regular expression and a string can create a JavaScript array. This array has properties and elements which provide information about the match. Such an array is returned by &lt;a href=&quot;regexp/exec&quot;&gt;&lt;code&gt;RegExp.exec&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;string/match&quot;&gt;&lt;code&gt;String.match&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;string/replace&quot;&gt;&lt;code&gt;String.replace&lt;/code&gt;&lt;/a&gt;. To help explain these properties and elements, look at the following example and then refer to the table below:</source>
          <target state="translated">Результат совпадения регулярного выражения и строки может создать массив JavaScript. Этот массив имеет свойства и элементы, которые предоставляют информацию о совпадении. Такой массив возвращается &lt;a href=&quot;regexp/exec&quot;&gt; &lt;code&gt;RegExp.exec&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;string/match&quot;&gt; &lt;code&gt;String.match&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;string/replace&quot;&gt; &lt;code&gt;String.replace&lt;/code&gt; &lt;/a&gt; . Чтобы объяснить эти свойства и элементы, посмотрите следующий пример, а затем обратитесь к таблице ниже:</target>
        </trans-unit>
        <trans-unit id="2a28036fb3ccce36ae8009e2252ac01d0aded163" translate="yes" xml:space="preserve">
          <source>The result of calling &lt;code&gt;Object.freeze(&lt;var&gt;object&lt;/var&gt;)&lt;/code&gt; only applies to the immediate properties of &lt;code&gt;object&lt;/code&gt; itself and will prevent future property addition, removal or value re-assignment operations &lt;em&gt;only&lt;/em&gt; on &lt;code&gt;object&lt;/code&gt;. If the value of those properties are objects themselves, those objects are not frozen and may be the target of property addition, removal or value re-assignment operations.</source>
          <target state="translated">Результат вызова &lt;code&gt;Object.freeze(&lt;var&gt;object&lt;/var&gt;)&lt;/code&gt; применяется только к непосредственным свойствам самого &lt;code&gt;object&lt;/code&gt; и предотвращает будущие операции добавления, удаления или повторного присвоения значений &lt;em&gt;только&lt;/em&gt; для &lt;code&gt;object&lt;/code&gt; . Если значения этих свойств являются самими объектами, эти объекты не замораживаются и могут быть целью операций добавления, удаления или повторного присвоения значений свойств.</target>
        </trans-unit>
        <trans-unit id="fefa72860dcf387ee389a07414494c4d18133e49" translate="yes" xml:space="preserve">
          <source>The result of calling the function with the specified &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; value and arguments.</source>
          <target state="translated">Результат вызова функции с указанным значением &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; и аргументами.</target>
        </trans-unit>
        <trans-unit id="cec2bd2d7ee2ac0e099b359eeeb931d4d0fdb844" translate="yes" xml:space="preserve">
          <source>The result of calling the given &lt;code&gt;&lt;var&gt;target&lt;/var&gt;&lt;/code&gt; function with the specified &lt;code&gt;this&lt;/code&gt; value and arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bb18a6e80b92359c8e4e034c6f164b137453c7" translate="yes" xml:space="preserve">
          <source>The result of calling the given target function with the specified &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; value and arguments.</source>
          <target state="translated">Результат вызова заданной целевой функции с указанным значением &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; и аргументами.</target>
        </trans-unit>
        <trans-unit id="b99296763ae8a3f599621dd114c4094796ca2f39" translate="yes" xml:space="preserve">
          <source>The result of evaluating an equality operator is always of type &lt;code&gt;Boolean&lt;/code&gt; based on whether the comparison is true.</source>
          <target state="translated">Результат вычисления оператора равенства всегда имеет тип &lt;code&gt;Boolean&lt;/code&gt; в зависимости от того, истинно ли сравнение.</target>
        </trans-unit>
        <trans-unit id="a8e999ec047073963bd723d0485ba3b9a54de622" translate="yes" xml:space="preserve">
          <source>The result of the C-like 32-bit multiplication of the given arguments.</source>
          <target state="translated">Результат С-подобного 32-битного умножения приведенных аргументов.</target>
        </trans-unit>
        <trans-unit id="2597fce0ed6ff2389377b1cd91c13f7fa32d0c68" translate="yes" xml:space="preserve">
          <source>The result of this expression is discarded.</source>
          <target state="translated">Результат этого выражения отбрасывается.</target>
        </trans-unit>
        <trans-unit id="de7213f997b8bb96ab88809991cba00fbd846819" translate="yes" xml:space="preserve">
          <source>The resulting module instance is then instantiated using &lt;a href=&quot;instantiate&quot;&gt;&lt;code&gt;WebAssembly.instantiate()&lt;/code&gt;&lt;/a&gt;, and the exported function invoked.</source>
          <target state="translated">Затем создается экземпляр полученного модуля с помощью &lt;a href=&quot;instantiate&quot;&gt; &lt;code&gt;WebAssembly.instantiate()&lt;/code&gt; &lt;/a&gt; и вызывается экспортированная функция.</target>
        </trans-unit>
        <trans-unit id="c9dd8917f198a197f82a135134ca9b18dbd222a7" translate="yes" xml:space="preserve">
          <source>The resulting object has the following properties:</source>
          <target state="translated">Полученный объект имеет следующие свойства:</target>
        </trans-unit>
        <trans-unit id="9bc62b3d5081c12993b4895e68761adb3c575f6c" translate="yes" xml:space="preserve">
          <source>The resulting string can also not be larger than the maximum string size, which can differ in JavaScript engines. In Firefox (SpiderMonkey) the maximum string size is 2&lt;sup&gt;28&lt;/sup&gt; -1 (&lt;code&gt;0xFFFFFFF&lt;/code&gt;).</source>
          <target state="translated">Результирующая строка также не может быть больше максимального размера строки, который может отличаться в движках JavaScript. В Firefox (SpiderMonkey) максимальный размер строки составляет 2 &lt;sup&gt;28&lt;/sup&gt; -1 ( &lt;code&gt;0xFFFFFFF&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9eb98a2fe0acf240d7654071bcd6d921de841684" translate="yes" xml:space="preserve">
          <source>The results are exactly the same for a condition that evaluates to true</source>
          <target state="translated">Результаты в точности совпадают для условия,которое оценивается как истинное.</target>
        </trans-unit>
        <trans-unit id="bb51b349d59eee807659f8049af5a1f06c6a49fc" translate="yes" xml:space="preserve">
          <source>The results can be customized using the &lt;code&gt;options&lt;/code&gt; argument, which has one property called &lt;code&gt;type&lt;/code&gt; which you can set to &lt;code&gt;ordinal&lt;/code&gt;. This is useful to figure out the ordinal indicator, e.g. &quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;, &quot;4th&quot;, &quot;42nd&quot; and so forth.</source>
          <target state="translated">Результаты можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; , который имеет одно свойство, называемое &lt;code&gt;type&lt;/code&gt; которого можно задать &lt;code&gt;ordinal&lt;/code&gt; . Это полезно для определения порядкового номера индикатора, например, &amp;laquo;1-й&amp;raquo;, &amp;laquo;2-й&amp;raquo;, &amp;laquo;3-й&amp;raquo;, &amp;laquo;4-й&amp;raquo;, &amp;laquo;42-й&amp;raquo; и так далее.</target>
        </trans-unit>
        <trans-unit id="f410a04ef8f2b89064c010e4aca9735da1fb879f" translate="yes" xml:space="preserve">
          <source>The results can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Результаты можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0590a37d62a639a0ff31052d74383a68576e7a8e" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;a href=&quot;collator/compare&quot;&gt;&lt;code&gt;Collator.prototype.compare()&lt;/code&gt;&lt;/a&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Результаты, предоставляемые &lt;a href=&quot;collator/compare&quot;&gt; &lt;code&gt;Collator.prototype.compare()&lt;/code&gt; &lt;/a&gt; можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6460752ea7eb84391c8bafc222830cc7e9fc54c2" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;a href=&quot;collator/compare&quot;&gt;&lt;code&gt;Collator.prototype.compare()&lt;/code&gt;&lt;/a&gt; vary between languages. In order to get the sort order of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">Результаты, предоставляемые &lt;a href=&quot;collator/compare&quot;&gt; &lt;code&gt;Collator.prototype.compare()&lt;/code&gt; &lt;/a&gt; различаются в зависимости от языка. Чтобы получить порядок сортировки языка, используемого в пользовательском интерфейсе вашего приложения, обязательно укажите этот язык (и, возможно, некоторые резервные языки) с помощью аргумента &lt;code&gt;locales&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="411e49cae96db0cd87482832797aee9efda23925" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;localeCompare()&lt;/code&gt; can be customized using the &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e97af0ba43c68941c59329ec6c94c7d934f37d" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;localeCompare()&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Результаты, предоставляемые &lt;code&gt;localeCompare()&lt;/code&gt; можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2da834c52e398fb59639d36bf16b5193db63ad07" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;localeCompare()&lt;/code&gt; vary between languages. In order to get the sort order of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;&lt;var&gt;locales&lt;/var&gt;&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07491f0bcc8c0faaaeb2650b8a25d645da689c62" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;localeCompare()&lt;/code&gt; vary between languages. In order to get the sort order of the language used in the user interface of your application, make sure to specify that language (and possibly some fallback languages) using the &lt;code&gt;locales&lt;/code&gt; argument:</source>
          <target state="translated">Результаты, предоставляемые &lt;code&gt;localeCompare()&lt;/code&gt; зависят от языка. Чтобы получить порядок сортировки языка, используемого в пользовательском интерфейсе вашего приложения, обязательно укажите этот язык (и, возможно, некоторые резервные языки) с помощью аргумента &lt;code&gt;locales&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c230f29f6c02cdb2b6a382e23dd27d2b3c89bc0f" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleDateString()&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Результаты, предоставляемые &lt;code&gt;toLocaleDateString()&lt;/code&gt; можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="77ddfcb36a5ffb925a3eafd6224d07f33c95e413" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleString()&lt;/code&gt; can be customized using the &lt;code&gt;&lt;var&gt;options&lt;/var&gt;&lt;/code&gt; argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77208c5cf48d90e2f10810957b1738415f9029d" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleString()&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Результаты, предоставляемые &lt;code&gt;toLocaleString()&lt;/code&gt; можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a4f9d7322f7d850fd3dd3ce966a5357c62b6c5a2" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleString&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Результаты, предоставляемые &lt;code&gt;toLocaleString&lt;/code&gt; , можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4318bc9ae228b90743c8639d6a756aa6a12aeff3" translate="yes" xml:space="preserve">
          <source>The results provided by &lt;code&gt;toLocaleTimeString()&lt;/code&gt; can be customized using the &lt;code&gt;options&lt;/code&gt; argument:</source>
          <target state="translated">Результаты, предоставляемые &lt;code&gt;toLocaleTimeString()&lt;/code&gt; можно настроить с помощью аргумента &lt;code&gt;options&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d750f0af15205b9111428731d4535ea906318c68" translate="yes" xml:space="preserve">
          <source>The returned &lt;code&gt;nextValue&lt;/code&gt; can be another promise object, in which case the promise gets dynamically inserted into the chain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8cb9fca9847dbce05c10ada3fd39a451a28a10" translate="yes" xml:space="preserve">
          <source>The returned promise is fulfilled with an array containing &lt;strong&gt;all &lt;/strong&gt;the resolved values (including non-promise values) in the &lt;var&gt;iterable&lt;/var&gt; passed as the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661f37d284e715890d76e7452ee653c77f285192" translate="yes" xml:space="preserve">
          <source>The reversed array.</source>
          <target state="translated">Перевернутый массив.</target>
        </trans-unit>
        <trans-unit id="ce442467d5cf7e73ed965df107f9dfdb61ffd2ec" translate="yes" xml:space="preserve">
          <source>The right shift assignment operator moves the specified amount of bits to the right and assigns the result to the variable. See the &lt;a href=&quot;bitwise_operators#Right_shift&quot;&gt;right shift operator&lt;/a&gt; for more details.</source>
          <target state="translated">Оператор присваивания сдвига вправо перемещает указанное количество бит вправо и присваивает результат переменной. Подробнее см. &lt;a href=&quot;bitwise_operators#Right_shift&quot;&gt;Оператор сдвига вправо&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c245fc442c6d7bd16d7991dad8024b68c3ea2a14" translate="yes" xml:space="preserve">
          <source>The rules of logic guarantee that these evaluations are always correct. Note that the &lt;code&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/code&gt; part of the above expressions is not evaluated, so any side effects of doing so do not take effect. Also, note that the &lt;code&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/code&gt; part of the above expression is any single logical expression (as indicated by the parentheses).</source>
          <target state="translated">Правила логики гарантируют, что эти оценки всегда верны. Обратите внимание, &lt;code&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/code&gt; часть выражения something в приведенных выше выражениях не оценивается, поэтому любые побочные эффекты не действуют. Также обратите внимание, &lt;code&gt;&lt;em&gt;anything&lt;/em&gt;&lt;/code&gt; часть выражения &lt;em&gt;something&lt;/em&gt; в приведенном выше выражении - это любое отдельное логическое выражение (как указано в скобках).</target>
        </trans-unit>
        <trans-unit id="744c688eeb415786a18498e35f0370c335965400" translate="yes" xml:space="preserve">
          <source>The same applies when a file imports another:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5326ba109783cec194314860c8cd0f101f29ce" translate="yes" xml:space="preserve">
          <source>The same error is thrown when a class has been defined before using the class expression.</source>
          <target state="translated">Аналогичная ошибка возникает,когда класс был определен до использования выражения класса.</target>
        </trans-unit>
        <trans-unit id="f94deddc325beb0ea83824b0cfcbc269df908993" translate="yes" xml:space="preserve">
          <source>The same example as above but with a strict mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882bc50ec19db0d5c5e4b549dde81bfa662ed101" translate="yes" xml:space="preserve">
          <source>The same is true of &lt;code&gt;const&lt;/code&gt;:</source>
          <target state="translated">То же самое и с &lt;code&gt;const&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2602f543ce2428dea5e294f7b4751258179f01d7" translate="yes" xml:space="preserve">
          <source>The same notion holds true for methods defined somewhere on the object's prototype chain. If the method is on an object's prototype chain, &lt;code&gt;this&lt;/code&gt; refers to the object the method was called on, as if the method were on the object.</source>
          <target state="translated">То же самое относится и к методам, определенным где-то в цепочке прототипов объекта. Если метод находится в цепочке прототипов объекта, &lt;code&gt;this&lt;/code&gt; относится к объекту, для которого метод был вызван, как если бы метод был на объекте.</target>
        </trans-unit>
        <trans-unit id="916eb872cad9200388ff02806522199ea2feadc0" translate="yes" xml:space="preserve">
          <source>The same privacy pattern with closures over local variables can be created with &lt;code&gt;var&lt;/code&gt;, but those need a function scope (typically an IIFE in the module pattern) instead of just a block scope like in the example above.</source>
          <target state="translated">Тот же самый шаблон конфиденциальности с замыканиями над локальными переменными можно создать с помощью &lt;code&gt;var&lt;/code&gt; , но для них нужна область действия функции (обычно IIFE в шаблоне модуля), а не просто область действия блока, как в приведенном выше примере.</target>
        </trans-unit>
        <trans-unit id="3d7b9a7348354d4ee8c942b714a53de91204cccb" translate="yes" xml:space="preserve">
          <source>The same thing happens if &lt;code&gt;Promise.all&lt;/code&gt; rejects:</source>
          <target state="translated">То же самое происходит, если &lt;code&gt;Promise.all&lt;/code&gt; отклоняет:</target>
        </trans-unit>
        <trans-unit id="d69cdfe19431d597100bf32601f4b9e7ffe9c0ce" translate="yes" xml:space="preserve">
          <source>The same variable name occurs as a function parameter and is then redeclared using a &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; assignment in a function body again. Redeclaring the same variable within the same function or block scope using &lt;code&gt;let&lt;/code&gt; is not allowed in JavaScript.</source>
          <target state="translated">То же имя переменной встречается как параметр функции, а затем повторно объявляется с использованием назначения &lt;code&gt;&lt;a href=&quot;../statements/let&quot;&gt;let&lt;/a&gt;&lt;/code&gt; в теле функции. Повторное объявление той же переменной в пределах той же функции или области блока с помощью &lt;code&gt;let&lt;/code&gt; не допускается в JavaScript.</target>
        </trans-unit>
        <trans-unit id="1e9c89ceb04b938a0d084470af66e1f4222a742a" translate="yes" xml:space="preserve">
          <source>The same variable name occurs as a function parameter and is then redeclared using a &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; assignment in a function body again. This might be a naming conflict and thus JavaScript warns about it.</source>
          <target state="translated">Же имя переменное происходит в качестве параметра функции , а затем повторно объявлено с использованием &lt;code&gt;&lt;a href=&quot;../statements/var&quot;&gt;var&lt;/a&gt;&lt;/code&gt; назначения в теле функции снова. Это может быть конфликт именования, поэтому JavaScript предупреждает об этом.</target>
        </trans-unit>
        <trans-unit id="3cc4fe3dea37b137d5ac1519e93e9e6cd6d1ade2" translate="yes" xml:space="preserve">
          <source>The scope of a variable declared with &lt;code&gt;var&lt;/code&gt; is its current &lt;em&gt;execution context and closures thereof&lt;/em&gt;, which is either the enclosing function and functions declared within it, or, for variables declared outside any function, global. Duplicate variable declarations using &lt;code&gt;var&lt;/code&gt; will not trigger an error, even in strict mode, and the variable will not lose its value, unless another assignment is performed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081845d752bd75fad66789e5488db5f75cfa83ed" translate="yes" xml:space="preserve">
          <source>The scope of a variable declared with &lt;code&gt;var&lt;/code&gt; is its current &lt;em&gt;execution context&lt;/em&gt;, which is either the enclosing function or, for variables declared outside any function, global. If you re-declare a JavaScript variable, it will not lose its value.</source>
          <target state="translated">Областью видимости переменной, объявленной с помощью &lt;code&gt;var&lt;/code&gt; , является ее текущий &lt;em&gt;контекст выполнения&lt;/em&gt; , который является либо включающей функцией, либо, для переменных, объявленных вне любой функции, глобальным. Если вы повторно объявите переменную JavaScript, она не потеряет своего значения.</target>
        </trans-unit>
        <trans-unit id="bab8db43358dd1d5ee4220fc058b6fee6434c9d1" translate="yes" xml:space="preserve">
          <source>The script attempted to access an object property which doesn't exist. There are two ways to access properties; see the &lt;a href=&quot;../operators/property_accessors#0&quot;&gt;property accessors&lt;/a&gt; reference page to learn more about them.</source>
          <target state="translated">Сценарий попытался получить доступ к несуществующему свойству объекта. Есть два способа получить доступ к свойствам; см. страницу справки по средствам &lt;a href=&quot;../operators/property_accessors#0&quot;&gt;доступа&lt;/a&gt; к свойствам, чтобы узнать о них больше.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
