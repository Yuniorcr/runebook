<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="48d4deda6a29de0da753e4aeef856b6305e8d550" translate="yes" xml:space="preserve">
          <source>Step 3: Copy the Angular project files into the ASP.NET project folder</source>
          <target state="translated">Шаг 3:Скопируйте файлы углового проекта в папку проекта ASP.NET.</target>
        </trans-unit>
        <trans-unit id="005849058dc80d62a7f2d8a7ab2ae9ab9b745d64" translate="yes" xml:space="preserve">
          <source>Step 3: Generating form controls</source>
          <target state="translated">Шаг 3:Генерирование форм контроля</target>
        </trans-unit>
        <trans-unit id="017f470b7d7749895b56fc4419f11fbb6bf10f98" translate="yes" xml:space="preserve">
          <source>Step 3: Registering the control in the template</source>
          <target state="translated">Шаг 3:Регистрация элемента управления в шаблоне</target>
        </trans-unit>
        <trans-unit id="d70d1c45f5e3789dec8e23bd525c942db5b8fc7b" translate="yes" xml:space="preserve">
          <source>Step 3: Run the application</source>
          <target state="translated">Шаг 3:Запустите приложение</target>
        </trans-unit>
        <trans-unit id="91ff2efe0d7b26ad2720b21c1dfcf98862e43810" translate="yes" xml:space="preserve">
          <source>Step 3: Verify the app is built with the shell content</source>
          <target state="translated">Шаг 3:Убедитесь,что приложение построено с содержимым оболочки.</target>
        </trans-unit>
        <trans-unit id="4b250d9e8fb17555e0e9336a36a06d98e847fa45" translate="yes" xml:space="preserve">
          <source>Step 4: &lt;a href=&quot;https://circleci.com/docs/2.0/first-steps/&quot;&gt;Sign up for Circle CI&lt;/a&gt; and &lt;a href=&quot;https://circleci.com/add-projects&quot;&gt;add your project&lt;/a&gt;. Your project should start building.</source>
          <target state="translated">Шаг 4: &lt;a href=&quot;https://circleci.com/docs/2.0/first-steps/&quot;&gt;Зарегистрируйтесь в Circle CI&lt;/a&gt; и &lt;a href=&quot;https://circleci.com/add-projects&quot;&gt;добавьте свой проект&lt;/a&gt; . Ваш проект должен начать строить.</target>
        </trans-unit>
        <trans-unit id="f76a02a29a9e5d7c472da0a39e2f0a3e742c7f77" translate="yes" xml:space="preserve">
          <source>Step 4: Displaying the form array in the template</source>
          <target state="translated">Шаг 4:Отображение массива форм в шаблоне</target>
        </trans-unit>
        <trans-unit id="184db950bcad4c5561140a2400f15e24a5c78842" translate="yes" xml:space="preserve">
          <source>Step 4: Restore the required packages</source>
          <target state="translated">Шаг 4:Восстановление необходимых пакетов</target>
        </trans-unit>
        <trans-unit id="0ef1c21f79bdbe367b7d560790f576815ac4209d" translate="yes" xml:space="preserve">
          <source>Step 5: Build and run the app</source>
          <target state="translated">Шаг 5:Создайте и запустите приложение</target>
        </trans-unit>
        <trans-unit id="c9932c1df99faee4ac2c6ee9b9b022a5772a5828" translate="yes" xml:space="preserve">
          <source>Step overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65487b65ef340ce184173de8941091ae57757d80" translate="yes" xml:space="preserve">
          <source>Step-by-step setup</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cff6e99a14676bb106644324be04b5717cc9e1cf" translate="yes" xml:space="preserve">
          <source>Steps defined by &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; calls apply the styling data over time as specified by the timing data.</source>
          <target state="translated">Шаги, определенные вызовами &lt;code&gt;&lt;a href=&quot;animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; применяют данные стиля со временем, как указано данными синхронизации.</target>
        </trans-unit>
        <trans-unit id="c8ed69821ec203d6829dbcc9d9d6fec704a81de6" translate="yes" xml:space="preserve">
          <source>Steps defined by &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; calls apply the styling data immediately.</source>
          <target state="translated">Шаги, определенные вызовами &lt;code&gt;&lt;a href=&quot;style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; немедленно применяют данные стиля.</target>
        </trans-unit>
        <trans-unit id="2d4383c84264ce47ffad337a7a37bd1df0791d15" translate="yes" xml:space="preserve">
          <source>Steps to localize your app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a07d30bad8c94218ad0f704b43802b2da976357" translate="yes" xml:space="preserve">
          <source>Stick with the default unless you have a compelling reason to resort to hash routes.</source>
          <target state="translated">Используйте стандартный вариант,если у вас нет веских причин использовать маршруты хэширования.</target>
        </trans-unit>
        <trans-unit id="bf1066a438f75be73bd593a9e5f4901e8d7a54cd" translate="yes" xml:space="preserve">
          <source>Still in the &lt;code&gt;AppRoutingModule&lt;/code&gt;, specify your preloading strategy in &lt;code&gt;forRoot()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7764532b0013402d2d82a4b88aac36cb4d845193" translate="yes" xml:space="preserve">
          <source>Still in the &lt;code&gt;CartComponent&lt;/code&gt; class, define the &lt;code&gt;checkoutForm&lt;/code&gt; property to store the form model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2598500f4189f4c7d4d04fd55e20d7832c56f7b1" translate="yes" xml:space="preserve">
          <source>Still in the &lt;code&gt;HeroService&lt;/code&gt;, inject &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; into the constructor in a private property called &lt;code&gt;&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Тем не менее в &lt;code&gt;HeroService&lt;/code&gt; , инъекционные &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; в конструктор в частной собственности под названием &lt;code&gt;&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86f183e2c301ae15282a1180211492bbcc7a6bac" translate="yes" xml:space="preserve">
          <source>Still, there might be cases where you want more control over when the ServiceWorker is registered (e.g. there might be a long-running timeout or polling interval, preventing the app to stabilize). The available option are:</source>
          <target state="translated">Тем не менее,могут быть случаи,когда вы хотите иметь больше контроля при регистрации ServiceWorker (например,может быть длительный тайм-аут или интервал опроса,не позволяющий приложению стабилизироваться).Доступен вариант:</target>
        </trans-unit>
        <trans-unit id="0e11d9fab2df24308a243919b5e483ad161c19f2" translate="yes" xml:space="preserve">
          <source>Still, there might be cases where you want more control over when the ServiceWorker is registered (for example, there might be a long-running timeout or polling interval, preventing the app from stabilizing). The available option are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085047dc833a0dc9d40996c4f030f809db3a73d4" translate="yes" xml:space="preserve">
          <source>Stop interval timers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73dbe34e4ed8ad93ef32a3f7c640e997f88205c" translate="yes" xml:space="preserve">
          <source>Stopping and starting the service worker in the Service Worker pane triggers a check for updates.</source>
          <target state="translated">Остановка и запуск работника службы в панели Service Worker вызывает проверку на наличие обновлений.</target>
        </trans-unit>
        <trans-unit id="04eff34316cb47c772b1bddbf1fbb113d1857149" translate="yes" xml:space="preserve">
          <source>Store contextual information about a &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Хранить контекстную информацию о &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77e71f586ded49562f9a0b742cf70a777d3efe78" translate="yes" xml:space="preserve">
          <source>Store contextual information about a &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Хранить контекстную информацию о &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e48cfb3d3d03ba559addfbec1ad5e1a3182727e4" translate="yes" xml:space="preserve">
          <source>Store contextual information about the children (= nested) &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Хранить контекстную информацию о дочерних &lt;code&gt;&lt;a href=&quot;router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; (= вложенных) RouterOutlet</target>
        </trans-unit>
        <trans-unit id="b1514487ea7bd392f7937b087b3478f147520b52" translate="yes" xml:space="preserve">
          <source>Store contextual information about the children (= nested) &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Хранить контекстную информацию о дочерних &lt;code&gt;&lt;a href=&quot;routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; (= вложенных) RouterOutlet</target>
        </trans-unit>
        <trans-unit id="cfdd9b3462a479338e13a25805a7dc27b79d9eda" translate="yes" xml:space="preserve">
          <source>Store images in the &lt;code&gt;content/images&lt;/code&gt; directory in a folder with the same URL as the guide page. Images for this &quot;Authors Style Guide&quot; page belong in the &lt;code&gt;content/images/guide/docs-style-guide&lt;/code&gt; folder.</source>
          <target state="translated">Храните изображения в каталоге &lt;code&gt;content/images&lt;/code&gt; в папке с тем же URL-адресом, что и на странице руководства. Изображения для этой страницы &amp;laquo;Руководства по стилю авторов&amp;raquo; находятся в папке &lt;code&gt;content/images/guide/docs-style-guide&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ad7aff1545b9d1f97374f1368ea7cf2c5640b72" translate="yes" xml:space="preserve">
          <source>Store the callback function</source>
          <target state="translated">Хранить функцию обратного вызова</target>
        </trans-unit>
        <trans-unit id="d09993861d6f0e8bb21791faac138e64e72017dd" translate="yes" xml:space="preserve">
          <source>Store the change function</source>
          <target state="translated">Сохранить функцию изменения</target>
        </trans-unit>
        <trans-unit id="2917c752ee7cda1d6fe8f953f785c8563d7af0ab" translate="yes" xml:space="preserve">
          <source>Stores the HTML template to be selected on match.</source>
          <target state="translated">Сохраняет шаблон HTML,который будет выбран на соответствие.</target>
        </trans-unit>
        <trans-unit id="eee15be5321e455c5d3901a0e21c2d141f3a40fe" translate="yes" xml:space="preserve">
          <source>Stores the detached route.</source>
          <target state="translated">Хранит отдельный маршрут.</target>
        </trans-unit>
        <trans-unit id="4d3522cdb0ae0a90b17fbc4ff367b18c0f4cdc60" translate="yes" xml:space="preserve">
          <source>Storing a &lt;code&gt;null&lt;/code&gt; value should erase the previously stored value.</source>
          <target state="translated">Сохранение &lt;code&gt;null&lt;/code&gt; значения должно стереть ранее сохраненное значение.</target>
        </trans-unit>
        <trans-unit id="0b616462c661d3e538d4d24f804c11817a37c5cb" translate="yes" xml:space="preserve">
          <source>Storing a conditional result in a variable</source>
          <target state="translated">Хранение условного результата в переменной</target>
        </trans-unit>
        <trans-unit id="3fd59ae41b6519f4cc217d2214f4502810632ad2" translate="yes" xml:space="preserve">
          <source>Streamline releases with consolidated Angular versioning &amp;amp; branching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0479ff2a26e3cb50de04daa27bd3e106e08691" translate="yes" xml:space="preserve">
          <source>Streamlined &lt;a href=&quot;http#error-handling&quot;&gt;error handling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb58e54eade2e3692f42c15879de34341894444a" translate="yes" xml:space="preserve">
          <source>Strict mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda7b46d586a685101d4d20db26be15cbf747aea" translate="yes" xml:space="preserve">
          <source>Strict null checks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22617bef2ba49e8d6f8399d1e4797298ac7930c7" translate="yes" xml:space="preserve">
          <source>Strictness flag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9644d5734f03b7439ba40387bc3ec6021a0f2301" translate="yes" xml:space="preserve">
          <source>String Examples</source>
          <target state="translated">Примеры строк</target>
        </trans-unit>
        <trans-unit id="7c9eda6cd62c61583722eabd843198abec4b7263" translate="yes" xml:space="preserve">
          <source>String of URL parameters.</source>
          <target state="translated">Строка параметров URL-адреса.</target>
        </trans-unit>
        <trans-unit id="ded6fb5d3578e6f25e85fa375454f30a56c30e74" translate="yes" xml:space="preserve">
          <source>String representing a URL.</source>
          <target state="translated">Строка,представляющая URL-адрес.</target>
        </trans-unit>
        <trans-unit id="0f280dc35cba0f462991f583348033840f71c044" translate="yes" xml:space="preserve">
          <source>String widths available for date-time formats. The specific character widths are locale-specific. Examples are given for &lt;code&gt;en-US&lt;/code&gt;.</source>
          <target state="translated">Ширина строки доступна для форматов даты и времени. Ширина конкретного символа зависит от региона. Примеры приведены для &lt;code&gt;en-US&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6a8a3351cfd4833a09546bdefd4e5bfc730b525" translate="yes" xml:space="preserve">
          <source>String widths available for translations. The specific character widths are locale-specific. Examples are given for the word &quot;Sunday&quot; in English.</source>
          <target state="translated">Ширина струн доступна для переводов.Специфическая ширина символов зависит от локали.Примеры приведены для слова &quot;воскресенье&quot; на английском языке.</target>
        </trans-unit>
        <trans-unit id="3c396638f94f562746728eb2c2021c54bc0758da" translate="yes" xml:space="preserve">
          <source>String: Use the given string value instead of a code or a symbol. For example, an empty string will suppress the currency &amp;amp; symbol.</source>
          <target state="translated">String: использовать заданное строковое значение вместо кода или символа. Например, пустая строка будет подавлять валюту и символ.</target>
        </trans-unit>
        <trans-unit id="fa4c723eb81b8491af1570970a5d321d9aba6709" translate="yes" xml:space="preserve">
          <source>Strip the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; back to just its &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;, wrap the badge and name in an anchor element (&lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt;), and add a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; attribute to the anchor that is the same as in the dashboard template</source>
          <target state="translated">Зачистите &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; обратно только его &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; , оберните знак и имя в качестве элемента якоря ( &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; ), и добавьте &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; атрибут к якорю , который является таким же , как в шаблоне информационной панели</target>
        </trans-unit>
        <trans-unit id="e833ca2fc74f187b3c5fc922948ec8b9ce1a9301" translate="yes" xml:space="preserve">
          <source>Strip the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; back to just its &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;, wrap the badge and name in an anchor element (&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;), and add a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; attribute to the anchor that is the same as in the dashboard template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca86e4e4c4b88a4fd401574ce599d752ec15587" translate="yes" xml:space="preserve">
          <source>Structural Directives</source>
          <target state="translated">Структурные директивы</target>
        </trans-unit>
        <trans-unit id="44645931c6cf45d2d828f7b54fea901da303dcfa" translate="yes" xml:space="preserve">
          <source>Structural directives</source>
          <target state="translated">Структурные директивы</target>
        </trans-unit>
        <trans-unit id="8066b62e94107ae1169351af999664549945a21b" translate="yes" xml:space="preserve">
          <source>Structural directives are easy to recognize. An asterisk (*) precedes the directive attribute name as in this example.</source>
          <target state="translated">Структурные директивы легко распознать.Звездочка (*)предшествует имени атрибута директивы,как в этом примере.</target>
        </trans-unit>
        <trans-unit id="4ce0c591c6652f0c5882633624358c718ae028aa" translate="yes" xml:space="preserve">
          <source>Structural directives are responsible for HTML layout. They shape or reshape the DOM's &lt;em&gt;structure&lt;/em&gt;, typically by adding, removing, or manipulating elements.</source>
          <target state="translated">Структурные директивы отвечают за макет HTML. Они формируют или изменить форму DOM в &lt;em&gt;структуру&lt;/em&gt; , как правило , путем добавления, удаления или манипулирования элементов.</target>
        </trans-unit>
        <trans-unit id="2f3e2ce91332d9933f8575349e3da3f714f37a09" translate="yes" xml:space="preserve">
          <source>Structural directives are responsible for HTML layout. They shape or reshape the DOM's structure, typically by adding, removing, and manipulating the host elements to which they are attached.</source>
          <target state="translated">Структурные директивы отвечают за HTML верстку.Они формируют или перестраивают структуру DOM,обычно путем добавления,удаления и манипулирования элементами хоста,к которому они прикреплены.</target>
        </trans-unit>
        <trans-unit id="b01e264edb042adcbae3dc53ffa04a218c33e198" translate="yes" xml:space="preserve">
          <source>Structural directives&amp;mdash;change the DOM layout by adding and removing DOM elements.</source>
          <target state="translated">Структурные директивы - измените макет DOM, добавляя и удаляя элементы DOM.</target>
        </trans-unit>
        <trans-unit id="308d85bb1890fdb8ef6c304a2dd763fa3d3f93f9" translate="yes" xml:space="preserve">
          <source>Structure of Angular applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a9a5236faf443426aa357fec0328d9e9d466cb" translate="yes" xml:space="preserve">
          <source>Structure routes by nesting several routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14dde958744df7dbcb9c6e51cc208f4a18f03626" translate="yes" xml:space="preserve">
          <source>Structured</source>
          <target state="translated">Structured</target>
        </trans-unit>
        <trans-unit id="d7fec5be31f950094a6f4477e335eabd8c1861bc" translate="yes" xml:space="preserve">
          <source>Structured and immutable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64b6d8ab6a3167af6b211df05198e555a8951eb" translate="yes" xml:space="preserve">
          <source>Structures</source>
          <target state="translated">Structures</target>
        </trans-unit>
        <trans-unit id="c2ec7c3c78b23223f50b7bca6c140f83d82ecf3b" translate="yes" xml:space="preserve">
          <source>Stub method used to keep API compatible with AngularJS. This setting is configured through the LocationUpgradeModule's &lt;code&gt;&lt;a href=&quot;../../router/router#config&quot;&gt;config&lt;/a&gt;&lt;/code&gt; method in your Angular app.</source>
          <target state="translated">Метод заглушки, используемый для обеспечения совместимости API с AngularJS. Этот параметр настраивается с помощью метода &lt;code&gt;&lt;a href=&quot;../../router/router#config&quot;&gt;config&lt;/a&gt;&lt;/code&gt; LocationUpgradeModule в вашем приложении Angular.</target>
        </trans-unit>
        <trans-unit id="d11ca43d4e7bb12db82d4ca1ec775d9385e44e31" translate="yes" xml:space="preserve">
          <source>Stub method used to keep API compatible with AngularJS. This setting is configured through the LocationUpgradeModule's &lt;code&gt;config&lt;/code&gt; method in your Angular app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd07fedfd95e5214f741089e1d0a39e31c7b9e0" translate="yes" xml:space="preserve">
          <source>Stubbed &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; tests can confirm that a component with links and an outlet is setup properly, that the component has the links it should have, and that they are all pointing in the expected direction. These tests do not concern whether the app will succeed in navigating to the target component when the user clicks a link.</source>
          <target state="translated">Тесты с заглушкой &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; могут подтвердить, что компонент со ссылками и выходом настроен правильно, что компонент имеет ссылки, которые он должен иметь, и что все они указывают в ожидаемом направлении. Эти тесты не касаются того, удастся ли приложению перейти к целевому компоненту, когда пользователь щелкает ссылку.</target>
        </trans-unit>
        <trans-unit id="354563d6d28e8670ae6ca88c776b6b1e603ace84" translate="yes" xml:space="preserve">
          <source>Stubbing the RouterLink and RouterOutlet is the best option for such limited testing goals. Relying on the real router would make them brittle. They could fail for reasons unrelated to the component. For example, a navigation guard could prevent an unauthorized user from visiting the &lt;code&gt;HeroListComponent&lt;/code&gt;. That's not the fault of the &lt;code&gt;AppComponent&lt;/code&gt; and no change to that component could cure the failed test.</source>
          <target state="translated">Заглушка RouterLink и RouterOutlet - лучший вариант для таких ограниченных целей тестирования. Полагаясь на настоящий роутер, они станут хрупкими. Они могут потерпеть неудачу по причинам, не связанным с компонентом. Например, защита навигации может препятствовать тому, чтобы неавторизованный пользователь посетил &lt;code&gt;HeroListComponent&lt;/code&gt; . Это не ошибка &lt;code&gt;AppComponent&lt;/code&gt; , и никакие изменения в этом компоненте не могут вылечить проваленный тест.</target>
        </trans-unit>
        <trans-unit id="bdbd617c17e607896ba72fd053141808cddc6b7f" translate="yes" xml:space="preserve">
          <source>Stubbing unneeded components</source>
          <target state="translated">Надрезание ненужных компонентов</target>
        </trans-unit>
        <trans-unit id="a86acaeeac75377170e5ebeec6d810b33b428d4e" translate="yes" xml:space="preserve">
          <source>Studying the &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_if.ts&quot;&gt;source code for &lt;code&gt;NgIf&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_for_of.ts&quot;&gt;&lt;code&gt;NgForOf&lt;/code&gt;&lt;/a&gt; is a great way to learn more.</source>
          <target state="translated">Изучение &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_if.ts&quot;&gt;исходного кода для &lt;code&gt;NgIf&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/common/src/directives/ng_for_of.ts&quot;&gt; &lt;code&gt;NgForOf&lt;/code&gt; &lt;/a&gt; - отличный способ узнать больше.</target>
        </trans-unit>
        <trans-unit id="99a0efc6cfd85d8ff2732a6718140f822cb90472" translate="yes" xml:space="preserve">
          <source>Style</source>
          <target state="translated">Style</target>
        </trans-unit>
        <trans-unit id="8655d27a8c958b7c48581306ee9683f025d0cd25" translate="yes" xml:space="preserve">
          <source>Style 01-01</source>
          <target state="translated">Стиль 01-01</target>
        </trans-unit>
        <trans-unit id="4aea90a1ae5f7e9d4c6650d3266329a8cecc8b43" translate="yes" xml:space="preserve">
          <source>Style 01-02</source>
          <target state="translated">Стиль 01-02</target>
        </trans-unit>
        <trans-unit id="f55a6e154fc6932171773407a6c17fdcd900b901" translate="yes" xml:space="preserve">
          <source>Style 02-01</source>
          <target state="translated">Стиль 02-01</target>
        </trans-unit>
        <trans-unit id="6fddbd8edac99f78150e7c1d42725d5789785492" translate="yes" xml:space="preserve">
          <source>Style 02-02</source>
          <target state="translated">Стиль 02-02</target>
        </trans-unit>
        <trans-unit id="e83e665367400b616d297ea377dbc6119ba6cbdb" translate="yes" xml:space="preserve">
          <source>Style 02-03</source>
          <target state="translated">Стиль 02-03</target>
        </trans-unit>
        <trans-unit id="6144b91d5b883e749f4a6dadb98b308696451257" translate="yes" xml:space="preserve">
          <source>Style 02-04</source>
          <target state="translated">Стиль 02-04</target>
        </trans-unit>
        <trans-unit id="706d717fa1cd34d44b82ec886fa969af7dd448eb" translate="yes" xml:space="preserve">
          <source>Style 02-05</source>
          <target state="translated">Стиль 02-05</target>
        </trans-unit>
        <trans-unit id="e5e296afaae2339d2d10b1d0d70d5ea42a6e134e" translate="yes" xml:space="preserve">
          <source>Style 02-06</source>
          <target state="translated">Стиль 02-06</target>
        </trans-unit>
        <trans-unit id="700efbe18a84b4498ff0a5ebd5c962481af97e6c" translate="yes" xml:space="preserve">
          <source>Style 02-07</source>
          <target state="translated">Стиль 02-07</target>
        </trans-unit>
        <trans-unit id="fa617f1fef663a84190b425a3e364b28ce517f96" translate="yes" xml:space="preserve">
          <source>Style 02-08</source>
          <target state="translated">Стиль 02-08</target>
        </trans-unit>
        <trans-unit id="493dae10b66d2babf905fe61eeb564d21b557225" translate="yes" xml:space="preserve">
          <source>Style 02-09</source>
          <target state="translated">Стиль 02-09</target>
        </trans-unit>
        <trans-unit id="b929d7404011b3f0cfc152ad9382a9949a1cda71" translate="yes" xml:space="preserve">
          <source>Style 02-10</source>
          <target state="translated">Стиль 02-10</target>
        </trans-unit>
        <trans-unit id="a3ef104ae9961a0a29543ccff47fb734c689f6bc" translate="yes" xml:space="preserve">
          <source>Style 02-11</source>
          <target state="translated">Стиль 02-11</target>
        </trans-unit>
        <trans-unit id="cf0a59581276c0fb0ac17b920d8ab64e28df0f46" translate="yes" xml:space="preserve">
          <source>Style 02-12</source>
          <target state="translated">Стиль 02-12</target>
        </trans-unit>
        <trans-unit id="0b80a1901d32e9db876171df5848b9de86c71304" translate="yes" xml:space="preserve">
          <source>Style 04-01</source>
          <target state="translated">Стиль 04-01</target>
        </trans-unit>
        <trans-unit id="77218883e03332c65a62466d16ddcc85105e9150" translate="yes" xml:space="preserve">
          <source>Style 04-02</source>
          <target state="translated">Стиль 04-02</target>
        </trans-unit>
        <trans-unit id="ce385b3d475a45592807dd22eefd3c6861e19cdf" translate="yes" xml:space="preserve">
          <source>Style 04-03</source>
          <target state="translated">Стиль 04-03</target>
        </trans-unit>
        <trans-unit id="c6882556fc4e054c2e09668d6fe2262be15b2173" translate="yes" xml:space="preserve">
          <source>Style 04-04</source>
          <target state="translated">Стиль 04-04</target>
        </trans-unit>
        <trans-unit id="f25601cdb2f6d47d54397476b43ec628290c8813" translate="yes" xml:space="preserve">
          <source>Style 04-05</source>
          <target state="translated">Стиль 04-05</target>
        </trans-unit>
        <trans-unit id="cd207c5b27af4094bc7fcece72048e9fe4b0b2c3" translate="yes" xml:space="preserve">
          <source>Style 04-06</source>
          <target state="translated">Стиль 04-06</target>
        </trans-unit>
        <trans-unit id="29b1fb989c6d105f3c801e3564c0418a230b7adb" translate="yes" xml:space="preserve">
          <source>Style 04-07</source>
          <target state="translated">Стиль 04-07</target>
        </trans-unit>
        <trans-unit id="d63bbc77247f81425c9c05859638f65b164462ef" translate="yes" xml:space="preserve">
          <source>Style 04-08</source>
          <target state="translated">Стиль 04-08</target>
        </trans-unit>
        <trans-unit id="dca1a11207bd921006f3ac8d762e893d2d645267" translate="yes" xml:space="preserve">
          <source>Style 04-09</source>
          <target state="translated">Стиль 04-09</target>
        </trans-unit>
        <trans-unit id="6b7381fb1b2ee37a66fe9ef9dd56806aa709ad75" translate="yes" xml:space="preserve">
          <source>Style 04-10</source>
          <target state="translated">Стиль 04-10</target>
        </trans-unit>
        <trans-unit id="8a233863a4b876d1c19bd360a9eec6d03c089985" translate="yes" xml:space="preserve">
          <source>Style 04-11</source>
          <target state="translated">Стиль 04-11</target>
        </trans-unit>
        <trans-unit id="a060c3d3b207a8225c19405bbbce8cbf4f36a32c" translate="yes" xml:space="preserve">
          <source>Style 04-12</source>
          <target state="translated">Стиль 04-12</target>
        </trans-unit>
        <trans-unit id="0c7621709de22e7cba3f9615798b8f5f3a64e76b" translate="yes" xml:space="preserve">
          <source>Style 05-02</source>
          <target state="translated">Стиль 05-02</target>
        </trans-unit>
        <trans-unit id="738649793a0b0ae075f2abf3b085c00b61e2cdf7" translate="yes" xml:space="preserve">
          <source>Style 05-03</source>
          <target state="translated">Стиль 05-03</target>
        </trans-unit>
        <trans-unit id="6cb17f91cfef9aa5b36b073b5e5ee75f36f7144c" translate="yes" xml:space="preserve">
          <source>Style 05-04</source>
          <target state="translated">Стиль 05-04</target>
        </trans-unit>
        <trans-unit id="c5353267445517bfdb843d1f18e524b3c9f1d89e" translate="yes" xml:space="preserve">
          <source>Style 05-12</source>
          <target state="translated">Стиль 05-12</target>
        </trans-unit>
        <trans-unit id="81e51acb9e3b52aaf70ff5492fe23a9bdb2a285a" translate="yes" xml:space="preserve">
          <source>Style 05-13</source>
          <target state="translated">Стиль 05-13</target>
        </trans-unit>
        <trans-unit id="72bf5c89871cf10f99b40d49149e1bdaf9e6590c" translate="yes" xml:space="preserve">
          <source>Style 05-14</source>
          <target state="translated">Стиль 05-14</target>
        </trans-unit>
        <trans-unit id="3ea64ee61c97d914db39262c73f88bff714ab595" translate="yes" xml:space="preserve">
          <source>Style 05-15</source>
          <target state="translated">Стиль 05-15</target>
        </trans-unit>
        <trans-unit id="238870d3a3bd622e67bfb4ac9f6ba99e117997c3" translate="yes" xml:space="preserve">
          <source>Style 05-16</source>
          <target state="translated">Стиль 05-16</target>
        </trans-unit>
        <trans-unit id="fa326bcb9a5dc57a51e1acfae6a4dea8cbd7f445" translate="yes" xml:space="preserve">
          <source>Style 05-17</source>
          <target state="translated">Стиль 05-17</target>
        </trans-unit>
        <trans-unit id="4ab096f0a78a037c3de35e63e70d27ce12ee3e43" translate="yes" xml:space="preserve">
          <source>Style 06-01</source>
          <target state="translated">Стиль 06-01</target>
        </trans-unit>
        <trans-unit id="5c9da24e465d26d22cc53eb4c417f9c22c4720f5" translate="yes" xml:space="preserve">
          <source>Style 06-03</source>
          <target state="translated">Стиль 06-03</target>
        </trans-unit>
        <trans-unit id="0f0d6f618ebd672575ae4573cea04bd000b11309" translate="yes" xml:space="preserve">
          <source>Style 07-01</source>
          <target state="translated">Стиль 07-01</target>
        </trans-unit>
        <trans-unit id="41700c9627c1716b093148da4f4ebbefad9e7201" translate="yes" xml:space="preserve">
          <source>Style 07-02</source>
          <target state="translated">Стиль 07-02</target>
        </trans-unit>
        <trans-unit id="2816de62afb72075811187fe54cfff1f66291ca1" translate="yes" xml:space="preserve">
          <source>Style 07-03</source>
          <target state="translated">Стиль 07-03</target>
        </trans-unit>
        <trans-unit id="7806af9da1ab012ff76791452da2609316bfa9af" translate="yes" xml:space="preserve">
          <source>Style 07-04</source>
          <target state="translated">Стиль 07-04</target>
        </trans-unit>
        <trans-unit id="44b3e7183c08194ef947158714922a67e94ddb8f" translate="yes" xml:space="preserve">
          <source>Style 08-01</source>
          <target state="translated">Стиль 08-01</target>
        </trans-unit>
        <trans-unit id="0ee5f0d1efe5d21182c59dc81789adf1c4a9e43b" translate="yes" xml:space="preserve">
          <source>Style 09-01</source>
          <target state="translated">Стиль 09-01</target>
        </trans-unit>
        <trans-unit id="0810e6e1806946bed3058d5e8a4c6ea1abae7725" translate="yes" xml:space="preserve">
          <source>Style A-01</source>
          <target state="translated">Стиль A-01</target>
        </trans-unit>
        <trans-unit id="1efe377d1d77ee17e1305157c4de46739044c399" translate="yes" xml:space="preserve">
          <source>Style A-02</source>
          <target state="translated">Стиль A-02</target>
        </trans-unit>
        <trans-unit id="74b4f2ed89813f9a73f7270d61c097ff9c059dd6" translate="yes" xml:space="preserve">
          <source>Style Guide</source>
          <target state="translated">Руководство по стилю</target>
        </trans-unit>
        <trans-unit id="8a24de837c2eb6cdf18450f40f67b38197599a83" translate="yes" xml:space="preserve">
          <source>Style Guide: Pipe Names</source>
          <target state="translated">Руководство по стилю:Имена труб</target>
        </trans-unit>
        <trans-unit id="397f6a9cc1d4c2625403eb5b5a0f669d44e66ead" translate="yes" xml:space="preserve">
          <source>Style Sanitization for &lt;code&gt;[&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;]&lt;/code&gt; and &lt;code&gt;[style.prop]&lt;/code&gt; bindings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9307b7282569a9e06cf9f4b80692549de59cb8e8" translate="yes" xml:space="preserve">
          <source>Style binding</source>
          <target state="translated">Связь по стилю</target>
        </trans-unit>
        <trans-unit id="d17d4ed499d56ddab01a94243ac75d53250a9e49" translate="yes" xml:space="preserve">
          <source>Style binding syntax resembles property binding. Instead of an element property between brackets, start with the prefix &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt;, followed by a dot (&lt;code&gt;.&lt;/code&gt;) and the name of a CSS style property: &lt;code&gt;[style.style-property]&lt;/code&gt;.</source>
          <target state="translated">Синтаксис привязки стилей напоминает привязку свойств. Вместо свойства элемента в скобках начните со &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;&lt;/code&gt; префикса , за которым следует точка ( &lt;code&gt;.&lt;/code&gt; ) И имя свойства стиля CSS: &lt;code&gt;[style.style-property]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="798cb2eb99018bc816f3076a0a8bf26c5814e7f6" translate="yes" xml:space="preserve">
          <source>Style files in component metadata</source>
          <target state="translated">Файлы стилей в метаданных компонентов</target>
        </trans-unit>
        <trans-unit id="ebb991554b68f911cb61aa2b97566eaaaad5a276" translate="yes" xml:space="preserve">
          <source>Style guide for Documentation contributions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b3e042bcc6d7cd5e0d140224554ba252a41539" translate="yes" xml:space="preserve">
          <source>Style preprocessor options</source>
          <target state="translated">Опции препроцессора стиля</target>
        </trans-unit>
        <trans-unit id="1aa693154d6248496022ececdb1dada7746d639d" translate="yes" xml:space="preserve">
          <source>Style scope</source>
          <target state="translated">Область стиля</target>
        </trans-unit>
        <trans-unit id="db43570498a47b502419948a69d84fb9e317cd4f" translate="yes" xml:space="preserve">
          <source>Style sheets</source>
          <target state="translated">Таблицы стилей</target>
        </trans-unit>
        <trans-unit id="17a92ec390194ca839debbe0378b1e9f90a4c3f5" translate="yes" xml:space="preserve">
          <source>Style sheets give your application a nice look. In AngularJS, you specify the style sheets for your entire application. As the application grows over time, the styles for the many parts of the application merge, which can cause unexpected results. In Angular, you can still define style sheets for your entire application. But now you can also encapsulate a style sheet within a specific component.</source>
          <target state="translated">Простыни стиля придают вашему заявлению красивый вид.В AngularJS вы указываете таблицы стилей для всего вашего приложения.По мере роста приложения с течением времени стили для многих частей приложения сливаются,что может привести к неожиданным результатам.В программе AngularJS можно задавать таблицы стилей для всего приложения.Но теперь вы также можете инкапсулировать таблицу стилей внутри определенного компонента.</target>
        </trans-unit>
        <trans-unit id="b7a277e6e718762252d1cac6bb0b6ea9b68bdf9c" translate="yes" xml:space="preserve">
          <source>Style strings added to the &lt;code&gt;@&lt;a href=&quot;../api/core/component#styles&quot;&gt;Component.styles&lt;/a&gt;&lt;/code&gt; array &lt;em&gt;must be written in CSS&lt;/em&gt; because the CLI cannot apply a preprocessor to inline styles.</source>
          <target state="translated">Строки стилей, добавленные в массив &lt;code&gt;@&lt;a href=&quot;../api/core/component#styles&quot;&gt;Component.styles&lt;/a&gt;&lt;/code&gt; &lt;em&gt; должны быть написаны на CSS,&lt;/em&gt; потому что CLI не может применить препроцессор к встроенным стилям.</target>
        </trans-unit>
        <trans-unit id="e113e16bbf082f9490cbf2b44611438e1391e832" translate="yes" xml:space="preserve">
          <source>Style the heroes</source>
          <target state="translated">Стиль героев</target>
        </trans-unit>
        <trans-unit id="5eab5630440ccf019fc5dc1802d69037b944404f" translate="yes" xml:space="preserve">
          <source>Style the selected hero</source>
          <target state="translated">Стиль выбранного героя</target>
        </trans-unit>
        <trans-unit id="82a3d10493dce218efe0f7977bfae55ae3c0ccfb" translate="yes" xml:space="preserve">
          <source>Style vocabulary</source>
          <target state="translated">Стильный словарь</target>
        </trans-unit>
        <trans-unit id="47f613f4bbd7675d5feb1ce896b4d6efd80377bc" translate="yes" xml:space="preserve">
          <source>StyleUrls</source>
          <target state="translated">StyleUrls</target>
        </trans-unit>
        <trans-unit id="5c2529a7512b8456ecfa00f92d655877dd8b90b6" translate="yes" xml:space="preserve">
          <source>Styles and scripts configuration</source>
          <target state="translated">Настройка стилей и скриптов</target>
        </trans-unit>
        <trans-unit id="0edc5b2d63da3d85ebd67bd3beba07075c522b86" translate="yes" xml:space="preserve">
          <source>Styles and stylesheets identified in &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata are scoped to that specific component. The &lt;code&gt;heroes.component.css&lt;/code&gt; styles apply only to the &lt;code&gt;HeroesComponent&lt;/code&gt; and don't affect the outer HTML or the HTML in any other component.</source>
          <target state="translated">Стили и таблицы стилей, определенные в метаданных &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; относятся к этому конкретному компоненту. В &lt;code&gt;heroes.component.css&lt;/code&gt; стили применяются только к &lt;code&gt;HeroesComponent&lt;/code&gt; и не влияют на внешний HTML или HTML в любом другом компоненте.</target>
        </trans-unit>
        <trans-unit id="fd5b0bce26d4818e609d1581d3654fa0753fd8fd" translate="yes" xml:space="preserve">
          <source>Styles configuration</source>
          <target state="translated">Конфигурация стилей</target>
        </trans-unit>
        <trans-unit id="1378d81e695cef4d64e37c64b8e8eff7fff2d2c2" translate="yes" xml:space="preserve">
          <source>Styles in component metadata</source>
          <target state="translated">Стили в метаданных компонентов</target>
        </trans-unit>
        <trans-unit id="23aae4ba9cb7cd71cc0f2c7b6470f5ac5c21722b" translate="yes" xml:space="preserve">
          <source>Styling the host and child components</source>
          <target state="translated">Стилизация компонентов хозяина и ребенка</target>
        </trans-unit>
        <trans-unit id="6e1cd724f97ed48d626d171bc1b8f9491fcd67e0" translate="yes" xml:space="preserve">
          <source>Subclasses</source>
          <target state="translated">Subclasses</target>
        </trans-unit>
        <trans-unit id="9ce6ba148fe8d9ab4a1efa44f043d11727e7f6ee" translate="yes" xml:space="preserve">
          <source>Sublime Text</source>
          <target state="translated">Великолепный Текст</target>
        </trans-unit>
        <trans-unit id="f5d46536917e62bd1be2d18f9d2c7d548fb75de6" translate="yes" xml:space="preserve">
          <source>Submit the form with &lt;code&gt;ngSubmit&lt;/code&gt;</source>
          <target state="translated">Отправьте форму с помощью &lt;code&gt;ngSubmit&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f52f8c0e6a97223779d22bf66c8e2fada6102bec" translate="yes" xml:space="preserve">
          <source>Submitting the form isn't terribly dramatic at the moment.</source>
          <target state="translated">Отправка формы в данный момент не очень драматична.</target>
        </trans-unit>
        <trans-unit id="d6981f74767d6c63d6062ad21b3bdfcd0d0d6602" translate="yes" xml:space="preserve">
          <source>Subscribe</source>
          <target state="translated">Subscribe</target>
        </trans-unit>
        <trans-unit id="ad97311e7c2fb91310858358719a941b418273d5" translate="yes" xml:space="preserve">
          <source>Subscribe and listen to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices&quot;&gt;Web Push Notifications&lt;/a&gt; through Angular Service Worker.</source>
          <target state="translated">Подпишитесь и слушайте &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Push_API/Best_Practices&quot;&gt;Web Push-уведомления&lt;/a&gt; через Angular Service Worker.</target>
        </trans-unit>
        <trans-unit id="55ffbbfe98a9e67c323baa04596ff3f3634355e1" translate="yes" xml:space="preserve">
          <source>Subscribe in &lt;code&gt;HeroesComponent&lt;/code&gt;</source>
          <target state="translated">Подписаться в &lt;code&gt;HeroesComponent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4147506e4124de00f100ef91b8a3f1c59c78221c" translate="yes" xml:space="preserve">
          <source>Subscribe to update notifications from the Service Worker, trigger update checks, and forcibly activate updates.</source>
          <target state="translated">Подпишитесь на уведомления об обновлениях от Service Worker,запустите проверку обновлений и принудительно активируйте обновления.</target>
        </trans-unit>
        <trans-unit id="a87fcf31451c4a5845a5c94b268b44533e029a5f" translate="yes" xml:space="preserve">
          <source>Subscribes to Web Push Notifications, after requesting and receiving user permission.</source>
          <target state="translated">Подписывается на Web Push-уведомления,после запроса и получения разрешения пользователя.</target>
        </trans-unit>
        <trans-unit id="1e24453f7659eb1b1111775a54afd763fe517caf" translate="yes" xml:space="preserve">
          <source>Subscribes to a host element event (&lt;code&gt;click&lt;/code&gt;) with a directive/component method (&lt;code&gt;onClick&lt;/code&gt;), optionally passing an argument (&lt;code&gt;$event&lt;/code&gt;).</source>
          <target state="translated">Подписывается на событие элемента хоста ( &lt;code&gt;click&lt;/code&gt; ) с помощью метода директивы / компонента ( &lt;code&gt;onClick&lt;/code&gt; ), опционально передавая аргумент ( &lt;code&gt;$event&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d095583b0ad0de9ed206550de2ce051cda4763bd" translate="yes" xml:space="preserve">
          <source>Subscribes to the platform's &lt;code&gt;popState&lt;/code&gt; events.</source>
          <target state="translated">Подписывается на события платформы &lt;code&gt;popState&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc85e879262a5f99c43a2b322c9fb5b8fbe5a21d" translate="yes" xml:space="preserve">
          <source>Subscribing</source>
          <target state="translated">Subscribing</target>
        </trans-unit>
        <trans-unit id="8fde48f31aff21f9652066ed6732f7e7dbae712e" translate="yes" xml:space="preserve">
          <source>Subscription</source>
          <target state="translated">Subscription</target>
        </trans-unit>
        <trans-unit id="e07e10d710390d6f19bc8d0e4fa6f86275165014" translate="yes" xml:space="preserve">
          <source>Subsequent applications that you generate in the workspace reside in the &lt;code&gt;projects/&lt;/code&gt; subfolder.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473fb3dae53fd356007426bcc001827eca1f4ff9" translate="yes" xml:space="preserve">
          <source>Subsequent apps that you generate in the workspace reside in the &lt;code&gt;projects/&lt;/code&gt; subfolder.</source>
          <target state="translated">Последующие приложения, которые вы генерируете в рабочей области, находятся в &lt;code&gt;projects/&lt;/code&gt; подпапках.</target>
        </trans-unit>
        <trans-unit id="bc7af4ebabce4f8a546ee140a3846cf69bfa6c68" translate="yes" xml:space="preserve">
          <source>Succeeds even if there was linting errors.</source>
          <target state="translated">Успех,даже если были ошибки при подтасовке.</target>
        </trans-unit>
        <trans-unit id="c87c69d42dd464b89184cb9c765feccaddfed9cc" translate="yes" xml:space="preserve">
          <source>Such objects don't have application interfaces and therefore aren't well represented by a class. They're better represented by a token that is both unique and symbolic, a JavaScript object that has a friendly name but won't conflict with another token that happens to have the same name.</source>
          <target state="translated">Такие объекты не имеют прикладных интерфейсов и поэтому плохо представлены классом.Они лучше представлены токеном,который одновременно уникален и символичен,JavaScript-объектом,который имеет дружественное имя,но не конфликтует с другим токеном,который случайно имеет такое же имя.</target>
        </trans-unit>
        <trans-unit id="55c29209f134a45a30d7eba7a07fc67d5c7d8a6b" translate="yes" xml:space="preserve">
          <source>Such partial and intermediate files need their own names. Follow the doc sample naming convention. Add a number before the file extension as illustrated here:</source>
          <target state="translated">Такие частичные и промежуточные файлы нуждаются в собственных именах.Соблюдайте соглашение об именовании образца документа.Добавьте номер перед расширением файла,как показано здесь:</target>
        </trans-unit>
        <trans-unit id="26a490bcaf4c8b593e38570b5b856dec6204c072" translate="yes" xml:space="preserve">
          <source>Such tests are easy to find.</source>
          <target state="translated">Такие тесты легко найти.</target>
        </trans-unit>
        <trans-unit id="06aee9edd367cbab035bb100ff86698218a24a6c" translate="yes" xml:space="preserve">
          <source>Such tests require creating the component's host element in the browser DOM, as Angular does, and investigating the component class's interaction with the DOM as described by its template.</source>
          <target state="translated">Такие тесты требуют создания элемента хоста компонента в DOM браузера,как это делает Angular,и исследования взаимодействия класса компонента с DOM,как это описано в его шаблоне.</target>
        </trans-unit>
        <trans-unit id="5057182ef8774088bdb5234ca8a8f6c39dfa86d5" translate="yes" xml:space="preserve">
          <source>Suffix to add when computing the name of the factory module for a given module name.</source>
          <target state="translated">Суффикс для добавления при вычислении имени заводского модуля для данного имени модуля.</target>
        </trans-unit>
        <trans-unit id="c694c6baead0b9fec8b7d19e3c3b3e94e68c5559" translate="yes" xml:space="preserve">
          <source>Suggested polyfills</source>
          <target state="translated">Предлагаемые полифили</target>
        </trans-unit>
        <trans-unit id="12b71c3e0fe5f7c0b8d17cc03186e281412da4a8" translate="yes" xml:space="preserve">
          <source>Summary</source>
          <target state="translated">Summary</target>
        </trans-unit>
        <trans-unit id="617c82647428edc0b8947b00ed87b2c7615c71ce" translate="yes" xml:space="preserve">
          <source>Summary of NgModule categories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a34ea7dcfc6ffbb22285c0e1b244755a431fe7" translate="yes" xml:space="preserve">
          <source>Super-constructor for all responses.</source>
          <target state="translated">Суперконструктор для всех ответов.</target>
        </trans-unit>
        <trans-unit id="4d9b4eacf1004ed910ee4ed98ce82a901369c93e" translate="yes" xml:space="preserve">
          <source>Supplies a testing module for the Angular &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; subsystem.</source>
          <target state="translated">Поставляет модуль тестирования для подсистемы Angular &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d841e33650f585cec77c125afc74e973ec895855" translate="yes" xml:space="preserve">
          <source>Supplies a testing module for the Angular &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; subsystem.</source>
          <target state="translated">Поставляет модуль тестирования для подсистемы Angular &lt;code&gt;&lt;a href=&quot;router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="045319e139a1cdf2bb45fffa08fb6bb246b89dfd" translate="yes" xml:space="preserve">
          <source>Supplies a testing module for the Angular HTTP subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55277d6ef9d2d3851d1d9e31c6e90e54cec4e34a" translate="yes" xml:space="preserve">
          <source>Supplies a testing module for the Angular JIT platform-browser subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860a571d40871f1c7221ca753643e72d71044524" translate="yes" xml:space="preserve">
          <source>Supplies a testing module for the Angular platform server subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c892ec60aeecded0cea68c414ec96ed4333769" translate="yes" xml:space="preserve">
          <source>Supplies a testing module for the Angular platform-browser subsystem.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ba80b3498b6fa8d9588a8fe9920e3f66104515" translate="yes" xml:space="preserve">
          <source>Supplies infrastructure for testing functionality supplied by &lt;code&gt;@angular/common&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80485cb2241d9c8f4b8829fb01df6a413c2c2e8" translate="yes" xml:space="preserve">
          <source>Supplies testing functions for the AngularJS-to-Angular upgrade path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed92fa9e8a12ebddb7e4fe08847d953cf04e775b" translate="yes" xml:space="preserve">
          <source>Supply a custom provider with &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Поставьте нестандартного провайдера &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e1e6f832df69221f0aa5cf24cd67ccbfa8534afd" translate="yes" xml:space="preserve">
          <source>Supply data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb79f11cce2a7fd28761b6c2d36e0221260dd42f" translate="yes" xml:space="preserve">
          <source>Support adding directives to host elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb6bfb683b08f86999ae88758ea765b871ea0886" translate="yes" xml:space="preserve">
          <source>Support for both &lt;a href=&quot;forms&quot;&gt;template-driven&lt;/a&gt; and &lt;a href=&quot;reactive-forms&quot;&gt;reactive forms&lt;/a&gt;. For information about choosing the best forms approach for your app, see &lt;a href=&quot;forms-overview&quot;&gt;Introduction to forms&lt;/a&gt;.</source>
          <target state="translated">Поддержка &lt;a href=&quot;forms&quot;&gt;шаблонных&lt;/a&gt; и &lt;a href=&quot;reactive-forms&quot;&gt;реактивных форм&lt;/a&gt; . Для получения информации о выборе наилучшего подхода к формам для вашего приложения см. &lt;a href=&quot;forms-overview&quot;&gt;Введение в формы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6015aea6d6a423f3219184739c58237f25d45fcf" translate="yes" xml:space="preserve">
          <source>Support for the development cycle</source>
          <target state="translated">Поддержка цикла развития</target>
        </trans-unit>
        <trans-unit id="372ca4c2c8a38a4b2b242eed719cb1a8e9d99f89" translate="yes" xml:space="preserve">
          <source>Support for the various Angular run-time platforms is provided by the &lt;code&gt;@angular/platform-*&lt;/code&gt; packages. These packages allow applications that make use of &lt;code&gt;@angular/core&lt;/code&gt; and &lt;code&gt;@angular/common&lt;/code&gt; to execute in different environments by providing implementation for gathering user input and rendering UIs for the given platform. Isolating platform-specific functionality allows the developer to make platform-independent use of the rest of the framework.</source>
          <target state="translated">Поддержка различных рабочих платформ Angular обеспечивается пакетами &lt;code&gt;@angular/platform-*&lt;/code&gt; . Эти пакеты позволяют приложениям, использующим &lt;code&gt;@angular/core&lt;/code&gt; и &lt;code&gt;@angular/common&lt;/code&gt; работать в разных средах, обеспечивая реализацию для сбора пользовательского ввода и визуализации пользовательских интерфейсов для данной платформы. Выделение платформо-зависимой функциональности позволяет разработчику независимо от платформы использовать остальную часть платформы.</target>
        </trans-unit>
        <trans-unit id="c0412188bcfb5b8097ddeac6298bca4025080b18" translate="yes" xml:space="preserve">
          <source>Support for using &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; element selector was deprecated in v6. It has been deprecated to be consistent with other core Angular selectors, which are typically written in kebab-case.</source>
          <target state="translated">Поддержка использования &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; элементов ngForm устарела в v6. Это устарело, чтобы быть совместимым с другими основными угловыми селекторами, которые обычно пишутся в кебаб-кейсе.</target>
        </trans-unit>
        <trans-unit id="830687a29f3f8ae36893b51a852df8d7e3509f45" translate="yes" xml:space="preserve">
          <source>Support for using &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; element selector has been deprecated in Angular v6 and will be removed in Angular v9.</source>
          <target state="translated">Поддержка использования &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; элементов ngForm устарела в Angular v6 и будет удалена в Angular v9.</target>
        </trans-unit>
        <trans-unit id="f00229925b0e66caebd0648fdfc095b3f90b1c43" translate="yes" xml:space="preserve">
          <source>Support for using the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; input property and &lt;code&gt;ngModelChange&lt;/code&gt; event with reactive form directives has been deprecated in Angular v6 and will be removed in a future version of Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a564022cdf9de9547b8c4914ac55334ba4f6035c" translate="yes" xml:space="preserve">
          <source>Support for using the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; input property and &lt;code&gt;ngModelChange&lt;/code&gt; event with reactive form directives was deprecated in version 6.</source>
          <target state="translated">Поддержка использования &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; ввода &lt;code&gt;ngModelChange&lt;/code&gt; события ngModelChange с директивами реагирующей формы устарела в версии 6.</target>
        </trans-unit>
        <trans-unit id="4dc6f7050ef887eb8acaabcc76bf58bfae24c1a4" translate="yes" xml:space="preserve">
          <source>Support for using the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; input property and &lt;code&gt;ngModelChange&lt;/code&gt; event with reactive form directives has been deprecated in Angular v6 and is scheduled for removal in a future version of Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ab9213c409bdce1f6766b7561afbb3df924eb0" translate="yes" xml:space="preserve">
          <source>Support for using the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; input property and &lt;code&gt;ngModelChange&lt;/code&gt; event with reactive form directives has been deprecated in Angular v6 and will be removed in Angular v7.</source>
          <target state="translated">Поддержка использования &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; ввода &lt;code&gt;ngModelChange&lt;/code&gt; события ngModelChange с директивами реактивной формы устарела в Angular v6 и будет удалена в Angular v7.</target>
        </trans-unit>
        <trans-unit id="34ea22dd63bbc9c4be88fea09a83dfacdd1533b4" translate="yes" xml:space="preserve">
          <source>Support more macroTasks</source>
          <target state="translated">Поддержка большего количества макрозадач</target>
        </trans-unit>
        <trans-unit id="a09e60728ec31e51301e3117166fddf94a8baea0" translate="yes" xml:space="preserve">
          <source>Support multiple validators by passing the functions in as an array.</source>
          <target state="translated">Поддержка нескольких валидаторов путем передачи функций в виде массива.</target>
        </trans-unit>
        <trans-unit id="42d644d79b7c3f0b258e0ff900434475b7495f55" translate="yes" xml:space="preserve">
          <source>Support packages</source>
          <target state="translated">Пакеты поддержки</target>
        </trans-unit>
        <trans-unit id="55b111d8249f52e207f12ff5fe56fb3473ed81b2" translate="yes" xml:space="preserve">
          <source>Support policy and schedule</source>
          <target state="translated">Политика и график поддержки</target>
        </trans-unit>
        <trans-unit id="48012bbbd369e7cf9dbf01a37cf616f579aef634" translate="yes" xml:space="preserve">
          <source>Supported Features</source>
          <target state="translated">Поддерживаемые функции</target>
        </trans-unit>
        <trans-unit id="9c185d3e1b7aa6c33b8cde226ee45b7e6534974e" translate="yes" xml:space="preserve">
          <source>Supported binary operator</source>
          <target state="translated">Поддерживаемый двоичный оператор</target>
        </trans-unit>
        <trans-unit id="6dc1054caa7ede6eabeaab20afa9b88a18116373" translate="yes" xml:space="preserve">
          <source>Supported classes and functions</source>
          <target state="translated">Поддерживаемые классы и функции</target>
        </trans-unit>
        <trans-unit id="452c87fb69e1c927c2dffbf878f867c26c6a461b" translate="yes" xml:space="preserve">
          <source>Supported decorators</source>
          <target state="translated">Поддерживаемые декораторы</target>
        </trans-unit>
        <trans-unit id="a9637b3c337e189d588ceb71a8c3e0c61c7b3d62" translate="yes" xml:space="preserve">
          <source>Supported natively as of version 63. In older versions: Set the &lt;code&gt;dom.webcomponents.enabled&lt;/code&gt; and &lt;code&gt;dom.webcomponents.customelements.enabled&lt;/code&gt; preferences to true.</source>
          <target state="translated">&lt;code&gt;dom.webcomponents.enabled&lt;/code&gt; &lt;code&gt;dom.webcomponents.customelements.enabled&lt;/code&gt; с версии 63. В более старых версиях: установите для параметров dom.webcomponents.enabled и dom.webcomponents.customelements.enabled значение true.</target>
        </trans-unit>
        <trans-unit id="149e59e854d1a930b197517343595cab9c83d3d5" translate="yes" xml:space="preserve">
          <source>Supported natively.</source>
          <target state="translated">Поддерживается на родном языке.</target>
        </trans-unit>
        <trans-unit id="bb6cc835f2a9162101b9f580bc00f613a031b252" translate="yes" xml:space="preserve">
          <source>Supported prefix operator</source>
          <target state="translated">Поддерживаемый оператор префиксов</target>
        </trans-unit>
        <trans-unit id="6a66aec706ed285ace0836213a36cd2b9a69b52d" translate="yes" xml:space="preserve">
          <source>Supported update paths</source>
          <target state="translated">Поддерживаемые пути обновления</target>
        </trans-unit>
        <trans-unit id="7092a8531c4f0a36c977743d2fb6d4828df0fc89" translate="yes" xml:space="preserve">
          <source>Supported versions</source>
          <target state="translated">Поддерживаемые версии</target>
        </trans-unit>
        <trans-unit id="b8f7b9582840f1b51793bdfbae923d73469958a8" translate="yes" xml:space="preserve">
          <source>Supports &lt;a href=&quot;../guide/glossary#jit&quot;&gt;JIT&lt;/a&gt; compilation and execution of Angular apps on different supported browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68abb1b6a421b6a057714c502175fb1e4d0785a4" translate="yes" xml:space="preserve">
          <source>Supports delivery of Angular apps on a server, for use with &lt;a href=&quot;../guide/glossary#server-side-rendering&quot;&gt;server-side rendering&lt;/a&gt; (SSR).</source>
          <target state="translated">Поддерживает доставку приложений Angular на сервер для использования с &lt;a href=&quot;../guide/glossary#server-side-rendering&quot;&gt;рендерингом на стороне сервера&lt;/a&gt; (SSR).</target>
        </trans-unit>
        <trans-unit id="fb1ffb2f1d5a195313b3cdd770d1f6b7bf9c7009" translate="yes" xml:space="preserve">
          <source>Supports execution of Angular apps on different supported browsers.</source>
          <target state="translated">Поддерживает выполнение приложений Angular на различных поддерживаемых браузерах.</target>
        </trans-unit>
        <trans-unit id="72657c85f5b110b8ad4f655973c381d6d88dd9c3" translate="yes" xml:space="preserve">
          <source>Supports static, parameterized, redirect, and wildcard routes, as well as custom route data and resolve methods.</source>
          <target state="translated">Поддерживает статические,параметризованные,перенаправленные и подстановочные маршруты,а также пользовательские данные маршрута и методы разрешения.</target>
        </trans-unit>
        <trans-unit id="6e64537544422a3d0dd6208919bfd88452a5d64a" translate="yes" xml:space="preserve">
          <source>Supports the upgrade path from AngularJS to Angular, allowing components and services from both systems to be used in the same application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7011c39e6768e7218d6f19fe24834274bd8e3880" translate="yes" xml:space="preserve">
          <source>Supports the upgrade path from AngularJS to Angular, allowing components from both systems to be used in the same application.</source>
          <target state="translated">Поддерживает путь обновления с AngularJS на Angular,позволяя использовать компоненты обеих систем в одном приложении.</target>
        </trans-unit>
        <trans-unit id="ffa38c192edac80816d007088a189ee1553fd813" translate="yes" xml:space="preserve">
          <source>Suppose a module requires a customized &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; that adds a special header for all Http requests. If another module elsewhere in the application also customizes &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; or merely imports the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;, it could override this module's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; provider, losing the special header. The server will reject http requests from this module.</source>
          <target state="translated">Предположим, что для модуля требуется настроенный &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; , который добавляет специальный заголовок для всех запросов Http. Если другой модуль в другом месте приложения также настраивает &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; или просто импортирует &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; , он может переопределить поставщика &lt;code&gt;&lt;a href=&quot;../api/common/http/httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; этого модуля , потеряв специальный заголовок. Сервер отклонит http-запросы от этого модуля.</target>
        </trans-unit>
        <trans-unit id="02d18e71b14a468fe5b6fe81d6582fa4ff952551" translate="yes" xml:space="preserve">
          <source>Suppose a parent component navigation bar had &quot;forward&quot; and &quot;back&quot; buttons that scrolled through the list of heroes. Each click navigated imperatively to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; with the next or previous &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Предположим, что панель навигации родительского компонента имеет кнопки &amp;laquo;вперед&amp;raquo; и &amp;laquo;назад&amp;raquo;, которые прокручивают список героев. Каждый щелчок обязательно перемещался к &lt;code&gt;HeroDetailComponent&lt;/code&gt; со следующим или предыдущим &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73875b081ad6712e3cca37634ad81e0aabf43018" translate="yes" xml:space="preserve">
          <source>Suppose an old component depends upon the &lt;code&gt;OldLogger&lt;/code&gt; class. &lt;code&gt;OldLogger&lt;/code&gt; has the same interface as &lt;code&gt;NewLogger&lt;/code&gt;, but for some reason you can't update the old component to use it.</source>
          <target state="translated">Предположим, что старый компонент зависит от класса &lt;code&gt;OldLogger&lt;/code&gt; . &lt;code&gt;OldLogger&lt;/code&gt; имеет тот же интерфейс, что и &lt;code&gt;NewLogger&lt;/code&gt; , но по какой-то причине вы не можете обновить старый компонент, чтобы использовать его.</target>
        </trans-unit>
        <trans-unit id="393692d189825d9307fd6c7fe80a2cd354ed6034" translate="yes" xml:space="preserve">
          <source>Suppose that the &lt;code&gt;HeroTaxReturnComponent&lt;/code&gt; had logic to manage and restore changes. That would be a pretty easy task for a simple hero tax return. In the real world, with a rich tax return data model, the change management would be tricky. You could delegate that management to a helper service, as this example does.</source>
          <target state="translated">Предположим, что у &lt;code&gt;HeroTaxReturnComponent&lt;/code&gt; есть логика для управления и восстановления изменений. Это было бы довольно простой задачей для простой налоговой декларации героя. В реальном мире с богатой моделью данных налоговой декларации управление изменениями было бы сложным. Вы можете делегировать это управление вспомогательной службе, как в этом примере.</target>
        </trans-unit>
        <trans-unit id="25aea682ecf4709d352723de7edbd90f7beb9d93" translate="yes" xml:space="preserve">
          <source>Suppose that you want to say that something was &quot;updated x minutes ago&quot;. In English, depending upon the number of minutes, you could display &quot;just now&quot;, &quot;one minute ago&quot;, or &quot;x minutes ago&quot; (with x being the actual number). Other languages might express the cardinality differently.</source>
          <target state="translated">Предположим,вы хотите сказать,что что-то было &quot;обновлено икс минуты назад&quot;.На английском языке,в зависимости от количества минут,вы можете отобразить &quot;только сейчас&quot;,&quot;минуту назад&quot; или &quot;х минут назад&quot; (при этом х-это фактическое число).На других языках кардинальность может выражаться по-другому.</target>
        </trans-unit>
        <trans-unit id="52f33491eb18bba650ee1a092238a98b0b605102" translate="yes" xml:space="preserve">
          <source>Suppose the user enters the letters &quot;abc&quot;, and then backspaces to remove them one by one. Here's what the UI displays:</source>
          <target state="translated">Предположим,что пользователь вводит буквы &quot;abc&quot;,а затем пробелы,чтобы убрать их по одному.Вот что отображает пользовательский интерфейс:</target>
        </trans-unit>
        <trans-unit id="d7069d4f08e8837edb06ea21d283e4edd2d1b1de" translate="yes" xml:space="preserve">
          <source>Suppose we have an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element and want to know its &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">Предположим, у нас есть элемент &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; и мы хотим знать его &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d699c4717131d4ec51fe6dc596be8f74574e2bad" translate="yes" xml:space="preserve">
          <source>Suppose you want to read a configuration file and then generate a form based on that configuration. If that form will need additional customization by the developer who is using your library, it might work best as a schematic. However, if the form will always be the same and not need much customization by developers, then you could create a dynamic component that takes the configuration and generates the form. In general, the more complex the customization, the more useful the schematic approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c56e3107218078534c09e6533e96893d6ef445a" translate="yes" xml:space="preserve">
          <source>Suppose you want to read a configuration file and then generate a form based on that configuration. If that form will need additional customization by the user, it might work best as a schematic. However, if the forms will always be the same and not need much customization by developers, then you could create a dynamic component that takes the configuration and generates the form. In general, the more complex the customization, the more useful the schematic approach.</source>
          <target state="translated">Предположим,вы хотите прочитать конфигурационный файл,а затем сгенерировать форму на основе этой конфигурации.Если эта форма нуждается в дополнительной настройке пользователем,то лучше всего она будет работать как схема.Однако если формы всегда будут одними и теми же и не нуждаются в значительной настройке разработчиками,то вы можете создать динамический компонент,который возьмет конфигурацию и сгенерирует форму.В общем,чем сложнее настройка,тем более полезен схематический подход.</target>
        </trans-unit>
        <trans-unit id="59237b414b792a395067be846fe0e7beefa8df0b" translate="yes" xml:space="preserve">
          <source>Surely you noticed the asterisk (*) prefix to the directive name and wondered why it is necessary and what it does.</source>
          <target state="translated">Естественно,вы заметили префикс (*)звездочки к имени директивы и задались вопросом,зачем она нужна и что она делает.</target>
        </trans-unit>
        <trans-unit id="b214d7f5503a587eb43c1ce5ab34f417045155cc" translate="yes" xml:space="preserve">
          <source>Surprisingly, the &lt;code&gt;AdminModule&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; preload. Something is blocking it.</source>
          <target state="translated">Удивительно, но &lt;code&gt;AdminModule&lt;/code&gt; вовсе &lt;em&gt;не&lt;/em&gt; поджать. Что-то блокирует это.</target>
        </trans-unit>
        <trans-unit id="8a925dc523db7e7f6a2babc32186c1a961796ab3" translate="yes" xml:space="preserve">
          <source>SwPush</source>
          <target state="translated">SwPush</target>
        </trans-unit>
        <trans-unit id="9f27068dde7716de3ec4b61fb1f7fbb0fa22a06e" translate="yes" xml:space="preserve">
          <source>SwRegistrationOptions</source>
          <target state="translated">SwRegistrationOptions</target>
        </trans-unit>
        <trans-unit id="79b152292931b9029acf6214e3a35f2f497eb2ba" translate="yes" xml:space="preserve">
          <source>SwUpdate</source>
          <target state="translated">SwUpdate</target>
        </trans-unit>
        <trans-unit id="12ff3885d54d4fd6b48e48b47e4fa9d91086d058" translate="yes" xml:space="preserve">
          <source>Switch directives work as well with native elements and web components too. For example, you could replace the &lt;code&gt;&amp;lt;app-best-item&amp;gt;&lt;/code&gt; switch case with the following.</source>
          <target state="translated">Директивы switch также работают с собственными элементами и веб-компонентами. Например, вы можете заменить регистр переключателя &lt;code&gt;&amp;lt;app-best-item&amp;gt;&lt;/code&gt; следующим.</target>
        </trans-unit>
        <trans-unit id="33234fb80d85cf56feb93d467d387491c1b2475b" translate="yes" xml:space="preserve">
          <source>Switch the bootstrap method of the application from the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; to the Angular way.</source>
          <target state="translated">Переключите метод начальной загрузки приложения с &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; на Angular.</target>
        </trans-unit>
        <trans-unit id="f6b6874ca57485e6385c6bf8186046e4a67f2559" translate="yes" xml:space="preserve">
          <source>Switching to &lt;em&gt;production mode&lt;/em&gt; makes it run faster by disabling development specific checks such as the dual change detection cycles.</source>
          <target state="translated">Переключение в &lt;em&gt;рабочий режим&lt;/em&gt; ускоряет его работу, отключая специальные проверки разработки, такие как циклы обнаружения двойных изменений.</target>
        </trans-unit>
        <trans-unit id="7f052c63532052c45dde829915673716b21669b2" translate="yes" xml:space="preserve">
          <source>Switching to TypeScript</source>
          <target state="translated">Переход на TypeScript</target>
        </trans-unit>
        <trans-unit id="3f84ef531f9db996694ad09a8fdddbca1440577e" translate="yes" xml:space="preserve">
          <source>Symbol</source>
          <target state="translated">Symbol</target>
        </trans-unit>
        <trans-unit id="bf651e969e01eb1f873351e5967dd48f8903f1bb" translate="yes" xml:space="preserve">
          <source>Symbol Name</source>
          <target state="translated">Символ Имя</target>
        </trans-unit>
        <trans-unit id="0ffab2f658ffa680e2c69e9b420273e89027867e" translate="yes" xml:space="preserve">
          <source>Symbol reference expected</source>
          <target state="translated">Символьная ссылка ожидается</target>
        </trans-unit>
        <trans-unit id="f3494e771ca3509c91264f0e82dd38b796ebd086" translate="yes" xml:space="preserve">
          <source>Symbol used between time units. Example: 10:52</source>
          <target state="translated">Символ,используемый между единицами времени.Пример:10:52</target>
        </trans-unit>
        <trans-unit id="e40de653307a889667fd3b8b60322928538d73e9" translate="yes" xml:space="preserve">
          <source>Symbols and file names</source>
          <target state="translated">Символы и имена файлов</target>
        </trans-unit>
        <trans-unit id="6eb4870d40315c26b4100eb0b4abc30c88c7e0eb" translate="yes" xml:space="preserve">
          <source>Symbols that can be used to replace placeholders in number patterns. Examples are based on &lt;code&gt;en-US&lt;/code&gt; values.</source>
          <target state="translated">Символы, которые можно использовать для замены заполнителей в шаблонах чисел. Примеры основаны на значениях &lt;code&gt;en-US&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a845c66b8aa0725ad837577ee6ba75ba5395509" translate="yes" xml:space="preserve">
          <source>Synchronizes a standalone &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance to a form control element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe6fb70ed7194ea3e15cef6ca6b4a5a15031aa7" translate="yes" xml:space="preserve">
          <source>Synchronizes a standalone &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance to a form control element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c61919f7c0335c38d9155372ee85055a736cc1" translate="yes" xml:space="preserve">
          <source>Synchronous</source>
          <target state="translated">Synchronous</target>
        </trans-unit>
        <trans-unit id="81fcba9c890b5b9df0951a561afa635cb63d6429" translate="yes" xml:space="preserve">
          <source>Synchronous tests</source>
          <target state="translated">Синхронные тесты</target>
        </trans-unit>
        <trans-unit id="efa1ae6c647ae04a352ce83e8b956e4548c0a09f" translate="yes" xml:space="preserve">
          <source>Synchronous validator function composed of all the synchronous validators registered with this directive.</source>
          <target state="translated">Функция синхронного валидатора состоит из всех синхронных валидаторов,зарегистрированных этой директивой.</target>
        </trans-unit>
        <trans-unit id="51c06766f034703a307b97a685afb1562f8e64c2" translate="yes" xml:space="preserve">
          <source>Syncs &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; in an existing &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to a form control element by name.</source>
          <target state="translated">Синхронизирует &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; в существующем экземпляре &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом управления формой по имени.</target>
        </trans-unit>
        <trans-unit id="f961f76d72f8572cbf883b0eda6d37d9322f25ac" translate="yes" xml:space="preserve">
          <source>Syncs a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; in an existing &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to a form control element by name.</source>
          <target state="translated">Синхронизирует &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; в существующей &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом управления формой по имени.</target>
        </trans-unit>
        <trans-unit id="8cd38404d1df6db7a6fae66425bda9b4e3309919" translate="yes" xml:space="preserve">
          <source>Syncs a &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; in an existing &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to a form control element by name.</source>
          <target state="translated">Синхронизирует &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; в существующей &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом управления формой по имени.</target>
        </trans-unit>
        <trans-unit id="086c4672a7169938b2a6514a98e7ed9e01527448" translate="yes" xml:space="preserve">
          <source>Syncs a nested &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instance to a DOM element.</source>
          <target state="translated">Синхронизирует вложенный экземпляр &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="fc865b5e1817fe14c0c7ea54ca007f535109e025" translate="yes" xml:space="preserve">
          <source>Syncs a nested &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to a DOM element.</source>
          <target state="translated">Синхронизирует вложенный экземпляр &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="ba2e022b2265fa63e13b98eafe19811e46520332" translate="yes" xml:space="preserve">
          <source>Syncs a nested &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; to a DOM element.</source>
          <target state="translated">Синхронизирует вложенный &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="70738eb6d2e19d76da3cfc549c9c13b9312021b2" translate="yes" xml:space="preserve">
          <source>Syncs a nested &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to a DOM element.</source>
          <target state="translated">Синхронизирует вложенную &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="61af0c00422dee458259702f4176eec58c0c8042" translate="yes" xml:space="preserve">
          <source>Syncs a nested &lt;code&gt;&lt;a href=&quot;forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; to a DOM element.</source>
          <target state="translated">Синхронизирует вложенный &lt;code&gt;&lt;a href=&quot;forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="e43e097926a53a2908c4af6cd3bbae1f671e4adb" translate="yes" xml:space="preserve">
          <source>Syncs a nested &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to a DOM element.</source>
          <target state="translated">Синхронизирует вложенную &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="ad27b48f5dbc27604bca1812e101c55e46e2eee1" translate="yes" xml:space="preserve">
          <source>Syncs a standalone &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance to a form control element.</source>
          <target state="translated">Синхронизирует автономный экземпляр &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; с элементом управления формой.</target>
        </trans-unit>
        <trans-unit id="fc68ea9b2876f7990354e54d126dd4bfe6d18749" translate="yes" xml:space="preserve">
          <source>Syncs a standalone &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance to a form control element.</source>
          <target state="translated">Синхронизирует автономный экземпляр &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; с элементом управления формой.</target>
        </trans-unit>
        <trans-unit id="7e74270b6f12da6ecbf8b3bf65beff6d58cc992b" translate="yes" xml:space="preserve">
          <source>Syncs a standalone &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance to a form control element.</source>
          <target state="translated">Синхронизирует автономный экземпляр &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; с элементом управления формой.</target>
        </trans-unit>
        <trans-unit id="1172a5b10335976e2b7c9c3fdc13f55d23facb32" translate="yes" xml:space="preserve">
          <source>Syncs an existing &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to a DOM element.</source>
          <target state="translated">Синхронизирует существующий экземпляр &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="translated">Syntax</target>
        </trans-unit>
        <trans-unit id="3e2ad7607ba4c7d34af5aba42d88e71b8d7b2d5d" translate="yes" xml:space="preserve">
          <source>Syntax Examples</source>
          <target state="translated">Примеры синтаксиса</target>
        </trans-unit>
        <trans-unit id="81b08f26e2d68214bb4f1a772ea8cdfa473815a1" translate="yes" xml:space="preserve">
          <source>Syntax examples</source>
          <target state="translated">Примеры синтаксиса</target>
        </trans-unit>
        <trans-unit id="6691b44362a007fed00597742195f79ce997ae58" translate="yes" xml:space="preserve">
          <source>SystemJsNgModuleLoader</source>
          <target state="translated">SystemJsNgModuleLoader</target>
        </trans-unit>
        <trans-unit id="1ed04efd0b8e3b6249919e01cdc720a8e8ecf639" translate="yes" xml:space="preserve">
          <source>SystemJsNgModuleLoaderConfig</source>
          <target state="translated">SystemJsNgModuleLoaderConfig</target>
        </trans-unit>
        <trans-unit id="c2c53d66948214258a26ca9ca845d7ac0c17f8e7" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="translated">T</target>
        </trans-unit>
        <trans-unit id="08e80e877114a02316e2a85c727dc2ec2e8d050b" translate="yes" xml:space="preserve">
          <source>TRANSLATIONS</source>
          <target state="translated">TRANSLATIONS</target>
        </trans-unit>
        <trans-unit id="fb3e2ec398b2e2de9887ef22a66c4a02e397504f" translate="yes" xml:space="preserve">
          <source>TRANSLATIONS_FORMAT</source>
          <target state="translated">TRANSLATIONS_FORMAT</target>
        </trans-unit>
        <trans-unit id="bd652fbce1c3cb7239b3c2d66f09ef88cef2bb2f" translate="yes" xml:space="preserve">
          <source>Tab-pane example</source>
          <target state="translated">пример из таблички</target>
        </trans-unit>
        <trans-unit id="1a428989bd13dceabd89b698d9fa38eb8a0d175c" translate="yes" xml:space="preserve">
          <source>Table of contents</source>
          <target state="translated">Оглавление</target>
        </trans-unit>
        <trans-unit id="193daf137ed8b89de36d47c3df5fd8f66c0e1d14" translate="yes" xml:space="preserve">
          <source>Tables</source>
          <target state="translated">Tables</target>
        </trans-unit>
        <trans-unit id="4bddf5a71780ecc0e28e12eabc19502b8eec1d47" translate="yes" xml:space="preserve">
          <source>Tagged template expressions are not supported</source>
          <target state="translated">Выражения теговых шаблонов не поддерживаются</target>
        </trans-unit>
        <trans-unit id="b934954a57aa53ca1df92279825e0d4c54b36857" translate="yes" xml:space="preserve">
          <source>Take a closer look at the methods in &lt;code&gt;ad-banner.component.ts&lt;/code&gt;.</source>
          <target state="translated">Присмотритесь к методам в &lt;code&gt;ad-banner.component.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eac79b3b60173923dd4dec55995d0549258112a1" translate="yes" xml:space="preserve">
          <source>Take care when writing a component that inherits from another component. If the base component has injected dependencies, you must re-provide and re-inject them in the derived class and then pass them down to the base class through the constructor.</source>
          <target state="translated">Будьте осторожны,когда пишите компонент,унаследованный от другого компонента.Если базовый компонент имеет инжектируемые зависимости,то их нужно перевести в производный класс,а затем передать в базовый класс через конструктор.</target>
        </trans-unit>
        <trans-unit id="959d7ee2d7b3d044cad9c2f02a2ffab28937e75a" translate="yes" xml:space="preserve">
          <source>Take it a step further. Consider the following router link that navigates from the root of the application down to the &lt;em&gt;Dragon Crisis&lt;/em&gt;:</source>
          <target state="translated">Сделай шаг вперед. Рассмотрим следующую ссылку на маршрутизатор, которая ведет от корня приложения до &lt;em&gt;Dragon Crisis&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5e1997f28885ce15e075eba3fa736d8419f8699e" translate="yes" xml:space="preserve">
          <source>Take the final step and detach the admin feature set from the main application. The root &lt;code&gt;AppModule&lt;/code&gt; must neither load nor reference the &lt;code&gt;AdminModule&lt;/code&gt; or its files.</source>
          <target state="translated">Сделайте последний шаг и отсоедините набор функций администратора от основного приложения. Корневой &lt;code&gt;AppModule&lt;/code&gt; не должен ни загружать, ни ссылаться на &lt;code&gt;AdminModule&lt;/code&gt; или его файлы.</target>
        </trans-unit>
        <trans-unit id="fd68b9b389e7f5bea52a02f84945ec9ad71bd331" translate="yes" xml:space="preserve">
          <source>Take the following actions on the &lt;strong&gt;Name&lt;/strong&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; box, and observe which classes appear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e561ddf5a7dab6002aff68f7f2cbac99e4ca5385" translate="yes" xml:space="preserve">
          <source>Take the relevant parts of the crisis retrieval logic in &lt;code&gt;CrisisDetailComponent.ngOnInit&lt;/code&gt; and move them into the &lt;code&gt;CrisisDetailResolverService&lt;/code&gt;. Import the &lt;code&gt;Crisis&lt;/code&gt; model, &lt;code&gt;CrisisService&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; so you can navigate elsewhere if you can't fetch the crisis.</source>
          <target state="translated">Возьмите соответствующие части логики поиска кризисов в &lt;code&gt;CrisisDetailComponent.ngOnInit&lt;/code&gt; и переместите их в &lt;code&gt;CrisisDetailResolverService&lt;/code&gt; . Импортируйте модель &lt;code&gt;Crisis&lt;/code&gt; , &lt;code&gt;CrisisService&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; чтобы вы могли перемещаться в другое место, если не можете найти кризис.</target>
        </trans-unit>
        <trans-unit id="b5ea73c38525ab2fdecbff1c0aa0160e994a362d" translate="yes" xml:space="preserve">
          <source>Takes an array of &lt;a href=&quot;iterabledifferfactory&quot;&gt;&lt;code&gt;IterableDifferFactory&lt;/code&gt;&lt;/a&gt; and returns a provider used to extend the inherited &lt;a href=&quot;iterablediffers&quot;&gt;&lt;code&gt;IterableDiffers&lt;/code&gt;&lt;/a&gt; instance with the provided factories and return a new &lt;a href=&quot;iterablediffers&quot;&gt;&lt;code&gt;IterableDiffers&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Принимает массив &lt;a href=&quot;iterabledifferfactory&quot;&gt; &lt;code&gt;IterableDifferFactory&lt;/code&gt; &lt;/a&gt; и возвращает провайдера, используемого для расширения унаследованного экземпляра &lt;a href=&quot;iterablediffers&quot;&gt; &lt;code&gt;IterableDiffers&lt;/code&gt; &lt;/a&gt; с помощью предоставленных фабрик и возврата нового экземпляра &lt;a href=&quot;iterablediffers&quot;&gt; &lt;code&gt;IterableDiffers&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1783048e5410fe461b1992e43a0627a2db079105" translate="yes" xml:space="preserve">
          <source>Takes an array of &lt;a href=&quot;keyvaluedifferfactory&quot;&gt;&lt;code&gt;KeyValueDifferFactory&lt;/code&gt;&lt;/a&gt; and returns a provider used to extend the inherited &lt;a href=&quot;keyvaluediffers&quot;&gt;&lt;code&gt;KeyValueDiffers&lt;/code&gt;&lt;/a&gt; instance with the provided factories and return a new &lt;a href=&quot;keyvaluediffers&quot;&gt;&lt;code&gt;KeyValueDiffers&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">Принимает массив &lt;a href=&quot;keyvaluedifferfactory&quot;&gt; &lt;code&gt;KeyValueDifferFactory&lt;/code&gt; &lt;/a&gt; и возвращает провайдера, используемого для расширения унаследованного экземпляра &lt;a href=&quot;keyvaluediffers&quot;&gt; &lt;code&gt;KeyValueDiffers&lt;/code&gt; &lt;/a&gt; предоставленными фабриками и возврата нового экземпляра &lt;a href=&quot;keyvaluediffers&quot;&gt; &lt;code&gt;KeyValueDiffers&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a019a610b764a5ac0661621fc04397adf8ab98b" translate="yes" xml:space="preserve">
          <source>Takes the name of the project, as specified in the &lt;code&gt;projects&lt;/code&gt; section of the &lt;code&gt;angular.json&lt;/code&gt; workspace configuration file. When a project name is not supplied, it will execute for all projects.</source>
          <target state="translated">Принимает имя проекта, как указано в разделе &lt;code&gt;projects&lt;/code&gt; в &lt;code&gt;angular.json&lt;/code&gt; конфигурации рабочей области angular.json . Если имя проекта не указано, оно будет выполнено для всех проектов.</target>
        </trans-unit>
        <trans-unit id="20daeff082d03a0b38c83ac26093ddda49f24ad0" translate="yes" xml:space="preserve">
          <source>Talk to the server through a service</source>
          <target state="translated">Поговорите с сервером через службу</target>
        </trans-unit>
        <trans-unit id="9d79ab61a4348e4625bb78bbbf19b6ed3b9efae8" translate="yes" xml:space="preserve">
          <source>Talking to DOM API directly isn't a best practice.</source>
          <target state="translated">Прямой разговор с DOM API не лучшая практика.</target>
        </trans-unit>
        <trans-unit id="31cc6a243c52473560fc05d841db5aeaed55aeb4" translate="yes" xml:space="preserve">
          <source>Tame the complexity with a &lt;code&gt;Page&lt;/code&gt; class that handles access to component properties and encapsulates the logic that sets them.</source>
          <target state="translated">Приручите сложность с классом &lt;code&gt;Page&lt;/code&gt; , который обрабатывает доступ к свойствам компонента и инкапсулирует логику, которая их устанавливает.</target>
        </trans-unit>
        <trans-unit id="98d70538f3b6756483784e61cbff4af80626f263" translate="yes" xml:space="preserve">
          <source>Tap into the Observable</source>
          <target state="translated">Нажмите на Наблюдаемый</target>
        </trans-unit>
        <trans-unit id="61ad50a9b9189cc3cf1874568e35e7901ff4c982" translate="yes" xml:space="preserve">
          <source>Target</source>
          <target state="translated">Target</target>
        </trans-unit>
        <trans-unit id="ae9b707e7a77c61b2721b8988c5d55a82eceb725" translate="yes" xml:space="preserve">
          <source>Target configuration</source>
          <target state="translated">Целевая конфигурация</target>
        </trans-unit>
        <trans-unit id="a14b9e2d8db8b39d7783f3b50bdd3cd885de75a2" translate="yes" xml:space="preserve">
          <source>Target event</source>
          <target state="translated">Целевое событие</target>
        </trans-unit>
        <trans-unit id="e30cbaa2faccc704914fd3fc89ef1c63d8bda97b" translate="yes" xml:space="preserve">
          <source>Target strings</source>
          <target state="translated">Целевые строки</target>
        </trans-unit>
        <trans-unit id="2e46f5c0d09cedf26b72fc0ef1be54d1d8560002" translate="yes" xml:space="preserve">
          <source>Target to extract from.</source>
          <target state="translated">Цель,из которой нужно извлечь.</target>
        </trans-unit>
        <trans-unit id="faf4691c6436e38baa1090283557c861280888fc" translate="yes" xml:space="preserve">
          <source>Target to serve.</source>
          <target state="translated">Цель служить.</target>
        </trans-unit>
        <trans-unit id="00830f9fc21a74f272379fb547328f3109f36ad9" translate="yes" xml:space="preserve">
          <source>Targets are defined in the &lt;code&gt;angular.json&lt;/code&gt;&lt;a href=&quot;workspace-config&quot;&gt;CLI configuration file&lt;/a&gt;. A target specifies the builder to use, its default options configuration, and named alternative configurations. The Architect tool uses the target definition to resolve input options for a given run.</source>
          <target state="translated">Цели определены в &lt;code&gt;angular.json&lt;/code&gt; &lt;a href=&quot;workspace-config&quot;&gt;конфигурации CLI &lt;/a&gt;angular.json . Цель указывает используемый сборщик, его конфигурацию параметров по умолчанию и именованные альтернативные конфигурации. Инструмент Architect использует определение цели для разрешения параметров ввода для данного прогона.</target>
        </trans-unit>
        <trans-unit id="7bb0ddf9221c03b806b03c209e8366000124aa15" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">Task</target>
        </trans-unit>
        <trans-unit id="73418a3fdba46d16932dc2fc9afcd9d8987e56c9" translate="yes" xml:space="preserve">
          <source>Teach &lt;em&gt;AuthGuard&lt;/em&gt; to authenticate</source>
          <target state="translated">Научите &lt;em&gt;AuthGuard&lt;/em&gt; аутентификации</target>
        </trans-unit>
        <trans-unit id="25507d522fc8f4937e463f4125763af49129dda6" translate="yes" xml:space="preserve">
          <source>Technically, &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt; = '&lt;a href=&quot;../api/core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt; results in a route hit when the &lt;em&gt;remaining&lt;/em&gt;, unmatched segments of the URL match &lt;code&gt;''&lt;/code&gt;. In this example, the redirect is in a top level route so the &lt;em&gt;remaining&lt;/em&gt; URL and the &lt;em&gt;entire&lt;/em&gt; URL are the same thing.</source>
          <target state="translated">Технически, &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt; = '&lt;a href=&quot;../api/core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt; приводит к попаданию маршрута, когда &lt;em&gt;оставшиеся&lt;/em&gt; несопоставленные сегменты URL совпадают &lt;code&gt;''&lt;/code&gt; . В этом примере перенаправление находится на маршруте верхнего уровня, поэтому &lt;em&gt;оставшийся&lt;/em&gt; URL-адрес и &lt;em&gt;весь&lt;/em&gt; URL-адрес - это одно и то же.</target>
        </trans-unit>
        <trans-unit id="adb6801c546ab3dd633511893d9730df571b8a42" translate="yes" xml:space="preserve">
          <source>Technically, &lt;code&gt;pathMatch = 'full'&lt;/code&gt; results in a route hit when the &lt;em&gt;remaining&lt;/em&gt;, unmatched segments of the URL match &lt;code&gt;''&lt;/code&gt;. In this example, the redirect is in a top level route so the &lt;em&gt;remaining&lt;/em&gt; URL and the &lt;em&gt;entire&lt;/em&gt; URL are the same thing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a93838e750a0730a8d6f5c1fedce685237d2d9" translate="yes" xml:space="preserve">
          <source>Technically, Angular is matching the name to a directive &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, one of the property names listed in the directive's &lt;code&gt;inputs&lt;/code&gt; array or a property decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;. Such inputs map to the directive's own properties.</source>
          <target state="translated">Технически Angular сопоставляет имя с директивой &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; , одним из имен свойств, перечисленных в массиве &lt;code&gt;inputs&lt;/code&gt; директивы, или свойством, украшенным &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; . Такие входные данные соответствуют собственным свойствам директивы.</target>
        </trans-unit>
        <trans-unit id="998980bf1abaab97ed80569753b38d095b70a64f" translate="yes" xml:space="preserve">
          <source>Tell &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; that you want the full response with the &lt;code&gt;observe&lt;/code&gt; option of the &lt;code&gt;get()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63c149f79d0f3eff56cd6ac95c7fc7cf404954e" translate="yes" xml:space="preserve">
          <source>Tell &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; that you want the full response with the &lt;code&gt;observe&lt;/code&gt; option:</source>
          <target state="translated">Скажите &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , что вы хотите получить полный ответ с опцией &lt;code&gt;observe&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="e72e5c26ac0705579a0a676c6f42c12b1eaa9288" translate="yes" xml:space="preserve">
          <source>Tell Visual Studio how to handle requests for route app pages by adding these rewrite rules near the bottom of the &lt;code&gt;web.config&lt;/code&gt;:</source>
          <target state="translated">Сообщите Visual Studio, как обрабатывать запросы на страницы приложения маршрута, добавив эти правила перезаписи в нижней части &lt;code&gt;web.config&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="fd2a05c99f33c07757e85e16590f2a556e55c4be" translate="yes" xml:space="preserve">
          <source>Tells the router if this URL should be processed.</source>
          <target state="translated">Сообщает маршрутизатору,следует ли обрабатывать этот URL.</target>
        </trans-unit>
        <trans-unit id="a732bd01a721431b70704355d2b67249c978ef6b" translate="yes" xml:space="preserve">
          <source>Template &lt;em&gt;input&lt;/em&gt; and &lt;em&gt;reference&lt;/em&gt; variable names have their own namespaces. The &lt;code&gt;hero&lt;/code&gt; in &lt;code&gt;let hero&lt;/code&gt; is never the same variable as the &lt;code&gt;hero&lt;/code&gt; declared as &lt;code&gt;#hero&lt;/code&gt;.</source>
          <target state="translated">Имена &lt;em&gt;входных&lt;/em&gt; и &lt;em&gt;справочных&lt;/em&gt; переменных шаблонов имеют свои собственные пространства имен. &lt;code&gt;hero&lt;/code&gt; в &lt;code&gt;let hero&lt;/code&gt; никогда не та же переменная , как &lt;code&gt;hero&lt;/code&gt; объявлен &lt;code&gt;#hero&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efb3147068725b40c3436e7283942bba6c112bbf" translate="yes" xml:space="preserve">
          <source>Template Syntax</source>
          <target state="translated">Синтаксис шаблона</target>
        </trans-unit>
        <trans-unit id="fa0b782eed89b03079da5213bda92d328c3427f9" translate="yes" xml:space="preserve">
          <source>Template basics</source>
          <target state="translated">Основы шаблонов</target>
        </trans-unit>
        <trans-unit id="a1af2aeaf6c6487cc178cd2993fe7b1850971a31" translate="yes" xml:space="preserve">
          <source>Template context names take precedence over component context names. In &lt;code&gt;deleteHero(hero)&lt;/code&gt; above, the &lt;code&gt;hero&lt;/code&gt; is the template input variable, not the component's &lt;code&gt;hero&lt;/code&gt; property.</source>
          <target state="translated">Имена контекста шаблона имеют приоритет над именами контекста компонента. В &lt;code&gt;deleteHero(hero)&lt;/code&gt; выше, &lt;code&gt;hero&lt;/code&gt; является входным переменным шаблоном, а не компонента &lt;code&gt;hero&lt;/code&gt; собственности.</target>
        </trans-unit>
        <trans-unit id="e2ef821fc07a52669de040a8c5ce50e04cb09d46" translate="yes" xml:space="preserve">
          <source>Template context names take precedence over component context names. In the preceding &lt;code&gt;deleteHero(hero)&lt;/code&gt;, the &lt;code&gt;hero&lt;/code&gt; is the template input variable, not the component's &lt;code&gt;hero&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966e03574060cf4a9841a3250497825600ba22a4" translate="yes" xml:space="preserve">
          <source>Template directives</source>
          <target state="translated">Директивы шаблонов</target>
        </trans-unit>
        <trans-unit id="22f6072957722cb25d4ed1dbd7d78214be5c501f" translate="yes" xml:space="preserve">
          <source>Template expression operators</source>
          <target state="translated">Операторы выражения шаблонов</target>
        </trans-unit>
        <trans-unit id="2f36556182fc7cb18248ad8e7e7c234fbd3994a2" translate="yes" xml:space="preserve">
          <source>Template expressions</source>
          <target state="translated">Выражения шаблонов</target>
        </trans-unit>
        <trans-unit id="b04a51d2287d24d74cc9ae7ed21f0d60df535ade" translate="yes" xml:space="preserve">
          <source>Template expressions cannot refer to anything in the global namespace, except &lt;code&gt;undefined&lt;/code&gt;. They can't refer to &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt;. Additionally, they can't call &lt;code&gt;console.log()&lt;/code&gt; or &lt;code&gt;Math.max()&lt;/code&gt; and they are restricted to referencing members of the expression context.</source>
          <target state="translated">Шаблонные выражения не могут ссылаться на что-либо в глобальном пространстве имен, кроме &lt;code&gt;undefined&lt;/code&gt; . Они не могут ссылаться на &lt;code&gt;window&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; . Кроме того, они не могут вызывать &lt;code&gt;console.log()&lt;/code&gt; или &lt;code&gt;Math.max()&lt;/code&gt; и они ограничены ссылками на члены контекста выражения.</target>
        </trans-unit>
        <trans-unit id="d1f486b8ae6d63cd2e8a77488ce1d81790f14937" translate="yes" xml:space="preserve">
          <source>Template expressions cannot refer to anything in the global namespace, except &lt;code&gt;undefined&lt;/code&gt;. They can't refer to &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;document&lt;/code&gt;. Additionally, they can't call &lt;code&gt;console.log()&lt;/code&gt; or &lt;code&gt;Math.max()&lt;/code&gt; and they are restricted to referencing members of the expression context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d8f3b4a1d8af00d592cfd96bb7560d9f5866ed" translate="yes" xml:space="preserve">
          <source>Template inline or template file?</source>
          <target state="translated">Шаблонный файл или файл шаблона?</target>
        </trans-unit>
        <trans-unit id="793aeab565d46f4d09daa487f15eafb8d01c9f1b" translate="yes" xml:space="preserve">
          <source>Template inline styles</source>
          <target state="translated">Стили шаблонов в линию</target>
        </trans-unit>
        <trans-unit id="d62c70e2c1bef2a7459f5c8ca8f10edf6b1dfe3a" translate="yes" xml:space="preserve">
          <source>Template input variable</source>
          <target state="translated">Входная переменная шаблона</target>
        </trans-unit>
        <trans-unit id="f17cb990d8b43df9e431abefc871bb8bdc3335a8" translate="yes" xml:space="preserve">
          <source>Template input variables</source>
          <target state="translated">Входные переменные шаблона</target>
        </trans-unit>
        <trans-unit id="276d9c745b9dcc1832f7aa2ab10c8b5f8828a8c0" translate="yes" xml:space="preserve">
          <source>Template link tags</source>
          <target state="translated">Теги ссылок на шаблон</target>
        </trans-unit>
        <trans-unit id="71806c9bd79ddb04621f77d670bf1aba53662c4e" translate="yes" xml:space="preserve">
          <source>Template options</source>
          <target state="translated">Опции шаблонов</target>
        </trans-unit>
        <trans-unit id="110185098cd1b2e55b879ad1f4d0ed2e6537d738" translate="yes" xml:space="preserve">
          <source>Template reference variable considerations</source>
          <target state="translated">Шаблон ссылочных переменных соображений</target>
        </trans-unit>
        <trans-unit id="7702b681e94fccaedb827ca41486c5be08c500af" translate="yes" xml:space="preserve">
          <source>Template reference variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8e4799378055749eb9da93d9510e6a7d58a3f24" translate="yes" xml:space="preserve">
          <source>Template reference variables (&lt;code&gt;#var&lt;/code&gt;)</source>
          <target state="translated">Переменные шаблона ( &lt;code&gt;#var&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="2af0573e0dd90a3ab5f9e206a130e358bd371c6e" translate="yes" xml:space="preserve">
          <source>Template statements</source>
          <target state="translated">Шаблонные заявления</target>
        </trans-unit>
        <trans-unit id="187d8a66461e2c39e2a31d60af9b4948131c5101" translate="yes" xml:space="preserve">
          <source>Template statements are methods or properties that you can use in your HTML to respond to user events. With template statements, your application can engage users through actions such as displaying dynamic content or submitting forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d2b93ac612841845d0661b85c29eb2b1cd1cd29" translate="yes" xml:space="preserve">
          <source>Template statements cannot refer to anything in the global namespace. They can't refer to &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt;. They can't call &lt;code&gt;console.log&lt;/code&gt; or &lt;code&gt;Math.max&lt;/code&gt;.</source>
          <target state="translated">Шаблонные операторы не могут ссылаться на что-либо в глобальном пространстве имен. Они не могут ссылаться на &lt;code&gt;window&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; . Они не могут вызывать &lt;code&gt;console.log&lt;/code&gt; или &lt;code&gt;Math.max&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2e4c3e156daaa11223357c6c7fee079f5ca4d6c" translate="yes" xml:space="preserve">
          <source>Template statements have side effects</source>
          <target state="translated">Шаблонные заявления имеют побочные эффекты</target>
        </trans-unit>
        <trans-unit id="dd88988e24117f6f25330c54600c109c783b9beb" translate="yes" xml:space="preserve">
          <source>Template syntax</source>
          <target state="translated">Синтаксис шаблона</target>
        </trans-unit>
        <trans-unit id="89aee637286de733fbf004914edfe700df91d5ca" translate="yes" xml:space="preserve">
          <source>Template translations</source>
          <target state="translated">Переводы шаблонов</target>
        </trans-unit>
        <trans-unit id="1b8d2b73b52c3fc7fa7a25ba211188746f45a196" translate="yes" xml:space="preserve">
          <source>Template type checking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2199cac1a49cc0b5bc0238a44ca609a8fdc777e0" translate="yes" xml:space="preserve">
          <source>Template validation produces error messages when a type error is detected in a template binding expression, similar to how type errors are reported by the TypeScript compiler against code in a &lt;code&gt;.ts&lt;/code&gt; file.</source>
          <target state="translated">Проверка шаблона выдает сообщения об ошибках, когда в выражении привязки шаблона обнаруживается ошибка типа, аналогично тому, как компилятор TypeScript сообщает об ошибках типа для кода в файле &lt;code&gt;.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a05afb3e2a0b85002981023973fd725884721e1f" translate="yes" xml:space="preserve">
          <source>Template variable references</source>
          <target state="translated">Ссылки на шаблонные переменные</target>
        </trans-unit>
        <trans-unit id="2674525b4c805147548622911690a1ffb8d445f1" translate="yes" xml:space="preserve">
          <source>Template variable scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28dbf63cae657ef60106250983c4178da95844af" translate="yes" xml:space="preserve">
          <source>Template variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d20f5e78b915be979e556411efe974931b98e76d" translate="yes" xml:space="preserve">
          <source>Template variables help you use data from one part of a template in another part of the template. With template variables, you can perform tasks such as respond to user input or finely tune your application's forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ff34d9a94fa1bca16ea2429b64af9ee09f9766" translate="yes" xml:space="preserve">
          <source>Template-driven</source>
          <target state="translated">Template-driven</target>
        </trans-unit>
        <trans-unit id="947ab7967c8b9de424b7b48fb2e8825139f85613" translate="yes" xml:space="preserve">
          <source>Template-driven Forms</source>
          <target state="translated">Формы,основанные на шаблонах</target>
        </trans-unit>
        <trans-unit id="2fc7bb49b2ab014a01c95c690a6b5d0eb3c48324" translate="yes" xml:space="preserve">
          <source>Template-driven Forms Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7766bb17d998e7bcccf98bd89bf899b82f86be" translate="yes" xml:space="preserve">
          <source>Template-driven forms</source>
          <target state="translated">Формы,основанные на шаблонах</target>
        </trans-unit>
        <trans-unit id="7a33b5212ff5a46154f3ee9b352e32186eafe9a1" translate="yes" xml:space="preserve">
          <source>Template-driven forms allow direct access to modify data in your template, but are less explicit than reactive forms because they rely on directives embedded in the template, along with mutable data to track changes asynchronously. See the &lt;a href=&quot;forms-overview&quot;&gt;Forms Overview&lt;/a&gt; for detailed comparisons between the two paradigms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf3a91745824d3c3b8e1abe3cdefd0c52184515" translate="yes" xml:space="preserve">
          <source>Template-driven forms are suitable for small or simple forms, while reactive forms are more scalable and suitable for complex forms. For a comparison of the two approaches, see &lt;a href=&quot;forms-overview&quot;&gt;Introduction to Forms&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b263f1b81053c4d9a7136253c089d2156136e29b" translate="yes" xml:space="preserve">
          <source>Template-driven forms focus on simple scenarios and are not as reusable. They abstract away the underlying form API, and provide only asynchronous access to the form data model. The abstraction of template-driven forms also affects testing. Tests are deeply reliant on manual change detection execution to run properly, and require more setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="916bacce778918197c08d54d7a6dc912643c9a30" translate="yes" xml:space="preserve">
          <source>Template-driven forms rely on directives defined in the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f345f49fde5425a70c3323b64e1cdc8ce016997" translate="yes" xml:space="preserve">
          <source>Template-driven forms use &lt;a href=&quot;architecture-components#data-binding&quot;&gt;two-way data binding&lt;/a&gt; to update the data model in the component as changes are made in the template and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eacc6fdad7fae7150f374795874d76dda2db76be" translate="yes" xml:space="preserve">
          <source>Template-driven validation</source>
          <target state="translated">Проверка на основе шаблонов</target>
        </trans-unit>
        <trans-unit id="49f5a0c2c82d30a031cbdf85339bb35e8de1b886" translate="yes" xml:space="preserve">
          <source>Template-reference variables such as &lt;code&gt;#heroForm&lt;/code&gt; and &lt;code&gt;#name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;#heroForm&lt;/code&gt; переменные шаблона, такие как #heroForm и &lt;code&gt;#name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="871350ea04e981df978b9ee88f97415601759ccc" translate="yes" xml:space="preserve">
          <source>TemplateRef</source>
          <target state="translated">TemplateRef</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="ac46ec20b12e03a347c43dafd18b8503a6feac19" translate="yes" xml:space="preserve">
          <source>Templates and views</source>
          <target state="translated">Шаблоны и виды</target>
        </trans-unit>
        <trans-unit id="404ac9359f458c08768cf6531e667d2854940fba" translate="yes" xml:space="preserve">
          <source>Templates are the user-facing part of an Angular application and are written in HTML. The following table lists some of the key AngularJS template features with their equivalent Angular template syntax.</source>
          <target state="translated">Шаблоны представляют собой пользовательскую часть приложения Angular и написаны в HTML.В следующей таблице перечислены некоторые из ключевых функций шаблонов AngularJS с их эквивалентным синтаксисом.</target>
        </trans-unit>
        <trans-unit id="7d179b96d34c29e0196caf2baca8ede8163168d8" translate="yes" xml:space="preserve">
          <source>Templates, directives, and data binding</source>
          <target state="translated">Шаблоны,директивы и привязка данных</target>
        </trans-unit>
        <trans-unit id="33a55a545f80619e2e19f636478745467cc32004" translate="yes" xml:space="preserve">
          <source>Temporarily add a &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;template reference variable&lt;/a&gt; named &lt;code&gt;spy&lt;/code&gt; to the &lt;em&gt;Name&lt;/em&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; tag and use it to display the input's CSS classes.</source>
          <target state="translated">Временно добавить &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;эталонный шаблон переменную&lt;/a&gt; с именем &lt;code&gt;spy&lt;/code&gt; на &lt;em&gt;имя &lt;/em&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; тега и использовать его для отображения классов на вход в CSS.</target>
        </trans-unit>
        <trans-unit id="7f931515810af2d942cb1d62e9908a51d3886a8a" translate="yes" xml:space="preserve">
          <source>Test &lt;em&gt;DashboardHeroComponent&lt;/em&gt; stand-alone</source>
          <target state="translated">Тест &lt;em&gt;DashboardHeroComponent&lt;/em&gt; автономный</target>
        </trans-unit>
        <trans-unit id="fa5885e1b1f33914443039f015df6b87c1a577a9" translate="yes" xml:space="preserve">
          <source>Test Type</source>
          <target state="translated">Тип теста</target>
        </trans-unit>
        <trans-unit id="6896d81b81e460b5ab300516bb7a77d7c1527681" translate="yes" xml:space="preserve">
          <source>Test a component class on its own as you would test a service class.</source>
          <target state="translated">Тестирование класса компонента само по себе,как вы бы тестировали класс обслуживания.</target>
        </trans-unit>
        <trans-unit id="2448fa765af5ce19934b50addc880031820bc7a1" translate="yes" xml:space="preserve">
          <source>Test debugging</source>
          <target state="translated">Отладка тестов</target>
        </trans-unit>
        <trans-unit id="c1fecee23c2fad624d9f5999f217bf731328967f" translate="yes" xml:space="preserve">
          <source>Test file name and location</source>
          <target state="translated">Имя и местоположение тестового файла</target>
        </trans-unit>
        <trans-unit id="0b4483791cb553bd9da8d0099a6a90f9bcbbbf63" translate="yes" xml:space="preserve">
          <source>Test it</source>
          <target state="translated">Проверьте его</target>
        </trans-unit>
        <trans-unit id="a8407b2c9b9349ac41ecd56aec5c890c53b0b024" translate="yes" xml:space="preserve">
          <source>Test it as a stand-alone component.</source>
          <target state="translated">Протестируйте его как самостоятельный компонент.</target>
        </trans-unit>
        <trans-unit id="24d3085b21a512d75865d8bceffdd551bcf73352" translate="yes" xml:space="preserve">
          <source>Test it as used by &lt;code&gt;DashboardComponent&lt;/code&gt;.</source>
          <target state="translated">Протестируйте его как используется &lt;code&gt;DashboardComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc31d0d30b6280bc2d5300ca22178dcce3ff5d97" translate="yes" xml:space="preserve">
          <source>Test it as used by a substitute for &lt;code&gt;DashboardComponent&lt;/code&gt;.</source>
          <target state="translated">Протестируйте его, используя замену &lt;code&gt;DashboardComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8aa4d961b3eeea3f063253c0ba4dfe97056a0596" translate="yes" xml:space="preserve">
          <source>Test modules and platforms for individual platforms are available from '@angular/&amp;lt;platform_name&amp;gt;/testing'.</source>
          <target state="translated">Тестовые модули и платформы для отдельных платформ доступны по адресу &amp;laquo;@ angular / &amp;lt;имя_платформы&amp;gt; / testing&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f6332a2e843d893064dd38a7519d7af9fee2c152" translate="yes" xml:space="preserve">
          <source>Test that &lt;strong&gt;&lt;em&gt;both&lt;/em&gt;&lt;/strong&gt; input properties are set initially and that button clicks trigger the expected &lt;code&gt;ngOnChanges&lt;/code&gt; calls and values:</source>
          <target state="translated">Проверьте, что &lt;strong&gt;&lt;em&gt;оба&lt;/em&gt;&lt;/strong&gt; входных свойства установлены изначально, и что нажатия кнопок вызывают ожидаемые вызовы и значения &lt;code&gt;ngOnChanges&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b830fb4922eb986456c661bb752dde86c342564f" translate="yes" xml:space="preserve">
          <source>Test that clicking the &lt;em&gt;Agree&lt;/em&gt; and &lt;em&gt;Disagree&lt;/em&gt; buttons update the appropriate counters:</source>
          <target state="translated">Проверьте, что при нажатии кнопок &amp;laquo; &lt;em&gt;Согласен&amp;raquo;&lt;/em&gt; и &amp;laquo; &lt;em&gt;Не &lt;/em&gt;&lt;em&gt;согласен&amp;raquo;&lt;/em&gt; обновляются соответствующие счетчики:</target>
        </trans-unit>
        <trans-unit id="2ea1ba39844fea58edcd1af16ad25d6919716e86" translate="yes" xml:space="preserve">
          <source>Test that the seconds displayed in the parent template match the seconds displayed in the child's status message. Test also that clicking the &lt;em&gt;Stop&lt;/em&gt; button pauses the countdown timer:</source>
          <target state="translated">Убедитесь, что секунды, отображаемые в родительском шаблоне, соответствуют секундам, отображаемым в сообщении о состоянии дочернего элемента. Проверьте также, что нажатие кнопки &amp;laquo; &lt;em&gt;Стоп&amp;raquo;&lt;/em&gt; приостанавливает таймер обратного отсчета:</target>
        </trans-unit>
        <trans-unit id="45f1bff59c9d9d842f747fd8277989f00b5d93fc" translate="yes" xml:space="preserve">
          <source>Test the &quot;Share&quot; button:</source>
          <target state="translated">Тестировать кнопку &quot;Поделиться&quot;:</target>
        </trans-unit>
        <trans-unit id="66b89592491df1e4a7ad4132a2a59d1861c5a03d" translate="yes" xml:space="preserve">
          <source>Test the router by clicking a product name. The app displays the product details component, which currently always says &quot;product-details works!&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81f957521355323aeca520db19f5edf8e370479" translate="yes" xml:space="preserve">
          <source>Test the router by clicking a product name. The app displays the product details component, which currently always says &quot;product-details works!&quot; (We'll fix this in the next section.)</source>
          <target state="translated">Протестируйте маршрутизатор,нажав на название продукта.Приложение отображает компонент детализации продукта,который в настоящее время всегда говорит &quot;продукт-деталь работает&quot;! (Мы исправим это в следующем разделе).</target>
        </trans-unit>
        <trans-unit id="1b3ebf0a33fd2cdd1645c2654b9fc72083bf1031" translate="yes" xml:space="preserve">
          <source>Test to see if the differ knows how to diff this kind of object.</source>
          <target state="translated">Проверьте,умеет ли различный объект различать.</target>
        </trans-unit>
        <trans-unit id="989e322a6f1139d1353ac93e44e55e319afbc019" translate="yes" xml:space="preserve">
          <source>Test whether a key exists in the store.</source>
          <target state="translated">Проверьте,существует ли ключ в магазине.</target>
        </trans-unit>
        <trans-unit id="e619874937772363a1c2da2331f3ba776b465a2a" translate="yes" xml:space="preserve">
          <source>Test your cart component.</source>
          <target state="translated">Проверьте компонент тележки.</target>
        </trans-unit>
        <trans-unit id="99f07ad05e41dcec36a36e807face510d90d322b" translate="yes" xml:space="preserve">
          <source>Test your shipping prices feature:</source>
          <target state="translated">Проверьте ваши цены на доставку:</target>
        </trans-unit>
        <trans-unit id="be104cc054c0fcb9b37c08765773727a64cec717" translate="yes" xml:space="preserve">
          <source>TestBed</source>
          <target state="translated">TestBed</target>
        </trans-unit>
        <trans-unit id="9088ec50aaa13740a9d6dbb00c51142edc2e8808" translate="yes" xml:space="preserve">
          <source>TestBedStatic</source>
          <target state="translated">TestBedStatic</target>
        </trans-unit>
        <trans-unit id="7514db3c9bb60b98c0cfca5106beca4b49ed97ce" translate="yes" xml:space="preserve">
          <source>TestComponentRenderer</source>
          <target state="translated">TestComponentRenderer</target>
        </trans-unit>
        <trans-unit id="4b705f1f1aacbc87dfafe7ad9846c3e675f6db17" translate="yes" xml:space="preserve">
          <source>TestModuleMetadata</source>
          <target state="translated">TestModuleMetadata</target>
        </trans-unit>
        <trans-unit id="7b5b8bd0f077ed931708cc0d311b207cedc70ab6" translate="yes" xml:space="preserve">
          <source>TestRequest</source>
          <target state="translated">TestRequest</target>
        </trans-unit>
        <trans-unit id="c9e78f83c634dce62c7e36294672609e7678c20c" translate="yes" xml:space="preserve">
          <source>Testability</source>
          <target state="translated">Testability</target>
        </trans-unit>
        <trans-unit id="5cdf6feb6534f6bc92bba0edf1ff9781944b5a79" translate="yes" xml:space="preserve">
          <source>Testability hook</source>
          <target state="translated">Testability hook</target>
        </trans-unit>
        <trans-unit id="da504355c0338312be93a22ec235340a0cd93b24" translate="yes" xml:space="preserve">
          <source>TestabilityRegistry</source>
          <target state="translated">TestabilityRegistry</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="d636b1703597e213926e7b65e6945cb94e3293e5" translate="yes" xml:space="preserve">
          <source>Testing Attribute Directives</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f186e27eb7e517b4b8211f5e3987e28713883285" translate="yes" xml:space="preserve">
          <source>Testing HTTP requests</source>
          <target state="translated">Тестирование HTTP-запросов</target>
        </trans-unit>
        <trans-unit id="57ba27a4c362253fca0f0eaa9ec92fa28974c2d1" translate="yes" xml:space="preserve">
          <source>Testing HTTP services</source>
          <target state="translated">Тестирование сервисов HTTP</target>
        </trans-unit>
        <trans-unit id="fee626e19a6431b489f5d1148ae552b0a104d050" translate="yes" xml:space="preserve">
          <source>Testing Pipes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76004ae163e3baecfc0ef2edf0092063c811094c" translate="yes" xml:space="preserve">
          <source>Testing Utility APIs</source>
          <target state="translated">Тестирование API утилиты</target>
        </trans-unit>
        <trans-unit id="3591b1f3793535608545f3b06aaac5398962d724" translate="yes" xml:space="preserve">
          <source>Testing a builder</source>
          <target state="translated">Испытание строителя</target>
        </trans-unit>
        <trans-unit id="118ae999614ef20321dc13d67908393c582ec10a" translate="yes" xml:space="preserve">
          <source>Testing components with dependencies</source>
          <target state="translated">Тестирование компонентов с зависимостями</target>
        </trans-unit>
        <trans-unit id="0c1a0b297a16cb16b5427fe7c2629cc52c7885ef" translate="yes" xml:space="preserve">
          <source>Testing configuration.</source>
          <target state="translated">Тестировочная конфигурация.</target>
        </trans-unit>
        <trans-unit id="ce31601d12cfb46e7ca9204dea5a6c8548b4090c" translate="yes" xml:space="preserve">
          <source>Testing for errors</source>
          <target state="translated">Тестирование на ошибки</target>
        </trans-unit>
        <trans-unit id="6d6a52e29c3585e98a136bdd3c004782df3376aa" translate="yes" xml:space="preserve">
          <source>Testing plays a large part in complex applications and a simpler testing strategy is useful when validating that your forms function correctly. Reactive forms and template-driven forms have different levels of reliance on rendering the UI to perform assertions based on form control and form field changes. The following examples demonstrate the process of testing forms with reactive and template-driven forms.</source>
          <target state="translated">Тестирование играет большую роль в сложных приложениях,а более простая стратегия тестирования полезна при проверке правильности функционирования ваших форм.Реактивные формы и формы,основанные на шаблонах,имеют различные уровни зависимости от рендеринга пользовательского интерфейса для выполнения утверждений,основанных на управлении формами и изменении полей форм.Следующие примеры демонстрируют процесс тестирования форм с использованием реактивных форм и форм,основанных на шаблонах.</target>
        </trans-unit>
        <trans-unit id="7ac189f68b4ba793cd7d36c3a5bf6024b9bf74a8" translate="yes" xml:space="preserve">
          <source>Testing plays a large part in complex applications. A simpler testing strategy is useful when validating that your forms function correctly. Reactive forms and template-driven forms have different levels of reliance on rendering the UI to perform assertions based on form control and form field changes. The following examples demonstrate the process of testing forms with reactive and template-driven forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b05c22b69bf75d2207c5b9b5ed499a08af28e732" translate="yes" xml:space="preserve">
          <source>Testing reactive forms</source>
          <target state="translated">Тестирование реактивных форм</target>
        </trans-unit>
        <trans-unit id="bbd8606c3b49cd89a758e2dbe7c15b53a76c29e0" translate="yes" xml:space="preserve">
          <source>Testing services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7149268b2dd28c0da408beed3d0b927bd3331095" translate="yes" xml:space="preserve">
          <source>Testing services with the &lt;code&gt;TestBed&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4468a085563566bac21b54d700de2a4f27490d54" translate="yes" xml:space="preserve">
          <source>Testing services with the &lt;em&gt;TestBed&lt;/em&gt;</source>
          <target state="translated">Тестирование сервисов с &lt;em&gt;TestBed&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ecea04e4730b110b857580106d9bbe5105ac269a" translate="yes" xml:space="preserve">
          <source>Testing template-driven forms</source>
          <target state="translated">Формы для тестирования на основе шаблонов</target>
        </trans-unit>
        <trans-unit id="a802198482df1b18a4ea3d56e360a281b5282849" translate="yes" xml:space="preserve">
          <source>Testing the &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a50982872fe4e2a53b325bbc47cb5ace68164bd6" translate="yes" xml:space="preserve">
          <source>Testing the &lt;code&gt;HighlightDirective&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="588d70f9a91c1c83f650473e968961f1dc371e84" translate="yes" xml:space="preserve">
          <source>Testing the component &lt;em&gt;class&lt;/em&gt; is as easy as &lt;a href=&quot;testing-services&quot;&gt;testing a service&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="697051d918a08244ddad35b32bd220aad30731f8" translate="yes" xml:space="preserve">
          <source>Testing the component &lt;em&gt;class&lt;/em&gt; is as easy as testing a service.</source>
          <target state="translated">Тестирование &lt;em&gt;класса&lt;/em&gt; компонента так же просто, как тестирование сервиса.</target>
        </trans-unit>
        <trans-unit id="039c2cc87c7b0778c57ccee1c7470749c1926dca" translate="yes" xml:space="preserve">
          <source>Testing the specific use of the &lt;code&gt;HighlightDirective&lt;/code&gt; within the &lt;code&gt;AboutComponent&lt;/code&gt; requires only the techniques explored above (in particular the &lt;a href=&quot;testing#nested-component-tests&quot;&gt;&quot;Shallow test&quot;&lt;/a&gt; approach).</source>
          <target state="translated">Тестирование конкретного использования &lt;code&gt;HighlightDirective&lt;/code&gt; в &lt;code&gt;AboutComponent&lt;/code&gt; требует только методов, описанных выше (в частности, подход &lt;a href=&quot;testing#nested-component-tests&quot;&gt;&amp;laquo;неглубокий тест&amp;raquo;&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="8806255216fa6f095c7f13623f3298df9f8f9522" translate="yes" xml:space="preserve">
          <source>Testing the specific use of the &lt;code&gt;HighlightDirective&lt;/code&gt; within the &lt;code&gt;AboutComponent&lt;/code&gt; requires only the techniques explored in the &lt;a href=&quot;testing-components-scenarios#nested-component-tests&quot;&gt;&quot;Nested component tests&quot;&lt;/a&gt; section of &lt;a href=&quot;testing-components-scenarios&quot;&gt;Component testing scenarios&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4f5b3e2a6878f7cf4f7973ba68c545ec004c46" translate="yes" xml:space="preserve">
          <source>Testing with &lt;em&gt;ActivatedRouteStub&lt;/em&gt;</source>
          <target state="translated">Тестирование с помощью &lt;em&gt;ActivatedRouteStub&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7758900c8180a1d000869ec3a8a1ccd3ecff2333" translate="yes" xml:space="preserve">
          <source>Testing with a spy</source>
          <target state="translated">Тестирование со шпионом</target>
        </trans-unit>
        <trans-unit id="9e98b81ed47ad883a81a35abaf0ee36e4159a854" translate="yes" xml:space="preserve">
          <source>Testing without &lt;code&gt;beforeEach()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02a000b264944782c696348f9263db99fe9a4a0" translate="yes" xml:space="preserve">
          <source>Testing without &lt;em&gt;beforeEach()&lt;/em&gt;</source>
          <target state="translated">Тестирование без &lt;em&gt;beforeEach ()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bfd426fb8fc07cdbbae13c053c5b255b4310ba6e" translate="yes" xml:space="preserve">
          <source>Testing your Angular application helps you check that your app is working as you expect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="888d9d0f4ee5e8f0c157b91c6eb659ea756add43" translate="yes" xml:space="preserve">
          <source>Tests can explore how the &lt;code&gt;HeroDetailComponent&lt;/code&gt; responds to different &lt;code&gt;id&lt;/code&gt; parameter values by manipulating the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; injected into the component's constructor.</source>
          <target state="translated">Тесты могут изучить, как &lt;code&gt;HeroDetailComponent&lt;/code&gt; реагирует на различные значения параметров &lt;code&gt;id&lt;/code&gt; , манипулируя &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; , внедренным в конструктор компонента.</target>
        </trans-unit>
        <trans-unit id="a149f72eba01c87f9d7e2acc8e6ccead108bd378" translate="yes" xml:space="preserve">
          <source>Tests can not only be retained through an upgrade process, but they can also be used as a valuable safety measure when ensuring that the application does not break during the upgrade. E2E tests are especially useful for this purpose.</source>
          <target state="translated">Испытания можно не только сохранить в процессе модернизации,но и использовать их в качестве ценной меры безопасности,гарантирующей,что приложение не выйдет из строя во время модернизации.Испытания E2E особенно полезны для этой цели.</target>
        </trans-unit>
        <trans-unit id="ef9720ff67e3a0f70d038c1f235e9be14b1f91b7" translate="yes" xml:space="preserve">
          <source>Tests click buttons of both the parent &lt;code&gt;MissionControlComponent&lt;/code&gt; and the &lt;code&gt;AstronautComponent&lt;/code&gt; children and verify that the history meets expectations:</source>
          <target state="translated">&lt;code&gt;MissionControlComponent&lt;/code&gt; нажатия кнопок родительского элемента MissionControlComponent и дочерних элементов &lt;code&gt;AstronautComponent&lt;/code&gt; и проверяет, соответствует ли история ожиданиям:</target>
        </trans-unit>
        <trans-unit id="9a1fb83f4107a4334b4d83ca00fd46b35664a0df" translate="yes" xml:space="preserve">
          <source>Tests that exercise the component need ...</source>
          <target state="translated">Тесты,которые упражняют компонент,необходимый ...</target>
        </trans-unit>
        <trans-unit id="5e8952a23ac8b494d5a4aa2dfda252105e5ee80b" translate="yes" xml:space="preserve">
          <source>Tests the value using a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;regular expression&lt;/a&gt; pattern suitable for common usecases. The pattern is based on the definition of a valid email address in the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address&quot;&gt;WHATWG HTML specification&lt;/a&gt; with some enhancements to incorporate more RFC rules (such as rules related to domain names and the lengths of different parts of the address).</source>
          <target state="translated">Проверяет значение, используя шаблон &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions&quot;&gt;регулярного выражения&lt;/a&gt; , подходящий для распространенных случаев использования. Шаблон основан на определении действительного адреса электронной почты в &lt;a href=&quot;https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address&quot;&gt;спецификации WHATWG HTML&lt;/a&gt; с некоторыми улучшениями для включения большего количества правил RFC (таких как правила, относящиеся к доменным именам и длинам различных частей адреса).</target>
        </trans-unit>
        <trans-unit id="40db585145f66e7c1d97246b405cda4f5c923267" translate="yes" xml:space="preserve">
          <source>Textual description of response status code.</source>
          <target state="translated">Текстовое описание кода статуса ответа.</target>
        </trans-unit>
        <trans-unit id="6eee3bad7a4f570555e555491652b44c30be408f" translate="yes" xml:space="preserve">
          <source>Textual input; ideal for string or number options.</source>
          <target state="translated">Текстовый ввод;идеально подходит для строковых или числовых опций.</target>
        </trans-unit>
        <trans-unit id="45b58f88e69ae6780e1f2abce5d12c9d0d78969a" translate="yes" xml:space="preserve">
          <source>Thanks to &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;injector inheritance&lt;/a&gt;, you can still inject application-wide services into these components. A component's injector is a child of its parent component's injector, and inherits from all ancestor injectors all the way back to the application's &lt;em&gt;root&lt;/em&gt; injector. Angular can inject a service provided by any injector in that lineage.</source>
          <target state="translated">Благодаря &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;наследованию инжекторов&lt;/a&gt; , вы все еще можете внедрять сервисы приложения в эти компоненты. Инжектор компонента является дочерним по отношению к инжектору его родительского компонента и наследуется от всех инжекторов-предков вплоть до &lt;em&gt;корневого&lt;/em&gt; инжектора приложения. Angular может внедрить услугу, предоставляемую любым инжектором в этой линии.</target>
        </trans-unit>
        <trans-unit id="b7988d61e2d1ccc1aba091cbcda9c3833787e86a" translate="yes" xml:space="preserve">
          <source>That &lt;em&gt;selected hero&lt;/em&gt; coloring is the work of the &lt;code&gt;.selected&lt;/code&gt; CSS class in the &lt;a href=&quot;toh-pt2#styles&quot;&gt;styles you added earlier&lt;/a&gt;. You just have to apply the &lt;code&gt;.selected&lt;/code&gt; class to the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; when the user clicks it.</source>
          <target state="translated">Это &lt;em&gt;выбранный герой&lt;/em&gt; окраска работа &lt;code&gt;.selected&lt;/code&gt; класса CSS в &lt;a href=&quot;toh-pt2#styles&quot;&gt;стилях , которые вы добавили ранее&lt;/a&gt; . Вам просто нужно применить класс &lt;code&gt;.selected&lt;/code&gt; к &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; , когда пользователь щелкает по нему.</target>
        </trans-unit>
        <trans-unit id="997d534a801fe52469433556fdfc70812d5791b0" translate="yes" xml:space="preserve">
          <source>That &lt;em&gt;won't work&lt;/em&gt; when the &lt;code&gt;HeroService&lt;/code&gt; is actually making requests of a remote server.</source>
          <target state="translated">Это &lt;em&gt;не сработает,&lt;/em&gt; когда &lt;code&gt;HeroService&lt;/code&gt; фактически отправляет запросы удаленному серверу.</target>
        </trans-unit>
        <trans-unit id="855bfc37db8fbfcd6a69c185c541bcee572c7752" translate="yes" xml:space="preserve">
          <source>That brief syntax does a lot:</source>
          <target state="translated">Этот краткий синтаксис многое делает:</target>
        </trans-unit>
        <trans-unit id="baeabedfa4d2b67801841521af7799623a88f4c2" translate="yes" xml:space="preserve">
          <source>That doesn't match any of the concrete configured routes which means the router falls through to the wildcard route and displays the &lt;code&gt;PageNotFoundComponent&lt;/code&gt;.</source>
          <target state="translated">Это не соответствует ни одному из конкретных сконфигурированных маршрутов, что означает, что маршрутизатор перебирает маршрутный символ и отображает &lt;code&gt;PageNotFoundComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f02277b835c3a65bcb6c845332d3f8ccc026ea3a" translate="yes" xml:space="preserve">
          <source>That doesn't match any of the hard-coded routes which means the router falls through to the wildcard route and displays the &lt;code&gt;PageNotFoundComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53890b190e7522b42925863c087bdb3871d6fd9d" translate="yes" xml:space="preserve">
          <source>That is the last you'll see of AngularJS! It has served us well but now it's time to say goodbye.</source>
          <target state="translated">Это последнее,что ты увидишь в AngularJS! Это хорошо нам послужило,но теперь пришло время попрощаться.</target>
        </trans-unit>
        <trans-unit id="546cbdd2883bb656047b37ff93de8aac7a7774d3" translate="yes" xml:space="preserve">
          <source>That is why there are two ways to create the module: &lt;code&gt;RouterModule.forRoot&lt;/code&gt; and &lt;code&gt;RouterModule.forChild&lt;/code&gt;.</source>
          <target state="translated">Вот почему существует два способа создания модуля: &lt;code&gt;RouterModule.forRoot&lt;/code&gt; и &lt;code&gt;RouterModule.forChild&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78cd18b8b1563fee45858ef3948be6ae3918ea9b" translate="yes" xml:space="preserve">
          <source>That leaves only components bootstrapped using one of the imperative techniques, such as &lt;a href=&quot;../api/core/viewcontainerref#createComponent&quot;&gt;&lt;code&gt;ViewComponentRef.createComponent()&lt;/code&gt;&lt;/a&gt; as undiscoverable.</source>
          <target state="translated">Это оставляет только компоненты, загруженные с использованием одного из императивных методов, таких как &lt;a href=&quot;../api/core/viewcontainerref#createComponent&quot;&gt; &lt;code&gt;ViewComponentRef.createComponent()&lt;/code&gt; &lt;/a&gt; , как неоткрываемые .</target>
        </trans-unit>
        <trans-unit id="5d9c064530f05f389c5fbe1c71c58fb65ce76d57" translate="yes" xml:space="preserve">
          <source>That shows one hero. To list them all, add an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; to iterate through the list of heroes:</source>
          <target state="translated">Это показывает один герой. Чтобы перечислить их все, добавьте &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; , чтобы перебрать список героев:</target>
        </trans-unit>
        <trans-unit id="60723467a2927bc85f77b7d415dfc59363db1a8f" translate="yes" xml:space="preserve">
          <source>That you can only apply &lt;a href=&quot;structural-directives#one-per-element&quot;&gt;one structural directive&lt;/a&gt; to an element.</source>
          <target state="translated">Вы можете применять только &lt;a href=&quot;structural-directives#one-per-element&quot;&gt;одну структурную директиву&lt;/a&gt; к элементу.</target>
        </trans-unit>
        <trans-unit id="6e04a0a9c73bb1fbb17f9d8723aa29ee17f93b6c" translate="yes" xml:space="preserve">
          <source>That's &lt;em&gt;preloading&lt;/em&gt;.</source>
          <target state="translated">Это &lt;em&gt;предварительная загрузка&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e43e04a9dd6b720de1e5ae14bfbe69af946d80c7" translate="yes" xml:space="preserve">
          <source>That's &lt;em&gt;really&lt;/em&gt; crisp. Only the &lt;em&gt;test doubles&lt;/em&gt; in the &lt;code&gt;providers&lt;/code&gt; remain. Even the &lt;code&gt;HeroDetailComponent&lt;/code&gt; declaration is gone.</source>
          <target state="translated">Это &lt;em&gt;действительно&lt;/em&gt; свежо. Остались только &lt;em&gt;удвоения теста&lt;/em&gt; в &lt;code&gt;providers&lt;/code&gt; . Даже объявление &lt;code&gt;HeroDetailComponent&lt;/code&gt; исчезло.</target>
        </trans-unit>
        <trans-unit id="c76bb94cbc84152062cf4a329790720f178cb281" translate="yes" xml:space="preserve">
          <source>That's &lt;em&gt;two-way data binding&lt;/em&gt;. For more information, see &lt;a href=&quot;template-syntax#ngModel&quot;&gt;Two-way binding with NgModel&lt;/a&gt; on the the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">Это &lt;em&gt;двусторонняя привязка данных&lt;/em&gt; . Для получения дополнительной информации см. &lt;a href=&quot;template-syntax#ngModel&quot;&gt;Двустороннее связывание с NgModel&lt;/a&gt; на странице &lt;a href=&quot;template-syntax&quot;&gt;Синтаксис шаблона&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3921dcb6884a1953a2a80655d084b46ece04b5af" translate="yes" xml:space="preserve">
          <source>That's because interceptors work at a lower level than those &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; methods. A single HTTP request can generate multiple &lt;em&gt;events&lt;/em&gt;, including upload and download progress events. The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; class itself is actually an event, whose type is &lt;code&gt;&lt;a href=&quot;../api/common/http/httpeventtype#Response&quot;&gt;HttpEventType.Response&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это потому, что перехватчики работают на более низком уровне, чем методы &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; . Один HTTP-запрос может генерировать несколько &lt;em&gt;событий&lt;/em&gt; , включая &lt;em&gt;события&lt;/em&gt; загрузки и выгрузки. Сам класс &lt;code&gt;&lt;a href=&quot;../api/common/http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; на самом деле является событием, тип которого &lt;code&gt;&lt;a href=&quot;../api/common/http/httpeventtype#Response&quot;&gt;HttpEventType.Response&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73090ab1ac428708459347276bf105c30a54c714" translate="yes" xml:space="preserve">
          <source>That's good, but it would be nice to &lt;em&gt;simultaneously&lt;/em&gt; apply the directive and set the color &lt;em&gt;in the same attribute&lt;/em&gt; like this.</source>
          <target state="translated">Это хорошо, но было бы неплохо &lt;em&gt;одновременно&lt;/em&gt; применить директиву и установить цвет &lt;em&gt;в том же атрибуте,&lt;/em&gt; как этот.</target>
        </trans-unit>
        <trans-unit id="fdd51638c77368aee34229eb5d7f4a31418fff47" translate="yes" xml:space="preserve">
          <source>That's not a problem when the source code is in memory. But the &lt;code&gt;BannerComponent&lt;/code&gt; requires external files that the compiler must read from the file system, an inherently &lt;em&gt;asynchronous&lt;/em&gt; operation.</source>
          <target state="translated">Это не проблема, когда исходный код находится в памяти. Но &lt;code&gt;BannerComponent&lt;/code&gt; требует внешних файлов, которые компилятор должен прочитать из файловой системы, по своей сути &lt;em&gt;асинхронная&lt;/em&gt; операция.</target>
        </trans-unit>
        <trans-unit id="6568d13ab9ecb29b6bc0a1b257bc515ba6d56377" translate="yes" xml:space="preserve">
          <source>That's not a problem when you run the CLI &lt;code&gt;ng test&lt;/code&gt; command because it &lt;em&gt;compiles the app before running the tests&lt;/em&gt;.</source>
          <target state="translated">Это не проблема, когда вы запускаете команду CLI &lt;code&gt;ng test&lt;/code&gt; , потому что она &lt;em&gt;компилирует приложение перед запуском тестов&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="75533f536e09008a2f4370b9a66ce6baff36ade1" translate="yes" xml:space="preserve">
          <source>That's not a problem. When three modules all import Module 'A', Angular evaluates Module 'A' once, the first time it encounters it, and doesn't do so again.</source>
          <target state="translated">Это не проблема.Когда три модуля все импортируют Модуль 'A',Angular оценивает Модуль 'A' один раз,при первой же встрече и не делает этого снова.</target>
        </trans-unit>
        <trans-unit id="151a2e953c5878c8b2f49ccc710715719dae8e6b" translate="yes" xml:space="preserve">
          <source>That's possible by configuring the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixtureautodetect&quot;&gt;ComponentFixtureAutoDetect&lt;/a&gt;&lt;/code&gt; provider. First import it from the testing utility library:</source>
          <target state="translated">Это возможно, настроив &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; с поставщиком &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixtureautodetect&quot;&gt;ComponentFixtureAutoDetect&lt;/a&gt;&lt;/code&gt; . Сначала импортируйте его из библиотеки утилиты тестирования:</target>
        </trans-unit>
        <trans-unit id="139fd9b014e0c67851c103338e6f1bb39431603f" translate="yes" xml:space="preserve">
          <source>That's the only change you should make to the &lt;code&gt;HeroDetailComponent&lt;/code&gt; class. There are no more properties. There's no presentation logic. This component simply receives a hero object through its &lt;code&gt;hero&lt;/code&gt; property and displays it.</source>
          <target state="translated">Это единственное изменение, которое вы должны внести в класс &lt;code&gt;HeroDetailComponent&lt;/code&gt; . Там нет больше свойств. Там нет логики представления. Этот компонент просто получает объект героя через его свойство &lt;code&gt;hero&lt;/code&gt; и отображает его.</target>
        </trans-unit>
        <trans-unit id="9c6da24822230ab8738da89d9e6d04f423c6f361" translate="yes" xml:space="preserve">
          <source>That's too much effort just to answer a few simple questions about links.</source>
          <target state="translated">Это слишком много усилий,чтобы ответить на несколько простых вопросов о ссылках.</target>
        </trans-unit>
        <trans-unit id="c1bcf5a4b4646f6c696415537ab243683a1e6ff1" translate="yes" xml:space="preserve">
          <source>That's true at whatever level &lt;code&gt;A&lt;/code&gt; appears in a hierarchy of imported NgModules. When Module 'B' imports Module 'A', Module 'C' imports 'B', and Module 'D' imports &lt;code&gt;[C, B, A]&lt;/code&gt;, then 'D' triggers the evaluation of 'C', which triggers the evaluation of 'B', which evaluates 'A'. When Angular gets to the 'B' and 'A' in 'D', they're already cached and ready to go.</source>
          <target state="translated">Это верно при любом уровне появляется в иерархии импортных NgModules. Когда модуль &amp;laquo;B&amp;raquo; импортирует модуль &amp;laquo;A&amp;raquo;, модуль &amp;laquo;C&amp;raquo; импортирует &amp;laquo;B&amp;raquo;, а модуль &amp;laquo;D&amp;raquo; импортирует &lt;code&gt;[C, B, A]&lt;/code&gt; , тогда &amp;laquo;D&amp;raquo; запускает оценку &amp;laquo;C&amp;raquo;, которая запускает оценку из &amp;laquo;B&amp;raquo;, который оценивает &amp;laquo;A&amp;raquo;. Когда Angular добирается до &amp;laquo;B&amp;raquo; и &amp;laquo;A&amp;raquo; в &amp;laquo;D&amp;raquo;, они уже кешируются и готовы к работе. &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eab482f8d705259ee9ad3c1b5e7791e025cccad6" translate="yes" xml:space="preserve">
          <source>That's where a popup will go, once you learn how to route a popup component to it.</source>
          <target state="translated">Вот куда пойдет всплывающее окно,как только вы научитесь маршрутизировать к нему всплывающее окно.</target>
        </trans-unit>
        <trans-unit id="bd89378d819f44a785e6fb9e2f462ab1c7095c1d" translate="yes" xml:space="preserve">
          <source>That's why it's a best practice to separate presentation of data from data access by encapsulating data access in a separate service and delegating to that service in the component, even in simple cases like this one.</source>
          <target state="translated">Поэтому лучше всего отделять представление данных от доступа к данным путем инкапсуляции доступа к данным в отдельный сервис и делегирования этому сервису в компоненте,даже в таких простых случаях,как этот.</target>
        </trans-unit>
        <trans-unit id="5d4537305ed4c11fbd605714ec89b0aa7ead00b2" translate="yes" xml:space="preserve">
          <source>The &quot;&lt;em&gt;is required&lt;/em&gt;&quot; message in a nearby &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, which you'll display only if the control is invalid.</source>
          <target state="translated">Сообщение &amp;laquo; &lt;em&gt;Требуется&lt;/em&gt; &amp;raquo; в соседнем &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , которое будет отображаться, только если элемент управления недействителен.</target>
        </trans-unit>
        <trans-unit id="cb6da98142a6e890c992fc42a49312215d3df539" translate="yes" xml:space="preserve">
          <source>The &quot;Hello World&quot; schematic might, for example, ask the user for their name, and display that name in place of the default name &quot;world&quot;. To define such a prompt, add an &lt;code&gt;x-prompt&lt;/code&gt; property to the schema for the &lt;code&gt;name&lt;/code&gt; variable.</source>
          <target state="translated">Например, схема &amp;laquo;Hello World&amp;raquo; может запрашивать у пользователя его имя и отображать это имя вместо имени по умолчанию &amp;laquo;world&amp;raquo;. Чтобы определить такой запрос, добавьте в схему свойство &lt;code&gt;x-prompt&lt;/code&gt; для переменной &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d1ae32fdd2dc6ba7c8c1c16480729f50cbd84d18" translate="yes" xml:space="preserve">
          <source>The &quot;Try it&quot; tutorial covers the same major topics&amp;mdash;components, template syntax, routing, services, and accessing data via HTTP&amp;mdash;in a condensed format, following the most current best practices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2bbaa39f4a35729b9133f4121bdad46ac1e7bd6" translate="yes" xml:space="preserve">
          <source>The &quot;click&quot; test &lt;em&gt;in this example&lt;/em&gt; is misleading. It tests the &lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt; rather than the &lt;em&gt;component&lt;/em&gt;. This is a common failing of directive stubs.</source>
          <target state="translated">Тест &amp;laquo;щелчка&amp;raquo; &lt;em&gt;в этом примере&lt;/em&gt; вводит в заблуждение. Он проверяет &lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt; , а не &lt;em&gt;компонент&lt;/em&gt; . Это обычная ошибка директивных заглушек.</target>
        </trans-unit>
        <trans-unit id="dc26e27c36519d4711032d039edfafa3a241de0c" translate="yes" xml:space="preserve">
          <source>The &quot;merge&quot; option appends new query params to the params from the current URL:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5f01d6a3af90f911121c5462222edb1dc0b1d9" translate="yes" xml:space="preserve">
          <source>The &quot;preserve&quot; option discards any new query params:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faea2451a7960e46bcbe2d68d4b393ce90a1ad33" translate="yes" xml:space="preserve">
          <source>The &quot;source of truth&quot; for the value and validation status of a form input element at a given point in time. When using &lt;a href=&quot;glossary#reactive-forms&quot;&gt;reactive forms&lt;/a&gt;, the form model is created explicitly in the component class. When using &lt;a href=&quot;glossary#template-driven-forms&quot;&gt;template-driven forms&lt;/a&gt;, the form model is implicitly created by directives.</source>
          <target state="translated">&amp;laquo;Источник правды&amp;raquo; для значения и статуса проверки элемента ввода формы в данный момент времени. При использовании &lt;a href=&quot;glossary#reactive-forms&quot;&gt;реактивных форм&lt;/a&gt; модель формы создается явно в классе компонента. При использовании &lt;a href=&quot;glossary#template-driven-forms&quot;&gt;шаблонно-управляемых форм&lt;/a&gt; модель формы неявно создается директивами.</target>
        </trans-unit>
        <trans-unit id="5f16bf1662cd8257f3371d70ecfe3dffbbd1ef48" translate="yes" xml:space="preserve">
          <source>The &quot;source of truth&quot; is the template. The validation is defined using attributes on the individual input elements.</source>
          <target state="translated">Источником истины&quot; является шаблон.Валидация определяется с помощью атрибутов на отдельных входных элементах.</target>
        </trans-unit>
        <trans-unit id="2b7f919d94c58fca886b43402bcc81835c791109" translate="yes" xml:space="preserve">
          <source>The &quot;source of truth&quot;, the form model, is defined in the component class.</source>
          <target state="translated">Источник истины&quot;,модель формы,определяется в классе компонентов.</target>
        </trans-unit>
        <trans-unit id="6dd684e5040381ad0ce17b5ddf5b549b7b739b86" translate="yes" xml:space="preserve">
          <source>The &quot;submit&quot; event object</source>
          <target state="translated">Объект мероприятия &quot;Отправить&quot;</target>
        </trans-unit>
        <trans-unit id="359847ddb8d62a2bd8e853ea6598a7205ec1c46d" translate="yes" xml:space="preserve">
          <source>The &amp;lt;ng-template&amp;gt; is an Angular element for rendering HTML. It is never displayed directly. In fact, before rendering the view, Angular &lt;em&gt;replaces&lt;/em&gt; the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; and its contents with a comment.</source>
          <target state="translated">&amp;lt;Ng-template&amp;gt; является угловым элементом для рендеринга HTML. Он никогда не отображается напрямую. На самом деле, перед визуализацией вида, Угловой &lt;em&gt;заменяет&lt;/em&gt; на &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; и его содержимое с комментарием.</target>
        </trans-unit>
        <trans-unit id="f2bc11b9bff8891b1b4b95777be8093827f90cd6" translate="yes" xml:space="preserve">
          <source>The 'legacy_enabled' and 'legacy_disabled' should not be used for new applications.</source>
          <target state="translated">Не следует использовать 'legacy_enabled' и 'legacy_disabled' для новых приложений.</target>
        </trans-unit>
        <trans-unit id="5a0607fc5a71f75025003113fba9d409eef3025c" translate="yes" xml:space="preserve">
          <source>The (*) before &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; is required in this example. For more information, see &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt;.</source>
          <target state="translated">(*) Перед &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; требуется в этом примере. Для получения дополнительной информации см. &lt;a href=&quot;structural-directives&quot;&gt;Структурные директивы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2eeefeb9f39958efc7cb49ff902890458efed5d3" translate="yes" xml:space="preserve">
          <source>The (*) before &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; is required in this example.</source>
          <target state="translated">(*) Перед &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; требуется в этом примере.</target>
        </trans-unit>
        <trans-unit id="79cf9ba3340b50f113c7f5c522857c8402ee3e8d" translate="yes" xml:space="preserve">
          <source>The 0-based index at which to insert the new view into this container. If not specified, appends the new view as the last entry.</source>
          <target state="translated">Индекс на основе 0,с помощью которого можно вставить новое представление в этот контейнер.Если не указано,то новое представление добавляется как последняя запись.</target>
        </trans-unit>
        <trans-unit id="64cb3c9ce2941cca665837b8c920ab81c42ebce7" translate="yes" xml:space="preserve">
          <source>The 0-based index at which to insert the view. If not specified, appends the new view as the last entry.</source>
          <target state="translated">Индекс на основе 0,в который вставляется вид.Если не указан,добавляет новый вид как последнюю запись.</target>
        </trans-unit>
        <trans-unit id="9616203d2c83fbac5cabbb36c7f2845d852155d7" translate="yes" xml:space="preserve">
          <source>The 0-based index of the view to destroy. If not specified, the last view in the container is removed.</source>
          <target state="translated">Индекс &quot;0&quot;,основанный на представлении об уничтожении.Если он не указан,то последний вид в контейнере удаляется.</target>
        </trans-unit>
        <trans-unit id="b9fbb1d1b433e68cf1c7c1b6321eecebf8ac3993" translate="yes" xml:space="preserve">
          <source>The 0-based index of the view to detach. If not specified, the last view in the container is detached.</source>
          <target state="translated">Индекс вида на 0,чтобы отсоединиться.Если не указан,то отсоединяется последний вид в контейнере.</target>
        </trans-unit>
        <trans-unit id="c5fb1f0cba49a032643a41c63159622cd0d6fc49" translate="yes" xml:space="preserve">
          <source>The 0-based index of the view to retrieve.</source>
          <target state="translated">Индекс вида на 0.</target>
        </trans-unit>
        <trans-unit id="5e66a0e6fb18ae6b407f336df6eccb9c647f8d95" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guide/glossary#injector&quot;&gt;dependency injector&lt;/a&gt; for this component instance.</source>
          <target state="translated">&lt;a href=&quot;../../guide/glossary#injector&quot;&gt;Инжектор зависимостей&lt;/a&gt; для этого экземпляра компонента.</target>
        </trans-unit>
        <trans-unit id="cca3012370d419e31b6d75cf098ab8e4d8294696" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guide/glossary#injector&quot;&gt;dependency injector&lt;/a&gt; for this view container.</source>
          <target state="translated">&lt;a href=&quot;../../guide/glossary#injector&quot;&gt;Инжектор зависимостей&lt;/a&gt; для этого вида контейнера.</target>
        </trans-unit>
        <trans-unit id="3a9d663e80b981cfdfa0a3ab710f96c7ea6bc4a5" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;host view&lt;/a&gt; defined by the template for this component instance.</source>
          <target state="translated">Представление &lt;a href=&quot;../../guide/glossary#view-tree&quot;&gt;хоста,&lt;/a&gt; определенное шаблоном для этого экземпляра компонента.</target>
        </trans-unit>
        <trans-unit id="a6f17b18c5afe6cb997cfb00cbd23361054b4017" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for a router configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fca9b2eeb7fcdb4b750c3d77842055cb90ffb3" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/animations/animationoptions&quot;&gt;AnimationOptions&lt;/a&gt; interface in Angular animations enables you to create animations that you can reuse across different components.</source>
          <target state="translated">Интерфейс &lt;a href=&quot;../api/animations/animationoptions&quot;&gt;AnimationOptions&lt;/a&gt; в анимации Angular позволяет создавать анимации, которые можно повторно использовать в различных компонентах.</target>
        </trans-unit>
        <trans-unit id="4619e6447ab97a35a308e3e9c3efbfde9436b6a8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;&lt;code&gt;AsyncPipe&lt;/code&gt;&lt;/a&gt; subscribes (and unsubscribes) for you automatically.</source>
          <target state="translated">В &lt;a href=&quot;../api/common/asyncpipe&quot;&gt; &lt;code&gt;AsyncPipe&lt;/code&gt; &lt;/a&gt; выписывает (и отписывается) для вас автоматически.</target>
        </trans-unit>
        <trans-unit id="25ca1534cac8f8f9928b1c6bab67be9f0b8e9968" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt; subscribes to an observable or promise and returns the latest value it has emitted. When a new value is emitted, the pipe marks the component to be checked for changes.</source>
          <target state="translated">В &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt; выписывает наблюдаемое или обещание и возвращают последнее значение оно испускается. Когда выдается новое значение, труба отмечает компонент, который необходимо проверить на наличие изменений.</target>
        </trans-unit>
        <trans-unit id="434328f2381c94483bc520c3c7a3f880f61ac182" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt; provides an easy way to diagnose a mysteriously failing data binding or inspect an object for future binding.</source>
          <target state="translated">&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt; обеспечивает простой способ диагностики загадочно провала попытки связывания данных или инспектировать объект для связывания будущего.</target>
        </trans-unit>
        <trans-unit id="13e16a47435e26b6e827703b1b62df1ed890aeda" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/common/location&quot;&gt;&lt;code&gt;location&lt;/code&gt;&lt;/a&gt; is an Angular service for interacting with the browser. You'll use it &lt;a href=&quot;toh-pt5#goback&quot;&gt;later&lt;/a&gt; to navigate back to the view that navigated here.</source>
          <target state="translated">&lt;a href=&quot;../api/common/location&quot;&gt; &lt;code&gt;location&lt;/code&gt; &lt;/a&gt; является Угловым сервисом для взаимодействия с браузером. Вы будете использовать его &lt;a href=&quot;toh-pt5#goback&quot;&gt;позже,&lt;/a&gt; чтобы вернуться к представлению, которое было здесь.</target>
        </trans-unit>
        <trans-unit id="63249ca017815dd12486b06a18f3fea91eecd138" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/common/ngforof&quot;&gt;&lt;code&gt;NgFor&lt;/code&gt; API guide&lt;/a&gt; describes additional &lt;code&gt;NgFor&lt;/code&gt; directive properties and context properties.</source>
          <target state="translated">Руководство по &lt;a href=&quot;../api/common/ngforof&quot;&gt; &lt;code&gt;NgFor&lt;/code&gt; API&lt;/a&gt; описывает дополнительные &lt;code&gt;NgFor&lt;/code&gt; директивы NgFor и свойства контекста.</target>
        </trans-unit>
        <trans-unit id="5061a2f16c724493f890befa083acedce10d0a0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt; is a test harness for interacting with the created component and its corresponding element.</source>
          <target state="translated">&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt; тест Жгут для взаимодействия с созданным компонентом и его соответствующим элементом.</target>
        </trans-unit>
        <trans-unit id="926862358e9552f80f5b48ee4a848ea4e9c99ef9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick()&lt;/a&gt; function accepts milliseconds and tickOptions as parameters, the millisecond (defaults to 0 if not provided) parameter represents how much the virtual clock advances. For example, if you have a &lt;code&gt;setTimeout(fn, 100)&lt;/code&gt; in a &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; test, you need to use tick(100) to trigger the fn callback. The tickOptions is an optional parameter with a property called &lt;code&gt;processNewMacroTasksSynchronously&lt;/code&gt; (defaults to true) that represents whether to invoke new generated macro tasks when ticking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72408a82658e57f822ecfc68b94211f35dcd5c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick()&lt;/a&gt; function is one of the Angular testing utilities that you import with &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;. It's a companion to &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; and you can only call it within a &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01125ede2a72c7a023c0c79cf22dbdcb8a08e761" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/forms/ngformselectorwarning&quot;&gt;&lt;code&gt;NgFormSelectorWarning&lt;/code&gt;&lt;/a&gt; directive is solely used to display warnings when the deprecated &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; selector is used.</source>
          <target state="translated">&lt;a href=&quot;../api/forms/ngformselectorwarning&quot;&gt; &lt;code&gt;NgFormSelectorWarning&lt;/code&gt; &lt;/a&gt; директива используется исключительно для предупреждения отображения , когда осуждается &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; используется селектор.</target>
        </trans-unit>
        <trans-unit id="fc13089d19feff72cbef3b960dd6ca15d44a7b22" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/router/activatedroute&quot;&gt;&lt;code&gt;ActivatedRoute&lt;/code&gt;&lt;/a&gt; holds information about the route to this instance of the &lt;code&gt;HeroDetailComponent&lt;/code&gt;. This component is interested in the route's parameters extracted from the URL. The &quot;id&quot; parameter is the &lt;code&gt;id&lt;/code&gt; of the hero to display.</source>
          <target state="translated">&lt;a href=&quot;../api/router/activatedroute&quot;&gt; &lt;code&gt;ActivatedRoute&lt;/code&gt; &lt;/a&gt; содержит информацию о маршруте к этому экземпляру &lt;code&gt;HeroDetailComponent&lt;/code&gt; . Этот компонент заинтересован в параметрах маршрута, извлеченных из URL. Параметр &amp;laquo;id&amp;raquo; - это &lt;code&gt;id&lt;/code&gt; героя для отображения.</target>
        </trans-unit>
        <trans-unit id="55ce4d8ac400340cf0b00697e51a55aba017c3e7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt; is an injected router service that makes use of observables to get information about a route path and parameters. For example, &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#url&quot;&gt;ActivatedRoute.url&lt;/a&gt;&lt;/code&gt; contains an observable that reports the route path or paths. Here's an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a856463bc03963a039b172b04033375f6ce5d7" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt; is an injected router service that makes use of observables to get information about a route path and parameters. For example, &lt;code&gt;ActivateRoute.url&lt;/code&gt; contains an observable that reports the route path or paths. Here's an example:</source>
          <target state="translated">&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt; является впрыскивается маршрутизатор сервис , который использует наблюдаемыми , чтобы получить информацию о пути и параметров маршрута. Например, &lt;code&gt;ActivateRoute.url&lt;/code&gt; содержит наблюдаемую информацию, которая сообщает путь к маршруту или пути. Вот пример:</target>
        </trans-unit>
        <trans-unit id="62420df0957330734448927a844114ed73ad730f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../common/platformlocation&quot;&gt;&lt;code&gt;PlatformLocation&lt;/code&gt;&lt;/a&gt; providers that should be added when the &lt;a href=&quot;../common/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; is used in a worker context.</source>
          <target state="translated">В &lt;a href=&quot;../common/platformlocation&quot;&gt; &lt;code&gt;PlatformLocation&lt;/code&gt; &lt;/a&gt; провайдеры , которые должны быть добавлены , когда &lt;a href=&quot;../common/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; используются в контексте рабочего.</target>
        </trans-unit>
        <trans-unit id="841113ba19a40b0d963a4f69a5f2a5fd49cde66d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guide/built-in-directives#ngFor&quot;&gt;&lt;code&gt;*ngFor&lt;/code&gt;&lt;/a&gt; is Angular's &lt;em&gt;repeater&lt;/em&gt; directive. It repeats the host element for each element in a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692c832c00b68e76def217cb437b093b42460681" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;DI token&lt;/a&gt; for a router configuration.</source>
          <target state="translated">&lt;a href=&quot;../guide/glossary/index#di-token&quot;&gt;Д.И. маркер&lt;/a&gt; для конфигурации маршрутизатора.</target>
        </trans-unit>
        <trans-unit id="a5b5f0bd73969076e99683691442f0e883b4d411" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../guide/template-syntax#ngFor&quot;&gt;&lt;code&gt;*ngFor&lt;/code&gt;&lt;/a&gt; is Angular's &lt;em&gt;repeater&lt;/em&gt; directive. It repeats the host element for each element in a list.</source>
          <target state="translated">&lt;a href=&quot;../guide/template-syntax#ngFor&quot;&gt; &lt;code&gt;*ngFor&lt;/code&gt; &lt;/a&gt; угловато в &lt;em&gt;ретранслятор&lt;/em&gt; директива. Он повторяет элемент host для каждого элемента в списке.</target>
        </trans-unit>
        <trans-unit id="44d0769a18e136933991f4231b7cee526e0c337d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; can generate a new &lt;code&gt;HeroService&lt;/code&gt; class in the &lt;code&gt;src/app/heroes&lt;/code&gt; folder with this command.</source>
          <target state="translated">С помощью этой команды &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; может создать новый класс &lt;code&gt;HeroService&lt;/code&gt; в папке &lt;code&gt;src/app/heroes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85c2a8f734f521cd885970594379f4f530c76b78" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; generates the following basic &lt;code&gt;AppModule&lt;/code&gt; when creating a new app.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;Угловая CLI&lt;/a&gt; генерирует следующие основные &lt;code&gt;AppModule&lt;/code&gt; при создании нового приложения.</target>
        </trans-unit>
        <trans-unit id="bc67777d512b5dac31422e8bb3c4a7dc2b7d55df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; is a command-line tool for managing the Angular development cycle. Use it to create the initial filesystem scaffolding for a &lt;a href=&quot;glossary#workspace&quot;&gt;workspace&lt;/a&gt; or &lt;a href=&quot;glossary#project&quot;&gt;project&lt;/a&gt;, and to run &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; that add and modify code for initial generic versions of various elements. The CLI supports all stages of the development cycle, including building, testing, bundling, and deployment.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;Угловая CLI&lt;/a&gt; инструмент командной строки для управления Углового циклом разработки. Используйте его для создания исходных файловых систем для &lt;a href=&quot;glossary#workspace&quot;&gt;рабочей области&lt;/a&gt; или &lt;a href=&quot;glossary#project&quot;&gt;проекта&lt;/a&gt; , а также для запуска &lt;a href=&quot;glossary#schematic&quot;&gt;схем,&lt;/a&gt; которые добавляют и изменяют код для исходных общих версий различных элементов. CLI поддерживает все этапы цикла разработки, включая сборку, тестирование, пакетирование и развертывание.</target>
        </trans-unit>
        <trans-unit id="53c454c6660fa02027dfe2117f75d263dd75f716" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; provides support for polyfills. If you are not using the CLI to create your projects, see &lt;a href=&quot;browser-support#non-cli&quot;&gt;Polyfill instructions for non-CLI users&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cli&quot;&gt;Угловая CLI&lt;/a&gt; обеспечивает поддержку polyfills. Если вы не используете CLI для создания своих проектов, см. &lt;a href=&quot;browser-support#non-cli&quot;&gt;Инструкции Polyfill для пользователей, не являющихся пользователями CLI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b8bc93b8439f0639488ee5e20edda32b14cbf6ad" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;cli/run&quot;&gt;CLI command &lt;code&gt;ng run&lt;/code&gt;&lt;/a&gt; invokes a builder with a specific &lt;a href=&quot;glossary#target&quot;&gt;target configuration&lt;/a&gt;. The &lt;a href=&quot;workspace-config&quot;&gt;workspace configuration&lt;/a&gt; file, &lt;code&gt;angular.json&lt;/code&gt;, contains default configurations for built-in builders.</source>
          <target state="translated">Команда &lt;a href=&quot;cli/run&quot;&gt;CLI &lt;code&gt;ng run&lt;/code&gt; &lt;/a&gt; вызывает сборщик с определенной &lt;a href=&quot;glossary#target&quot;&gt;целевой конфигурацией&lt;/a&gt; . &lt;a href=&quot;workspace-config&quot;&gt;Конфигурация рабочего пространства&lt;/a&gt; файл, &lt;code&gt;angular.json&lt;/code&gt; , содержит стандартные конфигурации для встроенных в строителях.</target>
        </trans-unit>
        <trans-unit id="05d9831a7b65afdb6e46ec21735bf7261c84bb9d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;common/platformlocation&quot;&gt;&lt;code&gt;PlatformLocation&lt;/code&gt;&lt;/a&gt; providers that should be added when the &lt;a href=&quot;common/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; is used in a worker context.</source>
          <target state="translated">В &lt;a href=&quot;common/platformlocation&quot;&gt; &lt;code&gt;PlatformLocation&lt;/code&gt; &lt;/a&gt; провайдеры , которые должны быть добавлены , когда &lt;a href=&quot;common/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; используются в контексте рабочего.</target>
        </trans-unit>
        <trans-unit id="6e3c6eba9a53ca9aa963f24e8da72427a5d33b5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;dependency-injection&quot;&gt;Dependency injection&lt;/a&gt; guide provides in-depth information on how to construct an application such that each component class can acquire the services and objects it needs to perform its function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a99422b4801f11b80d164912fc1ddc851a004b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;form-validation&quot;&gt;Form validation guide&lt;/a&gt; covers the topic in more depth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be8ea4557cdb3960829abd49f7a8d0bebceede4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;forms-overview&quot;&gt;two types of forms that Angular supports&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98107507289185f8873753970de1dfd7b6bad5b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;glossary#aot&quot;&gt;AOT compiler&lt;/a&gt; is part of a build process that produces a small, fast, ready-to-run application package, typically for production.</source>
          <target state="translated">&lt;a href=&quot;glossary#aot&quot;&gt;AOT компилятор&lt;/a&gt; является частью процесса сборки , который производит небольшой, быстрый, готовые к запуску пакета прикладных программ, как правило , для производства.</target>
        </trans-unit>
        <trans-unit id="9c919d8f163d548522d373c5c6512d9de4f837b6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; uses schematics to generate and modify &lt;a href=&quot;glossary#project&quot;&gt;Angular projects&lt;/a&gt; and parts of projects.</source>
          <target state="translated">&lt;a href=&quot;glossary#cli&quot;&gt;Угловая CLI&lt;/a&gt; использует схемы для создания и редактирования &lt;a href=&quot;glossary#project&quot;&gt;Угловые проекты&lt;/a&gt; и части проектов.</target>
        </trans-unit>
        <trans-unit id="5e080e6d0c2bf1f3b9d47f8c9e27b3be01bc9faa" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;glossary#cli&quot;&gt;CLI&lt;/a&gt;&lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt; command&lt;/a&gt; creates a file system directory (the &quot;workspace root&quot;). In the workspace root, it also creates the workspace &lt;a href=&quot;glossary#configuration&quot;&gt;configuration file&lt;/a&gt; (&lt;code&gt;angular.json&lt;/code&gt;) and, by default, an initial application project with the same name.</source>
          <target state="translated">В &lt;a href=&quot;glossary#cli&quot;&gt;CLI &lt;/a&gt;&lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; команда&lt;/a&gt; создает каталог файловой системы ( &amp;laquo;Рабочая область корневого&amp;raquo;). В корне рабочей области также создается &lt;a href=&quot;glossary#configuration&quot;&gt;файл конфигурации&lt;/a&gt; рабочей области ( &lt;code&gt;angular.json&lt;/code&gt; ) и, по умолчанию, первоначальный проект приложения с тем же именем.</target>
        </trans-unit>
        <trans-unit id="3e06550cbd83b66c246b5afad89f993ba760a306" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;glossary#jit&quot;&gt;JITcompiler&lt;/a&gt; compiles your app in the browser as the app loads. To support translation with the JIT compiler, you must do the following:</source>
          <target state="translated">&lt;a href=&quot;glossary#jit&quot;&gt;JITcompiler&lt;/a&gt; компилирует приложение в браузере , как и приложении нагрузки. Для поддержки перевода с помощью JIT-компилятора вы должны сделать следующее:</target>
        </trans-unit>
        <trans-unit id="4380b18e380108bb934a12302c8ada614bb694c6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;glossary#router&quot;&gt;router&lt;/a&gt; makes use of lazy loading to load child views only when the parent view is activated. Similarly, you can build custom elements that can be loaded into an Angular app when needed.</source>
          <target state="translated">В &lt;a href=&quot;glossary#router&quot;&gt;маршрутизатор&lt;/a&gt; использует отложенную загрузку с видом нагрузки ребенка только тогда , когда родительский вид активируется. Точно так же вы можете создавать собственные элементы, которые при необходимости могут быть загружены в приложение Angular.</target>
        </trans-unit>
        <trans-unit id="0b1fe491d63ab7232b2eb74a097869b0b4d9d4d4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http#rxjs&quot;&gt;RxJS library&lt;/a&gt; offers several &lt;em&gt;retry&lt;/em&gt; operators that are worth exploring. The simplest is called &lt;code&gt;retry()&lt;/code&gt; and it automatically re-subscribes to a failed &lt;code&gt;Observable&lt;/code&gt; a specified number of times. &lt;em&gt;Re-subscribing&lt;/em&gt; to the result of an &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; method call has the effect of reissuing the HTTP request.</source>
          <target state="translated">Библиотека &lt;a href=&quot;http#rxjs&quot;&gt;RxJS&lt;/a&gt; предлагает несколько операторов &lt;em&gt;повтора&lt;/em&gt; , которые стоит изучить. Самый простой называется &lt;code&gt;retry()&lt;/code&gt; и он автоматически повторно подписывается на сбой &lt;code&gt;Observable&lt;/code&gt; указанное количество раз. &lt;em&gt;Повторная подписка&lt;/em&gt; на результат &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; метода HttpClient приводит к повторному выдаче HTTP-запроса.</target>
        </trans-unit>
        <trans-unit id="9137609ba3ac5720c2b2e7ec5b9d022983893e76" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://reactivex.io/documentation/operators/defer.html&quot;&gt;RxJS &lt;code&gt;defer()&lt;/code&gt; operator&lt;/a&gt; returns an observable. It takes a factory function that returns either a promise or an observable. When something subscribes to &lt;em&gt;defer&lt;/em&gt;'s observable, it adds the subscriber to a new observable created with that factory.</source>
          <target state="translated">В &lt;a href=&quot;http://reactivex.io/documentation/operators/defer.html&quot;&gt;RxJS &lt;code&gt;defer()&lt;/code&gt; оператор&lt;/a&gt; возвращает наблюдаемый. Требуется фабричная функция, которая возвращает либо обещание, либо наблюдаемое. Когда что-то подписывается на наблюдаемую &lt;em&gt;отсрочку&lt;/em&gt; , оно добавляет подписчика к новой наблюдаемой, созданной с помощью этой фабрики.</target>
        </trans-unit>
        <trans-unit id="2142d5fddf90916e933e41b73188b155d3c2310d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://angular.io/cli/config&quot;&gt;ng config&lt;/a&gt; command lets you set and retrieve configuration values from the command line, or you can edit the &lt;code&gt;angular.json&lt;/code&gt; file directly. Note that option names in the configuration file must use &lt;a href=&quot;guide/glossary#case-types&quot;&gt;camelCase&lt;/a&gt;, while option names supplied to commands can use either camelCase or dash-case.</source>
          <target state="translated">Команда &lt;a href=&quot;https://angular.io/cli/config&quot;&gt;ng config&lt;/a&gt; позволяет вам устанавливать и получать значения конфигурации из командной строки, или вы можете редактировать файл &lt;code&gt;angular.json&lt;/code&gt; напрямую. Обратите внимание, что имена параметров в файле конфигурации должны использовать &lt;a href=&quot;guide/glossary#case-types&quot;&gt;camelCase&lt;/a&gt; , в то время как имена параметров, предоставляемые командам, могут использовать camelCase или dash-case.</target>
        </trans-unit>
        <trans-unit id="9cc4f900dedfc14aac5069c4089743ff6b85cb0f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://angular.io/cli/generate&quot;&gt;ng generate&lt;/a&gt; and &lt;a href=&quot;https://angular.io/cli/add&quot;&gt;ng add&lt;/a&gt; commands take as an argument the artifact or library to be generated or added to the current project. In addition to any general options, each artifact or library defines its own options in a &lt;em&gt;schematic&lt;/em&gt;. Schematic options are supplied to the command in the same format as immediate command options.</source>
          <target state="translated">&lt;a href=&quot;https://angular.io/cli/generate&quot;&gt;Нг генерировать&lt;/a&gt; и &lt;a href=&quot;https://angular.io/cli/add&quot;&gt;нг оных&lt;/a&gt; команды принимает в качестве аргумента артефакт или библиотека , чтобы быть сгенерирована или добавлен к текущему проекту. В дополнение к любым общим параметрам каждый артефакт или библиотека определяет свои собственные параметры в &lt;em&gt;схеме&lt;/em&gt; . Параметры схемы предоставляются команде в том же формате, что и параметры немедленной команды.</target>
        </trans-unit>
        <trans-unit id="c4ec4eb8426875bd373f4cb3f235396c3c74c24b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://angular.io/cli/new&quot;&gt;ng new&lt;/a&gt; command creates an &lt;em&gt;Angular workspace&lt;/em&gt; folder and generates a new app skeleton. A workspace can contain multiple apps and libraries. The initial app created by the &lt;a href=&quot;https://angular.io/cli/new&quot;&gt;ng new&lt;/a&gt; command is at the top level of the workspace. When you generate an additional app or library in a workspace, it goes into a &lt;code&gt;projects/&lt;/code&gt; subfolder.</source>
          <target state="translated">Команда &lt;a href=&quot;https://angular.io/cli/new&quot;&gt;ng new&lt;/a&gt; создает папку &lt;em&gt;рабочей области Angular&lt;/em&gt; и генерирует новый скелет приложения. Рабочая область может содержать несколько приложений и библиотек. Начальное приложение, созданное командой &lt;a href=&quot;https://angular.io/cli/new&quot;&gt;ng new,&lt;/a&gt; находится на верхнем уровне рабочей области. Когда вы генерируете дополнительное приложение или библиотеку в рабочей области, оно помещается в подпапку &lt;code&gt;projects/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eef7029863bcbf19c4ab8578f83e597970534753" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:not&quot;&gt;&lt;code&gt;:not&lt;/code&gt; pseudo-class&lt;/a&gt; in &lt;code&gt;By.css('h2:not([highlight])')&lt;/code&gt; helps find &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; elements that &lt;em&gt;do not&lt;/em&gt; have the directive. &lt;code&gt;By.css('*:not([highlight])')&lt;/code&gt; finds &lt;em&gt;any&lt;/em&gt; element that does not have the directive.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/:not&quot;&gt; &lt;code&gt;:not&lt;/code&gt; псевдо-класса&lt;/a&gt; в &lt;code&gt;By.css('h2:not([highlight])')&lt;/code&gt; помогает найти &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; элементы , которые &lt;em&gt;не&lt;/em&gt; имеют директивы. &lt;code&gt;By.css('*:not([highlight])')&lt;/code&gt; находит &lt;em&gt;любой&lt;/em&gt; элемент, который не имеет директивы.</target>
        </trans-unit>
        <trans-unit id="67db0ba49bc8041f182dbf0749b95273e0b85a5b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors&quot;&gt;CSS element selector&lt;/a&gt;, &lt;code&gt;'app-heroes'&lt;/code&gt;, matches the name of the HTML element that identifies this component within a parent component's template.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Type_selectors&quot;&gt;Селектор CSS элемент&lt;/a&gt; , &lt;code&gt;'app-heroes'&lt;/code&gt; , совпадает с именем в HTML элемента , который идентифицирует этот компонент в шаблоне родительского компонента.</target>
        </trans-unit>
        <trans-unit id="3f5616648fe04a251f0e70271a427c668c007e56" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing&quot;&gt; Chrome DevTools Network Performance page&lt;/a&gt; is a good place to start learning about measuring performance.</source>
          <target state="translated">Страница &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/network-performance/understanding-resource-timing&quot;&gt;Chrome DevTools Network Performance&lt;/a&gt; - это хорошее место, чтобы начать знакомство с измерением производительности.</target>
        </trans-unit>
        <trans-unit id="43ba57fe4131496568fba480d9c4deb2e30cf2b9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;npm package manager&lt;/a&gt; is used to distribute and load Angular modules and libraries.</source>
          <target state="translated">Менеджер &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;пакетов npm&lt;/a&gt; используется для распространения и загрузки модулей и библиотек Angular.</target>
        </trans-unit>
        <trans-unit id="ac72c33ceb0a0c850781b84bc6144a1744f50498" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript&quot;&gt;official JavaScript language specification&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/ECMAScript&quot;&gt;Официальная спецификация языка JavaScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac53f3cd4e4f6d59ebf10978a8ce8de90ae0e6a6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; currency code, such as &lt;code&gt;USD&lt;/code&gt; for the US dollar and &lt;code&gt;EUR&lt;/code&gt; for the euro.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; код валюты, например, &lt;code&gt;USD&lt;/code&gt; для доллара США и &lt;code&gt;EUR&lt;/code&gt; за евро.</target>
        </trans-unit>
        <trans-unit id="385f6cc4dec76396876f06188f4cfe7a64f563f4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; currency code, such as &lt;code&gt;USD&lt;/code&gt; for the US dollar and &lt;code&gt;EUR&lt;/code&gt; for the euro. Used to determine the number of digits in the decimal part.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_4217&quot;&gt;ISO 4217&lt;/a&gt; код валюты, например, &lt;code&gt;USD&lt;/code&gt; для доллара США и &lt;code&gt;EUR&lt;/code&gt; за евро. Используется для определения количества цифр в десятичной части.</target>
        </trans-unit>
        <trans-unit id="c7822350707f34166034f9e5cf47f46ca41913fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/angular/angular/blob/master/aio/README.md&quot;&gt;aio/README.md&lt;/a&gt; explains how to install and use the tools to edit and test your changes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/angular/angular/blob/master/aio/README.md&quot;&gt;AIO / README.md&lt;/a&gt; объясняет , как установить и использовать инструменты для редактирования и проверки изменений.</target>
        </trans-unit>
        <trans-unit id="042567219e09d7a75fac40b8e05521dcdb3e3d9c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/angular/angular/tree/master/packages/common/locales&quot;&gt;Angular repository&lt;/a&gt; files (&lt;code&gt;@angular/common/locales&lt;/code&gt;) contain most of the locale data that you need, but some advanced formatting options require additional locale data. Global variants of the locale data are available in &lt;a href=&quot;https://github.com/angular/angular/tree/master/packages/common/locales/global&quot;&gt;&lt;code&gt;@angular/common/locales/global&lt;/code&gt;&lt;/a&gt;. The following example imports the global variants for French (&lt;code&gt;fr&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe28f1e5bb4819d9667ea039cc2b06cc369de26a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/angular/angular/tree/master/packages/common/locales&quot;&gt;Angular repository&lt;/a&gt; includes common locales. You can change your app's source locale for the build by setting the source locale in the &lt;code&gt;sourceLocale&lt;/code&gt; field of your app's &lt;a href=&quot;workspace-config&quot;&gt;workspace configuration&lt;/a&gt; file (&lt;code&gt;angular.json&lt;/code&gt;). The build process (described in &lt;a href=&quot;i18n#merge&quot;&gt;Merge translations into the app&lt;/a&gt; in this guide) uses your app's &lt;code&gt;angular.json&lt;/code&gt; file to automatically set the &lt;a href=&quot;../api/core/locale_id&quot;&gt;&lt;code&gt;LOCALE_ID&lt;/code&gt;&lt;/a&gt; token and load the locale data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc21ed5107cd6c26d897a6320dc42ef7186143fb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/danvk/source-map-explorer/blob/master/README.md&quot;&gt;source-map-explorer&lt;/a&gt; tool is a great way to inspect the generated JavaScript bundles after a production build.</source>
          <target state="translated">Инструмент &lt;a href=&quot;https://github.com/danvk/source-map-explorer/blob/master/README.md&quot;&gt;source-map-explorer&lt;/a&gt; - отличный способ проверить сгенерированные пакеты JavaScript после производственной сборки.</target>
        </trans-unit>
        <trans-unit id="64a5e24960a46bfcb09f65cc4c7ba6207874f001" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md&quot;&gt;AngularJS Style Guide&lt;/a&gt; collects patterns and practices that have been proven to result in cleaner and more maintainable AngularJS applications. It contains a wealth of information about how to write and organize AngularJS code - and equally importantly - how &lt;strong&gt;not&lt;/strong&gt; to write and organize AngularJS code.</source>
          <target state="translated">В &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md&quot;&gt;Руководстве по стилю AngularJS&lt;/a&gt; собраны шаблоны и методы, которые, как доказано, привели к созданию более понятных и более удобных в обслуживании приложений AngularJS. Он содержит обширную информацию о том, как писать и организовывать код AngularJS - и, что не менее важно, - как &lt;strong&gt;не&lt;/strong&gt; писать и организовывать код AngularJS.</target>
        </trans-unit>
        <trans-unit id="698e33b75bcc5c76bbf260a0e698ed7db2e2c779" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#folders-by-feature-structure&quot;&gt;Folders-by-Feature Structure&lt;/a&gt; and &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#modularity&quot;&gt;Modularity&lt;/a&gt; rules define similar principles on a higher level of abstraction: Different parts of the application should reside in different directories and NgModules.</source>
          <target state="translated">В &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#folders-by-feature-structure&quot;&gt;структуру папок-по-Feature&lt;/a&gt; и &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#modularity&quot;&gt;модульность&lt;/a&gt; правила определяют аналогичные принципы на более высоком уровне абстракции: Различные части приложения должны находиться в разных каталогах и NgModules.</target>
        </trans-unit>
        <trans-unit id="1eaf3159835bb387f70ff080a284feaacf450754" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#single-responsibility&quot;&gt;Rule of 1&lt;/a&gt; states that there should be one component per file. This not only makes components easy to navigate and find, but will also allow us to migrate them between languages and frameworks one at a time. In this example application, each controller, component, service, and filter is in its own source file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#single-responsibility&quot;&gt;Правило 1&lt;/a&gt; гласит , что должен быть один компонент для каждого файла. Это не только упрощает навигацию и поиск компонентов, но также позволяет нам переносить их между языками и средами по одному. В этом примере приложения каждый контроллер, компонент, служба и фильтр находятся в своем собственном исходном файле.</target>
        </trans-unit>
        <trans-unit id="50920f3757c6270704876b419b74fac4803e437f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; library, which is maintained by the Angular team, is a suite of reusable UI components that aims to be fully accessible. The &lt;a href=&quot;https://material.angular.io/cdk/categories&quot;&gt;Component Development Kit (CDK)&lt;/a&gt; includes the &lt;code&gt;a11y&lt;/code&gt; package that provides tools to support various areas of accessibility. For example:</source>
          <target state="translated">Библиотека &lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; , поддерживаемая командой Angular, представляет собой набор многократно используемых компонентов пользовательского интерфейса, которые должны быть полностью доступны. &lt;a href=&quot;https://material.angular.io/cdk/categories&quot;&gt;Kit Компонент развития (CDK)&lt;/a&gt; включает в себя &lt;code&gt;a11y&lt;/code&gt; пакет , который предоставляет инструменты для поддержки различных областей доступности. Например:</target>
        </trans-unit>
        <trans-unit id="2368773fec7fbf22cc5ca45d72df2fac8cec9aea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.npmjs.com/package/@types/angular&quot;&gt;AngularJS 1.x type definitions&lt;/a&gt; you installed are not officially maintained by the Angular team, but are quite comprehensive. It is possible to make an AngularJS 1.x application fully type-annotated with the help of these definitions.</source>
          <target state="translated">Установленные вами &lt;a href=&quot;https://www.npmjs.com/package/@types/angular&quot;&gt;определения типов AngularJS 1.x&lt;/a&gt; официально не поддерживаются командой Angular, но являются достаточно полными. С помощью этих определений можно сделать приложение AngularJS 1.x полностью аннотированным типом.</target>
        </trans-unit>
        <trans-unit id="df8b0b589273f8464eedbabbe41632c3bb97724d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.webpagetest.org/&quot;&gt;WebPageTest&lt;/a&gt; tool is another good choice that can also help verify that your deployment was successful.</source>
          <target state="translated">Инструмент &lt;a href=&quot;https://www.webpagetest.org/&quot;&gt;WebPageTest&lt;/a&gt; - это еще один хороший выбор, который также может помочь проверить успешность развертывания.</target>
        </trans-unit>
        <trans-unit id="161a17de166ad5ba5f6d88e6af9c412c61399244" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;i18n#plurals-alternates&quot;&gt;&lt;code&gt;plural&lt;/code&gt; and &lt;code&gt;select&lt;/code&gt; ICU expressions&lt;/a&gt; are extracted as additional messages, so you must translate them separately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5702047983a31430a247a80e4531d5efed5bf6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;language-service&quot;&gt;Angular language service&lt;/a&gt; analyzes component templates and provides type and error information that TypeScript-aware editors can use to improve the developer's experience. For example, see the &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Angular.ng-template&quot;&gt;Angular language service extension for VS Code&lt;/a&gt;.</source>
          <target state="translated">Служба &lt;a href=&quot;language-service&quot;&gt;языка Angular&lt;/a&gt; анализирует шаблоны компонентов и предоставляет информацию о типах и ошибках, которую редакторы с поддержкой TypeScript могут использовать для улучшения работы разработчика. Например, см &lt;a href=&quot;https://marketplace.visualstudio.com/items?itemName=Angular.ng-template&quot;&gt;Угловое расширение услуг языка для VS кодекса&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c536f9cf54af98d090a383c28c9f1b8859ffc4c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ngmodule-faq#q-angular-compiler&quot;&gt;Angular compiler&lt;/a&gt; looks inside component templates for other components, directives, and pipes. When it finds one, that's a template reference.</source>
          <target state="translated">&lt;a href=&quot;ngmodule-faq#q-angular-compiler&quot;&gt;Угловая компилятор&lt;/a&gt; выглядит внутри компоненты шаблонов для других компонентов, директив и труб. Когда он находит, это ссылка на шаблон.</target>
        </trans-unit>
        <trans-unit id="5ca459b688d8b857f90f91b0f0dcef341faa01ed" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt; guide provides in-depth information on the modular structure of an Angular application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed0542f9d7598d8d32e3cd36f92e1e81b8c6ebb" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;router&quot;&gt;Routing and navigation&lt;/a&gt; guide provides in-depth information on how to construct applications that allow a user to navigate to different &lt;a href=&quot;glossary#view&quot;&gt;views&lt;/a&gt; within your single-page app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb28f6b5f83114401b60f2c14cb2d1105c66e707" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;router#route-parameters&quot;&gt;Router&lt;/a&gt; guide covers &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; in more detail.</source>
          <target state="translated">В &lt;a href=&quot;router#route-parameters&quot;&gt;маршрутизаторе&lt;/a&gt; охватывает руководство &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; более подробно.</target>
        </trans-unit>
        <trans-unit id="932c750d92edcbfd87678995b6a64698cdfc724d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;router-tutorial-toh#activated-route-in-action&quot;&gt;ActivatedRoute in action&lt;/a&gt; section of the &lt;a href=&quot;router-tutorial-toh&quot;&gt;Router tutorial: tour of heroes&lt;/a&gt; guide covers &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; in more detail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612999299386c884d2210a578d58533310b542c1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;rx-library&quot;&gt;RxJS library&lt;/a&gt; offers several &lt;em&gt;retry&lt;/em&gt; operators. For example, the &lt;code&gt;retry()&lt;/code&gt; operator automatically re-subscribes to a failed &lt;code&gt;Observable&lt;/code&gt; a specified number of times. &lt;em&gt;Re-subscribing&lt;/em&gt; to the result of an &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; method call has the effect of reissuing the HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3312268095b08aee685e29f5fcc7dcf523b79e0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;structural-directives#ngFor&quot;&gt;&lt;code&gt;NgFor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;structural-directives#ngSwitch&quot;&gt;&lt;code&gt;NgSwitch...&lt;/code&gt;&lt;/a&gt; directives follow the same pattern.</source>
          <target state="translated">&lt;a href=&quot;structural-directives#ngFor&quot;&gt; &lt;code&gt;NgFor&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;structural-directives#ngSwitch&quot;&gt; &lt;code&gt;NgSwitch...&lt;/code&gt; &lt;/a&gt; директивы по той же схеме.</target>
        </trans-unit>
        <trans-unit id="328df52bf1bc4aa2fbdbe3f20d793a9859019f15" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;template-syntax&quot;&gt;template syntax&lt;/a&gt; and related topics contain details about how to display your component data when and where you want it within a view, and how to collect input from users that you can respond to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a97ff29bdea97643b100fb7e52172c9fc39e23" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;testing#feature-module-import&quot;&gt;previous test configuration&lt;/a&gt; replaces the real &lt;code&gt;HeroService&lt;/code&gt; with a &lt;code&gt;TestHeroService&lt;/code&gt; that intercepts server requests and fakes their responses.</source>
          <target state="translated">&lt;a href=&quot;testing#feature-module-import&quot;&gt;Предыдущая тестовая конфигурация&lt;/a&gt; заменяет реальный &lt;code&gt;HeroService&lt;/code&gt; с &lt;code&gt;TestHeroService&lt;/code&gt; , что запросы перехватывает сервера и фальсифицирует их ответы.</target>
        </trans-unit>
        <trans-unit id="03ec5cd730c49c54a94a2e4b7faaf1ebb0e7e823" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;testing#routing-component&quot;&gt;discussion below&lt;/a&gt; covers testing components that require the router.</source>
          <target state="translated">&lt;a href=&quot;testing#routing-component&quot;&gt;Обсуждение ниже&lt;/a&gt; чехлов тестирования компонентов , которые требуют маршрутизатора.</target>
        </trans-unit>
        <trans-unit id="adf4fe467b8f5c7727686265229a15c837edbaa2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;testing#tests-w-test-double&quot;&gt;&lt;em&gt;HeroDetailComponent&lt;/em&gt; tests&lt;/a&gt; in an earlier section demonstrate how &lt;code&gt;createComponent&lt;/code&gt; and &lt;code&gt;page&lt;/code&gt; keep the tests short and &lt;em&gt;on message&lt;/em&gt;. There are no distractions: no waiting for promises to resolve and no searching the DOM for element values to compare.</source>
          <target state="translated">В &lt;a href=&quot;testing#tests-w-test-double&quot;&gt;&lt;em&gt;HeroDetailComponent&lt;/em&gt; испытания&lt;/a&gt; в предыдущем разделе показано , как &lt;code&gt;createComponent&lt;/code&gt; и &lt;code&gt;page&lt;/code&gt; держать испытания короткие и &lt;em&gt;на сообщении&lt;/em&gt; . Нет отвлекающих факторов: не нужно ждать выполнения обещаний и не искать в DOM значения элементов для сравнения.</target>
        </trans-unit>
        <trans-unit id="814984fbbd12a04158aa41dd4d622caaf89cfec9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;testing-components-scenarios#feature-module-import&quot;&gt;previous test configuration&lt;/a&gt; replaces the real &lt;code&gt;HeroService&lt;/code&gt; with a &lt;code&gt;TestHeroService&lt;/code&gt; that intercepts server requests and fakes their responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2193a16ae16eaf6a890ddabf1d28738394df810a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;testing-components-scenarios#routing-component&quot;&gt;discussion below&lt;/a&gt; covers testing components that require the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2800695009a6f8b164798656b9a25018e99e93ba" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;testing-components-scenarios#tests-w-test-double&quot;&gt;&lt;em&gt;HeroDetailComponent&lt;/em&gt; tests&lt;/a&gt; in an earlier section demonstrate how &lt;code&gt;createComponent&lt;/code&gt; and &lt;code&gt;page&lt;/code&gt; keep the tests short and &lt;em&gt;on message&lt;/em&gt;. There are no distractions: no waiting for promises to resolve and no searching the DOM for element values to compare.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5990c9bc12604596a4545a9863216ed43b448b8b" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;toh-pt4&quot;&gt;&lt;code&gt;HeroService&lt;/code&gt;&lt;/a&gt; gets hero data from the remote server and this component will use it to get the hero-to-display.</source>
          <target state="translated">&lt;a href=&quot;toh-pt4&quot;&gt; &lt;code&gt;HeroService&lt;/code&gt; &lt;/a&gt; получает данные героя с удаленным сервера , и этот компонент будет использовать его , чтобы получить герой-на-дисплей.</target>
        </trans-unit>
        <trans-unit id="5350e6643395322b14e7706197ffdb8056e64e58" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes tutorial&lt;/a&gt; is the foundation for this walkthrough.</source>
          <target state="translated">&lt;a href=&quot;tutorial&quot;&gt;Учебное пособие&lt;/a&gt; &amp;laquo; Тур героев&amp;raquo; является основой для этого прохождения.</target>
        </trans-unit>
        <trans-unit id="316fba5018bee07b56bf00591644765f20e7866a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;upgrade#change-detection&quot;&gt;Change Detection&lt;/a&gt; section of &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt; only applies to apps that use &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;. Though you handle change detection differently with &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;, which is the focus of this guide, reading the &lt;a href=&quot;upgrade#change-detection&quot;&gt;Change Detection&lt;/a&gt; section provides helpful context for what follows.</source>
          <target state="translated">Раздел &amp;laquo; &lt;a href=&quot;upgrade#change-detection&quot;&gt;Обнаружение изменений&lt;/a&gt; &amp;raquo; в &lt;a href=&quot;upgrade&quot;&gt;Обновлении с AngularJS&lt;/a&gt; применяется только к приложениям, использующим &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; . Хотя вы по-разному обрабатываете обнаружение изменений с помощью &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; , на которую направлено данное руководство, чтение раздела &amp;laquo; &lt;a href=&quot;upgrade#change-detection&quot;&gt;Обнаружение изменений&lt;/a&gt; &amp;raquo; предоставляет полезный контекст для дальнейшего.</target>
        </trans-unit>
        <trans-unit id="ef97b3d65e2c4444165b198673fd089f9dda953a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;workspace-config&quot;&gt;&lt;code&gt;angular.json&lt;/code&gt;&lt;/a&gt; file configures all projects in a &lt;a href=&quot;glossary#workspace&quot;&gt;workspace&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;workspace-config&quot;&gt; &lt;code&gt;angular.json&lt;/code&gt; &lt;/a&gt; файл настраивает все проекты в &lt;a href=&quot;glossary#workspace&quot;&gt;рабочей области&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c7ea24427c05bad52d78a47c4199fcf3ce050def" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;!&lt;/code&gt; prefix marks the pattern as being negative, meaning that only files that don't match the pattern will be included.</source>
          <target state="translated">&lt;code&gt;!&lt;/code&gt; Префикс помечает шаблон как отрицательный, что означает, что будут включены только файлы, которые не соответствуют шаблону.</target>
        </trans-unit>
        <trans-unit id="61301904b5174ce43d2617b3dc5fe99400fa5df9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;#docplaster&lt;/code&gt; at the top is another bit of code snippet markup. It tells the processor how to join the fragments into a single snippet.</source>
          <target state="translated">&lt;code&gt;#docplaster&lt;/code&gt; сверху еще один бит фрагмент кода разметки. Он говорит процессору, как объединить фрагменты в один фрагмент.</target>
        </trans-unit>
        <trans-unit id="fbad649456e004310378e45c2eabd90470f600a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;#timer&lt;/code&gt; local variable is gone from the component metadata. Instead, bind the buttons to the parent component's own &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; methods and present the ticking seconds in an interpolation around the parent component's &lt;code&gt;seconds&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;#timer&lt;/code&gt; локальная переменная исчезает из компонента метаданных. Вместо этого свяжите кнопки с собственными методами &lt;code&gt;start&lt;/code&gt; и &lt;code&gt;stop&lt;/code&gt; родительского компонента и представьте тикающие секунды в интерполяции вокруг метода &lt;code&gt;seconds&lt;/code&gt; родительского компонента .</target>
        </trans-unit>
        <trans-unit id="6f19dd2af8f997aeeaa2940384f71556312a3db5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$any()&lt;/code&gt; cast function also works with &lt;code&gt;this&lt;/code&gt; to allow access to undeclared members of the component.</source>
          <target state="translated">Функция приведения &lt;code&gt;$any()&lt;/code&gt; также работает с &lt;code&gt;this&lt;/code&gt; чтобы разрешить доступ к необъявленным элементам компонента.</target>
        </trans-unit>
        <trans-unit id="bee6c20e056eff2c3bd8d36a0225478bb77d96a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$any()&lt;/code&gt; cast function works anywhere in a binding expression where a method call is valid.</source>
          <target state="translated">Функция приведения &lt;code&gt;$any()&lt;/code&gt; работает в любом месте в выражении привязки, где допустим вызов метода.</target>
        </trans-unit>
        <trans-unit id="e59f595616973095579aee71daee6655f4b357cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$any()&lt;/code&gt; type cast function</source>
          <target state="translated">&lt;code&gt;$any()&lt;/code&gt; типа функция литой</target>
        </trans-unit>
        <trans-unit id="08d2a4e531fa3e5eff0d209be4b06dd762f5ed9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$event&lt;/code&gt; contains the data that the user types into the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; in the child template UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6759020b810407949d5836009ada40b0a64c38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$event&lt;/code&gt; is now a specific &lt;code&gt;KeyboardEvent&lt;/code&gt;. Not all elements have a &lt;code&gt;value&lt;/code&gt; property so it casts &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; to an input element. The &lt;code&gt;OnKey&lt;/code&gt; method more clearly expresses what it expects from the template and how it interprets the event.</source>
          <target state="translated">&lt;code&gt;$event&lt;/code&gt; теперь конкретный &lt;code&gt;KeyboardEvent&lt;/code&gt; . Не у всех элементов есть свойство &lt;code&gt;value&lt;/code&gt; , поэтому он приводит &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; к элементу ввода. Метод &lt;code&gt;OnKey&lt;/code&gt; более четко выражает то, что он ожидает от шаблона и как он интерпретирует событие.</target>
        </trans-unit>
        <trans-unit id="fb618e77a8ea433b67f684a906bcc712490eee9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$event&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af64ddd170cb432546c0bf2252c448f993a883b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$event&lt;/code&gt; variable can be used in outputs to gain access to the object that was emitted. In this case it will be the &lt;code&gt;Hero&lt;/code&gt; object, because that is what was passed to &lt;code&gt;this.deleted.emit()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$event&lt;/code&gt; переменное может быть использовано в выходах , чтобы получить доступ к объекту , который был излучаемым. В этом случае это будет объект &lt;code&gt;Hero&lt;/code&gt; , потому что именно это было передано &lt;code&gt;this.deleted.emit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cba3bb04b1d061aec5076af6326126a7777dd593" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$event&lt;/code&gt; variable contains the data of the &lt;code&gt;SizerComponent.sizeChange&lt;/code&gt; event. Angular assigns the &lt;code&gt;$event&lt;/code&gt; value to the &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; when the user clicks the buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c908b77e7e21c8de968461c845115562a2330563" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$event&lt;/code&gt; variable contains the payload of the &lt;code&gt;SizerComponent.sizeChange&lt;/code&gt; event. Angular assigns the &lt;code&gt;$event&lt;/code&gt; value to the &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; when the user clicks the buttons.</source>
          <target state="translated">&lt;code&gt;$event&lt;/code&gt; переменная содержит полезную нагрузку &lt;code&gt;SizerComponent.sizeChange&lt;/code&gt; события. Angular назначает значение &lt;code&gt;$event&lt;/code&gt; для &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; , когда пользователь нажимает кнопки.</target>
        </trans-unit>
        <trans-unit id="e927e8d8b89416fbc605ae8612e17fa394a698fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$schema&lt;/code&gt; path is relative to the Angular Devkit collection schema.</source>
          <target state="translated">Путь &lt;code&gt;$schema&lt;/code&gt; относится к схеме коллекции Angular Devkit.</target>
        </trans-unit>
        <trans-unit id="9ee805ece33742d4de7f87a3da7383414135c5e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;$schema&lt;/code&gt; property specifies the schema that the CLI uses for validation.</source>
          <target state="translated">Свойство &lt;code&gt;$schema&lt;/code&gt; указывает схему, которую CLI использует для проверки.</target>
        </trans-unit>
        <trans-unit id="f59b81aa69f3638da4cee040a2bbe32b8dae6d8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; here represents an instance of a template. Notice that each component has its own &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; здесь представляет собой экземпляр шаблона. Обратите внимание, что каждый компонент имеет свой собственный &lt;code&gt;&amp;lt;#VIEW&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41ef35abf6bdecb3d0d2f8c0b5756abff98e77f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; container has an attribute directive that contains data about active routes and their states, based on the &lt;code&gt;data&lt;/code&gt; property that we set in the route configuration.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; контейнер имеет директиву атрибута , который содержит данные об активных маршрутах и их состояниях, на основе &lt;code&gt;data&lt;/code&gt; имущества , которое мы установили в конфигурации маршрута.</target>
        </trans-unit>
        <trans-unit id="79e422d60ab9df0e430e6c9d9a891769e0dfc46a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; tells the router where to display routed views.</source>
          <target state="translated">&lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; сообщает маршрутизатор , где отображать маршрутизировать виды.</target>
        </trans-unit>
        <trans-unit id="2e9c175f01fedfce94b31b57ef2e44a941e53e82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; currently provides the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array with the value of 🐶 (puppy). Because the injector has only to look at the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;'s &lt;code&gt;ElementInjector&lt;/code&gt; for the &lt;code&gt;AnimalService&lt;/code&gt;, it never sees the 🐳 (whale).</source>
          <target state="translated">В настоящее время &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; предоставляет &lt;code&gt;AnimalService&lt;/code&gt; в массиве &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; значение 🐶 (puppy). Поскольку форсунка имеет только взглянуть на &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; &amp;laquo;s &lt;code&gt;ElementInjector&lt;/code&gt; для &lt;code&gt;AnimalService&lt;/code&gt; , он никогда не видит 🐳 (кит).</target>
        </trans-unit>
        <trans-unit id="299ff11abab01f6a5104c411278663cb0347e746" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; currently provides the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;viewProviders&lt;/code&gt; array with the value of 🐶 (puppy). Because the injector has only to look at the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;'s &lt;code&gt;ElementInjector&lt;/code&gt; for the &lt;code&gt;AnimalService&lt;/code&gt;, it never sees the 🐳 (whale).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238522607dbec39c2b10c2b4a047546ae6e03124" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; tag in the example is an element that represents a new component, &lt;code&gt;HeroDetailComponent&lt;/code&gt;. &lt;code&gt;HeroDetailComponent&lt;/code&gt; (code not shown) defines the hero-detail child view of &lt;code&gt;HeroListComponent&lt;/code&gt;. Notice how custom components like this mix seamlessly with native HTML in the same layouts.</source>
          <target state="translated">&lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; тег в примере является элементом , который представляет собой новый компонент, &lt;code&gt;HeroDetailComponent&lt;/code&gt; . &lt;code&gt;HeroDetailComponent&lt;/code&gt; (код не показан) определяет детальное представление &lt;code&gt;HeroListComponent&lt;/code&gt; . Обратите внимание, что подобные компоненты легко сочетаются с собственным HTML в тех же макетах.</target>
        </trans-unit>
        <trans-unit id="c7f879d05e5a0e9a43e0ab7560f395d53f343b78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;base href&amp;gt;&lt;/code&gt;&lt;code&gt;path&lt;/code&gt; should end with a &quot;/&quot;, as browsers ignore characters in the &lt;code&gt;path&lt;/code&gt; that follow the right-most &quot;/&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fe98653d5a2333f28a36d168f80667c0dd14c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;code-tabs&amp;gt;&lt;/code&gt; components won't display a source code file unless it has a &lt;em&gt;#docregion&lt;/em&gt;.</source>
          <target state="translated">Компоненты &lt;code&gt;&amp;lt;code-example&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;code-tabs&amp;gt;&lt;/code&gt; не будут отображать файл исходного кода, если у него нет &lt;em&gt;#docregion&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4515f8669986d5b2cf1b5456ad548ee8b26fa2f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; and the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; are in the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; embedded view. In basic mode, Angular doesn't check either of them. However, in full mode, Angular checks that &lt;code&gt;config&lt;/code&gt; and &lt;code&gt;user&lt;/code&gt; exist and assumes a type of &lt;code&gt;any&lt;/code&gt;. In strict mode, Angular knows that the &lt;code&gt;user&lt;/code&gt; in the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; has a type of &lt;code&gt;User&lt;/code&gt;, and that &lt;code&gt;address&lt;/code&gt; is an object with a &lt;code&gt;city&lt;/code&gt; property of type &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67d48b1a68a7babea3a9a1684d08bd5c84499c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; case binds the &lt;code&gt;HighlightDirective&lt;/code&gt; to the name of a color value in the input box. The initial value is the word &quot;cyan&quot; which should be the background color of the input box.</source>
          <target state="translated">Регистр &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; связывает &lt;code&gt;HighlightDirective&lt;/code&gt; с именем значения цвета в поле ввода. Начальным значением является слово &amp;laquo;голубой&amp;raquo;, которое должно быть цветом фона поля ввода.</target>
        </trans-unit>
        <trans-unit id="e30b382cd0b284d5678988780f68af3033805fbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element carries the HTML validation attributes: &lt;code&gt;required&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt;. It also carries a custom validator directive, &lt;code&gt;forbiddenName&lt;/code&gt;. For more information, see &lt;a href=&quot;form-validation#custom-validators&quot;&gt;Custom validators&lt;/a&gt; section.</source>
          <target state="translated">Элемент &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; содержит атрибуты проверки HTML: &lt;code&gt;required&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt; . Он также содержит пользовательскую директиву validator, &lt;code&gt;forbiddenName&lt;/code&gt; . Для получения дополнительной информации см. Раздел &amp;laquo; &lt;a href=&quot;form-validation#custom-validators&quot;&gt;Пользовательские валидаторы&lt;/a&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="70ae16af7e38bee3770f57aa46ad5f45e088cd06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element carries the HTML validation attributes: &lt;code&gt;required&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/minlengthvalidator&quot;&gt;minlength&lt;/a&gt;&lt;/code&gt;. It also carries a custom validator directive, &lt;code&gt;forbiddenName&lt;/code&gt;. For more information, see the &lt;a href=&quot;form-validation#custom-validators&quot;&gt;Custom validators&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326834fbb7c5e0943d924c7415e94c4b70ac7a46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; is a syntax element recognized by the Angular parser. It's not a directive, component, class, or interface. It's more like the curly braces in a JavaScript &lt;code&gt;if&lt;/code&gt;-block:</source>
          <target state="translated">&lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; является элемент синтаксиса распознается Angular анализатором. Это не директива, компонент, класс или интерфейс. Это больше похоже на фигурные скобки в JavaScript, &lt;code&gt;if&lt;/code&gt; -block:</target>
        </trans-unit>
        <trans-unit id="fd20c7620fef7c45d4edd4193dfc39179d70431b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ng-content&amp;gt;&lt;/code&gt; tag is a &lt;em&gt;placeholder&lt;/em&gt; for the external content. It tells Angular where to insert that content. In this case, the projected content is the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; from the parent.</source>
          <target state="translated">&lt;code&gt;&amp;lt;ng-content&amp;gt;&lt;/code&gt; тег представляет собой &lt;em&gt;заполнитель&lt;/em&gt; для внешнего содержимого. Он сообщает Angular, куда вставить этот контент. В этом случае проецируемое содержимое является &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; от родителя.</target>
        </trans-unit>
        <trans-unit id="f4e027c2e3b4edb293e0cad4bbba2e70ee66810e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="efdfb17d702bc8bbe65f04dda2cbc25b2231caa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element is a good choice for dynamic components because it doesn't render any additional output.</source>
          <target state="translated">Элемент &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; является хорошим выбором для динамических компонентов, поскольку он не отображает никаких дополнительных выходных данных.</target>
        </trans-unit>
        <trans-unit id="0b0d03fdb559954ca7292114f8bf8dc0a0368e8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element is where you apply the directive you just made. To apply the &lt;code&gt;AdDirective&lt;/code&gt;, recall the selector from &lt;code&gt;ad.directive.ts&lt;/code&gt;, &lt;code&gt;[adHost]&lt;/code&gt;. Apply that to &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; without the square brackets. Now Angular knows where to dynamically load components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a8bb2dcac92b489d02149d2c7fd4d8b3a43c3a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element is where you apply the directive you just made. To apply the &lt;code&gt;AdDirective&lt;/code&gt;, recall the selector from &lt;code&gt;ad.directive.ts&lt;/code&gt;, &lt;code&gt;ad-host&lt;/code&gt;. Apply that to &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; without the square brackets. Now Angular knows where to dynamically load components.</source>
          <target state="translated">В элементе &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; вы применяете только что созданную директиву. Чтобы применить &lt;code&gt;AdDirective&lt;/code&gt; , отзовите селектор из &lt;code&gt;ad.directive.ts&lt;/code&gt; , &lt;code&gt;ad-host&lt;/code&gt; . Примените это к &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; без квадратных скобок. Теперь Angular знает, где динамически загружать компоненты.</target>
        </trans-unit>
        <trans-unit id="9f6ccbf49d1f3ff87675fae077702d114f329a32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;parent-component&amp;gt;&lt;/code&gt; serves as the context for the &lt;code&gt;&amp;lt;child-component&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab5050deed14a9d8aec4d32da381b874daf44ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; tag was deprecated in v4 to avoid colliding with the DOM's element of the same name (such as when using web components). Use &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; instead. For more information, see the &lt;a href=&quot;angular-compiler-options#enablelegacytemplate&quot;&gt;Ahead-of-Time Compilation&lt;/a&gt; guide.</source>
          <target state="translated">В v4 тег &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; устарел, чтобы избежать столкновения с элементом DOM с тем же именем (например, при использовании веб-компонентов). Вместо этого используйте &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; . Для получения дополнительной информации см. Руководство по &lt;a href=&quot;angular-compiler-options#enablelegacytemplate&quot;&gt;опережающему составлению&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b72d4c5c6466d06641152ad78396729ffd2474ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(click)&lt;/code&gt; event is bound to the &lt;code&gt;addNewItem()&lt;/code&gt; method in the child component class which takes as its argument whatever the value of &lt;code&gt;#newItem&lt;/code&gt; is.</source>
          <target state="translated">&lt;code&gt;(click)&lt;/code&gt; событие привязано к &lt;code&gt;addNewItem()&lt;/code&gt; метод в классе компонентов ребенка , который принимает в качестве аргумента то , что значение &lt;code&gt;#newItem&lt;/code&gt; есть.</target>
        </trans-unit>
        <trans-unit id="66e99e98ec2f7e7b9dc759dca1d7236ca7bd77cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(click)&lt;/code&gt; event is bound to the &lt;code&gt;addNewItem()&lt;/code&gt; method in the child component class. The &lt;code&gt;addNewItem()&lt;/code&gt; method takes as its argument the value of the &lt;code&gt;#newItem.value&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b8080b0d96315c1fea91fa690a42e383df27175" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(click)&lt;/code&gt; to the left of the equals sign identifies the button's click event as the &lt;strong&gt;target of the binding&lt;/strong&gt;. The text in quotes to the right of the equals sign is the &lt;strong&gt;template statement&lt;/strong&gt;, which responds to the click event by calling the component's &lt;code&gt;onClickMe&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;(click)&lt;/code&gt; слева от знака равенства Идентифицирует кнопки нажмите событие , как &lt;strong&gt;цель связывания&lt;/strong&gt; . Текст в кавычках справа от знака равенства является &lt;strong&gt;оператором шаблона&lt;/strong&gt; , который отвечает на событие click, &lt;code&gt;onClickMe&lt;/code&gt; метод onClickMe компонента .</target>
        </trans-unit>
        <trans-unit id="5972469341e9c4bb2e9183bf2c05dde6fc8440b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(click)&lt;/code&gt;&lt;a href=&quot;user-input#binding-to-user-input-events&quot;&gt;&lt;em&gt;event binding&lt;/em&gt;&lt;/a&gt; calls the component's &lt;code&gt;selectHero&lt;/code&gt; method when the user clicks a hero's name.</source>
          <target state="translated">&lt;code&gt;(click)&lt;/code&gt; &lt;a href=&quot;user-input#binding-to-user-input-events&quot;&gt;&lt;em&gt;связывание событие&lt;/em&gt;&lt;/a&gt; вызывает компонент в &lt;code&gt;selectHero&lt;/code&gt; метод , когда пользователь щелкает имя героя.</target>
        </trans-unit>
        <trans-unit id="3f9a45c02a8db70de99ace5e845ded0b9bab287b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;(keyup)&lt;/code&gt; event handler hears &lt;em&gt;every keystroke&lt;/em&gt;. Sometimes only the &lt;em&gt;Enter&lt;/em&gt; key matters, because it signals that the user has finished typing. One way to reduce the noise would be to examine every &lt;code&gt;$event.keyCode&lt;/code&gt; and take action only when the key is &lt;em&gt;Enter&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;(keyup)&lt;/code&gt; обработчик событий слышит &lt;em&gt;каждое нажатие клавиши&lt;/em&gt; . Иногда имеет значение только клавиша &lt;em&gt;Enter&lt;/em&gt; , потому что она сигнализирует о том, что пользователь закончил печатать. Один из способов уменьшить шум - это изучить каждый &lt;code&gt;$event.keyCode&lt;/code&gt; и предпринимать действия только тогда, когда клавишей является &lt;em&gt;Enter&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="10abfce959f609271607b301af52de8fbf29d196" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;* =&amp;gt; *&lt;/code&gt; transition applies when any change between two states takes place.</source>
          <target state="translated">Переход &lt;code&gt;* =&amp;gt; *&lt;/code&gt; применяется, когда происходит любое изменение между двумя состояниями.</target>
        </trans-unit>
        <trans-unit id="2120f338343729dc380dc6b0089baa51ac809b62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;**&lt;/code&gt; path in the last route is a &lt;strong&gt;wildcard&lt;/strong&gt;. The router will select this route if the requested URL doesn't match any paths for routes defined earlier in the configuration. This is useful for displaying a &quot;404 - Not Found&quot; page or redirecting to another route.</source>
          <target state="translated">Путь &lt;code&gt;**&lt;/code&gt; на последнем маршруте является &lt;strong&gt;подстановочным знаком&lt;/strong&gt; . Маршрутизатор выберет этот маршрут, если запрошенный URL не совпадает ни с одним путем для маршрутов, определенных ранее в конфигурации. Это полезно для отображения страницы &amp;laquo;404 - Не найдено&amp;raquo; или для перенаправления на другой маршрут.</target>
        </trans-unit>
        <trans-unit id="96ab982ceb0f51ab7dc6e0259cf6586cf95248da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;/code&gt; symbol turns the current element into an embedded template. Equivalent to: &lt;code&gt;&amp;lt;ng-template [myUnless]=&quot;myExpression&quot;&amp;gt;&amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Символ &lt;code&gt;*&lt;/code&gt; превращает текущий элемент во встроенный шаблон. Эквивалентно: &lt;code&gt;&amp;lt;ng-template [myUnless]=&quot;myExpression&quot;&amp;gt;&amp;lt;p&amp;gt;...&amp;lt;/p&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c2d5580b2ef8003829258ec68b0138943d8a940" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive in Angular is similar to the &lt;code&gt;ng-repeat&lt;/code&gt; directive in AngularJS. It repeats the associated DOM element for each item in the specified collection. More accurately, it turns the defined element (&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; in this example) and its contents into a template and uses that template to instantiate a view for each item in the list.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; директива угловой похожа на &lt;code&gt;ng-repeat&lt;/code&gt; директивы в AngularJS. Он повторяет связанный элемент DOM для каждого элемента в указанной коллекции. Точнее, он превращает определенный элемент ( в данном примере &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; ) и его содержимое в шаблон и использует этот шаблон для создания представления для каждого элемента в списке.</target>
        </trans-unit>
        <trans-unit id="8e1d922dd350f306cee6d2827b89d6c59d7018cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive iterates over each form control instance provided by the aliases form array instance. Because form array elements are unnamed, you assign the index to the &lt;code&gt;i&lt;/code&gt; variable and pass it to each control to bind it to the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; input.</source>
          <target state="translated">В &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; директива перебирает каждый экземпляр управления формы , предоставляемые псевдонимов образуют экземпляр массива. Поскольку элементы массива формы не имеют имени, вы присваиваете индекс переменной &lt;code&gt;i&lt;/code&gt; и передаете его каждому &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; управления, чтобы связать его с входом formControlName .</target>
        </trans-unit>
        <trans-unit id="52969138b5130b927875be6b78501fd4d2cc3965" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive tells Angular to iterate over a list.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; директива говорит угловатая итерацию по списку.</target>
        </trans-unit>
        <trans-unit id="c40c69127cacc3294ec3f3ca68aa65396d4921ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; iterates over the items in the &lt;code&gt;items&lt;/code&gt; array. When you enter a value in the child's &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and click the button, the child emits the event and the parent's &lt;code&gt;addItem()&lt;/code&gt; method pushes the value to the &lt;code&gt;items&lt;/code&gt; array and it renders in the list.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; перебирает элементы в &lt;code&gt;items&lt;/code&gt; массива. Когда вы вводите значение в дочерний элемент &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; и нажимаете кнопку, дочерний &lt;code&gt;addItem()&lt;/code&gt; генерирует событие, и родительский метод addItem () помещает значение в массив &lt;code&gt;items&lt;/code&gt; и оно отображается в списке.</target>
        </trans-unit>
        <trans-unit id="f8811d1e6385310a3ff23ae8790fbbc3d413e802" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; iterates over the items in the &lt;code&gt;items&lt;/code&gt; array. When you enter a value in the child's &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and click the button, the child emits the event and the parent's &lt;code&gt;addItem()&lt;/code&gt; method pushes the value to the &lt;code&gt;items&lt;/code&gt; array and new item renders in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b34fcebb6c80852949768c3729417a298981452" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeater creates as many links as are in the component's &lt;code&gt;heroes&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; повторитель создает , как много ссылок , как в компоненте &lt;code&gt;heroes&lt;/code&gt; массива.</target>
        </trans-unit>
        <trans-unit id="974cf1dc9316505b9a97fbea008c22a30e3f284a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeats hero objects. Notice that the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; iterates over a list called &lt;code&gt;heroes$&lt;/code&gt;, not &lt;code&gt;heroes&lt;/code&gt;. The &lt;code&gt;$&lt;/code&gt; is a convention that indicates &lt;code&gt;heroes$&lt;/code&gt; is an &lt;code&gt;Observable&lt;/code&gt;, not an array.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; повторяет объекты героя. Обратите внимание, что &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; перебирает список под названием &lt;code&gt;heroes$&lt;/code&gt; , а не &lt;code&gt;heroes&lt;/code&gt; . &lt;code&gt;$&lt;/code&gt; Есть соглашение , что указывает на &lt;code&gt;heroes$&lt;/code&gt; является &lt;code&gt;Observable&lt;/code&gt; , а не массив.</target>
        </trans-unit>
        <trans-unit id="ef9135def9fd84348381da68de4edf112bd5c56b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; directive in Angular works the same as the &lt;code&gt;ng-if&lt;/code&gt; directive in AngularJS. It removes or recreates a portion of the DOM based on an expression.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; директива угловой работает так же , как &lt;code&gt;ng-if&lt;/code&gt; директивы в AngularJS. Он удаляет или воссоздает часть DOM на основе выражения.</target>
        </trans-unit>
        <trans-unit id="fd7047a22a6c3235fbbd9f2a4355662750316bdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; directive moved to the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element where it became a property binding,&lt;code&gt;[&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; директива перемещается в &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; элемент , где он стал обязательным свойством, &lt;code&gt;[&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0093388df5eaa9c4c71a08425e65597f7ff6f7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; on the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element reveals a set of nested message &lt;code&gt;divs&lt;/code&gt; but only if the &lt;code&gt;name&lt;/code&gt; is invalid and the control is either &lt;code&gt;dirty&lt;/code&gt; or &lt;code&gt;touched&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; элемент открывает набор вложенных сообщений &lt;code&gt;divs&lt;/code&gt; , но только если &lt;code&gt;name&lt;/code&gt; является недействительным и контроль либо &lt;code&gt;dirty&lt;/code&gt; или &lt;code&gt;touched&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="434fcab1e3a8d321be3bd94ab9489622041eb31c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; only displays the messages area if there are messages to show.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; отображает только область сообщений , если есть сообщения для отображения.</target>
        </trans-unit>
        <trans-unit id="d59381edc8880b72df3dd7c44b31b8ca52e6092d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; directive is most commonly used to conditionally show an inline template, as seen in the following example. The default &lt;code&gt;else&lt;/code&gt; template is blank.</source>
          <target state="translated">&lt;code&gt;*&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; директива наиболее часто используется условно отображать шаблон инлайн, как показано в следующем примере. По умолчанию &lt;code&gt;else&lt;/code&gt; шаблон пуст.</target>
        </trans-unit>
        <trans-unit id="519a225df0d1b1586a1fbe4ebece19660d118076" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--open&lt;/code&gt; (or just &lt;code&gt;-o&lt;/code&gt;) option automatically opens your browser to &lt;code&gt;http://localhost:4200/&lt;/code&gt;.</source>
          <target state="translated">Опция &lt;code&gt;--open&lt;/code&gt; (или просто &lt;code&gt;-o&lt;/code&gt; ) автоматически открывает ваш браузер по &lt;code&gt;http://localhost:4200/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21886eb0c6a56536748cb67bd6410d088c51786c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--open&lt;/code&gt; flag opens a browser to &lt;code&gt;http://localhost:4200/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;--open&lt;/code&gt; флаг открывает браузер &lt;code&gt;http://localhost:4200/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42efef1f124237247d38b603c4bad7661e6bda6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--prod&lt;/code&gt;&lt;em&gt;meta-flag&lt;/em&gt; engages the following build optimization features.</source>
          <target state="translated">&lt;code&gt;--prod&lt;/code&gt; &lt;em&gt;мета-флаг&lt;/em&gt; зацепляется следующие функции оптимизации сборки.</target>
        </trans-unit>
        <trans-unit id="9fdd4f099a82d1b54fb53b14836fd023431627b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;--routing&lt;/code&gt; option requires Angular/CLI version 8.1 or higher. See &lt;a href=&quot;updating&quot;&gt;Keeping Up to Date&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e88d20c25b9a1cb33ec394f79fb11ace1c95d63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;.metadata.json&lt;/code&gt; files contain information needed by the template compiler from a &lt;code&gt;.ts&lt;/code&gt; file that is not included in the &lt;code&gt;.d.ts&lt;/code&gt; file produced by the TypeScript compiler. This information includes, for example, the content of annotations (such as a component's template), which TypeScript emits to the &lt;code&gt;.js&lt;/code&gt; file but not to the &lt;code&gt;.d.ts&lt;/code&gt; file.</source>
          <target state="translated">В &lt;code&gt;.metadata.json&lt;/code&gt; файлы содержат информацию , необходимую для шаблона компилятором из &lt;code&gt;.ts&lt;/code&gt; файла , который не включен в &lt;code&gt;.d.ts&lt;/code&gt; файл создаваемого компилятором машинописи. Эта информация включает, например, содержимое аннотаций (таких как шаблон компонента), которые TypeScript &lt;code&gt;.d.ts&lt;/code&gt; файл &lt;code&gt;.js&lt;/code&gt; , но не в файл .d.ts .</target>
        </trans-unit>
        <trans-unit id="da433db456ebe4159bdc0c31a9dc8f8bb5a729ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;/deep/&lt;/code&gt; combinator also has the aliases &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;, and &lt;code&gt;::ng-deep&lt;/code&gt;.</source>
          <target state="translated">У &lt;code&gt;/deep/&lt;/code&gt; combinator также есть псевдонимы &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;::ng-deep&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb8dddba1a3a8f516cc04db526b4971f6100af63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; selector is the only way to target the host element. You can't reach the host element from inside the component with other selectors because it's not part of the component's own template. The host element is in a parent component's template.</source>
          <target state="translated">&lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; - селектор является единственным способом для целевого хоста - элемент. Вы не можете получить доступ к элементу хоста из компонента с другими селекторами, потому что он не является частью собственного шаблона компонента. Элемент host находится в шаблоне родительского компонента.</target>
        </trans-unit>
        <trans-unit id="96dc3a416c0a1b81fdad59a50d7802b56e3490fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:enter&lt;/code&gt; transition runs when any &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; views are placed on the page, and &lt;code&gt;:leave&lt;/code&gt; runs when those views are removed from the page.</source>
          <target state="translated">Переход &lt;code&gt;:enter&lt;/code&gt; выполняется, когда на странице размещаются какие-либо представления &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; , и &lt;code&gt;:leave&lt;/code&gt; запускается, когда эти представления удаляются со страницы.</target>
        </trans-unit>
        <trans-unit id="b9a9b6973879453f1b34aefcec0482f9a455b684" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:host&lt;/code&gt; selector is the only way to target the host element. You can't reach the host element from inside the component with other selectors because it's not part of the component's own template. The host element is in a parent component's template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1778731f7f54a8c541fbfa74850f3c973e96a61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:id&lt;/code&gt; in the second route is a token for a route parameter. In a URL such as &lt;code&gt;/hero/42&lt;/code&gt;, &quot;42&quot; is the value of the &lt;code&gt;id&lt;/code&gt; parameter. The corresponding &lt;code&gt;HeroDetailComponent&lt;/code&gt; uses that value to find and present the hero whose &lt;code&gt;id&lt;/code&gt; is 42.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfbe701918754e8626af9582beed98ca14504a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:id&lt;/code&gt; in the second route is a token for a route parameter. In a URL such as &lt;code&gt;/hero/42&lt;/code&gt;, &quot;42&quot; is the value of the &lt;code&gt;id&lt;/code&gt; parameter. The corresponding &lt;code&gt;HeroDetailComponent&lt;/code&gt; will use that value to find and present the hero whose &lt;code&gt;id&lt;/code&gt; is 42. You'll learn more about route parameters later in this guide.</source>
          <target state="translated">&lt;code&gt;:id&lt;/code&gt; во втором маршруте является маркером для параметра маршрута. В URL, таком как &lt;code&gt;/hero/42&lt;/code&gt; , &amp;laquo;42&amp;raquo; - это значение параметра &lt;code&gt;id&lt;/code&gt; . Соответствующий &lt;code&gt;HeroDetailComponent&lt;/code&gt; будет использовать это значение для поиска и представления героя с &lt;code&gt;id&lt;/code&gt; 42. Подробнее о параметрах маршрута вы узнаете позже в этом руководстве.</target>
        </trans-unit>
        <trans-unit id="25d3cb2285267d70584cbb90e91059a95bc58b78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:id&lt;/code&gt; token creates a slot in the path for a Route Parameter. In this case, this configuration causes the router to insert the &lt;code&gt;id&lt;/code&gt; of a hero into that slot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b7bbb98338684f39be744dca5eee1e473bb6c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; function (second argument of the transition function) accepts the &lt;code&gt;timings&lt;/code&gt; and &lt;code&gt;styles&lt;/code&gt; input parameters.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; (второй аргумент функции перехода) принимает входные параметры &lt;code&gt;timings&lt;/code&gt; и &lt;code&gt;styles&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6aa8ce6afb763d79c390fee072a2367942e65792" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; function in Angular allows you to specify multiple interim styles within a single transition, with an optional offset to define the point in the animation where each style change occurs.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/animations/keyframes&quot;&gt;keyframes&lt;/a&gt;()&lt;/code&gt; в Angular позволяет вам указать несколько промежуточных стилей в пределах одного перехода с необязательным смещением для определения точки в анимации, где происходит каждое изменение стиля.</target>
        </trans-unit>
        <trans-unit id="ad35da3f65c892375ddd871696a7bd3b66478d66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt; params&lt;/code&gt; and &lt;code&gt;fragment&lt;/code&gt; can also be preserved using a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;queryParamsHandling&lt;/code&gt; and &lt;code&gt;preserveFragment&lt;/code&gt; bindings respectively.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt; params&lt;/code&gt; и &lt;code&gt;fragment&lt;/code&gt; также могут быть сохранены с использованием &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; с &lt;code&gt;queryParamsHandling&lt;/code&gt; и &lt;code&gt;preserveFragment&lt;/code&gt; привязками соответственно.</target>
        </trans-unit>
        <trans-unit id="a45f970b4aa67853e344825fb7ac64aa16a23ca7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function allows you to find inner elements within the element that is being animated. This function targets specific HTML elements within a parent component and applies animations to each element individually. Angular intelligently handles setup, teardown, and cleanup as it coordinates the elements across the page.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; позволяет вам находить внутренние элементы в анимируемом элементе. Эта функция предназначается для определенных элементов HTML в родительском компоненте и применяет анимацию к каждому элементу индивидуально. Angular интеллектуально управляет настройкой, разборкой и очисткой, координируя элементы по всей странице.</target>
        </trans-unit>
        <trans-unit id="377b4c3b33ed4e6d023f9c5ffd3c7e62bb723020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; function allows you to define a timing gap between each queried item that is animated and thus animates elements with a delay between them.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; позволяет определить временной интервал между каждым запрашиваемым элементом, который анимируется, и, таким образом, анимирует элементы с задержкой между ними.</target>
        </trans-unit>
        <trans-unit id="ca0e77d333988840b26a6477d5cfa93de0fd21eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; function takes additional selector values, &lt;code&gt;:increment&lt;/code&gt; and &lt;code&gt;:decrement&lt;/code&gt;. Use these to kick off a transition when a numeric value has increased or decreased in value.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;()&lt;/code&gt; принимает дополнительные значения селектора &lt;code&gt;:increment&lt;/code&gt; и &lt;code&gt;:decrement&lt;/code&gt; . Используйте их для запуска перехода, когда числовое значение увеличивается или уменьшается в значении.</target>
        </trans-unit>
        <trans-unit id="1175f7e12c287c6766b1bf4935d68fa0a9aacf16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; function describes the property name to watch for changes. When a change occurs, the trigger initiates the actions included in its definition. These actions can be transitions or other functions, as we'll see later on.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; описывает имя свойства для отслеживания изменений. Когда происходит изменение, триггер инициирует действия, включенные в его определение. Эти действия могут быть переходами или другими функциями, как мы увидим позже.</target>
        </trans-unit>
        <trans-unit id="8a4b3621e7c4f33ab29f4114473d11c070892306" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; is also stateful. The pipe maintains a subscription to the input &lt;code&gt;Observable&lt;/code&gt; and keeps delivering values from that &lt;code&gt;Observable&lt;/code&gt; as they arrive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; также с сохранением состояния. Канал поддерживает подписку на входную &lt;code&gt;Observable&lt;/code&gt; и продолжает доставлять значения из этой &lt;code&gt;Observable&lt;/code&gt; по мере их поступления.</target>
        </trans-unit>
        <trans-unit id="d0632dfba39aaa78b480cfca4134358065f1fc90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; function from &lt;code&gt;@angular/core/testing&lt;/code&gt; has been renamed to &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;&lt;/code&gt; in order to avoid confusion with the native JavaScript &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; syntax. The existing function is deprecated and will be removed in a future version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365bb40303bb7915970a82dbf8be41b720451761" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; function from &lt;code&gt;@angular/core/testing&lt;/code&gt; has been renamed to &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;&lt;/code&gt; in order to avoid confusion with the native JavaScript &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; syntax. The existing function is deprecated and will be removed in a future version. See &lt;a href=&quot;https://github.com/angular/angular/pull/37583&quot;&gt;PR 37583&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553ebd3c40e6fafec9710818c6bec8e7978af06f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe currently assumes that the Observable it subscribes to can be asynchronous, which means that it's possible that there is no value available yet. In that case, it still has to return something&amp;mdash;which is &lt;code&gt;null&lt;/code&gt;. In other words, the return type of the &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe includes &lt;code&gt;null&lt;/code&gt;, which may result in errors in situations where the Observable is known to emit a non-nullable value synchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60bb0bfc2d801262fb72e5ec658008b1e23c5f29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe returns the latest value from a stream of data and continues to do so for the life of a given component. When Angular destroys that component, the &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe automatically stops. For detailed information about the &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe, see the &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe API documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f2e4b7fce125080de1aad2e4783db64cc0aea6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; captures both kinds of errors in its &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse&quot;&gt;HttpErrorResponse&lt;/a&gt;&lt;/code&gt; and you can inspect that response to figure out what really happened.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; захватывает обоих видов ошибок в его &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse&quot;&gt;HttpErrorResponse&lt;/a&gt;&lt;/code&gt; , и вы можете проверить этот ответ , чтобы выяснить , что на самом деле произошло.</target>
        </trans-unit>
        <trans-unit id="5384cbacf5ba9fcb68ffa4d9a9d16a5e1c862a9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; offers a simplified client HTTP API for Angular applications that rests on the &lt;code&gt;XMLHttpRequest&lt;/code&gt; interface exposed by browsers. Additional benefits of &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; include testability features, typed request and response objects, request and response interception, &lt;code&gt;Observable&lt;/code&gt; apis, and streamlined error handling.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;&lt;/code&gt; предлагает упрощенный клиент HTTP API для угловых приложений , которые опираются на &lt;code&gt;XMLHttpRequest&lt;/code&gt; интерфейса подвергаются браузерам. Дополнительные преимущества &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; включают функции тестируемости, типизированные объекты запросов и ответов, перехват запросов и ответов, &lt;code&gt;Observable&lt;/code&gt; API- интерфейсы и упрощенную обработку ошибок.</target>
        </trans-unit>
        <trans-unit id="13d5e06cdb4370f83c2ad6f4d90377bc5a9a9eb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service makes use of &lt;a href=&quot;glossary#observable&quot;&gt;observables&lt;/a&gt; for all transactions. You must import the RxJS observable and operator symbols that appear in the example snippets. These &lt;code&gt;ConfigService&lt;/code&gt; imports are typical.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deeb8ba499b1b180bde00f2b9551724010997688" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; method normally returns an &lt;em&gt;observable&lt;/em&gt; that either emits the data or an error. Some folks describe it as a &quot;&lt;em&gt;one and done&lt;/em&gt;&quot; observable.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; обычно возвращает &lt;em&gt;наблюдаемое,&lt;/em&gt; которое либо выдает данные, либо ошибку. Некоторые люди описывают это как &quot; &lt;em&gt;один и готовый&lt;/em&gt; &quot; наблюдаемый.</target>
        </trans-unit>
        <trans-unit id="5f1a4185da9c2350f45a8f9dbf6ab64ab3db7002" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; method normally returns an observable that emits a single value, either the data or an error. An interceptor can change this to an observable that emits &lt;a href=&quot;observables&quot;&gt;multiple values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df333c509fac8ddb188bad0cfbdd394bda4c50f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#post&quot;&gt;HttpClient.post()&lt;/a&gt;&lt;/code&gt; method is similar to &lt;code&gt;get()&lt;/code&gt; in that it has a type parameter (you're expecting the server to return the new hero) and it takes a resource URL.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#post&quot;&gt;HttpClient.post()&lt;/a&gt;&lt;/code&gt; аналогичен &lt;code&gt;get()&lt;/code&gt; в том, что он имеет параметр типа (вы ожидаете, что сервер вернет нового героя) и принимает URL-адрес ресурса.</target>
        </trans-unit>
        <trans-unit id="dcaa97ca75cf65394d1b6ad74b938a953cabddec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#post&quot;&gt;HttpClient.post()&lt;/a&gt;&lt;/code&gt; method is similar to &lt;code&gt;get()&lt;/code&gt; in that it has a type parameter, which you can use to specify that you expect the server to return data of a given type. The method takes a resource URL and two additional parameters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55770db94e082c9f5e561030f40e47b4f1674770" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#put&quot;&gt;HttpClient.put()&lt;/a&gt;&lt;/code&gt; method takes three parameters:</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#put&quot;&gt;HttpClient.put()&lt;/a&gt;&lt;/code&gt; принимает три параметра:</target>
        </trans-unit>
        <trans-unit id="7a4ce4d193b0811a6f8f7ad610feeb8dec143461" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; are immutable so you'll have to save the returned value of the &lt;code&gt;.set()&lt;/code&gt; method in order to update the options.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; неизменны , так что вы будете иметь , чтобы сохранить возвращаемое значение &lt;code&gt;.set()&lt;/code&gt; метод, чтобы обновить параметры.</target>
        </trans-unit>
        <trans-unit id="35b6aa4b2db0d252ac8cfdbb95eec65aa0fbd217" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; object is immutable. If you need to update the options, save the returned value of the &lt;code&gt;.set()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011c7e92ac38205e83ad5e89713470259fc0289a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/httpclienttestingmodule&quot;&gt;HttpClientTestingModule&lt;/a&gt;&lt;/code&gt; can make these testing scenarios more manageable.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/testing/httpclienttestingmodule&quot;&gt;HttpClientTestingModule&lt;/a&gt;&lt;/code&gt; может сделать эти тестирования сценариев более управляемым.</target>
        </trans-unit>
        <trans-unit id="6e57d0d3a73437e120975f03c6e520b3623c7eae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt; pipe is particularly helpful for debugging bindings:</source>
          <target state="translated">Канал &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt; особенно полезен для отладки привязок:</target>
        </trans-unit>
        <trans-unit id="7687f629bb10a3782e5e6e031f54803a9613c67a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; directive implements &lt;code&gt;NgFor&lt;/code&gt;. Read more about additional &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; directive properties and context properties in the &lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf API reference&lt;/a&gt;.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; директива реализует &lt;code&gt;NgFor&lt;/code&gt; . Узнайте больше о дополнительных &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; директивы NgForOf и свойствах контекста в &lt;a href=&quot;../api/common/ngforof&quot;&gt;справочнике по API NgForOf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="828f8cc9e1b68dc8578c2870bfc113f92e5b8081" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; directive doesn't hide elements with CSS. It adds and removes them physically from the DOM. Confirm that fact using browser developer tools to inspect the DOM.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; директива не скрывает элементы с помощью CSS. Он добавляет и удаляет их физически из DOM. Подтвердите этот факт, используя инструменты разработчика браузера для проверки DOM.</target>
        </trans-unit>
        <trans-unit id="d561348f9e9b5e8716d8be79b6e49e3f2cc2dc8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; directives</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; директивы</target>
        </trans-unit>
        <trans-unit id="13016879e5b136aba9f37a06656c49328e2ea0ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/slicepipe&quot;&gt;SlicePipe&lt;/a&gt;&lt;/code&gt; does the same thing but the &lt;em&gt;order of the parameters is reversed&lt;/em&gt;, in keeping with the JavaScript &lt;code&gt;Slice&lt;/code&gt; method. The first parameter is the starting index; the second is the limit. As in AngularJS, coding this operation within the component instead could improve performance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/slicepipe&quot;&gt;SlicePipe&lt;/a&gt;&lt;/code&gt; делает то же самое , но &lt;em&gt;порядок параметров восстанавливаются&lt;/em&gt; , в соответствии с JavaScript &lt;code&gt;Slice&lt;/code&gt; методом. Первый параметр - это начальный индекс; второй предел. Как и в AngularJS, кодирование этой операции внутри компонента может повысить производительность.</target>
        </trans-unit>
        <trans-unit id="d817909915566340878143825ee398005068d212" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;shared&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;shared&lt;/code&gt; папки.</target>
        </trans-unit>
        <trans-unit id="aae71b7520bfd4b36d6c153e1ebfe169315f1074" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#url&quot;&gt;url()&lt;/a&gt;&lt;/code&gt; method reads source files from your filesystem, relative to the schematic.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#url&quot;&gt;url()&lt;/a&gt;&lt;/code&gt; считывает исходные файлы из вашей файловой системы относительно схемы.</target>
        </trans-unit>
        <trans-unit id="851fc6e1fd0eaba4690e642ebc501aa32059ab01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule#config&quot;&gt;LocationUpgradeModule.config()&lt;/a&gt;&lt;/code&gt; method accepts a configuration object that allows you to configure options including the &lt;code&gt;&lt;a href=&quot;../api/common/locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;useHash&lt;/code&gt; property, and the URL prefix with the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgradeconfig#hashPrefix&quot;&gt;hashPrefix&lt;/a&gt;&lt;/code&gt; property.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule#config&quot;&gt;LocationUpgradeModule.config()&lt;/a&gt;&lt;/code&gt; принимает объект конфигурации, который позволяет настраивать параметры, включая &lt;code&gt;&lt;a href=&quot;../api/common/locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; , со свойством &lt;code&gt;useHash&lt;/code&gt; и префикс URL-адреса со свойством &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgradeconfig#hashPrefix&quot;&gt;hashPrefix&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0775051411cb85a76fb2ccb71aca8c4a77fade27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgrademodule#config&quot;&gt;LocationUpgradeModule.config()&lt;/a&gt;&lt;/code&gt; method accepts a configuration object that allows you to configure options including the &lt;code&gt;&lt;a href=&quot;../api/common/locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;useHash&lt;/code&gt; property, and the URL prefix with the &lt;code&gt;hashPrefix&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="756d0ba3695e20402dac04dc80348f3a5ce7bc04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; function accepts milliseconds as a parameter (defaults to 0 if not provided). The parameter represents how much the virtual clock advances. For example, if you have a &lt;code&gt;setTimeout(fn, 100)&lt;/code&gt; in a &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; test, you need to use tick(100) to trigger the fn callback.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; принимает миллисекунды в качестве параметра (по умолчанию 0, если не указано). Параметр показывает, насколько улучшаются виртуальные часы. Например, если у вас есть &lt;code&gt;setTimeout(fn, 100)&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; , вам нужно использовать tick (100) для запуска обратного вызова fn.</target>
        </trans-unit>
        <trans-unit id="897827b5730f7b24462bc905181ae4197863fb98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; function is one of the Angular testing utilities that you import with &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;. It's a companion to &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; and you can only call it within a &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; body.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; является одной из утилит для тестирования Angular, которые вы импортируете с помощью &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; . Это дополнение к &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; и вы можете вызывать его только в &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69ee243bd8cdc74b2d9890a9225015af3b1be718" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/changedetectorref&quot;&gt;ChangeDetectorRef&lt;/a&gt;&lt;/code&gt; for the component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/changedetectorref&quot;&gt;ChangeDetectorRef&lt;/a&gt;&lt;/code&gt; для компонента.</target>
        </trans-unit>
        <trans-unit id="e5809ea7370f47ded53130555d7d9d221cc5c877" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/changedetectorref&quot;&gt;ChangeDetectorRef&lt;/a&gt;&lt;/code&gt; is most valuable when testing a component that has the &lt;code&gt;&lt;a href=&quot;../api/core/changedetectionstrategy#OnPush&quot;&gt;ChangeDetectionStrategy.OnPush&lt;/a&gt;&lt;/code&gt; method or the component's change detection is under your programmatic control.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/changedetectorref&quot;&gt;ChangeDetectorRef&lt;/a&gt;&lt;/code&gt; является наиболее ценным при тестировании компонент , который имеет &lt;code&gt;&lt;a href=&quot;../api/core/changedetectionstrategy#OnPush&quot;&gt;ChangeDetectionStrategy.OnPush&lt;/a&gt;&lt;/code&gt; метод или обнаружения изменений компонента находится под вашим контролем программного.</target>
        </trans-unit>
        <trans-unit id="51794b2d7fab6f05d86b195b0e1aca2ec6b1d7fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; associated with the root element of the component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; , связанный с корневым элементом компонента.</target>
        </trans-unit>
        <trans-unit id="961daa0538457c955d90426ae42027fad7dff895" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; has other methods and properties that are useful in tests, as you'll see elsewhere in this guide.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; имеет другие свойства и методы , которые являются полезными в тестах, как вы увидите в другом месте в данном руководстве.</target>
        </trans-unit>
        <trans-unit id="f1de24ec1f5099c1ccbba6b2ab07fecb22f71cab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; offers query methods that work for all supported platforms. These query methods take a &lt;em&gt;predicate&lt;/em&gt; function that returns &lt;code&gt;true&lt;/code&gt; when a node in the &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; tree matches the selection criteria.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; Предложения QUERY методы , которые работают для всех поддерживаемых платформ. Эти методы запроса принимают функцию &lt;em&gt;предиката,&lt;/em&gt; которая возвращает значение &lt;code&gt;true&lt;/code&gt; , когда узел в дереве &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; соответствует критериям выбора.</target>
        </trans-unit>
        <trans-unit id="862186ee287f0a3973ebace73350df1dc36f0373" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; parent. Null if this is the root element.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; родитель. Нуль, если это корневой элемент.</target>
        </trans-unit>
        <trans-unit id="e19b18ad54693eb69b8495b3c5389751ca092427" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; provides crucial insights into the component's DOM representation.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; обеспечивает важное понимание DOM представления компонента.</target>
        </trans-unit>
        <trans-unit id="8862a64115ba59a883af135381735a2e8bb22ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; provider key lets you map one token to another. In effect, the first token is an &lt;em&gt;alias&lt;/em&gt; for the service associated with the second token, creating two ways to access the same service object.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; ключ поставщика позволяет отобразить один маркер на другой. По сути, первый токен является &lt;em&gt;псевдонимом&lt;/em&gt; для службы, связанной со вторым токеном, создавая два способа доступа к одному и тому же объекту службы.</target>
        </trans-unit>
        <trans-unit id="02289d427dfadce775076f28b6b4b604ca0aa6ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; field tells Angular that the provider is a factory function whose implementation is &lt;code&gt;heroServiceFactory&lt;/code&gt;.</source>
          <target state="translated">Поле &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; сообщает Angular, что поставщик является фабричной функцией, реализация которой - &lt;code&gt;heroServiceFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40f86f8f21fce527e353b556c2ec4994b4b501e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; provider key lets you create a dependency object by calling a factory function, as in the following example.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; ключ поставщик позволяет создать объект зависимостей путем вызова функции фабрики, как показано в следующем примере.</target>
        </trans-unit>
        <trans-unit id="0b974d1037f4bd4bb8020582a79e0ce5c8b0b3c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; wires the click event of the host element (the &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; anchor elements in &lt;code&gt;AppComponent&lt;/code&gt;) to the stub directive's &lt;code&gt;onClick&lt;/code&gt; method.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; провод щелчка событие хоста элемента ( &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; анкерные элементы в &lt;code&gt;AppComponent&lt;/code&gt; ) Заглушка директиве &lt;code&gt;onClick&lt;/code&gt; методы.</target>
        </trans-unit>
        <trans-unit id="8765869581667805aba310a48ddaccd740daa2ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; wires the click event of the host element (the &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; anchor elements in &lt;code&gt;AppComponent&lt;/code&gt;) to the stub directive's &lt;code&gt;onClick&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec3f4f7beb143e72b2f66889972507a21903aa5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; property is declared in the &lt;code&gt;ListItemComponent&lt;/code&gt; with a type of &lt;code&gt;Item&lt;/code&gt; and decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;:</source>
          <target state="translated">Свойство &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; объявлено в &lt;code&gt;ListItemComponent&lt;/code&gt; с типом &lt;code&gt;Item&lt;/code&gt; и оформлено с помощью &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="62296206d0f1bcad4784d2e6379d92928e2d5a0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; also prevents the compiler from telling you about the missing components and attributes that you omitted inadvertently or misspelled. You could waste hours chasing phantom bugs that the compiler would have caught in an instant.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; также препятствует компилятору говорить вам о недостающих компонентах и атрибуты , которые вы опустили непреднамеренно или неправильно. Вы могли бы потратить часы, преследуя фантомные ошибки, которые компилятор мог бы поймать в одно мгновение.</target>
        </trans-unit>
        <trans-unit id="f9832c0d12b70799263520e96d78a0a11b71abae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; approach is the easier of the two but don't overuse it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; подход является более простым, но не злоупотребляйте этим.</target>
        </trans-unit>
        <trans-unit id="736f7b384e5c3d37d116e2a6a5c084d671e75bed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; tells the Angular compiler to ignore unrecognized elements and attributes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; говорит Угловое компилятор игнорировать непризнанные элементы и атрибуты.</target>
        </trans-unit>
        <trans-unit id="46ae0e9050482d384516ed17b7168e0b7f8f4de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/platformref#bootstrapModule&quot;&gt;bootstrapModule()&lt;/a&gt;&lt;/code&gt; method creates a child injector of the platform injector which is configured by the &lt;code&gt;AppModule&lt;/code&gt;. This is the &lt;code&gt;root&lt;/code&gt;&lt;code&gt;ModuleInjector&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;../api/core/platformref#bootstrapModule&quot;&gt;bootstrapModule()&lt;/a&gt;&lt;/code&gt; создает дочерний инжектор инжектора платформы, который настраивается &lt;code&gt;AppModule&lt;/code&gt; . Это &lt;code&gt;root&lt;/code&gt; &lt;code&gt;ModuleInjector&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfd9564eb30349a9789dc480442eca5944f3969c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/provider&quot;&gt;Provider&lt;/a&gt;&lt;/code&gt; object literal</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/provider&quot;&gt;Provider&lt;/a&gt;&lt;/code&gt; литерал объекта</target>
        </trans-unit>
        <trans-unit id="544be4e74b7a5646610d6d8b844c6bf76f8cc96d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/resolvedreflectivefactory#dependencies&quot;&gt;dependencies&lt;/a&gt;&lt;/code&gt; section of &lt;code&gt;package.json&lt;/code&gt; contains:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/resolvedreflectivefactory#dependencies&quot;&gt;dependencies&lt;/a&gt;&lt;/code&gt; секция &lt;code&gt;package.json&lt;/code&gt; содержит:</target>
        </trans-unit>
        <trans-unit id="c6f3e8e57f07ac59c00b10a08504252a4823865f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; helper function takes a parameterless function with the body of the setup.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; вспомогательная функция принимает функцию без параметров с телом установки.</target>
        </trans-unit>
        <trans-unit id="14f024be8696cacdaf6f765e664b4a9642519924" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; utility hides some asynchronous boilerplate by arranging for the tester's code to run in a special &lt;em&gt;async test zone&lt;/em&gt;. You don't need to pass Jasmine's &lt;code&gt;&lt;a href=&quot;../api/core/applicationinitstatus#done&quot;&gt;done&lt;/a&gt;()&lt;/code&gt; into the test and call &lt;code&gt;&lt;a href=&quot;../api/core/applicationinitstatus#done&quot;&gt;done&lt;/a&gt;()&lt;/code&gt; because it is &lt;code&gt;undefined&lt;/code&gt; in promise or observable callbacks.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; утилита скрывает некоторые асинхронные шаблонный путем организации коды тестера для запуска в специальной &lt;em&gt;испытательной асинхронной зоне&lt;/em&gt; . Вам не нужно передавать Jasmine &lt;code&gt;&lt;a href=&quot;../api/core/applicationinitstatus#done&quot;&gt;done&lt;/a&gt;()&lt;/code&gt; в тест и вызывать &lt;code&gt;&lt;a href=&quot;../api/core/applicationinitstatus#done&quot;&gt;done&lt;/a&gt;()&lt;/code&gt; потому что он не &lt;code&gt;undefined&lt;/code&gt; в обещаниях или наблюдаемых обратных вызовах.</target>
        </trans-unit>
        <trans-unit id="b6bdb963f4671f0ae12506889584d39b686a4803" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt;&lt;/code&gt; properties and methods provide access to the component, its DOM representation, and aspects of its Angular environment.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt;&lt;/code&gt; свойства и методы обеспечивают доступ к компоненту, его DOM представления и аспекты его угловыми среды.</target>
        </trans-unit>
        <trans-unit id="93ac15fbb5d8a83db3c78e9d66f9a5a179823b1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#debugElement&quot;&gt;debugElement&lt;/a&gt;&lt;/code&gt; provides insight into the component and its DOM element during test and debugging. It's a critical property for testers. The most interesting members are covered &lt;a href=&quot;testing#debug-element-details&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#debugElement&quot;&gt;debugElement&lt;/a&gt;&lt;/code&gt; дает представление о компоненте и его DOM элемента во время испытания и отладки. Это критическое свойство для тестеров. Самые интересные участники описаны &lt;a href=&quot;testing#debug-element-details&quot;&gt;ниже&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d60cbcd5a51066898ce1cfaef907a6ff5eeb1913" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; function enables a linear coding style by running the test body in a special &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt; test zone&lt;/code&gt;. The test body appears to be synchronous. There is no nested syntax (like a &lt;code&gt;Promise.then()&lt;/code&gt;) to disrupt the flow of control.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; включает стиль линейного кодирования, выполняя тело теста в специальной &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt; test zone&lt;/code&gt; &lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt; . Тело теста кажется синхронным. Нет вложенного синтаксиса (например, &lt;code&gt;Promise.then()&lt;/code&gt; ), чтобы нарушить поток управления.</target>
        </trans-unit>
        <trans-unit id="4d2f01c3eec63e6c9292ec719b3298411291b445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; utility function has a few limitations. In particular, it won't work if the test body makes an &lt;code&gt;XMLHttpRequest&lt;/code&gt; (XHR) call. XHR calls within a test are rare so you can generally stick with &lt;a href=&quot;testing#fake-async&quot;&gt;&lt;code&gt;fakeAsync()&lt;/code&gt;&lt;/a&gt;. But if you ever do need to call &lt;code&gt;XMLHttpRequest&lt;/code&gt;, you'll want to know about &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">У служебной функции &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; есть несколько ограничений. В частности, он не будет работать, если тело теста выполняет вызов &lt;code&gt;XMLHttpRequest&lt;/code&gt; (XHR). Вызовы XHR в тесте редки, поэтому вы можете придерживаться функции &lt;a href=&quot;testing#fake-async&quot;&gt; &lt;code&gt;fakeAsync()&lt;/code&gt; &lt;/a&gt; . Но если вам когда-нибудь понадобится вызвать &lt;code&gt;XMLHttpRequest&lt;/code&gt; , вы захотите узнать об &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c184a77512c3c8c73e87e4c09c8907531fc12dff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; API consists of static class methods that either update or reference a &lt;em&gt;global&lt;/em&gt; instance of the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; API состоит из статических методов класса , которые либо обновить или ссылаться на &lt;em&gt;глобальный&lt;/em&gt; экземпляр &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5dcb0270444e1aa603b2dcc620f2b6164bc70ff0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; class is one of the principal Angular testing utilities. Its API is quite large and can be overwhelming until you've explored it, a little at a time. Read the early part of this guide first to get the basics before trying to absorb the full API.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; является одной из основных утилит для тестирования Angular. Его API довольно велик и может быть подавляющим, пока вы его не изучите, понемногу. Сначала прочтите начальную часть этого руководства, чтобы получить основы, прежде чем пытаться полностью освоить API.</target>
        </trans-unit>
        <trans-unit id="cc8e345965763ddfe3e7812d90185a3cc8df7c1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; is the most important of the Angular testing utilities. The &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; creates a dynamically-constructed Angular &lt;em&gt;test&lt;/em&gt; module that emulates an Angular &lt;a href=&quot;ngmodules&quot;&gt;@NgModule&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; является наиболее важным из угловых тестирований утилит. &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; создает динамически построенный Угловой &lt;em&gt;тест&lt;/em&gt; модуль , который эмулирует Угловое &lt;a href=&quot;ngmodules&quot;&gt;@NgModule&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0fa5719e49ca7a76ef3c8e65b62aafdb6c823677" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; helper function takes a parameterless function with the body of the setup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd063ff35719124876f2ecec17f31742541a17bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; utility hides some asynchronous boilerplate by arranging for the tester's code to run in a special &lt;em&gt;async test zone&lt;/em&gt;. You don't need to pass Jasmine's &lt;code&gt;done()&lt;/code&gt; into the test and call &lt;code&gt;done()&lt;/code&gt; because it is &lt;code&gt;undefined&lt;/code&gt; in promise or observable callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4324c4f646e7ef5fabe04fb65098a0bff82f02d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; key lets you associate a fixed value with a DI token. Use this technique to provide &lt;em&gt;runtime configuration constants&lt;/em&gt; such as website base addresses and feature flags. You can also use a value provider in a unit test to provide mock data in place of a production data service.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; ключ позволяет связать фиксированное значение с маркером DI. Используйте этот метод для предоставления &lt;em&gt;констант конфигурации времени выполнения,&lt;/em&gt; таких как базовые адреса веб-сайтов и флаги функций. Вы также можете использовать провайдера значений в модульном тесте для предоставления фиктивных данных вместо службы производственных данных.</target>
        </trans-unit>
        <trans-unit id="c4a4de4cdb30e4981a232b9d5743ace000b43da2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service has three methods: &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#control&quot;&gt;control()&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#array&quot;&gt;array()&lt;/a&gt;&lt;/code&gt;. These are factory methods for generating instances in your component classes including form controls, form groups, and form arrays.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; услуга имеет три метода: &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#control&quot;&gt;control()&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#array&quot;&gt;array()&lt;/a&gt;&lt;/code&gt; . Это фабричные методы для генерации экземпляров в ваших классах компонентов, включая элементы управления формой, группы форм и массивы форм.</target>
        </trans-unit>
        <trans-unit id="eec16cb9c821a4731397c8d35c19449c25d69e8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service has three methods: &lt;code&gt;control()&lt;/code&gt;, &lt;code&gt;group()&lt;/code&gt;, and &lt;code&gt;array()&lt;/code&gt;. These are factory methods for generating instances in your component classes including form controls, form groups, and form arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1aec13426a1cba49098c3f423a02468ea7f19b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service is an injectable provider that is provided with the reactive forms module. Inject this dependency by adding it to the component constructor.</source>
          <target state="translated">Служба &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; является поставщиком для инъекций, который поставляется с модулем реактивных форм. Добавьте эту зависимость, добавив ее в конструктор компонента.</target>
        </trans-unit>
        <trans-unit id="66dd4a989eed4a636dae82c8167c5fb3f64ae0ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service is provided by the &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt;, which is already defined in the &lt;code&gt;AppModule&lt;/code&gt; you modified previously (in &lt;code&gt;app.module.ts&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; услуга предоставляется &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; , которое уже определено в &lt;code&gt;AppModule&lt;/code&gt; вы изменили ранее (в &lt;code&gt;app.module.ts&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b0d904487da6019bae00f65e8b4f4d62577ec312" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; class is the basic building block when using reactive forms. To register a single form control, import the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; class into your component and create a new instance of the form control to save as a class property.</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; является основным строительным блоком при использовании реактивных форм. Чтобы зарегистрировать один элемент управления формы, импортируйте класс &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; в свой компонент и создайте новый экземпляр элемента управления формы, чтобы сохранить его в качестве свойства класса.</target>
        </trans-unit>
        <trans-unit id="925fc2f850492caec6ce67dbf8116c7a303b111c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance emits the latest value through the &lt;code&gt;valueChanges&lt;/code&gt; observable.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; экземпляр выдает последнее значение через &lt;code&gt;valueChanges&lt;/code&gt; наблюдаемого.</target>
        </trans-unit>
        <trans-unit id="e08dfd1b765eeae5dddab9afb63ae6fbe7aaae9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance emits the new value through the &lt;code&gt;valueChanges&lt;/code&gt; observable.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; экземпляр излучает новое значение через &lt;code&gt;valueChanges&lt;/code&gt; наблюдаемого.</target>
        </trans-unit>
        <trans-unit id="4abd98b620b228f713556cb990a2f0f873bcf994" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive can change that behavior and set the value to something else. In the following example, the template reference variable, &lt;code&gt;itemForm&lt;/code&gt;, appears three times separated by HTML.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; директива может изменить это поведение и установить значение чего - то еще. В следующем примере ссылочная переменная шаблона &lt;code&gt;itemForm&lt;/code&gt; отображается три раза, разделенная HTML.</target>
        </trans-unit>
        <trans-unit id="332f7f137b483b6b03a13b704b0ffcc4824ca51f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive creates a top-level &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance and binds it to a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; element to track aggregated form value and validation status. As soon as you import &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, this directive becomes active by default on all &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags. You don't need to add a special selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95c50a3609c10e18fd22c13852a46b658fb296c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive demonstrates getting a reference to a different value by reference a directive's &lt;code&gt;exportAs&lt;/code&gt; name. In the following example, the template variable, &lt;code&gt;itemForm&lt;/code&gt;, appears three times separated by HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5879087109abd4866dfeed31d274c238360f5733" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive supplements the &lt;code&gt;form&lt;/code&gt; element with additional features. It holds the controls you created for the elements with an &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive and &lt;code&gt;name&lt;/code&gt; attribute, and monitors their properties, including their validity. It also has its own &lt;code&gt;valid&lt;/code&gt; property which is true only &lt;em&gt;if every contained control&lt;/em&gt; is valid.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; директива дополняет &lt;code&gt;form&lt;/code&gt; элементы с дополнительными функциями. Он содержит элементы управления, созданные вами для элементов с директивой &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; и атрибутом &lt;code&gt;name&lt;/code&gt; , и отслеживает их свойства, включая их достоверность. Он также имеет свое собственное &lt;code&gt;valid&lt;/code&gt; свойство, которое имеет значение true, только &lt;em&gt;если каждый содержащийся элемент управления&lt;/em&gt; является действительным.</target>
        </trans-unit>
        <trans-unit id="bae2aaf5e364b7e1956a92af5673f84f9adeda8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; lifecycle hook is an important wrinkle. The timer component isn't available until &lt;em&gt;after&lt;/em&gt; Angular displays the parent view. So it displays &lt;code&gt;0&lt;/code&gt; seconds initially.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngform#ngAfterViewInit&quot;&gt;ngAfterViewInit()&lt;/a&gt;&lt;/code&gt; Жизненный цикл крюк является важными морщинами. Компонент таймера не доступен , пока &lt;em&gt;после&lt;/em&gt; угловых дисплеев родительского вида. Так что изначально отображается &lt;code&gt;0&lt;/code&gt; секунд.</target>
        </trans-unit>
        <trans-unit id="760596de2100ea9dc08bdebeed02a3519c7d1c8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive allows you to display a data property and update that property when the user makes changes. Here's an example:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; директива позволяет отображать свойство данных и обновить эту собственность , когда пользователь вносит изменения. Вот пример:</target>
        </trans-unit>
        <trans-unit id="5892d19a57f804459cd76091e13eb6236cd96d62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive on a control tracks the state of that control. It tells you if the user touched the control, if the value changed, or if the value became invalid. Angular sets special CSS classes on the control element to reflect the state, as shown in the following table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed567bb8b7fccf046e6f2609558b63b1a92c993" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive reconciles value changes in the attached form element with changes in the data model, allowing you to respond to user input with input validation and error handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3af9a9fa73985dedfddeaec340442f862dd265" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; data property sets the element's value property and the &lt;code&gt;ngModelChange&lt;/code&gt; event property listens for changes to the element's value.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; свойство данных устанавливает свойство значения элемента и &lt;code&gt;ngModelChange&lt;/code&gt; слушает собственность событий для изменений значения элемента.</target>
        </trans-unit>
        <trans-unit id="51e77ea18456978315e0f15b3648738c107a419c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive declared in the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; lets you bind controls in your template-driven form to properties in your data model. When you include the directive using the syntax for two-way data binding, &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt;, Angular can track the value and user interaction of the control and keep the view synced with the model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde09ec8f3662293d249077b17992ef49fc2032c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive, which implements two-way data binding, is an example of an attribute directive. &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; modifies the behavior of an existing element (typically &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;) by setting its display value property and responding to change events.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; директива, которая реализует двустороннюю привязку данных, является примером директивы атрибута. &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; изменяет поведение существующего элемента (обычно &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; ), устанавливая его свойство отображаемого значения и реагируя на события изменения.</target>
        </trans-unit>
        <trans-unit id="c9237070a7cb43b406d1d4a21cd61387898bbd49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; directive creates and binds a &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to a DOM element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf386251bdfee3b0633f2f857abd277b404e4c54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; provides the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service, which &lt;code&gt;AppModule&lt;/code&gt; (in &lt;code&gt;app.module.ts&lt;/code&gt;) already imports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9b5b4fe9ab2fb60c6159e2c66f9b1c15feefcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/platform-browser-dynamic/platformbrowserdynamic&quot;&gt;platformBrowserDynamic&lt;/a&gt;()&lt;/code&gt; method creates an injector configured by a &lt;code&gt;PlatformModule&lt;/code&gt;, which contains platform-specific dependencies. This allows multiple apps to share a platform configuration. For example, a browser has only one URL bar, no matter how many apps you have running. You can configure additional platform-specific providers at the platform level by supplying &lt;code&gt;extraProviders&lt;/code&gt; using the &lt;code&gt;&lt;a href=&quot;../api/platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;../api/platform-browser-dynamic/platformbrowserdynamic&quot;&gt;platformBrowserDynamic&lt;/a&gt;()&lt;/code&gt; создает инжектор, настроенный с помощью &lt;code&gt;PlatformModule&lt;/code&gt; , который содержит зависимые от платформы зависимости. Это позволяет нескольким приложениям совместно использовать конфигурацию платформы. Например, браузер имеет только одну строку URL, независимо от того, сколько приложений у вас запущено. Вы можете настроить дополнительных провайдеров для конкретной платформы на уровне платформы, предоставив &lt;code&gt;extraProviders&lt;/code&gt; с помощью функции &lt;code&gt;&lt;a href=&quot;../api/platform-browser/platformbrowser&quot;&gt;platformBrowser&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f37d8e3d33ca8ebc56e260052933af141475551f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/platform-browser/by#css&quot;&gt;By.css()&lt;/a&gt;&lt;/code&gt; static method selects &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; nodes with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors&quot;&gt;standard CSS selector&lt;/a&gt;.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/platform-browser/by#css&quot;&gt;By.css()&lt;/a&gt;&lt;/code&gt; статический метод выбирает &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; узлы с &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_started/Selectors&quot;&gt;стандартным селектором CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="902aeacf20da1b061a9425cd1b76e17c4b6c324d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; function takes as inputs a &lt;em&gt;template&lt;/em&gt; HTML page (usually &lt;code&gt;index.html&lt;/code&gt;), an Angular &lt;em&gt;module&lt;/em&gt; containing components, and a &lt;em&gt;route&lt;/em&gt; that determines which components to display. The route comes from the client's request to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31ffdeeac5f4aa667f7c349fd0fa92694671220" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; function takes as inputs a &lt;em&gt;template&lt;/em&gt; HTML page (usually &lt;code&gt;index.html&lt;/code&gt;), an Angular &lt;em&gt;module&lt;/em&gt; containing components, and a &lt;em&gt;route&lt;/em&gt; that determines which components to display. The route comes from the client's request to the server.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; принимает в качестве входных данных &lt;em&gt;шаблонную&lt;/em&gt; HTML-страницу (обычно &lt;code&gt;index.html&lt;/code&gt; ), угловой &lt;em&gt;модуль,&lt;/em&gt; содержащий компоненты, и &lt;em&gt;маршрут,&lt;/em&gt; который определяет, какие компоненты отображать. Маршрут идет от запроса клиента к серверу.</target>
        </trans-unit>
        <trans-unit id="17d0dc10d2712c04c9ddf4132743725ecd2ca468" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; and its observables are insulated from the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; itself. The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; destroys a routed component when it is no longer needed and the injected &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; dies with it.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; и его наблюдаемые изолированы от &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; сам. &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; уничтожает маршрутизируемый компонент , когда он больше не нужен , и впрыскивает &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; плашку с ним.</target>
        </trans-unit>
        <trans-unit id="ee5d82b8904589c98b1aff4a8285582c106117cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; is specific to each routed component loaded by the Angular Router. It contains information about the route, its parameters, and additional data associated with the route.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; является специфическим для каждого маршрутизируемого компонента , загруженного углового маршрутизатор. Он содержит информацию о маршруте, его параметрах и дополнительные данные, связанные с маршрутом.</target>
        </trans-unit>
        <trans-unit id="16aa52d480dade7f5e2bcd0f28f76622bedc1bdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; is specific to each routed component that the Angular Router loads. It contains information about the route, its parameters, and additional data associated with the route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5e6b35d6fcc4de19833f40d2839e2bef8fe5c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; property is an &lt;code&gt;Observable&lt;/code&gt; map of route parameters. The &lt;code&gt;paramMap&lt;/code&gt; emits a new map of values that includes &lt;code&gt;id&lt;/code&gt; when the user navigates to the component. In &lt;code&gt;ngOnInit()&lt;/code&gt; you subscribe to those values, set the &lt;code&gt;selectedId&lt;/code&gt;, and get the heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d4b299a442f9b6c2574a227699c880a07b173f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; property is an &lt;code&gt;Observable&lt;/code&gt; map of route parameters. The &lt;code&gt;paramMap&lt;/code&gt; emits a new map of values that includes &lt;code&gt;id&lt;/code&gt; when the user navigates to the component. In &lt;code&gt;ngOnInit&lt;/code&gt; you subscribe to those values, set the &lt;code&gt;selectedId&lt;/code&gt;, and get the heroes.</source>
          <target state="translated">Свойство &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; является &lt;code&gt;Observable&lt;/code&gt; картой параметров маршрута. &lt;code&gt;paramMap&lt;/code&gt; излучает новую карту значений , которые включают в себя &lt;code&gt;id&lt;/code&gt; , когда пользователь переходит к компоненту. В &lt;code&gt;ngOnInit&lt;/code&gt; вы подписываетесь на эти значения, устанавливаете &lt;code&gt;selectedId&lt;/code&gt; и получаете героев.</target>
        </trans-unit>
        <trans-unit id="27d7deeeac83ea9a20c6f580c5c055c452a6dc3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/activatedroutesnapshot&quot;&gt;ActivatedRouteSnapshot&lt;/a&gt;&lt;/code&gt; contains the &lt;em&gt;future&lt;/em&gt; route that will be activated and the &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot&quot;&gt;RouterStateSnapshot&lt;/a&gt;&lt;/code&gt; contains the &lt;em&gt;future&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; of the application, should you pass through the guard check.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/activatedroutesnapshot&quot;&gt;ActivatedRouteSnapshot&lt;/a&gt;&lt;/code&gt; содержит &lt;em&gt;будущий&lt;/em&gt; маршрут , который будет активирован и &lt;code&gt;&lt;a href=&quot;../api/router/routerstatesnapshot&quot;&gt;RouterStateSnapshot&lt;/a&gt;&lt;/code&gt; содержит &lt;em&gt;будущее &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; приложения, вы должны пройти через проверку охраны.</target>
        </trans-unit>
        <trans-unit id="8280edbadaeff4ac7aa0d1cdde3cf47b0531bddc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/canactivate&quot;&gt;CanActivate&lt;/a&gt;&lt;/code&gt; guard (checking route access).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/canactivate&quot;&gt;CanActivate&lt;/a&gt;&lt;/code&gt; охранник (проверка доступа маршрут).</target>
        </trans-unit>
        <trans-unit id="a99606469d1a4cc7742bcfbd4bf5ec1a040063c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/canactivate&quot;&gt;CanActivate&lt;/a&gt;&lt;/code&gt; guard is the tool to manage these navigation business rules.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/canactivate&quot;&gt;CanActivate&lt;/a&gt;&lt;/code&gt; охранник является инструментом для управления этими навигации бизнес - правил.</target>
        </trans-unit>
        <trans-unit id="afb0b82efd7f4359cd956f034c1e2538d351b8a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;CanActivateChild&lt;/a&gt;&lt;/code&gt; guard (checking child route access).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/canactivatechild&quot;&gt;CanActivateChild&lt;/a&gt;&lt;/code&gt; охранник (проверка ребенок доступа маршрута).</target>
        </trans-unit>
        <trans-unit id="34dffab7359c14331079d08669b2d615efde3d13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt; guard (ask permission to discard unsaved changes).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt; охранник (попросить разрешения , чтобы отменить несохраненные изменения).</target>
        </trans-unit>
        <trans-unit id="2f23fe85f4d51d8698c45f9ae081e5019673883b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt; guard helps you decide what to do with unsaved changes and how to proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14db661cec9c3568b5135b43665bfcbfcd4b9253" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; guard (check before loading feature module assets).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; охранник (проверка перед модулем загрузки функции активов).</target>
        </trans-unit>
        <trans-unit id="8c0d90c801c00fb60055fc74e159942da215c885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt; API is inspired by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot;&gt;URLSearchParams interface&lt;/a&gt;. It provides methods to handle parameter access for both route parameters (&lt;code&gt;paramMap&lt;/code&gt;) and query parameters (&lt;code&gt;queryParamMap&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/parammap&quot;&gt;ParamMap&lt;/a&gt;&lt;/code&gt; API вдохновлен &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams&quot;&gt;интерфейсом URLSearchParams&lt;/a&gt; . Он предоставляет методы для обработки доступа к параметрам как для параметров маршрута ( &lt;code&gt;paramMap&lt;/code&gt; ), так и для параметров запроса ( &lt;code&gt;queryParamMap&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="87e23084f4ca0468a6304206815831e8e9c49089" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy does not load feature areas protected by a &lt;a href=&quot;router#can-load-guard&quot;&gt;CanLoad&lt;/a&gt; guard. This is by design.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; стратегия не нагружает области функциональности , защищенные &lt;a href=&quot;router#can-load-guard&quot;&gt;CanLoad&lt;/a&gt; охраной. Это по замыслу.</target>
        </trans-unit>
        <trans-unit id="1280f376d5dce25dd0582e1de839a6ba06987c67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy does not load feature areas protected by a &lt;a href=&quot;router-tutorial-toh#can-load-guard&quot;&gt;CanLoad&lt;/a&gt; guard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c61a6fdcf13e9c86ff5a44bd92f179ae4c17aa7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; guard (pre-fetching route data).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; охранник (упреждающая выборка данных о маршруте).</target>
        </trans-unit>
        <trans-unit id="f2eb75bb4ecb58de1eaa6fa343d6391a23d96005" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; also supports &lt;a href=&quot;router#query-parameters&quot;&gt;query parameters&lt;/a&gt; and the &lt;a href=&quot;router#fragment&quot;&gt;fragment&lt;/a&gt; when using redirects.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; также поддерживает &lt;a href=&quot;router#query-parameters&quot;&gt;запрос параметров&lt;/a&gt; и &lt;a href=&quot;router#fragment&quot;&gt;фрагмент&lt;/a&gt; при использовании переадресации.</target>
        </trans-unit>
        <trans-unit id="0d4b6d0c293dec3cfa7f7e6385f6243927b4a452" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; also supports &lt;a href=&quot;router-tutorial-toh#query-parameters&quot;&gt;query parameters&lt;/a&gt; and the &lt;a href=&quot;router-tutorial-toh#fragment&quot;&gt;fragment&lt;/a&gt; when using redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47609ad3349203dba5c6265eb5fab99ea5f3e365" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; matches that URL to a route to the &lt;code&gt;HeroDetailComponent&lt;/code&gt;. It creates an &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; object with the routing information and injects it into a new instance of the &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; соответствует этому URL на пути к &lt;code&gt;HeroDetailComponent&lt;/code&gt; . Он создает объект &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; с информацией о маршрутизации и внедряет его в новый экземпляр &lt;code&gt;HeroDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21fe55f6896e40418d589006b8cbc60c2be0bf3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; module is an &lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModule&lt;/a&gt; that provides the necessary service providers and directives for navigating through application views. A &lt;a href=&quot;glossary#routing-component&quot;&gt;routing component&lt;/a&gt; is one that imports the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; module and whose template contains a &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; element where it can display views produced by the router.</source>
          <target state="translated">Модуль &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; - это модуль &lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModule,&lt;/a&gt; который предоставляет необходимые поставщики услуг и директивы для навигации по представлениям приложений. &lt;a href=&quot;glossary#routing-component&quot;&gt;Компонент маршрутизации&lt;/a&gt; является тот , который импортирует &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; и модуль которого шаблон содержит &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; элемента , где он может отображать вид на произведенный маршрутизатор.</target>
        </trans-unit>
        <trans-unit id="1647cd0123077158e4b17948253f8bbd17f93811" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; offers two preloading strategies out of the box:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; предлагает два предзагрузку стратегии из коробки:</target>
        </trans-unit>
        <trans-unit id="877254071c7848541b70167385ff6c80a4519c01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; offers two preloading strategies:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c3b172b152b721b1e9a71592d0d755b58d2153" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; supports &lt;em&gt;empty path&lt;/em&gt; routes; use them to group routes together without adding any additional path segments to the URL. Users will still visit &lt;code&gt;/admin&lt;/code&gt; and the &lt;code&gt;AdminComponent&lt;/code&gt; still serves as the &lt;em&gt;Routing Component&lt;/em&gt; containing child routes.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; поддерживает &lt;em&gt;пустой путь&lt;/em&gt; маршрутов; используйте их для группировки маршрутов без добавления дополнительных сегментов пути к URL. Пользователи по-прежнему будут посещать &lt;code&gt;/admin&lt;/code&gt; , а &lt;code&gt;AdminComponent&lt;/code&gt; по- прежнему будет служить &lt;em&gt;компонентом маршрутизации,&lt;/em&gt; содержащим дочерние маршруты.</target>
        </trans-unit>
        <trans-unit id="0959a563cb3265074d00520e70abc0842cae2d5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directives on the anchor tags give the router control over those elements. The navigation paths are fixed, so you can assign a string to the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; (a &quot;one-time&quot; binding).</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; директивы по тегам анкерных дают контроль над маршрутизатором этих элементов. Пути навигации фиксированы, поэтому вы можете назначить строку для &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; (&amp;laquo;одноразовая&amp;raquo; привязка).</target>
        </trans-unit>
        <trans-unit id="19a7dd2b4d0033c385b588593b21d3fff087227f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; directive toggles CSS classes for active &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; bindings based on the current &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8657a5f3d772af4293fc4eba88a13d37bf61236" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; directive toggles css classes for active &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; bindings based on the current &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; директива переключает классы CSS для активных &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; привязок , основанных на текущем &lt;code&gt;&lt;a href=&quot;../api/router/routerstate&quot;&gt;RouterState&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c7995bb70f0ae0cf3627366c5543ac5c032ac8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; function sets the &lt;code&gt;&lt;a href=&quot;../api/common/locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;../api/common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;, making it the default strategy. You can switch to the &lt;code&gt;&lt;a href=&quot;../api/common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; with an override during the bootstrapping process if you prefer it.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; устанавливает &lt;code&gt;&lt;a href=&quot;../api/common/locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt; , делая его стратегией по умолчанию. Вы можете переключиться на &lt;code&gt;&lt;a href=&quot;../api/common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; с переопределением во время процесса начальной загрузки, если вы предпочитаете это.</target>
        </trans-unit>
        <trans-unit id="d9418ba8275e370ae277b731a55e776f79026780" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; function sets the &lt;code&gt;&lt;a href=&quot;../api/common/locationstrategy&quot;&gt;LocationStrategy&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;../api/common/pathlocationstrategy&quot;&gt;PathLocationStrategy&lt;/a&gt;&lt;/code&gt;, which makes it the default strategy. You also have the option of switching to the &lt;code&gt;&lt;a href=&quot;../api/common/hashlocationstrategy&quot;&gt;HashLocationStrategy&lt;/a&gt;&lt;/code&gt; with an override during the bootstrapping process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf9938fff728d1cd8889ad751fddb80b83e9050" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; configuration method takes an &lt;code&gt;InMemoryDataService&lt;/code&gt; class that primes the in-memory database.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; метод конфигурации принимает &lt;code&gt;InMemoryDataService&lt;/code&gt; класса, простые числа в базе данных в оперативной памяти.</target>
        </trans-unit>
        <trans-unit id="2684614a1ecc2d98495d86f9bbe58a84c69aafc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; method takes care of the &lt;em&gt;global&lt;/em&gt; injector configuration for the Router. The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; method has no injector configuration. It uses directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt;. For more information, see the &lt;a href=&quot;singleton-services#forRoot&quot;&gt;&lt;code&gt;forRoot()&lt;/code&gt; pattern&lt;/a&gt; section of the &lt;a href=&quot;singleton-services&quot;&gt;Singleton Services&lt;/a&gt; guide.</source>
          <target state="translated">Метод &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; заботится о &lt;em&gt;глобальной&lt;/em&gt; конфигурации инжектора для маршрутизатора. Метод &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; не имеет конфигурации инжектора. Он использует такие директивы, как &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; . Для получения дополнительной информации см &lt;a href=&quot;singleton-services#forRoot&quot;&gt; &lt;code&gt;forRoot()&lt;/code&gt; шаблон&lt;/a&gt; раздел &lt;a href=&quot;singleton-services&quot;&gt;Singleton Услуги&lt;/a&gt; гида.</target>
        </trans-unit>
        <trans-unit id="ac02a174bb651f87b3bb3995379d09ef25a0ff1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; pattern</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; модели</target>
        </trans-unit>
        <trans-unit id="678d09ad88def2247372c3a4a6393c3c2434c878" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; static method is a convention that makes it easy for developers to configure services and providers that are intended to be singletons. A good example of &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; статический метод является соглашением , что делает его легким для разработчиков , чтобы настроить услуги и поставщик, которые предназначены , чтобы быть одиночками. Хорошим примером &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; является метод &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3828bf90aca6ba2f62f1c10e3b2552f116a1db1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; is a directive from the router library that is used like a component. It acts as a placeholder that marks the spot in the template where the router should display the components for that outlet.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; директива из библиотеки маршрутизатора , который используется как компонент. Он действует как заполнитель, который отмечает место в шаблоне, где маршрутизатор должен отображать компоненты для этой розетки.</target>
        </trans-unit>
        <trans-unit id="d74a774153ea254ddecf646ba8eaac93785e276f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; is one of the router directives that became available to the &lt;code&gt;AppComponent&lt;/code&gt; because &lt;code&gt;AppModule&lt;/code&gt; imports &lt;code&gt;AppRoutingModule&lt;/code&gt; which exported &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; является одним из директив маршрутизаторов , которые стали доступны для &lt;code&gt;AppComponent&lt;/code&gt; потому &lt;code&gt;AppModule&lt;/code&gt; импорт &lt;code&gt;AppRoutingModule&lt;/code&gt; который экспортируется &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8c11bd00eecef2cce3341767e6d98cc873af8600" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; is one of the router directives that became available to the &lt;code&gt;AppComponent&lt;/code&gt; because &lt;code&gt;AppModule&lt;/code&gt; imports &lt;code&gt;AppRoutingModule&lt;/code&gt; which exported &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;ng generate&lt;/code&gt; command you ran at the start of this tutorial added this import because of the &lt;code&gt;--module=app&lt;/code&gt; flag. If you manually created &lt;code&gt;app-routing.module.ts&lt;/code&gt; or used a tool other than the CLI to do so, you'll need to import &lt;code&gt;AppRoutingModule&lt;/code&gt; into &lt;code&gt;app.module.ts&lt;/code&gt; and add it to the &lt;code&gt;imports&lt;/code&gt; array of the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98421694d6873683d8adc6a2570f7e017b62f4ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; service gives you access to events that indicate when the service worker has discovered an available update for your app or when it has activated such an update&amp;mdash;meaning it is now serving content from that update to your app.</source>
          <target state="translated">Служба &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; предоставляет вам доступ к событиям, которые указывают, когда работник службы обнаружил доступное обновление для вашего приложения или когда он активировал такое обновление, то есть теперь он передает контент из этого обновления в ваше приложение.</target>
        </trans-unit>
        <trans-unit id="f8f699f83b8111047f49e6cbc19f04ff13424e11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; service supports four separate operations:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; служба поддерживает четыре отдельных операций:</target>
        </trans-unit>
        <trans-unit id="bc582fd99dd06940465b5d3c501d9db0b81efaf6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; will invoke the AngularJS &lt;code&gt;$rootScope.$apply()&lt;/code&gt; after every turn of the Angular zone. This also triggers AngularJS change detection after every event.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; будет вызывать AngularJS &lt;code&gt;$rootScope.$apply()&lt;/code&gt; после каждого поворота Угловой зоны. Это также запускает обнаружение изменений AngularJS после каждого события.</target>
        </trans-unit>
        <trans-unit id="e84a1329251cd9c2fbb8229ea5249e31361e93bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe subscribes to an &lt;code&gt;Observable&lt;/code&gt; or &lt;code&gt;Promise&lt;/code&gt; and returns the latest value it has emitted. When a new value is emitted, the &lt;code&gt;&lt;a href=&quot;../core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe marks the component to be checked for changes. When the component gets destroyed, the &lt;code&gt;&lt;a href=&quot;../core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe unsubscribes automatically to avoid potential memory leaks.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; труба присоединяется к &lt;code&gt;Observable&lt;/code&gt; или &lt;code&gt;Promise&lt;/code&gt; и возвращают последнее значение оно испускается. Когда выдается новое значение, &lt;code&gt;&lt;a href=&quot;../core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; канал помечает компонент, который необходимо проверить на наличие изменений. Когда компонент уничтожается, &lt;code&gt;&lt;a href=&quot;../core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; канал автоматически отписывается, чтобы избежать возможных утечек памяти.</target>
        </trans-unit>
        <trans-unit id="531c89170dd2f17583e39b5d4eddf1ecb2701940" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; package contains helpers that allow AngularJS and Angular components to be used together inside a hybrid upgrade application, which supports AOT compilation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3132cfc546b1bdf952329e52271f45aff98383a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;../static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; package contains helpers that allow AngularJS and Angular components to be used together inside a hybrid upgrade application, which supports AoT compilation.</source>
          <target state="translated">Пакет &lt;code&gt;&lt;a href=&quot;../static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; содержит помощники, которые позволяют вместе использовать компоненты AngularJS и Angular в гибридном приложении обновления, которое поддерживает компиляцию AoT.</target>
        </trans-unit>
        <trans-unit id="752b1abdffae69bdf4168440e2e9cb777c33b581" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; control to replace the existing control</source>
          <target state="translated">Элемент управления &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; для замены существующего элемента управления</target>
        </trans-unit>
        <trans-unit id="b925de43d88186682c1cc87f1ed1e335656ff9bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe subscribes to an &lt;code&gt;Observable&lt;/code&gt; or &lt;code&gt;Promise&lt;/code&gt; and returns the latest value it has emitted. When a new value is emitted, the &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe marks the component to be checked for changes. When the component gets destroyed, the &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe unsubscribes automatically to avoid potential memory leaks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60977a7c3bb769794d3c2f89211320ea518117b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; exports are re-exported by &lt;code&gt;&lt;a href=&quot;platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is included automatically in the root &lt;code&gt;AppModule&lt;/code&gt; when you create a new app with the CLI &lt;code&gt;new&lt;/code&gt; command.</source>
          <target state="translated">В &lt;code&gt;&lt;a href=&quot;common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; экспорт реэкспортированный &lt;code&gt;&lt;a href=&quot;platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; , который включается автоматически в корневой &lt;code&gt;AppModule&lt;/code&gt; при создании нового приложения с CLI &lt;code&gt;new&lt;/code&gt; команды.</target>
        </trans-unit>
        <trans-unit id="f016d8816fcfa69165aee6fbb999c091f83bf43a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a number value and listening to number input changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для записи значения числа и прослушивания ввода числа изменений. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="48f6ec592cff0cf9d0aff197b282590da64cb58e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a range value and listening to range input changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для записи значения диапазона и прослушивания входного диапазона изменений. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27bb0eddd953d2a41d5154c0bba7e4f6f544cc06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing multi-select control values and listening to multi-select control changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для записи множественного выбора значений управления и прослушивания нескольких отборных изменений управления. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a6f7acc93e4d52ce15e418ed2762c1637e0216e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing radio control values and listening to radio control changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для написания контрольных значений радио и слушать изменения радиоуправления. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1148900a1718d2df24d36a4cbd007c9c92b9a79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing select control values and listening to select control changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для записи выберите значение управления и прослушивание , чтобы выбрать изменения управления. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16103ac1afe681300c7a23cc043ef06beb4a7047" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;elements/createcustomelement&quot;&gt;createCustomElement&lt;/a&gt;()&lt;/code&gt; function provides a bridge from Angular's component interface and change detection functionality to the built-in DOM API.</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;elements/createcustomelement&quot;&gt;createCustomElement&lt;/a&gt;()&lt;/code&gt; обеспечивает мост между компонентным интерфейсом Angular и функцией обнаружения изменений во встроенный DOM API.</target>
        </trans-unit>
        <trans-unit id="ee8ac75a2b9c5aee4a1cebe857ca226adf40cf76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; bound to this directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; связан с этой директивой.</target>
        </trans-unit>
        <trans-unit id="7270e358ccf5aaada34c49677df7b3e14375ded5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; directive instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; директива экземпляра.</target>
        </trans-unit>
        <trans-unit id="cc714487b764ae3e9d84f7190d1dfb0cc3b0870c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; provides syntactic sugar that shortens creating instances of a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. It reduces the amount of boilerplate needed to build complex forms.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; обеспечивает синтаксический сахар , что укорачивает создание экземпляров &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; . Это уменьшает количество шаблонов, необходимых для создания сложных форм.</target>
        </trans-unit>
        <trans-unit id="850b4ce7a3a59e14b92b60a445f357fdbf2fe0f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; bound to this directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; связан с этой директивой.</target>
        </trans-unit>
        <trans-unit id="8d22d6266b6398a65b4e3e7fe6142ffe7a2c64b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance tracks the value, user interaction, and validation status of the control and keeps the view synced with the model. If used within a parent form, the directive also registers itself with the form as a child control.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; экземпляр отслеживает значение, взаимодействие с пользователем, а также статус проверки элемента управления и сохраняет вид синхронизирован с моделью. При использовании в родительской форме директива также регистрируется в форме в качестве дочернего элемента управления.</target>
        </trans-unit>
        <trans-unit id="93fad32c1a184c4d364a5daa7659977bd1a3cfff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; directive instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; директива экземпляра.</target>
        </trans-unit>
        <trans-unit id="801ce0c4ea960713beae25efb9571c6b96674579" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; associated with a particular &lt;code&gt;&lt;a href=&quot;abstractformgroupdirective&quot;&gt;AbstractFormGroupDirective&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; связан с конкретным &lt;code&gt;&lt;a href=&quot;abstractformgroupdirective&quot;&gt;AbstractFormGroupDirective&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="612e978f37e7706fc06192d6e7c9d3657175c9c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; bound to this directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; связан с этой директивой.</target>
        </trans-unit>
        <trans-unit id="ef29ac55227f5beca2e703c6f3ce56a2c65b38c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance created for this form.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; экземпляр , созданный для этой формы.</target>
        </trans-unit>
        <trans-unit id="ad8e8d6f83cfec04008d3c28ea120b7fb0022efd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; directive instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; директива экземпляра.</target>
        </trans-unit>
        <trans-unit id="9f8bac942c174f8f843f6218a20ac2bc1584df80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a number value and listening to number input changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для записи значения числа и прослушивания ввода числа изменений. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aace7891efa5898083cb4a8b6c06104aec931f83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a range value and listening to range input changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для записи значения диапазона и прослушивания входного диапазона изменений. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bbe745964444088faf3ae89051254babe77ae2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing multi-select control values and listening to multi-select control changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для записи множественного выбора значений управления и прослушивания нескольких отборных изменений управления. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d1e7c68b482004d56ddf05c6d90fff65212326f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing radio control values and listening to radio control changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для написания контрольных значений радио и слушать изменения радиоуправления. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b783ac6bf4e725f603e628f0ee838444f2369886" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing select control values and listening to select control changes. The value accessor is used by the &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; для записи выберите значение управления и прослушивание , чтобы выбрать изменения управления. Метод доступа к значениям используется &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3855ab70e68f971860bf678533a96d1491488cb0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; value determines how a successful response body is parsed.</source>
          <target state="translated">Значение &lt;code&gt;&lt;a href=&quot;httprequest#responseType&quot;&gt;responseType&lt;/a&gt;&lt;/code&gt; определяет, как анализируется тело успешного ответа.</target>
        </trans-unit>
        <trans-unit id="c81bb386aab2ceb16fe7911f0dc2f4d144946406" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt; directive instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt; директива экземпляра.</target>
        </trans-unit>
        <trans-unit id="d63e7454a683dccf5ba2f06aaad94bd636915124" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;&lt;/code&gt; directive is generally used in the &lt;a href=&quot;../../guide/structural-directives#the-asterisk--prefix&quot;&gt;shorthand form&lt;/a&gt;&lt;code&gt;*&lt;a href=&quot;ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. In this form, the template to be rendered for each iteration is the content of an anchor element containing the directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;&lt;/code&gt; директива , как правило , используется в &lt;a href=&quot;../../guide/structural-directives#the-asterisk--prefix&quot;&gt;виде стенографии &lt;/a&gt; &lt;code&gt;*&lt;a href=&quot;ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; . В этой форме шаблон, который будет отображаться для каждой итерации, является содержимым элемента привязки, содержащего директиву.</target>
        </trans-unit>
        <trans-unit id="ce10e6bc2f600bbe290d97323968acbf78a1a9dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; директива экземпляра.</target>
        </trans-unit>
        <trans-unit id="08aeb1d8b8421374a5c2ea9c2371614dc9182b9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; directive instance.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ngmodelgroup&quot;&gt;NgModelGroup&lt;/a&gt;&lt;/code&gt; директива экземпляра.</target>
        </trans-unit>
        <trans-unit id="95125957724760afb3d875ddfb3db41240b2f9f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496ed3f692f3ec8115c36370a54ff9294c2d8673" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; is included by default in any app created through the CLI, and it re-exports the &lt;code&gt;&lt;a href=&quot;common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt; exports, making basic Angular functionality available to the app.</source>
          <target state="translated">Модуль &lt;code&gt;&lt;a href=&quot;platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; по умолчанию включен в любое приложение, созданное через интерфейс командной строки, и он реэкспортирует экспорты &lt;code&gt;&lt;a href=&quot;common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;core/applicationmodule&quot;&gt;ApplicationModule&lt;/a&gt;&lt;/code&gt; , делая базовую функциональность Angular доступной для приложения.</target>
        </trans-unit>
        <trans-unit id="48ea56e0f769676c4c1d046c393f4551409d11e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; class is used directly by all implementations of &lt;a href=&quot;locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; when they need to interact with the DOM APIs like pushState, popState, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6ae8a3c165d3ac08575bb713450a7d5f9b67e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; class is used directly by all implementations of &lt;a href=&quot;locationstrategy&quot;&gt;&lt;code&gt;LocationStrategy&lt;/code&gt;&lt;/a&gt; when they need to interact with the DOM apis like pushState, popState, etc...</source>
          <target state="translated">Класс &lt;code&gt;&lt;a href=&quot;platformlocation&quot;&gt;PlatformLocation&lt;/a&gt;&lt;/code&gt; используется напрямую всеми реализациями &lt;a href=&quot;locationstrategy&quot;&gt; &lt;code&gt;LocationStrategy&lt;/code&gt; ,&lt;/a&gt; когда им нужно взаимодействовать с API-интерфейсом DOM, такими как pushState, popState и т. Д.</target>
        </trans-unit>
        <trans-unit id="0661053b470abb698b0e1169e845f6b47e88d3d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function collects multiple elements and works internally by using &lt;code&gt;element.querySelectorAll&lt;/code&gt;. Use the &lt;code&gt;&lt;a href=&quot;animationqueryoptions#limit&quot;&gt;limit&lt;/a&gt;&lt;/code&gt; field of an options object to limit the total number of items to be collected. For example:</source>
          <target state="translated">Функция &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; собирает несколько элементов и работает внутри, используя &lt;code&gt;element.querySelectorAll&lt;/code&gt; . Используйте поле &lt;code&gt;&lt;a href=&quot;animationqueryoptions#limit&quot;&gt;limit&lt;/a&gt;&lt;/code&gt; объекта параметров, чтобы ограничить общее количество элементов, которые будут собраны. Например:</target>
        </trans-unit>
        <trans-unit id="249c7dd2cd3e15f6f4c51fbb7641e77222a6c8de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; function collects multiple elements and works internally by using &lt;code&gt;element.querySelectorAll&lt;/code&gt;. Use the &lt;code&gt;limit&lt;/code&gt; field of an options object to limit the total number of items to be collected. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b913a55abde72ca81d7024ca445739808aa7665" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;&lt;/code&gt; animation method also supports reading an inline function which can decide if its associated animation should be run.</source>
          <target state="translated">Метод анимации &lt;code&gt;&lt;a href=&quot;transition&quot;&gt;transition&lt;/a&gt;&lt;/code&gt; также поддерживает чтение встроенной функции, которая может решить, следует ли запускать связанную с ней анимацию.</target>
        </trans-unit>
        <trans-unit id="4712f621c4a5e2ef20b6c645ee3fa558074a5fe9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;upgradeadapter&quot;&gt;UpgradeAdapter&lt;/a&gt;&lt;/code&gt; allows: 1. creation of Angular component from AngularJS component directive (See [UpgradeAdapter#upgradeNg1Component()]) 2. creation of AngularJS directive from Angular component. (See [UpgradeAdapter#downgradeNg2Component()]) 3. Bootstrapping of a hybrid Angular application which contains both of the frameworks coexisting in a single application.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;upgradeadapter&quot;&gt;UpgradeAdapter&lt;/a&gt;&lt;/code&gt; позволяет: 1. Создание углового компонента из AngularJS директива компоненты (см [UpgradeAdapter # upgradeNg1Component ()]) 2. Создание AngularJS директивы от углового компонента. (См. [UpgradeAdapter # downgradeNg2Component ()]) 3. Начальная загрузка гибридного приложения Angular, которое содержит обе платформы, сосуществующие в одном приложении.</target>
        </trans-unit>
        <trans-unit id="a1eb2dcb7af0dcf4a695c59ebfeddacb6c402e95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; class</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; класс</target>
        </trans-unit>
        <trans-unit id="66b690e47d0f38b1cd5809389bb990c762cb3b2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator identifies the class immediately below it as a component, and provides the template and related component-specific metadata.</source>
          <target state="translated">В &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; декоратор идентифицирует класс непосредственно под ним в качестве компонента, а также предоставляет шаблон и соответствующие метаданные компонент-специфический.</target>
        </trans-unit>
        <trans-unit id="57179aa07943c084fd24a0cf2ed81afe8bc53b96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator identifies the class immediately below it as a component class, and specifies its metadata. In the example code below, you can see that &lt;code&gt;HeroListComponent&lt;/code&gt; is just a class, with no special Angular notation or syntax at all. It's not a component until you mark it as one with the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; декоратор идентифицирует класс непосредственно под ним в качестве компонента класса, и определяет его метаданные. В приведенном ниже примере кода вы можете видеть, что &lt;code&gt;HeroListComponent&lt;/code&gt; - это просто класс без каких-либо специальных угловых обозначений или синтаксиса. Это не компонент, пока вы не пометите его как один с помощью декоратора &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="27ed6a775ed7809f9909d1cfea44203256e88024" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; selector value of &quot;app-hero-form&quot; means you can drop this form in a parent template with a &lt;code&gt;&amp;lt;app-hero-form&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Значение селектора &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &amp;laquo;app-hero-form&amp;raquo; означает, что вы можете поместить эту форму в родительский шаблон с &lt;code&gt;&amp;lt;app-hero-form&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="abb5105661ab098fdef91d360f2cbe023d27af04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; decorator's lone configuration property specifies the directive's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors&quot;&gt;CSS attribute selector&lt;/a&gt;, &lt;code&gt;[appHighlight]&lt;/code&gt;.</source>
          <target state="translated">Свойство одиночной конфигурации декоратора &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; определяет &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors&quot;&gt;селектор атрибута CSS&lt;/a&gt; директивы , &lt;code&gt;[appHighlight]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f79cdd82b4c60315fdd4cc2098a2174561bcca45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; function decorating the &lt;code&gt;heroCache&lt;/code&gt; constructor property ensures that you get a reference to the cache service from the parent &lt;code&gt;HeroBioComponent&lt;/code&gt;. Angular throws an error if the parent lacks that service, even if a component higher in the component tree includes it.</source>
          <target state="translated">Функция &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; украшающая &lt;code&gt;heroCache&lt;/code&gt; конструктора heroCache, гарантирует, что вы получите ссылку на службу кэширования от родительского &lt;code&gt;HeroBioComponent&lt;/code&gt; . Angular выдает ошибку, если родителю не хватает этого сервиса, даже если его включает компонент выше в дереве компонентов.</target>
        </trans-unit>
        <trans-unit id="5fd526663380f3592df2037fdc9b44234695f288" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;&lt;/code&gt; property decorator stops the upward search at the &lt;em&gt;host component&lt;/em&gt;. The host component is typically the component requesting the dependency. However, when this component is projected into a &lt;em&gt;parent&lt;/em&gt; component, that parent component becomes the host. The following example covers this second case.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;&lt;/code&gt; свойство декоратор останавливает вверх поиск в &lt;em&gt;компоненте хоста&lt;/em&gt; . Хост-компонент обычно является компонентом, запрашивающим зависимость. Однако когда этот компонент проецируется в &lt;em&gt;родительский&lt;/em&gt; компонент, этот родительский компонент становится хостом. Следующий пример охватывает этот второй случай.</target>
        </trans-unit>
        <trans-unit id="60ba97a300b77d23af86d8fe748cc10fc64eeb09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; decorator lets you subscribe to events of the DOM element that hosts an attribute directive, the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; in this case.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; декоратор позволяет подписаться на события элемента DOM , что хосты директивы атрибута, тот &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; в этом случае.</target>
        </trans-unit>
        <trans-unit id="82b280761ccb94a90a3866c3b2590b2d7168cfa5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator accepts a metadata object for the service, the same way the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator did for your component classes.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; декоратор принимает объект метаданных для службы, таким же образом на &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; декоратор сделал для классов компонентов.</target>
        </trans-unit>
        <trans-unit id="33b3224e88a7414e23c7b4a233a665f3a8818e30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator has the &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; metadata option, where you can specify the provider of the decorated service class with the &lt;code&gt;root&lt;/code&gt; injector, or with the injector for a specific NgModule.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; декоратор имеет &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; вариант метаданных, в котором можно указать поставщик украшенного класса обслуживания с &lt;code&gt;root&lt;/code&gt; инжектором, или с инжектором для конкретного NgModule.</target>
        </trans-unit>
        <trans-unit id="f3b1fe44a66b6a4f24f65d28d0cac2b2c2e2aab1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator has the &lt;code&gt;providedIn&lt;/code&gt; metadata option, where you can specify the provider of the decorated service class with the &lt;code&gt;root&lt;/code&gt; injector, or with the injector for a specific NgModule.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00b5d1cd3cbe5d3000e056fc39a0951f372ba27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator identifies a service class. The &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property configures a specific &lt;code&gt;ModuleInjector&lt;/code&gt;, here &lt;code&gt;root&lt;/code&gt;, which makes the service available in the &lt;code&gt;root&lt;/code&gt;&lt;code&gt;ModuleInjector&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; декоратор идентифицирует класс обслуживания. В &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; свойстве настраивается конкретный &lt;code&gt;ModuleInjector&lt;/code&gt; , в данном случае &lt;code&gt;root&lt;/code&gt; , что делает службу доступной в &lt;code&gt;root&lt;/code&gt; &lt;code&gt;ModuleInjector&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ad48defe3e03a0fc8f1a09782bf32d657ea22331" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator identifies a service class. The &lt;code&gt;providedIn&lt;/code&gt; property configures a specific &lt;code&gt;ModuleInjector&lt;/code&gt;, here &lt;code&gt;root&lt;/code&gt;, which makes the service available in the &lt;code&gt;root&lt;/code&gt;&lt;code&gt;ModuleInjector&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e68e554c1029e63664d57c18622c712d0a2c5fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; is an essential ingredient in every Angular service definition. The rest of the class has been written to expose a &lt;code&gt;getHeroes&lt;/code&gt; method that returns the same mock data as before. (A real app would probably get its data asynchronously from a remote server, but we'll ignore that to focus on the mechanics of injecting the service.)</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; является важным элементом в каждом угловом определении сервиса. Остальная часть класса была написана для предоставления метода &lt;code&gt;getHeroes&lt;/code&gt; , который возвращает те же фиктивные данные, что и раньше. (Реальное приложение, вероятно, получило бы свои данные асинхронно с удаленного сервера, но мы проигнорируем это, чтобы сосредоточиться на механике внедрения службы.)</target>
        </trans-unit>
        <trans-unit id="885d9f9809780d5bc310e3e424d03c4b141f4967" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; metadata allows the service class to be used with the &lt;a href=&quot;glossary#di&quot;&gt;dependency injection&lt;/a&gt; mechanism. The injectable class is instantiated by a &lt;a href=&quot;glossary#provider&quot;&gt;provider&lt;/a&gt;. &lt;a href=&quot;glossary#injector&quot;&gt;Injectors&lt;/a&gt; maintain lists of providers and use them to provide service instances when they are required by components or other services.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; метаданные позволяет классу обслуживания , которые будут использоваться при &lt;a href=&quot;glossary#di&quot;&gt;инъекции зависимостей&lt;/a&gt; механизма. Инъецируемый класс создается &lt;a href=&quot;glossary#provider&quot;&gt;поставщиком&lt;/a&gt; . &lt;a href=&quot;glossary#injector&quot;&gt;Инъекторы&lt;/a&gt; ведут списки поставщиков и используют их для предоставления экземпляров сервисов, когда они требуются компонентами или другими сервисами.</target>
        </trans-unit>
        <trans-unit id="38ce962cd0076ede1d204b85c3815cacd68aa9f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; decorator will attach some dependency injection metadata to the class, letting Angular know about its dependencies. As described by the &lt;a href=&quot;dependency-injection&quot;&gt;Dependency Injection Guide&lt;/a&gt;, this is a marker decorator you need to use for classes that have no other Angular decorators but still need to have their dependencies injected.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; декораторы придадут инъекции зависимостей метаданных класса, позволяя Угловые знать о зависимости. Как описано в &lt;a href=&quot;dependency-injection&quot;&gt;Руководстве по внедрению зависимостей&lt;/a&gt; , это декоратор маркеров, который необходимо использовать для классов, у которых нет других угловых декораторов, но все же необходимо внедрить их зависимости.</target>
        </trans-unit>
        <trans-unit id="990450ef80fcef92daa50a47b7da3cde2efb9ff2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator in a child component or directive signifies that the property can receive its value from its parent component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82d4b4dc5240c874db316d0eb21e8c9fa399274" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorators have the &lt;code&gt;providers&lt;/code&gt; metadata option, where you can configure providers for NgModule-level or component-level injectors.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; Декораторы имеют &lt;code&gt;providers&lt;/code&gt; метаданных вариант, где вы можете настроить поставщиков для NgModule уровня или компонента на уровне форсунок.</target>
        </trans-unit>
        <trans-unit id="d2f532ec5724d6b05eba458d043ebf03fb0000ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator identifies &lt;code&gt;AppModule&lt;/code&gt; as an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; class. &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; takes a metadata object that tells Angular how to compile and launch the application.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; декоратор идентифицирует &lt;code&gt;AppModule&lt;/code&gt; как &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; класса. &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; принимает объект метаданных, который сообщает Angular, как скомпилировать и запустить приложение.</target>
        </trans-unit>
        <trans-unit id="793708455a547f501ce441e6a27457efeb8d5cad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata initializes the router and starts it listening for browser location changes.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; метаданных инициализирует маршрутизатор и начинает его слушать изменения местоположения браузера.</target>
        </trans-unit>
        <trans-unit id="de3b9997da7fd9351bee46d71bf4389338789fcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata plays an important role in guiding the Angular compilation process that converts the app code you write into highly performant JavaScript code. The metadata describes how to compile a component's template and how to create an &lt;a href=&quot;glossary#injector&quot;&gt;injector&lt;/a&gt; at runtime. It identifies the NgModule's &lt;a href=&quot;glossary#component&quot;&gt;components&lt;/a&gt;, &lt;a href=&quot;glossary#directive&quot;&gt;directives&lt;/a&gt;, and &lt;a href=&quot;glossary#pipe&quot;&gt;pipes&lt;/a&gt;, and makes some of them public through the &lt;code&gt;exports&lt;/code&gt; property so that external components can use them. You can also use an NgModule to add &lt;a href=&quot;glossary#provider&quot;&gt;providers&lt;/a&gt; for &lt;a href=&quot;glossary#service&quot;&gt;services&lt;/a&gt;, so that the services are available elsewhere in your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551e7f123e55c8302870ff8d05f968f8ce0fe58b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; property tells the compiler that this is an entry component &lt;em&gt;and&lt;/em&gt; it should generate code to bootstrap the application with this component.</source>
          <target state="translated">Свойство &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; сообщает компилятору, что это компонент ввода, &lt;em&gt;и&lt;/em&gt; он должен сгенерировать код для начальной загрузки приложения с этим компонентом.</target>
        </trans-unit>
        <trans-unit id="4b851db63609eef9aefac9a444ed5cbac0f0319b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;&lt;/code&gt; property decorator tells Angular to return null when it can't find the dependency.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;&lt;/code&gt; декоратор свойства сообщает Угловой для возврата нулевого , когда он не может найти зависимость.</target>
        </trans-unit>
        <trans-unit id="2508286f96d86b216f2a179d26f3463859edc2eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; decorator in a child component or directive allows data to flow from the child to the parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d2b202019a40c34df385a62aa3700bbf14c211" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; decorator allows you to define the pipe name that you'll use within template expressions. It must be a valid JavaScript identifier. Your pipe's name is &lt;code&gt;exponentialStrength&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; декоратор позволяет определить имя канала, который вы будете использовать в выражениях шаблонов. Это должен быть действительный идентификатор JavaScript. Название вашей трубы - &lt;code&gt;exponentialStrength&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6eb463094d9552ad72076a24ff98a2f18c5be9b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@angular/bazel&lt;/code&gt; package provides a builder that allows Angular CLI to use Bazel as the build tool.</source>
          <target state="translated">Пакет &lt;code&gt;@angular/bazel&lt;/code&gt; предоставляет компоновщик, который позволяет Angular CLI использовать Bazel в качестве инструмента компоновки.</target>
        </trans-unit>
        <trans-unit id="2b12259d8e67605d37f369e41dddfc69f10b15d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@angular/elements&lt;/code&gt; package exports a &lt;code&gt;&lt;a href=&quot;../api/elements/createcustomelement&quot;&gt;createCustomElement&lt;/a&gt;()&lt;/code&gt; API that provides a bridge from Angular's component interface and change detection functionality to the built-in DOM API.</source>
          <target state="translated">Пакет &lt;code&gt;@angular/elements&lt;/code&gt; экспортирует API &lt;code&gt;&lt;a href=&quot;../api/elements/createcustomelement&quot;&gt;createCustomElement&lt;/a&gt;()&lt;/code&gt; который обеспечивает связь между интерфейсом компонентов Angular и функцией обнаружения изменений во встроенный DOM API.</target>
        </trans-unit>
        <trans-unit id="4488a294179b4aa7eb55572640dfae952a5db44c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@angular/platform-*&lt;/code&gt; packages enable Angular to be run in different contexts. For examples, &lt;code&gt;@angular/platform-server&lt;/code&gt; enables Angular to be run on the server, and &lt;code&gt;@angular/platform-browser&lt;/code&gt; enables Angular to be run in a web browser.</source>
          <target state="translated">В &lt;code&gt;@angular/platform-*&lt;/code&gt; пакеты позволяют Угловыми для запуска в различных контекстах. Например, &lt;code&gt;@angular/platform-server&lt;/code&gt; позволяет запускать Angular на сервере, а &lt;code&gt;@angular/platform-browser&lt;/code&gt; позволяет запускать Angular в веб-браузере.</target>
        </trans-unit>
        <trans-unit id="0c63fd51849879c954d809afd0f11511d1eee422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@routeAnimation&lt;/code&gt; property is bound to the &lt;code&gt;getAnimationData()&lt;/code&gt; with the provided &lt;code&gt;routerOutlet&lt;/code&gt; reference, so the next step is to define that function in the &lt;code&gt;AppComponent&lt;/code&gt;. The &lt;code&gt;getAnimationData()&lt;/code&gt; function returns the animation property from the &lt;code&gt;data&lt;/code&gt; provided through the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/animations/animation&quot;&gt;animation&lt;/a&gt;&lt;/code&gt; property matches the &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;&lt;/code&gt; names you used in the &lt;code&gt;slideInAnimation&lt;/code&gt; defined in &lt;code&gt;animations.ts&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884f6aebfdc7aeba7bf75a1835534b9815612496" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;@routeAnimation&lt;/code&gt; property is bound to the &lt;code&gt;getAnimationData&lt;/code&gt; with the provided &lt;code&gt;routerOutlet&lt;/code&gt; reference, so you'll need to define that function in the &lt;code&gt;AppComponent&lt;/code&gt;. The &lt;code&gt;getAnimationData&lt;/code&gt; function returns the animation property from the &lt;code&gt;data&lt;/code&gt; provided through the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/animations/animation&quot;&gt;animation&lt;/a&gt;&lt;/code&gt; property matches the &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;&lt;/code&gt; names you used in the &lt;code&gt;slideInAnimation&lt;/code&gt; defined in &lt;code&gt;animations.ts&lt;/code&gt;.</source>
          <target state="translated">Свойство &lt;code&gt;@routeAnimation&lt;/code&gt; привязано к &lt;code&gt;getAnimationData&lt;/code&gt; с помощью предоставленной ссылки &lt;code&gt;routerOutlet&lt;/code&gt; , поэтому вам нужно определить эту функцию в &lt;code&gt;AppComponent&lt;/code&gt; . Функция &lt;code&gt;getAnimationData&lt;/code&gt; возвращает свойство анимации из &lt;code&gt;data&lt;/code&gt; предоставленных через &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; . Свойство &lt;code&gt;&lt;a href=&quot;../api/animations/animation&quot;&gt;animation&lt;/a&gt;&lt;/code&gt; соответствует именам &lt;code&gt;&lt;a href=&quot;../api/animations/transition&quot;&gt;transition&lt;/a&gt;&lt;/code&gt; вы использовали в &lt;code&gt;slideInAnimation&lt;/code&gt; , определенном в &lt;code&gt;animations.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="65905cf210914a41fcac7f549f19b60569db7000" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AdComponent&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;AdComponent&lt;/code&gt; интерфейс</target>
        </trans-unit>
        <trans-unit id="0b3a8ba795cca69d54469fef536f9ed61a6daf82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Admin&lt;/code&gt; and &lt;code&gt;Login&lt;/code&gt; buttons illustrate other router capabilities covered later in the guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="933674f343bff2cd0dd207810101a6b8c86a86b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Admin&lt;/code&gt; and &lt;code&gt;Login&lt;/code&gt; buttons illustrate other router capabilities to be covered later in the guide. This short introduction will do for now.</source>
          <target state="translated">В &lt;code&gt;Admin&lt;/code&gt; и &lt;code&gt;Login&lt;/code&gt; кнопка показывает другие возможности маршрутизатора , которые будут описаны далее в руководстве. Это короткое вступление покажет.</target>
        </trans-unit>
        <trans-unit id="5be07b6d0ce69825736f39e33271e0f4a837efd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AfterViewComponent&lt;/code&gt; displays this child view &lt;em&gt;within its template&lt;/em&gt;:</source>
          <target state="translated">&lt;code&gt;AfterViewComponent&lt;/code&gt; отображает этот вид ребенка в &lt;em&gt;пределах его шаблона&lt;/em&gt; :</target>
        </trans-unit>
        <trans-unit id="5da2c3c2bd8ffcb1dc1282cef2a487959ea1abd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AnimalService&lt;/code&gt; in the logical tree would look like this:</source>
          <target state="translated">&lt;code&gt;AnimalService&lt;/code&gt; в логическом дереве будет выглядеть следующим образом :</target>
        </trans-unit>
        <trans-unit id="792f131f2d93317416f5bc123a877a96098076ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; establishes the initial &lt;code&gt;SizerComponent.size&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;AppComponent.fontSizePx&lt;/code&gt; устанавливает начальное &lt;code&gt;SizerComponent.size&lt;/code&gt; значение.</target>
        </trans-unit>
        <trans-unit id="1141745577d0d6fe3c0de70005105affb0508d78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppComponent&lt;/code&gt; in this example features a list of &lt;code&gt;items&lt;/code&gt; in an array and a method for adding more items to the array.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; в этом примере есть список &lt;code&gt;items&lt;/code&gt; в массиве , и способ добавления дополнительных элементов в массиве.</target>
        </trans-unit>
        <trans-unit id="f5ce2d14bdf3c9317b532acaf7b8ff5f030b4ac1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppComponent&lt;/code&gt; is the test subject, so of course you declare the real version.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; является испытуемым, поэтому, конечно , вы объявляете реальную версию.</target>
        </trans-unit>
        <trans-unit id="da1ffde96872e3d62908574983f6c5d1159496b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppComponent&lt;/code&gt; links to validate are as follows:</source>
          <target state="translated">В &lt;code&gt;AppComponent&lt;/code&gt; ссылки для проверки заключаются в следующем:</target>
        </trans-unit>
        <trans-unit id="c05cfe4289978b66eaf6425a835a8bb31c03dd84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppComponent&lt;/code&gt; template no longer needs &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; because the app will only display the &lt;code&gt;HeroesComponent&lt;/code&gt; when the user navigates to it.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; шаблон больше не нуждается в &lt;code&gt;&amp;lt;app-heroes&amp;gt;&lt;/code&gt; , потому что приложение будет отображать только &lt;code&gt;HeroesComponent&lt;/code&gt; , когда пользователь Перемещение по ему.</target>
        </trans-unit>
        <trans-unit id="e70b1d656b3fb19aeacc406d49ee5c3dd5f96e0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppComponent&lt;/code&gt; template uses this component as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6545b6507f23c86c81f7454e3bc1c87dc46d4fef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppComponent&lt;/code&gt;'s injector is a child of the root injector, one down in the injector hierarchy. For applications that don't use the router, that's almost the entire application. But in routed applications, routing operates at the root level where &lt;code&gt;AppComponent&lt;/code&gt; services don't exist. This means that lazy-loaded modules can't reach them.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; Инжектор &amp;laquo;s является потомком корневого инжектора, один вниз в иерархии инжектора. Для приложений, которые не используют маршрутизатор, это почти все приложение. Но в маршрутизируемых приложениях маршрутизация работает на корневом уровне, где службы &lt;code&gt;AppComponent&lt;/code&gt; не существуют. Это означает, что лениво загруженные модули не могут добраться до них.</target>
        </trans-unit>
        <trans-unit id="e99418b308f9a848c50d9554d2c8fdb6f5482a76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppComponent&lt;/code&gt;, for example, displays a navigation bar with anchors and their &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; , например, отображает навигационную панель с якорей и их &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; директивами.</target>
        </trans-unit>
        <trans-unit id="5280fec7072da76d90f8bcd931c21a6bc6cb2961" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppModule&lt;/code&gt; acts as the fallback injector when the injection token can't be found in the &lt;code&gt;ElementInjector&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;AppModule&lt;/code&gt; выступает в качестве запасного варианта инжектора , когда маркер впрыска не может быть найден в &lt;code&gt;ElementInjector&lt;/code&gt; с.</target>
        </trans-unit>
        <trans-unit id="f95bd053e64f37ddc5bc7a5c80ce68e35d5bdd23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppModule&lt;/code&gt; generated from the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; demonstrates both kinds of modules in action:</source>
          <target state="translated">Модуль &lt;code&gt;AppModule&lt;/code&gt; , сгенерированный из &lt;a href=&quot;cli&quot;&gt;Angular CLI,&lt;/a&gt; демонстрирует оба вида модулей в действии:</target>
        </trans-unit>
        <trans-unit id="4e9140b400c9ed05acfdfd9874a6441c31a99e57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AppModule&lt;/code&gt; is eagerly loaded when the application starts, meaning that it loads right away. Now the &lt;code&gt;AdminModule&lt;/code&gt; loads only when the user clicks on a link, which is called lazy loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff85c340c70e9c69d3c5eb66d2650053ea2c555" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AstronautComponent&lt;/code&gt; also injects the service in its constructor. Each &lt;code&gt;AstronautComponent&lt;/code&gt; is a child of the &lt;code&gt;MissionControlComponent&lt;/code&gt; and therefore receives its parent's service instance:</source>
          <target state="translated">&lt;code&gt;AstronautComponent&lt;/code&gt; также внедряет услугу в своем конструкторе. Каждый &lt;code&gt;AstronautComponent&lt;/code&gt; является дочерним по отношению к &lt;code&gt;MissionControlComponent&lt;/code&gt; и поэтому получает экземпляр службы своего родителя:</target>
        </trans-unit>
        <trans-unit id="71f7c3b8e88b0515bd6606586234bb66a5f249aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AuthGuard&lt;/code&gt; should call an application service that can login a user and retain information about the current user. Generate a new &lt;code&gt;AuthService&lt;/code&gt; in the &lt;code&gt;auth&lt;/code&gt; folder:</source>
          <target state="translated">&lt;code&gt;AuthGuard&lt;/code&gt; должен вызывать службы приложения , которые могут логин пользователя и сохранить информацию о текущем пользователе. Создайте новый &lt;code&gt;AuthService&lt;/code&gt; в папке &lt;code&gt;auth&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c4363e48eff240be87487d285c218f4c54ddee7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BannerComponent&lt;/code&gt; above is defined with an &lt;em&gt;inline template&lt;/em&gt; and &lt;em&gt;inline css&lt;/em&gt;, specified in the &lt;code&gt;@&lt;a href=&quot;../api/core/component#template&quot;&gt;Component.template&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/component#styles&quot;&gt;Component.styles&lt;/a&gt;&lt;/code&gt; properties respectively.</source>
          <target state="translated">&lt;code&gt;BannerComponent&lt;/code&gt; выше, определяется с помощью &lt;em&gt;встроенного шаблона&lt;/em&gt; и &lt;em&gt;встроенного CSS&lt;/em&gt; , указанного в &lt;code&gt;@&lt;a href=&quot;../api/core/component#template&quot;&gt;Component.template&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/component#styles&quot;&gt;Component.styles&lt;/a&gt;&lt;/code&gt; свойств соответственно.</target>
        </trans-unit>
        <trans-unit id="c73dbc2cfcc4fbb3fb48c4f580bcd7575d1a1c10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BannerComponent&lt;/code&gt; and &lt;code&gt;WelcomeComponent&lt;/code&gt; (indicated by &lt;code&gt;&amp;lt;app-banner&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;app-welcome&amp;gt;&lt;/code&gt;) are also irrelevant.</source>
          <target state="translated">&lt;code&gt;BannerComponent&lt;/code&gt; и &lt;code&gt;WelcomeComponent&lt;/code&gt; (обозначается &lt;code&gt;&amp;lt;app-banner&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;app-welcome&amp;gt;&lt;/code&gt; ) также не имеет значения.</target>
        </trans-unit>
        <trans-unit id="ad997328b4137643a7b02c5b33de654998821263" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BannerComponent&lt;/code&gt; tests frequently call &lt;code&gt;detectChanges&lt;/code&gt;. Some testers prefer that the Angular test environment run change detection automatically.</source>
          <target state="translated">В &lt;code&gt;BannerComponent&lt;/code&gt; тесты часто называют &lt;code&gt;detectChanges&lt;/code&gt; . Некоторые тестировщики предпочитают, чтобы среда тестирования Angular запускала обнаружение изменений автоматически.</target>
        </trans-unit>
        <trans-unit id="a1839e661bce6073a1fd31770ec431ef1c3294e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BuilderContext&lt;/code&gt; object provides access to the scheduling method, &lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt;. The scheduler executes the builder handler function with a given &lt;a href=&quot;glossary#target&quot;&gt;target configuration&lt;/a&gt;.</source>
          <target state="translated">Объект &lt;code&gt;BuilderContext&lt;/code&gt; предоставляет доступ к методу планирования, &lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt; . Планировщик выполняет функцию обработчика построителя с заданной &lt;a href=&quot;glossary#target&quot;&gt;целевой конфигурацией&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="399419ce93fca39c52e49e37e238fe478bf0dd53" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;By.directive&lt;/code&gt; predicate is a great way to get the elements that have this directive &lt;em&gt;when their element types are unknown&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;By.directive&lt;/code&gt; предикат является отличным способом , чтобы получить элементы , которые имеют эту директиву , &lt;em&gt;когда их типы элементов неизвестны&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f0f41662f58d971c86f9ff8f96fad823f6761a8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CachingInterceptor&lt;/code&gt; demonstrates this approach.</source>
          <target state="translated">&lt;code&gt;CachingInterceptor&lt;/code&gt; демонстрирует этот подход.</target>
        </trans-unit>
        <trans-unit id="1dacd5c0128814407c9d2b723a3ffc608cd9b09b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CachingInterceptor&lt;/code&gt; in the following example demonstrates this approach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48fd1869da27ab31875cd88a86d533e96e0597a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ComponentFixture&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66442f8a3d2b6633faa8a76d71918c1ffe3323ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConfigComponent&lt;/code&gt; injects the &lt;code&gt;ConfigService&lt;/code&gt; and calls the &lt;code&gt;getConfig&lt;/code&gt; service method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1b0669fe951d3d930f8f82a7f22f3a8bb1f746" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConfigService&lt;/code&gt; fetches this file using the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc39cbdb3bfe1749802c9be8029691e434a5519d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ConfigService&lt;/code&gt; fetches this file with a &lt;code&gt;get()&lt;/code&gt; method on &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ConfigService&lt;/code&gt; извлекает этот файл с &lt;code&gt;get()&lt;/code&gt; метод на &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be14d0f501479857a5aa3fd2572f8221504ed607" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CountdownLocalVarParentComponent&lt;/code&gt; that hosts the timer component is as follows:</source>
          <target state="translated">&lt;code&gt;CountdownLocalVarParentComponent&lt;/code&gt; хосты компоненты таймера выглядит следующим образом :</target>
        </trans-unit>
        <trans-unit id="1060fe5ef1a8ac0d02e847e8fc9e72935303ecca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CraigComponent&lt;/code&gt; tries to inject &lt;code&gt;Base&lt;/code&gt; into its &lt;code&gt;alex&lt;/code&gt; constructor parameter and reports if it succeeded.</source>
          <target state="translated">&lt;code&gt;CraigComponent&lt;/code&gt; пытается внедрить &lt;code&gt;Base&lt;/code&gt; в его &lt;code&gt;alex&lt;/code&gt; параметра конструктора и отчеты , если это удалось.</target>
        </trans-unit>
        <trans-unit id="898736a2e73cb6c2f197570ec98b62cd84e09e81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Crisis Detail&lt;/code&gt; route is a child of the &lt;code&gt;Crisis &lt;a href=&quot;../api/common/numbersymbol#List&quot;&gt;List&lt;/a&gt;&lt;/code&gt;. The router &lt;a href=&quot;router#reuse&quot;&gt;reuses components&lt;/a&gt; by default, so the &lt;code&gt;Crisis Detail&lt;/code&gt; component will be re-used as you select different crises. In contrast, back in the &lt;code&gt;Hero Detail&lt;/code&gt; route, &lt;a href=&quot;router#snapshot-the-no-observable-alternative&quot;&gt;the component was recreated&lt;/a&gt; each time you selected a different hero from the list of heroes.</source>
          <target state="translated">&lt;code&gt;Crisis Detail&lt;/code&gt; маршрут является потомком &lt;code&gt;Crisis &lt;a href=&quot;../api/common/numbersymbol#List&quot;&gt;List&lt;/a&gt;&lt;/code&gt; . Маршрутизатор &lt;a href=&quot;router#reuse&quot;&gt;повторно использует компоненты&lt;/a&gt; по умолчанию, поэтому компонент &lt;code&gt;Crisis Detail&lt;/code&gt; будет использоваться повторно при выборе различных кризисов. Напротив, в маршруте &amp;laquo; &lt;code&gt;Hero Detail&lt;/code&gt; &lt;a href=&quot;router#snapshot-the-no-observable-alternative&quot;&gt;компонент воссоздается&lt;/a&gt; каждый раз, когда вы выбираете другого героя из списка героев.</target>
        </trans-unit>
        <trans-unit id="ffdc2e7741c480ee9f3485c35dffdad1b50a74b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Crisis Detail&lt;/code&gt; route is a child of the &lt;code&gt;Crisis List&lt;/code&gt;. The router &lt;a href=&quot;router-tutorial-toh#reuse&quot;&gt;reuses components&lt;/a&gt; by default, so the &lt;code&gt;Crisis Detail&lt;/code&gt; component will be re-used as you select different crises. In contrast, back in the &lt;code&gt;Hero Detail&lt;/code&gt; route, &lt;a href=&quot;router-tutorial-toh#snapshot-the-no-observable-alternative&quot;&gt;the component was recreated&lt;/a&gt; each time you selected a different hero from the list of heroes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f2c31ec4d14ba5cf2a6d91a768454eb7bbdaff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CrisisCenterComponent&lt;/code&gt; has the following in common with the &lt;code&gt;AppComponent&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;CrisisCenterComponent&lt;/code&gt; имеет следующие общие черты с &lt;code&gt;AppComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1670322d8bc50580dbfbc9e7df89674e1d45373b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CrisisDetailComponent&lt;/code&gt; should no longer fetch the crisis. Update the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; to get the crisis from the &lt;code&gt;ActivatedRoute.data.crisis&lt;/code&gt; property instead; that's where you said it should be when you re-configured the route. It will be there when the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; ask for it.</source>
          <target state="translated">&lt;code&gt;CrisisDetailComponent&lt;/code&gt; больше не принести кризис. Обновите &lt;code&gt;CrisisDetailComponent&lt;/code&gt; , чтобы вместо этого получить кризис из свойства &lt;code&gt;ActivatedRoute.data.crisis&lt;/code&gt; ; это то место, где вы сказали, что должно быть, когда вы переконфигурировали маршрут. Это будет там, когда &lt;code&gt;CrisisDetailComponent&lt;/code&gt; попросит об этом.</target>
        </trans-unit>
        <trans-unit id="da94cb4c732fcbbfa467b580178a07093f6910d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CrisisDetailComponent&lt;/code&gt; should no longer fetch the crisis. When you re-configured the route, you changed where the crisis is. Update the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; to get the crisis from the &lt;code&gt;ActivatedRoute.data.crisis&lt;/code&gt; property instead;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49529198362fb43fae9406c68dc8b82a243583d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CrisisDetailComponent&lt;/code&gt; will have this method. But the guard doesn't have to know that. The guard shouldn't know the details of any component's deactivation method. It need only detect that the component has a &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;()&lt;/code&gt; method and call it. This approach makes the guard reusable.</source>
          <target state="translated">&lt;code&gt;CrisisDetailComponent&lt;/code&gt; будет иметь этот метод. Но охранник не должен знать это. Охранник не должен знать подробности метода деактивации какого-либо компонента. Нужно только обнаружить, что компонент имеет метод &lt;code&gt;&lt;a href=&quot;../api/router/route#canDeactivate&quot;&gt;canDeactivate&lt;/a&gt;()&lt;/code&gt; и вызвать его. Такой подход делает охрану многоразовым.</target>
        </trans-unit>
        <trans-unit id="deb58bc40ff86e8a870178bae21534e147ebbdcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CrisisListComponent&lt;/code&gt; contains the crisis list and a &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; to display the &lt;code&gt;Crisis Center Home&lt;/code&gt; and &lt;code&gt;Crisis Detail&lt;/code&gt; route components.</source>
          <target state="translated">&lt;code&gt;CrisisListComponent&lt;/code&gt; содержит список кризиса и &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; для отображения &lt;code&gt;Crisis Center Home&lt;/code&gt; и &lt;code&gt;Crisis Detail&lt;/code&gt; компоненты маршрута.</target>
        </trans-unit>
        <trans-unit id="ad8d40211d9211157f529ea3146278488c7e9053" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CrisisService.getCrisis()&lt;/code&gt; method returns an observable in order to prevent the route from loading until the data is fetched. The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; guards require an observable to &lt;code&gt;complete&lt;/code&gt;, which means it has emitted all of its values. You use the &lt;code&gt;take&lt;/code&gt; operator with an argument of &lt;code&gt;1&lt;/code&gt; to ensure that the &lt;code&gt;Observable&lt;/code&gt; completes after retrieving the first value from the Observable returned by the &lt;code&gt;getCrisis()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ac706ba21bc081e99e6bbec1203a3eeb56a8ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CrisisService.getCrisis&lt;/code&gt; method returns an observable, in order to prevent the route from loading until the data is fetched. The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; guards require an observable to &lt;code&gt;complete&lt;/code&gt;, meaning it has emitted all of its values. You use the &lt;code&gt;take&lt;/code&gt; operator with an argument of &lt;code&gt;1&lt;/code&gt; to ensure that the Observable completes after retrieving the first value from the Observable returned by the &lt;code&gt;getCrisis&lt;/code&gt; method.</source>
          <target state="translated">Метод &lt;code&gt;CrisisService.getCrisis&lt;/code&gt; возвращает наблюдаемое, чтобы предотвратить загрузку маршрута, пока не будут получены данные. Для &lt;code&gt;complete&lt;/code&gt; охраны &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; требуется наличие наблюдаемой , то есть она испустила все свои значения. Вы используете оператор &lt;code&gt;take&lt;/code&gt; с аргументом &lt;code&gt;1&lt;/code&gt; , чтобы убедиться, что Observable завершается после извлечения первого значения из Observable, возвращенного методом &lt;code&gt;getCrisis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e1bd423a765008f8f2b95a68bd3b724e6d2811d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CustomerDashboardComponent&lt;/code&gt; is now in the JavaScript import list at the top and added to the &lt;code&gt;declarations&lt;/code&gt; array, which lets Angular know to associate this new component with this feature module.</source>
          <target state="translated">&lt;code&gt;CustomerDashboardComponent&lt;/code&gt; теперь в списке импорта JavaScript в верхней части и добавляется к &lt;code&gt;declarations&lt;/code&gt; массиву, что позволяет Угловые знать , чтобы связать этот новый компонент с этой особенностью модулем.</target>
        </trans-unit>
        <trans-unit id="65a80f6ae02d1a838d77c9442c147903d350e5d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DashboardComponent&lt;/code&gt; depends on the Angular router and the &lt;code&gt;HeroService&lt;/code&gt;. You'd probably have to replace them both with test doubles, which is a lot of work. The router seems particularly challenging.</source>
          <target state="translated">Компонент &lt;code&gt;DashboardComponent&lt;/code&gt; зависит от маршрутизатора Angular и &lt;code&gt;HeroService&lt;/code&gt; . Вам, вероятно, придется заменить их обоих на тестовые двойники, что является большой работой. Маршрутизатор кажется особенно сложным.</target>
        </trans-unit>
        <trans-unit id="c10c820adfee205cd562f34a2e2019fa7534885a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DashboardComponent&lt;/code&gt; hero links do nothing at the moment.</source>
          <target state="translated">В &lt;code&gt;DashboardComponent&lt;/code&gt; герой ссылка ничего не делать в данный момент.</target>
        </trans-unit>
        <trans-unit id="51ae10d8079bee8bb4706dee821eabcd80f7f44c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DashboardComponent&lt;/code&gt; is simple. It needs no help. But more complex components often depend on other components, directives, pipes, and providers and these must be added to the testing module too.</source>
          <target state="translated">Компонент &lt;code&gt;DashboardComponent&lt;/code&gt; прост. Это не нуждается в помощи. Но более сложные компоненты часто зависят от других компонентов, директив, каналов и поставщиков, и их также необходимо добавить в модуль тестирования.</target>
        </trans-unit>
        <trans-unit id="d5e670476c1ed45c5c77f644aa1197370e8fea20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DashboardHeroComponent&lt;/code&gt; appears in an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeater, which sets each component's &lt;code&gt;hero&lt;/code&gt; input property to the looping value and listens for the component's &lt;code&gt;selected&lt;/code&gt; event.</source>
          <target state="translated">В &lt;code&gt;DashboardHeroComponent&lt;/code&gt; появляется в &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; ретранслятора, который устанавливает для каждого компонента &lt;code&gt;hero&lt;/code&gt; ввода свойство петлевого значения и прослушивает компонента , &lt;code&gt;selected&lt;/code&gt; события.</target>
        </trans-unit>
        <trans-unit id="ef0aaae906da9605d0abf5af096fbae1a54666d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DashboardHeroComponent&lt;/code&gt; is a tiny example of a component in this role. It displays an individual hero provided by the &lt;code&gt;DashboardComponent&lt;/code&gt;. Clicking that hero tells the &lt;code&gt;DashboardComponent&lt;/code&gt; that the user has selected the hero.</source>
          <target state="translated">&lt;code&gt;DashboardHeroComponent&lt;/code&gt; крошечного пример компонента в этой роли. Он отображает индивидуального героя, предоставленного &lt;code&gt;DashboardComponent&lt;/code&gt; . Нажатие на этого героя говорит &lt;code&gt;DashboardComponent&lt;/code&gt; , что пользователь выбрал героя.</target>
        </trans-unit>
        <trans-unit id="4aad5dc2c0ccb1e42994b35b8c2d70e708b7f655" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DashboardHeroComponent&lt;/code&gt; is embedded in the &lt;code&gt;DashboardComponent&lt;/code&gt; template like this:</source>
          <target state="translated">&lt;code&gt;DashboardHeroComponent&lt;/code&gt; встроен в &lt;code&gt;DashboardComponent&lt;/code&gt; шаблон , как это:</target>
        </trans-unit>
        <trans-unit id="d24e62276bc4d488841fa3d8a9146b02bfedaf67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DebugElement.query(predicate)&lt;/code&gt; and &lt;code&gt;DebugElement.queryAll(predicate)&lt;/code&gt; methods take a predicate that filters the source element's subtree for matching &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;DebugElement.query(predicate)&lt;/code&gt; и &lt;code&gt;DebugElement.queryAll(predicate)&lt;/code&gt; методы принимают предикат , который фильтрует поддерево исходного элемента для согласования &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b14b2c98f86a56ea403131f284681ac0a463b2e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DropdownQuestion&lt;/code&gt; control presents a list of choices in a select box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c11697a80e65ddbc9fd05bf76cbdfd29704b1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DynamicFormComponent&lt;/code&gt; component is the entry point and the main container for the form, which is represented using the &lt;code&gt;&amp;lt;app-dynamic-form&amp;gt;&lt;/code&gt; in a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c79839525e7a0a41a7d2dbd91e5addd0182cfb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DynamicFormComponent&lt;/code&gt; component presents a list of questions by binding each one to an &lt;code&gt;&amp;lt;app-question&amp;gt;&lt;/code&gt; element that matches the &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843b0e4ce580e224c4d7d447dacd1063a1800c6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt; is responsible for rendering the details of an individual question based on values in the data-bound question object. The form relies on a &lt;a href=&quot;../api/forms/formgroupdirective&quot;&gt;&lt;code&gt;[formGroup]&lt;/code&gt; directive&lt;/a&gt; to connect the template HTML to the underlying control objects. The &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt; creates form groups and populates them with controls defined in the question model, specifying display and validation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e1fffde5f963fcaf1c0a4ce3f85ac7e3cbf365" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; custom pipe implementation (&lt;code&gt;flying-heroes.pipe.ts&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d49a3e5ad7043db5d93d2f809157a8a99f288c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HERO_DI_CONFIG&lt;/code&gt; constant conforms to the &lt;code&gt;AppConfig&lt;/code&gt; interface. Unfortunately, you cannot use a TypeScript interface as a token. In TypeScript, an interface is a design-time artifact, and doesn't have a runtime representation (token) that the DI framework can use.</source>
          <target state="translated">Константа &lt;code&gt;HERO_DI_CONFIG&lt;/code&gt; соответствует интерфейсу &lt;code&gt;AppConfig&lt;/code&gt; . К сожалению, вы не можете использовать интерфейс TypeScript в качестве токена. В TypeScript интерфейс является артефактом времени разработки и не имеет представления (токена) времени выполнения, которое может использовать инфраструктура DI.</target>
        </trans-unit>
        <trans-unit id="d5aac87ae4f5089620d00faf71b63932aae20d01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetail&lt;/code&gt; component needs the &lt;code&gt;id&lt;/code&gt; parameter so it can fetch the corresponding hero via the &lt;code&gt;HeroDetailService&lt;/code&gt;. The component has to get the &lt;code&gt;id&lt;/code&gt; from the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; property which is an &lt;code&gt;Observable&lt;/code&gt;.</source>
          <target state="translated">Компонент &lt;code&gt;HeroDetail&lt;/code&gt; нуждается в параметре &lt;code&gt;id&lt;/code&gt; , чтобы он мог получить соответствующего героя через &lt;code&gt;HeroDetailService&lt;/code&gt; . Компонент должен получить &lt;code&gt;id&lt;/code&gt; из свойства &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; , которое является &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4306df157e9a7ad87af3a6bb1a6ee157bd7ac737" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; &quot;Back&quot; button uses the &lt;code&gt;gotoHeroes()&lt;/code&gt; method that navigates imperatively back to the &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce99b8c8e8fcb2277726906943d5f184904bcdeb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; has a &quot;Back&quot; button wired to its &lt;code&gt;gotoHeroes&lt;/code&gt; method that navigates imperatively back to the &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">У &lt;code&gt;HeroDetailComponent&lt;/code&gt; есть кнопка &amp;laquo;Назад&amp;raquo;, &lt;code&gt;gotoHeroes&lt;/code&gt; с его методом gotoHeroes, который обязательно перемещается обратно к &lt;code&gt;HeroListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f25db6c8845b5beec1dab02d6ab15a0ded18b369" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; is a simple view with a title, two hero fields, and two buttons.</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; простой вид с названием, два героя поля и две кнопки.</target>
        </trans-unit>
        <trans-unit id="9967bc88952505761d15207ae719dc59a2d45f5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; is part of the &lt;code&gt;HeroModule&lt;/code&gt;&lt;a href=&quot;feature-modules&quot;&gt;Feature Module&lt;/a&gt; that aggregates more of the interdependent pieces including the &lt;code&gt;SharedModule&lt;/code&gt;. Try a test configuration that imports the &lt;code&gt;HeroModule&lt;/code&gt; like this one:</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; является частью &lt;code&gt;HeroModule&lt;/code&gt; &lt;a href=&quot;feature-modules&quot;&gt;Feature модуля&lt;/a&gt; , что агрегаты более взаимозависимых частей , включая &lt;code&gt;SharedModule&lt;/code&gt; . Попробуйте тестовую конфигурацию, которая импортирует &lt;code&gt;HeroModule&lt;/code&gt; , как этот:</target>
        </trans-unit>
        <trans-unit id="04d66e51f6e74f382d8155e85b170fb46c9a276d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; needs a new way to obtain the hero-to-display. This section explains the following:</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; нужен новый способ , чтобы получить герой-на-дисплей. В этом разделе объясняется следующее:</target>
        </trans-unit>
        <trans-unit id="327ed0be8e7ff0d7cb212ee253e1ea97b28de808" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; provides its own &lt;code&gt;HeroDetailService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; предоставляет свой собственный &lt;code&gt;HeroDetailService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be0beef9b705b0357bc387aaf27b317208f6da98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; requires a lot of help despite its small size and simple construction. In addition to the support it receives from the default testing module &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;, it needs:</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; требует много помощи , несмотря на свои небольшие размеры и простую конструкцию. В дополнение к поддержке, которую он получает от стандартного модуля тестирования &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; , ему необходимо:</target>
        </trans-unit>
        <trans-unit id="8546baf0d16b0043e517e16066d9f683677b01bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; selector is &lt;code&gt;'app-hero-detail'&lt;/code&gt;. Add an &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; element near the bottom of the &lt;code&gt;HeroesComponent&lt;/code&gt; template, where the hero detail view used to be.</source>
          <target state="translated">&lt;code&gt;HeroDetailComponent&lt;/code&gt; селектор &lt;code&gt;'app-hero-detail'&lt;/code&gt; . Добавьте элемент &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; в нижней части шаблона &lt;code&gt;HeroesComponent&lt;/code&gt; , где раньше был детальный вид героя.</target>
        </trans-unit>
        <trans-unit id="976cd55e91fa87a8fd8d56f48bf7cdba43d70a21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailComponent&lt;/code&gt; template binds to the component's &lt;code&gt;hero&lt;/code&gt; property which is of type &lt;code&gt;Hero&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;HeroDetailComponent&lt;/code&gt; шаблон связывается компонента &lt;code&gt;hero&lt;/code&gt; имущества , которое имеет тип &lt;code&gt;Hero&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d2c235447dd5f5546842475eb8b4d0cb93bd629" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailServiceSpy&lt;/code&gt; is a stubbed version of the real &lt;code&gt;HeroDetailService&lt;/code&gt; that fakes all necessary features of that service. It neither injects nor delegates to the lower level &lt;code&gt;HeroService&lt;/code&gt; so there's no need to provide a test double for that.</source>
          <target state="translated">&lt;code&gt;HeroDetailServiceSpy&lt;/code&gt; версия потушил реального &lt;code&gt;HeroDetailService&lt;/code&gt; , что подделок все необходимые функции этой службы. Он не внедряет и не делегирует в &lt;code&gt;HeroService&lt;/code&gt; более низкого уровня, поэтому нет необходимости предоставлять для этого двойной тест.</target>
        </trans-unit>
        <trans-unit id="f250bc439c7afe86478d34af8947a689ca8e42fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroDetailsComponent&lt;/code&gt; displays details of a selected hero. At the moment the &lt;code&gt;HeroDetailsComponent&lt;/code&gt; is only visible at the bottom of the &lt;code&gt;HeroesComponent&lt;/code&gt;</source>
          <target state="translated">Компонент &lt;code&gt;HeroDetailsComponent&lt;/code&gt; отображает сведения о выбранном герое. В данный момент &lt;code&gt;HeroDetailsComponent&lt;/code&gt; виден только в нижней части компонента &lt;code&gt;HeroesComponent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af395c0b87d20bb9b9e3d97fc51bccc36af15bd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroListComponent&lt;/code&gt; isn't expecting any parameters at all and wouldn't know what to do with them. You can change that.</source>
          <target state="translated">&lt;code&gt;HeroListComponent&lt;/code&gt; не ожидает каких - либо параметров на всех и не будет знать , что делать с ними. Вы можете изменить это.</target>
        </trans-unit>
        <trans-unit id="f5f50dae376212c9747f608d5b25f04cf2f2778d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroListComponent&lt;/code&gt; needs code that expects parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d6edcca4a2ff7675260aaee78cc11f43fbf02e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; constructor's &lt;code&gt;logger&lt;/code&gt; parameter is typed as &lt;code&gt;MinimalLogger&lt;/code&gt;, so only the &lt;code&gt;logs&lt;/code&gt; and &lt;code&gt;logInfo&lt;/code&gt; members are visible in a TypeScript-aware editor.</source>
          <target state="translated">В &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; конструктора &lt;code&gt;logger&lt;/code&gt; параметры набраны в &lt;code&gt;MinimalLogger&lt;/code&gt; , поэтому только &lt;code&gt;logs&lt;/code&gt; и &lt;code&gt;logInfo&lt;/code&gt; члены видны в машинописном-Aware редактора.</target>
        </trans-unit>
        <trans-unit id="16216ea634adcf2a08052b47188b3519ee28df59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; example has two value providers.</source>
          <target state="translated">&lt;code&gt;HeroOfTheMonthComponent&lt;/code&gt; пример имеет два поставщика значения.</target>
        </trans-unit>
        <trans-unit id="76803f9c48ffa809d1c10e038cf2c8833ff5d1ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroParentComponent&lt;/code&gt; nests the child &lt;code&gt;HeroChildComponent&lt;/code&gt; inside an &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeater, binding its &lt;code&gt;master&lt;/code&gt; string property to the child's &lt;code&gt;master&lt;/code&gt; alias, and each iteration's &lt;code&gt;hero&lt;/code&gt; instance to the child's &lt;code&gt;hero&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;HeroParentComponent&lt;/code&gt; гнездится ребенка &lt;code&gt;HeroChildComponent&lt;/code&gt; внутри &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; повторителя, связывающий его &lt;code&gt;master&lt;/code&gt; строковое свойство для ребенка &lt;code&gt;master&lt;/code&gt; - псевдоним, и каждой итерации &lt;code&gt;hero&lt;/code&gt; экземпляр для ребенка &lt;code&gt;hero&lt;/code&gt; собственности.</target>
        </trans-unit>
        <trans-unit id="a41cceba7ffc13c8f55945548e7055c98355aa9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService.getHeroes()&lt;/code&gt; method has a &lt;em&gt;synchronous signature&lt;/em&gt;, which implies that the &lt;code&gt;HeroService&lt;/code&gt; can fetch heroes synchronously. The &lt;code&gt;HeroesComponent&lt;/code&gt; consumes the &lt;code&gt;getHeroes()&lt;/code&gt; result as if heroes could be fetched synchronously.</source>
          <target state="translated">Метод &lt;code&gt;HeroService.getHeroes()&lt;/code&gt; имеет &lt;em&gt;синхронную подпись&lt;/em&gt; , что означает, что &lt;code&gt;HeroService&lt;/code&gt; может синхронно выбирать героев. &lt;code&gt;HeroesComponent&lt;/code&gt; потребляет &lt;code&gt;getHeroes()&lt;/code&gt; результат , как если бы герои могли быть неправдоподобными синхронно.</target>
        </trans-unit>
        <trans-unit id="b19c77e2746383145da1c2de5139a7740d5f1d28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService.getHeroes&lt;/code&gt; method used to return a &lt;code&gt;Hero[]&lt;/code&gt;. Now it returns an &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;HeroService.getHeroes&lt;/code&gt; , используемый для возврата &lt;code&gt;Hero[]&lt;/code&gt; . Теперь он возвращает &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3675e99fd07e8ce177a561e62c1f2e3c54d8c59f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService&lt;/code&gt; could get hero data from anywhere&amp;mdash;a web service, local storage, or a mock data source.</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; может получить данные героя из любой точки мира-веб - службы, локального хранения или макете источника данных.</target>
        </trans-unit>
        <trans-unit id="dad29e9d297e900b00b690be032696ce73019fd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService&lt;/code&gt; gets hero data with HTTP requests.</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; получает данные героя с HTTP - запросов.</target>
        </trans-unit>
        <trans-unit id="8ba54fd37ddcd66db40e7ab92ac3b8462da9300e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService&lt;/code&gt; injected into a component is created with another injected service, &lt;code&gt;MessageService&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; вводится в компонент создаются с другой впрыскиваемой службой, &lt;code&gt;MessageService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="80721705d7dcc0db0fc4871e5a0db4fa86a4b091" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService&lt;/code&gt; is now ready to plug into the &lt;code&gt;HeroesComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; теперь готов подключить к &lt;code&gt;HeroesComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="215c4568ef255e7dac5f273cf6889a4c8a6c93e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService&lt;/code&gt; methods return &lt;code&gt;Observables&lt;/code&gt;. You must &lt;em&gt;subscribe&lt;/em&gt; to an observable to (a) cause it to execute and (b) assert that the method succeeds or fails.</source>
          <target state="translated">В &lt;code&gt;HeroService&lt;/code&gt; методы возвращают &lt;code&gt;Observables&lt;/code&gt; . Вы должны &lt;em&gt;подписаться&lt;/em&gt; на наблюдаемое, чтобы (а) заставить его выполнить и (б) утверждать, что метод успешен или неуспешен.</target>
        </trans-unit>
        <trans-unit id="c149031b519380cce6f9243e4ccc25546192c500" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService&lt;/code&gt; methods will &lt;strong&gt;tap&lt;/strong&gt; into the flow of observable values and send a message, via the &lt;code&gt;&lt;a href=&quot;../api/animations/browser/testing/mockanimationdriver#log&quot;&gt;log&lt;/a&gt;()&lt;/code&gt; method, to the message area at the bottom of the page.</source>
          <target state="translated">В &lt;code&gt;HeroService&lt;/code&gt; методы будут &lt;strong&gt;нажать&lt;/strong&gt; в поток наблюдаемых значений и отправить сообщение, через &lt;code&gt;&lt;a href=&quot;../api/animations/browser/testing/mockanimationdriver#log&quot;&gt;log&lt;/a&gt;()&lt;/code&gt; метод, в области сообщений в нижней части страницы.</target>
        </trans-unit>
        <trans-unit id="fd6fec24c80c069b7d3470749711a6abf5f4cf79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService&lt;/code&gt; methods will &lt;strong&gt;tap&lt;/strong&gt; into the flow of observable values and send a message, via the &lt;code&gt;log()&lt;/code&gt; method, to the message area at the bottom of the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c77cdf778a7ccf064d1241aec37ba483037b91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroService&lt;/code&gt; must wait for the server to respond, &lt;code&gt;getHeroes()&lt;/code&gt; cannot return immediately with hero data, and the browser will not block while the service waits.</source>
          <target state="translated">&lt;code&gt;HeroService&lt;/code&gt; должен ждать ответа сервера, &lt;code&gt;getHeroes()&lt;/code&gt; не может сразу вернуться с данным героем, и браузер не будет блокировать в то время ждет обслуживания.</target>
        </trans-unit>
        <trans-unit id="ae5e8d1d62d659b209af6084f56ea069d715ff84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroTaxReturnComponent&lt;/code&gt; has its own provider of the &lt;code&gt;HeroTaxReturnService&lt;/code&gt;. Recall that every component &lt;em&gt;instance&lt;/em&gt; has its own injector. Providing the service at the component level ensures that &lt;em&gt;every&lt;/em&gt; instance of the component gets its own, private instance of the service, and no tax return gets overwritten.</source>
          <target state="translated">У &lt;code&gt;HeroTaxReturnComponent&lt;/code&gt; есть собственный поставщик услуг &lt;code&gt;HeroTaxReturnService&lt;/code&gt; . Напомним, что каждый &lt;em&gt;экземпляр&lt;/em&gt; компонента имеет свой собственный инжектор. Предоставление услуги на уровне компонента гарантирует, что &lt;em&gt;каждый&lt;/em&gt; экземпляр компонента получает свой собственный, частный экземпляр службы, и никакие налоговые декларации не перезаписываются.</target>
        </trans-unit>
        <trans-unit id="9f02f0410f6927b2f938c331c890859a8ca14faa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroTaxReturnService&lt;/code&gt; caches a single &lt;code&gt;HeroTaxReturn&lt;/code&gt;, tracks changes to that return, and can save or restore it. It also delegates to the application-wide singleton &lt;code&gt;HeroService&lt;/code&gt;, which it gets by injection.</source>
          <target state="translated">&lt;code&gt;HeroTaxReturnService&lt;/code&gt; кэширует один &lt;code&gt;HeroTaxReturn&lt;/code&gt; , отслеживает изменения в этом возвращении, и может сохранить или восстановить его. Он также делегирует &lt;code&gt;HeroService&lt;/code&gt; приложению HeroService для всего приложения , которое он получает путем инъекции.</target>
        </trans-unit>
        <trans-unit id="6716ae6fbb479984ae52b5ab78f9e2d0ef00bbb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesBaseComponent&lt;/code&gt; can stand on its own. It demands its own instance of &lt;code&gt;HeroService&lt;/code&gt; to get heroes and displays them in the order they arrive from the database.</source>
          <target state="translated">&lt;code&gt;HeroesBaseComponent&lt;/code&gt; может стоять на своих собственных. Он требует собственный экземпляр &lt;code&gt;HeroService&lt;/code&gt; для получения героев и отображает их в порядке их поступления из базы данных.</target>
        </trans-unit>
        <trans-unit id="a6e42552d50a0d0b2292c68660199985ac50f3b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesComponent&lt;/code&gt; class file is as follows:</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; файл класса выглядит следующим образом :</target>
        </trans-unit>
        <trans-unit id="00a37d4af5daf2421535885af733b7882cff3c8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesComponent&lt;/code&gt; initiates the actual DELETE operation by subscribing to the &lt;code&gt;Observable&lt;/code&gt; returned by this service method.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; инициирует фактическую операцию удаления, подписавшись на &lt;code&gt;Observable&lt;/code&gt; , возвращенном этом методе обслуживания.</target>
        </trans-unit>
        <trans-unit id="3d2a4e344ff6aac3420dd031b44b1637606b407b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesComponent&lt;/code&gt; initiates the actual POST operation by subscribing to the &lt;code&gt;Observable&lt;/code&gt; returned by this service method.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; инициирует фактическую операцию POST, подписавшись на &lt;code&gt;Observable&lt;/code&gt; , возвращенном этом методе обслуживания.</target>
        </trans-unit>
        <trans-unit id="2f58a91f47da76429c364db755dc692a93a4dd9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesComponent&lt;/code&gt; is declared in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; объявлен в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; массиве.</target>
        </trans-unit>
        <trans-unit id="35bf0fad34d2389c5d919d0b9255c19d60d2aa35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesComponent&lt;/code&gt; is still a master/detail view.</source>
          <target state="translated">&lt;code&gt;HeroesComponent&lt;/code&gt; по - прежнему вид ведущий / деталь.</target>
        </trans-unit>
        <trans-unit id="a68cec37df14674cbc2972a17f0769e2db30ba76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesComponent&lt;/code&gt; will only present the list of heroes. The &lt;code&gt;HeroDetailComponent&lt;/code&gt; will present details of a selected hero.</source>
          <target state="translated">Компонент &lt;code&gt;HeroesComponent&lt;/code&gt; будет представлять только список героев. &lt;code&gt;HeroDetailComponent&lt;/code&gt; представит подробную информацию о выбранном герое.</target>
        </trans-unit>
        <trans-unit id="1816110c1ef518aea466fc04dd0a3da6295f4a42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesService&lt;/code&gt; defines such headers in an &lt;code&gt;httpOptions&lt;/code&gt; object that are passed to every &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; save method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600d31e6ce77c089bb9e738a5be9003834acc7b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HeroesService&lt;/code&gt; defines such headers in an &lt;code&gt;httpOptions&lt;/code&gt; object that will be passed to every &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; save method.</source>
          <target state="translated">&lt;code&gt;HeroesService&lt;/code&gt; определяет такие заголовки в сумасшедшем &lt;code&gt;httpOptions&lt;/code&gt; объект , который будет передан в каждый &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; метод сохранения.</target>
        </trans-unit>
        <trans-unit id="179a26fc442403bfb719061cf162871825cdfbbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;IfLoadedDirective&lt;/code&gt; definition declares the static field &lt;code&gt;ngTemplateGuard_state&lt;/code&gt;, which expresses the narrowing behavior. Within the &lt;code&gt;AppComponent&lt;/code&gt; template, the &lt;code&gt;*ifLoaded&lt;/code&gt; structural directive should render this template only when &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; is actually &lt;code&gt;Loaded&amp;lt;Person&amp;gt;&lt;/code&gt;. The type guard allows the type checker to infer that the acceptable type of &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; within the template is a &lt;code&gt;Loaded&amp;lt;T&amp;gt;&lt;/code&gt;, and further infer that &lt;code&gt;T&lt;/code&gt; must be an instance of &lt;code&gt;Person&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="231afbe7c24d8a4db665792149042c33d04122f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;LoggerService.tick_then()&lt;/code&gt; statement postpones the log update for one turn of the browser's JavaScript cycle, which triggers a new change-detection cycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343357c6d57f68303a6458ef697a965250111805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MasterService&lt;/code&gt; is a simple example:</source>
          <target state="translated">&lt;code&gt;MasterService&lt;/code&gt; простой пример:</target>
        </trans-unit>
        <trans-unit id="a23482be799f6a0aa8af44c94a5a0c92fc1f97ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MessagesComponent&lt;/code&gt; should display all messages, including the message sent by the &lt;code&gt;HeroService&lt;/code&gt; when it fetches heroes.</source>
          <target state="translated">Компонент &lt;code&gt;MessagesComponent&lt;/code&gt; должен отображать все сообщения, включая сообщение, отправленное &lt;code&gt;HeroService&lt;/code&gt; при получении героев.</target>
        </trans-unit>
        <trans-unit id="187a2ae2059055922afeeac7f9f1497a27ac7fa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MissionControlComponent&lt;/code&gt; both provides the instance of the service that it shares with its children (through the &lt;code&gt;providers&lt;/code&gt; metadata array) and injects that instance into itself through its constructor:</source>
          <target state="translated">&lt;code&gt;MissionControlComponent&lt;/code&gt; и предоставляет экземпляр сервиса , который он разделяет со своими детьми (через &lt;code&gt;providers&lt;/code&gt; метаданных массива) и впрыскивает этот экземпляр в себя через конструктор:</target>
        </trans-unit>
        <trans-unit id="443d6ca6a8ecb0df8e18ad018248fc8f7df6f0fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ModuleInjector&lt;/code&gt; can be configured in one of two ways:</source>
          <target state="translated">&lt;code&gt;ModuleInjector&lt;/code&gt; может быть сконфигурирован в одном из двух способов:</target>
        </trans-unit>
        <trans-unit id="995729f3faee914f8f72a483b0c5c3bcd93050ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NgForm&lt;/code&gt; directive</source>
          <target state="translated">&lt;code&gt;NgForm&lt;/code&gt; директива</target>
        </trans-unit>
        <trans-unit id="964abff49ca786d23a03346b62917631a3d6ebc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NoopInterceptor&lt;/code&gt; is a service managed by Angular's &lt;a href=&quot;dependency-injection&quot;&gt;dependency injection (DI)&lt;/a&gt; system. Like other services, you must provide the interceptor class before the app can use it.</source>
          <target state="translated">&lt;code&gt;NoopInterceptor&lt;/code&gt; это услуга удалась угловой в &lt;a href=&quot;dependency-injection&quot;&gt;инъекционной зависимости (ДИ)&lt;/a&gt; система. Как и другие сервисы, вы должны предоставить класс-перехватчик, прежде чем приложение сможет его использовать.</target>
        </trans-unit>
        <trans-unit id="aef23056481ed228008bb1745e095b722ea2df23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Parent&lt;/code&gt; class interface defines a &lt;code&gt;name&lt;/code&gt; property with a type declaration but &lt;em&gt;no implementation&lt;/em&gt;. The &lt;code&gt;name&lt;/code&gt; property is the only member of a parent component that a child component can call. Such a narrow interface helps decouple the child component class from its parent components.</source>
          <target state="translated">Интерфейс &lt;code&gt;Parent&lt;/code&gt; класса определяет свойство &lt;code&gt;name&lt;/code&gt; с объявлением типа, но &lt;em&gt;без реализации&lt;/em&gt; . Свойство &lt;code&gt;name&lt;/code&gt; является единственным членом родительского компонента, который может вызвать дочерний компонент. Такой узкий интерфейс помогает отделить класс дочерних компонентов от его родительских компонентов.</target>
        </trans-unit>
        <trans-unit id="fe65f80626a58c9c846540a1ee705dcd55e20730" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PeekABooComponent&lt;/code&gt; demonstrates all of the hooks in one component.</source>
          <target state="translated">&lt;code&gt;PeekABooComponent&lt;/code&gt; демонстрирует все крючки в одном компоненте.</target>
        </trans-unit>
        <trans-unit id="dde0c6bd0330f9b2bcacba8b40a1968bdf8f4397" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;PipeTransform&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;PipeTransform&lt;/code&gt; интерфейс</target>
        </trans-unit>
        <trans-unit id="3b34117c2365a77ca9766c6d135cdc97ff50a160" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProfileEditor&lt;/code&gt; component accepts input from the user, but in a real scenario you want to capture the form value and make available for further processing outside the component. The &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; directive listens for the &lt;code&gt;submit&lt;/code&gt; event emitted by the &lt;code&gt;form&lt;/code&gt; element and emits an &lt;code&gt;ngSubmit&lt;/code&gt; event that you can bind to a callback function.</source>
          <target state="translated">Компонент &lt;code&gt;ProfileEditor&lt;/code&gt; принимает ввод от пользователя, но в реальном сценарии вы хотите захватить значение формы и сделать доступным для дальнейшей обработки вне компонента. В &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; директива прослушивает &lt;code&gt;submit&lt;/code&gt; события , излучаемая &lt;code&gt;form&lt;/code&gt; элемента и испускает &lt;code&gt;ngSubmit&lt;/code&gt; события , которое можно связать с функцией обратного вызова.</target>
        </trans-unit>
        <trans-unit id="56d2b7144d2020750be0ffa2ba8a74e7421d1cd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ProfileEditor&lt;/code&gt; form is displayed as one group, but the model is broken down further to represent the logical grouping areas.</source>
          <target state="translated">Форма &lt;code&gt;ProfileEditor&lt;/code&gt; отображается как одна группа, но модель разбита далее для представления областей логической группировки.</target>
        </trans-unit>
        <trans-unit id="ce1836d6ec5922bed49d518906730f5cef486433" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;QuestionService&lt;/code&gt; supplies a set of questions in the form of an array bound to &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; questions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6540520a1fd78e2872491d6880e2502e681435c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt; in this sample code replaces the real directive with an alternative version designed to validate the kind of anchor tag wiring seen in the &lt;code&gt;AppComponent&lt;/code&gt; template.</source>
          <target state="translated">&lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt; в этом примере коды заменяет реальную директиву с альтернативной версией , предназначенной для проверки вида анкера тега проводки видела в &lt;code&gt;AppComponent&lt;/code&gt; шаблоне.</target>
        </trans-unit>
        <trans-unit id="ba756c486910ec5d2d7e7261f580251bb94b8e32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt;, &lt;a href=&quot;testing#routerlink&quot;&gt;described later&lt;/a&gt;, is a test version of the real &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; that helps with the link tests.</source>
          <target state="translated">&lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt; , &lt;a href=&quot;testing#routerlink&quot;&gt;описанный позже&lt;/a&gt; , тестовая версия реального &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; , что помогает при испытаниях ссылок.</target>
        </trans-unit>
        <trans-unit id="6f06ee5b163c259f89117109a9ed743e3d1ffd45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt;, &lt;a href=&quot;testing-components-scenarios#routerlink&quot;&gt;described later&lt;/a&gt;, is a test version of the real &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; that helps with the link tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26716cb97684bb141b5619183b6519bb6184e269" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SharedModule&lt;/code&gt; may re-export other widget modules, such as &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, and NgModules with the UI controls that you use most widely.</source>
          <target state="translated">&lt;code&gt;SharedModule&lt;/code&gt; может реэкспорт другие модули виджетов, таких как &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; и NgModules с элементами управления пользовательского интерфейса , которые вы используете наиболее часто.</target>
        </trans-unit>
        <trans-unit id="55533efb3a6976f9d9d3cbbd75ced14adcd9d6d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;SharedModule&lt;/code&gt; should not have &lt;code&gt;providers&lt;/code&gt; for reasons &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;explained previously&lt;/a&gt;. Nor should any of its imported or re-exported modules have &lt;code&gt;providers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SharedModule&lt;/code&gt; не должен иметь &lt;code&gt;providers&lt;/code&gt; по причинам были &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;объяснены ранее&lt;/a&gt; . Ни один из его импортированных или реэкспортированных модулей не должен иметь &lt;code&gt;providers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25994f9fb968fbd439618640587c014c0ec4c6ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Spy&lt;/code&gt; example demonstrates how you can use hook method for directives as well as components. The &lt;code&gt;SpyDirective&lt;/code&gt; implements two hooks, &lt;code&gt;ngOnInit()&lt;/code&gt; and &lt;code&gt;ngOnDestroy()&lt;/code&gt;, in order to discover when a watched element is in the current view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b86234056b9e48f146fbce2ebe34ac5ce0382c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.compileComponents()&lt;/code&gt; method (see &lt;a href=&quot;testing#compile-components&quot;&gt;below&lt;/a&gt;) calls &lt;code&gt;XHR&lt;/code&gt; to read external template and css files during &quot;just-in-time&quot; compilation. Write tests that call &lt;code&gt;compileComponents()&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; utility.</source>
          <target state="translated">Метод &lt;code&gt;TestBed.compileComponents()&lt;/code&gt; (см. &lt;a href=&quot;testing#compile-components&quot;&gt;Ниже&lt;/a&gt; ) вызывает &lt;code&gt;XHR&lt;/code&gt; для чтения внешних шаблонов и файлов CSS во время компиляции &amp;laquo;точно в срок&amp;raquo;. Напишите тесты, которые вызывают &lt;code&gt;compileComponents()&lt;/code&gt; с помощью утилиты &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9910ccd683edbd9f115a360ad82e87ec6d2468f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.compileComponents()&lt;/code&gt; method (see &lt;a href=&quot;testing-components-scenarios#compile-components&quot;&gt;below&lt;/a&gt;) calls &lt;code&gt;XHR&lt;/code&gt; to read external template and css files during &quot;just-in-time&quot; compilation. Write tests that call &lt;code&gt;compileComponents()&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33323f7f2025b1e15245658463ddcefc0878b34b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.compileComponents&lt;/code&gt; method asynchronously compiles all components configured in the testing module.</source>
          <target state="translated">Метод &lt;code&gt;TestBed.compileComponents&lt;/code&gt; асинхронно компилирует все компоненты, настроенные в модуле тестирования.</target>
        </trans-unit>
        <trans-unit id="dc382eb6fdb0a7a5f439e9ebf5d691c12993bb69" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.configureTestingModule()&lt;/code&gt; method returns the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; class so you can chain calls to other &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; static methods such as &lt;code&gt;compileComponents()&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;TestBed.configureTestingModule()&lt;/code&gt; возвращает класс &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; , поэтому вы можете &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; вызовы с другими статическими методами &lt;code&gt;compileComponents()&lt;/code&gt; такими как compileComponents () .</target>
        </trans-unit>
        <trans-unit id="ba53a6120fc4098df89122ed6ff40200aa9c5c6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.configureTestingModule()&lt;/code&gt; method takes a metadata object that can have most of the properties of an &lt;a href=&quot;ngmodules&quot;&gt;@NgModule&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;TestBed.configureTestingModule()&lt;/code&gt; принимает объект метаданных, который может иметь большинство свойств &lt;a href=&quot;ngmodules&quot;&gt;@NgModule&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="016bcc76476eece7235a3f36df1257e16e5e635d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.createComponent&amp;lt;T&amp;gt;&lt;/code&gt; creates an instance of the component &lt;code&gt;T&lt;/code&gt; and returns a strongly typed &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt;&lt;/code&gt; for that component.</source>
          <target state="translated">&lt;code&gt;TestBed.createComponent&amp;lt;T&amp;gt;&lt;/code&gt; создает экземпляр компонента &lt;code&gt;T&lt;/code&gt; и возвращает строго типизированный &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt;&lt;/code&gt; для этого компонента.</target>
        </trans-unit>
        <trans-unit id="39697ed57f6a6795137f32bcbb84fa33f263ac6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.createComponent&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; trigger change detection. a fact confirmed in the revised test:</source>
          <target state="translated">&lt;code&gt;TestBed.createComponent&lt;/code&gt; это &lt;em&gt;не&lt;/em&gt; вызовет обнаружение изменений. Факт, подтвержденный в пересмотренном тесте:</target>
        </trans-unit>
        <trans-unit id="19daae3ee6e90a66335d9a5a4c19a7080dd7e091" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.createComponent&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; trigger change detection; a fact confirmed in the revised test:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747bc50d9017c77e8ccf238eb14cc20db22a14c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.get()&lt;/code&gt; method takes an optional second parameter, the object to return if Angular can't find the provider (&lt;code&gt;null&lt;/code&gt; in this example):</source>
          <target state="translated">Метод &lt;code&gt;TestBed.get()&lt;/code&gt; принимает необязательный второй параметр - объект, который нужно вернуть, если Angular не может найти провайдера ( в этом примере - &lt;code&gt;null&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="0e3341b8b5908a01875d74562b48cb3a5bda651e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.inject()&lt;/code&gt; method takes an optional second parameter, the object to return if Angular can't find the provider (&lt;code&gt;null&lt;/code&gt; in this example):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faed205a7a9fb8e6c0df635c83fe3ff08df829ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.overrideComponent&lt;/code&gt; method can be called multiple times for the same or different components. The &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; offers similar &lt;code&gt;overrideDirective&lt;/code&gt;, &lt;code&gt;overrideModule&lt;/code&gt;, and &lt;code&gt;overridePipe&lt;/code&gt; methods for digging into and replacing parts of these other classes.</source>
          <target state="translated">Метод &lt;code&gt;TestBed.overrideComponent&lt;/code&gt; может вызываться несколько раз для одного и того же или разных компонентов. В &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; предлагает аналогичные &lt;code&gt;overrideDirective&lt;/code&gt; , &lt;code&gt;overrideModule&lt;/code&gt; и &lt;code&gt;overridePipe&lt;/code&gt; методы для копаться в и замене деталей этих других классов.</target>
        </trans-unit>
        <trans-unit id="7463496f97fa152d094722c35a830eebca91517a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestBed.overrideComponent&lt;/code&gt; method can replace the component's &lt;code&gt;providers&lt;/code&gt; with easy-to-manage &lt;em&gt;test doubles&lt;/em&gt; as seen in the following setup variation:</source>
          <target state="translated">Метод &lt;code&gt;TestBed.overrideComponent&lt;/code&gt; может заменить &lt;code&gt;providers&lt;/code&gt; компонента простыми в управлении &lt;em&gt;тестовыми значениями,&lt;/em&gt; как показано в следующем варианте настройки:</target>
        </trans-unit>
        <trans-unit id="e1a8e4bd9b894d5166dfe72509e7421ddbddc823" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TestHostComponent&lt;/code&gt; sets the &lt;code&gt;DashboardHeroComponent.hero&lt;/code&gt; with a binding.</source>
          <target state="translated">&lt;code&gt;TestHostComponent&lt;/code&gt; устанавливает &lt;code&gt;DashboardHeroComponent.hero&lt;/code&gt; с привязкой.</target>
        </trans-unit>
        <trans-unit id="f40e512ef842477fe7eaaeb1efa374f520e66b76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextboxQuestion&lt;/code&gt; control type presents a question and allows users to enter input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0d0030229ddea99fe6351ea7b40ab013e1ad969" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TextboxQuestion&lt;/code&gt; control type will be represented in a form template using an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element. The &lt;code&gt;type&lt;/code&gt; attribute of the element will be defined based on the &lt;code&gt;type&lt;/code&gt; field specified in the &lt;code&gt;options&lt;/code&gt; argument (for example &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/emailvalidator&quot;&gt;email&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83cfbebbe6b24bf42931e645bfc64c8eed2532b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;TwainComponent&lt;/code&gt; gets quotes from an injected &lt;code&gt;TwainService&lt;/code&gt;. The component starts the returned &lt;code&gt;Observable&lt;/code&gt; with a placeholder value (&lt;code&gt;'...'&lt;/code&gt;), before the service can return its first quote.</source>
          <target state="translated">&lt;code&gt;TwainComponent&lt;/code&gt; получает цитату из введенного &lt;code&gt;TwainService&lt;/code&gt; . Компонент начинает возвращаемое значение &lt;code&gt;Observable&lt;/code&gt; со значения заполнителя ( &lt;code&gt;'...'&lt;/code&gt; ), прежде чем служба сможет вернуть свою первую цитату.</target>
        </trans-unit>
        <trans-unit id="ef542876d29e71de2c86774edf71e50874e185fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VersionParentComponent&lt;/code&gt; supplies the &lt;code&gt;&lt;a href=&quot;../api/core/version#minor&quot;&gt;minor&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/version#major&quot;&gt;major&lt;/a&gt;&lt;/code&gt; values and binds buttons to methods that change them.</source>
          <target state="translated">&lt;code&gt;VersionParentComponent&lt;/code&gt; поставляет &lt;code&gt;&lt;a href=&quot;../api/core/version#minor&quot;&gt;minor&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/version#major&quot;&gt;major&lt;/a&gt;&lt;/code&gt; ценности и привязывают кнопки для методов , которые изменяют их.</target>
        </trans-unit>
        <trans-unit id="28f65948c3d9669e6c59075a0f72a022e2729c17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VersionParentComponent&lt;/code&gt; supplies the &lt;code&gt;minor&lt;/code&gt; and &lt;code&gt;major&lt;/code&gt; values and binds buttons to methods that change them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f9fc5b821c647ba140efb0b8202fe7c572e256" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WelcomeComponent&lt;/code&gt; displays a welcome message to the logged in user. It knows who the user is based on a property of the injected &lt;code&gt;UserService&lt;/code&gt;:</source>
          <target state="translated">В &lt;code&gt;WelcomeComponent&lt;/code&gt; отображается приветственное сообщение для зарегистрированного пользователя. Он знает, кто является пользователем на основе свойства &lt;code&gt;UserService&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="26b0cc11145bd2699a1a4df30ac1d79582b55235" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WelcomeComponent&lt;/code&gt; has decision logic that interacts with the service, logic that makes this component worth testing. Here's the testing module configuration for the spec file, &lt;code&gt;app/welcome/welcome.component.spec.ts&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;WelcomeComponent&lt;/code&gt; имеет логику решения , которая взаимодействует со службой, логикой , что делает этот компонент тестирования стоимости. Вот конфигурация модуля тестирования для файла спецификации, &lt;code&gt;app/welcome/welcome.component.spec.ts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="18601d150c90f6f2cecee4815c9d4c8e2bd94bb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WelcomeComponent&lt;/code&gt; has decision logic that interacts with the service, logic that makes this component worth testing. Here's the testing module configuration for the spec file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73082262f53d6cf72b310b41eb13db9584d32cbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Window&lt;/code&gt; type in the constructor is no longer a problem for the compiler because it uses the &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;(WINDOW)&lt;/code&gt; to generate the injection code.</source>
          <target state="translated">Тип &lt;code&gt;Window&lt;/code&gt; в конструкторе больше не является проблемой для компилятора, поскольку он использует &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;(WINDOW)&lt;/code&gt; для генерации кода внедрения.</target>
        </trans-unit>
        <trans-unit id="870c23b3763b42b506c664c4507ca8235191c54c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;WorkspaceSchema&lt;/code&gt; contains all the properties of the workspace configuration, including a &lt;code&gt;defaultProject&lt;/code&gt; value for determining which project to use if not provided. We will use that value as a fallback, if no project is explicitly specified in the &lt;code&gt;ng generate&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;WorkspaceSchema&lt;/code&gt; содержит все свойства конфигурации рабочей области, в том числе &lt;code&gt;defaultProject&lt;/code&gt; значения для определения , какой проект для использования , если не предусмотрено. Мы будем использовать это значение как запасной вариант, если в команде &lt;code&gt;ng generate&lt;/code&gt; явно не указан проект .</target>
        </trans-unit>
        <trans-unit id="2c6443345432b5ece951d71a755a1b8ad77b8ca8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[()]&lt;/code&gt; syntax is easy to demonstrate when the element has a settable property called &lt;code&gt;x&lt;/code&gt; and a corresponding event named &lt;code&gt;xChange&lt;/code&gt;. Here's a &lt;code&gt;SizerComponent&lt;/code&gt; that fits this pattern. It has a &lt;code&gt;size&lt;/code&gt; value property and a companion &lt;code&gt;sizeChange&lt;/code&gt; event:</source>
          <target state="translated">&lt;code&gt;[()]&lt;/code&gt; Синтаксис легко продемонстрировать , когда элемент имеет свойство , называемое отверждаемое &lt;code&gt;x&lt;/code&gt; и соответствующее событие с именем &lt;code&gt;xChange&lt;/code&gt; . Вот &lt;code&gt;SizerComponent&lt;/code&gt; , который соответствует этому шаблону. У него есть свойство значения &lt;code&gt;size&lt;/code&gt; и сопутствующее событие &lt;code&gt;sizeChange&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b8736c02efb6ba5a8ec75a4c108f9fd9c7c0f759" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;]&lt;/code&gt; binding, on the other hand, remains a live binding to the component's &lt;code&gt;currentItem&lt;/code&gt; property.</source>
          <target state="translated">&lt;code&gt;[&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;]&lt;/code&gt; связывание, с другой стороны, остается живой обязательным для компонента &lt;code&gt;currentItem&lt;/code&gt; собственности.</target>
        </trans-unit>
        <trans-unit id="8b9f270653cfadb8d1a228d14d38db979b5247f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[&lt;a href=&quot;common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;]&lt;/code&gt; directive on a container specifies an expression to match against. The expressions to match are provided by &lt;code&gt;&lt;a href=&quot;common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; directives on views within the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd45ebca5ced56ceb4c4439db03ef7ceb8af9786" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[&lt;a href=&quot;ngswitch&quot;&gt;ngSwitch&lt;/a&gt;]&lt;/code&gt; directive on a container specifies an expression to match against. The expressions to match are provided by &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; directives on views within the container.</source>
          <target state="translated">&lt;code&gt;[&lt;a href=&quot;ngswitch&quot;&gt;ngSwitch&lt;/a&gt;]&lt;/code&gt; директива на контейнере указывает выражение для сравнения. Соответствующие выражения предоставляются директивами &lt;code&gt;&lt;a href=&quot;ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; для представлений в контейнере.</target>
        </trans-unit>
        <trans-unit id="36ceaf19970bb19c49c83bfbd2a87d52a2959a37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[appHighlight]&lt;/code&gt; attribute binding both applies the highlighting directive to the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element and sets the directive's highlight color with a property binding. You're re-using the directive's attribute selector (&lt;code&gt;[appHighlight]&lt;/code&gt;) to do both jobs. That's a crisp, compact syntax.</source>
          <target state="translated">&lt;code&gt;[appHighlight]&lt;/code&gt; атрибут привязки и применяет подсветку директивы &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; элемента и задает цвет подсветки дИРЕКТИВЫ с обязательным свойством. Вы повторно используете селектор атрибута директивы ( &lt;code&gt;[appHighlight]&lt;/code&gt; ) для выполнения обеих работ. Это четкий, компактный синтаксис.</target>
        </trans-unit>
        <trans-unit id="7f1b605476e77a7d2ccd2803d39ed5e6241f3e16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[hero]&lt;/code&gt;&lt;a href=&quot;property-binding&quot;&gt;&lt;em&gt;property binding&lt;/em&gt;&lt;/a&gt; passes the value of &lt;code&gt;selectedHero&lt;/code&gt; from the parent &lt;code&gt;HeroListComponent&lt;/code&gt; to the &lt;code&gt;hero&lt;/code&gt; property of the child &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30bd2ff25d1fd8b1f0557d18717e6ad1918454c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;[hero]&lt;/code&gt;&lt;a href=&quot;template-syntax#property-binding&quot;&gt;&lt;em&gt;property binding&lt;/em&gt;&lt;/a&gt; passes the value of &lt;code&gt;selectedHero&lt;/code&gt; from the parent &lt;code&gt;HeroListComponent&lt;/code&gt; to the &lt;code&gt;hero&lt;/code&gt; property of the child &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[hero]&lt;/code&gt; &lt;a href=&quot;template-syntax#property-binding&quot;&gt;&lt;em&gt;свойство связывания&lt;/em&gt;&lt;/a&gt; передает значение &lt;code&gt;selectedHero&lt;/code&gt; из родительского &lt;code&gt;HeroListComponent&lt;/code&gt; к &lt;code&gt;hero&lt;/code&gt; имуществу ребенка &lt;code&gt;HeroDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9cb10f26693dde1c278ddfda0bfd2cc8820290a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addItem()&lt;/code&gt; method takes an argument in the form of a string and then adds that string to the &lt;code&gt;items&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856ed6d1ce37be4c197dced40c87596609a6cec8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addItem()&lt;/code&gt; method takes an argument in the form of a string and then pushes, or adds, that string to the &lt;code&gt;items&lt;/code&gt; array.</source>
          <target state="translated">Метод &lt;code&gt;addItem()&lt;/code&gt; принимает аргумент в форме строки, а затем помещает или добавляет эту строку в массив &lt;code&gt;items&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ca497ad92082c6d7c8b17c8f25e1442e24acf60" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addNewItem()&lt;/code&gt; function uses the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;, &lt;code&gt;newItemEvent&lt;/code&gt;, to raise an event in which it emits the value the user types into the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. In other words, when the user clicks the add button in the UI, the child lets the parent know about the event and gives that data to the parent.</source>
          <target state="translated">Функция &lt;code&gt;addNewItem()&lt;/code&gt; использует &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; , &lt;code&gt;newItemEvent&lt;/code&gt; , чтобы вызвать событие, в котором она выдает значение, которое пользователь вводит в &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; . Другими словами, когда пользователь нажимает кнопку добавления в пользовательском интерфейсе, дочерний элемент сообщает родителю о событии и передает эти данные родителю.</target>
        </trans-unit>
        <trans-unit id="e87a57d434a21574c4d93084ce14a346db7dba09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addNewItem()&lt;/code&gt; function uses the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;, &lt;code&gt;newItemEvent&lt;/code&gt;, to raise an event with the value the user types into the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad5dfeb063fa603e31abaf09875d9eb0700c8d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addToCart()&lt;/code&gt; method appends a product to an array of &lt;code&gt;items&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a493d960a2175f2a37db6c4da43ea748ceff14a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addToCart()&lt;/code&gt; method does the following three things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c54850634bbde4cc7b568e8036ad928a2270771" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addToCart()&lt;/code&gt; method:</source>
          <target state="translated">Метод &lt;code&gt;addToCart()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a5722203907629d1d56d27383962d6e5ef087e7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alterEgo&lt;/code&gt; is optional, so the constructor lets you omit it; note the question mark (?) in &lt;code&gt;alterEgo?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;alterEgo&lt;/code&gt; не является обязательной, поэтому конструктор позволяет его опустить; обратите внимание на вопросительный знак (?) в &lt;code&gt;alterEgo?&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="f30124ac6fc884af1ef5d112a1d4e21bf844c8a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;angular.json&lt;/code&gt; file has a section for each project, and the &quot;architect&quot; section of each project configures targets for builders used by CLI commands such as 'build', 'test', and 'lint'. By default, for example, the &lt;code&gt;build&lt;/code&gt; command runs the builder &lt;code&gt;@angular-devkit/build-angular:&lt;a href=&quot;../api/animations/browser&quot;&gt;browser&lt;/a&gt;&lt;/code&gt; to perform the build task, and passes in default option values as specified for the &lt;code&gt;build&lt;/code&gt; target in &lt;code&gt;angular.json&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;angular.json&lt;/code&gt; файл имеет раздел для каждого проекта, а также раздел &amp;laquo;архитектор&amp;raquo; каждого проекта конфигурирует мишеней для строителей , используемых CLI команды , такие как &amp;laquo;строить&amp;raquo;, &amp;laquo;тест&amp;raquo;, и &amp;laquo;пуха&amp;raquo;. Например, по умолчанию команда &lt;code&gt;build&lt;/code&gt; запускает builder &lt;code&gt;@angular-devkit/build-angular:&lt;a href=&quot;../api/animations/browser&quot;&gt;browser&lt;/a&gt;&lt;/code&gt; для выполнения задачи сборки и передает значения параметров по умолчанию, указанные для цели &lt;code&gt;build&lt;/code&gt; в &lt;code&gt;angular.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f07f7aa9c500e883ba9d5379a2ebebdfb2d38f38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app-routing.module.ts&lt;/code&gt; file retains the top-level application routes such as the default and wildcard routes.</source>
          <target state="translated">В файле &lt;code&gt;app-routing.module.ts&lt;/code&gt; хранятся маршруты приложений верхнего уровня, такие как маршруты по умолчанию и групповые маршруты.</target>
        </trans-unit>
        <trans-unit id="c324253579d11610a53c523554714bdd73f83908" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app-routing.module.ts&lt;/code&gt; then imports the feature module, &lt;code&gt;customers.module.ts&lt;/code&gt; using JavaScript's dynamic import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f289690c281152fb32585adec1b7e7302be2fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app.component.html&lt;/code&gt; template uses a format parameter for the &lt;a href=&quot;../api/common/datepipe&quot;&gt;&lt;code&gt;DatePipe&lt;/code&gt;&lt;/a&gt; (named &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt;) to show the date as &lt;strong&gt;04/15/88&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ee75878ead085bde2df26d170fe8825ce8044ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app.component.ts&lt;/code&gt; and &lt;code&gt;app.component.spec.ts&lt;/code&gt; files are siblings in the same folder. The root file names (&lt;code&gt;app.component&lt;/code&gt;) are the same for both files.</source>
          <target state="translated">В &lt;code&gt;app.component.ts&lt;/code&gt; и &lt;code&gt;app.component.spec.ts&lt;/code&gt; файлы являются братьями и сестрами в одной и той же папке. Имена корневых файлов ( &lt;code&gt;app.component&lt;/code&gt; ) одинаковы для обоих файлов.</target>
        </trans-unit>
        <trans-unit id="40a9f746b2624d49708038138878c9e54596820c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;appHighlight&lt;/code&gt; property on the left refers to an &lt;em&gt;aliased&lt;/em&gt; property of the &lt;code&gt;HighlightDirective&lt;/code&gt;, not a property of the template's component. There are trust issues. Therefore, the directive property must carry the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">&lt;code&gt;appHighlight&lt;/code&gt; свойство слева относится к &lt;em&gt;совмещенному&lt;/em&gt; свойству &lt;code&gt;HighlightDirective&lt;/code&gt; , а не свойство компонента шаблона. Есть проблемы с доверием. Следовательно, свойство директивы должно содержать декоратор &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="290ffc2086bb38d75b6288278b7f208305ff1a09" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;appRoutes&lt;/code&gt; array of &lt;em&gt;routes&lt;/em&gt; describes how to navigate. Pass it to the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method in the module &lt;code&gt;imports&lt;/code&gt; to configure the router.</source>
          <target state="translated">&lt;code&gt;appRoutes&lt;/code&gt; массив &lt;em&gt;маршрутов&lt;/em&gt; описывает , как перемещаться. Передайте его &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;imports&lt;/code&gt; модуля для настройки маршрутизатора.</target>
        </trans-unit>
        <trans-unit id="dda4c3d5923e028505e8cfe658d157468c7fa7c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;appRoutes&lt;/code&gt; array of routes describes how to navigate. Pass it to the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method in the module &lt;code&gt;imports&lt;/code&gt; to configure the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bcaa9ed5f73425ed9d275f4d1da0e3c5ab59c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;appUnless&lt;/code&gt; property</source>
          <target state="translated">&lt;code&gt;appUnless&lt;/code&gt; недвижимость</target>
        </trans-unit>
        <trans-unit id="ccd175402127146536f0a6057571135e51400a85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply()&lt;/code&gt; method applies multiple rules to a source and returns the transformed source. It takes 2 arguments, a source and an array of rules.</source>
          <target state="translated">Метод &lt;code&gt;apply()&lt;/code&gt; применяет несколько правил к источнику и возвращает преобразованный источник. Требуется 2 аргумента, источник и массив правил.</target>
        </trans-unit>
        <trans-unit id="fce7410dda2af4b9b8c3501f512a37d7f4aaff30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;applyTemplates()&lt;/code&gt; method receives an argument of methods and properties you want make available to the schematic template and the schematic filenames. It returns a &lt;code&gt;Rule&lt;/code&gt;. This is where you define the &lt;code&gt;classify()&lt;/code&gt; and &lt;code&gt;dasherize()&lt;/code&gt; methods, and the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">Метод &lt;code&gt;applyTemplates()&lt;/code&gt; получает аргумент методов и свойств, которые вы хотите сделать доступными для шаблона схемы и имен файлов схемы. Возвращает &lt;code&gt;Rule&lt;/code&gt; . Здесь вы определяете методы &lt;code&gt;classify()&lt;/code&gt; и &lt;code&gt;dasherize()&lt;/code&gt; и свойство &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d3359e4c0eaf8ffb1467df0e8ae599f521f5db8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/app-shell&lt;/code&gt; section configures defaults for creating an app shell for a progressive web app (PWA), using the &lt;code&gt;ng run &amp;lt;project&amp;gt;:app-shell&lt;/code&gt; command.</source>
          <target state="translated">В разделе &lt;code&gt;architect/app-shell&lt;/code&gt; настраиваются параметры по умолчанию для создания оболочки приложения для прогрессивного веб-приложения (PWA) с помощью команды &lt;code&gt;ng run &amp;lt;project&amp;gt;:app-shell&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a52f458cd31bb8d388aacce0223f2376613e4fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/build&lt;/code&gt; section configures defaults for options of the &lt;code&gt;ng build&lt;/code&gt; command. It has the following top-level properties.</source>
          <target state="translated">В разделе &lt;code&gt;architect/build&lt;/code&gt; настраиваются параметры по умолчанию для команды &lt;code&gt;ng build&lt;/code&gt; . Он имеет следующие свойства верхнего уровня.</target>
        </trans-unit>
        <trans-unit id="6369019d693afe055f767ec303f5491051532798" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/build&lt;/code&gt; section configures defaults for options of the &lt;code&gt;ng build&lt;/code&gt; command. See &lt;a href=&quot;workspace-config#build-target&quot;&gt;Build target&lt;/a&gt; below for more information.</source>
          <target state="translated">В разделе &lt;code&gt;architect/build&lt;/code&gt; настраиваются параметры по умолчанию для команды &lt;code&gt;ng build&lt;/code&gt; . См. &lt;a href=&quot;workspace-config#build-target&quot;&gt;Build target&lt;/a&gt; ниже для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="f1ca81d47172c4dec0a072d2b655a66cc4ac8fc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/e2e&lt;/code&gt; section overrides build-option defaults for building end-to-end testing apps using the &lt;code&gt;ng e2e&lt;/code&gt; command.</source>
          <target state="translated">Раздел &lt;code&gt;architect/e2e&lt;/code&gt; переопределяет значения по умолчанию для параметров сборки для создания приложений сквозного тестирования с помощью команды &lt;code&gt;ng e2e&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da431250223e934254e2e94578e1d901c88945ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/extract-i18n&lt;/code&gt; section configures defaults for options of the &lt;code&gt;ng extract-i18n&lt;/code&gt; command, which extracts marked message strings from source code and outputs translation files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e734451b171ce840aa23f1a5ea6f29d8e7e416c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/extract-i18n&lt;/code&gt; section configures defaults for options of the &lt;code&gt;ng-xi18n&lt;/code&gt; tool used by the &lt;code&gt;ng xi18n&lt;/code&gt; command, which extracts marked message strings from source code and outputs translation files.</source>
          <target state="translated">В разделе &lt;code&gt;architect/extract-i18n&lt;/code&gt; настраиваются значения по умолчанию для параметров инструмента &lt;code&gt;ng-xi18n&lt;/code&gt; , используемого командой &lt;code&gt;ng xi18n&lt;/code&gt; , которая извлекает отмеченные строки сообщений из исходного кода и выводит файлы перевода.</target>
        </trans-unit>
        <trans-unit id="767fc9d81a793124c7e6cffbbb813f17df2c7fbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/lint&lt;/code&gt; section configures defaults for options of the &lt;code&gt;ng lint&lt;/code&gt; command, which performs code analysis on project source files. The default linting tool for Angular is &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;.</source>
          <target state="translated">В разделе &lt;code&gt;architect/lint&lt;/code&gt; настраиваются параметры по умолчанию для команды &lt;code&gt;ng lint&lt;/code&gt; , которая выполняет анализ кода исходных файлов проекта. Инструментом для &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;подкладки&lt;/a&gt; Angular по умолчанию является TSLint .</target>
        </trans-unit>
        <trans-unit id="9b1089acf6819113dbb7363669e04dc0c01346f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/serve&lt;/code&gt; section overrides build defaults and supplies additional serve defaults for the &lt;code&gt;ng serve&lt;/code&gt; command. In addition to the options available for the &lt;code&gt;ng build&lt;/code&gt; command, it adds options related to serving the app.</source>
          <target state="translated">&lt;code&gt;architect/serve&lt;/code&gt; перезапись секции сборки по умолчанию и дополнительные принадлежности служат по умолчанию для &lt;code&gt;ng serve&lt;/code&gt; команды. В дополнение к параметрам, доступным для команды &lt;code&gt;ng build&lt;/code&gt; , он добавляет параметры, относящиеся к обслуживанию приложения.</target>
        </trans-unit>
        <trans-unit id="7275e6acc60d1c09dc90fc0da2e3d713ae73da4a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/server&lt;/code&gt; section configures defaults for creating a Universal app with server-side rendering, using the &lt;code&gt;ng run &amp;lt;project&amp;gt;:server&lt;/code&gt; command.</source>
          <target state="translated">В разделе &amp;laquo; &lt;code&gt;architect/server&lt;/code&gt; &amp;raquo; настраиваются параметры по умолчанию для создания универсального приложения с рендерингом на стороне сервера с помощью команды &lt;code&gt;ng run &amp;lt;project&amp;gt;:server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9ef96acb7b485618977d3e1442a09850b7fc3e81" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect/test&lt;/code&gt; section overrides build-option defaults for test builds and supplies additional test-running defaults for the &lt;code&gt;ng test&lt;/code&gt; command.</source>
          <target state="translated">Раздел &lt;code&gt;architect/test&lt;/code&gt; переопределяет значения по умолчанию для параметров сборки для тестовых сборок и предоставляет дополнительные значения по умолчанию для запуска теста для команды &lt;code&gt;ng test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ed4c7af7cd326385045a44114d38390cabe0e1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;architect&lt;/code&gt; section of &lt;code&gt;angular.json&lt;/code&gt; contains a set of Architect targets. Many of the targets correspond to the CLI commands that run them. Some additional predefined targets can be run using the &lt;code&gt;ng run&lt;/code&gt; command, and you can define your own targets.</source>
          <target state="translated">Раздел &lt;code&gt;architect&lt;/code&gt; в &lt;code&gt;angular.json&lt;/code&gt; содержит набор целей Architect. Многие из целей соответствуют командам CLI, которые запускают их. Некоторые дополнительные предопределенные цели можно запустить с помощью команды &lt;code&gt;ng run&lt;/code&gt; , и вы можете определить свои собственные цели.</target>
        </trans-unit>
        <trans-unit id="837e1c5860f8946382489134127d08dd900fd467" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;as angular.IDirectiveFactory&lt;/code&gt; cast tells the TypeScript compiler that the return value of the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;&lt;/code&gt; method is a directive factory.</source>
          <target state="translated">Приведение &lt;code&gt;as angular.IDirectiveFactory&lt;/code&gt; сообщает компилятору TypeScript, что возвращаемое значение метода &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;&lt;/code&gt; является фабрикой директив.</target>
        </trans-unit>
        <trans-unit id="de5acc0948802882fdbf516e8ca2423cb821743b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;base&lt;/code&gt; tag</source>
          <target state="translated">&lt;code&gt;base&lt;/code&gt; тег</target>
        </trans-unit>
        <trans-unit id="0c7767d244bd1e5fa1024e13e6d35aca3cfd7f8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blank&lt;/code&gt; schematic is provided by the Schematics CLI. The command creates a new project folder (the root folder for the collection) and an initial named schematic in the collection.</source>
          <target state="translated">&lt;code&gt;blank&lt;/code&gt; схематичный обеспечиваются схемными CLI. Команда создает новую папку проекта (корневую папку для коллекции) и исходное имя схемы в коллекции.</target>
        </trans-unit>
        <trans-unit id="774efd9da030375e817972175072a85668a5b3b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bootstrap&lt;/code&gt; array</source>
          <target state="translated">&lt;code&gt;bootstrap&lt;/code&gt; массив</target>
        </trans-unit>
        <trans-unit id="21e30d3cb47ab8fba3795f2cf9031306e18cf3e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bootstrapModule()&lt;/code&gt; method creates a child injector of the platform injector which is configured by the &lt;code&gt;AppModule&lt;/code&gt;. This is the &lt;code&gt;root&lt;/code&gt;&lt;code&gt;ModuleInjector&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ccdc316423b8cac35af87b048685e91deb523ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build&lt;/code&gt; command uses this as the build target when no environment is specified. You can add further variables, either as additional properties on the environment object, or as separate objects. For example, the following adds a default for a variable to the default environment:</source>
          <target state="translated">Команда &lt;code&gt;build&lt;/code&gt; использует это как цель сборки, когда среда не указана. Вы можете добавить дополнительные переменные, либо как дополнительные свойства объекта среды, либо как отдельные объекты. Например, следующее добавляет значение по умолчанию для переменной в среду по умолчанию:</target>
        </trans-unit>
        <trans-unit id="a7e74b769afce7863d087a2995f0e269ec1061cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build&lt;/code&gt; script compiles your schematic using the custom &lt;code&gt;tsconfig.schematics.json&lt;/code&gt; file.</source>
          <target state="translated">Сценарий &lt;code&gt;build&lt;/code&gt; компилирует вашу схему, используя пользовательский файл &lt;code&gt;tsconfig.schematics.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="16ff1c9552e6bcdf37fd0cb12b664e0d9547de55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;catchError()&lt;/code&gt; operator intercepts an &lt;strong&gt;&lt;code&gt;Observable&lt;/code&gt; that failed&lt;/strong&gt;. It passes the error an error handler that can do what it wants with the error.</source>
          <target state="translated">Оператор &lt;code&gt;catchError()&lt;/code&gt; перехватывает &lt;strong&gt;сбой &lt;/strong&gt;&lt;strong&gt; &lt;code&gt;Observable&lt;/code&gt; &lt;/strong&gt; . Он передает ошибку обработчику ошибок, который может делать то, что он хочет с ошибкой.</target>
        </trans-unit>
        <trans-unit id="5b4ccbda901c1b80a2c60da9cc10ca3fb10da44f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;catchError()&lt;/code&gt; operator intercepts an &lt;strong&gt;&lt;code&gt;Observable&lt;/code&gt; that failed&lt;/strong&gt;. The operator then passes the error to the error handling function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb83c1c9edfd98646b27bf239fc83ddde135aea6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;catchError&lt;/code&gt; intercepts service errors, prepares an error message, and returns the placeholder value on the success channel. It must wait a tick to set the &lt;code&gt;errorMessage&lt;/code&gt; in order to avoid updating that message twice in the same change detection cycle.</source>
          <target state="translated">В &lt;code&gt;catchError&lt;/code&gt; перехватывает ошибка службы, готовит сообщение об ошибке и возвращает значение замещающего на канале успеха. Необходимо дождаться &lt;code&gt;errorMessage&lt;/code&gt; чтобы установить errorMessage , чтобы избежать обновления этого сообщения дважды в одном и том же цикле обнаружения изменений.</target>
        </trans-unit>
        <trans-unit id="5b0aedba50f90d47be2a1d94e432c17fdc3cf9e4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cdkTrapFocus&lt;/code&gt; directive traps Tab-key focus within an element. Use it to create accessible experience for components like modal dialogs, where focus must be constrained.</source>
          <target state="translated">&lt;code&gt;cdkTrapFocus&lt;/code&gt; директива перехватывает Tab-клавишный фокус внутри элемента. Используйте его для создания доступного опыта для таких компонентов, как модальные диалоговые окна, где необходимо ограничить фокус.</target>
        </trans-unit>
        <trans-unit id="9ba4ce88e64a0c267da41c0360c30cfbfbcd5b4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chain()&lt;/code&gt; method allows you to combine multiple rules into a single rule, so that you can perform multiple operations in a single schematic. Here you are only merging the template rules with any code executed by the schematic.</source>
          <target state="translated">Метод &lt;code&gt;chain()&lt;/code&gt; позволяет объединять несколько правил в одно правило, что позволяет выполнять несколько операций в одной схеме. Здесь вы только объединяете правила шаблона с любым кодом, выполняемым схемой.</target>
        </trans-unit>
        <trans-unit id="07cc438b291409375529b7d3e3b1beb8498cb9de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;classify()&lt;/code&gt; method takes a value and returns the value in title case. For example, if the provided name is &lt;code&gt;my service&lt;/code&gt;, it is returned as &lt;code&gt;MyService&lt;/code&gt;</source>
          <target state="translated">Метод &lt;code&gt;classify()&lt;/code&gt; принимает значение и возвращает значение в случае заголовка. Например, если предоставленное имя является &lt;code&gt;my service&lt;/code&gt; , оно возвращается как &lt;code&gt;MyService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1fdbcd8b429214d232c8207b7059eef99aa580c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;classify&lt;/code&gt; and &lt;code&gt;dasherize&lt;/code&gt; methods are utility functions that your schematic will use to transform your source template and filename.</source>
          <target state="translated">В &lt;code&gt;classify&lt;/code&gt; и &lt;code&gt;dasherize&lt;/code&gt; методы функция полезности , что ваш схематический будет использовать для преобразования вашего шаблона источника и имени файла.</target>
        </trans-unit>
        <trans-unit id="bc0901031ec27305365d566f09127536d421f0da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clearCart()&lt;/code&gt; method returns an empty array of items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bb58946cacb088117e3c944df74cba20283b14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;click()&lt;/code&gt; helper function is &lt;strong&gt;not&lt;/strong&gt; one of the Angular testing utilities. It's a function defined in &lt;em&gt;this guide's sample code&lt;/em&gt;. All of the sample tests use it. If you like it, add it to your own collection of helpers.</source>
          <target state="translated">&lt;code&gt;click()&lt;/code&gt; вспомогательная функция является &lt;strong&gt;не&lt;/strong&gt; одна из угловых тестирований утилит. Эта функция определена в &lt;em&gt;примере кода этого руководства&lt;/em&gt; . Все примеры тестов используют его. Если вам это нравится, добавьте его в свою собственную коллекцию помощников.</target>
        </trans-unit>
        <trans-unit id="b4f6858962e9d1344f743e682caa7eeeffadb383" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clone()&lt;/code&gt; method's hash argument allows you to mutate specific properties of the request while copying the others.</source>
          <target state="translated">В &lt;code&gt;clone()&lt;/code&gt; метода хеш - аргумент позволяет мутировать специфические свойства запроса при копировании других.</target>
        </trans-unit>
        <trans-unit id="907b9d6d7b3d97452aa6de0ea7faf587928cbe47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;closePopup()&lt;/code&gt; method again:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f48a3f5bd2403e8db40f37e2564cff21da056b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;closePopup()&lt;/code&gt; method closes the popup view by navigating to the popup outlet with a &lt;code&gt;null&lt;/code&gt; which the section on &lt;a href=&quot;router-tutorial-toh#clear-secondary-routes&quot;&gt;clearing secondary routes&lt;/a&gt; covers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a518321828c28848d283d37c2b4fd36a09865ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;closePopup()&lt;/code&gt; method closes the popup view by navigating to the popup outlet with a &lt;code&gt;null&lt;/code&gt;. That's a peculiarity covered &lt;a href=&quot;router#clear-secondary-routes&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;closePopup()&lt;/code&gt; закрывает всплывающее окно путем перехода к всплывающему окну с &lt;code&gt;null&lt;/code&gt; . Это особенность, описанная &lt;a href=&quot;router#clear-secondary-routes&quot;&gt;ниже&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="04c9c12ecadbed296e805449ac96daee9dcd393a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;color&lt;/code&gt; property in the expression on the right belongs to the template's component. The template and its component trust each other. The &lt;code&gt;color&lt;/code&gt; property doesn't require the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Свойство &lt;code&gt;color&lt;/code&gt; в выражении справа принадлежит компоненту шаблона. Шаблон и его компонент доверяют друг другу. Свойство &lt;code&gt;color&lt;/code&gt; не требует декоратора &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e2d0cb71d0be76be2fae5a0cff6f88e64888862" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;compileComponents()&lt;/code&gt; method returns a promise so you can perform the synchronous setup tasks &lt;em&gt;after&lt;/em&gt; compilation by moving the synchronous code into a &lt;code&gt;then(...)&lt;/code&gt; callback.</source>
          <target state="translated">Метод &lt;code&gt;compileComponents()&lt;/code&gt; возвращает обещание, чтобы вы могли выполнять задачи синхронной установки &lt;em&gt;после&lt;/em&gt; компиляции, перемещая синхронный код в обратный вызов &lt;code&gt;then(...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3037d295430c7027674e9a9776f53a0101b09a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;complete&lt;/code&gt; notification doesn't send a value, but the handler is called when the call completes. Scheduled values can continue to be returned after the call completes.</source>
          <target state="translated">&lt;code&gt;complete&lt;/code&gt; уведомление не отправляет значение, но обработчик вызывается при завершении вызова. Запланированные значения могут продолжать возвращаться после завершения вызова.</target>
        </trans-unit>
        <trans-unit id="ee476bab0c70c0fad3c3d87a3d2232d68ec9cf82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;container&lt;/code&gt;, &lt;code&gt;form-group&lt;/code&gt;, &lt;code&gt;form-control&lt;/code&gt;, and &lt;code&gt;btn&lt;/code&gt; classes come from &lt;a href=&quot;http://getbootstrap.com/css/&quot;&gt;Twitter Bootstrap&lt;/a&gt;. These classes are purely cosmetic. Bootstrap gives the form a little style.</source>
          <target state="translated">&lt;code&gt;container&lt;/code&gt; , &lt;code&gt;form-group&lt;/code&gt; , &lt;code&gt;form-control&lt;/code&gt; , и &lt;code&gt;btn&lt;/code&gt; классы приходят из &lt;a href=&quot;http://getbootstrap.com/css/&quot;&gt;Twitter Bootstrap&lt;/a&gt; . Эти занятия чисто косметические. Bootstrap придает форме немного стиля.</target>
        </trans-unit>
        <trans-unit id="345aeb6e554e8d240ec4aae56d32b5f032d522f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;copy:*&lt;/code&gt; statements copy compiled schematic files into the proper locations in the library output folder in order to preserve the file structure.</source>
          <target state="translated">Операторы &lt;code&gt;copy:*&lt;/code&gt; копируют скомпилированные файлы схемы в соответствующие места в выходной папке библиотеки, чтобы сохранить структуру файла.</target>
        </trans-unit>
        <trans-unit id="7d3b20ee2734ef0eb3ec2144563106ed344b113b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;core&lt;/code&gt;, &lt;code&gt;phone-detail&lt;/code&gt;, and &lt;code&gt;phone-list&lt;/code&gt; modules are each in their own subdirectory. Those subdirectories contain the JavaScript code as well as the HTML templates that go with each particular feature. This is in line with the &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#folders-by-feature-structure&quot;&gt;Folders-by-Feature Structure&lt;/a&gt; and &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#modularity&quot;&gt;Modularity&lt;/a&gt; rules.</source>
          <target state="translated">В &lt;code&gt;core&lt;/code&gt; , &lt;code&gt;phone-detail&lt;/code&gt; , и &lt;code&gt;phone-list&lt;/code&gt; модулей, каждый в своем собственном каталоге. Эти подкаталоги содержат код JavaScript, а также шаблоны HTML, которые идут с каждой конкретной функцией. Это соответствует правилам &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#folders-by-feature-structure&quot;&gt;структуры папок по элементам&lt;/a&gt; и &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md#modularity&quot;&gt;модульности&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4006d9f76259ae6ae1f4c464ef8b78f5b688ad0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent()&lt;/code&gt; method and &lt;code&gt;page&lt;/code&gt; object are discussed &lt;a href=&quot;testing#page-object&quot;&gt;below&lt;/a&gt;. Rely on your intuition for now.</source>
          <target state="translated">Метод &lt;code&gt;createComponent()&lt;/code&gt; и объект &lt;code&gt;page&lt;/code&gt; обсуждаются &lt;a href=&quot;testing#page-object&quot;&gt;ниже&lt;/a&gt; . Положитесь на свою интуицию сейчас.</target>
        </trans-unit>
        <trans-unit id="a9dd3f8d9f8f7a9580839b288759263cfcc01a2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent()&lt;/code&gt; method and &lt;code&gt;page&lt;/code&gt; object are discussed &lt;a href=&quot;testing-components-scenarios#page-object&quot;&gt;below&lt;/a&gt;. Rely on your intuition for now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b363def9875eaa582eef102592cc8749afc6d529" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent()&lt;/code&gt; method returns a reference to the loaded component. Use that reference to interact with the component by assigning to its properties or calling its methods.</source>
          <target state="translated">Метод &lt;code&gt;createComponent()&lt;/code&gt; возвращает ссылку на загруженный компонент. Используйте эту ссылку для взаимодействия с компонентом, присваивая его свойствам или вызывая его методы.</target>
        </trans-unit>
        <trans-unit id="0d775df738d1de015bdf917a81aa50042a361697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent&lt;/code&gt; method freezes the current &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; definition, closing it to further configuration.</source>
          <target state="translated">Метод &lt;code&gt;createComponent&lt;/code&gt; замораживает текущее определение &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; , закрывая его для дальнейшей настройки.</target>
        </trans-unit>
        <trans-unit id="5d195d38d38338ae7356507d931b85063101d18d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent&lt;/code&gt; returns a &lt;code&gt;fixture&lt;/code&gt; that holds an instance of &lt;code&gt;TestHostComponent&lt;/code&gt; instead of an instance of &lt;code&gt;DashboardHeroComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createComponent&lt;/code&gt; возвращает &lt;code&gt;fixture&lt;/code&gt; , который содержит экземпляр &lt;code&gt;TestHostComponent&lt;/code&gt; вместо экземпляра &lt;code&gt;DashboardHeroComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="724d4e7980b9cc8f42fd4da24b893eb1f7771cf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crisis-center&lt;/code&gt; is the primary navigation.</source>
          <target state="translated">&lt;code&gt;crisis-center&lt;/code&gt; является основной навигацией.</target>
        </trans-unit>
        <trans-unit id="6c08b7e28040bad66e3cd9cc5a5c1eafee51fbb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;customer&lt;/code&gt; in &lt;code&gt;{{customer.name}}&lt;/code&gt; refers to the template input variable, not the component's property.</source>
          <target state="translated">&lt;code&gt;customer&lt;/code&gt; в &lt;code&gt;{{customer.name}}&lt;/code&gt; относится к входному переменному шаблону, а не свойство компоненты.</target>
        </trans-unit>
        <trans-unit id="d3c1c8f085a3ae4340ee13840114b0a83f024f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;customers.module.ts&lt;/code&gt; file imports the &lt;code&gt;CustomersRoutingModule&lt;/code&gt; and &lt;code&gt;CustomerListComponent&lt;/code&gt; so the &lt;code&gt;CustomersModule&lt;/code&gt; class can have access to them. &lt;code&gt;CustomersRoutingModule&lt;/code&gt; is then listed in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; array giving &lt;code&gt;CustomersModule&lt;/code&gt; access to its own routing module, and &lt;code&gt;CustomerListComponent&lt;/code&gt; is in the &lt;code&gt;declarations&lt;/code&gt; array, which means &lt;code&gt;CustomerListComponent&lt;/code&gt; belongs to the &lt;code&gt;CustomersModule&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;customers.module.ts&lt;/code&gt; импорта Файловые &lt;code&gt;CustomersRoutingModule&lt;/code&gt; и &lt;code&gt;CustomerListComponent&lt;/code&gt; поэтому в &lt;code&gt;CustomersModule&lt;/code&gt; класс может иметь доступ к ним. &lt;code&gt;CustomersRoutingModule&lt;/code&gt; затем перечисляется в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;imports&lt;/code&gt; @ NgModule, предоставляя &lt;code&gt;CustomersModule&lt;/code&gt; доступ к его собственному модулю маршрутизации, а &lt;code&gt;CustomerListComponent&lt;/code&gt; находится в массиве &lt;code&gt;declarations&lt;/code&gt; , что означает, что &lt;code&gt;CustomerListComponent&lt;/code&gt; принадлежит к &lt;code&gt;CustomersModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ac07d1e69202f687dd4e677c94494bb2c0c90b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;customers.module.ts&lt;/code&gt; file imports the &lt;code&gt;customers-routing.module.ts&lt;/code&gt; and &lt;code&gt;customers.component.ts&lt;/code&gt; files. &lt;code&gt;CustomersRoutingModule&lt;/code&gt; is listed in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; array giving &lt;code&gt;CustomersModule&lt;/code&gt; access to its own routing module. &lt;code&gt;CustomersComponent&lt;/code&gt; is in the &lt;code&gt;declarations&lt;/code&gt; array, which means &lt;code&gt;CustomersComponent&lt;/code&gt; belongs to the &lt;code&gt;CustomersModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85908fc05ba4e0d59e6d3f80626a6af08be35d30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dasherize()&lt;/code&gt; method takes a value and returns the value in dashed and lowercase. For example, if the provided name is MyService, it is returned as &lt;code&gt;my-service&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645a858498cc5626c10189f70058570baacd1ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dasherize()&lt;/code&gt; method takes a value and returns the value in dashed and lowercase. For example, if the provided name is MyService, it is returned as `my-service.</source>
          <target state="translated">Метод &lt;code&gt;dasherize()&lt;/code&gt; принимает значение и возвращает значение в виде пунктира и строчных букв. Например, если указано имя MyService, оно возвращается как `my-service.</target>
        </trans-unit>
        <trans-unit id="2578f37bc08230276e861ae1e496bef96c2f365b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; property in the third route is a place to store arbitrary data associated with this specific route. The data property is accessible within each activated route. Use it to store items such as page titles, breadcrumb text, and other read-only, &lt;em&gt;static&lt;/em&gt; data. You'll use the &lt;a href=&quot;router#resolve-guard&quot;&gt;resolve guard&lt;/a&gt; to retrieve &lt;em&gt;dynamic&lt;/em&gt; data later in the guide.</source>
          <target state="translated">Свойство &lt;code&gt;data&lt;/code&gt; в третьем маршруте - это место для хранения произвольных данных, связанных с этим конкретным маршрутом. Свойство data доступно в пределах каждого активированного маршрута. Используйте его для хранения таких элементов, как заголовки страниц, текстовые элементы и другие &lt;em&gt;статические&lt;/em&gt; данные, доступные только для чтения . Вы будете использовать &lt;a href=&quot;router#resolve-guard&quot;&gt;охрану разрешения&lt;/a&gt; для получения &lt;em&gt;динамических&lt;/em&gt; данных позже в руководстве.</target>
        </trans-unit>
        <trans-unit id="7751ce26f934e17be84e4933be395e69ebb23726" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; property in the third route is a place to store arbitrary data associated with this specific route. The data property is accessible within each activated route. Use it to store items such as page titles, breadcrumb text, and other read-only, static data. You can use the &lt;a href=&quot;router-tutorial-toh#resolve-guard&quot;&gt;resolve guard&lt;/a&gt; to retrieve dynamic data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65767c242168e99f723573518f3a589193abb497" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debugElement&lt;/code&gt; provides insight into the component and its DOM element during test and debugging. It's a critical property for testers. The most interesting members are covered &lt;a href=&quot;testing-utility-apis#debug-element-details&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c737a6aac1590206b0b78cf4359b02b93b41ba9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;declarations&lt;/code&gt; array</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; массива</target>
        </trans-unit>
        <trans-unit id="3dae09fc9d875a94a277a77461db0b3eae499758" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;declarations&lt;/code&gt; array is available for you to add declarables, which are components, directives, and pipes that belong exclusively to this particular module. To add a component, enter the following command at the command line where &lt;code&gt;customer-dashboard&lt;/code&gt; is the directory where the CLI generated the feature module and &lt;code&gt;CustomerDashboard&lt;/code&gt; is the name of the component:</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; массив доступен для добавления declarables, которые являются компонентами, директива и трубы , которые принадлежат исключительно к этому конкретному модулю. Чтобы добавить компонент, введите в командной строке следующую команду, где &lt;code&gt;customer-dashboard&lt;/code&gt; - это каталог, в котором CLI сгенерировал функциональный модуль, а &lt;code&gt;CustomerDashboard&lt;/code&gt; - это имя компонента:</target>
        </trans-unit>
        <trans-unit id="035eb065e12f1f699a0e3d8a30a7dd92f49d8d70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;declarations&lt;/code&gt; array only takes declarables. Declarables are components, &lt;a href=&quot;attribute-directives&quot;&gt;directives&lt;/a&gt; and &lt;a href=&quot;pipes&quot;&gt;pipes&lt;/a&gt;. All of a module's declarables must be in the &lt;code&gt;declarations&lt;/code&gt; array. Declarables must belong to exactly one module. The compiler emits an error if you try to declare the same class in more than one module.</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; массив занимает declarables. Декларации - это компоненты, &lt;a href=&quot;attribute-directives&quot;&gt;директивы&lt;/a&gt; и &lt;a href=&quot;pipes&quot;&gt;трубы&lt;/a&gt; . Все объявления модуля должны быть в массиве &lt;code&gt;declarations&lt;/code&gt; . Декларации должны принадлежать ровно одному модулю. Компилятор выдает ошибку, если вы пытаетесь объявить один и тот же класс более чем в одном модуле.</target>
        </trans-unit>
        <trans-unit id="edf83e5ef4374c63627032e619ad9b5c095e9652" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decorators&lt;/code&gt; value leaves the decorators in place, which makes compilation faster. TypeScript emits calls to the&lt;code&gt;__decorate&lt;/code&gt; helper. Use &lt;code&gt;--emitDecoratorMetadata&lt;/code&gt; for runtime reflection (but note that the resulting code will not properly tree-shake.</source>
          <target state="translated">Значение &lt;code&gt;decorators&lt;/code&gt; оставляет декораторы на месте, что ускоряет компиляцию. TypeScript &lt;code&gt;__decorate&lt;/code&gt; помощнику __decorate . Используйте &lt;code&gt;--emitDecoratorMetadata&lt;/code&gt; для отражения во время выполнения (но учтите, что результирующий код не будет должным образом трясти дерево.</target>
        </trans-unit>
        <trans-unit id="01aa5cdc650ed29b4ba348390d4546cde0f24a6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defer()&lt;/code&gt; operator transforms the &lt;code&gt;Promise.resolve()&lt;/code&gt; into a new observable that, like &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, emits once and completes. Subscribers are unsubscribed after they receive the data value.</source>
          <target state="translated">В &lt;code&gt;defer()&lt;/code&gt; оператор переводит &lt;code&gt;Promise.resolve()&lt;/code&gt; в новом наблюдаемый , что, как &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , испускает один раз и завершается. Подписчики отписываются после получения значения данных.</target>
        </trans-unit>
        <trans-unit id="b6d005b9a06ea9d2e794c6c980f3f87a8cc44bd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dependencies&lt;/code&gt; section of &lt;code&gt;package.json&lt;/code&gt; contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712ff847f10b4b8a94016b2e9683b9c6d170e28a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deps&lt;/code&gt; property is an array of &lt;a href=&quot;dependency-injection#token&quot;&gt;provider tokens&lt;/a&gt;. The &lt;code&gt;Logger&lt;/code&gt; and &lt;code&gt;UserService&lt;/code&gt; classes serve as tokens for their own class providers. The injector resolves these tokens and injects the corresponding services into the matching factory function parameters.</source>
          <target state="translated">Свойство &lt;code&gt;deps&lt;/code&gt; является массивом &lt;a href=&quot;dependency-injection#token&quot;&gt;токенов провайдера&lt;/a&gt; . В &lt;code&gt;Logger&lt;/code&gt; и &lt;code&gt;UserService&lt;/code&gt; классов служат в качестве маркеров для своих поставщиков класса. Инжектор разрешает эти токены и внедряет соответствующие сервисы в соответствующие параметры фабричной функции.</target>
        </trans-unit>
        <trans-unit id="771ad00c4e2fa763112e7ab1a82d70d93cb37923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disabled&lt;/code&gt; attribute is another example. A button's &lt;code&gt;disabled&lt;/code&gt;&lt;em&gt;property&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt; by default so the button is enabled.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; атрибут является еще одним примером. А кнопки &lt;code&gt;disabled&lt;/code&gt; &lt;em&gt;свойство&lt;/em&gt; является &lt;code&gt;false&lt;/code&gt; по умолчанию , так что кнопка включена.</target>
        </trans-unit>
        <trans-unit id="319dab980acd9cc31116c4df7df65b73ea4cb710" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;doSomething()&lt;/code&gt; method updates the screen when the hero name exceeds 10 characters.</source>
          <target state="translated">Метод &lt;code&gt;doSomething()&lt;/code&gt; обновляет экран, когда имя героя превышает 10 символов.</target>
        </trans-unit>
        <trans-unit id="ada4f6d62fe998707490f2e8a9423a8a23e6338d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elementRef&lt;/code&gt; and &lt;code&gt;injector&lt;/code&gt; parameters should be acquired from Angular by dependency injection into the base class constructor.</source>
          <target state="translated">Параметры &lt;code&gt;elementRef&lt;/code&gt; и &lt;code&gt;injector&lt;/code&gt; должны быть получены из Angular путем внедрения зависимости в конструктор базового класса.</target>
        </trans-unit>
        <trans-unit id="5c2abe112226118d74fa90b194a790196531b297" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entryComponents&lt;/code&gt; array</source>
          <target state="translated">&lt;code&gt;entryComponents&lt;/code&gt; массив</target>
        </trans-unit>
        <trans-unit id="a95d3d386e882c2cf11c01588e861360252d86bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; notification sends a JavaScript Error or exception.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; уведомление отправляет ошибку JavaScript или исключение.</target>
        </trans-unit>
        <trans-unit id="c73b31fb5622fd1bf583c68f96ca67211366a350" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;evil.com&lt;/code&gt; page immediately sends a malicious request to &lt;code&gt;example-bank.com&lt;/code&gt;. Perhaps it's a request to transfer money from the user's account to the attacker's account. The browser automatically sends the &lt;code&gt;example-bank.com&lt;/code&gt; cookies (including the authentication cookie) with this request.</source>
          <target state="translated">Страница &lt;code&gt;evil.com&lt;/code&gt; немедленно отправляет вредоносный запрос на &lt;code&gt;example-bank.com&lt;/code&gt; . Возможно, это запрос на перевод денег со счета пользователя на счет злоумышленника. Браузер автоматически отправляет файлы cookie &lt;code&gt;example-bank.com&lt;/code&gt; (включая файлы cookie для аутентификации) вместе с этим запросом.</target>
        </trans-unit>
        <trans-unit id="dc8d5771d4ef456e7c432a7423b24d0f444af107" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exponential-strength.pipe.ts&lt;/code&gt; component defines a custom pipe named &lt;code&gt;exponentialStrength&lt;/code&gt; with the &lt;code&gt;transform&lt;/code&gt; method that performs the transformation. It defines an argument to the &lt;code&gt;transform&lt;/code&gt; method (&lt;code&gt;exponent&lt;/code&gt;) for a parameter passed to the pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f050e1cfebaa99a71c0c009a884526cb28ee238" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exponentialStrength&lt;/code&gt; pipe executes every time the user changes the &quot;normal power&quot; value or the &quot;boost factor&quot;, as shown in Figure 3.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
