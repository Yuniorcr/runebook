<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="aabd7c813ffdc03e68f8ddf0d0e075e18a3d7a6d" translate="yes" xml:space="preserve">
          <source>In the Angular CLI, a standalone application or &lt;a href=&quot;glossary#library&quot;&gt;library&lt;/a&gt; that can be created or modified by a CLI command.</source>
          <target state="translated">В Angular CLI - автономное приложение или &lt;a href=&quot;glossary#library&quot;&gt;библиотека,&lt;/a&gt; которые могут быть созданы или изменены командой CLI.</target>
        </trans-unit>
        <trans-unit id="b7b501033bcab7677bbf386ea844c636f41ee7a1" translate="yes" xml:space="preserve">
          <source>In the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;, add the &lt;code&gt;proxyConfig&lt;/code&gt; option to the &lt;code&gt;serve&lt;/code&gt; target:</source>
          <target state="translated">В файле конфигурации CLI &lt;code&gt;angular.json&lt;/code&gt; добавьте параметр &lt;code&gt;proxyConfig&lt;/code&gt; к цели &lt;code&gt;serve&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="61763a5a70701c3c12fbb07b3b6f0e84eaf7bbab" translate="yes" xml:space="preserve">
          <source>In the CLI configuration file, &lt;code&gt;angular.json&lt;/code&gt;, point to the JavaScript proxy configuration file:</source>
          <target state="translated">В файле конфигурации CLI &lt;code&gt;angular.json&lt;/code&gt; укажите файл конфигурации прокси JavaScript:</target>
        </trans-unit>
        <trans-unit id="122be2b5ab964b68505d923b034cfdbee86e0ef4" translate="yes" xml:space="preserve">
          <source>In the DOM of a hybrid ngUpgrade application are components and directives from both AngularJS and Angular. These components communicate with each other by using the input and output bindings of their respective frameworks, which ngUpgrade bridges together. They may also communicate through shared injected dependencies, as described above.</source>
          <target state="translated">В DOM гибридного приложения ngUpgrade находятся компоненты и директивы как AngularJS,так и Angular.Эти компоненты взаимодействуют друг с другом,используя входные и выходные связки соответствующих фреймворков,которые ngUpgrade связывают друг с другом.Они также могут взаимодействовать через общие инжекторные зависимости,как описано выше.</target>
        </trans-unit>
        <trans-unit id="da4aac216c4150aa0c4b76a0cbffacab0ba55a37" translate="yes" xml:space="preserve">
          <source>In the DOM of a running Angular application with emulated view encapsulation enabled, each DOM element has some extra attributes attached to it:</source>
          <target state="translated">В DOM работающего углового приложения с включенной инкапсуляцией эмулированного вида каждый элемент DOM имеет некоторые дополнительные атрибуты:</target>
        </trans-unit>
        <trans-unit id="967824d97e856f8a5701294372f66633e02cbd55" translate="yes" xml:space="preserve">
          <source>In the HTML template file, use the trigger name to attach the defined animations to the HTML element to be animated.</source>
          <target state="translated">В файле HTML-шаблона используйте имя триггера,чтобы прикрепить определенную анимацию к HTML-элементу,который будет анимирован.</target>
        </trans-unit>
        <trans-unit id="083a121e6216962299890132cebbe02f632fa294" translate="yes" xml:space="preserve">
          <source>In the HTML template, the animation event is passed back via &lt;code&gt;$event&lt;/code&gt;, as &lt;code&gt;@trigger.start&lt;/code&gt; and &lt;code&gt;@trigger.done&lt;/code&gt;, where &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;&lt;/code&gt; is the name of the trigger being used. In our example, the trigger &lt;code&gt;openClose&lt;/code&gt; appears as follows.</source>
          <target state="translated">В шаблоне HTML событие анимации передается обратно через &lt;code&gt;$event&lt;/code&gt; как &lt;code&gt;@trigger.start&lt;/code&gt; и &lt;code&gt;@trigger.done&lt;/code&gt; , где &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;&lt;/code&gt; - имя используемого триггера. В нашем примере триггер &lt;code&gt;openClose&lt;/code&gt; выглядит следующим образом.</target>
        </trans-unit>
        <trans-unit id="9f68507ab6ee93f0f57a92342cc4e0c3de28bf7e" translate="yes" xml:space="preserve">
          <source>In the HTML template, the animation event is passed back via &lt;code&gt;$event&lt;/code&gt;, as &lt;code&gt;@trigger.start&lt;/code&gt; and &lt;code&gt;@trigger.done&lt;/code&gt;, where &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;&lt;/code&gt; is the name of the trigger being used. In this example, the trigger &lt;code&gt;openClose&lt;/code&gt; appears as follows.</source>
          <target state="translated">В шаблоне HTML событие анимации передается обратно через &lt;code&gt;$event&lt;/code&gt; виде &lt;code&gt;@trigger.start&lt;/code&gt; и &lt;code&gt;@trigger.done&lt;/code&gt; , где &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;&lt;/code&gt; - это имя используемого триггера. В этом примере триггер &lt;code&gt;openClose&lt;/code&gt; выглядит следующим образом.</target>
        </trans-unit>
        <trans-unit id="dfcba8b351ad67cbd3018ae060d6b3b0cce679cf" translate="yes" xml:space="preserve">
          <source>In the Karma configuration file, &lt;code&gt;karma.conf.js&lt;/code&gt;, add a custom launcher called ChromeHeadlessCI below browsers:</source>
          <target state="translated">В конфигурационном файле Karma, &lt;code&gt;karma.conf.js&lt;/code&gt; , добавьте пользовательский модуль запуска ChromeHeadlessCI в следующих браузерах:</target>
        </trans-unit>
        <trans-unit id="0d8933c6633530a939e7e7a904014c408f4331c7" translate="yes" xml:space="preserve">
          <source>In the Phone detail controller, you'll have two members: One for the phone that the user is looking at and another for the URL of the currently displayed image:</source>
          <target state="translated">В контроллере &quot;Телефон&quot; у вас будет два члена:Один для телефона,на который смотрит пользователь,а другой для URL-адреса отображаемого в данный момент изображения:</target>
        </trans-unit>
        <trans-unit id="0d1a2ab17dd8ff5eedf9e71bb387641a06044ce9" translate="yes" xml:space="preserve">
          <source>In the TypeScript configuration file, the &quot;target&quot; option in the &lt;code&gt;compilerOptions&lt;/code&gt; section determines the ECMAScript target version that the code is compiled to. Modern browsers support ES2015 natively, while ES5 is more commonly used to support legacy browsers.</source>
          <target state="translated">В файле конфигурации TypeScript параметр &amp;laquo;target&amp;raquo; в разделе &lt;code&gt;compilerOptions&lt;/code&gt; определяет целевую версию ECMAScript, в которую скомпилирован код. Современные браузеры изначально поддерживают ES2015, тогда как ES5 чаще используется для поддержки устаревших браузеров.</target>
        </trans-unit>
        <trans-unit id="e4df01dda361adbb05b79a30335d5fac348e1b3c" translate="yes" xml:space="preserve">
          <source>In the above code snippet, &lt;code&gt;transAnimation&lt;/code&gt; is made reusable by declaring it as an export variable.</source>
          <target state="translated">В приведенном выше фрагменте кода &lt;code&gt;transAnimation&lt;/code&gt; используется для повторного использования путем объявления его в качестве переменной экспорта.</target>
        </trans-unit>
        <trans-unit id="999956f8131dbd54f089f149eff9fb3d864570b4" translate="yes" xml:space="preserve">
          <source>In the above code, we applied the &lt;code&gt;void&lt;/code&gt; state when the HTML element isn't attached to a view.</source>
          <target state="translated">В приведенном выше коде мы применили состояние &lt;code&gt;void&lt;/code&gt; , когда элемент HTML не присоединен к представлению.</target>
        </trans-unit>
        <trans-unit id="6bcbc62f2692a7cad7cfffdc2e7cf4b7e559d979" translate="yes" xml:space="preserve">
          <source>In the above code, you applied the &lt;code&gt;void&lt;/code&gt; state when the HTML element isn't attached to a view.</source>
          <target state="translated">В приведенном выше коде вы применили состояние &lt;code&gt;void&lt;/code&gt; , когда элемент HTML не прикреплен к представлению.</target>
        </trans-unit>
        <trans-unit id="cea6f478656e7fe4e653914666132b5379bca812" translate="yes" xml:space="preserve">
          <source>In the above example, a breakpoint on the pipe's request for data shows the following:</source>
          <target state="translated">В приведенном выше примере точка останова при запросе данных трубопровода показывает следующее:</target>
        </trans-unit>
        <trans-unit id="4e34e2cb53ddbb0085cbc3e5a61b4772c7d5c3c2" translate="yes" xml:space="preserve">
          <source>In the above example:</source>
          <target state="translated">В приведенном выше примере:</target>
        </trans-unit>
        <trans-unit id="8a1eba3971dbfd135fb71e9d8c51d2907a609acb" translate="yes" xml:space="preserve">
          <source>In the above scenario, the service worker is not able to serve an asset that would normally be cached. That particular app version is broken and there is no way to fix the state of the client without reloading the page. In such cases, the service worker notifies the client by sending an &lt;code&gt;&lt;a href=&quot;../api/service-worker/unrecoverablestateevent&quot;&gt;UnrecoverableStateEvent&lt;/a&gt;&lt;/code&gt; event. You can subscribe to &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;#unrecoverable&lt;/code&gt; to be notified and handle these errors.</source>
          <target state="translated">В приведенном выше сценарии сервисный работник не может обслуживать актив, который обычно кэшируется. Эта конкретная версия приложения не работает, и нет способа исправить состояние клиента без перезагрузки страницы. В таких случаях работник службы уведомляет клиента, отправляя событие &lt;code&gt;&lt;a href=&quot;../api/service-worker/unrecoverablestateevent&quot;&gt;UnrecoverableStateEvent&lt;/a&gt;&lt;/code&gt; . Вы можете подписаться на &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;#unrecoverable&lt;/code&gt; чтобы получать уведомления и обрабатывать эти ошибки.</target>
        </trans-unit>
        <trans-unit id="577e109d05bd16fdfef27736b2c5e520043e9b7f" translate="yes" xml:space="preserve">
          <source>In the ad banner, all components implement a common &lt;code&gt;AdComponent&lt;/code&gt; interface to standardize the API for passing data to the components.</source>
          <target state="translated">В рекламном баннере все компоненты реализуют общий интерфейс &lt;code&gt;AdComponent&lt;/code&gt; для стандартизации API для передачи данных компонентам.</target>
        </trans-unit>
        <trans-unit id="19609a3f68be8a8d8459bb2350900bd1a47c1bf5" translate="yes" xml:space="preserve">
          <source>In the basic CLI-generated app, modules are eagerly loaded which means that they are all loaded when the app launches. Angular uses an injector system to make things available between modules. In an eagerly loaded app, the root application injector makes all of the providers in all of the modules available throughout the app.</source>
          <target state="translated">В базовом приложении,генерируемом CLI,модули с нетерпением загружаются,что означает,что все они загружаются при запуске приложения.Угловая использует систему инжекторов для того,чтобы сделать вещи доступными между модулями.В жадно загруженном приложении,корневой инжектор приложения делает все провайдеры во всех модулях,доступных на протяжении всего приложения.</target>
        </trans-unit>
        <trans-unit id="d217fba68efca130ef3c06341acbd707ba067782" translate="yes" xml:space="preserve">
          <source>In the builder source directory, we have created a new test file &lt;code&gt;index.spec.ts&lt;/code&gt;. The code creates new instances of &lt;code&gt;JsonSchemaRegistry&lt;/code&gt; (for schema validation), &lt;code&gt;TestingArchitectHost&lt;/code&gt; (an in-memory implementation of &lt;code&gt;ArchitectHost&lt;/code&gt;), and &lt;code&gt;Architect&lt;/code&gt;.</source>
          <target state="translated">В исходном каталоге компоновщика мы создали новый тестовый файл &lt;code&gt;index.spec.ts&lt;/code&gt; . Код создает новые экземпляры &lt;code&gt;JsonSchemaRegistry&lt;/code&gt; (для проверки схемы), &lt;code&gt;TestingArchitectHost&lt;/code&gt; (реализация &lt;code&gt;ArchitectHost&lt;/code&gt; в памяти ) и &lt;code&gt;Architect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d959bf9da8f9b9700248ea3b26f61fd618b0cb98" translate="yes" xml:space="preserve">
          <source>In the builder source directory, we have created a new test file &lt;code&gt;my-builder.spec.ts&lt;/code&gt;. The code creates new instances of &lt;code&gt;JsonSchemaRegistry&lt;/code&gt; (for schema validation), &lt;code&gt;TestingArchitectHost&lt;/code&gt; (an in-memory implementation of &lt;code&gt;ArchitectHost&lt;/code&gt;), and &lt;code&gt;Architect&lt;/code&gt;.</source>
          <target state="translated">В исходном каталоге компоновщика мы создали новый тестовый файл &lt;code&gt;my-builder.spec.ts&lt;/code&gt; . Код создает новые экземпляры &lt;code&gt;JsonSchemaRegistry&lt;/code&gt; (для проверки схемы), &lt;code&gt;TestingArchitectHost&lt;/code&gt; (реализация &lt;code&gt;ArchitectHost&lt;/code&gt; в памяти ) и &lt;code&gt;Architect&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4f98a695082e7fd1036ab253a946e35cc9beb2c" translate="yes" xml:space="preserve">
          <source>In the case of hybrid applications, the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; bridges the AngularJS and Angular approaches. Here's what happens:</source>
          <target state="translated">В случае гибридных приложений &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; соединяет подходы AngularJS и Angular. Вот что происходит:</target>
        </trans-unit>
        <trans-unit id="91461870129c519bada0129bab899cc6a8400941" translate="yes" xml:space="preserve">
          <source>In the child</source>
          <target state="translated">В ребёнке</target>
        </trans-unit>
        <trans-unit id="514d6aabad56aee8cc774c96c1fb20cc55ba211e" translate="yes" xml:space="preserve">
          <source>In the child's template</source>
          <target state="translated">В детском шаблоне</target>
        </trans-unit>
        <trans-unit id="4ba5c1d9c582fab11dbc6b441f66b76c1660fd68" translate="yes" xml:space="preserve">
          <source>In the code snippet above, the &lt;code&gt;=&amp;gt;&lt;/code&gt; operator indicates unidirectional transitions, and &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; is bidirectional. Within the transition, &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; specifies how long the transition takes. In this case, the state change from &lt;code&gt;open&lt;/code&gt; to &lt;code&gt;closed&lt;/code&gt; takes one second, expressed here as &lt;code&gt;1s&lt;/code&gt;.</source>
          <target state="translated">В приведенном выше фрагменте кода оператор &lt;code&gt;=&amp;gt;&lt;/code&gt; указывает однонаправленные переходы, а &lt;code&gt;&amp;lt;=&amp;gt;&lt;/code&gt; является двунаправленным. В переходе &lt;code&gt;&lt;a href=&quot;../api/animations/animate&quot;&gt;animate&lt;/a&gt;()&lt;/code&gt; указывает, сколько времени занимает переход. В этом случае изменение состояния с &lt;code&gt;open&lt;/code&gt; на &lt;code&gt;closed&lt;/code&gt; занимает одну секунду, выраженную здесь как &lt;code&gt;1s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="78631c8d5215d0ec4e7d6e3f883171b073d2d4ca" translate="yes" xml:space="preserve">
          <source>In the code snippet above, the HTML template binds a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element to a trigger named &lt;code&gt;openClose&lt;/code&gt; with a status expression of &lt;code&gt;isOpen&lt;/code&gt;, and with possible values of &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;. This is an alternative to the practice of creating two named states of &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt;.</source>
          <target state="translated">В приведенном выше фрагменте кода HTML-шаблон связывает элемент &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; с триггером с именем &lt;code&gt;openClose&lt;/code&gt; с выражением состояния &lt;code&gt;isOpen&lt;/code&gt; и с возможными значениями &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;false&lt;/code&gt; . Это альтернатива практике создания двух названных состояний &lt;code&gt;open&lt;/code&gt; и &lt;code&gt;close&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="711a62a7d9cbae68bebfcfcc21e1d3cea5413624" translate="yes" xml:space="preserve">
          <source>In the component class, decorate a property with &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;. The following example &lt;code&gt;newItemEvent&lt;/code&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; has a type of &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, which means it's an event.</source>
          <target state="translated">В классе компонента украсьте свойство с помощью &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; . В следующем примере &lt;code&gt;newItemEvent&lt;/code&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; имеет тип &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; , что означает, что это событие.</target>
        </trans-unit>
        <trans-unit id="c1b78f88da88a23dd477bf417a4c041c6b8167c0" translate="yes" xml:space="preserve">
          <source>In the component class, define a property named &lt;code&gt;notify&lt;/code&gt; with an &lt;code&gt;@&lt;a href=&quot;api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; decorator and an instance of &lt;code&gt;&lt;a href=&quot;api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;()&lt;/code&gt;. This allows the product alert component to emit an event when the value of the notify property changes.</source>
          <target state="translated">В классе компонентов определите свойство с именем &lt;code&gt;notify&lt;/code&gt; с помощью декоратора &lt;code&gt;@&lt;a href=&quot;api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; и экземпляра &lt;code&gt;&lt;a href=&quot;api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;()&lt;/code&gt; . Это позволяет компоненту оповещения о продукте генерировать событие при изменении значения свойства notify.</target>
        </trans-unit>
        <trans-unit id="cbb5316d37953947a7dc6e4e53440d5ca9eea88b" translate="yes" xml:space="preserve">
          <source>In the component code, in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata under the &lt;code&gt;animations:&lt;/code&gt; property, when the state evaluates to &lt;code&gt;true&lt;/code&gt; (meaning &quot;open&quot; here), the associated HTML element's height is a wildcard style or default. In this case, use whatever height the element already had before the animation started. When the element is &quot;closed,&quot; the element animates to a height of 0, which makes it invisible.</source>
          <target state="translated">В коде &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; метаданных @ Component в свойстве &lt;code&gt;animations:&lt;/code&gt; когда состояние оценивается как &lt;code&gt;true&lt;/code&gt; (здесь означает &amp;laquo;открытый&amp;raquo;), высота ассоциированного HTML-элемента представляет собой стиль подстановочного знака или значение по умолчанию. В этом случае используйте любую высоту, которая была у элемента до начала анимации. Когда элемент &amp;laquo;закрыт&amp;raquo;, элемент анимируется на высоту 0, что делает его невидимым.</target>
        </trans-unit>
        <trans-unit id="750773967d6728414256aab053c5bf8fe9e2f436" translate="yes" xml:space="preserve">
          <source>In the component file, add a metadata property called &lt;code&gt;animations:&lt;/code&gt; within the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator. You put the trigger that defines an animation within the &lt;code&gt;animations&lt;/code&gt; metadata property.</source>
          <target state="translated">В файле компонента добавьте свойство метаданных с именем &lt;code&gt;animations:&lt;/code&gt; в декораторе &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; . Вы помещаете триггер, который определяет анимацию, в свойство метаданных &lt;code&gt;animations&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b647954d61a159e6208fef117f191a4dea85cacc" translate="yes" xml:space="preserve">
          <source>In the component file, add the hero-creation method to the hero data model.</source>
          <target state="translated">В компонентном файле добавьте метод создания героя в модель данных героя.</target>
        </trans-unit>
        <trans-unit id="4196bcf6a715efdf0a9de2a019d7382007a47ed6" translate="yes" xml:space="preserve">
          <source>In the component file, the &lt;code&gt;:enter&lt;/code&gt; transition sets an initial opacity of 0, and then animates it to change that opacity to 1 as the element is inserted into the view.</source>
          <target state="translated">В файле компонента переход &lt;code&gt;:enter&lt;/code&gt; устанавливает начальную непрозрачность 0, а затем анимирует ее, чтобы изменить эту непрозрачность на 1, когда элемент вставляется в представление.</target>
        </trans-unit>
        <trans-unit id="2a6156782315dab6b8822877f620cda0f59ab064" translate="yes" xml:space="preserve">
          <source>In the component or file that uses the library, add the following code.</source>
          <target state="translated">В компонент или файл,использующий библиотеку,добавьте следующий код.</target>
        </trans-unit>
        <trans-unit id="8243140d8235a39ddc9786840d3f4bf1a925f034" translate="yes" xml:space="preserve">
          <source>In the component or file that uses the library, add the following code:</source>
          <target state="translated">В компонент или файл,использующий библиотеку,добавьте следующий код:</target>
        </trans-unit>
        <trans-unit id="87a9383fa91e555bd99945b3b362ea9dcee5dfa7" translate="yes" xml:space="preserve">
          <source>In the component template, the content might be used with interpolation:</source>
          <target state="translated">В шаблоне компонента содержимое может быть использовано с интерполяцией:</target>
        </trans-unit>
        <trans-unit id="f702faec19daad8be0cca783fb00aba111958cee" translate="yes" xml:space="preserve">
          <source>In the component, use an &lt;code&gt;Observable&lt;/code&gt; to get the data from the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В компоненте используйте &lt;code&gt;Observable&lt;/code&gt; для получения данных из &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3ae6371e7bf5654fb5d754771d4b6f032b299e13" translate="yes" xml:space="preserve">
          <source>In the console, you will see that the schematic was run and the &lt;code&gt;my-data.service.ts&lt;/code&gt; file was created in your app folder.</source>
          <target state="translated">В консоли вы увидите, что схема была запущена и файл &lt;code&gt;my-data.service.ts&lt;/code&gt; был создан в папке вашего приложения.</target>
        </trans-unit>
        <trans-unit id="db2383126f18633eaf688b99cb2074de976819a7" translate="yes" xml:space="preserve">
          <source>In the constructor of the &lt;code&gt;AppModule&lt;/code&gt;, use dependency injection to get a hold of the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; instance, and use it to bootstrap the AngularJS app in the &lt;code&gt;AppModule.ngDoBootstrap&lt;/code&gt; method. The &lt;code&gt;upgrade.bootstrap&lt;/code&gt; method takes the exact same arguments as &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt;angular.bootstrap&lt;/a&gt;:</source>
          <target state="translated">В конструкторе &lt;code&gt;AppModule&lt;/code&gt; используйте внедрение зависимостей, чтобы получить экземпляр &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; , и используйте его для начальной загрузки приложения AngularJS в методе &lt;code&gt;AppModule.ngDoBootstrap&lt;/code&gt; . Метод &lt;code&gt;upgrade.bootstrap&lt;/code&gt; принимает те же аргументы, что и &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt;angular.bootstrap&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="ab2886cc60ad2bc7616d008c0fde504da14578f6" translate="yes" xml:space="preserve">
          <source>In the context of a parent form, it's often unnecessary to include one-way or two-way binding, as the parent form syncs the value for you. You access its properties by exporting it into a local template variable using &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; such as (&lt;code&gt;#f=&quot;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&quot;&lt;/code&gt;). Use the variable where needed on form submission.</source>
          <target state="translated">В контексте родительской формы часто нет необходимости включать одностороннюю или двустороннюю привязку, поскольку родительская форма синхронизирует значение для вас. Вы получаете доступ к его свойствам, экспортируя их в локальную переменную шаблона, используя &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; , например ( &lt;code&gt;#f=&quot;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&quot;&lt;/code&gt; ). Используйте переменную, где это необходимо, при отправке формы.</target>
        </trans-unit>
        <trans-unit id="9f2d7dd8dafe93b7500c8077037b8da178a715a9" translate="yes" xml:space="preserve">
          <source>In the context of an Angular service worker, a &quot;version&quot; is a collection of resources that represent a specific build of the Angular app. Whenever a new build of the app is deployed, the service worker treats that build as a new version of the app. This is true even if only a single file is updated. At any given time, the service worker may have multiple versions of the app in its cache and it may be serving them simultaneously. For more information, see the &lt;a href=&quot;service-worker-devops#tabs&quot;&gt;App tabs&lt;/a&gt; section below.</source>
          <target state="translated">В контексте работника службы Angular &amp;laquo;версия&amp;raquo; - это набор ресурсов, представляющих конкретную сборку приложения Angular. Каждый раз, когда развертывается новая сборка приложения, работник службы рассматривает эту сборку как новую версию приложения. Это верно, даже если обновляется только один файл. В любой момент времени работник сервиса может иметь несколько версий приложения в своем кэше, и он может обслуживать их одновременно. Для получения дополнительной информации см. Раздел &lt;a href=&quot;service-worker-devops#tabs&quot;&gt;вкладок приложения&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="31e6c8b0cca98e1d45c93db3ef9b3d328609662f" translate="yes" xml:space="preserve">
          <source>In the course of this tutorial, you bind a sample form to data and handle user input using the following steps.</source>
          <target state="translated">В процессе обучения вы привязываете образец формы к данным и обрабатываете ввод данных пользователем,выполняя следующие действия.</target>
        </trans-unit>
        <trans-unit id="97dae99a0d255226f4238d22cccbbb910df66b7e" translate="yes" xml:space="preserve">
          <source>In the example above, Angular evaluates the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;itemImageUrl&lt;/code&gt; properties and fills in the blanks, first displaying some title text and then an image.</source>
          <target state="translated">В приведенном выше примере Angular оценивает свойства &lt;code&gt;title&lt;/code&gt; и &lt;code&gt;itemImageUrl&lt;/code&gt; и заполняет пробелы, сначала отображая текст заголовка, а затем изображение.</target>
        </trans-unit>
        <trans-unit id="81fa08fa9b494460742d62ebecc855ff605ead0a" translate="yes" xml:space="preserve">
          <source>In the example above, the three options are specified according to that pluralization pattern. For talking about zero minutes, you use &lt;code&gt;=0 {just now}&lt;/code&gt;. For one minute, you use &lt;code&gt;=1 {one minute}&lt;/code&gt;. Any unmatched cardinality uses &lt;code&gt;other {{{minutes}} minutes ago}&lt;/code&gt;. You could choose to add patterns for two, three, or any other number if the pluralization rules were different. For the example of &quot;minute&quot;, only these three patterns are necessary in English.</source>
          <target state="translated">В приведенном выше примере три варианта указываются в соответствии с этим шаблоном множественного числа. Чтобы говорить о нуле минут, вы используете &lt;code&gt;=0 {just now}&lt;/code&gt; . В течение одной минуты вы используете &lt;code&gt;=1 {one minute}&lt;/code&gt; . Любое несравненное количество элементов использует &lt;code&gt;other {{{minutes}} minutes ago}&lt;/code&gt; . Вы можете добавить шаблоны для двух, трех или любого другого числа, если правила множественного числа были другими. Для примера &amp;laquo;минуты&amp;raquo;, только эти три образца необходимы на английском языке.</target>
        </trans-unit>
        <trans-unit id="550d39672c182d504b9a08b7ed75f156116ef64f" translate="yes" xml:space="preserve">
          <source>In the example above, you use the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; method with the same object to define the properties in the model. The value for each control name is an array containing the initial value as the first item in the array.</source>
          <target state="translated">В приведенном выше примере вы используете метод &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder#group&quot;&gt;group()&lt;/a&gt;&lt;/code&gt; с тем же объектом для определения свойств в модели. Значением для каждого имени элемента управления является массив, содержащий начальное значение в качестве первого элемента в массиве.</target>
        </trans-unit>
        <trans-unit id="1f2d3286c150f077c26feea80a8021812e74c85b" translate="yes" xml:space="preserve">
          <source>In the example above, you use the &lt;code&gt;group()&lt;/code&gt; method with the same object to define the properties in the model. The value for each control name is an array containing the initial value as the first item in the array.</source>
          <target state="translated">В приведенном выше примере вы используете метод &lt;code&gt;group()&lt;/code&gt; с тем же объектом для определения свойств в модели. Значение для каждого имени элемента управления - это массив, содержащий начальное значение в качестве первого элемента в массиве.</target>
        </trans-unit>
        <trans-unit id="1ba8d292e19c80620ac6c43293a763a286812912" translate="yes" xml:space="preserve">
          <source>In the example app, the &lt;code&gt;BannerComponent&lt;/code&gt; presents static title text in the HTML template.</source>
          <target state="translated">В примере приложения &lt;code&gt;BannerComponent&lt;/code&gt; представляет статический текст заголовка в шаблоне HTML.</target>
        </trans-unit>
        <trans-unit id="4bcfb2b53fd4dc6373ea6524bb4d8990492b6ddf" translate="yes" xml:space="preserve">
          <source>In the example below the custom id &lt;code&gt;myId&lt;/code&gt; is used for two different messages:</source>
          <target state="translated">В приведенном ниже примере пользовательский идентификатор &lt;code&gt;myId&lt;/code&gt; используется для двух разных сообщений:</target>
        </trans-unit>
        <trans-unit id="5ada26207b7af3fde1615048bf33c296c6978a3e" translate="yes" xml:space="preserve">
          <source>In the example below, an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag displays a simple English language greeting, &quot;Hello i18n!&quot;</source>
          <target state="translated">В приведенном ниже примере тег &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; отображает простое приветствие на английском языке &amp;laquo;Hello i18n!&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="761e65706bb821211699b0101d7fa79785ca1c40" translate="yes" xml:space="preserve">
          <source>In the example case, the constraints are:</source>
          <target state="translated">В примере ограничения:</target>
        </trans-unit>
        <trans-unit id="d36c3d786cc14bcc8155416686a9fb73a1c42c26" translate="yes" xml:space="preserve">
          <source>In the example of the simple root module above, the application module needs material from within &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;. To access that material, add it to the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata &lt;code&gt;imports&lt;/code&gt; like this.</source>
          <target state="translated">В приведенном выше примере простого корневого модуля модуль приложения нуждается в материалах из &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; . Чтобы получить доступ , что материал, добавьте его в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; метаданных &lt;code&gt;imports&lt;/code&gt; , как это.</target>
        </trans-unit>
        <trans-unit id="54c9f76e0c79a2bab0002fa1804da3ccf230830a" translate="yes" xml:space="preserve">
          <source>In the example, the &lt;code&gt;color&lt;/code&gt; style is set to the current value of the &lt;code&gt;colorPreference&lt;/code&gt; variable.</source>
          <target state="translated">В этом примере для стиля &lt;code&gt;color&lt;/code&gt; установлено текущее значение переменной &lt;code&gt;colorPreference&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb7ba0a8d8a0d2a3fec268eda2d727b9e01b2be7" translate="yes" xml:space="preserve">
          <source>In the example, the compiler retains the &lt;code&gt;LibHeaderComponent&lt;/code&gt; token that occurs in the value position, which prevents the referenced component from being tree-shaken, even if the application developer does not actually use &lt;code&gt;&amp;lt;lib-header&amp;gt;&lt;/code&gt; anywhere. If &lt;code&gt;LibHeaderComponent&lt;/code&gt; is large (code, template, and styles), including it unnecessarily can significantly increase the size of the client application.</source>
          <target state="translated">В этом примере компилятор сохраняет токен &lt;code&gt;LibHeaderComponent&lt;/code&gt; , который встречается в позиции значения, что предотвращает раскачку дерева компонента, на который указывает ссылка, даже если разработчик приложения фактически нигде не использует &lt;code&gt;&amp;lt;lib-header&amp;gt;&lt;/code&gt; . Если &lt;code&gt;LibHeaderComponent&lt;/code&gt; имеет большой размер (код, шаблон и стили), его необязательное включение может значительно увеличить размер клиентского приложения.</target>
        </trans-unit>
        <trans-unit id="92b5e03d39252fa9bf7d83cab030749ee5f4c3e4" translate="yes" xml:space="preserve">
          <source>In the example, the local state is the number &lt;code&gt;2&lt;/code&gt;, the number of runners up that the component should show. The state value is passed as an argument to &lt;code&gt;runnersUpFactory()&lt;/code&gt;. The &lt;code&gt;runnersUpFactory()&lt;/code&gt; returns the &lt;em&gt;provider factory function&lt;/em&gt;, which can use both the passed-in state value and the injected services &lt;code&gt;Hero&lt;/code&gt; and &lt;code&gt;HeroService&lt;/code&gt;.</source>
          <target state="translated">В этом примере локальное состояние - это число &lt;code&gt;2&lt;/code&gt; , количество участников, которые должен показывать компонент. Значение состояния передается в качестве аргумента &lt;code&gt;runnersUpFactory()&lt;/code&gt; . &lt;code&gt;runnersUpFactory()&lt;/code&gt; возвращает &lt;em&gt;функцию поставщика фабрики&lt;/em&gt; , который можно использовать как переданное значение государственного и инжектированные услуги &lt;code&gt;Hero&lt;/code&gt; и &lt;code&gt;HeroService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8effc0805c439cacc9c0f76f324195e103dda94" translate="yes" xml:space="preserve">
          <source>In the first example, the &lt;code&gt;active&lt;/code&gt; class is applied to the element if &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive#isActive&quot;&gt;isActive&lt;/a&gt;&lt;/code&gt; is true.</source>
          <target state="translated">В первом примере &lt;code&gt;active&lt;/code&gt; класс применяется к элементу, если &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive#isActive&quot;&gt;isActive&lt;/a&gt;&lt;/code&gt; имеет значение true.</target>
        </trans-unit>
        <trans-unit id="80c263cbce8c782dbf85361c2a0637996123f4a6" translate="yes" xml:space="preserve">
          <source>In the first example, the &lt;code&gt;active&lt;/code&gt; class is applied to the element if &lt;code&gt;isActive&lt;/code&gt; is true.</source>
          <target state="translated">В первом примере &lt;code&gt;active&lt;/code&gt; класс применяется к элементу, если &lt;code&gt;isActive&lt;/code&gt; истинно.</target>
        </trans-unit>
        <trans-unit id="27a19498c633dd57a4f9dced2864e307540358ac" translate="yes" xml:space="preserve">
          <source>In the first example, the &lt;code&gt;color&lt;/code&gt; style is set to the current value of the &lt;code&gt;colorPreference&lt;/code&gt; variable.</source>
          <target state="translated">В первом примере для стиля &lt;code&gt;color&lt;/code&gt; установлено текущее значение переменной &lt;code&gt;colorPreference&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2c9e4a3b7e12aaeed408d98456f50d5888a5780" translate="yes" xml:space="preserve">
          <source>In the first example, when a user clicks the button, the &lt;code&gt;toggleImage()&lt;/code&gt; method in the associated component is executed.</source>
          <target state="translated">В первом примере, когда пользователь нажимает кнопку, &lt;code&gt;toggleImage()&lt;/code&gt; метод toggleImage () в связанном компоненте.</target>
        </trans-unit>
        <trans-unit id="51f81f798ea0c7741e39924caa444daf3cc19a74" translate="yes" xml:space="preserve">
          <source>In the first example, when the user clicks the button, the &lt;code&gt;toggleImage()&lt;/code&gt; method in the controller referenced by the &lt;code&gt;vm&lt;/code&gt;&lt;code&gt;controller as&lt;/code&gt; alias is executed.</source>
          <target state="translated">В первом примере, когда пользователь нажимает кнопку, &lt;code&gt;toggleImage()&lt;/code&gt; метод toggleImage () в контроллере, на который ссылается &lt;code&gt;controller as&lt;/code&gt; &lt;code&gt;vm&lt;/code&gt; вкачестве псевдонима.</target>
        </trans-unit>
        <trans-unit id="c32207f14912960f8c997ef3cafe72412ad10f67" translate="yes" xml:space="preserve">
          <source>In the first technique, you create and declare stub versions of the components and directive that play little or no role in the tests.</source>
          <target state="translated">В первой методике вы создаете и объявляете stub-версии компонентов и директивы,которые мало играют или не играют никакой роли в тестах.</target>
        </trans-unit>
        <trans-unit id="108b8931e71d306a76dfcfce9f527d5a471ad881" translate="yes" xml:space="preserve">
          <source>In the following code snippet, &lt;code&gt;HeroesService&lt;/code&gt; is an Angular service that depends upon an AngularJS service, &lt;code&gt;titleCase&lt;/code&gt;.</source>
          <target state="translated">В следующем фрагменте кода &lt;code&gt;HeroesService&lt;/code&gt; - это служба Angular, которая зависит от службы AngularJS, &lt;code&gt;titleCase&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6676bc73be4bf155526fd49d72a84de468c0b2c" translate="yes" xml:space="preserve">
          <source>In the following code snippet, &lt;code&gt;heroesService&lt;/code&gt; is a downgraded Angular service that we are accessing from AngularJS.</source>
          <target state="translated">В следующем фрагменте кода &lt;code&gt;heroesService&lt;/code&gt; является устаревшим сервисом Angular, к которому мы обращаемся из AngularJS.</target>
        </trans-unit>
        <trans-unit id="fb78ea39c5a1ee00dc639658e1a750d3438ad7fa" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we are configuring the &lt;code&gt;$injector&lt;/code&gt; with two modules: The AngularJS &lt;code&gt;ng1AppModule&lt;/code&gt;, which is the AngularJS part of our hybrid application and the &lt;code&gt;Ng2AppModule&lt;/code&gt;, which is the Angular part.</source>
          <target state="translated">В следующем фрагменте кода мы настраиваем &lt;code&gt;$injector&lt;/code&gt; с двумя модулями: AngularJS &lt;code&gt;ng1AppModule&lt;/code&gt; , который является частью AngularJS нашего гибридного приложения, и &lt;code&gt;Ng2AppModule&lt;/code&gt; , который является частью Angular.</target>
        </trans-unit>
        <trans-unit id="bf4a28c55f909788b70b87596cb2bfc51aafb4fc" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we are configuring the &lt;code&gt;&lt;a href=&quot;../upgrademodule#%24injector&quot;&gt;$injector&lt;/a&gt;&lt;/code&gt; with two modules: The AngularJS &lt;code&gt;ng1AppModule&lt;/code&gt;, which is the AngularJS part of our hybrid application and the &lt;code&gt;Ng2AppModule&lt;/code&gt;, which is the Angular part.</source>
          <target state="translated">В следующем фрагменте кода мы настраиваем &lt;code&gt;&lt;a href=&quot;../upgrademodule#%24injector&quot;&gt;$injector&lt;/a&gt;&lt;/code&gt; с двумя модулями: AngularJS &lt;code&gt;ng1AppModule&lt;/code&gt; , который является частью AngularJS нашего гибридного приложения, и &lt;code&gt;Ng2AppModule&lt;/code&gt; , который является частью Angular.</target>
        </trans-unit>
        <trans-unit id="96af67a04e682b5cdce9f3c7c26caa5301abaf6c" translate="yes" xml:space="preserve">
          <source>In the following code snippet, we are configuring the TestBed with two imports. The &lt;code&gt;Ng2AppModule&lt;/code&gt; is the Angular part of our hybrid application and the &lt;code&gt;ng1AppModule&lt;/code&gt; is the AngularJS part.</source>
          <target state="translated">В следующем фрагменте кода мы настраиваем TestBed с двумя импортами. Модуль &lt;code&gt;Ng2AppModule&lt;/code&gt; является угловой частью нашего гибридного приложения, а &lt;code&gt;ng1AppModule&lt;/code&gt; является частью AngularJS.</target>
        </trans-unit>
        <trans-unit id="1089fa92e7d1b3e9f8331b6e2a577f4fccb3f18e" translate="yes" xml:space="preserve">
          <source>In the following code, the pipe only calls the server when the requested URL changes and it caches the server response. The code uses the &lt;a href=&quot;http&quot;&gt;Angular http&lt;/a&gt; client to retrieve data:</source>
          <target state="translated">В следующем коде канал вызывает сервер только при изменении запрошенного URL-адреса и кэширует ответ сервера. Код использует &lt;a href=&quot;http&quot;&gt;Angular http-&lt;/a&gt; клиент для извлечения данных:</target>
        </trans-unit>
        <trans-unit id="03604da2fdf914c5e14b22f5a5170342aa59b0a0" translate="yes" xml:space="preserve">
          <source>In the following configuration, when navigating to &lt;code&gt;/team/11&lt;/code&gt;, the router instantiates the 'AllUsers' component.</source>
          <target state="translated">В следующей конфигурации при переходе к &lt;code&gt;/team/11&lt;/code&gt; маршрутизатор создает экземпляр компонента AllUsers.</target>
        </trans-unit>
        <trans-unit id="c19512eeae1d510572e03aff79e442da189e3793" translate="yes" xml:space="preserve">
          <source>In the following example the code sets the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;code&gt;value&lt;/code&gt; property by binding to the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">В следующем примере код устанавливает свойство &lt;code&gt;value&lt;/code&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; путем привязки к свойству &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ddd2e72487db9568e443e8ac17f1325efafcf0bf" translate="yes" xml:space="preserve">
          <source>In the following example, 'MainChild' and 'AuxChild' are siblings. When navigating to 'parent/10/(a//aux:b)', the route instantiates the main child and aux child components next to each other. For this to work, the application component must have the primary and aux outlets defined.</source>
          <target state="translated">В следующем примере 'MainChild' и 'AuxChild'-это братья и сестры.При переходе к 'parent/10/(a//aux:b)' маршрут инстанцирует основные дочерние и вспомогательные дочерние компоненты рядом друг с другом.Чтобы это работало,прикладной компонент должен иметь заданные первичный и вспомогательный выходы.</target>
        </trans-unit>
        <trans-unit id="9b1fde84a1cd92229e619c7056dab800c00030c3" translate="yes" xml:space="preserve">
          <source>In the following example, &lt;code&gt;RepeatPipe&lt;/code&gt; repeats a given value a given number of times.</source>
          <target state="translated">В следующем примере &lt;code&gt;RepeatPipe&lt;/code&gt; повторяет заданное значение заданное количество раз.</target>
        </trans-unit>
        <trans-unit id="f35e0eba3b9006549e40ff4f159f53a0132367aa" translate="yes" xml:space="preserve">
          <source>In the following example, a component defines two output properties that create event emitters. When the title is clicked, the emitter emits an open or close event to toggle the current visibility state.</source>
          <target state="translated">В следующем примере компонент определяет два выходных свойства,которые создают эмиттеры событий.При щелчке по заголовку эмиттер генерирует открытое или закрытое событие,чтобы переключить текущее состояние видимости.</target>
        </trans-unit>
        <trans-unit id="daf2c7ac24c6883d82dbb39bacd2dd7aad01ed95" translate="yes" xml:space="preserve">
          <source>In the following example, a container element wraps a list of items stamped out by an &lt;code&gt;&lt;a href=&quot;../common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. The container element contains an animation trigger that will later be set to query for each of the inner items.</source>
          <target state="translated">В следующем примере элемент контейнера оборачивает список элементов, &lt;code&gt;&lt;a href=&quot;../common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; с помощью ngFor . Элемент контейнера содержит анимационный триггер, который позже будет настроен на запрос для каждого из внутренних элементов.</target>
        </trans-unit>
        <trans-unit id="eda535300d18a5aaccbaa0e7a874fe9ca84d2dca" translate="yes" xml:space="preserve">
          <source>In the following example, an async validator ensures that heroes pick an alter ego that is not already taken. New heroes are constantly enlisting and old heroes are leaving the service, so the list of available alter egos cannot be retrieved ahead of time. To validate the potential alter ego entry, the validator must initiate an asynchronous operation to consult a central database of all currently enlisted heroes.</source>
          <target state="translated">В следующем примере асинхронный валидатор гарантирует,что герои выберут альтер-эго,которое еще не занято.Новые герои постоянно зачисляются на службу,а старые герои уходят со службы,поэтому список доступных альтер-эго не может быть получен раньше времени.Чтобы проверить потенциальную запись альтер эго,валидатор должен инициировать асинхронную операцию,чтобы обратиться к центральной базе данных всех зачисленных в настоящее время героев.</target>
        </trans-unit>
        <trans-unit id="ba9f38c751750ffec0044f30b25ab52fed51d3f3" translate="yes" xml:space="preserve">
          <source>In the following example, both uses of the &lt;code&gt;OtherComponent&lt;/code&gt; token cause retention of &lt;code&gt;OtherComponent&lt;/code&gt; (that is, prevent it from being tree-shaken when it is not used).</source>
          <target state="translated">В следующем примере оба использования токена &lt;code&gt;OtherComponent&lt;/code&gt; вызывают сохранение &lt;code&gt;OtherComponent&lt;/code&gt; (то есть предотвращают его раскачивание дерева, когда он не используется).</target>
        </trans-unit>
        <trans-unit id="b7d27f2282051c38c08c5ba5268a13c0e70b8f95" translate="yes" xml:space="preserve">
          <source>In the following example, casting &lt;code&gt;person&lt;/code&gt; to the &lt;code&gt;any&lt;/code&gt; type suppresses the error &lt;code&gt;Property address does not exist&lt;/code&gt;.</source>
          <target state="translated">В следующем примере приведение &lt;code&gt;person&lt;/code&gt; к &lt;code&gt;any&lt;/code&gt; типу подавляет ошибку. &lt;code&gt;Property address does not exist&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0c0be80d970b7039b7040a00f1d4d013a07fb7a" translate="yes" xml:space="preserve">
          <source>In the following example, chained pipes first apply a format to a date value, then convert the formatted date to uppercase characters. The first tab for the &lt;code&gt;src/app/app.component.html&lt;/code&gt; template chains &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;UpperCasePipe&lt;/a&gt;&lt;/code&gt; to display the birthday as &lt;strong&gt;APR 15, 1988&lt;/strong&gt;. The second tab for the &lt;code&gt;src/app/app.component.html&lt;/code&gt; template passes the &lt;code&gt;fullDate&lt;/code&gt; parameter to &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; before chaining to &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;uppercase&lt;/a&gt;&lt;/code&gt;, which produces &lt;strong&gt;FRIDAY, APRIL 15, 1988&lt;/strong&gt;.</source>
          <target state="translated">В следующем примере цепочки каналов сначала применяют формат к значению даты, а затем преобразуют форматированную дату в символы верхнего регистра. Первая вкладка для &lt;code&gt;src/app/app.component.html&lt;/code&gt; шаблона цепи &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;UpperCasePipe&lt;/a&gt;&lt;/code&gt; для отображения дня рождения , как &lt;strong&gt;15 апреля 1988 год&lt;/strong&gt; . Вторая вкладка для шаблона &lt;code&gt;src/app/app.component.html&lt;/code&gt; передает параметр &lt;code&gt;fullDate&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; перед преобразованием в &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;uppercase&lt;/a&gt;&lt;/code&gt; , что дает &lt;strong&gt;FRIDAY, 15 APRIL 1988&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="71f0504b947cf5e51ff21890897ccd6044cad871" translate="yes" xml:space="preserve">
          <source>In the following example, changing the text in the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; changes the value in the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; because Angular immediately updates changes through the template variable, &lt;code&gt;ref1&lt;/code&gt;.</source>
          <target state="translated">В следующем примере изменение текста в &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; изменяет значение в &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; , потому что Angular немедленно обновляет изменения с помощью переменной шаблона &lt;code&gt;ref1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="07d4a2f467fef38713e2368d4993474e3b3049f6" translate="yes" xml:space="preserve">
          <source>In the following example, however, Angular &lt;a href=&quot;security#sanitization-and-security-contexts&quot;&gt;sanitizes&lt;/a&gt; the values before displaying them.</source>
          <target state="translated">Однако в следующем примере Angular &lt;a href=&quot;security#sanitization-and-security-contexts&quot;&gt;санирует&lt;/a&gt; значения перед их отображением.</target>
        </trans-unit>
        <trans-unit id="7002095cfd601df6d3724b03478da2bfdf6f6ef9" translate="yes" xml:space="preserve">
          <source>In the following example, supplying the 'full' &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; strategy ensures that the router applies the redirect if and only if navigating to '/'.</source>
          <target state="translated">В следующем примере &lt;code&gt;&lt;a href=&quot;route#pathMatch&quot;&gt;pathMatch&lt;/a&gt;&lt;/code&gt; стратегии &amp;laquo;full&amp;raquo; pathMatch гарантирует, что маршрутизатор применяет перенаправление, если и только при переходе к &amp;laquo;/&amp;raquo;</target>
        </trans-unit>
        <trans-unit id="152808b4dfa2dfb2a4fba28e543e9d00b2e26e2f" translate="yes" xml:space="preserve">
          <source>In the following example, supplying the 'full' &lt;code&gt;pathMatch&lt;/code&gt; strategy ensures that the router applies the redirect if and only if navigating to '/'.</source>
          <target state="translated">В следующем примере предоставление стратегии &amp;laquo;full&amp;raquo; &lt;code&gt;pathMatch&lt;/code&gt; гарантирует, что маршрутизатор применяет перенаправление тогда и только тогда, когда осуществляется переход к &amp;laquo;/&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="f03d09f2145f0f8488d0b621cb15ad8cbf98ece8" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; metadata object and the class constructor tell Angular how to create and display an instance of &lt;code&gt;TypicalComponent&lt;/code&gt;.</source>
          <target state="translated">В следующем примере объект метаданных &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; и конструктор класса сообщают Angular, как создавать и отображать экземпляр &lt;code&gt;TypicalComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87c8b2b86175bcdf14e8fc1308d68a17c35a8a2f" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;childItem&lt;/code&gt; property of the &lt;code&gt;ItemDetailComponent&lt;/code&gt; expects a string, which is exactly what you're sending in the property binding:</source>
          <target state="translated">В следующем примере, &lt;code&gt;childItem&lt;/code&gt; свойство &lt;code&gt;ItemDetailComponent&lt;/code&gt; ожидает строку, которая является именно то , что вы посылаете в свойстве связывания:</target>
        </trans-unit>
        <trans-unit id="c653d272b91f35a022b3aaa5efde4f0e88ccbf1d" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;childItem&lt;/code&gt; property of the &lt;code&gt;ItemDetailComponent&lt;/code&gt; expects a string.</source>
          <target state="translated">В следующем примере свойство &lt;code&gt;childItem&lt;/code&gt; элемента &lt;code&gt;ItemDetailComponent&lt;/code&gt; ожидает строку.</target>
        </trans-unit>
        <trans-unit id="fe0c10c153d72102ce705c591678f282d3984439" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;person&lt;/code&gt; and &lt;code&gt;address&lt;/code&gt; properties are always set together, implying that &lt;code&gt;address&lt;/code&gt; is always non-null if &lt;code&gt;person&lt;/code&gt; is non-null. There is no convenient way to describe this constraint to TypeScript and the template compiler, but the error is suppressed in the example by using &lt;code&gt;address!.street&lt;/code&gt;.</source>
          <target state="translated">В следующем примере свойства &lt;code&gt;person&lt;/code&gt; и &lt;code&gt;address&lt;/code&gt; всегда задаются вместе, подразумевая, что &lt;code&gt;address&lt;/code&gt; всегда ненулевой, если &lt;code&gt;person&lt;/code&gt; ненулевой. Нет удобного способа описать это ограничение для TypeScript и компилятора шаблонов, но ошибка в этом примере подавляется с помощью &lt;code&gt;address!.street&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a8c2c89e4051bc66352ee40fcff2387a159fe44" translate="yes" xml:space="preserve">
          <source>In the following example, the dependency can be resolved by the local injector when instantiating the class itself, but not when instantiating a child.</source>
          <target state="translated">В следующем примере зависимость может быть решена локальным инжектором,когда инстанцируется сам класс,но не когда инстанцируется ребенок.</target>
        </trans-unit>
        <trans-unit id="6642cb00d9e5a2ab01358f07d9d792e0040e3173" translate="yes" xml:space="preserve">
          <source>In the following example, the dependency can be resolved when instantiating a child, but not when instantiating the class itself.</source>
          <target state="translated">В следующем примере зависимость может быть решена при инстанцировании ребенка,но не при инстанцировании самого класса.</target>
        </trans-unit>
        <trans-unit id="7e4d63a4f8062e875d1e6ed5ee6b5e59adf2c961" translate="yes" xml:space="preserve">
          <source>In the following example, the error &lt;code&gt;Property addresss does not exist&lt;/code&gt; is suppressed by casting &lt;code&gt;person&lt;/code&gt; to the &lt;code&gt;any&lt;/code&gt; type.</source>
          <target state="translated">В следующем примере ошибка &lt;code&gt;Property addresss does not exist&lt;/code&gt; подавляется путем приведения &lt;code&gt;person&lt;/code&gt; к &lt;code&gt;any&lt;/code&gt; типу.</target>
        </trans-unit>
        <trans-unit id="562706a4e12d6092424ac9d37c82b8da887b3ddb" translate="yes" xml:space="preserve">
          <source>In the following example, the hero form uses the &lt;code&gt;.ng-valid&lt;/code&gt; and &lt;code&gt;.ng-invalid&lt;/code&gt; classes to set the color of each form control's border.</source>
          <target state="translated">В следующем примере форма героя использует классы &lt;code&gt;.ng-valid&lt;/code&gt; и &lt;code&gt;.ng-invalid&lt;/code&gt; для установки цвета границы каждого элемента управления формы.</target>
        </trans-unit>
        <trans-unit id="7663b43194ad1c35a2249f294f3b0c9a0ab1d18b" translate="yes" xml:space="preserve">
          <source>In the following example, the mock is a spy object.</source>
          <target state="translated">В следующем примере насмешка-это шпионский объект.</target>
        </trans-unit>
        <trans-unit id="2b33cf5a735f73710d739825bb0ebb9e113d2114" translate="yes" xml:space="preserve">
          <source>In the following example, the offset values describe when each &lt;code&gt;backgroundColor&lt;/code&gt; value is applied. The color is red at the start, and changes to blue when 20% of the total time has elapsed.</source>
          <target state="translated">В следующем примере значения смещения описывают, когда применяется каждое значение &lt;code&gt;backgroundColor&lt;/code&gt; . В начале цвет красный, а по истечении 20% от общего времени - синий.</target>
        </trans-unit>
        <trans-unit id="24025e5e5f590539cab86355ec040952c01584ba" translate="yes" xml:space="preserve">
          <source>In the following example, the optional, injected &lt;code&gt;UserServiceConfig&lt;/code&gt; extends the greeting &lt;code&gt;UserService&lt;/code&gt;. If a &lt;code&gt;UserServiceConfig&lt;/code&gt; exists, the &lt;code&gt;UserService&lt;/code&gt; sets the user name from that config.</source>
          <target state="translated">В следующем примере необязательный &lt;code&gt;UserServiceConfig&lt;/code&gt; расширяет приветствие &lt;code&gt;UserService&lt;/code&gt; . Если существует &lt;code&gt;UserServiceConfig&lt;/code&gt; , &lt;code&gt;UserService&lt;/code&gt; устанавливает имя пользователя из этой конфигурации.</target>
        </trans-unit>
        <trans-unit id="79980625496444d650c75674c1a6f2e716b5d188" translate="yes" xml:space="preserve">
          <source>In the following example, the parent &lt;code&gt;AlexComponent&lt;/code&gt; has several children including a &lt;code&gt;CathyComponent&lt;/code&gt;:</source>
          <target state="translated">В следующем примере родительский &lt;code&gt;AlexComponent&lt;/code&gt; имеет несколько детей, включая &lt;code&gt;CathyComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="97bde64184548aee2d9e6e03dbad3ef9c4f94d3b" translate="yes" xml:space="preserve">
          <source>In the following example, the property takes an enumerated value, so the schematic automatically chooses the list type, and creates a menu from the possible values.</source>
          <target state="translated">В следующем примере свойство принимает перечисляемое значение,поэтому схема автоматически выбирает тип списка и создает меню из возможных значений.</target>
        </trans-unit>
        <trans-unit id="6c392769910b861e7b93dfe5e5804173fd59771a" translate="yes" xml:space="preserve">
          <source>In the following example, the template statement &lt;code&gt;deleteHero()&lt;/code&gt; appears in quotes to the right of the &lt;code&gt;=&lt;/code&gt; symbol as in &lt;code&gt;(event)=&quot;statement&quot;&lt;/code&gt;.</source>
          <target state="translated">В следующем примере оператор шаблона &lt;code&gt;deleteHero()&lt;/code&gt; появляется в кавычках справа от символа &lt;code&gt;=&lt;/code&gt; , как в &lt;code&gt;(event)=&quot;statement&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c54e3333d43519134c5d78d38632858279c3d079" translate="yes" xml:space="preserve">
          <source>In the following example, the two-way binding means that &lt;code&gt;optionName&lt;/code&gt; should be written when the &lt;code&gt;valueChange&lt;/code&gt; event fires.</source>
          <target state="translated">В следующем примере двусторонняя привязка означает, что &lt;code&gt;optionName&lt;/code&gt; следует записывать при &lt;code&gt;valueChange&lt;/code&gt; события valueChange .</target>
        </trans-unit>
        <trans-unit id="681d32dc4e5adc22dab536e5b1be6eebdc4f1f76" translate="yes" xml:space="preserve">
          <source>In the following example, using groups on both &lt;code&gt;:enter&lt;/code&gt; and &lt;code&gt;:leave&lt;/code&gt; allow for two different timing configurations. They're applied to the same element in parallel, but run independently.</source>
          <target state="translated">В следующем примере использование групп в обоих &lt;code&gt;:enter&lt;/code&gt; и &lt;code&gt;:leave&lt;/code&gt; разрешение для двух разных конфигураций синхронизации. Они применяются к одному и тому же элементу параллельно, но работают независимо.</target>
        </trans-unit>
        <trans-unit id="8e243f96c1e3aa3da393a2b376a50bcdce46ecb5" translate="yes" xml:space="preserve">
          <source>In the following example, we bind the &lt;code&gt;colspan&lt;/code&gt; attribute to the expression &lt;code&gt;1 + 1&lt;/code&gt;.</source>
          <target state="translated">В следующем примере мы привязываем атрибут &lt;code&gt;colspan&lt;/code&gt; к выражению &lt;code&gt;1 + 1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd98385101f7ec15002cf4d6b360a40c88e98235" translate="yes" xml:space="preserve">
          <source>In the following section, validation is performed asynchronously to ensure that our heroes pick an alter ego that is not already taken. New heroes are constantly enlisting and old heroes are leaving the service. That means that we do not have the list of available alter egos ahead of time.</source>
          <target state="translated">В следующем разделе проверка выполняется асинхронно,чтобы убедиться,что наши герои выбрали альтер-эго,которое еще не занято.Новые герои постоянно зачисляются на службу,а старые герои уходят со службы.Это означает,что у нас нет списка доступных альтер-эго заранее.</target>
        </trans-unit>
        <trans-unit id="6c3b3d738b040ea34330a9874710677277ec5aa4" translate="yes" xml:space="preserve">
          <source>In the following section, we will make sure that our heroes do not reveal their true identities by filling out the Hero Form. We will do that by validating that the hero names and alter egos do not match.</source>
          <target state="translated">В следующем разделе мы позаботимся о том,чтобы наши герои не раскрывали свою истинную сущность,заполнив Форму Героя.Мы сделаем это,подтвердив,что имена героев и их эго не совпадают.</target>
        </trans-unit>
        <trans-unit id="d5e8ea1209a297ac53c182cdecd191c2bcbcffe8" translate="yes" xml:space="preserve">
          <source>In the following sections, we will create a new schematics collection using the CLI in order to introduce the files and file structure, and some of the basic concepts.</source>
          <target state="translated">В следующих разделах мы создадим новую коллекцию схем,используя CLI,чтобы представить файлы и файловую структуру,а также некоторые из основных понятий.</target>
        </trans-unit>
        <trans-unit id="0acace1863c72c536f219d9c87ba3c000a59f9d9" translate="yes" xml:space="preserve">
          <source>In the following snippet, &lt;code&gt;{{ currentCustomer }}&lt;/code&gt; is an example of interpolation.</source>
          <target state="translated">В следующем фрагменте &lt;code&gt;{{ currentCustomer }}&lt;/code&gt; является примером интерполяции.</target>
        </trans-unit>
        <trans-unit id="f92a97dafecf0ff63df469ad3dbf2f7287a1ee03" translate="yes" xml:space="preserve">
          <source>In the following typical example, the &lt;code&gt;Logger&lt;/code&gt; class itself provides a &lt;code&gt;Logger&lt;/code&gt; instance.</source>
          <target state="translated">В следующем типичном примере сам класс &lt;code&gt;Logger&lt;/code&gt; предоставляет экземпляр &lt;code&gt;Logger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9263e2adc28d440e0cdfa9d945ab8ceef993f6ee" translate="yes" xml:space="preserve">
          <source>In the initial route configuration, you provided a simple setup with two routes used to configure the application for routing. This is perfectly fine for simple routing. As the application grows and you make use of more &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; features, such as guards, resolvers, and child routing, you'll naturally want to refactor the routing configuration into its own file. We recommend moving the routing information into a special-purpose module called a &lt;em&gt;Routing Module&lt;/em&gt;.</source>
          <target state="translated">В начальной конфигурации маршрута вы предоставили простую настройку с двумя маршрутами, используемыми для настройки приложения для маршрутизации. Это прекрасно для простой маршрутизации. По мере роста приложения и использования дополнительных функций &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; , таких как защита, распознаватели и дочерняя маршрутизация, вы, естественно, захотите реорганизовать конфигурацию маршрутизации в свой собственный файл. Мы рекомендуем переместить информацию о маршрутизации в специальный модуль, называемый модулем &lt;em&gt;маршрутизации&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ecc8204fd046d58554a4265d4a7d62d6183d43e8" translate="yes" xml:space="preserve">
          <source>In the lazy-loaded module's routing module, add a route for the component.</source>
          <target state="translated">В ленивом модуле маршрутизации добавьте маршрут для компонента.</target>
        </trans-unit>
        <trans-unit id="8939bb7d20361052e28964c91af95d20bb24f0bb" translate="yes" xml:space="preserve">
          <source>In the logical tree, this would be represented as follows:</source>
          <target state="translated">В логическом дереве это будет представлено следующим образом:</target>
        </trans-unit>
        <trans-unit id="e61466e206b3ec0ac4d4feec978969505b42cf15" translate="yes" xml:space="preserve">
          <source>In the marketplace, search for Angular Language Service extension, and click the &lt;strong&gt;Install&lt;/strong&gt; button.</source>
          <target state="translated">В магазине найдите расширение Angular Language Service и нажмите кнопку &lt;strong&gt;Установить&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="ee29ab8b4fc806fd90c92d9225b82f01c19a7e67" translate="yes" xml:space="preserve">
          <source>In the meantime, the user's browser decides to evict &lt;code&gt;lazy-chunk.&amp;lt;lazy-hash-1&amp;gt;.js&lt;/code&gt; from its cache. Browsers may decide to evict specific (or all) resources from a cache in order to reclaim disk space.</source>
          <target state="translated">Тем временем браузер пользователя решает удалить &lt;code&gt;lazy-chunk.&amp;lt;lazy-hash-1&amp;gt;.js&lt;/code&gt; из своего кеша. Браузеры могут решить удалить определенные (или все) ресурсы из кеша, чтобы освободить место на диске.</target>
        </trans-unit>
        <trans-unit id="135913a2ad9622082620cc8052cee479a2283783" translate="yes" xml:space="preserve">
          <source>In the microsyntax expression, set &lt;code&gt;trackBy&lt;/code&gt; to the &lt;code&gt;trackByItems()&lt;/code&gt; method.</source>
          <target state="translated">В выражении microsyntax, установить &lt;code&gt;trackBy&lt;/code&gt; к &lt;code&gt;trackByItems()&lt;/code&gt; метода.</target>
        </trans-unit>
        <trans-unit id="1161c17590b5bc612006dc669107bf6f21e58fcd" translate="yes" xml:space="preserve">
          <source>In the most basic type-checking mode, with the &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; flag set to &lt;code&gt;false&lt;/code&gt;, Angular validates only top-level expressions in a template.</source>
          <target state="translated">В самом основном режиме проверки типов, &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; флага fullTemplateTypeCheck установлено значение &lt;code&gt;false&lt;/code&gt; , Angular проверяет только выражения верхнего уровня в шаблоне.</target>
        </trans-unit>
        <trans-unit id="aeae7e3450618ec2a6c67802527cba205d86410b" translate="yes" xml:space="preserve">
          <source>In the new files, change every mention of &quot;hero&quot; to &quot;crisis&quot;, and &quot;heroes&quot; to &quot;crises&quot;.</source>
          <target state="translated">В новых файлах изменить каждое упоминание &quot;героя&quot; на &quot;кризис&quot;,а &quot;героев&quot; на &quot;кризисы&quot;.</target>
        </trans-unit>
        <trans-unit id="cab7ba9e3cb300cd56f89341c1fe5eaa7652a159" translate="yes" xml:space="preserve">
          <source>In the new version, you import the Angular HTTP module and call its &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service instead of &lt;code&gt;ngResource&lt;/code&gt;.</source>
          <target state="translated">В новой версии вы импортируете модуль Angular HTTP и вызываете его службу &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;ngResource&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa45dc36ef2e509c03cb485f20fb4a25dc19e3d0" translate="yes" xml:space="preserve">
          <source>In the next example, the component uses the default, aggressive change detection strategy to monitor and update its display of every hero in the &lt;code&gt;heroes&lt;/code&gt; array. Here's the template:</source>
          <target state="translated">В следующем примере компонент использует стратегию обнаружения агрессивных изменений по умолчанию для отслеживания и обновления отображения каждого героя в массиве &lt;code&gt;heroes&lt;/code&gt; . Вот шаблон:</target>
        </trans-unit>
        <trans-unit id="21babd8c9e3406ba32d7975f643689c6321dff5c" translate="yes" xml:space="preserve">
          <source>In the next section, define an &lt;code&gt;onSelect()&lt;/code&gt; method in &lt;code&gt;HeroesComponent&lt;/code&gt; to display the hero that was defined in the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; expression.</source>
          <target state="translated">В следующем разделе определите метод &lt;code&gt;onSelect()&lt;/code&gt; в &lt;code&gt;HeroesComponent&lt;/code&gt; , чтобы отобразить героя, определенного в выражении &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0e27fa6280b06a48c06de4d2223a0f2a93964163" translate="yes" xml:space="preserve">
          <source>In the normal course of HTML development, you create a visual structure with HTML elements, and you modify those elements by setting element attributes with string constants.</source>
          <target state="translated">В ходе обычного процесса разработки HTML вы создаете визуальную структуру с элементами HTML,и вы модифицируете эти элементы,устанавливая атрибуты элементов со строковыми константами.</target>
        </trans-unit>
        <trans-unit id="5df49583093875b25bd10a8f1c9aa47bad102a04" translate="yes" xml:space="preserve">
          <source>In the parent</source>
          <target state="translated">В родителе</target>
        </trans-unit>
        <trans-unit id="f6cd4009229c716121ae40e31ca29e7d231e9536" translate="yes" xml:space="preserve">
          <source>In the parent component class, designate a value for &lt;code&gt;currentItem&lt;/code&gt;:</source>
          <target state="translated">В родительском классе компонента &lt;code&gt;currentItem&lt;/code&gt; значение для currentItem :</target>
        </trans-unit>
        <trans-unit id="4ed3fcdf2f49b1de9c02b587cd3980ece017f8c4" translate="yes" xml:space="preserve">
          <source>In the parent's template</source>
          <target state="translated">В родительском шаблоне</target>
        </trans-unit>
        <trans-unit id="193ba2131cd5b3d9617d379626162cf928d3798c" translate="yes" xml:space="preserve">
          <source>In the parent's template, bind the parent's method to the child's event.</source>
          <target state="translated">В родительском шаблоне привяжите родительский метод к дочернему событию.</target>
        </trans-unit>
        <trans-unit id="9448f1e5e82adc8fa114ca01e663ddcb3ca64590" translate="yes" xml:space="preserve">
          <source>In the preview page, you should see a URL that looks like &lt;code&gt;https://&amp;lt;Project ID&amp;gt;.stackblitz.io&lt;/code&gt;.</source>
          <target state="translated">На странице предварительного просмотра вы должны увидеть URL-адрес, который выглядит как &lt;code&gt;https://&amp;lt;Project ID&amp;gt;.stackblitz.io&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="12b331a031d5526e2ce679556bb4798bc27c1678" translate="yes" xml:space="preserve">
          <source>In the preview pane, hold the pointer over a product name to see the bound name property value, which is the product name plus the word &quot;details&quot;. Interpolation &lt;code&gt;{{ }}&lt;/code&gt; lets you render the property value as text; property binding &lt;code&gt;[ ]&lt;/code&gt; lets you use the property value in a template expression.</source>
          <target state="translated">На панели предварительного просмотра удерживайте указатель над именем продукта, чтобы увидеть значение свойства связанного имени, которое представляет собой имя продукта плюс слово &amp;laquo;детали&amp;raquo;. Интерполяция &lt;code&gt;{{ }}&lt;/code&gt; позволяет отображать значение свойства в виде текста; Привязка свойства &lt;code&gt;[ ]&lt;/code&gt; позволяет использовать значение свойства в выражении шаблона.</target>
        </trans-unit>
        <trans-unit id="f527efcbc5138dc59f029ba483544b213cb3a7c6" translate="yes" xml:space="preserve">
          <source>In the preview pane, you should see a URL that looks like &lt;code&gt;https://&amp;lt;Project ID&amp;gt;.stackblitz.io&lt;/code&gt;.</source>
          <target state="translated">На панели предварительного просмотра вы должны увидеть URL-адрес, который выглядит как &lt;code&gt;https://&amp;lt;Project ID&amp;gt;.stackblitz.io&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b0f4cf5ae261da923380b748662b8cfdefddb57" translate="yes" xml:space="preserve">
          <source>In the previous code sample, the second &lt;code&gt;fetch&lt;/code&gt; pipe binding demonstrates more pipe chaining. It displays the same hero data in JSON format by chaining through to the built-in &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В предыдущем примере кода вторая привязка канала &lt;code&gt;fetch&lt;/code&gt; демонстрирует больше цепочек каналов. Он отображает те же данные о героях в формате JSON, соединяя их со встроенным &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="01a420c7f79a44c801ee09dbcac8fa73d6879ec4" translate="yes" xml:space="preserve">
          <source>In the previous example, the call to &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; did not specify any options. By default, it returned the JSON data contained in the response body.</source>
          <target state="translated">В предыдущем примере вызов &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; не указывал никаких параметров. По умолчанию он возвращает данные JSON, содержащиеся в теле ответа.</target>
        </trans-unit>
        <trans-unit id="2ad8b81ae652063e5ec08425ca076c90868e19f1" translate="yes" xml:space="preserve">
          <source>In the previous example, the current state of the input box is lost if the user mouses away and clicks elsewhere on the page without first pressing &lt;em&gt;Enter&lt;/em&gt;. The component's &lt;code&gt;value&lt;/code&gt; property is updated only when the user presses &lt;em&gt;Enter&lt;/em&gt;.</source>
          <target state="translated">В предыдущем примере текущее состояние поля ввода теряется, если пользователь отключается и щелкает в другом месте на странице, не нажимая сначала клавишу &lt;em&gt;Enter&lt;/em&gt; . Свойство &lt;code&gt;value&lt;/code&gt; компонента обновляется только тогда, когда пользователь нажимает &lt;em&gt;Enter&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="763460cc5323fe0919754ecc16f1acecffc53597" translate="yes" xml:space="preserve">
          <source>In the previous example, the then-clause template is specified inline, as the content of the tag that contains the &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; directive. You can also specify a template that is defined externally, by referencing a labeled &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element. When you do this, you can change which template to use at runtime, as shown in the following example.</source>
          <target state="translated">В предыдущем примере шаблон then-условия указан как встроенный, как содержимое тега, содержащего директиву &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; . Вы также можете указать шаблон, который определяется извне, ссылаясь на помеченный элемент &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; . Когда вы сделаете это, вы можете изменить, какой шаблон использовать во время выполнения, как показано в следующем примере.</target>
        </trans-unit>
        <trans-unit id="4a19249881705cdc1b85acc1634672c260e4f10e" translate="yes" xml:space="preserve">
          <source>In the previous section, we saw a simple two-state transition. Now we'll create an animation with multiple steps run in sequence using &lt;em&gt;keyframes&lt;/em&gt;.</source>
          <target state="translated">В предыдущем разделе мы увидели простой переход из двух состояний. Теперь мы создадим анимацию с несколькими последовательными шагами, используя &lt;em&gt;ключевые кадры&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="75e13f3b00323a0edd780a29605d91a4037e1e98" translate="yes" xml:space="preserve">
          <source>In the product alert template, &lt;code&gt;product-alerts.component.html&lt;/code&gt;, update the &quot;Notify Me&quot; button with an event binding to call the &lt;code&gt;notify.emit()&lt;/code&gt; method.</source>
          <target state="translated">В шаблоне оповещения о &lt;code&gt;product-alerts.component.html&lt;/code&gt; обновите кнопку &amp;laquo;Уведомить меня&amp;raquo;, &lt;code&gt;notify.emit()&lt;/code&gt; привязку к событию, чтобы вызвать метод notify.emit () .</target>
        </trans-unit>
        <trans-unit id="0360d761f9068dfd9ca829b686f2df2fa1225044" translate="yes" xml:space="preserve">
          <source>In the real world, you might have to accumulate the users changes, validate across fields, validate on the server, or hold changes in a pending state until the user confirms them as a group or cancels and reverts all changes.</source>
          <target state="translated">В реальном мире вам,возможно,придется накапливать изменения пользователей,проверять поля,проверять на сервере,или держать изменения в состоянии ожидания до тех пор,пока пользователь не подтвердит их как группу или не отменит и не вернет все изменения.</target>
        </trans-unit>
        <trans-unit id="ea818ef7af8d7132c773be77df3abe5612f313e0" translate="yes" xml:space="preserve">
          <source>In the real world, you might have to accumulate the users changes. You might have to validate across fields. You might have to validate on the server. You might have to hold changes in a pending state until the user confirms them &lt;em&gt;as a group&lt;/em&gt; or cancels and reverts all changes.</source>
          <target state="translated">В реальном мире вам, возможно, придется накопить изменения пользователей. Возможно, вам придется проверить через поля. Возможно, вам придется проверить на сервере. Возможно, вам придется хранить изменения в состоянии ожидания, пока пользователь не подтвердит их &lt;em&gt;как группу&lt;/em&gt; или не отменит и не отменит все изменения.</target>
        </trans-unit>
        <trans-unit id="04ff1f44e350c222b1e5578340bd8b97370a5ce6" translate="yes" xml:space="preserve">
          <source>In the root folder of your e2e tests project, create a new file named &lt;code&gt;protractor-ci.conf.js&lt;/code&gt;. This new file extends the original &lt;code&gt;protractor.conf.js&lt;/code&gt;.</source>
          <target state="translated">В корневой папке вашего проекта тестирования e2e создайте новый файл с именем &lt;code&gt;protractor-ci.conf.js&lt;/code&gt; . Этот новый файл расширяет оригинальный файл &lt;code&gt;protractor.conf.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e83762a98939c0a3a7a3035af5d78fda350610db" translate="yes" xml:space="preserve">
          <source>In the same file (&lt;code&gt;HeroesComponent&lt;/code&gt; class), define a component property called &lt;code&gt;heroes&lt;/code&gt; to expose the &lt;code&gt;HEROES&lt;/code&gt; array for binding.</source>
          <target state="translated">В том же файле ( класс &lt;code&gt;HeroesComponent&lt;/code&gt; ) определите свойство компонента с именем &lt;code&gt;heroes&lt;/code&gt; , чтобы предоставить массив &lt;code&gt;HEROES&lt;/code&gt; для привязки.</target>
        </trans-unit>
        <trans-unit id="de3aa6f39e38ab8dae66e318d5fbdd408f9fe728" translate="yes" xml:space="preserve">
          <source>In the second approach, add &lt;code&gt;&lt;a href=&quot;../api/core/no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;TestBed.schemas&lt;/code&gt; metadata.</source>
          <target state="translated">Во втором подходе добавьте &lt;code&gt;&lt;a href=&quot;../api/core/no_errors_schema&quot;&gt;NO_ERRORS_SCHEMA&lt;/a&gt;&lt;/code&gt; в метаданные &lt;code&gt;TestBed.schemas&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ebf229663e5442007be46c7c1f0611fa1c4d2bac" translate="yes" xml:space="preserve">
          <source>In the second case, TypeScript infers the type of &lt;code&gt;options&lt;/code&gt; to be &lt;code&gt;{responseType: string}&lt;/code&gt;. The type is too wide to pass to &lt;code&gt;HttpClient.get&lt;/code&gt; which is expecting the type of &lt;code&gt;responseType&lt;/code&gt; to be one of the &lt;em&gt;specific&lt;/em&gt; strings. &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; is typed explicitly this way so that the compiler can report the correct return type based on the options you provided.</source>
          <target state="translated">Во втором случае TypeScript определяет тип &lt;code&gt;options&lt;/code&gt; как &lt;code&gt;{responseType: string}&lt;/code&gt; . Тип слишком широк для передачи в &lt;code&gt;HttpClient.get&lt;/code&gt; , который ожидает, что тип &lt;code&gt;responseType&lt;/code&gt; будет одной из &lt;em&gt;конкретных&lt;/em&gt; строк. &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; явно набирается таким образом, чтобы компилятор мог сообщить правильный тип возвращаемого значения на основе предоставленных вами параметров.</target>
        </trans-unit>
        <trans-unit id="431f8caabee69341acea4b6f059e0ce718e1b02a" translate="yes" xml:space="preserve">
          <source>In the service worker configuration file &lt;code&gt;ngsw-config.json&lt;/code&gt;, &lt;code&gt;versionedFiles&lt;/code&gt; and &lt;code&gt;files&lt;/code&gt; have the same behavior. As of v6, &lt;code&gt;versionedFiles&lt;/code&gt; is deprecated; use &lt;code&gt;files&lt;/code&gt; instead.</source>
          <target state="translated">В файл конфигурации службы работника &lt;code&gt;ngsw-config.json&lt;/code&gt; , &lt;code&gt;versionedFiles&lt;/code&gt; и &lt;code&gt;files&lt;/code&gt; имеют одинаковое поведение. Начиная с версии 6 &lt;code&gt;versionedFiles&lt;/code&gt; устарела; используйте &lt;code&gt;files&lt;/code&gt; вместо.</target>
        </trans-unit>
        <trans-unit id="bc40e4dc159163c26df92dd1a1e680e199a71f26" translate="yes" xml:space="preserve">
          <source>In the short form, the type is inferred from the property's type and constraints.</source>
          <target state="translated">В короткой форме тип выводится из типа объекта и ограничений.</target>
        </trans-unit>
        <trans-unit id="d0f5a292f2cae7ab9d3d79db4add6202faa4eff6" translate="yes" xml:space="preserve">
          <source>In the table below, you can find a list of packages which implement deployment functionality to different platforms. The &lt;code&gt;deploy&lt;/code&gt; command for each package may require different command line options. You can read more by following the links associated with the package names below:</source>
          <target state="translated">В таблице ниже вы можете найти список пакетов, которые реализуют функциональность развертывания на разных платформах. &lt;code&gt;deploy&lt;/code&gt; команды для каждого пакета может потребоваться различные параметры командной строки. Вы можете прочитать больше, перейдя по ссылкам, связанным с именами пакетов ниже:</target>
        </trans-unit>
        <trans-unit id="80a71042ab5f19d1b606e00cd661194ad1abb6c7" translate="yes" xml:space="preserve">
          <source>In the template tree, select &lt;code&gt;Templates&lt;/code&gt; | &lt;code&gt;Visual C#&lt;/code&gt; (or &lt;code&gt;Visual Basic&lt;/code&gt;) | &lt;code&gt;Web&lt;/code&gt;.</source>
          <target state="translated">В дереве шаблонов выберите &lt;code&gt;Templates&lt;/code&gt; | &lt;code&gt;Visual C#&lt;/code&gt; (или &lt;code&gt;Visual Basic&lt;/code&gt; ) | &lt;code&gt;Web&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53cc553ac138c2e23462667f98a5b59c505018c2" translate="yes" xml:space="preserve">
          <source>In the template type-checking phase, the Angular template compiler uses the TypeScript compiler to validate the binding expressions in templates. Enable this phase explicitly by adding the compiler option &lt;code&gt;&quot;fullTemplateTypeCheck&quot;&lt;/code&gt; in the &lt;code&gt;&quot;angularCompilerOptions&quot;&lt;/code&gt; of the project's &lt;code&gt;tsconfig.json&lt;/code&gt; (see &lt;a href=&quot;angular-compiler-options&quot;&gt;Angular Compiler Options&lt;/a&gt;).</source>
          <target state="translated">На этапе проверки типа шаблона компилятор шаблона Angular использует компилятор TypeScript для проверки выражений привязки в шаблонах. Включите этот этап явно, добавив параметр компилятора &lt;code&gt;&quot;fullTemplateTypeCheck&quot;&lt;/code&gt; в &lt;code&gt;&quot;angularCompilerOptions&quot;&lt;/code&gt; в &lt;code&gt;tsconfig.json&lt;/code&gt; проекта (см. &lt;a href=&quot;angular-compiler-options&quot;&gt;Параметры углового компилятора&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a81a0084e724fa8d67181befb8d1973d9b649133" translate="yes" xml:space="preserve">
          <source>In the template, each control is displayed as a separate input field.</source>
          <target state="translated">В шаблоне каждый элемент управления отображается как отдельное поле ввода.</target>
        </trans-unit>
        <trans-unit id="ebcb733aa3fcdeeca539a469b4874e83e11653a1" translate="yes" xml:space="preserve">
          <source>In the template, include the non-null assertion operator &lt;code&gt;!&lt;/code&gt; at the end of a nullable expression, such as &lt;code&gt;&amp;lt;user-detail [user]=&quot;user!&quot; /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Включите в шаблон ненулевой оператор утверждения &lt;code&gt;!&lt;/code&gt; в конце выражения, допускающего значение NULL, например &lt;code&gt;&amp;lt;user-detail [user]=&quot;user!&quot; /&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f973f5113f94431e75ce55450b06c69738655c9" translate="yes" xml:space="preserve">
          <source>In the template, place a &quot;New Hero&quot; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; element at the bottom of the form.</source>
          <target state="translated">В шаблоне разместите элемент &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &amp;laquo;Новый герой&amp;raquo; внизу формы.</target>
        </trans-unit>
        <trans-unit id="4d5b02da4c4c29131d5446cd9c56b5adca992c39" translate="yes" xml:space="preserve">
          <source>In the template, the &lt;code&gt;aria-label&lt;/code&gt; attribute ensures that the control is accessible to screen readers.</source>
          <target state="translated">В шаблоне атрибут &lt;code&gt;aria-label&lt;/code&gt; обеспечивает доступность элемента управления для программ чтения с экрана.</target>
        </trans-unit>
        <trans-unit id="a62513ae1ff1a6a6efa8b1e4006e3b394f8cda0b" translate="yes" xml:space="preserve">
          <source>In the template, you use the hash symbol, &lt;code&gt;#&lt;/code&gt;, to declare a template variable. The following template variable, &lt;code&gt;#phone&lt;/code&gt;, declares a &lt;code&gt;phone&lt;/code&gt; variable on an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">В шаблоне вы используете символ решетки &lt;code&gt;#&lt;/code&gt; для объявления переменной шаблона. Следующая переменная шаблона, &lt;code&gt;#phone&lt;/code&gt; , объявляет переменную &lt;code&gt;phone&lt;/code&gt; в элементе &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3123807d4c800f4e675338a3f651fcf553e5eb18" translate="yes" xml:space="preserve">
          <source>In the terminal window at the root of your project, install the &lt;code&gt;devDependencies&lt;/code&gt; with &lt;code&gt;npm&lt;/code&gt; or &lt;code&gt;yarn&lt;/code&gt;:</source>
          <target state="translated">В окне терминала в корневом каталоге вашего проекта, установите &lt;code&gt;devDependencies&lt;/code&gt; с &lt;code&gt;npm&lt;/code&gt; или &lt;code&gt;yarn&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="65a72a975b3735dcf036c8f8c9493f16a7f24225" translate="yes" xml:space="preserve">
          <source>In the tree on the left, select &lt;code&gt;Projects and Solutions&lt;/code&gt; | &lt;code&gt;External Web Tools&lt;/code&gt;.</source>
          <target state="translated">В дереве слева выберите &lt;code&gt;Projects and Solutions&lt;/code&gt; | &lt;code&gt;External Web Tools&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ba4a7c7d59a8cba5b32269012bfcf935dd49cc8" translate="yes" xml:space="preserve">
          <source>In the two-state button example, the wildcard isn't that useful because there are only two possible states, &lt;code&gt;open&lt;/code&gt; and &lt;code&gt;closed&lt;/code&gt;. Wildcard states are better when an element in one particular state has multiple potential states that it can change to. If the button can change from &lt;code&gt;open&lt;/code&gt; to either &lt;code&gt;closed&lt;/code&gt; or something like &lt;code&gt;inProgress&lt;/code&gt;, using a wildcard state could reduce the amount of coding needed.</source>
          <target state="translated">В примере кнопки с двумя состояниями подстановочный знак не так полезен, потому что есть только два возможных состояния: &lt;code&gt;open&lt;/code&gt; и &lt;code&gt;closed&lt;/code&gt; . Состояния с подстановочными знаками лучше, когда элемент в одном конкретном состоянии имеет несколько потенциальных состояний, в которые он может измениться. Если кнопка может измениться с &lt;code&gt;open&lt;/code&gt; на &lt;code&gt;closed&lt;/code&gt; или что-то вроде &lt;code&gt;inProgress&lt;/code&gt; , использование состояния подстановочного знака может уменьшить объем необходимого кодирования.</target>
        </trans-unit>
        <trans-unit id="5953890c3c12b1a1d4e4941138925956ddcb1936" translate="yes" xml:space="preserve">
          <source>In these cases, you can use a special wildcard &lt;code&gt;*&lt;/code&gt; property value under &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt;, so that the value of that particular style property is computed at runtime and then plugged into the animation.</source>
          <target state="translated">В этих случаях вы можете использовать специальное значение свойства подстановочного знака &lt;code&gt;*&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;()&lt;/code&gt; , чтобы значение этого конкретного свойства стиля вычислялось во время выполнения, а затем вставлялось в анимацию.</target>
        </trans-unit>
        <trans-unit id="2e96b145ad3ef101a9a5349da867c2602f97778e" translate="yes" xml:space="preserve">
          <source>In these situations, it is possible to &lt;em&gt;upgrade&lt;/em&gt; an AngularJS provider to Angular. This makes it possible to then inject it somewhere in Angular code. For example, you might have a service called &lt;code&gt;HeroesService&lt;/code&gt; in AngularJS:</source>
          <target state="translated">В этих ситуациях можно &lt;em&gt;обновить&lt;/em&gt; поставщика AngularJS до Angular. Это позволяет затем внедрить его где-нибудь в коде Angular. Например, у вас может быть сервис под названием &lt;code&gt;HeroesService&lt;/code&gt; в AngularJS:</target>
        </trans-unit>
        <trans-unit id="540f547baf27d40ff42671c435006ba47fae2226" translate="yes" xml:space="preserve">
          <source>In this &lt;em&gt;Tour of Heroes&lt;/em&gt; tutorial, you will build an app that helps a staffing agency manage its stable of heroes.</source>
          <target state="translated">В этом уроке &amp;laquo; &lt;em&gt;Тур героев&amp;raquo;&lt;/em&gt; вы создадите приложение, которое поможет кадровому агентству управлять своей группой героев.</target>
        </trans-unit>
        <trans-unit id="e98ea4cfef6e5f121ccbfc306924f5544139d4ea" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is displaying an array, but &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; can repeat items for any &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;iterable&lt;/a&gt; object.</source>
          <target state="translated">В этом случае &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; отображает массив, но &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; может повторять элементы для любого &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols&quot;&gt;повторяемого&lt;/a&gt; объекта.</target>
        </trans-unit>
        <trans-unit id="9152d9aaf0f4804a6151c4e1e55932c83c01c34e" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorates the property &lt;code&gt;item&lt;/code&gt;, which has a type of &lt;code&gt;string&lt;/code&gt;, however, &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; properties can have any type, such as &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, or &lt;code&gt;object&lt;/code&gt;. The value for &lt;code&gt;item&lt;/code&gt; comes from the parent component.</source>
          <target state="translated">В этом случае &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; украшает &lt;code&gt;item&lt;/code&gt; свойства , который имеет тип &lt;code&gt;string&lt;/code&gt; , однако свойства &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; могут иметь любой тип, например &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; , &lt;code&gt;boolean&lt;/code&gt; или &lt;code&gt;object&lt;/code&gt; . Значение &lt;code&gt;item&lt;/code&gt; поступает от родительского компонента.</target>
        </trans-unit>
        <trans-unit id="6b79b6ff431d28fff0de7299c5e8f98be33e351c" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorates the property &lt;code&gt;item&lt;/code&gt;, which has a type of &lt;code&gt;string&lt;/code&gt;, however, &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; properties can have any type, such as &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;string&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, or &lt;code&gt;object&lt;/code&gt;. The value for &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; will come from the parent component, which the next section covers.</source>
          <target state="translated">В этом случае &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; украшает &lt;code&gt;item&lt;/code&gt; свойства , который имеет тип &lt;code&gt;string&lt;/code&gt; , однако свойства &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; могут иметь любой тип, например &lt;code&gt;number&lt;/code&gt; , &lt;code&gt;string&lt;/code&gt; , &lt;code&gt;boolean&lt;/code&gt; или &lt;code&gt;object&lt;/code&gt; . Значение для &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; будет получено из родительского компонента, который рассматривается в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="eb00ef72a4a1581ddb03343a0b1a91065133fc3f" translate="yes" xml:space="preserve">
          <source>In this case, the URL is relative to the CSS file into which you're importing.</source>
          <target state="translated">В этом случае URL-адрес относится к CSS-файлу,в который вы импортируете.</target>
        </trans-unit>
        <trans-unit id="28c41d5d9a09f8ff971841552d898d001d4abc7f" translate="yes" xml:space="preserve">
          <source>In this case, the compiler doesn't understand how to inject something with the &lt;code&gt;Window&lt;/code&gt; token.</source>
          <target state="translated">В этом случае компилятор не понимает, как что-то внедрить с помощью токена &lt;code&gt;Window&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9c70127c467d27d51e62747cdfd36e0f50102f8e" translate="yes" xml:space="preserve">
          <source>In this case, the installed &lt;code&gt;@types/jquery&lt;/code&gt; doesn't include &lt;code&gt;myPlugin&lt;/code&gt;, so you need to add an interface in &lt;code&gt;src/typings.d.ts&lt;/code&gt;. For example:</source>
          <target state="translated">В этом случае установленный &lt;code&gt;@types/jquery&lt;/code&gt; не включает &lt;code&gt;myPlugin&lt;/code&gt; , поэтому вам нужно добавить интерфейс в &lt;code&gt;src/typings.d.ts&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="ef9a0cfbc3978a23bac648732aecf66dda795c0d" translate="yes" xml:space="preserve">
          <source>In this case, the value you'd get for &lt;code&gt;emoji&lt;/code&gt; would be &lt;code&gt;🌿&lt;/code&gt; (fern), not &lt;code&gt;🍁&lt;/code&gt; (maple leaf).</source>
          <target state="translated">В этом случае значение, которое вы получите за &lt;code&gt;emoji&lt;/code&gt; , будет &lt;code&gt;🌿&lt;/code&gt; (папоротник), а не &lt;code&gt;🍁&lt;/code&gt; (кленовый лист).</target>
        </trans-unit>
        <trans-unit id="bfd20680b9b498ed5f14027a21db5b47a1c4a2e2" translate="yes" xml:space="preserve">
          <source>In this case, there is an implied &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; around the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; and the definition of the variable is outside of it. Accessing a template variable from the parent template works because the child template inherits the context from the parent template.</source>
          <target state="translated">В этом случае подразумевается &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; вокруг &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; , а определение переменной находится за его пределами. Доступ к переменной шаблона из родительского шаблона работает, потому что дочерний шаблон наследует контекст из родительского шаблона.</target>
        </trans-unit>
        <trans-unit id="4439bb06c28a004aad6a895a5a28f3b2a6d5d2b6" translate="yes" xml:space="preserve">
          <source>In this contrived example, &lt;code&gt;SortedHeroesComponent&lt;/code&gt; inherits from &lt;code&gt;HeroesBaseComponent&lt;/code&gt; to display a &lt;em&gt;sorted&lt;/em&gt; list of heroes.</source>
          <target state="translated">В этом надуманном примере &lt;code&gt;SortedHeroesComponent&lt;/code&gt; наследуется от &lt;code&gt;HeroesBaseComponent&lt;/code&gt; для отображения &lt;em&gt;отсортированного&lt;/em&gt; списка героев.</target>
        </trans-unit>
        <trans-unit id="b5d0fc9c03a45683f8fef40516bc682df34feb20" translate="yes" xml:space="preserve">
          <source>In this demo, the &lt;code&gt;highlightColor&lt;/code&gt; property is an &lt;strong&gt;&lt;em&gt;input&lt;/em&gt;&lt;/strong&gt; property of the &lt;code&gt;HighlightDirective&lt;/code&gt;. You've seen it applied without an alias:</source>
          <target state="translated">В этой демонстрации свойство &lt;code&gt;highlightColor&lt;/code&gt; является свойством &lt;strong&gt;&lt;em&gt;ввода&lt;/em&gt;&lt;/strong&gt; &lt;code&gt;HighlightDirective&lt;/code&gt; . Вы видели, как он применяется без псевдонима:</target>
        </trans-unit>
        <trans-unit id="c8f2e72386b9b53a8533513dbcfa25c5d02a6eb9" translate="yes" xml:space="preserve">
          <source>In this example debug file, the update check is currently scheduled, as explained the next section.</source>
          <target state="translated">В данном примере отладочного файла,проверка обновления в настоящее время запланирована,как объяснено в следующем разделе.</target>
        </trans-unit>
        <trans-unit id="02d2c8724e6a540145a981a2031d64f7d39e59d8" translate="yes" xml:space="preserve">
          <source>In this example it is recommended to include the checking of &lt;code&gt;address&lt;/code&gt; in the &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; as shown below:</source>
          <target state="translated">В этом примере рекомендуется включить проверку &lt;code&gt;address&lt;/code&gt; в &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; , как показано ниже:</target>
        </trans-unit>
        <trans-unit id="b774b69bbfb4a217d822daab677e5225b9498242" translate="yes" xml:space="preserve">
          <source>In this example the parent queries the token to obtain the child component, and stores the resulting component reference if it is present. Before calling a method in the child, the parent component checks to see if the child component is present. If the child component has been tree-shaken, there is no runtime reference to it, and no call to its method.</source>
          <target state="translated">В этом примере родитель запрашивает маркер для получения дочернего компонента и сохраняет результирующую ссылку на компонент,если она присутствует.Перед вызовом метода в дочернем компоненте родительский компонент проверяет,присутствует ли дочерний компонент.Если дочерний компонент был вытряхнут из дерева,то ссылки на него во время выполнения нет,и нет вызова его метода.</target>
        </trans-unit>
        <trans-unit id="12681fef4106e092359d97b4ddfc2ed1ade7f74a" translate="yes" xml:space="preserve">
          <source>In this example you can see that we must derive from the &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt; base class but also provide an &lt;a href=&quot;../../core/directive&quot;&gt;`@Directive`&lt;/a&gt; decorator. This is because the AOT compiler requires that this information is statically available at compile time.</source>
          <target state="translated">В этом примере вы можете видеть, что мы должны быть производными от базового класса &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt; , но также предоставить декоратор &lt;a href=&quot;../../core/directive&quot;&gt;@ Directive&lt;/a&gt; . Это связано с тем, что компилятор AOT требует, чтобы эта информация была статически доступна во время компиляции.</target>
        </trans-unit>
        <trans-unit id="b620465ba0900e951bd37550e9f4865b71f4e6f7" translate="yes" xml:space="preserve">
          <source>In this example you can see that we must derive from the &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt; base class but also provide an &lt;a href=&quot;../../core/directive&quot;&gt;`@Directive`&lt;/a&gt; decorator. This is because the AoT compiler requires that this information is statically available at compile time.</source>
          <target state="translated">В этом примере вы можете видеть, что мы должны быть производными от базового класса &lt;code&gt;&lt;a href=&quot;upgradecomponent&quot;&gt;UpgradeComponent&lt;/a&gt;&lt;/code&gt; , а также предоставлять декоратор &lt;a href=&quot;../../core/directive&quot;&gt;`@ Directive`&lt;/a&gt; . Это потому, что компилятор AoT требует, чтобы эта информация была статически доступна во время компиляции.</target>
        </trans-unit>
        <trans-unit id="999cba4e5d3608eb750ca4d8169b051362b41fc2" translate="yes" xml:space="preserve">
          <source>In this example you upgraded a service class. You can use a TypeScript type annotation when you inject it. While it doesn't affect how the dependency is handled, it enables the benefits of static type checking. This is not required though, and any AngularJS service, factory, or provider can be upgraded.</source>
          <target state="translated">В этом примере вы повысили класс обслуживания.Вы можете использовать аннотацию типа TypeScript при вводе.Хотя это и не влияет на работу с зависимостями,но позволяет воспользоваться преимуществами статической проверки типов.Однако это не требуется,и любую службу AngularJS,завод или провайдера можно обновить.</target>
        </trans-unit>
        <trans-unit id="7763722043d3b5d9efcc966176e2b82c6d6a5d7f" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;AppComponent&lt;/code&gt; specifies a different &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; object (&lt;code&gt;currentItem&lt;/code&gt;) and passes it to the nested &lt;code&gt;ListItemComponent&lt;/code&gt;. &lt;code&gt;ListItemComponent&lt;/code&gt; was able to use &lt;code&gt;currentItem&lt;/code&gt; because it matches what an &lt;code&gt;Item&lt;/code&gt; object is according to &lt;code&gt;item.ts&lt;/code&gt;. The &lt;code&gt;item.ts&lt;/code&gt; file is where &lt;code&gt;ListItemComponent&lt;/code&gt; gets its definition of an &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В этом примере &lt;code&gt;AppComponent&lt;/code&gt; указывает другой объект &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;currentItem&lt;/code&gt; ) и передает его во вложенный &lt;code&gt;ListItemComponent&lt;/code&gt; . &lt;code&gt;ListItemComponent&lt;/code&gt; был в состоянии использовать &lt;code&gt;currentItem&lt;/code&gt; , потому что это соответствует тому , что &lt;code&gt;Item&lt;/code&gt; объект в соответствии с &lt;code&gt;item.ts&lt;/code&gt; . &lt;code&gt;item.ts&lt;/code&gt; файл где &lt;code&gt;ListItemComponent&lt;/code&gt; получает свое определение в &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b1113ef229de9681ba37dd24148caf319decf0c" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;HeroBiosComponent&lt;/code&gt; presents three instances of &lt;code&gt;HeroBioComponent&lt;/code&gt;.</source>
          <target state="translated">В этом примере &lt;code&gt;HeroBiosComponent&lt;/code&gt; представляет три экземпляра &lt;code&gt;HeroBioComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb6d2e0877ff8bb6ab9b60da3559f19869b2670b" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;ItemListComponent&lt;/code&gt; is a child component of &lt;code&gt;AppComponent&lt;/code&gt; and the &lt;code&gt;items&lt;/code&gt; property expects an array of objects.</source>
          <target state="translated">В этом примере &lt;code&gt;ItemListComponent&lt;/code&gt; является дочерним компонентом &lt;code&gt;AppComponent&lt;/code&gt; , а свойство &lt;code&gt;items&lt;/code&gt; ожидает массив объектов.</target>
        </trans-unit>
        <trans-unit id="bcdd5ca8e804eec05ea345bce2cc9b339710030a" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;address &lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; combines the current &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; controls with the new &lt;code&gt;street&lt;/code&gt;, &lt;code&gt;city&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;zip&lt;/code&gt; controls. Even though the &lt;code&gt;address&lt;/code&gt; element in the form group is a child of the overall &lt;code&gt;profileForm&lt;/code&gt; element in the form group, the same rules apply with value and status changes. Changes in status and value from the nested form group propagate to the parent form group, maintaining consistency with the overall model.</source>
          <target state="translated">В этом примере &lt;code&gt;address &lt;a href=&quot;../api/animations/group&quot;&gt;group&lt;/a&gt;&lt;/code&gt; адресов объединяет текущие элементы управления &lt;code&gt;firstName&lt;/code&gt; и &lt;code&gt;lastName&lt;/code&gt; с новыми элементами управления &lt;code&gt;street&lt;/code&gt; , &lt;code&gt;city&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;zip&lt;/code&gt; . Хотя элемент &lt;code&gt;address&lt;/code&gt; в группе форм является дочерним по отношению к общему элементу &lt;code&gt;profileForm&lt;/code&gt; в группе форм, те же правила применяются к изменениям значения и статуса. Изменения в статусе и значении из вложенной группы форм распространяются на родительскую группу форм, поддерживая согласованность с общей моделью.</target>
        </trans-unit>
        <trans-unit id="6568bcbea95dafb76ba6158489a1f4c7cfeff05d" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;address group&lt;/code&gt; combines the current &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; controls with the new &lt;code&gt;street&lt;/code&gt;, &lt;code&gt;city&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;zip&lt;/code&gt; controls. Even though the &lt;code&gt;address&lt;/code&gt; element in the form group is a child of the overall &lt;code&gt;profileForm&lt;/code&gt; element in the form group, the same rules apply with value and status changes. Changes in status and value from the nested form group propagate to the parent form group, maintaining consistency with the overall model.</source>
          <target state="translated">В этом примере &lt;code&gt;address group&lt;/code&gt; объединяет текущие элементы управления &lt;code&gt;firstName&lt;/code&gt; и &lt;code&gt;lastName&lt;/code&gt; с новыми элементами управления &lt;code&gt;street&lt;/code&gt; , &lt;code&gt;city&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;zip&lt;/code&gt; . Несмотря на то, что элемент &lt;code&gt;address&lt;/code&gt; в группе форм является дочерним по отношению к общему элементу &lt;code&gt;profileForm&lt;/code&gt; в группе форм, те же правила применяются к изменениям значений и статуса. Изменения статуса и значения из вложенной группы форм распространяются на родительскую группу форм, сохраняя согласованность с общей моделью.</target>
        </trans-unit>
        <trans-unit id="7cee86bfe07ecf66a51c7598a472099fbbc80f94" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;isStable&lt;/code&gt; will never emit &lt;code&gt;true&lt;/code&gt;, and the trace &quot;App is stable now&quot; will never get logged.</source>
          <target state="translated">В этом примере &lt;code&gt;isStable&lt;/code&gt; никогда не выдаст значение &lt;code&gt;true&lt;/code&gt; , а трассировка &amp;laquo;Приложение стабильно сейчас&amp;raquo; никогда не будет регистрироваться.</target>
        </trans-unit>
        <trans-unit id="c79344ccbfa54921494830310030314d6d9e755c" translate="yes" xml:space="preserve">
          <source>In this example, Angular extracts the expression into two translation units. The first contains the text outside of the &lt;code&gt;select&lt;/code&gt; clause, and uses a placeholder for &lt;code&gt;select&lt;/code&gt; (&lt;code&gt;&amp;lt;x id=&quot;ICU&quot;&amp;gt;&lt;/code&gt;):</source>
          <target state="translated">В этом примере Angular извлекает выражение в две единицы перевода. Первый содержит текст вне предложения &lt;code&gt;select&lt;/code&gt; и использует заполнитель для &lt;code&gt;select&lt;/code&gt; ( &lt;code&gt;&amp;lt;x id=&quot;ICU&quot;&amp;gt;&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="47e50b8623e6a33c605f9c63cfc99fe2a4fd5105" translate="yes" xml:space="preserve">
          <source>In this example, a &lt;code&gt;CounterComponent&lt;/code&gt; logs a change (via &lt;code&gt;ngOnChanges&lt;/code&gt;) every time the parent component increments its input counter property. Meanwhile, the &lt;code&gt;SpyDirective&lt;/code&gt; from the previous example is applied to the &lt;code&gt;CounterComponent&lt;/code&gt; log where it watches log entries being created and destroyed.</source>
          <target state="translated">В этом примере &lt;code&gt;CounterComponent&lt;/code&gt; регистрирует изменение (через &lt;code&gt;ngOnChanges&lt;/code&gt; ) каждый раз, когда родительский компонент увеличивает свое свойство входного счетчика. Между тем &lt;code&gt;SpyDirective&lt;/code&gt; из предыдущего примера применяется к журналу &lt;code&gt;CounterComponent&lt;/code&gt; , где он наблюдает за созданием и уничтожением записей журнала.</target>
        </trans-unit>
        <trans-unit id="eea996b3cfb2e36d293eb699e6a686b5dec933eb" translate="yes" xml:space="preserve">
          <source>In this example, a &lt;code&gt;CounterComponent&lt;/code&gt; uses the &lt;code&gt;ngOnChanges()&lt;/code&gt; method to log a change every time the parent component increments its input &lt;code&gt;counter&lt;/code&gt; property.</source>
          <target state="translated">В этом примере &lt;code&gt;CounterComponent&lt;/code&gt; использует метод &lt;code&gt;ngOnChanges()&lt;/code&gt; для регистрации изменения каждый раз, когда родительский компонент увеличивает свое свойство &lt;code&gt;counter&lt;/code&gt; ввода .</target>
        </trans-unit>
        <trans-unit id="4795c3bc01ada269031f573d0bb0dec2cbfc2b88" translate="yes" xml:space="preserve">
          <source>In this example, clicking the button calls the &lt;code&gt;log()&lt;/code&gt; function, which outputs the value of &lt;code&gt;#ref3&lt;/code&gt; to the console. Because the &lt;code&gt;#ref&lt;/code&gt; variable is on an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;, the value is &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В этом примере нажатие кнопки вызывает функцию &lt;code&gt;log()&lt;/code&gt; , которая выводит значение &lt;code&gt;#ref3&lt;/code&gt; на консоль. Поскольку переменная &lt;code&gt;#ref&lt;/code&gt; находится на &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; , значение равно &lt;code&gt;&lt;a href=&quot;../api/core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b34c27516f98552db8673b22efff281ea6a08dc6" translate="yes" xml:space="preserve">
          <source>In this example, if &lt;code&gt;favoriteHero&lt;/code&gt; is not set, the &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; value is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; displays, &quot;Please enter ...&quot;. If &lt;code&gt;favoriteHero&lt;/code&gt; is set, the app checks the movie hero by calling a component method. If that method returns &lt;code&gt;true&lt;/code&gt;, the app selects &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;=&quot;true&quot;&lt;/code&gt; and displays: &quot;Excellent choice!&quot; If that methods returns &lt;code&gt;false&lt;/code&gt;, the app selects &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;=&quot;false&quot;&lt;/code&gt; and displays: &quot;No movie, sorry!&quot;</source>
          <target state="translated">В этом примере, если &lt;code&gt;favoriteHero&lt;/code&gt; не установлен, то &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;ngSwitch&lt;/a&gt;&lt;/code&gt; значение &lt;code&gt;null&lt;/code&gt; и &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; дисплеи, &amp;laquo;Пожалуйста , введите ...&amp;raquo;. Если &lt;code&gt;favoriteHero&lt;/code&gt; установлено, приложение проверяет фильм герой путем вызова метода компонента. Если этот метод возвращает &lt;code&gt;true&lt;/code&gt; , приложение выбирает &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;=&quot;true&quot;&lt;/code&gt; и отображает: &quot;Отличный выбор!&quot; Если этот метод возвращает &lt;code&gt;false&lt;/code&gt; , приложение выбирает &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;=&quot;false&quot;&lt;/code&gt; и отображает: &quot;Нет фильма, извините!&quot;</target>
        </trans-unit>
        <trans-unit id="72f1f2d37ac6c79270b0a7d0849a98d48abc0296" translate="yes" xml:space="preserve">
          <source>In this example, if &lt;code&gt;favoriteHero&lt;/code&gt; is not set, the template displays &quot;Please enter ...&quot;. If &lt;code&gt;favoriteHero&lt;/code&gt; is set, it checks the movie hero by calling a controller method. If that method returns &lt;code&gt;true&lt;/code&gt;, the template displays &quot;Excellent choice!&quot;. If that methods returns &lt;code&gt;false&lt;/code&gt;, the template displays &quot;No movie, sorry!&quot;.</source>
          <target state="translated">В этом примере, если значение &lt;code&gt;favoriteHero&lt;/code&gt; не установлено, в шаблоне отображается &amp;laquo;Пожалуйста, введите ...&amp;raquo;. Если &lt;code&gt;favoriteHero&lt;/code&gt; установлен, он проверяет фильм герой путем вызова метода контроллера. Если этот метод возвращает &lt;code&gt;true&lt;/code&gt; , шаблон отображает &amp;laquo;Отличный выбор!&amp;raquo;. Если этот метод возвращает &lt;code&gt;false&lt;/code&gt; , шаблон отображает &amp;laquo;Нет фильма, извините!&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="af3bdcb5fef615d78019a726d74324f420e52102" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element is hidden if the &lt;code&gt;favoriteHero&lt;/code&gt; variable is not truthy.</source>
          <target state="translated">В этом примере &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; элемент скрыт , если &lt;code&gt;favoriteHero&lt;/code&gt; переменная не truthy.</target>
        </trans-unit>
        <trans-unit id="45a0870a00e40b52bff70afae912dde516d98427" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element is shown if the &lt;code&gt;favoriteHero&lt;/code&gt; variable is truthy.</source>
          <target state="translated">В этом примере, &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; элемент отображается , если &lt;code&gt;favoriteHero&lt;/code&gt; переменная truthy.</target>
        </trans-unit>
        <trans-unit id="eaed41066495437d45b6edacc8a7e191ea8479ea" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; element is removed from the DOM unless the &lt;code&gt;movies&lt;/code&gt; array has a length greater than zero.</source>
          <target state="translated">В этом примере элемент &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; удаляется из DOM, если только массив &lt;code&gt;movies&lt;/code&gt; не имеет длину больше нуля.</target>
        </trans-unit>
        <trans-unit id="29ba1a50a860d713db88a878e1386a55649ba999" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; element is removed from the DOM unless the &lt;code&gt;movies&lt;/code&gt; array has a length.</source>
          <target state="translated">В этом примере элемент &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; удаляется из DOM, если только массив &lt;code&gt;movies&lt;/code&gt; не имеет длины.</target>
        </trans-unit>
        <trans-unit id="9914b2e1524218e10a4fe48a32a9e8b2977bb5c9" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;BannerComponent&lt;/code&gt; is the only component to compile. Other examples configure the testing module with multiple components and may import application modules that hold yet more components. Any of them could be require external files.</source>
          <target state="translated">В этом примере &lt;code&gt;BannerComponent&lt;/code&gt; является единственным компонентом для компиляции. Другие примеры конфигурируют модуль тестирования с несколькими компонентами и могут импортировать модули приложения, которые содержат еще больше компонентов. Любой из них может потребовать внешних файлов.</target>
        </trans-unit>
        <trans-unit id="3390a9441f57488ac443819ff9b1e78631a8db37" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;BannerComponent&lt;/code&gt; is the only component to compile. Other examples configure the testing module with multiple components and may import application modules that hold yet more components. Any of them could require external files.</source>
          <target state="translated">В этом примере &lt;code&gt;BannerComponent&lt;/code&gt; - единственный компонент для компиляции. Другие примеры конфигурируют модуль тестирования с несколькими компонентами и могут импортировать модули приложений, которые содержат еще больше компонентов. Для любого из них могут потребоваться внешние файлы.</target>
        </trans-unit>
        <trans-unit id="119771170aaca742e78ea766c300375a30e9f747" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;LibCardComponent&lt;/code&gt; implementation no longer refers to &lt;code&gt;LibHeaderComponent&lt;/code&gt; in either the type position or the value position. This allows full tree shaking of &lt;code&gt;LibHeaderComponent&lt;/code&gt; to take place. The &lt;code&gt;LibHeaderToken&lt;/code&gt; is retained, but it is only a class declaration, with no concrete implementation. It is small and does not materially impact the application size when retained after compilation.</source>
          <target state="translated">В этом примере реализация &lt;code&gt;LibCardComponent&lt;/code&gt; больше не ссылается на &lt;code&gt;LibHeaderComponent&lt;/code&gt; ни в позиции типа, ни в позиции значения. Это позволяет полностью встряхнуть дерево &lt;code&gt;LibHeaderComponent&lt;/code&gt; . &lt;code&gt;LibHeaderToken&lt;/code&gt; сохраняется, но это всего лишь декларация класса, без реализации конкретного. Он небольшой и не оказывает существенного влияния на размер приложения при сохранении после компиляции.</target>
        </trans-unit>
        <trans-unit id="021f289166efe72931574fd499284cc05ab8c72e" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;LoadingState&amp;lt;T&amp;gt;&lt;/code&gt; type permits either of two states, &lt;code&gt;Loaded&amp;lt;T&amp;gt;&lt;/code&gt; or &lt;code&gt;Loading&lt;/code&gt;. The expression used as the directive&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; input is of the umbrella type &lt;code&gt;LoadingState&lt;/code&gt;, as it&amp;rsquo;s unknown what the loading state is at that point.</source>
          <target state="translated">В этом примере &lt;code&gt;LoadingState&amp;lt;T&amp;gt;&lt;/code&gt; допускает одно из двух состояний: &lt;code&gt;Loaded&amp;lt;T&amp;gt;&lt;/code&gt; или &lt;code&gt;Loading&lt;/code&gt; . Выражение, используемое в качестве входных данных &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; директивы, относится к зонтичному типу &lt;code&gt;LoadingState&lt;/code&gt; , поскольку неизвестно, какое состояние загрузки находится в этой точке.</target>
        </trans-unit>
        <trans-unit id="5f0121c1cd7668454f283fbaa22a823417529960" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;TwainComponent.getQuote()&lt;/code&gt; method tells you that the &lt;code&gt;quote&lt;/code&gt; property returns an &lt;code&gt;Observable&lt;/code&gt;.</source>
          <target state="translated">В этом примере метод &lt;code&gt;TwainComponent.getQuote()&lt;/code&gt; сообщает, что свойство &lt;code&gt;quote&lt;/code&gt; возвращает &lt;code&gt;Observable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a652a084958d1f1ea901db7f1428a4b9bc52595b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;doSomething()&lt;/code&gt; method updates the screen when the hero name exceeds 10 characters, but waits a tick before updating &lt;code&gt;comment&lt;/code&gt;.</source>
          <target state="translated">В этом примере метод &lt;code&gt;doSomething()&lt;/code&gt; обновляет экран, когда имя героя превышает 10 символов, но ожидает галочки перед обновлением &lt;code&gt;comment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8dc87778ed16f68aed10d08c1afb1cc4c8aa4f0" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;h1&lt;/code&gt; style applies only to the &lt;code&gt;HeroAppComponent&lt;/code&gt;, not to the nested &lt;code&gt;HeroMainComponent&lt;/code&gt; nor to &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tags anywhere else in the application.</source>
          <target state="translated">В этом примере стиль &lt;code&gt;h1&lt;/code&gt; применяется только к &lt;code&gt;HeroAppComponent&lt;/code&gt; , а не к вложенному &lt;code&gt;HeroMainComponent&lt;/code&gt; или к тегам &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; где-либо еще в приложении.</target>
        </trans-unit>
        <trans-unit id="67de3693d36a539340b8927be4b004d3faaeb677" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;name&lt;/code&gt; control sets up two built-in validators&amp;mdash;&lt;code&gt;Validators.required&lt;/code&gt; and &lt;code&gt;Validators.minLength(4)&lt;/code&gt;&amp;mdash;and one custom validator, &lt;code&gt;forbiddenNameValidator&lt;/code&gt;. (For more details see &lt;a href=&quot;form-validation#custom-validators&quot;&gt;custom validators&lt;/a&gt; below.)</source>
          <target state="translated">В этом примере элемент управления &lt;code&gt;name&lt;/code&gt; устанавливает два встроенных валидатора - &lt;code&gt;Validators.required&lt;/code&gt; и &lt;code&gt;Validators.minLength(4)&lt;/code&gt; - и один настраиваемый валидатор &lt;code&gt;forbiddenNameValidator&lt;/code&gt; . (Для получения дополнительной информации см. &lt;a href=&quot;form-validation#custom-validators&quot;&gt;Настраиваемые валидаторы&lt;/a&gt; ниже.)</target>
        </trans-unit>
        <trans-unit id="581286bbe5a7e8813d9bd8f6ce48e4c91dae6d3b" translate="yes" xml:space="preserve">
          <source>In this example, the Angular CLI compiles and bundles the Universal version of the app with the &lt;a href=&quot;aot-compiler&quot;&gt;Ahead-of-Time (AOT) compiler&lt;/a&gt;. A Node.js Express web server compiles HTML pages with Universal based on client requests.</source>
          <target state="translated">В этом примере интерфейс командной строки Angular компилирует и связывает универсальную версию приложения с &lt;a href=&quot;aot-compiler&quot;&gt;компилятором Ahead-of-Time (AOT)&lt;/a&gt; . Веб-сервер Node.js Express компилирует HTML-страницы с помощью Universal на основе запросов клиентов.</target>
        </trans-unit>
        <trans-unit id="70fdbfe2246483712f70ef97797c46fb0bec5603" translate="yes" xml:space="preserve">
          <source>In this example, the Angular CLI compiles and bundles the Universal version of the app with the &lt;a href=&quot;aot-compiler&quot;&gt;Ahead-of-Time (AoT) compiler&lt;/a&gt;. A Node Express web server compiles HTML pages with Universal based on client requests.</source>
          <target state="translated">В этом примере Angular CLI компилирует и связывает универсальную версию приложения с &lt;a href=&quot;aot-compiler&quot;&gt;компилятором Ahead-of-Time (AoT)&lt;/a&gt; . Веб-сервер Node Express компилирует HTML-страницы с Universal на основе клиентских запросов.</target>
        </trans-unit>
        <trans-unit id="f1117862898e16209748d37073fb954a643784bc" translate="yes" xml:space="preserve">
          <source>In this example, the compiler disregards type incompatibilities in nullability, just as in TypeScript code. In the case of the &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe, note that the expression needs to be wrapped in parentheses, as in &lt;code&gt;&amp;lt;user-detail [user]=&quot;(user$ | async)!&quot; /&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">В этом примере компилятор игнорирует несовместимость типов в допустимости значений NULL, как и в коде TypeScript. В случае с &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; конвейером обратите внимание, что выражение необходимо заключить в круглые скобки, как в &lt;code&gt;&amp;lt;user-detail [user]=&quot;(user$ | async)!&quot; /&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7f0c59ac145dae8f5ddcee4ccb7a940b3dee4652" translate="yes" xml:space="preserve">
          <source>In this example, the context of the &lt;code&gt;$event&lt;/code&gt; object, &lt;code&gt;hero&lt;/code&gt;, and &lt;code&gt;#heroForm&lt;/code&gt; is the template.</source>
          <target state="translated">В этом примере контекстом объекта &lt;code&gt;$event&lt;/code&gt; , &lt;code&gt;hero&lt;/code&gt; и &lt;code&gt;#heroForm&lt;/code&gt; является шаблон.</target>
        </trans-unit>
        <trans-unit id="3c77e55816f54a0b51362c2c86c1b0a18effa47f" translate="yes" xml:space="preserve">
          <source>In this example, the function receives the current &lt;code&gt;Tree&lt;/code&gt; and returns it without any modifications. If you need to, you can do additional setup when your package is installed, such as generating files, updating configuration, or any other initial setup your library requires.</source>
          <target state="translated">В этом примере функция получает текущее &lt;code&gt;Tree&lt;/code&gt; и возвращает его без каких-либо изменений. Если вам нужно, вы можете выполнить дополнительную настройку при установке пакета, такую ​​как создание файлов, обновление конфигурации или любые другие начальные настройки, которые требуются вашей библиотеке.</target>
        </trans-unit>
        <trans-unit id="5f760e6853240f1a247368ea5cf4ca224bc0cab0" translate="yes" xml:space="preserve">
          <source>In this example, the metadata object passed to &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; simply declares &lt;code&gt;BannerComponent&lt;/code&gt;, the component to test.</source>
          <target state="translated">В этом примере объект метаданных, переданный в &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; , просто объявляет &lt;code&gt;BannerComponent&lt;/code&gt; , компонент для тестирования.</target>
        </trans-unit>
        <trans-unit id="4fa761fa0db5279057ebbd7c918d23d617db68c2" translate="yes" xml:space="preserve">
          <source>In this example, the parent component is &lt;code&gt;AppComponent&lt;/code&gt;, but you could use any component in which you could nest the child.</source>
          <target state="translated">В этом примере родительским компонентом является &lt;code&gt;AppComponent&lt;/code&gt; , но вы можете использовать любой компонент, в который вы можете вложить дочерний элемент.</target>
        </trans-unit>
        <trans-unit id="1f6f8011b5dc464a23b1d8849f6646fc7783a339" translate="yes" xml:space="preserve">
          <source>In this example, the service worker has one version of the app cached and being used to serve two different tabs. Note that this version hash is the &quot;latest manifest hash&quot; listed above. Both clients are on the latest version. Each client is listed by its ID from the &lt;code&gt;Clients&lt;/code&gt; API in the browser.</source>
          <target state="translated">В этом примере у работника сервиса есть одна версия приложения, которая кэшируется и используется для обслуживания двух разных вкладок. Обратите внимание, что эта версия хэша является &quot;последней версией манифеста&quot;, указанной выше Оба клиента находятся на последней версии. Каждый клиент указан по его идентификатору из API &lt;code&gt;Clients&lt;/code&gt; в браузере.</target>
        </trans-unit>
        <trans-unit id="141adfd803373a7562c9907611167c881b44c8b3" translate="yes" xml:space="preserve">
          <source>In this example, the table row (&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;) element repeats for each movie object in the collection of movies.</source>
          <target state="translated">В этом примере элемент строки таблицы ( &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; ) повторяется для каждого объекта фильма в коллекции фильмов.</target>
        </trans-unit>
        <trans-unit id="e76b2c3a28485e6785406f24973109ce2379794c" translate="yes" xml:space="preserve">
          <source>In this example, the third route is a redirect so that the router defaults to the &lt;code&gt;first-component&lt;/code&gt; route. Notice that this redirect precedes the wildcard route. Here, &lt;code&gt;path: ''&lt;/code&gt; means to use the initial relative URL (&lt;code&gt;''&lt;/code&gt;).</source>
          <target state="translated">В этом примере третий маршрут - это перенаправление, поэтому маршрутизатор по умолчанию использует маршрут &lt;code&gt;first-component&lt;/code&gt; . Обратите внимание, что это перенаправление предшествует маршруту с подстановочными знаками. Здесь &lt;code&gt;path: ''&lt;/code&gt; означает использование начального относительного URL-адреса ( &lt;code&gt;''&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a1fc753a972a0e8642c389f78d449c6f46254fae" translate="yes" xml:space="preserve">
          <source>In this example, the trace &quot;App is stable now&quot; will be logged and then the counter starts incrementing every second.</source>
          <target state="translated">В этом примере трасса &quot;App is stable now&quot; будет записываться в журнал,а затем счетчик начнет инкрементировать каждую секунду.</target>
        </trans-unit>
        <trans-unit id="e1adb1392f66f2621eeb646a78fc33dc4ca7ed9c" translate="yes" xml:space="preserve">
          <source>In this example, there are two additional child components, &lt;code&gt;child-a&lt;/code&gt;, and &lt;code&gt;child-b&lt;/code&gt;. Here, &lt;code&gt;FirstComponent&lt;/code&gt; has its own &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; and a second &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; in addition to the one in &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">В этом примере есть два дополнительных дочерних компонента, &lt;code&gt;child-a&lt;/code&gt; и &lt;code&gt;child-b&lt;/code&gt; . Здесь &lt;code&gt;FirstComponent&lt;/code&gt; имеет свой собственный &lt;code&gt;&amp;lt;nav&amp;gt;&lt;/code&gt; и второй &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; в дополнение к одному в &lt;code&gt;AppComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55313e1b1881081b73a426b4b5ede5214265a96f" translate="yes" xml:space="preserve">
          <source>In this example, there is a parent provider and injecting the service will return the value, however, injecting the service with &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; will return &lt;code&gt;null&lt;/code&gt; because &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; tells the injector to stop searching in the current host element.</source>
          <target state="translated">В этом примере есть родительский поставщик, и внедрение службы вернет значение, однако внедрение службы с помощью &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; вернет значение &lt;code&gt;null&lt;/code&gt; , поскольку &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; сообщает инжектору прекратить поиск в текущем хост-элемент.</target>
        </trans-unit>
        <trans-unit id="e9fbe267e141148afaa5adfc5af6e3bf9cbfcb38" translate="yes" xml:space="preserve">
          <source>In this example, we have a new macro task (nested setTimeout), by default, when we &lt;code&gt;&lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick&lt;/a&gt;&lt;/code&gt;, the setTimeout &lt;code&gt;outside&lt;/code&gt; and &lt;code&gt;nested&lt;/code&gt; will both be triggered.</source>
          <target state="translated">В этом примере мы имеем новую макросъемки задачу (вложенная SetTimeout), по умолчанию, когда мы &lt;code&gt;&lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick&lt;/a&gt;&lt;/code&gt; , то SetTimeout &lt;code&gt;outside&lt;/code&gt; и &lt;code&gt;nested&lt;/code&gt; оба срабатывать.</target>
        </trans-unit>
        <trans-unit id="db3b7288e76c9764175a504022fe6dac60eb02e9" translate="yes" xml:space="preserve">
          <source>In this example, we have a special trigger for the enter and leave animation called &lt;code&gt;myInsertRemoveTrigger&lt;/code&gt;. The HTML template contains the following code.</source>
          <target state="translated">В этом примере у нас есть специальный триггер для анимации входа и выхода, который называется &lt;code&gt;myInsertRemoveTrigger&lt;/code&gt; . Шаблон HTML содержит следующий код.</target>
        </trans-unit>
        <trans-unit id="4f23673ea8bd0a665773af3bb10e9ab0cc487c74" translate="yes" xml:space="preserve">
          <source>In this example, we have a trigger called &lt;code&gt;shrinkOut&lt;/code&gt;, used when an HTML element leaves the page. The animation takes whatever height the element has before it leaves, and animates from that height to zero.</source>
          <target state="translated">В этом примере у нас есть триггер &lt;code&gt;shrinkOut&lt;/code&gt; , используемый, когда элемент HTML покидает страницу. Анимация берет любую высоту, которую элемент имеет до того, как уходит, и анимирует от этой высоты до нуля</target>
        </trans-unit>
        <trans-unit id="d5449a4988ffee8945fd260d02e422915ed66b26" translate="yes" xml:space="preserve">
          <source>In this example, we tell the processor to put the fragments together without anything in between - without any &quot;plaster&quot;. Most sample files define this &lt;em&gt;empty plaster&lt;/em&gt;.</source>
          <target state="translated">В этом примере мы говорим процессору соединять фрагменты без чего-либо между ними - без какой-либо &amp;laquo;штукатурки&amp;raquo;. Большинство образцов файлов определяют этот &lt;em&gt;пустой гипс&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="9f8e0d121e50e60163e599d82947e2d681ecf6cb" translate="yes" xml:space="preserve">
          <source>In this example, we'll name the trigger &lt;code&gt;openClose&lt;/code&gt;, and attach it to the &lt;code&gt;button&lt;/code&gt; element. The trigger describes the open and closed states, and the timings for the two transitions.</source>
          <target state="translated">В этом примере мы &lt;code&gt;openClose&lt;/code&gt; триггер openClose и прикрепим его к элементу &lt;code&gt;button&lt;/code&gt; . Триггер описывает открытое и закрытое состояния, а также время для двух переходов.</target>
        </trans-unit>
        <trans-unit id="0f166860e3bda6fd17d0325d2f54b8f0ba7afcd0" translate="yes" xml:space="preserve">
          <source>In this example, when the &lt;code&gt;isOpen&lt;/code&gt; expression evaluates to a defined state of &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;, it notifies the trigger &lt;code&gt;openClose&lt;/code&gt; of a state change. Then it's up to the &lt;code&gt;openClose&lt;/code&gt; code to handle the state change and kick off a state change animation.</source>
          <target state="translated">В этом примере, когда выражение &lt;code&gt;isOpen&lt;/code&gt; оценивается как определенное состояние &lt;code&gt;open&lt;/code&gt; или &lt;code&gt;closed&lt;/code&gt; , оно уведомляет триггер &lt;code&gt;openClose&lt;/code&gt; об изменении состояния. Затем дело за кодом &lt;code&gt;openClose&lt;/code&gt; для обработки изменения состояния и запуска анимации изменения состояния.</target>
        </trans-unit>
        <trans-unit id="8122141c419796ccece90e8861443226d3fc7efb" translate="yes" xml:space="preserve">
          <source>In this example, you hide the message when the control is either valid or &lt;em&gt;pristine&lt;/em&gt;. Pristine means the user hasn't changed the value since it was displayed in this form. If you ignore the &lt;code&gt;pristine&lt;/code&gt; state, you would hide the message only when the value is valid. If you arrive in this component with a new (blank) hero or an invalid hero, you'll see the error message immediately, before you've done anything.</source>
          <target state="translated">В этом примере вы скрываете сообщение, когда элемент управления является действительным или &lt;em&gt;нетронутым&lt;/em&gt; . Безупречный означает, что пользователь не менял значение с момента его отображения в этой форме. Если вы проигнорируете &lt;code&gt;pristine&lt;/code&gt; состояние, вы скроете сообщение только тогда, когда значение будет действительным. Если вы попадете в этот компонент с новым (пустым) героем или недействительным героем, вы сразу увидите сообщение об ошибке, прежде чем что-либо сделаете.</target>
        </trans-unit>
        <trans-unit id="857e41f3d387f7cf872a74341b0658452c56adc6" translate="yes" xml:space="preserve">
          <source>In this example, you hide the message when the control is valid or pristine; &quot;pristine&quot; means the user hasn't changed the value since it was displayed in this form.</source>
          <target state="translated">В данном примере,вы скрываете сообщение,когда элемент управления является действительным или нетронутым;&quot;нетронутым&quot; означает,что пользователь не изменил значение с момента его отображения в этой форме.</target>
        </trans-unit>
        <trans-unit id="baf3737ace5606abd1ec8225579802cb34f52588" translate="yes" xml:space="preserve">
          <source>In this example, you retrieve the route parameter map from an &lt;code&gt;Observable&lt;/code&gt;. That implies that the route parameter map can change during the lifetime of this component.</source>
          <target state="translated">В этом примере вы извлекаете карту параметров маршрута из &lt;code&gt;Observable&lt;/code&gt; . Это подразумевает, что карта параметров маршрута может изменяться в течение времени жизни этого компонента.</target>
        </trans-unit>
        <trans-unit id="22dacf1b0042c1fad5409535bd55de92eadb09f0" translate="yes" xml:space="preserve">
          <source>In this guide, we go into greater depth on special transition states such as &lt;code&gt;*&lt;/code&gt; (wildcard) and &lt;code&gt;void&lt;/code&gt;, and show how these special states are used for elements entering and leaving a view. The chapter also explores multiple animation triggers, animation callbacks and sequence-based animation using keyframes.</source>
          <target state="translated">В этом руководстве мы углубимся в специальные переходные состояния, такие как &lt;code&gt;*&lt;/code&gt; (подстановочный знак) и &lt;code&gt;void&lt;/code&gt; , и покажем, как эти специальные состояния используются для элементов, входящих и выходящих из представления. В этой главе также рассматриваются многочисленные триггеры анимации, обратные вызовы анимации и анимация на основе последовательности с использованием ключевых кадров.</target>
        </trans-unit>
        <trans-unit id="d391ee1c171a2767942bc43f6ae9952564664a67" translate="yes" xml:space="preserve">
          <source>In this implementation, the component should create and display a new hero. New heroes have &lt;code&gt;id=0&lt;/code&gt; and a blank &lt;code&gt;name&lt;/code&gt;. This test confirms that the component behaves as expected:</source>
          <target state="translated">В этой реализации компонент должен создать и отобразить нового героя. Новые герои имеют &lt;code&gt;id=0&lt;/code&gt; и пустое &lt;code&gt;name&lt;/code&gt; . Этот тест подтверждает, что компонент ведет себя как ожидалось:</target>
        </trans-unit>
        <trans-unit id="76cbc5a9e329031cf1bab2ff3296215a7ffaf283" translate="yes" xml:space="preserve">
          <source>In this last exercise, you learn to chain &lt;code&gt;Observable&lt;/code&gt; operators together so you can minimize the number of similar HTTP requests and consume network bandwidth economically.</source>
          <target state="translated">В этом последнем упражнении вы научитесь &lt;code&gt;Observable&lt;/code&gt; операторы вместе, чтобы минимизировать количество похожих HTTP-запросов и экономно использовать пропускную способность сети.</target>
        </trans-unit>
        <trans-unit id="9b0401f148735f00014a29894e7c27898d1d095b" translate="yes" xml:space="preserve">
          <source>In this mode, typed variables disallow &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; by default. The type checker throws an error if you leave a variable unassigned or try to assign &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; to a variable whose type disallows &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">В этом режиме типизированные переменные по умолчанию не имеют &lt;code&gt;null&lt;/code&gt; и &lt;code&gt;undefined&lt;/code&gt; . Средство проверки типов выдает ошибку, если вы оставляете переменную неназначенной или пытаетесь присвоить ей значение &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; для переменной, тип которой запрещает &lt;code&gt;null&lt;/code&gt; и &lt;code&gt;undefined&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="280da26e99ef856ec857edb7fba6fd1a43c74759" translate="yes" xml:space="preserve">
          <source>In this next section, you'll extend the crisis center with some new &lt;em&gt;administrative&lt;/em&gt; features. Those features aren't defined yet. But you can start by adding a new feature module named &lt;code&gt;AdminModule&lt;/code&gt;.</source>
          <target state="translated">В следующем разделе вы расширите кризисный центр новыми &lt;em&gt;административными&lt;/em&gt; функциями. Эти функции еще не определены. Но вы можете начать с добавления нового функционального модуля с именем &lt;code&gt;AdminModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2e77ddac00429a19af490ee0fff3eb26cd48acc6" translate="yes" xml:space="preserve">
          <source>In this next section, you'll update the &lt;code&gt;CrisisCenterModule&lt;/code&gt; to load lazily by default and use the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy to load it (and &lt;em&gt;all other&lt;/em&gt; lazy loaded modules) as soon as possible.</source>
          <target state="translated">В этом следующем разделе вы обновите &lt;code&gt;CrisisCenterModule&lt;/code&gt; для ленивой загрузки по умолчанию и &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; использовать стратегию PreloadAllModules , чтобы загрузить его (и &lt;em&gt;все другие&lt;/em&gt; лениво загруженные модули) как можно скорее.</target>
        </trans-unit>
        <trans-unit id="910d57aa8f2c9d322a7ddfffafff5a1e12be15d4" translate="yes" xml:space="preserve">
          <source>In this page, you'll create a component with a list of heroes. You'll display the list of hero names and conditionally show a message below the list.</source>
          <target state="translated">На этой странице вы создадите компонент со списком героев.Вы отобразите список имен героев и условно покажете сообщение под этим списком.</target>
        </trans-unit>
        <trans-unit id="5991263aee79edfabb240fd4a80ec9aca9c4f379" translate="yes" xml:space="preserve">
          <source>In this page, you'll expand the Tour of Heroes app to display a list of heroes, and allow users to select a hero and display the hero's details.</source>
          <target state="translated">На этой странице вы развернете приложение &quot;Tour of Heroes&quot;,чтобы отобразить список героев,а также дать возможность пользователям выбрать героя и отобразить детали героя.</target>
        </trans-unit>
        <trans-unit id="36e07abc829fe293c414ff2c42ec086b5bcaa116" translate="yes" xml:space="preserve">
          <source>In this page, you'll take the first step in that direction by moving the hero details into a separate, reusable &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">На этой странице вы сделаете первый шаг в этом направлении, переместив детали героя в отдельный многократно используемый &lt;code&gt;HeroDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41eadd61e2099c9b71eca402988c22d2dc4da72a" translate="yes" xml:space="preserve">
          <source>In this part of the tutorial, you'll do the following:</source>
          <target state="translated">В этой части урока вы сделаете следующее:</target>
        </trans-unit>
        <trans-unit id="f9704e3a1c4e2e88d3b06005691f30d54c3fe8a0" translate="yes" xml:space="preserve">
          <source>In this sample app, an &lt;code&gt;Item&lt;/code&gt; is an object that has two properties; an &lt;code&gt;id&lt;/code&gt; and a &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">В этом примере приложения &lt;code&gt;Item&lt;/code&gt; - это объект, имеющий два свойства; &lt;code&gt;id&lt;/code&gt; и &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a920eb2f136fa29d3d8fd6be1642038fa8343dd7" translate="yes" xml:space="preserve">
          <source>In this sample, the &lt;code&gt;AboutComponent&lt;/code&gt; template hosts a &lt;code&gt;TwainComponent&lt;/code&gt;. The &lt;code&gt;TwainComponent&lt;/code&gt; displays Mark Twain quotes.</source>
          <target state="translated">В этом примере шаблон &lt;code&gt;AboutComponent&lt;/code&gt; содержит &lt;code&gt;TwainComponent&lt;/code&gt; . &lt;code&gt;TwainComponent&lt;/code&gt; показывает Марк Твен кавычки.</target>
        </trans-unit>
        <trans-unit id="83a3e6ce2e81d5334705552ed704c13c7a012cad" translate="yes" xml:space="preserve">
          <source>In this sample, the &lt;code&gt;preload()&lt;/code&gt; method loads the route if the route's &lt;code&gt;data.preload&lt;/code&gt; flag is truthy.</source>
          <target state="translated">В этом примере метод &lt;code&gt;data.preload&lt;/code&gt; &lt;code&gt;preload()&lt;/code&gt; загружает маршрут, если флаг data.preload маршрута истинен.</target>
        </trans-unit>
        <trans-unit id="d4570e44a44492eaf23a15501bcef8aeda6caf07" translate="yes" xml:space="preserve">
          <source>In this sample, the &lt;code&gt;preload&lt;/code&gt; method loads the route if the route's &lt;code&gt;data.preload&lt;/code&gt; flag is truthy.</source>
          <target state="translated">В этом примере метод &lt;code&gt;preload&lt;/code&gt; загружает маршрут, если флаг маршрута &lt;code&gt;data.preload&lt;/code&gt; верен.</target>
        </trans-unit>
        <trans-unit id="53df60f2bbc6ff801450ca15e253828f19eef2d8" translate="yes" xml:space="preserve">
          <source>In this sample, the forbidden name is &quot;bob&quot;, so the validator will reject any hero name containing &quot;bob&quot;. Elsewhere it could reject &quot;alice&quot; or any name that the configuring regular expression matches.</source>
          <target state="translated">В этом примере запрещенное имя-&quot;bob&quot;,поэтому валидатор будет отклонять любое имя героя,содержащее &quot;bob&quot;.В другом месте он может отклонить &quot;alice&quot; или любое имя,которое совпадает с конфигурируемым регулярным выражением.</target>
        </trans-unit>
        <trans-unit id="c1cff468c4938260e2ee129abcb3fdbc441be47c" translate="yes" xml:space="preserve">
          <source>In this scenario, &lt;code&gt;ListItemComponent&lt;/code&gt; is nested within &lt;code&gt;AppComponent&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; property expects an object.</source>
          <target state="translated">В этом случае &lt;code&gt;ListItemComponent&lt;/code&gt; вложен в &lt;code&gt;AppComponent&lt;/code&gt; , а свойство &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; ожидает объект.</target>
        </trans-unit>
        <trans-unit id="bb1ad6d637c2681a211a37960e4482d763186a33" translate="yes" xml:space="preserve">
          <source>In this scenario, the user could click the heroes link, cancel, push the browser back button, or navigate away without saving.</source>
          <target state="translated">В этом сценарии пользователь может нажать на ссылку &quot;Герои&quot;,отменить,нажать кнопку &quot;Назад&quot; в браузере или перейти без сохранения.</target>
        </trans-unit>
        <trans-unit id="108f5e361f5279c807a1b95c7212da592113b5c1" translate="yes" xml:space="preserve">
          <source>In this section, you add a &quot;Buy&quot; button to the product details view and set up a cart service to store information about products in the cart.</source>
          <target state="translated">В этом разделе Вы добавляете кнопку &quot;Купить&quot; в окно просмотра информации о продукте и настраиваете службу корзины для хранения информации о продуктах в корзине.</target>
        </trans-unit>
        <trans-unit id="866e463973eba9b6978ee8e41218dfba8d744659" translate="yes" xml:space="preserve">
          <source>In this section, you will see how to use the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; class to add URL query strings in your &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В этом разделе вы увидите, как использовать класс &lt;code&gt;&lt;a href=&quot;../api/common/http/httpparams&quot;&gt;HttpParams&lt;/a&gt;&lt;/code&gt; для добавления строк URL-запроса в ваш запрос &lt;code&gt;&lt;a href=&quot;../api/common/http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="031c1b1a94c645c385beb5a16ec41f21634daadf" translate="yes" xml:space="preserve">
          <source>In this section, you write an &lt;code&gt;UnlessDirective&lt;/code&gt; structural directive that does the opposite of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; displays the template content when the condition is &lt;code&gt;true&lt;/code&gt;. &lt;code&gt;UnlessDirective&lt;/code&gt; displays the content when the condition is &lt;strong&gt;&lt;em&gt;false&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">В этом разделе вы пишете структурную директиву &lt;code&gt;UnlessDirective&lt;/code&gt; , которая противоположна &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; отображает содержимое шаблона , когда условие &lt;code&gt;true&lt;/code&gt; . &lt;code&gt;UnlessDirective&lt;/code&gt; отображает содержимое, когда условие &lt;strong&gt;&lt;em&gt;ложно&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e63bcb3ea1e33ee82569b40699b6b77935276464" translate="yes" xml:space="preserve">
          <source>In this section, you'll add a &quot;Buy&quot; button to the product details page. You'll also set up a cart service to store information about products in the cart.</source>
          <target state="translated">В этом разделе вы добавите кнопку &quot;Купить&quot; на странице с информацией о продукте.Вы также настроите службу корзины для хранения информации о товарах в корзине.</target>
        </trans-unit>
        <trans-unit id="41614ef975f51a1aa45b0453fbf9c5d863d0f122" translate="yes" xml:space="preserve">
          <source>In this section, you'll add a custom strategy that &lt;em&gt;only&lt;/em&gt; preloads routes whose &lt;code&gt;data.preload&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt;. Recall that you can add anything to the &lt;code&gt;data&lt;/code&gt; property of a route.</source>
          <target state="translated">В этом разделе вы создадите пользовательскую стратегию , которая &lt;em&gt;только&lt;/em&gt; предварительно загружает маршруты которых &lt;code&gt;data.preload&lt;/code&gt; флаг установлен в положение &lt;code&gt;true&lt;/code&gt; . Напомним , что вы можете добавить что - либо к &lt;code&gt;data&lt;/code&gt; свойством маршрута.</target>
        </trans-unit>
        <trans-unit id="f368e147277bce5919185a90ecf1ce77809a6f65" translate="yes" xml:space="preserve">
          <source>In this section, you'll create the shopping cart. You'll:</source>
          <target state="translated">В этом разделе вы создадите корзину для покупок.Ты создашь:</target>
        </trans-unit>
        <trans-unit id="3ea0b8c21cff6d2dfec5ecbd44d0d0beb599e670" translate="yes" xml:space="preserve">
          <source>In this section, you'll define two routes:</source>
          <target state="translated">В этом разделе вы определите два маршрута:</target>
        </trans-unit>
        <trans-unit id="e48b893529d0a4f861fdf041e0a05ca27fb957eb" translate="yes" xml:space="preserve">
          <source>In this section, you'll enable navigation to the &lt;code&gt;HeroDetailsComponent&lt;/code&gt; and liberate it from the &lt;code&gt;HeroesComponent&lt;/code&gt;.</source>
          <target state="translated">В этом разделе вы включите навигацию к &lt;code&gt;HeroDetailsComponent&lt;/code&gt; и освободить его от &lt;code&gt;HeroesComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a56f98809a826693d78cbbbfd23fc132fc6017b" translate="yes" xml:space="preserve">
          <source>In this section, you'll extend the app to display full product details in separate pages, with their own URLs.</source>
          <target state="translated">В этом разделе вы расширите приложение для отображения полной информации о продукте на отдельных страницах,с их собственными URL.</target>
        </trans-unit>
        <trans-unit id="2b0c69edf13235c900832e080c6999a183c272d5" translate="yes" xml:space="preserve">
          <source>In this section, you'll finish the app by adding a form-based checkout feature. You'll create a form to collect user information as part of checkout.</source>
          <target state="translated">В этом разделе вы завершите работу приложения,добавив функцию проверки на основе форм.Вы создадите форму для сбора пользовательской информации в рамках оформления заказа.</target>
        </trans-unit>
        <trans-unit id="0bd6664792b4ac76642b5f4d66e0875468eb9a2d" translate="yes" xml:space="preserve">
          <source>In this section, you'll learn to prepare and upgrade an application with &lt;code&gt;ngUpgrade&lt;/code&gt;. The example app is &lt;a href=&quot;https://github.com/angular/angular-phonecat&quot;&gt;Angular PhoneCat&lt;/a&gt; from &lt;a href=&quot;https://docs.angularjs.org/tutorial&quot;&gt;the original AngularJS tutorial&lt;/a&gt;, which is where many of us began our Angular adventures. Now you'll see how to bring that application to the brave new world of Angular.</source>
          <target state="translated">В этом разделе вы научитесь готовить и обновлять приложение с помощью &lt;code&gt;ngUpgrade&lt;/code&gt; . Примером приложения является &lt;a href=&quot;https://github.com/angular/angular-phonecat&quot;&gt;Angular PhoneCat&lt;/a&gt; из &lt;a href=&quot;https://docs.angularjs.org/tutorial&quot;&gt;исходного руководства AngularJS&lt;/a&gt; , с которого многие из нас начали наши приключения в Angular. Теперь вы увидите, как перенести это приложение в дивный новый мир Angular.</target>
        </trans-unit>
        <trans-unit id="269f51a639c36e1471d48fe5ff3480c172f854ea" translate="yes" xml:space="preserve">
          <source>In this section, you'll listen for the hero item click event and update the hero detail.</source>
          <target state="translated">В этом разделе вы прослушаете событие нажатия кнопки &quot;Герой&quot; и обновите подробности о герое.</target>
        </trans-unit>
        <trans-unit id="ce0395b82a4ff81ea97cdb312448ce93adb39b78" translate="yes" xml:space="preserve">
          <source>In this section, you'll update the cart component to use the cart service to display the products in the cart.</source>
          <target state="translated">В этом разделе вы обновите компонент корзины,чтобы использовать службу корзины для отображения продуктов в корзине.</target>
        </trans-unit>
        <trans-unit id="403a238e3ee56ad0c6dd6b48f47e5f1604928707" translate="yes" xml:space="preserve">
          <source>In this section, you'll update the product details component to use the cart service. You'll add a &quot;Buy&quot; button to the product details view. When the &quot;Buy&quot; button is clicked, you'll use the cart service to add the current product to the cart.</source>
          <target state="translated">В этом разделе вы обновите компонент подробной информации о продукте,чтобы воспользоваться услугой корзины.Вы добавите кнопку &quot;Купить&quot; в окно просмотра информации о продукте.При нажатии кнопки &quot;Купить&quot;,вы будете использовать службу корзины,чтобы добавить текущий продукт в корзину.</target>
        </trans-unit>
        <trans-unit id="4679907f079a44d062477a8ebc33625407f5d2e5" translate="yes" xml:space="preserve">
          <source>In this section, you'll use the HTTP client to retrieve shipping prices from an external file.</source>
          <target state="translated">В этом разделе вы будете использовать HTTP-клиент для получения стоимости доставки из внешнего файла.</target>
        </trans-unit>
        <trans-unit id="ab0be9ab1fa97bc67050d6fe01871e1e7b0d6047" translate="yes" xml:space="preserve">
          <source>In this step of the tutorial, you add a route that redirects the user to display the &lt;code&gt;/heroes-list&lt;/code&gt; component.</source>
          <target state="translated">На этом этапе руководства вы добавляете маршрут, который перенаправляет пользователя на отображение компонента &lt;code&gt;/heroes-list&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b61ea9c73f9814540ae97c3ffffaa25de48d7af" translate="yes" xml:space="preserve">
          <source>In this test suite, the &lt;em&gt;only&lt;/em&gt; provider of &lt;code&gt;UserService&lt;/code&gt; is the root testing module, so it is safe to call &lt;code&gt;TestBed.get()&lt;/code&gt; as follows:</source>
          <target state="translated">В этом наборе тестов &lt;em&gt;единственным&lt;/em&gt; поставщиком &lt;code&gt;UserService&lt;/code&gt; является модуль корневого тестирования, поэтому безопасно вызывать &lt;code&gt;TestBed.get()&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="12fefbb22f8d1910173d08c25cf569bed05fd095" translate="yes" xml:space="preserve">
          <source>In this test suite, the &lt;em&gt;only&lt;/em&gt; provider of &lt;code&gt;UserService&lt;/code&gt; is the root testing module, so it is safe to call &lt;code&gt;TestBed.inject()&lt;/code&gt; as follows:</source>
          <target state="translated">В этом наборе тестов &lt;em&gt;единственным&lt;/em&gt; поставщиком &lt;code&gt;UserService&lt;/code&gt; является корневой модуль тестирования, поэтому можно безопасно вызывать &lt;code&gt;TestBed.inject()&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="b4f452c4e432a31d79ddbadb986cc809d85ed173" translate="yes" xml:space="preserve">
          <source>In this tutorial you will build a dynamic form that presents a basic questionaire. You will build an online application for heroes seeking employment. The agency is constantly tinkering with the application process, but by using the dynamic form you can create the new forms on the fly without changing the application code.</source>
          <target state="translated">В этом уроке вы построите динамическую форму,которая представляет собой базовый вопросительный знак.Вы построите онлайн-приложение для героев,ищущих работу.Агентство постоянно следит за процессом подачи заявки,но с помощью динамической формы вы можете создавать новые формы на лету,не меняя код заявки.</target>
        </trans-unit>
        <trans-unit id="3a18179f288ce84d2374dd0900930551cdf29b37" translate="yes" xml:space="preserve">
          <source>In this tutorial, &lt;code&gt;HeroService.getHeroes()&lt;/code&gt; will return an &lt;code&gt;Observable&lt;/code&gt; because it will eventually use the Angular &lt;code&gt;HttpClient.get&lt;/code&gt; method to fetch the heroes and &lt;a href=&quot;../guide/http&quot;&gt;&lt;code&gt;HttpClient.get()&lt;/code&gt; returns an &lt;code&gt;Observable&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">В этом руководстве &lt;code&gt;HeroService.getHeroes()&lt;/code&gt; вернет &lt;code&gt;Observable&lt;/code&gt; , поскольку в конечном итоге он будет использовать метод Angular &lt;code&gt;HttpClient.get&lt;/code&gt; для извлечения героев, а &lt;a href=&quot;../guide/http&quot;&gt; &lt;code&gt;HttpClient.get()&lt;/code&gt; возвращает &lt;code&gt;Observable&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b96485397f1891bdc067a73371f08a27a24de8c0" translate="yes" xml:space="preserve">
          <source>In this tutorial, you build your own app from the ground up, providing experience with the typical development process, as well as an introduction to basic app-design concepts, tools, and terminology.</source>
          <target state="translated">В этом учебном пособии вы создаете собственное приложение с нуля,предоставляя опыт типичного процесса разработки,а также знакомясь с основными концепциями,инструментами и терминологией разработки приложений.</target>
        </trans-unit>
        <trans-unit id="25a44de4babd077d4a5b26746a125c8769135775" translate="yes" xml:space="preserve">
          <source>In this tutorial, you'll add the following data persistence features with help from Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В этом руководстве вы добавите следующие функции сохранения данных с помощью &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; от Angular .</target>
        </trans-unit>
        <trans-unit id="06bb8951e44a68507e6e489ed686a8a717656ad3" translate="yes" xml:space="preserve">
          <source>In this tutorial, you'll create a &lt;code&gt;HeroService&lt;/code&gt; that all application classes can use to get heroes. Instead of creating that service with &lt;code&gt;new&lt;/code&gt;, you'll rely on Angular &lt;a href=&quot;../guide/dependency-injection&quot;&gt;&lt;em&gt;dependency injection&lt;/em&gt;&lt;/a&gt; to inject it into the &lt;code&gt;HeroesComponent&lt;/code&gt; constructor.</source>
          <target state="translated">В этом руководстве вы создадите &lt;code&gt;HeroService&lt;/code&gt; , который могут использоваться всеми классами приложений для получения героев. Вместо создания этого сервиса с &lt;code&gt;new&lt;/code&gt; , вы будете полагаться на &lt;a href=&quot;../guide/dependency-injection&quot;&gt;&lt;em&gt;внедрение зависимостей&lt;/em&gt;&lt;/a&gt; Angular, чтобы внедрить его в конструктор &lt;code&gt;HeroesComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dbc39e7249eb4c5faa1c9f0d048d5c7f317eadd" translate="yes" xml:space="preserve">
          <source>In this tutorial, you'll create a &lt;code&gt;HeroService&lt;/code&gt; that all application classes can use to get heroes. Instead of creating that service with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;&lt;code&gt;new&lt;/code&gt; keyword&lt;/a&gt;, you'll rely on Angular &lt;a href=&quot;../guide/dependency-injection&quot;&gt;&lt;em&gt;dependency injection&lt;/em&gt;&lt;/a&gt; to inject it into the &lt;code&gt;HeroesComponent&lt;/code&gt; constructor.</source>
          <target state="translated">В этом руководстве вы создадите &lt;code&gt;HeroService&lt;/code&gt; которую все классы приложений могут использовать для получения героев. Вместо того, чтобы создавать эту службу с &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new&quot;&gt;ключевым словом &lt;/a&gt; &lt;code&gt;new&lt;/code&gt; , вы будете полагаться на &lt;a href=&quot;../guide/dependency-injection&quot;&gt;&lt;em&gt;инъекцию зависимостей&lt;/em&gt;&lt;/a&gt; Angular, чтобы внедрить ее в конструктор &lt;code&gt;HeroesComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e7cea9c259c2a7bf3c9e055e0e44722b8938e8d0" translate="yes" xml:space="preserve">
          <source>In this way you're using the Angular and JavaScript module systems &lt;em&gt;together&lt;/em&gt;. Although it's easy to confuse the two systems, which share the common vocabulary of &quot;imports&quot; and &quot;exports&quot;, you will become familiar with the different contexts in which they are used.</source>
          <target state="translated">Таким образом, вы используете модульные системы Angular и JavaScript &lt;em&gt;вместе&lt;/em&gt; . Хотя легко спутать две системы, которые имеют общий словарь &amp;laquo;импорт&amp;raquo; и &amp;laquo;экспорт&amp;raquo;, вы познакомитесь с различными контекстами, в которых они используются.</target>
        </trans-unit>
        <trans-unit id="a21cab056614ba2cdbfb90d04db7c7d0479ad584" translate="yes" xml:space="preserve">
          <source>In two-way binding, a data property value flows to the input box from the component as with property binding. The user's changes also flow back to the component, resetting the property to the latest value, as with event binding.</source>
          <target state="translated">При двусторонней привязке значение свойства данных поступает в поле ввода от компонента,как и при привязке свойства.Изменения пользователя также возвращаются обратно к компоненту,возвращая свойство к последнему значению,как при привязке по событию.</target>
        </trans-unit>
        <trans-unit id="31fa5a791d28202748d016367736fc9b97f5d0f5" translate="yes" xml:space="preserve">
          <source>In typical use, application code asks for the dependencies in the constructor and they are resolved by the &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">При обычном использовании код приложения запрашивает зависимости в конструкторе, и они разрешаются с помощью &lt;code&gt;&lt;a href=&quot;injector&quot;&gt;Injector&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="57e2e8623c9d79c4da58de13b115b73b40ee0112" translate="yes" xml:space="preserve">
          <source>In v5, Angular replaced the &lt;code&gt;&lt;a href=&quot;../api/core/reflectiveinjector&quot;&gt;ReflectiveInjector&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;StaticInjector&lt;/code&gt;. The injector no longer requires the Reflect polyfill, reducing application size for most developers.</source>
          <target state="translated">В версии 5 Angular заменил &lt;code&gt;&lt;a href=&quot;../api/core/reflectiveinjector&quot;&gt;ReflectiveInjector&lt;/a&gt;&lt;/code&gt; на &lt;code&gt;StaticInjector&lt;/code&gt; . Для инжектора больше не требуется полифилл Reflect, что уменьшает размер приложения для большинства разработчиков.</target>
        </trans-unit>
        <trans-unit id="a84fd42297b1dcb30b0f64f06976c4d1727bfa6a" translate="yes" xml:space="preserve">
          <source>In version 4.3, Angular introduced new number, date, and currency pipes that increase standardization across browsers and eliminate the need for i18n polyfills. These pipes use the Unicode Common Locale Data Repository (CLDR) instead of the JS Intl API to provide extensive locale support.</source>
          <target state="translated">В версии 4.3,Angular ввела новые цифры,даты и валютные трубы,которые увеличивают стандартизацию в браузерах и устраняют необходимость в полифайлах i18n.Эти трубы используют Unicode Common Locale Data Repository (CLDR)вместо JS Intl API для обеспечения широкой поддержки локализации.</target>
        </trans-unit>
        <trans-unit id="71d97d3019c4bcc2733ae13ec2df5b3eb65a683b" translate="yes" xml:space="preserve">
          <source>In version 5 and later, the compiler automatically performs this rewriting while emitting the &lt;code&gt;.js&lt;/code&gt; file.</source>
          <target state="translated">В версии 5 и более поздних, компилятор автоматически выполняет эту перезапись при создании файла &lt;code&gt;.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c45bfe7a0bc278e7de4469f4b336dda62d4667b6" translate="yes" xml:space="preserve">
          <source>In version 5.0.0, Angular updated its standard pipes to use the CLRD implementation. At that time, Angular also added &lt;a href=&quot;../api/common/deprecatedi18npipesmodule&quot;&gt;&lt;code&gt;DeprecatedI18NPipesModule&lt;/code&gt;&lt;/a&gt; and related APIs to provide limited-time access to the old behavior. If you need to use these &lt;code&gt;Deprecated*&lt;/code&gt; pipes, see &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#i18n-pipes&quot;&gt;Angular change log&lt;/a&gt; and the &lt;a href=&quot;https://docs.google.com/spreadsheets/d/12iygt-_cakNP1VO7MV9g4lq9NsxVWG4tSfc98HpHb0k/edit#gid=0&quot;&gt;Date Formats mappings&lt;/a&gt;.</source>
          <target state="translated">В версии 5.0.0 Angular обновил свои стандартные каналы для использования реализации CLRD. В то же время Angular также добавил &lt;a href=&quot;../api/common/deprecatedi18npipesmodule&quot;&gt; &lt;code&gt;DeprecatedI18NPipesModule&lt;/code&gt; &lt;/a&gt; и соответствующие API для предоставления ограниченного времени доступа к старому поведению. Если вам необходимо использовать эти &lt;code&gt;Deprecated*&lt;/code&gt; каналы, см. &lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#i18n-pipes&quot;&gt;Журнал изменений углов&lt;/a&gt; и &lt;a href=&quot;https://docs.google.com/spreadsheets/d/12iygt-_cakNP1VO7MV9g4lq9NsxVWG4tSfc98HpHb0k/edit#gid=0&quot;&gt;сопоставления форматов даты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9241b9e01cd99078b4ff06f46cefe6357b7cf80a" translate="yes" xml:space="preserve">
          <source>In version 8, the string syntax for the &lt;a href=&quot;../api/router/loadchildren&quot;&gt;&lt;code&gt;loadChildren&lt;/code&gt;&lt;/a&gt; route specification was deprecated, in favor of new syntax that uses &lt;code&gt;import()&lt;/code&gt; syntax.</source>
          <target state="translated">В версии 8 строковый синтаксис для &lt;a href=&quot;../api/router/loadchildren&quot;&gt; &lt;code&gt;loadChildren&lt;/code&gt; &lt;/a&gt; маршрута loadChildren устарел, в пользу нового синтаксиса, использующего синтаксис &lt;code&gt;import()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f9ab07b83f4d06de00ebcc1eb973f38d10ad222" translate="yes" xml:space="preserve">
          <source>In version 9, Ivy is the default. For compatibility with current workflows during the update process, you can choose to opt out of Ivy and continue using the previous compiler, View Engine.</source>
          <target state="translated">В версии 9 по умолчанию используется Айви.Для совместимости с текущими рабочими процессами в процессе обновления вы можете отказаться от Ivy и продолжить использование предыдущего компилятора View Engine.</target>
        </trans-unit>
        <trans-unit id="9edf1a71374f3d46fc3414dc47fc6036e0aaa971" translate="yes" xml:space="preserve">
          <source>In version 9, the server builder which is used for &lt;a href=&quot;app-shell&quot;&gt;App shell&lt;/a&gt; and &lt;a href=&quot;universal&quot;&gt;Angular Universal&lt;/a&gt; has the &lt;code&gt;bundleDependencies&lt;/code&gt; option enabled by default. If you opt-out of bundling dependencies you will need to run the standalone Angular compatibility compiler (&lt;code&gt;ngcc&lt;/code&gt;). This is needed because otherwise Node will be unable to resolve the Ivy version of the packages.</source>
          <target state="translated">В версии 9, строитель - сервер , который используется для &lt;a href=&quot;app-shell&quot;&gt;App оболочки&lt;/a&gt; и &lt;a href=&quot;universal&quot;&gt;угловыми Юниверсал&lt;/a&gt; имеет &lt;code&gt;bundleDependencies&lt;/code&gt; опция включена по умолчанию. Если вы отказываетесь от связывания зависимостей, вам нужно будет запустить автономный компилятор совместимости с Angular ( &lt;code&gt;ngcc&lt;/code&gt; ). Это необходимо, потому что в противном случае Node не сможет разрешить версию пакетов Ivy.</target>
        </trans-unit>
        <trans-unit id="65b1e0f69125d604941dd3273cdaf553c34f079e" translate="yes" xml:space="preserve">
          <source>In your Angular application, you need a component as a placeholder for your AngularJS content. This component uses the service you create to load and bootstrap your AngularJS app after the component is initialized.</source>
          <target state="translated">В Вашей заявке на участие в программе AngularJS Вам понадобится компонент,который будет размещать контент Вашей программы AngularJS.Этот компонент использует созданный вами сервис для загрузки и загрузки вашего приложения AngularJS после инициализации компонента.</target>
        </trans-unit>
        <trans-unit id="ca7e1be139d5918a6ba13a88e83f886ca1299b5f" translate="yes" xml:space="preserve">
          <source>In your StackBlitz project, make sure you have forked or saved your project.</source>
          <target state="translated">В проекте StackBlitz убедитесь,что вы вилкой или сохранили проект.</target>
        </trans-unit>
        <trans-unit id="9e38ffcf83f81a498acb2fef8ccde38da9e38905" translate="yes" xml:space="preserve">
          <source>In your apps, import from the library by name:</source>
          <target state="translated">В ваших приложениях импортируйте из библиотеки по имени:</target>
        </trans-unit>
        <trans-unit id="fbadbb5b6473967b5312043c7bbc97ef238f1be3" translate="yes" xml:space="preserve">
          <source>In your browser, open &lt;a href=&quot;http://localhost:4200/&quot;&gt;http://localhost:4200/&lt;/a&gt; to see the new app run. When you use the &lt;a href=&quot;https://angular.io/cli/serve&quot;&gt;ng serve&lt;/a&gt; command to build an app and serve it locally, the server automatically rebuilds the app and reloads the page when you change any of the source files.</source>
          <target state="translated">В вашем браузере откройте &lt;a href=&quot;http://localhost:4200/&quot;&gt;http: // localhost: 4200 /,&lt;/a&gt; чтобы увидеть запуск нового приложения. Когда вы используете команду &lt;a href=&quot;https://angular.io/cli/serve&quot;&gt;ng serve&lt;/a&gt; для создания приложения и его локального обслуживания, сервер автоматически перестраивает приложение и перезагружает страницу при изменении любого из исходных файлов.</target>
        </trans-unit>
        <trans-unit id="34c360dd0f8faf40b5e6d4e59b4cc7a4861f4594" translate="yes" xml:space="preserve">
          <source>In your code editor, locate the file, &lt;code&gt;crisis-list.component.html&lt;/code&gt; and replace the placeholder content with the following HTML.</source>
          <target state="translated">В редакторе кода найдите файл &lt;code&gt;crisis-list.component.html&lt;/code&gt; и замените содержимое заполнителя следующим HTML.</target>
        </trans-unit>
        <trans-unit id="253ec15e24309b01fdf9d235fb65adb71c186cd2" translate="yes" xml:space="preserve">
          <source>In your code editor, locate the file, &lt;code&gt;heroes-list.component.html&lt;/code&gt; and replace the placeholder content with the following HTML.</source>
          <target state="translated">В редакторе кода найдите файл &lt;code&gt;heroes-list.component.html&lt;/code&gt; и замените содержимое заполнителя следующим HTML.</target>
        </trans-unit>
        <trans-unit id="8ec4a6d13d43ea7dd54f7c5d72944d8815af444e" translate="yes" xml:space="preserve">
          <source>In your code editor, open the file, &lt;code&gt;app.component.html&lt;/code&gt; and replace its contents with the following HTML.</source>
          <target state="translated">В редакторе кода откройте файл &lt;code&gt;app.component.html&lt;/code&gt; и замените его содержимое следующим HTML.</target>
        </trans-unit>
        <trans-unit id="f21b76242519b87008bb820433618b31f09a3a4a" translate="yes" xml:space="preserve">
          <source>In your editor's user preferences (&lt;code&gt;Cmd+,&lt;/code&gt; or &lt;code&gt;Ctrl+,&lt;/code&gt;), add the following:</source>
          <target state="translated">В настройках вашего редактора ( &lt;code&gt;Cmd+,&lt;/code&gt; или &lt;code&gt;Ctrl+,&lt;/code&gt; ) добавьте следующее:</target>
        </trans-unit>
        <trans-unit id="727a7c9f30cdfd8d4dd3c2209d749ac7719e0931" translate="yes" xml:space="preserve">
          <source>In your guard class, implement the guard you want to use. The following example uses &lt;code&gt;&lt;a href=&quot;../api/router/canactivate&quot;&gt;CanActivate&lt;/a&gt;&lt;/code&gt; to guard the route.</source>
          <target state="translated">В своем классе защиты реализуйте охрану, которую хотите использовать. В следующем примере &lt;code&gt;&lt;a href=&quot;../api/router/canactivate&quot;&gt;CanActivate&lt;/a&gt;&lt;/code&gt; используется для защиты маршрута.</target>
        </trans-unit>
        <trans-unit id="e9d09b0521b2a8f8f641dc6031d35a9df0c68728" translate="yes" xml:space="preserve">
          <source>In your library project's &lt;code&gt;package.json&lt;/code&gt; file, add a &quot;schematics&quot; entry with the path to your schema file. The Angular CLI uses this entry to find named schematics in your collection when it runs commands.</source>
          <target state="translated">В файле &lt;code&gt;package.json&lt;/code&gt; вашего библиотечного проекта добавьте запись &amp;laquo;schematics&amp;raquo; с указанием пути к файлу схемы. Angular CLI использует эту запись для поиска именованных схем в вашей коллекции при запуске команд.</target>
        </trans-unit>
        <trans-unit id="3b08d5f94915a160ca1817acb5c6f70371ec0b65" translate="yes" xml:space="preserve">
          <source>In your library's root folder, create a &lt;code&gt;schematics/&lt;/code&gt; folder.</source>
          <target state="translated">В корневой папке вашей библиотеки создайте &lt;code&gt;schematics/&lt;/code&gt; папку.</target>
        </trans-unit>
        <trans-unit id="1f1c44296526073034fe28dcedd37942e5286e42" translate="yes" xml:space="preserve">
          <source>In your new CLI generated app, replace the &lt;code&gt;/src&lt;/code&gt; folder with the one from your &lt;code&gt;StackBlitz&lt;/code&gt; download, and then perform a build.</source>
          <target state="translated">В новом приложении, созданном с помощью интерфейса командной строки, замените папку &lt;code&gt;/src&lt;/code&gt; на папку из загруженного &lt;code&gt;StackBlitz&lt;/code&gt; , а затем выполните сборку.</target>
        </trans-unit>
        <trans-unit id="196ec867c2435e7c91db397d1f83ee4ef616a06a" translate="yes" xml:space="preserve">
          <source>In your routing NgModule, re-export the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; as a convenience so that components of the companion NgModule have access to router directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В NgModule маршрутизации повторно экспортируйте &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; для удобства, чтобы компоненты сопутствующего NgModule имели доступ к директивам маршрутизатора, таким как &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30cfc944e0b921f322a32900e990ff35bbccfcee" translate="yes" xml:space="preserve">
          <source>In your routing module, use the appropriate property in your &lt;code&gt;routes&lt;/code&gt; configuration. Here, &lt;code&gt;canActivate&lt;/code&gt; tells the router to mediate navigation to this particular route.</source>
          <target state="translated">В модуле маршрутизации используйте соответствующее свойство в конфигурации &lt;code&gt;routes&lt;/code&gt; . Здесь &lt;code&gt;canActivate&lt;/code&gt; сообщает маршрутизатору о необходимости навигации по этому конкретному маршруту.</target>
        </trans-unit>
        <trans-unit id="399353050f6f971c4351995b83ecf4b94005b8cf" translate="yes" xml:space="preserve">
          <source>In your service, import the following router members, implement &lt;code&gt;&lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt;, and inject the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service:</source>
          <target state="translated">В своей службе импортируйте следующих членов маршрутизатора, реализуйте &lt;code&gt;&lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; и внедрите службу &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="850625969ea40ebbce6399197743447eb486664b" translate="yes" xml:space="preserve">
          <source>In-app Routing and Navigation</source>
          <target state="translated">Маршрутизация и навигация In-app</target>
        </trans-unit>
        <trans-unit id="b08704b5f05695c4e9631bc892eb0365d32b461a" translate="yes" xml:space="preserve">
          <source>In-app navigation: routing to views</source>
          <target state="translated">In-app навигация:маршрутизация к видам</target>
        </trans-unit>
        <trans-unit id="ce97d1ac42d70ee94d614eb0f89cf54d2d267038" translate="yes" xml:space="preserve">
          <source>Include an installation schematic so that &lt;code&gt;ng add&lt;/code&gt; can add your library to a project.</source>
          <target state="translated">Включите схему установки, чтобы &lt;code&gt;ng add&lt;/code&gt; мог добавить вашу библиотеку в проект.</target>
        </trans-unit>
        <trans-unit id="08720542b91aacc8813c92e6ceea960b5ca4fe91" translate="yes" xml:space="preserve">
          <source>Include an update schematic so that &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; can update your library&amp;rsquo;s dependencies and provide migrations for breaking changes in new releases.</source>
          <target state="translated">Включите схему обновления, чтобы &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; мог обновлять зависимости вашей библиотеки и предоставлять миграции для прерывания изменений в новых выпусках.</target>
        </trans-unit>
        <trans-unit id="6707611a40ef57bc0b4bbd844cd17854567e9ab1" translate="yes" xml:space="preserve">
          <source>Include an update schematic so that &lt;code&gt;ng update&lt;/code&gt; can update your library&amp;rsquo;s dependencies and provide migrations for breaking changes in new releases.</source>
          <target state="translated">Включите схему обновления, чтобы &lt;code&gt;ng update&lt;/code&gt; мог обновлять зависимости вашей библиотеки и обеспечивать миграции для критических изменений в новых выпусках.</target>
        </trans-unit>
        <trans-unit id="282924231e939d92199d1eca77627325f87ee961" translate="yes" xml:space="preserve">
          <source>Include generation schematics in your library so that &lt;code&gt;ng generate&lt;/code&gt; can scaffold your defined artifacts (components, services, tests, and so on) in a project.</source>
          <target state="translated">Включите схемы генерации в свою библиотеку, чтобы &lt;code&gt;ng generate&lt;/code&gt; могла создать определенные вами артефакты (компоненты, сервисы, тесты и т. Д.) В проекте.</target>
        </trans-unit>
        <trans-unit id="4bb4ec7c27202bd27c6403b4450d02067c520d2b" translate="yes" xml:space="preserve">
          <source>Include required infrastructure such as the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Включите необходимую инфраструктуру, такую ​​как &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec6e7b9747e35ebc5f30dc0a428e02bb8ff75e90" translate="yes" xml:space="preserve">
          <source>Include the service in the &lt;code&gt;AppModule&lt;/code&gt; or in a module that is only imported by the &lt;code&gt;AppModule&lt;/code&gt;</source>
          <target state="translated">Включите сервис в &lt;code&gt;AppModule&lt;/code&gt; или в модуль, который импортируется только &lt;code&gt;AppModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8aba49aa4e1a02e3008081bffbd5efbadc7cf869" translate="yes" xml:space="preserve">
          <source>Include your pipe in the &lt;code&gt;declarations&lt;/code&gt; field of the &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata in order for it to be available to a template. See the &lt;code&gt;app.module.ts&lt;/code&gt; file in the example app (live example). For details, see &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">Включите вашу трубу в &lt;code&gt;declarations&lt;/code&gt; области &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; метаданных для того , чтобы быть доступными для шаблона. См. Файл &lt;code&gt;app.module.ts&lt;/code&gt; в примере приложения (живой пример). Подробнее см. &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="497e47d580938603d6e2f90429b6ca666fccc44c" translate="yes" xml:space="preserve">
          <source>Includes &lt;a href=&quot;../api/core/provider&quot;&gt;providers&lt;/a&gt; and methods to compile and run the app on the client using the &lt;a href=&quot;aot-compiler&quot;&gt;JIT compiler&lt;/a&gt;.</source>
          <target state="translated">Включает &lt;a href=&quot;../api/core/provider&quot;&gt;поставщиков&lt;/a&gt; и методы для компиляции и запуска приложения на клиенте с использованием &lt;a href=&quot;aot-compiler&quot;&gt;JIT-компилятора&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ad6c20b67c9ef5c8bae321419d3e7b82dfca42c" translate="yes" xml:space="preserve">
          <source>Includes a link to add the &lt;code&gt;manifest.json&lt;/code&gt; file.</source>
          <target state="translated">Включает ссылку для добавления файла &lt;code&gt;manifest.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec7fab0bf1d7fbc129b6a52468ce43ec265c54c5" translate="yes" xml:space="preserve">
          <source>Includes a link to add the &lt;code&gt;manifest.webmanifest&lt;/code&gt; file.</source>
          <target state="translated">Включает ссылку для добавления файла &lt;code&gt;manifest.webmanifest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ede5524d447137c6007fc3872dcd98681351a7c8" translate="yes" xml:space="preserve">
          <source>Includes testability features, typed request and response objects, request and response interception, observable APIs, and streamlined error handling.</source>
          <target state="translated">Включает функции тестируемости,типизированные объекты запроса и ответа,перехват запросов и ответов,наблюдаемые API и оптимизированную обработку ошибок.</target>
        </trans-unit>
        <trans-unit id="9b0793ed118cccc9349319604ac83b01285a42ad" translate="yes" xml:space="preserve">
          <source>Including a route parameter (passing the Hero &lt;code&gt;id&lt;/code&gt; while routing to the &quot;Hero Detail&quot;).</source>
          <target state="translated">Включая параметр маршрута (передача &lt;code&gt;id&lt;/code&gt; героя при маршрутизации в &amp;laquo;Детали героя&amp;raquo;).</target>
        </trans-unit>
        <trans-unit id="98e74adf3229ab63477c62be5d7146a7e849046e" translate="yes" xml:space="preserve">
          <source>Inclusive Components</source>
          <target state="translated">Инклюзивные компоненты</target>
        </trans-unit>
        <trans-unit id="7099fad44ed7e3e008c2391fbea8ece07dcd4d22" translate="yes" xml:space="preserve">
          <source>Increased security with native &lt;a href=&quot;https://web.dev/trusted-types/&quot;&gt;Trusted Types&lt;/a&gt; in Angular</source>
          <target state="translated">Повышенная безопасность с помощью встроенных &lt;a href=&quot;https://web.dev/trusted-types/&quot;&gt;доверенных типов&lt;/a&gt; в Angular</target>
        </trans-unit>
        <trans-unit id="d686caf322ed32f4566b224dd18bea8a4089d16d" translate="yes" xml:space="preserve">
          <source>Increases the number of pending request</source>
          <target state="translated">Увеличивает количество нерассмотренных запросов</target>
        </trans-unit>
        <trans-unit id="a1d5d5a9b2dbc095f06632faa7f8d2ec706001b6" translate="yes" xml:space="preserve">
          <source>Incremental builds can be run as a background process in your dev environment. To take advantage of this feature add the &lt;code&gt;--watch&lt;/code&gt; flag to the build command:</source>
          <target state="translated">Инкрементные сборки могут быть запущены как фоновый процесс в вашей среде разработки. Чтобы воспользоваться этой возможностью, добавьте флаг &lt;code&gt;--watch&lt;/code&gt; к команде build:</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="57a507dedf4559e07065957eca1175bc03ba365d" translate="yes" xml:space="preserve">
          <source>Index in the array to insert the control</source>
          <target state="translated">Индекс в массиве для вставки элемента управления</target>
        </trans-unit>
        <trans-unit id="ee3ba6ae75b8a4c10a8036ec35138251054f277c" translate="yes" xml:space="preserve">
          <source>Index in the array to remove the control</source>
          <target state="translated">Индекс в массиве для удаления управления</target>
        </trans-unit>
        <trans-unit id="66e18f43642f8990d457a1934bd052577f94b398" translate="yes" xml:space="preserve">
          <source>Index in the array to replace the control</source>
          <target state="translated">Индекс в массиве для замены элемента управления</target>
        </trans-unit>
        <trans-unit id="5f69ec55403ddc6ac8d13721d541e09482a7940b" translate="yes" xml:space="preserve">
          <source>Index in the array to retrieve the control</source>
          <target state="translated">Индекс в массиве для получения управления</target>
        </trans-unit>
        <trans-unit id="6906761e076d1a610413de4171c8d5dea67905df" translate="yes" xml:space="preserve">
          <source>Indicates if the provider is a multi-provider or a regular provider.</source>
          <target state="translated">Указывает,является ли провайдер мульти-провайдером или обычным провайдером.</target>
        </trans-unit>
        <trans-unit id="a226b2f1a87e5950fc108a1472b50623b2217451" translate="yes" xml:space="preserve">
          <source>Indicates that the result of a &lt;a href=&quot;core/pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt; transformation has changed even though the reference has not changed.</source>
          <target state="translated">Указывает, что результат преобразования &lt;a href=&quot;core/pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt; изменился, даже если ссылка не изменилась.</target>
        </trans-unit>
        <trans-unit id="ef1f129438ed53e3939954fd8d48915df19e8c7b" translate="yes" xml:space="preserve">
          <source>Indicates that the result of a &lt;a href=&quot;pipe&quot;&gt;&lt;code&gt;Pipe&lt;/code&gt;&lt;/a&gt; transformation has changed even though the reference has not changed.</source>
          <target state="translated">Указывает, что результат преобразования &lt;a href=&quot;pipe&quot;&gt; &lt;code&gt;Pipe&lt;/code&gt; &lt;/a&gt; изменился, даже если ссылка не изменилась.</target>
        </trans-unit>
        <trans-unit id="73f7d541bd341c43c84d9404f23680ea85ea9d12" translate="yes" xml:space="preserve">
          <source>Indicates when a location is initialized.</source>
          <target state="translated">Указывает,когда инициализируется местоположение.</target>
        </trans-unit>
        <trans-unit id="2339b8ad3625abec50c5fec9ccfe1b4c0adb5b6e" translate="yes" xml:space="preserve">
          <source>Indonesian</source>
          <target state="translated">Indonesian</target>
        </trans-unit>
        <trans-unit id="e30c5310c8d6f412a378028007bd3332f3ddf51a" translate="yes" xml:space="preserve">
          <source>Infers template context types where configured (for example, allowing correct type-checking of &lt;code&gt;NgFor&lt;/code&gt;).</source>
          <target state="translated">Выводит типы контекста шаблона, если они настроены (например, разрешая правильную проверку типов &lt;code&gt;NgFor&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ff0a8f1a1348503cfadffc6b2cad445ba983c4ab" translate="yes" xml:space="preserve">
          <source>Infers the correct type of &lt;code&gt;$event&lt;/code&gt; in component/directive, DOM, and animation event bindings.</source>
          <target state="translated">Определяет правильный тип &lt;code&gt;$event&lt;/code&gt; в привязках событий компонента / директивы, модели DOM и анимации.</target>
        </trans-unit>
        <trans-unit id="cfaf4d7a931a957a0518549794c679bcfefd25f7" translate="yes" xml:space="preserve">
          <source>Infers the correct type of components/directives, including generics.</source>
          <target state="translated">Показывает правильный тип компонентов/директив,в том числе дженерики.</target>
        </trans-unit>
        <trans-unit id="0518dc3b51a7ad378102d238e804098cc7c8a2c5" translate="yes" xml:space="preserve">
          <source>Infers the correct type of local references to DOM elements, based on the tag name (for example, the type that &lt;code&gt;document.createElement&lt;/code&gt; would return for that tag).</source>
          <target state="translated">Выводит правильный тип локальных ссылок на элементы DOM на основе имени тега (например, типа, который &lt;code&gt;document.createElement&lt;/code&gt; вернет для этого тега).</target>
        </trans-unit>
        <trans-unit id="fe8a63fb884b51a65ffbab786ee171700ba71dca" translate="yes" xml:space="preserve">
          <source>Infinity, can be used with plus and minus. Example: &amp;infin;, +&amp;infin;, -&amp;infin;</source>
          <target state="translated">Бесконечность, можно использовать с плюсом и минусом. Пример: &amp;infin;, + &amp;infin;, -&amp;infin;</target>
        </trans-unit>
        <trans-unit id="71b2d6934c04d0811bdb26319c33abe4a79bac50" translate="yes" xml:space="preserve">
          <source>Information about a navigation operation. Retrieve the most recent navigation object with the &lt;a href=&quot;router#getcurrentnavigation&quot;&gt;Router.getCurrentNavigation() method&lt;/a&gt; .</source>
          <target state="translated">Информация об операции навигации. Получите самый последний объект навигации с помощью &lt;a href=&quot;router#getcurrentnavigation&quot;&gt;метода Router.getCurrentNavigation ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3dedb476a249b2a3aeb52da6fa5d5b4c4e0f38c" translate="yes" xml:space="preserve">
          <source>Information about a navigation operation. Retrieve the most recent navigation object with the &lt;a href=&quot;router/router#getcurrentnavigation&quot;&gt;Router.getCurrentNavigation() method&lt;/a&gt; .</source>
          <target state="translated">Информация об операции навигации. Получите самый последний объект навигации с помощью &lt;a href=&quot;router/router#getcurrentnavigation&quot;&gt;метода Router.getCurrentNavigation ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17e8aa425129cc14c2dcfed09c7bb96d8d9d34ce" translate="yes" xml:space="preserve">
          <source>Information about a navigation operation. Retrieve the most recent navigation object with the &lt;code&gt;router.getCurrentNavigation()&lt;/code&gt; method.</source>
          <target state="translated">Информация о навигационной операции. Получите самый последний объект навигации с помощью &lt;code&gt;router.getCurrentNavigation()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5d8911a7c835165927ce0fe2f98e8c5ee99367a3" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;a href=&quot;directive&quot;&gt;Directive&lt;/a&gt; decorator</source>
          <target state="translated">Наследуется от &lt;a href=&quot;directive&quot;&gt;Директивы&lt;/a&gt; декоратора</target>
        </trans-unit>
        <trans-unit id="dcd77ef0b804e5064dd803f77b8a828a13037e8e" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;code&gt;&lt;a href=&quot;abstractcontroldirective&quot;&gt;AbstractControlDirective&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Наследуется от &lt;code&gt;&lt;a href=&quot;abstractcontroldirective&quot;&gt;AbstractControlDirective&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2e16c0ede4e151e344b0a7018a817ca81bff170" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;code&gt;&lt;a href=&quot;abstractformgroupdirective&quot;&gt;AbstractFormGroupDirective&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Наследуется от &lt;code&gt;&lt;a href=&quot;abstractformgroupdirective&quot;&gt;AbstractFormGroupDirective&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7b0e6fa8afe9fe66b319e4ffce4d5b04030afdd1" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;code&gt;&lt;a href=&quot;controlcontainer&quot;&gt;ControlContainer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Наследуется от &lt;code&gt;&lt;a href=&quot;controlcontainer&quot;&gt;ControlContainer&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aa6e1c6b872fa792c0cda39792e0c2d17339088" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;code&gt;&lt;a href=&quot;ngclassbase&quot;&gt;NgClassBase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Наследуется от &lt;code&gt;&lt;a href=&quot;ngclassbase&quot;&gt;NgClassBase&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0b58cc13a8f7a9113f65b285338c3c8ecc3a76ce" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Наследуется от &lt;code&gt;&lt;a href=&quot;ngcontrol&quot;&gt;NgControl&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9240846abcc88d5bc03f7b8b3ea9b93dc9d94d85" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;code&gt;&lt;a href=&quot;ngstylebase&quot;&gt;NgStyleBase&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Наследуется от &lt;code&gt;&lt;a href=&quot;ngstylebase&quot;&gt;NgStyleBase&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="77f97d1404eeb944941dce572340411b8745a17f" translate="yes" xml:space="preserve">
          <source>Inherited from &lt;code&gt;&lt;a href=&quot;requiredvalidator&quot;&gt;RequiredValidator&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Наследуется от &lt;code&gt;&lt;a href=&quot;requiredvalidator&quot;&gt;RequiredValidator&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20a9fca8990fcc98b2b18559e85df597fd3a6518" translate="yes" xml:space="preserve">
          <source>Initial Tour of Heroes example application for beginning the tutorial. For more information, see &lt;a href=&quot;../tutorial/toh-pt0&quot;&gt;Create a new project&lt;/a&gt;.</source>
          <target state="translated">Пример приложения Initial Tour of Heroes для начала обучения. Для получения дополнительной информации см. &lt;a href=&quot;../tutorial/toh-pt0&quot;&gt;Создание нового проекта&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f370e247cdb302508a8b07274aac235758f135a4" translate="yes" xml:space="preserve">
          <source>Initial git repository commit information.</source>
          <target state="translated">Первоначальная информация о фиксации git-репозитория.</target>
        </trans-unit>
        <trans-unit id="571af2d87fcb6ae228307d5bca556e15b485b55f" translate="yes" xml:space="preserve">
          <source>Initial load</source>
          <target state="translated">Начальная нагрузка</target>
        </trans-unit>
        <trans-unit id="9295a6b527e07161cef57e1c1ccd71b70c89f70d" translate="yes" xml:space="preserve">
          <source>InitialNavigation</source>
          <target state="translated">InitialNavigation</target>
        </trans-unit>
        <trans-unit id="67c3a59c8fd61dc6486a966bfc500708124ba415" translate="yes" xml:space="preserve">
          <source>Initialize a control as disabled</source>
          <target state="translated">Инициализировать контроль как отключенный</target>
        </trans-unit>
        <trans-unit id="4eebcc10a8e490cd62529c5e8e054755f7da1680" translate="yes" xml:space="preserve">
          <source>Initialize the AbstractControl instance.</source>
          <target state="translated">Инициализируйте экземпляр AbstractControl.</target>
        </trans-unit>
        <trans-unit id="2d9f5b3d7a71b9315bdd35eb72e500c9bc28970b" translate="yes" xml:space="preserve">
          <source>Initialize the directive or component after Angular first displays the data-bound properties and sets the directive or component's input properties. See details in &lt;a href=&quot;lifecycle-hooks#oninit&quot;&gt;Initializing a component or directive&lt;/a&gt; in this document.</source>
          <target state="translated">Инициализируйте директиву или компонент после того, как Angular сначала отобразит свойства с привязкой к данным и задаст входные свойства директивы или компонента. См. Подробности в разделе &amp;laquo; &lt;a href=&quot;lifecycle-hooks#oninit&quot;&gt;Инициализация компонента или директивы&amp;raquo;&lt;/a&gt; в этом документе.</target>
        </trans-unit>
        <trans-unit id="9dc3a6c3f424e12509055f6982dc7843c5ee3f57" translate="yes" xml:space="preserve">
          <source>Initialize the directive/component after Angular first displays the data-bound properties and sets the directive/component's input properties.</source>
          <target state="translated">Инициализируйте директиву/компоненту после того,как Angular сначала отобразит свойства,связанные с данными,и задаст входные свойства директивы/компоненты.</target>
        </trans-unit>
        <trans-unit id="a95372f851a37c7ccab21bff14bd44def255e637" translate="yes" xml:space="preserve">
          <source>Initialize the environment for testing with a compiler factory, a PlatformRef, and an angular module. These are common to every test in the suite.</source>
          <target state="translated">Инициализируйте среду для тестирования с помощью заводского компилятора,PlatformRef и углового модуля.Это общее для каждого теста в комплекте.</target>
        </trans-unit>
        <trans-unit id="0c3674ebd78fe94c6d9fa6c8cfe3b72434b691fc" translate="yes" xml:space="preserve">
          <source>Initialize the testing environment for the entire test run.</source>
          <target state="translated">Инициализируйте среду тестирования на протяжении всего пробного прогона.</target>
        </trans-unit>
        <trans-unit id="aa1459b074a250001c22df0a6ff4d2a090a6bddc" translate="yes" xml:space="preserve">
          <source>Initializes a constructor instance.</source>
          <target state="translated">Инициализирует экземпляр конструктора.</target>
        </trans-unit>
        <trans-unit id="c9db2ae584e270a26cd5d19e6158467ad592c103" translate="yes" xml:space="preserve">
          <source>Initializes an instance of the event-manager service.</source>
          <target state="translated">Инициализирует экземпляр службы event-manager.</target>
        </trans-unit>
        <trans-unit id="754ef6b0761c3646e19a5a7b638f7d2b30efe518" translate="yes" xml:space="preserve">
          <source>Initializes that property with the corresponding argument when creating an instance of the class.</source>
          <target state="translated">Инициализирует это свойство соответствующим аргументом при создании экземпляра класса.</target>
        </trans-unit>
        <trans-unit id="2699534e66ed5e13056581917d48556f49da8381" translate="yes" xml:space="preserve">
          <source>Initializes the animation.</source>
          <target state="translated">Инициализирует анимацию.</target>
        </trans-unit>
        <trans-unit id="d7bc389cad16303b5a27f5b7ab489c3a1a9d4378" translate="yes" xml:space="preserve">
          <source>Initializes the control with an initial state value, or with an object that contains both a value and a disabled status.</source>
          <target state="translated">Инициализирует управление начальным значением состояния или объектом,содержащим как значение,так и статус &quot;Отключено&quot;.</target>
        </trans-unit>
        <trans-unit id="45131dcddc1529f6f3b00cd78ce30c35d914b381" translate="yes" xml:space="preserve">
          <source>Initializes the control with an initial value, or an object that defines the initial value and disabled state.</source>
          <target state="translated">Инициализирует управление начальным значением или объектом,который определяет начальное значение и состояние отключения.</target>
        </trans-unit>
        <trans-unit id="37ee460935fc0f5ed51a8e919d18a3056e25d96f" translate="yes" xml:space="preserve">
          <source>Initializes the given channel and attaches a new &lt;a href=&quot;clientmessagebroker&quot;&gt;&lt;code&gt;ClientMessageBroker&lt;/code&gt;&lt;/a&gt; to it.</source>
          <target state="translated">Инициализирует данный канал и присоединяет к нему новый &lt;a href=&quot;clientmessagebroker&quot;&gt; &lt;code&gt;ClientMessageBroker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="642b54430a0eb721573dc494e1c4d52db3a4409f" translate="yes" xml:space="preserve">
          <source>Initializes the given channel and attaches a new &lt;a href=&quot;servicemessagebroker&quot;&gt;&lt;code&gt;ServiceMessageBroker&lt;/code&gt;&lt;/a&gt; to it.</source>
          <target state="translated">Инициализирует данный канал и присоединяет к нему новый &lt;a href=&quot;servicemessagebroker&quot;&gt; &lt;code&gt;ServiceMessageBroker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45c1066fbea6cba9ced272d9562f0736aff32776" translate="yes" xml:space="preserve">
          <source>Initializing Form Controls</source>
          <target state="translated">Инициализирующий контроль формы</target>
        </trans-unit>
        <trans-unit id="21a441852885d7b36abf9a2af6624106cec7028b" translate="yes" xml:space="preserve">
          <source>Initializing a component or directive</source>
          <target state="translated">Инициализация компонента или директивы</target>
        </trans-unit>
        <trans-unit id="1fe4e72a93c746bc6e02495144ba7947c1a26ff3" translate="yes" xml:space="preserve">
          <source>Initially, the form contains one &lt;code&gt;Alias&lt;/code&gt; field. To add another field, click the &lt;strong&gt;Add Alias&lt;/strong&gt; button. You can also validate the array of aliases reported by the form model displayed by &lt;code&gt;&lt;a href=&quot;../api/forms/form&quot;&gt;Form&lt;/a&gt; &lt;a href=&quot;reactive-forms&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; at the bottom of the template.</source>
          <target state="translated">Изначально форма содержит одно поле &lt;code&gt;Alias&lt;/code&gt; . Чтобы добавить другое поле, нажмите кнопку &amp;laquo; &lt;strong&gt;Добавить псевдоним&amp;raquo;&lt;/strong&gt; . Вы также можете проверить массив псевдонимов, представленных моделью формы, отображаемой &lt;code&gt;&lt;a href=&quot;../api/forms/form&quot;&gt;Form&lt;/a&gt; &lt;a href=&quot;reactive-forms&quot;&gt;Value&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;../api/forms/form&quot;&gt;формы&lt;/a&gt; в нижней части шаблона.</target>
        </trans-unit>
        <trans-unit id="42eadde3ebeedcb01845dc3c87d03e98510aa2f2" translate="yes" xml:space="preserve">
          <source>Initially, the form contains one &lt;code&gt;Alias&lt;/code&gt; field. To add another field, click the &lt;strong&gt;Add Alias&lt;/strong&gt; button. You can also validate the array of aliases reported by the form model displayed by &lt;code&gt;&lt;a href=&quot;../api/forms/form&quot;&gt;Form&lt;/a&gt; Value&lt;/code&gt; at the bottom of the template.</source>
          <target state="translated">Изначально форма содержит одно поле &lt;code&gt;Alias&lt;/code&gt; . Чтобы добавить еще одно поле, нажмите кнопку &amp;laquo; &lt;strong&gt;Добавить псевдоним&amp;raquo;&lt;/strong&gt; . Вы также можете проверить массив псевдонимов, сообщаемых моделью формы, отображаемой &lt;code&gt;&lt;a href=&quot;../api/forms/form&quot;&gt;Form&lt;/a&gt; Value&lt;/code&gt; &lt;a href=&quot;../api/forms/form&quot;&gt;формы&lt;/a&gt; в нижней части шаблона.</target>
        </trans-unit>
        <trans-unit id="18f7dc17ff8fd13a734c298c804eb7b21097f85d" translate="yes" xml:space="preserve">
          <source>Initially, this &lt;code&gt;package.json&lt;/code&gt; includes &lt;em&gt;a starter set of packages&lt;/em&gt;, some of which are required by Angular and others that support common application scenarios. You add packages to &lt;code&gt;package.json&lt;/code&gt; as your application evolves. You may even remove some.</source>
          <target state="translated">Первоначально этот &lt;code&gt;package.json&lt;/code&gt; включает &lt;em&gt;начальный набор пакетов&lt;/em&gt; , некоторые из которых требуются Angular, а другие поддерживают общие сценарии приложений. Вы добавляете пакеты в &lt;code&gt;package.json&lt;/code&gt; по мере развития вашего приложения. Вы можете даже удалить некоторые.</target>
        </trans-unit>
        <trans-unit id="f0514cac9bc7568beb69cbbc30da8b406819cc6b" translate="yes" xml:space="preserve">
          <source>Inject</source>
          <target state="translated">Inject</target>
        </trans-unit>
        <trans-unit id="7268a66f5506231753b6382da0b8d3a4a8843b60" translate="yes" xml:space="preserve">
          <source>Inject &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; into the &lt;code&gt;CartService&lt;/code&gt; constructor:</source>
          <target state="translated">Вводят &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;CartService&lt;/code&gt; конструктор:</target>
        </trans-unit>
        <trans-unit id="a0b584ab9a7933f64f5ad564c80c4c66772a45ff" translate="yes" xml:space="preserve">
          <source>Inject &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; into the constructor of the &lt;code&gt;CartService&lt;/code&gt; component class:</source>
          <target state="translated">Вводят &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; в конструктор &lt;code&gt;CartService&lt;/code&gt; класса компонента:</target>
        </trans-unit>
        <trans-unit id="169d2e7db743680da7bcee35e770f063b1748fe7" translate="yes" xml:space="preserve">
          <source>Inject &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; in the constructor of the component class so they are available to this component:</source>
          <target state="translated">Внедрите &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; в конструктор класса компонента, чтобы они были доступны этому компоненту:</target>
        </trans-unit>
        <trans-unit id="07e6446b3ec41eff6e77df6a94f68f05da7cbf47" translate="yes" xml:space="preserve">
          <source>Inject &lt;code&gt;&lt;a href=&quot;httptestingcontroller&quot;&gt;HttpTestingController&lt;/a&gt;&lt;/code&gt; to expect and flush requests in your tests.</source>
          <target state="translated">Вводят &lt;code&gt;&lt;a href=&quot;httptestingcontroller&quot;&gt;HttpTestingController&lt;/a&gt;&lt;/code&gt; ожидать и флеш запросов в ваших тестах.</target>
        </trans-unit>
        <trans-unit id="0952ea7f63acfd82b419fcf6cced10453de431df" translate="yes" xml:space="preserve">
          <source>Inject &lt;code&gt;defaultValue&lt;/code&gt; instead if token not found.</source>
          <target state="translated">Вводят &lt;code&gt;defaultValue&lt;/code&gt; вместо этого , если маркер не найден.</target>
        </trans-unit>
        <trans-unit id="6f91c79ea7fa6708f138cf01e5ccc0fc1c490de0" translate="yes" xml:space="preserve">
          <source>Inject an instance of &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; by adding it to your application's constructor:</source>
          <target state="translated">Внедрите экземпляр &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; , добавив его в конструктор вашего приложения:</target>
        </trans-unit>
        <trans-unit id="d35e138d7924df4f57c58f11f62047d6ce402802" translate="yes" xml:space="preserve">
          <source>Inject in HeroService, which uses the service to send a message.</source>
          <target state="translated">Инъекция в HeroService,который использует сервис для отправки сообщения.</target>
        </trans-unit>
        <trans-unit id="b30cf752176e7d45dca92a9a96dfc9004399a587" translate="yes" xml:space="preserve">
          <source>Inject in MessagesComponent, which displays that message, and also displays the ID when the user clicks a hero.</source>
          <target state="translated">Inject in MessagesComponent,который отображает это сообщение,а также отображает ID,когда пользователь щелкает на героя.</target>
        </trans-unit>
        <trans-unit id="d1eeaaa0b805224cf7a0933509d9f3a0615a6f94" translate="yes" xml:space="preserve">
          <source>Inject into a derived class</source>
          <target state="translated">Вводить в производный класс</target>
        </trans-unit>
        <trans-unit id="b3f6806d5b467cb7c3bc8bc8ecba219c8ede60db" translate="yes" xml:space="preserve">
          <source>Inject it into the &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">Вставьте его в &lt;code&gt;HeroService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d776a9677bf6c1c0ad00a83d4d70c493a2bace4" translate="yes" xml:space="preserve">
          <source>Inject it into the dashboard's constructor.</source>
          <target state="translated">Введите его в конструктор приборной панели.</target>
        </trans-unit>
        <trans-unit id="c6a769a7874598dad610ef89ad42c1d6435742d6" translate="yes" xml:space="preserve">
          <source>Inject the &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service.</source>
          <target state="translated">Вводят &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; обслуживание.</target>
        </trans-unit>
        <trans-unit id="28003182cc950317a6abaadf804293a86af1d3ae" translate="yes" xml:space="preserve">
          <source>Inject the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;HeroListComponent&lt;/code&gt; constructor.</source>
          <target state="translated">Вставьте &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; в конструктор &lt;code&gt;HeroListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="420762bbb815b0bd858d87aa0d93b5c20b06538d" translate="yes" xml:space="preserve">
          <source>Inject the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;HeroService&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; services into the constructor, saving their values in private fields:</source>
          <target state="translated">Впрыскивать &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;HeroService&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; службы в конструктор, сохраняя их значение в частных областях:</target>
        </trans-unit>
        <trans-unit id="2e1405e8adb50326460760ac57b28afebe1b1ae0" translate="yes" xml:space="preserve">
          <source>Inject the &lt;code&gt;CartService&lt;/code&gt; so that the cart component can use it.</source>
          <target state="translated">Вводят в &lt;code&gt;CartService&lt;/code&gt; так , что телега компонент может использовать его.</target>
        </trans-unit>
        <trans-unit id="a800bd5a4004e16e0370dad20e9742d5664827db" translate="yes" xml:space="preserve">
          <source>Inject the &lt;code&gt;CartService&lt;/code&gt; to manage cart information.</source>
          <target state="translated">Внедрить &lt;code&gt;CartService&lt;/code&gt; для управления информацией о корзине.</target>
        </trans-unit>
        <trans-unit id="65162f531f207477535e62e7ea7492fac9f6c223" translate="yes" xml:space="preserve">
          <source>Inject the &lt;code&gt;CrisisService&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; and implement the &lt;code&gt;&lt;a href=&quot;../api/core/reflectiveinjector#resolve&quot;&gt;resolve()&lt;/a&gt;&lt;/code&gt; method. That method could return a &lt;code&gt;Promise&lt;/code&gt;, an &lt;code&gt;Observable&lt;/code&gt;, or a synchronous return value.</source>
          <target state="translated">&lt;code&gt;CrisisService&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; и внедрите метод resol &lt;code&gt;&lt;a href=&quot;../api/core/reflectiveinjector#resolve&quot;&gt;resolve()&lt;/a&gt;&lt;/code&gt; . Этот метод может возвращать &lt;code&gt;Promise&lt;/code&gt; , &lt;code&gt;Observable&lt;/code&gt; или синхронное возвращаемое значение.</target>
        </trans-unit>
        <trans-unit id="0b16f99c02b8f10852282d8d6eebe4a3cc42a9b4" translate="yes" xml:space="preserve">
          <source>Inject the &lt;code&gt;CrisisService&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; and implement the &lt;code&gt;resolve()&lt;/code&gt; method. That method could return a &lt;code&gt;Promise&lt;/code&gt;, an &lt;code&gt;Observable&lt;/code&gt;, or a synchronous return value.</source>
          <target state="translated">Вводят &lt;code&gt;CrisisService&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; и реализовать &lt;code&gt;resolve()&lt;/code&gt; метод. Этот метод может возвращать &lt;code&gt;Promise&lt;/code&gt; , &lt;code&gt;Observable&lt;/code&gt; или синхронное возвращаемое значение.</target>
        </trans-unit>
        <trans-unit id="b20e458e5aa5f29eda7fa30aedd57b1b45f296a2" translate="yes" xml:space="preserve">
          <source>Inject the &lt;code&gt;HeroService&lt;/code&gt;</source>
          <target state="translated">Внедрить &lt;code&gt;HeroService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e0008c9832891895e4197fb26311d64785b52f25" translate="yes" xml:space="preserve">
          <source>Inject the cart service by adding it to the &lt;code&gt;constructor()&lt;/code&gt;.</source>
          <target state="translated">Внедрите службу корзины, добавив ее в &lt;code&gt;constructor()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfe1510a03a138b089478140897f394368c5b8a7" translate="yes" xml:space="preserve">
          <source>Inject the cart service in the &lt;code&gt;ShippingComponent&lt;/code&gt; constructor:</source>
          <target state="translated">Внедрите службу корзины в конструктор &lt;code&gt;ShippingComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d16b7c4a0cd536e6bacd2ccd43f6080006784561" translate="yes" xml:space="preserve">
          <source>Inject the cart service into the &lt;code&gt;ShippingComponent&lt;/code&gt; class:</source>
          <target state="translated">Добавьте услугу корзины в класс &lt;code&gt;ShippingComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="43ae56b717b1d07da26cefb067628e0d35f4e121" translate="yes" xml:space="preserve">
          <source>Inject the cart service.</source>
          <target state="translated">Введите службу тележки.</target>
        </trans-unit>
        <trans-unit id="45806a7b832a7aa36033546e2909b1fb99fc8062" translate="yes" xml:space="preserve">
          <source>Inject the component's DOM element</source>
          <target state="translated">Введите элемент DOM компонента</target>
        </trans-unit>
        <trans-unit id="b9cc71265ff0cedc6025f851aa1090e10ae4106d" translate="yes" xml:space="preserve">
          <source>InjectFlags</source>
          <target state="translated">InjectFlags</target>
        </trans-unit>
        <trans-unit id="cd7616c62bcee7b28a2504d9962636cfb31a65c9" translate="yes" xml:space="preserve">
          <source>InjectSetupWrapper</source>
          <target state="translated">InjectSetupWrapper</target>
        </trans-unit>
        <trans-unit id="032faf52b4d806d5f16a644601453c9eb56123b1" translate="yes" xml:space="preserve">
          <source>Injectable</source>
          <target state="translated">Injectable</target>
        </trans-unit>
        <trans-unit id="408e9d9b7375e404fefb7bdc04837a04c20b6309" translate="yes" xml:space="preserve">
          <source>Injectable providers used in &lt;code&gt;@&lt;a href=&quot;core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Инъекционные провайдеры, используемые в &lt;code&gt;@&lt;a href=&quot;core/injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; декоратор.</target>
        </trans-unit>
        <trans-unit id="7d89bf3bcb75ed56c72f7c17563209bdb5e2382a" translate="yes" xml:space="preserve">
          <source>Injectable providers used in &lt;code&gt;@&lt;a href=&quot;injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Инъекционные провайдеры, используемые в &lt;code&gt;@&lt;a href=&quot;injectable&quot;&gt;Injectable&lt;/a&gt;&lt;/code&gt; декоратор.</target>
        </trans-unit>
        <trans-unit id="2a77ff4292cc82f8396306b5f586ac5f5ffc12ad" translate="yes" xml:space="preserve">
          <source>Injectable service that provides a low-level interface for modifying the UI.</source>
          <target state="translated">Инжектируемый сервис,обеспечивающий низкоуровневый интерфейс для модификации пользовательского интерфейса.</target>
        </trans-unit>
        <trans-unit id="156e1f6f9747e475b38a1e470e8d079a4be1aadb" translate="yes" xml:space="preserve">
          <source>InjectableProvider</source>
          <target state="translated">InjectableProvider</target>
        </trans-unit>
        <trans-unit id="448a62a5bd5844abb70fe1a20a84b72bb981925f" translate="yes" xml:space="preserve">
          <source>InjectableType</source>
          <target state="translated">InjectableType</target>
        </trans-unit>
        <trans-unit id="56d719f116fb18f959e9f077cb6114537d0a4be7" translate="yes" xml:space="preserve">
          <source>Injecting a class with a view provider</source>
          <target state="translated">Инъекция класса с провайдером просмотра</target>
        </trans-unit>
        <trans-unit id="c9ee8821d919d7751df2bcbc666729c175774e79" translate="yes" xml:space="preserve">
          <source>Injecting services</source>
          <target state="translated">Инъекционные услуги</target>
        </trans-unit>
        <trans-unit id="b141699eb731deeb1b3864e217053b13aad88af5" translate="yes" xml:space="preserve">
          <source>Injecting the real &lt;code&gt;UserService&lt;/code&gt; could be a nightmare. The real service might ask the user for login credentials and attempt to reach an authentication server. These behaviors can be hard to intercept. It is far easier and safer to create and register a test double in place of the real &lt;code&gt;UserService&lt;/code&gt;.</source>
          <target state="translated">Внедрение реального &lt;code&gt;UserService&lt;/code&gt; может быть кошмаром. Реальный сервис может запросить у пользователя учетные данные для входа и попытаться связаться с сервером аутентификации. Такое поведение может быть трудно перехватить. &lt;code&gt;UserService&lt;/code&gt; проще и безопаснее создать и зарегистрировать двойной тест вместо реального UserService .</target>
        </trans-unit>
        <trans-unit id="15703d66fca65cfd4fa012d37f65af1377c00996" translate="yes" xml:space="preserve">
          <source>Injection flags for DI.</source>
          <target state="translated">Флаги инъекции для детектива.</target>
        </trans-unit>
        <trans-unit id="3fefed6e20021dd0a517b637697a6956a93a1560" translate="yes" xml:space="preserve">
          <source>Injection of the lightweight pattern, using &lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">Внедрение легкого шаблона с использованием &lt;code&gt;@&lt;a href=&quot;../api/core/contentchild&quot;&gt;ContentChild&lt;/a&gt;()&lt;/code&gt; или &lt;code&gt;@&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a3916cd31d033e233732648d3cdccd52f27b6e3" translate="yes" xml:space="preserve">
          <source>Injection token used to provide a &lt;a href=&quot;hammerloader&quot;&gt;&lt;code&gt;HammerLoader&lt;/code&gt;&lt;/a&gt; to Angular.</source>
          <target state="translated">Токен впрыска используется для предоставления &lt;a href=&quot;hammerloader&quot;&gt; &lt;code&gt;HammerLoader&lt;/code&gt; &lt;/a&gt; для Angular.</target>
        </trans-unit>
        <trans-unit id="57c26333c9513bf60f948651b07cba48e8ae53ff" translate="yes" xml:space="preserve">
          <source>Injection token used to provide a &lt;a href=&quot;platform-browser/hammerloader&quot;&gt;&lt;code&gt;HammerLoader&lt;/code&gt;&lt;/a&gt; to Angular.</source>
          <target state="translated">Токен впрыска используется для предоставления &lt;a href=&quot;platform-browser/hammerloader&quot;&gt; &lt;code&gt;HammerLoader&lt;/code&gt; &lt;/a&gt; для Angular.</target>
        </trans-unit>
        <trans-unit id="298d0251e89d6600ae4b408002fa0e4b1b404c23" translate="yes" xml:space="preserve">
          <source>InjectionToken</source>
          <target state="translated">InjectionToken</target>
        </trans-unit>
        <trans-unit id="2ca8a0d344a0e19a0d77c7ff904b9681383397eb" translate="yes" xml:space="preserve">
          <source>Injector</source>
          <target state="translated">Injector</target>
        </trans-unit>
        <trans-unit id="181fb401efe3b0268d07d54a65b4c3aee191549f" translate="yes" xml:space="preserve">
          <source>Injector hierarchy and service instances</source>
          <target state="translated">иерархия инжекторов и экземпляры обслуживания</target>
        </trans-unit>
        <trans-unit id="6681c4b8cc73e181819eb4ae89965a8a02cef140" translate="yes" xml:space="preserve">
          <source>InjectorType</source>
          <target state="translated">InjectorType</target>
        </trans-unit>
        <trans-unit id="491d5d6666614da901294ee7bd33510be9f0dcaa" translate="yes" xml:space="preserve">
          <source>Injectors are inherited, which means that if a given injector can't resolve a dependency, it asks the parent injector to resolve it. A component can get services from its own injector, from the injectors of its component ancestors, from the injector of its parent NgModule, or from the &lt;code&gt;root&lt;/code&gt; injector.</source>
          <target state="translated">Инъекторы наследуются, что означает, что если данный инжектор не может разрешить зависимость, он просит родительский инжектор разрешить ее. Компонент может получать услуги от своего собственного инжектора, от инжекторов своих предков, от инжектора родительского NgModule или от &lt;code&gt;root&lt;/code&gt; инжектора.</target>
        </trans-unit>
        <trans-unit id="cba0bd0bb6098207c32cc66a9233a7a7ca6e5abc" translate="yes" xml:space="preserve">
          <source>Injectors in Angular have rules that you can leverage to achieve the desired visibility of injectables in your apps. By understanding these rules, you can determine in which NgModule, Component or Directive you should declare a provider.</source>
          <target state="translated">Инжекторы в Angular имеют правила,которые вы можете использовать для достижения желаемой видимости инъекций в ваших приложениях.Понимая эти правила,вы можете определить,в каком NgModule,Компоненте или Директиве вы должны объявить провайдера.</target>
        </trans-unit>
        <trans-unit id="2d99dc5eac81a5aa984fbb526ba0c84043ed22e8" translate="yes" xml:space="preserve">
          <source>Injects a token from the currently active injector.</source>
          <target state="translated">Прогружает токен от активного в настоящее время инжектора.</target>
        </trans-unit>
        <trans-unit id="07d77bcc29918d26c0c5de34e66f5b60a93c70cd" translate="yes" xml:space="preserve">
          <source>Injects one or more services from the current &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; injector into a test function. It cannot inject a service provided by the component itself. See discussion of the &lt;a href=&quot;testing#get-injected-services&quot;&gt;debugElement.injector&lt;/a&gt;.</source>
          <target state="translated">Внедряет один или несколько сервисов из текущего инжектора &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; в функцию тестирования. Он не может внедрить сервис, предоставляемый самим компонентом. Смотрите обсуждение &lt;a href=&quot;testing#get-injected-services&quot;&gt;debugElement.injector&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ebfda58e347c4ba615c724f5aac71296dadfc9b8" translate="yes" xml:space="preserve">
          <source>Injects one or more services from the current &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; injector into a test function. It cannot inject a service provided by the component itself. See discussion of the &lt;a href=&quot;testing-components-scenarios#get-injected-services&quot;&gt;debugElement.injector&lt;/a&gt;.</source>
          <target state="translated">Внедряет одну или несколько служб из текущего инжектора &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; в функцию тестирования. Он не может внедрить услугу, предоставляемую самим компонентом. См. Обсуждение &lt;a href=&quot;testing-components-scenarios#get-injected-services&quot;&gt;debugElement.injector&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cb54a2c7aa72c7bb392f1b151e7266612f3ef4e8" translate="yes" xml:space="preserve">
          <source>Inline code-snippets</source>
          <target state="translated">онлайн-коды</target>
        </trans-unit>
        <trans-unit id="d784c6f0a89bdbfeb9496814987b8c32870f48b5" translate="yes" xml:space="preserve">
          <source>Inline in the template HTML.</source>
          <target state="translated">Вход в шаблон HTML.</target>
        </trans-unit>
        <trans-unit id="fc54e2872104e0208a49eb9c210abc9dea3a97c7" translate="yes" xml:space="preserve">
          <source>Inline template or external template URL of the component's view.</source>
          <target state="translated">Встроенный шаблон или внешний шаблон URL вида компонента.</target>
        </trans-unit>
        <trans-unit id="3c5fc6f34e31d2439d02789f5061ec164e3d81e3" translate="yes" xml:space="preserve">
          <source>Inline, hand-coded snippets like this one are &lt;em&gt;not&lt;/em&gt; testable and, therefore, are intrinsically unreliable. This example belongs to the small set of pre-approved, inline snippets that includes user input in a command shell or the &lt;em&gt;output&lt;/em&gt; of some process.</source>
          <target state="translated">Встроенные фрагменты, закодированные вручную, такие как этот, &lt;em&gt;не&lt;/em&gt; поддаются проверке и, следовательно, по своей сути ненадежны. Этот пример относится к небольшому набору предварительно утвержденных встроенных фрагментов, которые включают ввод пользователя в командной оболочке или &lt;em&gt;вывод&lt;/em&gt; какого-либо процесса.</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="630cbac3ad3755357bd8db01e781e15971700af2" translate="yes" xml:space="preserve">
          <source>Input Type</source>
          <target state="translated">Тип ввода</target>
        </trans-unit>
        <trans-unit id="82f4a61e5306720ccacc3322e115835fcae38855" translate="yes" xml:space="preserve">
          <source>Input and Output properties</source>
          <target state="translated">Входные и выходные свойства</target>
        </trans-unit>
        <trans-unit id="6a18227787f1646b26acd2c3b05cd5b674174bc5" translate="yes" xml:space="preserve">
          <source>Input setter coercion</source>
          <target state="translated">Принуждение входного задатчика</target>
        </trans-unit>
        <trans-unit id="61bbcbfa889da817407bf948fa239f50c645e934" translate="yes" xml:space="preserve">
          <source>Input type</source>
          <target state="translated">Тип ввода</target>
        </trans-unit>
        <trans-unit id="33e5e7e82f76a11ddf2991effebf767de7f3deb5" translate="yes" xml:space="preserve">
          <source>Input validation</source>
          <target state="translated">Проверка входа</target>
        </trans-unit>
        <trans-unit id="a9e020d632ebb33c3a6a2f5cc2af3d36d9ba1540" translate="yes" xml:space="preserve">
          <source>Input value</source>
          <target state="translated">Входное значение</target>
        </trans-unit>
        <trans-unit id="f1681e51507bda05aef42afafef4821ba7b10818" translate="yes" xml:space="preserve">
          <source>Input variables</source>
          <target state="translated">Входные переменные</target>
        </trans-unit>
        <trans-unit id="b1cf92c5a5350b19a2842a71f5dc2b70d785c5ad" translate="yes" xml:space="preserve">
          <source>Inputs and Outputs</source>
          <target state="translated">Входы и выходы</target>
        </trans-unit>
        <trans-unit id="13af01c384b8f6141cc7bc08db1b4b5b83bd95b2" translate="yes" xml:space="preserve">
          <source>Inputs and type-checking</source>
          <target state="translated">Входы и проверка типа</target>
        </trans-unit>
        <trans-unit id="76712fc3bc998bc9cc80a5bbd57bbfcecb460078" translate="yes" xml:space="preserve">
          <source>Insert a new &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; at the end of the array.</source>
          <target state="translated">Вставьте новый &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; в конец массива.</target>
        </trans-unit>
        <trans-unit id="a6f3c89a17ee2cf468c4630a524d6bd18db775d8" translate="yes" xml:space="preserve">
          <source>Insert a new &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; at the given &lt;code&gt;index&lt;/code&gt; in the array.</source>
          <target state="translated">Вставьте новый &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; по указанному &lt;code&gt;index&lt;/code&gt; в массиве.</target>
        </trans-unit>
        <trans-unit id="a763a3ea24b93a6618a09ee6d0076c1dae54d6ab" translate="yes" xml:space="preserve">
          <source>Insert an &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; within the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; that displays properties of a &lt;code&gt;hero&lt;/code&gt;.</source>
          <target state="translated">Вставьте &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; в &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; , который отображает свойства &lt;code&gt;hero&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0df1c34b6777b550f977e456758483fab9bfd30" translate="yes" xml:space="preserve">
          <source>Insert the following into the &lt;code&gt;HeroesComponent&lt;/code&gt; template, just after the heading:</source>
          <target state="translated">Вставьте следующее в шаблон &lt;code&gt;HeroesComponent&lt;/code&gt; сразу после заголовка:</target>
        </trans-unit>
        <trans-unit id="23f5944e1199c8f9232153ef3a60afa86a40d070" translate="yes" xml:space="preserve">
          <source>Inserts a view into this container.</source>
          <target state="translated">Вставляет вид в этот контейнер.</target>
        </trans-unit>
        <trans-unit id="50011e1a54a656c04fc02bf9c77175e034f25652" translate="yes" xml:space="preserve">
          <source>Inserts an embedded view from a prepared &lt;code&gt;&lt;a href=&quot;../core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вставляет встроенное представление из подготовленного &lt;code&gt;&lt;a href=&quot;../core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75d0650f178b6f787feea44111266946b9ecd87d" translate="yes" xml:space="preserve">
          <source>Inserts an embedded view from a prepared &lt;code&gt;&lt;a href=&quot;core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Вставляет встроенное представление из подготовленного &lt;code&gt;&lt;a href=&quot;core/templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7a13f1a4948982fb94e88aa36e8881e135f85a8" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;*ngFor&lt;/code&gt;</source>
          <target state="translated">Внутри &lt;code&gt;*ngFor&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19ed5cba849af683656b54b43049a241ffe5b0d8" translate="yes" xml:space="preserve">
          <source>Inside &lt;code&gt;NgSwitch&lt;/code&gt; directives</source>
          <target state="translated">Внутри директивы &lt;code&gt;NgSwitch&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="255b0977970291621f43e1151716c4e23e21af87" translate="yes" xml:space="preserve">
          <source>Inside an AngularJS component's controller we can get hold of the downgraded service via the name we gave when downgrading.</source>
          <target state="translated">Внутри контроллера компонента AngularJS мы можем получить доступ к пониженному сервису через имя,которое мы дали при понижении.</target>
        </trans-unit>
        <trans-unit id="072282cc9231ad60c9cc9690bf8418d6381ccca7" translate="yes" xml:space="preserve">
          <source>Inside that directory four files are generated:</source>
          <target state="translated">Внутри этой директории генерируются четыре файла:</target>
        </trans-unit>
        <trans-unit id="6d5ecf03917471adf142cf23f4f2c3c4b339b21a" translate="yes" xml:space="preserve">
          <source>Inside the &lt;code&gt;src/&lt;/code&gt; folder, the &lt;code&gt;app/&lt;/code&gt; folder contains your project's logic and data. Angular components, templates, and styles go here.</source>
          <target state="translated">В папке &lt;code&gt;src/&lt;/code&gt; папка &lt;code&gt;app/&lt;/code&gt; содержит логику и данные вашего проекта. Здесь находятся угловые компоненты, шаблоны и стили.</target>
        </trans-unit>
        <trans-unit id="43dc34d6ca14b24f422ae821aed69fec4d0746ee" translate="yes" xml:space="preserve">
          <source>Inside the feature module</source>
          <target state="translated">Внутри функционального модуля</target>
        </trans-unit>
        <trans-unit id="99a0a59687e515effa9af831817de2a42be88bcb" translate="yes" xml:space="preserve">
          <source>Inside the interpolation expression, you flow the component's &lt;code&gt;birthday&lt;/code&gt; value through the &lt;a href=&quot;template-syntax#pipe&quot;&gt;pipe operator&lt;/a&gt; ( | ) to the &lt;a href=&quot;../api/common/datepipe&quot;&gt;Date pipe&lt;/a&gt; function on the right. All pipes work this way.</source>
          <target state="translated">Внутри интерполяционного выражения вы &lt;code&gt;birthday&lt;/code&gt; значение дня рождения компонента через &lt;a href=&quot;template-syntax#pipe&quot;&gt;оператор канала&lt;/a&gt; (|) в функцию &lt;a href=&quot;../api/common/datepipe&quot;&gt;конвейера Date&lt;/a&gt; справа. Все трубы работают таким образом.</target>
        </trans-unit>
        <trans-unit id="df4011fe1a09f1043a4b2b06cd1697fa041ae820" translate="yes" xml:space="preserve">
          <source>Inspect the bundles</source>
          <target state="translated">Проверьте связки</target>
        </trans-unit>
        <trans-unit id="215770189e6d0e21c2e4dcd73cf798410232e895" translate="yes" xml:space="preserve">
          <source>Inspect the router's configuration</source>
          <target state="translated">Проверить конфигурацию маршрутизатора</target>
        </trans-unit>
        <trans-unit id="f5dd0a6a7ea6173ab33b717cf0e2c38499a6b62a" translate="yes" xml:space="preserve">
          <source>Inspecting generated CSS</source>
          <target state="translated">Проверка сгенерированных CSS</target>
        </trans-unit>
        <trans-unit id="00f4891662ba21393eafa47f4ff9e723df6085f7" translate="yes" xml:space="preserve">
          <source>Inspecting the element in the browser tools reveals that the &lt;em&gt;name&lt;/em&gt; input box is &lt;em&gt;no longer pristine&lt;/em&gt;. The form remembers that you entered a name before clicking &lt;em&gt;New Hero&lt;/em&gt;. Replacing the hero object &lt;em&gt;did not restore the pristine state&lt;/em&gt; of the form controls.</source>
          <target state="translated">Проверка элемента в инструментах браузера показывает, что поле ввода &lt;em&gt;имени &lt;/em&gt;&lt;em&gt;больше не является нетронутым&lt;/em&gt; . Форма запоминает, что вы ввели имя до нажатия &lt;em&gt;New Hero&lt;/em&gt; . Замена объекта героя &lt;em&gt;не восстановила первоначальное состояние&lt;/em&gt; элементов управления формы.</target>
        </trans-unit>
        <trans-unit id="3cffd5bd9bd048669135ad23ec9b71ceb62833ce" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://firebase.google.com/docs/cli&quot;&gt;Firebase CLI&lt;/a&gt; globally using &lt;code&gt;npm install -g firebase-tools&lt;/code&gt;.</source>
          <target state="translated">Установите &lt;a href=&quot;https://firebase.google.com/docs/cli&quot;&gt;Firebase CLI&lt;/a&gt; глобально с помощью &lt;code&gt;npm install -g firebase-tools&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="767d840fb58485232878c237b7ed2fe6e569ced7" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;fs-extra&lt;/code&gt; via &lt;code&gt;npm install fs-extra --save-dev&lt;/code&gt; for better file copying, and change &lt;code&gt;copy-dist-files.js&lt;/code&gt; to the following:</source>
          <target state="translated">Установите &lt;code&gt;fs-extra&lt;/code&gt; через &lt;code&gt;npm install fs-extra --save-dev&lt;/code&gt; для лучшего копирования файлов и измените &lt;code&gt;copy-dist-files.js&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="2b5240a912c78956650075c76cef901344fb7d53" translate="yes" xml:space="preserve">
          <source>Install &lt;code&gt;source-map-explorer&lt;/code&gt;:</source>
          <target state="translated">Установите &lt;code&gt;source-map-explorer&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="5722ef718aa35b09e478fcff4fbda0f369c92662" translate="yes" xml:space="preserve">
          <source>Install &lt;strong&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&amp;reg; and npm&lt;/a&gt;&lt;/strong&gt; if they are not already on your machine. See &lt;a href=&quot;setup-local&quot;&gt;Local Environment Setup&lt;/a&gt; for supported versions and instructions.</source>
          <target state="translated">Установите &lt;strong&gt;&lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&amp;reg; и npm,&lt;/a&gt;&lt;/strong&gt; если их еще нет на вашем компьютере. См. &lt;a href=&quot;setup-local&quot;&gt;Настройка локальной среды&lt;/a&gt; для получения информации о поддерживаемых версиях и инструкциях.</target>
        </trans-unit>
        <trans-unit id="e8d135e6ccd34e326cce716adb2bf33aeca9a237" translate="yes" xml:space="preserve">
          <source>Install Angular into the project, along with the SystemJS module loader. Take a look at the results of the &lt;a href=&quot;upgrade-setup&quot;&gt;upgrade setup instructions&lt;/a&gt; and get the following configurations from there:</source>
          <target state="translated">Установите Angular в проект вместе с загрузчиком модулей SystemJS. Посмотрите на результаты &lt;a href=&quot;upgrade-setup&quot;&gt;инструкций по установке обновления&lt;/a&gt; и получите следующие конфигурации:</target>
        </trans-unit>
        <trans-unit id="1261f2c456b1f62133aa270d8e5fd5d048b8b664" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;firebase-tools&lt;/code&gt; CLI that will handle your deployment using &lt;code&gt;npm install -g firebase-tools&lt;/code&gt;.</source>
          <target state="translated">Установите интерфейс командной строки &lt;code&gt;firebase-tools&lt;/code&gt; , который будет управлять вашим развертыванием, используя &lt;code&gt;npm install -g firebase-tools&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd383d8abcaf9309b3e8d4c4392877db6730239a" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;upgrade&lt;/code&gt; package via &lt;code&gt;npm install @angular/upgrade --save&lt;/code&gt; and add a mapping for the &lt;code&gt;@angular/upgrade/&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt; package.</source>
          <target state="translated">Установите пакет &lt;code&gt;upgrade&lt;/code&gt; помощью &lt;code&gt;npm install @angular/upgrade --save&lt;/code&gt; и добавьте сопоставление для пакета &lt;code&gt;@angular/upgrade/&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c6ba9043f36b22f823292eb108df95f5f18e948" translate="yes" xml:space="preserve">
          <source>Install the Angular CLI</source>
          <target state="translated">Установите угловой КЛИ</target>
        </trans-unit>
        <trans-unit id="987677d76fa5c1deda62223710a489453421d4ae" translate="yes" xml:space="preserve">
          <source>Install the Angular CLI globally.</source>
          <target state="translated">Установите Угловой CLI глобально.</target>
        </trans-unit>
        <trans-unit id="6a32adb90b36db0ed2141c3193f082788870e5bd" translate="yes" xml:space="preserve">
          <source>Install the Angular CLI.</source>
          <target state="translated">Установите Угловую КЛИ.</target>
        </trans-unit>
        <trans-unit id="bdcb3dfef60b666573c8ce1ed8b494f2716b38c6" translate="yes" xml:space="preserve">
          <source>Install the Angular Language Service package in the same location:</source>
          <target state="translated">Установите пакет Angular Language Service в том же месте:</target>
        </trans-unit>
        <trans-unit id="9d42883b764f1c8c553d34790e6e538c26173f08" translate="yes" xml:space="preserve">
          <source>Install the CLI using the &lt;code&gt;npm&lt;/code&gt; package manager:</source>
          <target state="translated">Установите CLI, используя менеджер пакетов &lt;code&gt;npm&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8a392da3b3f2f11041c5fe8719aff8e6bcc76e63" translate="yes" xml:space="preserve">
          <source>Install the In-memory Web API package from npm with the following command:</source>
          <target state="translated">Установите пакет In-memory Web API из npm следующей командой:</target>
        </trans-unit>
        <trans-unit id="6a2e11d433615c4e688e8c2e1a2f370f9f882859" translate="yes" xml:space="preserve">
          <source>Install the latest version of TypeScript in a local &lt;code&gt;node_modules&lt;/code&gt; directory:</source>
          <target state="translated">Установите последнюю версию TypeScript в локальном &lt;code&gt;node_modules&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a55b0d6eaf5833f9d1d83c86418e84d35b30f379" translate="yes" xml:space="preserve">
          <source>Install type definitions for the existing libraries that you're using but that don't come with prepackaged types: AngularJS and the Jasmine unit test framework.</source>
          <target state="translated">Установите определения типов для существующих библиотек,которые вы используете,но которые не поставляются с предустановленными типами:AngularJS и фреймворк тестов Jasmine.</target>
        </trans-unit>
        <trans-unit id="d251edf4bd4d2213540b80ec0286e5d42780e1b1" translate="yes" xml:space="preserve">
          <source>Install type definitions for the existing libraries that you're using but that don't come with prepackaged types: AngularJS, AngularJS Material, and the Jasmine unit test framework.</source>
          <target state="translated">Установите определения типов для существующих библиотек,которые вы используете,но которые не поставляются с предустановленными типами:AngularJS,AngularJS Material и Jasmine Unit test framework.</target>
        </trans-unit>
        <trans-unit id="007650eba9764fc0e78e4bc1bd31b1198fb68fbf" translate="yes" xml:space="preserve">
          <source>Installable typings files</source>
          <target state="translated">Устанавливаемые типизированные файлы</target>
        </trans-unit>
        <trans-unit id="590df37bbf3a109889319af6d9048be9a71e39d5" translate="yes" xml:space="preserve">
          <source>Installing Angular</source>
          <target state="translated">Установка Угловая</target>
        </trans-unit>
        <trans-unit id="93c51dd01f96d8f057ca0640853a63493a184144" translate="yes" xml:space="preserve">
          <source>Installing Angular CLI</source>
          <target state="translated">Установка Угловой CLI</target>
        </trans-unit>
        <trans-unit id="29ff101f42f25faf7396162f5dcaed389e809afb" translate="yes" xml:space="preserve">
          <source>Installing libraries</source>
          <target state="translated">Установка библиотек</target>
        </trans-unit>
        <trans-unit id="943d24405b833810f0fc6a9ac5fedf1d6c7c1920" translate="yes" xml:space="preserve">
          <source>Installing the Angular service worker is as simple as including an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. In addition to registering the Angular service worker with the browser, this also makes a few services available for injection which interact with the service worker and can be used to control it. For example, an application can ask to be notified when a new update becomes available, or an application can ask the service worker to check the server for available updates.</source>
          <target state="translated">Установка сервисного работника Angular так же проста, как и включение &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; . Помимо регистрации работника службы Angular в браузере, это также делает доступными для внедрения несколько служб, которые взаимодействуют с работником службы и могут использоваться для управления им. Например, приложение может запросить уведомление, когда новое обновление станет доступным, или приложение может попросить работника сервиса проверить сервер на наличие доступных обновлений.</target>
        </trans-unit>
        <trans-unit id="35ca16d7e501ce1fe7afeb879255850001c28e41" translate="yes" xml:space="preserve">
          <source>Installs icon files to support the installed Progressive Web App (PWA).</source>
          <target state="translated">Устанавливает файлы значков для поддержки установленного прогрессивного веб-приложения (PWA).</target>
        </trans-unit>
        <trans-unit id="20e716e0358bb09e7445aa9236e78946959e553b" translate="yes" xml:space="preserve">
          <source>Instantiate a &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, with an initial value.</source>
          <target state="translated">Инстанцировать в &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; , с начальным значением.</target>
        </trans-unit>
        <trans-unit id="38aa8686f3352f5834571410dfa3840955e59d4b" translate="yes" xml:space="preserve">
          <source>Instantiates a single &lt;a href=&quot;../core/component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt; type and inserts its Host View into current View. &lt;code&gt;&lt;a href=&quot;ngcomponentoutlet&quot;&gt;NgComponentOutlet&lt;/a&gt;&lt;/code&gt; provides a declarative approach for dynamic component creation.</source>
          <target state="translated">Создает отдельный тип &lt;a href=&quot;../core/component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; &lt;/a&gt; и вставляет его представление хоста в текущий вид. &lt;code&gt;&lt;a href=&quot;ngcomponentoutlet&quot;&gt;NgComponentOutlet&lt;/a&gt;&lt;/code&gt; обеспечивает декларативный подход для создания динамических компонентов.</target>
        </trans-unit>
        <trans-unit id="38063d7822dcc8a96973053e6ba2f0de5af9a983" translate="yes" xml:space="preserve">
          <source>Instantiates a single &lt;a href=&quot;core/component&quot;&gt;&lt;code&gt;Component&lt;/code&gt;&lt;/a&gt; type and inserts its Host View into current View. &lt;code&gt;&lt;a href=&quot;common/ngcomponentoutlet&quot;&gt;NgComponentOutlet&lt;/a&gt;&lt;/code&gt; provides a declarative approach for dynamic component creation.</source>
          <target state="translated">Создает отдельный тип &lt;a href=&quot;core/component&quot;&gt; &lt;code&gt;Component&lt;/code&gt; &lt;/a&gt; и вставляет его представление хоста в текущий вид. &lt;code&gt;&lt;a href=&quot;common/ngcomponentoutlet&quot;&gt;NgComponentOutlet&lt;/a&gt;&lt;/code&gt; обеспечивает декларативный подход для создания динамических компонентов.</target>
        </trans-unit>
        <trans-unit id="052c0bf072f0f51a894d30e77a4f689971e12fb7" translate="yes" xml:space="preserve">
          <source>Instantiates a single component and inserts its host view into this container.</source>
          <target state="translated">Фактически,один компонент и вставляет свой вид хозяина в этот контейнер.</target>
        </trans-unit>
        <trans-unit id="a4ad199a6b556b860c928a9e27b923ade54a8ac0" translate="yes" xml:space="preserve">
          <source>Instantiates an embedded view and inserts it into this container.</source>
          <target state="translated">Встроенный вид инстанцируется и вставляется в этот контейнер.</target>
        </trans-unit>
        <trans-unit id="f0776be631be3564e94e31e5dc32990150beac7b" translate="yes" xml:space="preserve">
          <source>Instantiates an embedded view based on this template, and attaches it to the view container.</source>
          <target state="translated">Обосновывает встроенное представление,основанное на этом шаблоне,и прикрепляет его к контейнеру представлений.</target>
        </trans-unit>
        <trans-unit id="786c58358d9228836c715a34ab083c47efb00357" translate="yes" xml:space="preserve">
          <source>Instantiates an object using a resolved provider in the context of the injector.</source>
          <target state="translated">Обозначает объект,использующий разрешенный провайдер в контексте инжектора.</target>
        </trans-unit>
        <trans-unit id="a0357399dd1a1a04fdeed5dfc91f8d7b7be0a893" translate="yes" xml:space="preserve">
          <source>Instantiating the Angular module on-demand</source>
          <target state="translated">Фактирование Углового модуля по запросу</target>
        </trans-unit>
        <trans-unit id="c4d60afbec7f43d48d04b31d9b35a7e492a2e8d9" translate="yes" xml:space="preserve">
          <source>Instead of adding the &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; route, define a &lt;code&gt;wildcard&lt;/code&gt; route and have it navigate to a &lt;code&gt;PageNotFoundComponent&lt;/code&gt;.</source>
          <target state="translated">Вместо добавления маршрута &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; определите маршрут с &lt;code&gt;wildcard&lt;/code&gt; и попросите его перейти к &lt;code&gt;PageNotFoundComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43fb80c7057cc5fd575a66171218e4c5dcaa2c7b" translate="yes" xml:space="preserve">
          <source>Instead of adding the &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; route, define a &lt;code&gt;wildcard&lt;/code&gt; route instead and have it navigate to a simple &lt;code&gt;PageNotFoundComponent&lt;/code&gt;.</source>
          <target state="translated">Вместо добавления маршрута &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; , вместо этого определите маршрутный &lt;code&gt;wildcard&lt;/code&gt; и попросите его перейти к простому &lt;code&gt;PageNotFoundComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4545e903884ce10d8860ee7224edb38d91aba382" translate="yes" xml:space="preserve">
          <source>Instead of defining all member classes in one giant file as in a JavaScript module, you list the module's classes in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; list.</source>
          <target state="translated">Вместо определения всех классов-членов в одном гигантском файле, как в модуле JavaScript, вы перечисляете классы модуля в списке &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#declarations&quot;&gt;NgModule.declarations&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcea27d4a4ea890a7b5b46266c065c932d9159ff" translate="yes" xml:space="preserve">
          <source>Instead of handling the error directly, it returns an error handler function to &lt;code&gt;catchError&lt;/code&gt; that it has configured with both the name of the operation that failed and a safe return value.</source>
          <target state="translated">Вместо непосредственной обработки ошибки она возвращает функцию обработчика ошибок в &lt;code&gt;catchError&lt;/code&gt; , которую она настроила, с именем неудачной операции и безопасным возвращаемым значением.</target>
        </trans-unit>
        <trans-unit id="2ced3569fe32156e54433459c9f7274b0cae7ecf" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; decorators to declare inputs and outputs, you can identify members in the &lt;code&gt;inputs&lt;/code&gt; and &lt;code&gt;outputs&lt;/code&gt; arrays of the directive metadata, as in this example:</source>
          <target state="translated">Вместо использования декораторов &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; для объявления входов и выходов вы можете идентифицировать элементы в массивах &lt;code&gt;inputs&lt;/code&gt; и &lt;code&gt;outputs&lt;/code&gt; метаданных директивы, как в этом примере:</target>
        </trans-unit>
        <trans-unit id="41c9b9e64f30d6ebdd7548f0f306b5e519819b75" translate="yes" xml:space="preserve">
          <source>Instead they return observables of &lt;code&gt;&lt;a href=&quot;../api/common/http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Вместо этого они возвращают наблюдаемые &lt;code&gt;&lt;a href=&quot;../api/common/http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&amp;lt;any&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce684a983c63ce2f1f454c04e646d6d8a3bc7367" translate="yes" xml:space="preserve">
          <source>Instead you can mock the dependency, use a dummy value, or create a &lt;a href=&quot;https://jasmine.github.io/2.0/introduction.html#section-Spies&quot;&gt;spy&lt;/a&gt; on the pertinent service method.</source>
          <target state="translated">Вместо этого вы можете смоделировать зависимость, использовать фиктивное значение или создать &lt;a href=&quot;https://jasmine.github.io/2.0/introduction.html#section-Spies&quot;&gt;шпион&lt;/a&gt; соответствующего метода службы.</target>
        </trans-unit>
        <trans-unit id="461b96eba4f5a430cd543bbe85601a5e70ae7271" translate="yes" xml:space="preserve">
          <source>Instead you'll write a &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivate&quot;&gt;canActivate&lt;/a&gt;()&lt;/code&gt; guard method to redirect anonymous users to the login page when they try to enter the admin area.</source>
          <target state="translated">Вместо этого вы напишите метод защиты &lt;code&gt;&lt;a href=&quot;../api/router/route#canActivate&quot;&gt;canActivate&lt;/a&gt;()&lt;/code&gt; для перенаправления анонимных пользователей на страницу входа при попытке войти в область администратора.</target>
        </trans-unit>
        <trans-unit id="d3964f48718ba9278c74706508750ce239c41a70" translate="yes" xml:space="preserve">
          <source>Instead, &lt;code&gt;LibHeaderComponent&lt;/code&gt; itself implements the abstract &lt;code&gt;LibHeaderToken&lt;/code&gt; class. You can safely use that token as the provider in the component definition, allowing Angular to correctly inject the concrete type.</source>
          <target state="translated">Вместо этого &lt;code&gt;LibHeaderComponent&lt;/code&gt; реализует абстрактный класс &lt;code&gt;LibHeaderToken&lt;/code&gt; . Вы можете безопасно использовать этот токен в качестве поставщика в определении компонента, позволяя Angular правильно вводить конкретный тип.</target>
        </trans-unit>
        <trans-unit id="49a4d7b52c2322fe3ec1102b059fd40a0edaba63" translate="yes" xml:space="preserve">
          <source>Instead, call &lt;code&gt;getHeroes()&lt;/code&gt; inside the &lt;a href=&quot;../guide/lifecycle-hooks&quot;&gt;&lt;em&gt;ngOnInit lifecycle hook&lt;/em&gt;&lt;/a&gt; and let Angular call &lt;code&gt;ngOnInit()&lt;/code&gt; at an appropriate time &lt;em&gt;after&lt;/em&gt; constructing a &lt;code&gt;HeroesComponent&lt;/code&gt; instance.</source>
          <target state="translated">Вместо этого вызовите &lt;code&gt;getHeroes()&lt;/code&gt; внутри &lt;a href=&quot;../guide/lifecycle-hooks&quot;&gt;&lt;em&gt;ловушки жизненного цикла ngOnInit&lt;/em&gt;&lt;/a&gt; и дайте Angular вызвать &lt;code&gt;ngOnInit()&lt;/code&gt; в соответствующее время &lt;em&gt;после&lt;/em&gt; создания экземпляра &lt;code&gt;HeroesComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fdd12a96a1f80e924cc94c2ae62043da14036314" translate="yes" xml:space="preserve">
          <source>Instead, download typings for your library (&lt;code&gt;npm install @types/jquery&lt;/code&gt;) and follow the library installation steps. This gives you access to the global variables exposed by that library.</source>
          <target state="translated">Вместо этого загрузите наборы для своей библиотеки ( &lt;code&gt;npm install @types/jquery&lt;/code&gt; ) и следуйте инструкциям по установке библиотеки. Это дает вам доступ к глобальным переменным, предоставляемым этой библиотекой.</target>
        </trans-unit>
        <trans-unit id="4b0bf66c25d9781be7cefa931b18abbac35f3e32" translate="yes" xml:space="preserve">
          <source>Instead, each &lt;code&gt;HeroBioComponent&lt;/code&gt; gets its &lt;em&gt;own&lt;/em&gt;&lt;code&gt;HeroCacheService&lt;/code&gt; instance by listing &lt;code&gt;HeroCacheService&lt;/code&gt; in its metadata &lt;code&gt;providers&lt;/code&gt; array.</source>
          <target state="translated">Вместо этого каждый &lt;code&gt;HeroBioComponent&lt;/code&gt; получает свой &lt;em&gt;собственный&lt;/em&gt; экземпляр &lt;code&gt;HeroCacheService&lt;/code&gt; , перечисляя &lt;code&gt;HeroCacheService&lt;/code&gt; в своем массиве &lt;code&gt;providers&lt;/code&gt; метаданных .</target>
        </trans-unit>
        <trans-unit id="0d305901f6c4d49bcedd325e78ae1b0860a4fb31" translate="yes" xml:space="preserve">
          <source>Instead, the &lt;code&gt;ngOnInit()&lt;/code&gt; method pipes the &lt;code&gt;searchTerms&lt;/code&gt; observable through a sequence of RxJS operators that reduce the number of calls to the &lt;code&gt;searchHeroes()&lt;/code&gt;, ultimately returning an observable of timely hero search results (each a &lt;code&gt;Hero[]&lt;/code&gt;).</source>
          <target state="translated">Вместо этого, &lt;code&gt;ngOnInit()&lt;/code&gt; метод трубы в &lt;code&gt;searchTerms&lt;/code&gt; наблюдаемые через последовательность RxJS операторов , которые уменьшают количество вызовов к &lt;code&gt;searchHeroes()&lt;/code&gt; , в конечном счете , возвращающие наблюдаемый своевременных результаты поиска героя (каждый &lt;code&gt;Hero[]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3d9ebd1ce2ebf177d0250948ce46e33ab5af6b38" translate="yes" xml:space="preserve">
          <source>Instead, the compiler adopts a recursive strategy that generates code only for the components you use.</source>
          <target state="translated">Вместо этого компилятор использует рекурсивную стратегию,которая генерирует код только для используемых компонентов.</target>
        </trans-unit>
        <trans-unit id="8bd754a169b9bacb9390642cdd317359fddea194" translate="yes" xml:space="preserve">
          <source>Instead, the injector will begin at the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;&lt;code&gt;ElementInjector&lt;/code&gt;. Remember that the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; class provides the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array with a value of 🐶 (puppy):</source>
          <target state="translated">Вместо этого инжектор начнется с &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; &lt;code&gt;ElementInjector&lt;/code&gt; . Помните, что класс &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; предоставляет &lt;code&gt;AnimalService&lt;/code&gt; в массиве &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; значение 🐶 (puppy):</target>
        </trans-unit>
        <trans-unit id="2fc262139e9da7fc5a46366f8088811d41bc2d11" translate="yes" xml:space="preserve">
          <source>Instead, the injector will begin at the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;&lt;code&gt;ElementInjector&lt;/code&gt;. Remember that the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; class provides the &lt;code&gt;AnimalService&lt;/code&gt; in the &lt;code&gt;viewProviders&lt;/code&gt; array with a value of 🐶 (puppy):</source>
          <target state="translated">Вместо этого инжектор начнется с &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; &lt;code&gt;ElementInjector&lt;/code&gt; . Помните, что класс &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; предоставляет &lt;code&gt;AnimalService&lt;/code&gt; в массиве &lt;code&gt;viewProviders&lt;/code&gt; со значением 🐶 (puppy):</target>
        </trans-unit>
        <trans-unit id="17aa745e67d203c05d76b91653148f77342ccc8f" translate="yes" xml:space="preserve">
          <source>Instead, update the empty path route in &lt;code&gt;app-routing.module.ts&lt;/code&gt; to redirect to &lt;code&gt;/superheroes&lt;/code&gt;.</source>
          <target state="translated">Вместо этого обновите маршрут пустого пути в &lt;code&gt;app-routing.module.ts&lt;/code&gt; для перенаправления на &lt;code&gt;/superheroes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4d21a07e95b9953380838df336b7bcbf54fa876" translate="yes" xml:space="preserve">
          <source>Instead, you can provide the &lt;code&gt;VillainsService&lt;/code&gt; in the &lt;code&gt;providers&lt;/code&gt; metadata of the &lt;code&gt;VillainsListComponent&lt;/code&gt; like this:</source>
          <target state="translated">Вместо этого вы можете предоставить &lt;code&gt;VillainsService&lt;/code&gt; в метаданных &lt;code&gt;providers&lt;/code&gt; &lt;code&gt;VillainsListComponent&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="551fe93146e649cede5e84c7c64fdd5129d01274" translate="yes" xml:space="preserve">
          <source>Instead, you need a way to load a new component without a fixed reference to the component in the ad banner's template.</source>
          <target state="translated">Вместо этого необходим способ загрузки нового компонента без фиксированной ссылки на компонент в шаблоне рекламного баннера.</target>
        </trans-unit>
        <trans-unit id="3cd340c809823308a4cc4e69ad216846bec763e0" translate="yes" xml:space="preserve">
          <source>Instead, you'd use property binding and write it like this:</source>
          <target state="translated">Вместо этого вы бы использовали связывание свойств и написали бы так:</target>
        </trans-unit>
        <trans-unit id="935c5dd61b56d9204ed4186be8b2db4497e1e865" translate="yes" xml:space="preserve">
          <source>Integrate routing with your app</source>
          <target state="translated">Интегрируйте маршрутизацию с вашим приложением</target>
        </trans-unit>
        <trans-unit id="5a59fb5b70ad75f96031a69bba18f29e2692a460" translate="yes" xml:space="preserve">
          <source>Integrating with the CLI</source>
          <target state="translated">Интеграция с КЛИ</target>
        </trans-unit>
        <trans-unit id="5613136c801d2ad2f323cc7ab35810249066fe2b" translate="yes" xml:space="preserve">
          <source>Integrating with the CLI using code-generation schematics</source>
          <target state="translated">Интеграция с CLI с использованием схем генерации кодов</target>
        </trans-unit>
        <trans-unit id="3bd6ede907470fb16d3cec8333066bb3ecc44047" translate="yes" xml:space="preserve">
          <source>Intercept input property changes with &lt;code&gt;ngOnChanges()&lt;/code&gt;</source>
          <target state="translated">Перехватывать изменения входных свойств с помощью &lt;code&gt;ngOnChanges()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd68d13ca9ca2470bae05c55573d064542db92fb" translate="yes" xml:space="preserve">
          <source>Intercept input property changes with a setter</source>
          <target state="translated">Изменения свойств ввода перехвата с помощью сеттера</target>
        </trans-unit>
        <trans-unit id="f77e1393f432e2814c4e2431fb8336cf5ac39ef5" translate="yes" xml:space="preserve">
          <source>Intercepting requests and responses</source>
          <target state="translated">Перехват запросов и ответов</target>
        </trans-unit>
        <trans-unit id="763892b6e7a2d1ac84d61ec316cc6bf8b1d9cc3e" translate="yes" xml:space="preserve">
          <source>Interceptor order</source>
          <target state="translated">Приказ о перехвате</target>
        </trans-unit>
        <trans-unit id="49b669e2ea2af9c86b0cdbcb202a2a4cee9dafbb" translate="yes" xml:space="preserve">
          <source>Interceptors can handle requests by themselves, without forwarding to &lt;code&gt;next.handle()&lt;/code&gt;.</source>
          <target state="translated">Перехватчики могут обрабатывать запросы самостоятельно, без переадресации на &lt;code&gt;next.handle()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46734f11cb3498f3b31bc09aa4d5892c9572c37b" translate="yes" xml:space="preserve">
          <source>Interceptors can perform a variety of &lt;em&gt;implicit&lt;/em&gt; tasks, from authentication to logging, in a routine, standard way, for every HTTP request/response.</source>
          <target state="translated">Перехватчики могут выполнять различные &lt;em&gt; неявные&lt;/em&gt; задачи, от проверки подлинности до регистрации обычным, стандартным способом для каждого HTTP-запроса / ответа.</target>
        </trans-unit>
        <trans-unit id="78777651ce595557401c9f74bf00aced47fcba6c" translate="yes" xml:space="preserve">
          <source>Interceptors sit between the &lt;code&gt;&lt;a href=&quot;httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; interface and the &lt;code&gt;&lt;a href=&quot;httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Перехватчики находятся между интерфейсом &lt;code&gt;&lt;a href=&quot;httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;httpbackend&quot;&gt;HttpBackend&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1e0f70c8d07051766080d71ba2f745bf68b9ae3" translate="yes" xml:space="preserve">
          <source>Intercepts and handles an &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Перехватывает и обрабатывает &lt;code&gt;&lt;a href=&quot;http/httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ee4ce4943c7c8f62cc7efe1749d8027783f80f63" translate="yes" xml:space="preserve">
          <source>Intercepts and handles an &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Перехватывает и обрабатывает &lt;code&gt;&lt;a href=&quot;httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51feddee76f6ae2ad0215641743746a9f5b45fb4" translate="yes" xml:space="preserve">
          <source>Interface for options provided to an &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Интерфейс для опций, предоставляемых в &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fcbaf5b57a8ead29b181bc23a1d29fcef1a8f14" translate="yes" xml:space="preserve">
          <source>Interface for options provided to an &lt;code&gt;&lt;a href=&quot;forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Интерфейс для опций, предоставляемых в &lt;code&gt;&lt;a href=&quot;forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3789cc9f6d7a24798ad678cfda27d1e007aa43c" translate="yes" xml:space="preserve">
          <source>Interface for the events emitted through the NgElementStrategy.</source>
          <target state="translated">Интерфейс для событий,излучаемых через NgElementStrategy.</target>
        </trans-unit>
        <trans-unit id="3deee779f810298f9a0e89f2ff8482ea01f5a511" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a child route can be activated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation continues. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation is cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation is cancelled and a new navigation begins to the &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать в качестве защитника, решающего, можно ли активировать дочерний маршрут. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник возвращает &lt;code&gt;false&lt;/code&gt; , навигация отменяется. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация отменяется и начинается новая навигация к &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , возвращенному охранником.</target>
        </trans-unit>
        <trans-unit id="bc42104552e7bf76c3652dc332a30f2a41ab427f" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a child route can be activated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation continues. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation is cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation is cancelled and a new navigation begins to the &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать в качестве защитника, решающего, можно ли активировать дочерний маршрут. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник возвращает &lt;code&gt;false&lt;/code&gt; , навигация отменяется. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация отменяется и начинается новая навигация к &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , возвращенному охранником.</target>
        </trans-unit>
        <trans-unit id="618b7ef5256168d128b4d93fe5abd44e6760f4d3" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a child route can be activated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation will continue. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation will be cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation will be cancelled and a new navigation will be kicked off to the &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать, чтобы быть защитником, решающим, может ли быть активирован дочерний маршрут. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник вернет &lt;code&gt;false&lt;/code&gt; , навигация будет отменена. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация будет отменена, и новая навигация будет &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; для UrlTree, возвращенного охранником.</target>
        </trans-unit>
        <trans-unit id="ff140188a7896c0f0df7b9ddc4cf62e57c908572" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a child route can be activated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation will continue. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation will be cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation will be cancelled and a new navigation will be kicked off to the &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать, чтобы быть защитником, решающим, может ли быть активирован дочерний маршрут. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник вернет &lt;code&gt;false&lt;/code&gt; , навигация будет отменена. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация будет отменена, и новая навигация будет &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; для UrlTree, возвращенного охранником.</target>
        </trans-unit>
        <trans-unit id="5f9ec727fd5f67833f4f7d28c1b4a64a95ad822a" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a route can be activated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation continues. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation is cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, the current navigation is cancelled and a new navigation begins to the &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать для защиты, решающей, можно ли активировать маршрут. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник возвращает &lt;code&gt;false&lt;/code&gt; , навигация отменяется. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация отменяется и начинается новая навигация к &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , возвращенному охранником.</target>
        </trans-unit>
        <trans-unit id="d370cd413b65e79295cc3a38df96afee0599824f" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a route can be activated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation continues. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation is cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, the current navigation is cancelled and a new navigation begins to the &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать для защиты, решающей, можно ли активировать маршрут. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник возвращает &lt;code&gt;false&lt;/code&gt; , навигация отменяется. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация отменяется и начинается новая навигация к &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , возвращенному охранником.</target>
        </trans-unit>
        <trans-unit id="1551571b2aa685eaa6e8ab4305875c5d8fb03db8" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a route can be activated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation will continue. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation will be cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation will be cancelled and a new navigation will be kicked off to the &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать, чтобы быть защитником, решающим, может ли маршрут быть активирован. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник вернет &lt;code&gt;false&lt;/code&gt; , навигация будет отменена. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация будет отменена, и новая навигация будет &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; в UrlTree. возвращенного охранником.</target>
        </trans-unit>
        <trans-unit id="db6235325e50211534e110c30d230e1939bbd7e2" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a route can be activated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation will continue. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation will be cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation will be cancelled and a new navigation will be kicked off to the &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать, чтобы быть защитником, решающим, может ли маршрут быть активирован. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник вернет &lt;code&gt;false&lt;/code&gt; , навигация будет отменена. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация будет отменена, и новая навигация будет &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; для UrlTree, возвращенного охранником.</target>
        </trans-unit>
        <trans-unit id="ff66dd9940e5fc1eaf1f9f31562fd3ffff52df63" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a route can be deactivated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation continues. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation is cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation is cancelled and a new navigation begins to the &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать для защиты, решающей, можно ли деактивировать маршрут. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник возвращает &lt;code&gt;false&lt;/code&gt; , навигация отменяется. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация отменяется и начинается новая навигация к &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , возвращенному охранником.</target>
        </trans-unit>
        <trans-unit id="b846a1dd4c0cda77778910c5d707df7a5a6026fd" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a route can be deactivated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation continues. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation is cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation is cancelled and a new navigation begins to the &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать для защиты, решающей, можно ли деактивировать маршрут. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник возвращает &lt;code&gt;false&lt;/code&gt; , навигация отменяется. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация отменяется и начинается новая навигация к &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , возвращенному охранником.</target>
        </trans-unit>
        <trans-unit id="2ab6f18536cd13083f15ab9129ff97d10da6e8d6" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a route can be deactivated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation will continue. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation will be cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation will be cancelled and a new navigation will be kicked off to the &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать, чтобы быть защитником, решающим, может ли маршрут быть деактивирован. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник вернет &lt;code&gt;false&lt;/code&gt; , навигация будет отменена. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация будет отменена, и новая навигация будет &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; в UrlTree. возвращенного охранником.</target>
        </trans-unit>
        <trans-unit id="679e3b4aabe2bdba94497f1ab16312f39b501277" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if a route can be deactivated. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation will continue. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation will be cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation will be cancelled and a new navigation will be kicked off to the &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать, чтобы быть защитником, решающим, может ли маршрут быть деактивирован. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник вернет &lt;code&gt;false&lt;/code&gt; , навигация будет отменена. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация будет отменена, и новая навигация будет &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; для UrlTree, возвращенного охранником.</target>
        </trans-unit>
        <trans-unit id="c42293e0f6055cbed8f6ec3d952ba787d4b46e25" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if children can be loaded.</source>
          <target state="translated">Интерфейс,который класс может реализовать,чтобы быть охранником,решающим,можно ли загружать детей.</target>
        </trans-unit>
        <trans-unit id="f8b9288cc98a27c1da610942b0801f722868ae04" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if children can be loaded. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation continues. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation is cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation is cancelled and a new navigation starts to the &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать в качестве защитника, решающего, могут ли быть загружены дочерние элементы. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник возвращает &lt;code&gt;false&lt;/code&gt; , навигация отменяется. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация отменяется, и начинается новая навигация к &lt;code&gt;&lt;a href=&quot;router/urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , возвращенному охранником.</target>
        </trans-unit>
        <trans-unit id="9ec3033b72314d711e1348f87c857ff9df7af33d" translate="yes" xml:space="preserve">
          <source>Interface that a class can implement to be a guard deciding if children can be loaded. If all guards return &lt;code&gt;true&lt;/code&gt;, navigation continues. If any guard returns &lt;code&gt;false&lt;/code&gt;, navigation is cancelled. If any guard returns a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;, current navigation is cancelled and a new navigation starts to the &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; returned from the guard.</source>
          <target state="translated">Интерфейс, который класс может реализовать в качестве защитника, решающего, могут ли быть загружены дочерние элементы. Если все охранники вернут &lt;code&gt;true&lt;/code&gt; , навигация продолжится. Если какой-либо охранник возвращает &lt;code&gt;false&lt;/code&gt; , навигация отменяется. Если какой-либо охранник возвращает &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , текущая навигация отменяется, и начинается новая навигация к &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; , возвращенному охранником.</target>
        </trans-unit>
        <trans-unit id="364f380bef9f10b167def7bdabd0691206b530fd" translate="yes" xml:space="preserve">
          <source>Interface that classes can implement to be a data provider. A data provider class can be used with the router to resolve data during navigation. The interface defines a &lt;code&gt;&lt;a href=&quot;../core/reflectiveinjector#resolve&quot;&gt;resolve()&lt;/a&gt;&lt;/code&gt; method that will be invoked when the navigation starts. The router will then wait for the data to be resolved before the route is finally activated.</source>
          <target state="translated">Интерфейс, который классы могут реализовать, чтобы быть поставщиком данных. Класс поставщика данных может использоваться с маршрутизатором для разрешения данных во время навигации. Интерфейс определяет метод &lt;code&gt;&lt;a href=&quot;../core/reflectiveinjector#resolve&quot;&gt;resolve()&lt;/a&gt;&lt;/code&gt; который будет вызываться при запуске навигации. Затем маршрутизатор будет ждать разрешения данных, прежде чем маршрут будет окончательно активирован.</target>
        </trans-unit>
        <trans-unit id="336ad0810efbe57a2c014e406a008686e9defe4c" translate="yes" xml:space="preserve">
          <source>Interface that classes can implement to be a data provider. A data provider class can be used with the router to resolve data during navigation. The interface defines a &lt;code&gt;&lt;a href=&quot;core/reflectiveinjector#resolve&quot;&gt;resolve()&lt;/a&gt;&lt;/code&gt; method that will be invoked when the navigation starts. The router will then wait for the data to be resolved before the route is finally activated.</source>
          <target state="translated">Интерфейс, который классы могут реализовать, чтобы быть поставщиком данных. Класс поставщика данных может использоваться с маршрутизатором для разрешения данных во время навигации. Интерфейс определяет метод &lt;code&gt;&lt;a href=&quot;core/reflectiveinjector#resolve&quot;&gt;resolve()&lt;/a&gt;&lt;/code&gt; который будет вызываться при запуске навигации. Затем маршрутизатор будет ждать разрешения данных, прежде чем маршрут будет окончательно активирован.</target>
        </trans-unit>
        <trans-unit id="c21234c017f5d910ba8b68062b70053a6f22de69" translate="yes" xml:space="preserve">
          <source>Interface that classes can implement to be a data provider. A data provider class can be used with the router to resolve data during navigation. The interface defines a &lt;code&gt;resolve()&lt;/code&gt; method that is invoked when the navigation starts. The router waits for the data to be resolved before the route is finally activated.</source>
          <target state="translated">Интерфейс, который классы могут реализовать как поставщик данных. Класс поставщика данных может использоваться с маршрутизатором для разрешения данных во время навигации. Интерфейс определяет метод &lt;code&gt;resolve()&lt;/code&gt; который вызывается при запуске навигации. Маршрутизатор ожидает разрешения данных, прежде чем маршрут будет окончательно активирован.</target>
        </trans-unit>
        <trans-unit id="cd29d518f005626eb95c3c088e7f4c477fbfc0c8" translate="yes" xml:space="preserve">
          <source>Interfaces are optional (technically)</source>
          <target state="translated">Интерфейсы являются дополнительными (технически)</target>
        </trans-unit>
        <trans-unit id="0876cab9619be6a4ff7f8271f44afd88e6881f3c" translate="yes" xml:space="preserve">
          <source>Internal reference to the view model value.</source>
          <target state="translated">Внутренняя ссылка на значение модели представления.</target>
        </trans-unit>
        <trans-unit id="c8abcefa3f2571ad565289956a9b68baa5b5d92e" translate="yes" xml:space="preserve">
          <source>Internal.</source>
          <target state="translated">Internal.</target>
        </trans-unit>
        <trans-unit id="5fc8faa1decb29c0de03ec7af94ce77c99a7f168" translate="yes" xml:space="preserve">
          <source>Internally, Angular creates &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instances and registers them with an &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive that Angular attached to the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag. Each &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; is registered under the name you assigned to the &lt;code&gt;name&lt;/code&gt; attribute. Read more in the previous section, &lt;a href=&quot;forms#ngForm&quot;&gt;The NgForm directive&lt;/a&gt;.</source>
          <target state="translated">Внутри Angular создает экземпляры &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; и регистрирует их с помощью директивы &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; , которую Angular присоединяет к тегу &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; . Каждый &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; зарегистрирован под именем, которое вы присвоили атрибуту &lt;code&gt;name&lt;/code&gt; . Подробнее читайте в предыдущем разделе, &lt;a href=&quot;forms#ngForm&quot;&gt;директива NgForm&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fbce7514dd339094119f9b2d11f6944248b678c0" translate="yes" xml:space="preserve">
          <source>Internally, Autoprefixer relies on a library called &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;Browserslist&lt;/a&gt; to figure out which browsers to support with prefixing. Browserlist looks for configuration options in a &lt;code&gt;browserslist&lt;/code&gt; property of the package configuration file, or in a configuration file named &lt;code&gt;.browserslistrc&lt;/code&gt;. Autoprefixer looks for the &lt;code&gt;browserslist&lt;/code&gt; configuration when it prefixes your CSS.</source>
          <target state="translated">Внутри Autoprefixer опирается на библиотеку под названием &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;Browserslist&lt;/a&gt; , чтобы выяснить , какие браузеры для поддержки с префиксом. Список браузеров ищет параметры конфигурации в свойстве &lt;code&gt;browserslist&lt;/code&gt; файла конфигурации пакета или в файле конфигурации с именем &lt;code&gt;.browserslistrc&lt;/code&gt; . Autoprefixer ищет список &lt;code&gt;browserslist&lt;/code&gt; конфигурацию когда он префикс вашего CSS.</target>
        </trans-unit>
        <trans-unit id="4a58c18b307abf758e113f2eeb5fbc842f890084" translate="yes" xml:space="preserve">
          <source>Internally, all static methods cover methods of the current runtime &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; instance, which is also returned by the &lt;code&gt;&lt;a href=&quot;../api/core/testing/gettestbed&quot;&gt;getTestBed&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">Внутри все статические методы покрывают методы текущего экземпляра &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; среды выполнения , который также возвращается &lt;code&gt;&lt;a href=&quot;../api/core/testing/gettestbed&quot;&gt;getTestBed&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fc8aa8e4bf0323d00c15a7a4943933fbf6fb9ae" translate="yes" xml:space="preserve">
          <source>Internationalization (i18n)</source>
          <target state="translated">Интернационализация (i18n)</target>
        </trans-unit>
        <trans-unit id="507e49b9434f4f57a7db4cbad55a28939d060bc6" translate="yes" xml:space="preserve">
          <source>Internationalization (i18n) Guide</source>
          <target state="translated">Руководство по интернационализации (i18n)</target>
        </trans-unit>
        <trans-unit id="2ceac5014bae5904c30ddb08d140fc4b7928f48a" translate="yes" xml:space="preserve">
          <source>Interpolated content is always escaped&amp;mdash;the HTML isn't interpreted and the browser displays angle brackets in the element's text content.</source>
          <target state="translated">Интерполированное содержимое всегда экранируется - HTML не интерпретируется, и браузер отображает угловые скобки в текстовом содержимом элемента.</target>
        </trans-unit>
        <trans-unit id="6a9858c9bf3149456595f98943cf88e41039822e" translate="yes" xml:space="preserve">
          <source>Interpolation</source>
          <target state="translated">Interpolation</target>
        </trans-unit>
        <trans-unit id="c0d5f0c6fbe15f854b359c7977dd0323a5c988dc" translate="yes" xml:space="preserve">
          <source>Interpolation &lt;code&gt;{{ }}&lt;/code&gt;</source>
          <target state="translated">Интерполяция &lt;code&gt;{{ }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="15241bfb250242f27aea0edbf654c3c0b6eff9c1" translate="yes" xml:space="preserve">
          <source>Interpolation &lt;code&gt;{{...}}&lt;/code&gt;</source>
          <target state="translated">интерполирование &lt;code&gt;{{...}}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cad50a4f2d79b7204d7fa4ee552feedad7652e19" translate="yes" xml:space="preserve">
          <source>Interpolation Property Attribute Class Style</source>
          <target state="translated">Интерполяция Стиль класса атрибута собственности</target>
        </trans-unit>
        <trans-unit id="9ece64b7320504fa399841a6d62c9a3dbd7784b2" translate="yes" xml:space="preserve">
          <source>Interpolation allows you to incorporate calculated strings into the text between HTML element tags and within attribute assignments. Template expressions are what you use to calculate those strings.</source>
          <target state="translated">Интерполяция позволяет включать вычисленные строки в текст между тегами HTML-элементов и внутри назначений атрибутов.Выражения шаблонов-это то,что вы используете для вычисления этих строк.</target>
        </trans-unit>
        <trans-unit id="37649b57fe7cf149ac8228d3effb6bd49c8873d2" translate="yes" xml:space="preserve">
          <source>Interpolation and Template Expressions</source>
          <target state="translated">Интерполяция и экспрессии шаблонов</target>
        </trans-unit>
        <trans-unit id="3c8d084daa415eab3f33192cfd217ea5a72927e7" translate="yes" xml:space="preserve">
          <source>Interpolation and template expressions</source>
          <target state="translated">Интерполяция и шаблонные выражения</target>
        </trans-unit>
        <trans-unit id="3d349805b5ca7ad2d64bafc375f7ad1fb4256432" translate="yes" xml:space="preserve">
          <source>Interpolation handles the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags differently than property binding but both approaches render the content harmlessly. The following is the browser output of the &lt;code&gt;evilTitle&lt;/code&gt; examples.</source>
          <target state="translated">Интерполяция обрабатывает теги &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; иначе, чем привязка свойств, но оба подхода делают контент безвредным. Следующее является выводом &lt;code&gt;evilTitle&lt;/code&gt; примеров evilTitle .</target>
        </trans-unit>
        <trans-unit id="782432f138e6c2551df031091e97964894c9f91b" translate="yes" xml:space="preserve">
          <source>Interpolation handles the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags differently than property binding, but both approaches render the content harmlessly. The following is the browser output of the sanitized &lt;code&gt;evilTitle&lt;/code&gt; example.</source>
          <target state="translated">Интерполяция обрабатывает теги &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; иначе, чем привязка свойств, но оба подхода делают содержимое безвредным. Ниже приведен вывод &lt;code&gt;evilTitle&lt;/code&gt; примера evilTitle в браузере .</target>
        </trans-unit>
        <trans-unit id="4d3d39599f1e253e5d15323a3b40cf507133a6e4" translate="yes" xml:space="preserve">
          <source>Interpolation is a convenient alternative to property binding in many cases. When rendering data values as strings, there is no technical reason to prefer one form to the other, though readability tends to favor interpolation. However, &lt;em&gt;when setting an element property to a non-string data value, you must use property binding&lt;/em&gt;.</source>
          <target state="translated">Интерполяция является удобной альтернативой привязке свойств во многих случаях. При рендеринге значений данных в виде строк, нет технической причины предпочитать одну форму другой, хотя удобочитаемость имеет тенденцию благоприятствовать интерполяции. Однако &lt;em&gt;при установке свойства элемента в нестроковое значение данных необходимо использовать привязку свойства&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7a70d18508c1f3509d81cd385ef5f470b52a349a" translate="yes" xml:space="preserve">
          <source>Interpolation refers to embedding expressions into marked up text. By default, interpolation uses as its delimiter the double curly braces, &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;.</source>
          <target state="translated">Интерполяция относится к встраиванию выражений в размеченный текст. По умолчанию интерполяция использует в качестве разделителя двойные фигурные скобки &lt;code&gt;{{&lt;/code&gt; и &lt;code&gt;}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18549284fbd31fe50d2af013bc5f2f807b255c5d" translate="yes" xml:space="preserve">
          <source>Interpolation: &lt;code&gt;&amp;lt;comp greeting=&quot;Hello {{name}}!&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Интерполяция: &lt;code&gt;&amp;lt;comp greeting=&quot;Hello {{name}}!&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="148008a6c97111d9a4baac98fac041378bd84ebd" translate="yes" xml:space="preserve">
          <source>Intl</source>
          <target state="translated">Intl</target>
        </trans-unit>
        <trans-unit id="b3e69f2a42a9ebe8a619598951f3e7f96f8435fa" translate="yes" xml:space="preserve">
          <source>Intl API</source>
          <target state="translated">Интерфейс API</target>
        </trans-unit>
        <trans-unit id="e11d234c418f535d475bc472816ff39f325d47a4" translate="yes" xml:space="preserve">
          <source>Introducing Angular pipes, a way to write display-value transformations that you can declare in your HTML.</source>
          <target state="translated">Введение угловых труб,способ написания трансформаций отображения-значения,которые можно декларировать в HTML.</target>
        </trans-unit>
        <trans-unit id="39324c26031e2c93ca39870003886cbe2b2e25bf" translate="yes" xml:space="preserve">
          <source>Introducing another container element&amp;mdash;typically a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&amp;mdash;to group the elements under a single &lt;em&gt;root&lt;/em&gt; is usually harmless. &lt;em&gt;Usually&lt;/em&gt; ... but not &lt;em&gt;always&lt;/em&gt;.</source>
          <target state="translated">Представление другого элемента контейнера - обычно &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; - для группировки элементов под одним &lt;em&gt;корнем&lt;/em&gt; обычно безвредно. &lt;em&gt;Обычно&lt;/em&gt; ... но не &lt;em&gt;всегда&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e4f43f29bd2dc8b1b3dcc99d7b8cc0944588ec40" translate="yes" xml:space="preserve">
          <source>Introduction to Angular animations</source>
          <target state="translated">Введение в угловые анимации</target>
        </trans-unit>
        <trans-unit id="77fdbd720d56c685098d00d0ba39402f14f89357" translate="yes" xml:space="preserve">
          <source>Introduction to Angular concepts</source>
          <target state="translated">Введение в угловые понятия</target>
        </trans-unit>
        <trans-unit id="7a88af9c7af43c51b51f00d5d0cbef442684cf51" translate="yes" xml:space="preserve">
          <source>Introduction to Components</source>
          <target state="translated">Введение в компоненты</target>
        </trans-unit>
        <trans-unit id="037e78ee72bb786b3b99727257ded097b29ed22c" translate="yes" xml:space="preserve">
          <source>Introduction to Modules</source>
          <target state="translated">Введение в модули</target>
        </trans-unit>
        <trans-unit id="77695aa23083353741cc8e577e0d1f52b59146ec" translate="yes" xml:space="preserve">
          <source>Introduction to Services and DI</source>
          <target state="translated">Введение в услуги и DI</target>
        </trans-unit>
        <trans-unit id="1891a5d7cdaa920a5fcf4904feb061ee52d40600" translate="yes" xml:space="preserve">
          <source>Introduction to Template-driven forms</source>
          <target state="translated">Введение в формы,управляемые шаблонами</target>
        </trans-unit>
        <trans-unit id="47739d8d7f900214f17011b232b38873a5ba56b9" translate="yes" xml:space="preserve">
          <source>Introduction to components</source>
          <target state="translated">Введение в компоненты</target>
        </trans-unit>
        <trans-unit id="4338ab77cbd7d66a84347792c0bded85b09f38fe" translate="yes" xml:space="preserve">
          <source>Introduction to components and templates</source>
          <target state="translated">Введение в компоненты и шаблоны</target>
        </trans-unit>
        <trans-unit id="b56bd365155a67ad44616a3cfaa0c6f87e0813cf" translate="yes" xml:space="preserve">
          <source>Introduction to forms in Angular</source>
          <target state="translated">Введение в формы в Угловой</target>
        </trans-unit>
        <trans-unit id="7cccb3d4fcea31dd15a08fa2a5f77cb23a273075" translate="yes" xml:space="preserve">
          <source>Introduction to modules</source>
          <target state="translated">Введение в модули</target>
        </trans-unit>
        <trans-unit id="0709e3f3783847d46c02c3e879b4d2aa32e91ee8" translate="yes" xml:space="preserve">
          <source>Introduction to reactive forms</source>
          <target state="translated">Введение в реактивные формы</target>
        </trans-unit>
        <trans-unit id="de2848f98042a65b60c04421d206e68ca3490213" translate="yes" xml:space="preserve">
          <source>Introduction to services and dependency injection</source>
          <target state="translated">Введение в услуги и инъекции зависимых</target>
        </trans-unit>
        <trans-unit id="31bd018950090c5c6cd607bed84ff15ec170f2b3" translate="yes" xml:space="preserve">
          <source>Introductory application demonstrating Angular features. For more information, see &lt;a href=&quot;start&quot;&gt;Getting started&lt;/a&gt;.</source>
          <target state="translated">Вводное приложение, демонстрирующее возможности Angular. Для получения дополнительной информации см. &lt;a href=&quot;start&quot;&gt;Начало работы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d784ef7dd559f90510b1c51d9366c7111e5f69d8" translate="yes" xml:space="preserve">
          <source>Introductory documentation for the root app.</source>
          <target state="translated">Вводная документация для корневого приложения.</target>
        </trans-unit>
        <trans-unit id="aace78cff547d716715d45872adbd62b2b745412" translate="yes" xml:space="preserve">
          <source>Invert the selection specified by the 'grep' option.</source>
          <target state="translated">Инвертируйте выделение,указанное в опции 'grep'.</target>
        </trans-unit>
        <trans-unit id="ef11e3a45fcbddfa8943f16664c96693dbbd2dac" translate="yes" xml:space="preserve">
          <source>Invoke Push Notifications by pushing a message with the following payload.</source>
          <target state="translated">Спровоцируйте Push-уведомления,нажав на сообщение со следующей полезной нагрузкой.</target>
        </trans-unit>
        <trans-unit id="88241a92475e9beecdb4c31ab3c1fdf7de6dab59" translate="yes" xml:space="preserve">
          <source>Invoke as decorator.</source>
          <target state="translated">Вызвать в качестве декоратора.</target>
        </trans-unit>
        <trans-unit id="59d70d5937eb1157be8db1664978fb31d22e53bb" translate="yes" xml:space="preserve">
          <source>Invoke the tool on the command line through the &lt;code&gt;ng&lt;/code&gt; executable. Online help is available on the command line. Enter the following to list commands or options for a given command (such as &lt;a href=&quot;https://angular.io/cli/generate&quot;&gt;generate&lt;/a&gt;) with a short description.</source>
          <target state="translated">Вызовите инструмент из командной строки через исполняемый файл &lt;code&gt;ng&lt;/code&gt; . Онлайн-справка доступна в командной строке. Введите следующее, чтобы перечислить команды или параметры для данной команды (например, &lt;a href=&quot;https://angular.io/cli/generate&quot;&gt;создать&lt;/a&gt; ) с кратким описанием.</target>
        </trans-unit>
        <trans-unit id="bcf4fe5e09f5109017dca07a3cf2d814a91d3785" translate="yes" xml:space="preserve">
          <source>Invoke this method to explicitly process change detection and its side-effects.</source>
          <target state="translated">Спровоцировать этот метод на явное обнаружение изменений и их побочных эффектов.</target>
        </trans-unit>
        <trans-unit id="f71314c70f579581e6aeb34f93359ab3921893e3" translate="yes" xml:space="preserve">
          <source>Invokes the deploy builder for a specified project or for the default project in the workspace.</source>
          <target state="translated">Призывает конструктора развертывания для указанного проекта или для проекта по умолчанию в рабочей области.</target>
        </trans-unit>
        <trans-unit id="d1940ca4cbd9dbd0eb38f2bc2ef028f64f0e3ebe" translate="yes" xml:space="preserve">
          <source>Invoking &lt;code&gt;{{ 'ok' | repeat:3 }}&lt;/code&gt; in a template produces &lt;code&gt;okokok&lt;/code&gt;.</source>
          <target state="translated">Invoking &lt;code&gt;{{ 'ok' | repeat:3 }}&lt;/code&gt; в шаблоне выдает &lt;code&gt;okokok&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ecb88a0d7e8f36c9744ae06147a6fdb631de233" translate="yes" xml:space="preserve">
          <source>Is &lt;code&gt;Lightswitch.clicked()&lt;/code&gt; bound to anything such that the user can invoke it?</source>
          <target state="translated">Является ли &lt;code&gt;Lightswitch.clicked()&lt;/code&gt; с чем-либо таким, чтобы пользователь мог его вызвать?</target>
        </trans-unit>
        <trans-unit id="ac8f08f500ef6eac216f7e2f6acc17d63f159658" translate="yes" xml:space="preserve">
          <source>Is its own tax return editing session.</source>
          <target state="translated">это его собственная сессия редактирования налоговой декларации.</target>
        </trans-unit>
        <trans-unit id="26b69a05483ffab3d41808c70bd31cc4f9e37b16" translate="yes" xml:space="preserve">
          <source>Is the &lt;code&gt;Lightswitch.message&lt;/code&gt; displayed?</source>
          <target state="translated">&lt;code&gt;Lightswitch.message&lt;/code&gt; ли Lightswitch.message ?</target>
        </trans-unit>
        <trans-unit id="3ccfab603206383b681f28870947bbf1d675dda5" translate="yes" xml:space="preserve">
          <source>Is the hero name displayed as expected (i.e, in uppercase)?</source>
          <target state="translated">Отображается ли имя героя так,как ожидалось (т.е.в верхнем регистре)?</target>
        </trans-unit>
        <trans-unit id="62759ede6184ca8bf2ccab209b605f3ebc11e427" translate="yes" xml:space="preserve">
          <source>Is the welcome message displayed by the template of &lt;code&gt;WelcomeComponent&lt;/code&gt;?</source>
          <target state="translated">Отображается ли приветственное сообщение по шаблону &lt;code&gt;WelcomeComponent&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="a59c6ce02a2484a37dbf441374573cec25db7336" translate="yes" xml:space="preserve">
          <source>It &lt;em&gt;creates&lt;/em&gt; the &lt;code&gt;TestHostComponent&lt;/code&gt; instead of the &lt;code&gt;DashboardHeroComponent&lt;/code&gt;.</source>
          <target state="translated">Это &lt;em&gt;создает&lt;/em&gt; в &lt;code&gt;TestHostComponent&lt;/code&gt; вместо &lt;code&gt;DashboardHeroComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="94b8e34baeefba35b8b89673f3480499d94bf056" translate="yes" xml:space="preserve">
          <source>It &lt;em&gt;declares&lt;/em&gt; both the &lt;code&gt;DashboardHeroComponent&lt;/code&gt; and the &lt;code&gt;TestHostComponent&lt;/code&gt;.</source>
          <target state="translated">Он &lt;em&gt;объявляет&lt;/em&gt; как &lt;code&gt;DashboardHeroComponent&lt;/code&gt; ,так и &lt;code&gt;TestHostComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b21529cea838e2b6b15441950bdae0264cbbefbf" translate="yes" xml:space="preserve">
          <source>It accepts a &lt;code&gt;text/html&lt;/code&gt; response (as determined by the value of the &lt;code&gt;Accept&lt;/code&gt; header).</source>
          <target state="translated">Он принимает &lt;code&gt;text/html&lt;/code&gt; ответ (который определяется значением заголовка &lt;code&gt;Accept&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="aaf41bb3d14f2e414d4fcc67dfff4cef7f7b3b73" translate="yes" xml:space="preserve">
          <source>It accepts a domain model as an optional &lt;code&gt;&lt;a href=&quot;../core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;. If you have a one-way binding to &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;[]&lt;/code&gt; syntax, changing the domain model's value in the component class sets the value in the view. If you have a two-way binding with &lt;code&gt;[()]&lt;/code&gt; syntax (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to the domain model in your class.</source>
          <target state="translated">Он принимает модель предметной области в качестве необязательного &lt;code&gt;&lt;a href=&quot;../core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; . Если у вас есть односторонняя привязка к &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; с синтаксисом &lt;code&gt;[]&lt;/code&gt; , изменение значения модели предметной области в классе компонента устанавливает значение в представлении. Если у вас есть двусторонняя привязка с синтаксисом &lt;code&gt;[()]&lt;/code&gt; (также известный как &amp;laquo;синтаксис банана в коробке&amp;raquo;), значение в пользовательском интерфейсе всегда синхронизируется с моделью предметной области в вашем классе.</target>
        </trans-unit>
        <trans-unit id="e2ae87480d790dfa92913ec2c7c57b94a67e403b" translate="yes" xml:space="preserve">
          <source>It accepts a domain model as an optional &lt;code&gt;&lt;a href=&quot;../core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;. If you have a one-way binding to &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;[]&lt;/code&gt; syntax, changing the value of the domain model in the component class sets the value in the view. If you have a two-way binding with &lt;code&gt;[()]&lt;/code&gt; syntax (also known as 'banana-box syntax'), the value in the UI always syncs back to the domain model in your class.</source>
          <target state="translated">Он принимает модель домена в качестве необязательного &lt;code&gt;&lt;a href=&quot;../core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; . Если у вас есть односторонняя привязка к &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; с синтаксисом &lt;code&gt;[]&lt;/code&gt; , изменение значения модели домена в классе компонентов устанавливает значение в представлении. Если у вас есть двусторонняя привязка с &lt;code&gt;[()]&lt;/code&gt; синтаксисом (также известный как &amp;laquo;синтаксис банановой коробки&amp;raquo;), значение в пользовательском интерфейсе всегда синхронизируется с моделью предметной области в вашем классе.</target>
        </trans-unit>
        <trans-unit id="d1ef5600898e0ae01610d043a4a9f983f75191ed" translate="yes" xml:space="preserve">
          <source>It accepts both super-sets and sub-sets of the array without throwing an error.</source>
          <target state="translated">Он принимает как супер-наборы,так и под-наборы массива,не выбрасывая ошибку.</target>
        </trans-unit>
        <trans-unit id="4bccd25078f3c01228e73bdbae0161e45566c3cb" translate="yes" xml:space="preserve">
          <source>It accepts both super-sets and sub-sets of the group without throwing an error.</source>
          <target state="translated">Он принимает как супер-наборы,так и под-наборы группы,не выбрасывая ошибку.</target>
        </trans-unit>
        <trans-unit id="c13d32540d684ec2971d8a6aa07a438b2688dad0" translate="yes" xml:space="preserve">
          <source>It accepts the string name of the nested &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; you want to link, and will look for a &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; registered with that name in the parent &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance you passed into &lt;code&gt;&lt;a href=&quot;formgroupdirective&quot;&gt;FormGroupDirective&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Он принимает строковое имя вложенного &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; ,который вы хотите связать, и будет искать &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; , зарегистрированный с этим именем в родительском экземпляре &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; ,который вы передали в &lt;code&gt;&lt;a href=&quot;formgroupdirective&quot;&gt;FormGroupDirective&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92bb130acb69f1ba28771910ed692ccf19a723f9" translate="yes" xml:space="preserve">
          <source>It accepts the string name of the nested &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to link, and looks for a &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; registered with that name in the parent &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance you passed into &lt;code&gt;&lt;a href=&quot;formgroupdirective&quot;&gt;FormGroupDirective&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Он принимает имя строки вложенной &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; для связи и ищет &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; , зарегистрированную с этим именем в родительском экземпляре &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; ,который вы передали в &lt;code&gt;&lt;a href=&quot;formgroupdirective&quot;&gt;FormGroupDirective&lt;/a&gt;&lt;/code&gt; . .</target>
        </trans-unit>
        <trans-unit id="f8a6c222dced75a612315602dfc6bf860b4fcfb4" translate="yes" xml:space="preserve">
          <source>It allows instantiating or even loading the Angular part lazily, which improves the initial loading time. In some cases this may waive the cost of running a second framework altogether.</source>
          <target state="translated">Это позволяет легко инстанцировать или даже нагружать угловую часть,что улучшает время первоначальной загрузки.В некоторых случаях это может привести к полной отмене затрат на запуск второго фреймворка.</target>
        </trans-unit>
        <trans-unit id="8e63edca4aba60ae769633e65db45ce6b8cda1c2" translate="yes" xml:space="preserve">
          <source>It allows loading/bootstrapping the Angular part of a hybrid application lazily and not having to pay the cost up-front. For example, you can have an AngularJS application that uses Angular for specific routes and only instantiate the Angular modules if/when the user visits one of these routes.</source>
          <target state="translated">Он позволяет загружать/загружать угловую часть гибридного приложения лениво и без необходимости заранее оплачивать стоимость.Например,вы можете иметь приложение AngularJS,которое использует Angular для определенных маршрутов и только инстанцирует угловые модули,если/когда пользователь посещает один из этих маршрутов.</target>
        </trans-unit>
        <trans-unit id="1fb8a3420da7cbbbfae709f23348ef16e743e69f" translate="yes" xml:space="preserve">
          <source>It also contains properties to access the &lt;a href=&quot;upgrademodule#injector&quot;&gt;root injector&lt;/a&gt;, the bootstrap &lt;code&gt;&lt;a href=&quot;../../core/ngzone&quot;&gt;NgZone&lt;/a&gt;&lt;/code&gt; and the &lt;a href=&quot;https://docs.angularjs.org/api/auto/service/%24injector&quot;&gt;AngularJS $injector&lt;/a&gt;.</source>
          <target state="translated">Он также содержит свойства для доступа к &lt;a href=&quot;upgrademodule#injector&quot;&gt;корневому инжектору&lt;/a&gt; , загрузочному &lt;code&gt;&lt;a href=&quot;../../core/ngzone&quot;&gt;NgZone&lt;/a&gt;&lt;/code&gt; и &lt;a href=&quot;https://docs.angularjs.org/api/auto/service/%24injector&quot;&gt;AngularJS $ &lt;/a&gt;-инжектору .</target>
        </trans-unit>
        <trans-unit id="f071a0b65644eeeccb34ee7fdae07a260e0e9140" translate="yes" xml:space="preserve">
          <source>It also creates the following workspace and starter project files:</source>
          <target state="translated">Он также создает следующее рабочее пространство и стартовые файлы проекта:</target>
        </trans-unit>
        <trans-unit id="6c32f9929135cab965aabc48fd19faf6dd6dce8a" translate="yes" xml:space="preserve">
          <source>It also generates an initial test file for the component, &lt;code&gt;banner-external.component.spec.ts&lt;/code&gt;, that looks like this:</source>
          <target state="translated">Он также создает начальный тестовый файл для компонента &lt;code&gt;banner-external.component.spec.ts&lt;/code&gt; , который выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="8efa0771b30ff267b601afb0f7067fc48209cdec" translate="yes" xml:space="preserve">
          <source>It also has a side-effect. &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; logs the &lt;code&gt;path&lt;/code&gt; of a selected route in its public &lt;code&gt;preloadedModules&lt;/code&gt; array.</source>
          <target state="translated">Это также имеет побочный эффект. &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; регистрирует &lt;code&gt;path&lt;/code&gt; выбранного маршрута в своих общедоступных &lt;code&gt;preloadedModules&lt;/code&gt; массиве .</target>
        </trans-unit>
        <trans-unit id="10fdc8fee72f7646b8b3adf2c52bb9b3221fcdfe" translate="yes" xml:space="preserve">
          <source>It appears within the template of a parent component, which binds a &lt;em&gt;hero&lt;/em&gt; to the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; property and listens for an event raised through the &lt;em&gt;selected&lt;/em&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; property.</source>
          <target state="translated">Он появляется в шаблоне родительского компонента, который привязывает &lt;em&gt;героя&lt;/em&gt; к свойству &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; и прослушивает событие, вызванное &lt;em&gt;выбранным &lt;/em&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; свойством .</target>
        </trans-unit>
        <trans-unit id="f279ef89e1bf02c3528c17799c4418cc58336a95" translate="yes" xml:space="preserve">
          <source>It belongs to the optional &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; and you must &lt;em&gt;opt-in&lt;/em&gt; to using it.</source>
          <target state="translated">Он принадлежит к дополнительному &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; , и вы должны &lt;em&gt;выбрать в&lt;/em&gt; , чтобы использовать его.</target>
        </trans-unit>
        <trans-unit id="26023f5577f25d3446bc370676b0a6f86e7e8aba" translate="yes" xml:space="preserve">
          <source>It calls &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#post&quot;&gt;HttpClient.post()&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#put&quot;&gt;put()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Он вызывает &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#post&quot;&gt;HttpClient.post()&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#put&quot;&gt;put()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3420de52d9f27308e43685dc19d302c9fa7999ee" translate="yes" xml:space="preserve">
          <source>It calls &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#post&quot;&gt;HttpClient.post()&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;put()&lt;/code&gt;.</source>
          <target state="translated">Он вызывает &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#post&quot;&gt;HttpClient.post()&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;put()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e20098109d5ecc4ec6a976711ca2510fe455a018" translate="yes" xml:space="preserve">
          <source>It can be created manually, as follows:</source>
          <target state="translated">Его можно создать вручную,как показано ниже:</target>
        </trans-unit>
        <trans-unit id="4bc5d4c1a8b1283e28876118079505f0a82bc822" translate="yes" xml:space="preserve">
          <source>It can be problematic for an app if the version of resources it's receiving changes suddenly or without warning. See the &lt;a href=&quot;service-worker-devops#versions&quot;&gt;Versions&lt;/a&gt; section above for a description of such issues.</source>
          <target state="translated">Для приложения может возникнуть проблема, если версия ресурсов, которые оно получает, изменяется внезапно или без предупреждения. См. Раздел &lt;a href=&quot;service-worker-devops#versions&quot;&gt;Версии&lt;/a&gt; выше для описания таких проблем.</target>
        </trans-unit>
        <trans-unit id="08426e933f904dc80c16feae7eab518a4a961cf1" translate="yes" xml:space="preserve">
          <source>It can be provided to this method in one of two formats:</source>
          <target state="translated">Он может быть предоставлен в одном из двух форматов:</target>
        </trans-unit>
        <trans-unit id="0a5b556bf784cd334e9ae2c20c87115e67fc96c1" translate="yes" xml:space="preserve">
          <source>It can be used as a base class for custom route reuse strategies, i.e. you can create your own class that extends the &lt;code&gt;&lt;a href=&quot;baseroutereusestrategy&quot;&gt;BaseRouteReuseStrategy&lt;/a&gt;&lt;/code&gt; one.</source>
          <target state="translated">Его можно использовать в качестве базового класса для пользовательских стратегий повторного использования маршрутов, т.е. вы можете создать свой собственный класс, расширяющий класс &lt;code&gt;&lt;a href=&quot;baseroutereusestrategy&quot;&gt;BaseRouteReuseStrategy&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d56cfef604890a297d3766102bad859f461f7ec" translate="yes" xml:space="preserve">
          <source>It can't just reference the &lt;code&gt;id&lt;/code&gt; property of the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt;. The component has to &lt;em&gt;subscribe&lt;/em&gt; to the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; observable and be prepared for the &lt;code&gt;id&lt;/code&gt; to change during its lifetime.</source>
          <target state="translated">Он не может просто ссылаться на свойство &lt;code&gt;id&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; . Компонент должен &lt;em&gt;подписаться&lt;/em&gt; на наблюдаемый &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute#paramMap&quot;&gt;ActivatedRoute.paramMap&lt;/a&gt;&lt;/code&gt; и быть готовым к &lt;code&gt;id&lt;/code&gt; к изменению в течение срока его службы.</target>
        </trans-unit>
        <trans-unit id="cfb1bbd0359c2cf1cb726dd86d8ce0539e6977ba" translate="yes" xml:space="preserve">
          <source>It declares and exports the utility pipe, directive, and component classes.</source>
          <target state="translated">Он декларирует и экспортирует коммунальные трубы,директивы и классы компонентов.</target>
        </trans-unit>
        <trans-unit id="d7d019223649a73995168e563585db9bbe9dadab" translate="yes" xml:space="preserve">
          <source>It defines a &lt;code&gt;heroes&lt;/code&gt; array property.</source>
          <target state="translated">Он определяет свойство массива &lt;code&gt;heroes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a6f7ce9a8a99f6706e4390e417534249fdbde969" translate="yes" xml:space="preserve">
          <source>It describes features which are part of Angular Labs, and are not considered a stable, supported API.</source>
          <target state="translated">Он описывает особенности,которые являются частью Angular Labs,и не считаются стабильным,поддерживаемым API.</target>
        </trans-unit>
        <trans-unit id="8e59fc3b69ee2f0a812b49f8920bf497ae137922" translate="yes" xml:space="preserve">
          <source>It displays a short form with a header, an input box for the message, and two buttons, &quot;Send&quot; and &quot;Cancel&quot;.</source>
          <target state="translated">Она отображает короткую форму с заголовком,поле ввода сообщения и две кнопки &quot;Отправить&quot; и &quot;Отмена&quot;.</target>
        </trans-unit>
        <trans-unit id="e74c4df29123d7f1b28af5c3920c37049db746dc" translate="yes" xml:space="preserve">
          <source>It displays a simple form with a header, an input box for the message, and two buttons, &quot;Send&quot; and &quot;Cancel&quot;.</source>
          <target state="translated">Она отображает простую форму с заголовком,поле ввода сообщения и две кнопки &quot;Send&quot; (Отправить)и &quot;Cancel&quot; (Отменить).</target>
        </trans-unit>
        <trans-unit id="bf7952a8d431d45427cd14b51695264b8ed72382" translate="yes" xml:space="preserve">
          <source>It does not require you to change how you bootstrap your AngularJS app.</source>
          <target state="translated">Это не требует от вас изменения способа загрузки вашего приложения AngularJS.</target>
        </trans-unit>
        <trans-unit id="419e645994e8d30b7174dbb517386ed3b5affc24" translate="yes" xml:space="preserve">
          <source>It doesn't figure out the types of &lt;code&gt;#refs&lt;/code&gt;, the results of pipes, the type of &lt;code&gt;$event&lt;/code&gt; in event bindings, and so on.</source>
          <target state="translated">Он не определяет типы &lt;code&gt;#refs&lt;/code&gt; , результаты каналов, тип &lt;code&gt;$event&lt;/code&gt; в привязках событий и т. Д.</target>
        </trans-unit>
        <trans-unit id="6b9ed176655d2ae7894637c252aa287ceb5d8d56" translate="yes" xml:space="preserve">
          <source>It enforces the use of component best practices like &lt;code&gt;controllerAs&lt;/code&gt;.</source>
          <target state="translated">Он обеспечивает использование лучших практик, таких как &lt;code&gt;controllerAs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42cd08f715154702ba1bfcb5f060c73f70e0f76a" translate="yes" xml:space="preserve">
          <source>It expects the server to generate an id for the new hero, which it returns in the &lt;code&gt;Observable&amp;lt;Hero&amp;gt;&lt;/code&gt; to the caller.</source>
          <target state="translated">Он ожидает, что сервер сгенерирует идентификатор для нового героя, который он возвращает в &lt;code&gt;Observable&amp;lt;Hero&amp;gt;&lt;/code&gt; вызывающей стороне.</target>
        </trans-unit>
        <trans-unit id="95d0bff9d24171d2c283dde8af92d28339fe8434" translate="yes" xml:space="preserve">
          <source>It forwards that request to &lt;code&gt;next.handle()&lt;/code&gt; which ultimately calls the server and returns the server's response.</source>
          <target state="translated">Он пересылает этот запрос в &lt;code&gt;next.handle()&lt;/code&gt; который в конечном итоге вызывает сервер и возвращает ответ сервера.</target>
        </trans-unit>
        <trans-unit id="cff060b2c8359f3ecbce1c4cf07f83a9266ef3a7" translate="yes" xml:space="preserve">
          <source>It has Angular properties and methods that abstract interaction with the native element. This test calls the &lt;code&gt;DebugElement.triggerEventHandler&lt;/code&gt; with the &quot;click&quot; event name. The &quot;click&quot; event binding responds by calling &lt;code&gt;DashboardHeroComponent.click()&lt;/code&gt;.</source>
          <target state="translated">Он имеет угловые свойства и методы, которые абстрагируют взаимодействие с нативным элементом. Этот тест вызывает &lt;code&gt;DebugElement.triggerEventHandler&lt;/code&gt; с именем события &amp;laquo;click&amp;raquo;. Привязка события &amp;laquo;click&amp;raquo; отвечает вызовом &lt;code&gt;DashboardHeroComponent.click()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77cb21518043d46f3f115c5e67031ef805971a8e" translate="yes" xml:space="preserve">
          <source>It has a legitimate purpose in this guide. It demonstrates how to find a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; element, click it, and inspect a result, without engaging the full router machinery. This is a skill you may need to test a more sophisticated component, one that changes the display, re-calculates parameters, or re-arranges navigation options when the user clicks the link.</source>
          <target state="translated">У этого есть законная цель в этом руководстве. Он демонстрирует, как найти элемент &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; , щелкнуть по нему и проверить результат, не задействуя весь механизм маршрутизатора. Это навык, который вам может понадобиться для тестирования более сложного компонента, который изменяет отображение, пересчитывает параметры или перестраивает параметры навигации, когда пользователь щелкает ссылку.</target>
        </trans-unit>
        <trans-unit id="e4df5dc55e01418d5fe02e4482c23400263dcc59" translate="yes" xml:space="preserve">
          <source>It has a simple template that only includes the &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt;. This component just renders the contents of the active route and nothing else.</source>
          <target state="translated">Он имеет простой шаблон, который включает в себя только &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; . Этот компонент просто отображает содержимое активного маршрута и ничего больше.</target>
        </trans-unit>
        <trans-unit id="9922a6848ec3f5a8b7802dc76ee7ad819c476823" translate="yes" xml:space="preserve">
          <source>It has good default values for directive attributes like &lt;code&gt;&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;restrict&lt;/code&gt;.</source>
          <target state="translated">Он имеет хорошие значения по умолчанию для атрибутов директивы, таких как &lt;code&gt;&lt;a href=&quot;../api/service-worker/swregistrationoptions#scope&quot;&gt;scope&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;restrict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1eec011488d2e2fc8d294fd38efcceda66f669ca" translate="yes" xml:space="preserve">
          <source>It has good default values for directive attributes like &lt;code&gt;scope&lt;/code&gt; and &lt;code&gt;restrict&lt;/code&gt;.</source>
          <target state="translated">Он имеет хорошие значения по умолчанию для атрибутов директивы, таких как &lt;code&gt;scope&lt;/code&gt; и &lt;code&gt;restrict&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bea15911cc873bfe30f8a513aaa359e498d5ee43" translate="yes" xml:space="preserve">
          <source>It imports the &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; because the module's component needs common directives.</source>
          <target state="translated">Он импортирует &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; , потому что компонент модуля нуждается в общих директивах.</target>
        </trans-unit>
        <trans-unit id="ad4bae11dc99871b8342e876ba6993b4893ae7e5" translate="yes" xml:space="preserve">
          <source>It improves performance by avoiding unnecessary change detection runs while giving the developer greater ability to customize.</source>
          <target state="translated">Это повышает производительность,избегая ненужных запусков обнаружения изменений,в то же время давая разработчику больше возможностей для настройки.</target>
        </trans-unit>
        <trans-unit id="4164a929740068617e47d44247f8d7f7d80f5919" translate="yes" xml:space="preserve">
          <source>It is a &lt;em&gt;shell&lt;/em&gt; for the crisis management feature area, just as the &lt;code&gt;AppComponent&lt;/code&gt; is a shell to manage the high-level workflow.</source>
          <target state="translated">Это &lt;em&gt;оболочка&lt;/em&gt; для области функций управления кризисами, точно так же, как &lt;code&gt;AppComponent&lt;/code&gt; - это оболочка для управления рабочим процессом высокого уровня.</target>
        </trans-unit>
        <trans-unit id="39bf93eba307188a64bd26bb14fbc70e653f1001" translate="yes" xml:space="preserve">
          <source>It is a better practice to redistribute the component and its supporting classes into their own, dedicated files.</source>
          <target state="translated">Лучше всего перераспределять компонент и поддерживающие его классы в собственные,выделенные файлы.</target>
        </trans-unit>
        <trans-unit id="6769c0a53dc2a5685598a3855be2789b7ba33c3d" translate="yes" xml:space="preserve">
          <source>It is a shell for the crisis management feature area, just as the &lt;code&gt;AppComponent&lt;/code&gt; is a shell to manage the high-level workflow.</source>
          <target state="translated">Это оболочка для области функций антикризисного управления, так же как &lt;code&gt;AppComponent&lt;/code&gt; - это оболочка для управления рабочим процессом высокого уровня.</target>
        </trans-unit>
        <trans-unit id="f4c906b1ec5168c0204d5b89211f8c14a110d92c" translate="yes" xml:space="preserve">
          <source>It is also rare but valid for an interceptor to return multiple responses on the event stream for a single request.</source>
          <target state="translated">Также редки,но действительны случаи,когда перехватчик возвращает несколько ответов в потоке событий для одного запроса.</target>
        </trans-unit>
        <trans-unit id="7c3e6bd90e578a6d369fe153a9ba93c287cbf958" translate="yes" xml:space="preserve">
          <source>It is customary but not required to &lt;em&gt;precede&lt;/em&gt; the &lt;em&gt;closing HTML&lt;/em&gt; tag with a blank line as well.</source>
          <target state="translated">Это общепринято , но не обязательно &lt;em&gt;предшествует&lt;/em&gt; на &lt;em&gt;закрытие HTML&lt;/em&gt; тега с пустой строкой , а также.</target>
        </trans-unit>
        <trans-unit id="e2c901bdbe9622031dbf422258b1577bf6c7cfb3" translate="yes" xml:space="preserve">
          <source>It is highly recommended that you ensure that your app works even without service worker support in the browser. Although an unsupported browser ignores service worker caching, it will still report errors if the app attempts to interact with the service worker. For example, calling &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;SwUpdate.checkForUpdate()&lt;/a&gt;&lt;/code&gt; will return rejected promises. To avoid such an error, you can check whether the Angular service worker is enabled using &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#isEnabled&quot;&gt;SwUpdate.isEnabled&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">Настоятельно рекомендуется убедиться, что ваше приложение работает даже без поддержки сервисного работника в браузере. Хотя неподдерживаемый браузер игнорирует кэширование работника службы, он все равно будет сообщать об ошибках, если приложение попытается взаимодействовать с работником службы. Например, вызов &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#checkForUpdate&quot;&gt;SwUpdate.checkForUpdate()&lt;/a&gt;&lt;/code&gt; вернет отклоненные обещания. Чтобы избежать такой ошибки, вы можете проверить, включен ли работник службы Angular с помощью &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#isEnabled&quot;&gt;SwUpdate.isEnabled&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bca41d7798c2016edf356fbe8a535a8995b45502" translate="yes" xml:space="preserve">
          <source>It is important to note that service workers don't work behind redirect. You may have already encountered the error &lt;code&gt;The script resource is behind &lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; redirect, which is disallowed&lt;/code&gt;.</source>
          <target state="translated">Важно отметить, что работники сферы обслуживания не работают за редиректом. Вы , возможно, уже сталкивались ошибка &lt;code&gt;The script resource is behind &lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; redirect, which is disallowed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb4e957d60d2a88226f503a54462cd580636fb97" translate="yes" xml:space="preserve">
          <source>It is important to note that service workers don't work behind redirect. You may have already encountered the error &lt;code&gt;The script resource is behind a redirect, which is disallowed&lt;/code&gt;.</source>
          <target state="translated">Важно отметить, что сервис-воркеры не работают за перенаправлением. Возможно, вы уже столкнулись с ошибкой &lt;code&gt;The script resource is behind a redirect, which is disallowed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6149684d6a8cae8e0ae20c1797198ea032977a49" translate="yes" xml:space="preserve">
          <source>It is important to note that the asynchronous validation happens after the synchronous validation, and is performed only if the synchronous validation is successful. This check allows forms to avoid potentially expensive async validation processes such as an HTTP request if more basic validation methods fail.</source>
          <target state="translated">Важно отметить,что асинхронное подтверждение происходит после синхронного подтверждения,и выполняется только в том случае,если подтверждение синхронного подтверждения прошло успешно.Данная проверка позволяет избежать потенциально дорогостоящих асинхронных процессов валидации,таких как HTTP-запрос,в случае отказа более простых методов валидации.</target>
        </trans-unit>
        <trans-unit id="96d7f100fd14c118e644c78eb99afbea37e0600c" translate="yes" xml:space="preserve">
          <source>It is important to remember that &lt;em&gt;HTML attribute&lt;/em&gt; and the &lt;em&gt;DOM property&lt;/em&gt; are different things, even when they have the same name. In Angular, the only role of HTML attributes is to initialize element and directive state.</source>
          <target state="translated">Важно помнить, что &lt;em&gt;атрибут HTML&lt;/em&gt; и &lt;em&gt;свойство DOM&lt;/em&gt; - это разные вещи, даже если они имеют одинаковые имена. В Angular единственная роль атрибутов HTML заключается в инициализации элемента и состояния директивы.</target>
        </trans-unit>
        <trans-unit id="b0fefa48f8275785f28ed330c1e6500e50579c8a" translate="yes" xml:space="preserve">
          <source>It is not required (and not recommended) to bypass security if the value is safe, e.g. a URL that does not start with a suspicious protocol, or an HTML snippet that does not contain dangerous code. The sanitizer leaves safe values intact.</source>
          <target state="translated">Необязательно (и не рекомендуется)обходить безопасность,если значение безопасно,например,URL,который не начинается с подозрительного протокола,или HTML-фрагмент,который не содержит опасного кода.Дезинфицирующее средство оставляет безопасные значения нетронутыми.</target>
        </trans-unit>
        <trans-unit id="387f085f27e111a9c4bb8916669c057b5f6b9de7" translate="yes" xml:space="preserve">
          <source>It is now an error to assign values to template-only variables like &lt;code&gt;item&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;=&quot;let item of items&quot;&lt;/code&gt; (previously, the compiler would ignore these assignments).</source>
          <target state="translated">Теперь становится ошибкой присваивать значения переменным только для шаблона, таким как &lt;code&gt;item&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;=&quot;let item of items&quot;&lt;/code&gt; (ранее компилятор игнорировал эти присвоения).</target>
        </trans-unit>
        <trans-unit id="99529fc95ba91bf865b8bdc126836b31f7c4b6ea" translate="yes" xml:space="preserve">
          <source>It is often a good idea to &lt;em&gt;lock-in&lt;/em&gt; a good anchor name.</source>
          <target state="translated">Часто хорошая идея &lt;em&gt;зафиксировать&lt;/em&gt; хорошее имя якоря.</target>
        </trans-unit>
        <trans-unit id="4db5a6501589861c8253d34112728578aa1f6cad" translate="yes" xml:space="preserve">
          <source>It is possible for a schematic to provide all of its logic in the &lt;code&gt;index.ts&lt;/code&gt; file, without additional templates. You can create dynamic schematics for Angular, however, by providing components and templates in the &lt;code&gt;files/&lt;/code&gt; folder, like those in standalone Angular projects. The logic in the index file configures these templates by defining rules that inject data and modify variables.</source>
          <target state="translated">Схема может предоставить всю свою логику в файле &lt;code&gt;index.ts&lt;/code&gt; без дополнительных шаблонов. Однако вы можете создавать динамические схемы для Angular, предоставляя компоненты и шаблоны в &lt;code&gt;files/&lt;/code&gt; папках, как в автономных проектах Angular. Логика в файле индекса настраивает эти шаблоны, определяя правила, которые вводят данные и изменяют переменные.</target>
        </trans-unit>
        <trans-unit id="276b591d0b815d8888e428d7faf78a45d3cb29e5" translate="yes" xml:space="preserve">
          <source>It is possible for a user to try to access a route that you have not defined. To account for this behavior, the best practice is to display a 404 page. In this section, you'll create a 404 page and update your route configuration to show that page for any unspecified routes.</source>
          <target state="translated">Пользователь может попытаться получить доступ к маршруту,который вы не определили.Чтобы учесть такое поведение,лучше всего отобразить страницу 404.В этом разделе вы создадите страницу 404 и обновите конфигурацию вашего маршрута,чтобы показать эту страницу для любых неопределенных маршрутов.</target>
        </trans-unit>
        <trans-unit id="ffeddf5c1683cd01631856186ef36a7b7e49a9d5" translate="yes" xml:space="preserve">
          <source>It is possible to define the component first with the help of the &lt;code&gt;&lt;a href=&quot;../api/core/forwardref&quot;&gt;forwardRef&lt;/a&gt;()&lt;/code&gt; method as explained in this &lt;a href=&quot;http://blog.thoughtram.io/angular/2015/09/03/forward-references-in-angular-2.html&quot;&gt;blog post&lt;/a&gt;.</source>
          <target state="translated">Сначала можно определить компонент с помощью метода &lt;code&gt;&lt;a href=&quot;../api/core/forwardref&quot;&gt;forwardRef&lt;/a&gt;()&lt;/code&gt; как описано в этом &lt;a href=&quot;http://blog.thoughtram.io/angular/2015/09/03/forward-references-in-angular-2.html&quot;&gt;сообщении&lt;/a&gt; в блоге .</target>
        </trans-unit>
        <trans-unit id="2473f74c9fd722cdbf273d992f76f8c4263ad073" translate="yes" xml:space="preserve">
          <source>It is possible to downgrade multiple modules and include them in an AngularJS application. In that case, each downgraded module will be bootstrapped when an associated downgraded component or injectable needs to be instantiated.</source>
          <target state="translated">Можно понизить класс нескольких модулей и включить их в приложение AngularJS.В этом случае каждый модуль с пониженным рейтингом будет загружаться,когда необходимо инстанцировать соответствующий пониженный компонент или инжектор.</target>
        </trans-unit>
        <trans-unit id="84af64f653bfc89c603108eaa38ffc63b5f37827" translate="yes" xml:space="preserve">
          <source>It is possible to use SVG as valid templates in Angular. All of the template syntax below is applicable to both SVG and HTML. Learn more in the SVG &lt;a href=&quot;https://www.w3.org/TR/SVG11/&quot;&gt;1.1&lt;/a&gt; and &lt;a href=&quot;https://www.w3.org/TR/SVG2/&quot;&gt;2.0&lt;/a&gt; specifications.</source>
          <target state="translated">Можно использовать SVG в качестве допустимых шаблонов в Angular. Весь синтаксис шаблона ниже применим как к SVG, так и к HTML. Узнайте больше в спецификациях SVG &lt;a href=&quot;https://www.w3.org/TR/SVG11/&quot;&gt;1.1&lt;/a&gt; и &lt;a href=&quot;https://www.w3.org/TR/SVG2/&quot;&gt;2.0&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="84f6e26f10188c89b058327e2a32272c027943f0" translate="yes" xml:space="preserve">
          <source>It is recommended that you avoid depending on CommonJS modules in your Angular applications. Depending on CommonJS modules can prevent bundlers and minifiers from optimizing your application, which results in larger bundle sizes. Instead, it is recommended that you use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;ECMAScript modules&lt;/a&gt; in your entire application. For more information, see &lt;a href=&quot;https://web.dev/commonjs-larger-bundles/&quot;&gt;How CommonJS is making your bundles larger&lt;/a&gt;.</source>
          <target state="translated">Рекомендуется избегать зависимости от модулей CommonJS в ваших приложениях Angular. В зависимости от модулей CommonJS может мешать сборщикам и минификаторам оптимизировать ваше приложение, что приводит к увеличению размеров пакетов. Вместо этого рекомендуется использовать &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;модули ECMAScript&lt;/a&gt; во всем приложении. Для получения дополнительной информации см. &lt;a href=&quot;https://web.dev/commonjs-larger-bundles/&quot;&gt;Как CommonJS увеличивает ваши пакеты&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1031dd12dc6c396336a813b3dadae7f6f7e75ce9" translate="yes" xml:space="preserve">
          <source>It is recommended that you put the more specific asset groups higher in the list. For example, an asset group that matches &lt;code&gt;/foo.js&lt;/code&gt; should appear before one that matches &lt;code&gt;*.js&lt;/code&gt;.</source>
          <target state="translated">Рекомендуется размещать более конкретные группы активов выше в списке. Например, группа ресурсов, соответствующая &lt;code&gt;/foo.js&lt;/code&gt; , должна отображаться перед группой , соответствующей &lt;code&gt;*.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6801d16c249805651ee46dca90c0e3319d7bdd03" translate="yes" xml:space="preserve">
          <source>It is recommended that you put the more specific data groups higher in the list. For example, a data group that matches &lt;code&gt;/api/foo.json&lt;/code&gt; should appear before one that matches &lt;code&gt;/api/*.json&lt;/code&gt;.</source>
          <target state="translated">Рекомендуется размещать более конкретные группы данных выше в списке. Например, группа данных, соответствующая &lt;code&gt;/api/foo.json&lt;/code&gt; , должна отображаться перед группой , соответствующей &lt;code&gt;/api/*.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="423c72666d4582438903aed1e354553173f2f747" translate="yes" xml:space="preserve">
          <source>It is recommended that you set an element property with a &lt;a href=&quot;property-binding&quot;&gt;property binding&lt;/a&gt; whenever possible. However, sometimes you don't have an element property to bind. In those situations, you can use attribute binding.</source>
          <target state="translated">По возможности рекомендуется устанавливать свойство элемента с &lt;a href=&quot;property-binding&quot;&gt;привязкой свойства&lt;/a&gt; . Однако иногда у вас нет свойства элемента для привязки. В таких ситуациях вы можете использовать привязку атрибутов.</target>
        </trans-unit>
        <trans-unit id="76d730517d126f32e97587e9cbc5e3cf785c0aea" translate="yes" xml:space="preserve">
          <source>It is the &lt;em&gt;root&lt;/em&gt; of the crisis center area, just as &lt;code&gt;AppComponent&lt;/code&gt; is the root of the entire application.</source>
          <target state="translated">Это &lt;em&gt;корень&lt;/em&gt; области кризисного центра, точно так же, как &lt;code&gt;AppComponent&lt;/code&gt; является корнем всего приложения.</target>
        </trans-unit>
        <trans-unit id="f0ce6c1a9e19d02a76258f37c5efc06fb5db9120" translate="yes" xml:space="preserve">
          <source>It is the root of the crisis center area, just as &lt;code&gt;AppComponent&lt;/code&gt; is the root of the entire application.</source>
          <target state="translated">Это корень зоны кризисного центра, так же как &lt;code&gt;AppComponent&lt;/code&gt; - корень всего приложения.</target>
        </trans-unit>
        <trans-unit id="c5288fb8c9de08ed91bcc1bec73e759d6ce69568" translate="yes" xml:space="preserve">
          <source>It is time to take off the training wheels and let the application begin its new life as a pure, shiny Angular app. The remaining tasks all have to do with removing code - which of course is every programmer's favorite task!</source>
          <target state="translated">Пришло время снять тренировочные колеса и позволить приложению начать свою новую жизнь в виде чистого,блестящего Углового приложения.Остальные задачи связаны с удалением кода-это,конечно,любимая задача каждого программиста!</target>
        </trans-unit>
        <trans-unit id="ccb342aa8e1714c7437fd8ad1e8831908215d07c" translate="yes" xml:space="preserve">
          <source>It is valid for &lt;code&gt;.metadata.json&lt;/code&gt; files to contain errors. The template compiler reports these errors if the metadata is used to determine the contents of an annotation. The metadata collector cannot predict the symbols that are designed for use in an annotation, so it preemptively includes error nodes in the metadata for the exported symbols. The template compiler can then use the error nodes to report an error if these symbols are used.</source>
          <target state="translated">Допустимо, чтобы файлы &lt;code&gt;.metadata.json&lt;/code&gt; содержали ошибки. Компилятор шаблона сообщает об этих ошибках, если метаданные используются для определения содержания аннотации. Сборщик метаданных не может предсказать символы, предназначенные для использования в аннотации, поэтому он предпочтительно включает узлы ошибок в метаданные для экспортируемых символов. Компилятор шаблона может затем использовать узлы ошибок, чтобы сообщить об ошибке, если используются эти символы.</target>
        </trans-unit>
        <trans-unit id="3d7207af03b5af04389d3df1257a354179fd4eef" translate="yes" xml:space="preserve">
          <source>It looks about the same as any other component you've seen in this guide. There are two noteworthy differences.</source>
          <target state="translated">Он выглядит примерно так же,как и любой другой компонент,который вы видели в этом руководстве.Есть два примечательных отличия.</target>
        </trans-unit>
        <trans-unit id="6e8998f7abfdb1faca5ef4124813aa06fd13c960" translate="yes" xml:space="preserve">
          <source>It looks similar to any other component in this guide, but there are two key differences.</source>
          <target state="translated">Он выглядит похожим на любой другой компонент в этом руководстве,но есть два ключевых отличия.</target>
        </trans-unit>
        <trans-unit id="ce0f95ba15adcc1262d25210b5a0ac97badbdb0a" translate="yes" xml:space="preserve">
          <source>It may be advantageous to deviate from the &lt;em&gt;one-thing-per-file&lt;/em&gt; rule when you have a set of small, closely-related features that are better discovered and understood in a single file than as multiple files. Be wary of this loophole.</source>
          <target state="translated">Может быть выгодно отклониться от правила &amp;laquo; &lt;em&gt;один предмет на файл&amp;raquo;,&lt;/em&gt; когда у вас есть набор небольших тесно связанных функций, которые лучше обнаруживаются и понимаются в одном файле, чем в нескольких файлах. Остерегайтесь этой лазейки.</target>
        </trans-unit>
        <trans-unit id="13dbe81d25cc860ec205d64166f5c721b4b86799" translate="yes" xml:space="preserve">
          <source>It may be difficult to imagine how this directive actually works. In this section, you'll turn &lt;code&gt;AppComponent&lt;/code&gt; into a harness that lets you pick the highlight color with a radio button and bind your color choice to the directive.</source>
          <target state="translated">Может быть трудно представить, как на самом деле работает эта директива. В этом разделе вы превратите &lt;code&gt;AppComponent&lt;/code&gt; в жгут, который позволяет вам выбирать цвет подсветки с помощью переключателя и привязывать ваш выбор цвета к директиве.</target>
        </trans-unit>
        <trans-unit id="77eed6237424237999f7c2a34a9fb9ff0e0091ce" translate="yes" xml:space="preserve">
          <source>It may be more economical to create the forms dynamically, based on metadata that describes the business object model.</source>
          <target state="translated">Более экономичным может быть создание форм динамически,на основе метаданных,описывающих модель бизнес-объекта.</target>
        </trans-unit>
        <trans-unit id="bacb242ddb0949af950399df1070a8a6e831b848" translate="yes" xml:space="preserve">
          <source>It might not look like the class has properties, but it does. The declaration of the constructor parameters takes advantage of a TypeScript shortcut.</source>
          <target state="translated">Это может выглядеть не так,как будто у класса есть свойства,но это так.Объявление параметров конструктора использует ярлык TypeScript.</target>
        </trans-unit>
        <trans-unit id="e089e64834f141326fc0828463df856289d092cb" translate="yes" xml:space="preserve">
          <source>It must be known ahead of time so that IDEs can parse it without knowing the underlying semantics of the directive or what directives are present.</source>
          <target state="translated">Она должна быть известна заранее,чтобы IDE могли разобрать ее,не зная семантики,лежащей в основе директивы,или того,какие директивы присутствуют.</target>
        </trans-unit>
        <trans-unit id="cd59871da798733ed7ae9afa636c133a8f98ca66" translate="yes" xml:space="preserve">
          <source>It must translate to key-value attributes in the DOM.</source>
          <target state="translated">Это должно быть переведено в атрибуты ключа-значения в DOM.</target>
        </trans-unit>
        <trans-unit id="b4b70d7ad2d5ef809560d50e542640d494da5baf" translate="yes" xml:space="preserve">
          <source>It navigates imperatively with the &lt;code&gt;&lt;a href=&quot;../api/router/router#navigate&quot;&gt;Router.navigate()&lt;/a&gt;&lt;/code&gt; method, passing in a &lt;a href=&quot;router#link-parameters-array&quot;&gt;link parameters array&lt;/a&gt;.</source>
          <target state="translated">Он обязательно перемещается с помощью &lt;code&gt;&lt;a href=&quot;../api/router/router#navigate&quot;&gt;Router.navigate()&lt;/a&gt;&lt;/code&gt; , передавая &lt;a href=&quot;router#link-parameters-array&quot;&gt;массив параметров ссылки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="90f73e390a5723e407fe6308cf983a850544d1b6" translate="yes" xml:space="preserve">
          <source>It presents a list of questions, each bound to a &lt;code&gt;&amp;lt;app-question&amp;gt;&lt;/code&gt; component element. The &lt;code&gt;&amp;lt;app-question&amp;gt;&lt;/code&gt; tag matches the &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt;, the component responsible for rendering the details of each &lt;em&gt;individual&lt;/em&gt; question based on values in the data-bound question object.</source>
          <target state="translated">Он представляет список вопросов, каждый из которых связан с компонентным элементом &lt;code&gt;&amp;lt;app-question&amp;gt;&lt;/code&gt; . &lt;code&gt;&amp;lt;app-question&amp;gt;&lt;/code&gt; тег соответствует &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt; , компонент , отвечающий за визуализацию детали каждого &lt;em&gt;отдельного&lt;/em&gt; вопроса на основе значений в объекте вопроса связанного с данными.</target>
        </trans-unit>
        <trans-unit id="82a5d3b75fdd687a86c692b5142357640cb12862" translate="yes" xml:space="preserve">
          <source>It provides some of the shared behavior that all controls and groups of controls have, like running validators, calculating status, and resetting state. It also defines the properties that are shared between all sub-classes, like &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;valid&lt;/code&gt;, and &lt;code&gt;dirty&lt;/code&gt;. It shouldn't be instantiated directly.</source>
          <target state="translated">Он предоставляет некоторые общие свойства, которые имеют все элементы управления и группы элементов управления, такие как запуск валидаторов, вычисление состояния и сброс состояния. Он также определяет свойства, которые совместно используются всеми подклассами, такие как &lt;code&gt;value&lt;/code&gt; , &lt;code&gt;valid&lt;/code&gt; и &lt;code&gt;dirty&lt;/code&gt; . Это не должно быть реализовано напрямую.</target>
        </trans-unit>
        <trans-unit id="d171e074941cff4fb7a54c6be8c58fcc87175574" translate="yes" xml:space="preserve">
          <source>It re-exports the &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Он реэкспортирует &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="293d2ed2212503b7e45e9caa6fdd2a81620b6623" translate="yes" xml:space="preserve">
          <source>It renders properly.</source>
          <target state="translated">Он делает правильно.</target>
        </trans-unit>
        <trans-unit id="0ae169fa3e47383715acb011e05d54b05113d563" translate="yes" xml:space="preserve">
          <source>It requires less boilerplate code.</source>
          <target state="translated">Для этого требуется меньше кода шаблона.</target>
        </trans-unit>
        <trans-unit id="bef3630aa143887d2a90b2232f4fa65407f77fcf" translate="yes" xml:space="preserve">
          <source>It returns an &lt;code&gt;Observable&lt;/code&gt; that &lt;em&gt;resolves&lt;/em&gt; when the user eventually decides what to do: either to discard changes and navigate away (&lt;code&gt;true&lt;/code&gt;) or to preserve the pending changes and stay in the crisis editor (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">Он возвращает &lt;code&gt;Observable&lt;/code&gt; , который &lt;em&gt;разрешается,&lt;/em&gt; когда пользователь в конечном итоге решает, что делать: либо отменить изменения и отойти ( &lt;code&gt;true&lt;/code&gt; ), либо сохранить ожидающие изменения и остаться в редакторе кризисов ( &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="86d9d6efd22f39114ebd226c95a029f0c8dc9071" translate="yes" xml:space="preserve">
          <source>It returns an &lt;code&gt;Observable&lt;/code&gt; that resolves when the user eventually decides what to do: either to discard changes and navigate away (&lt;code&gt;true&lt;/code&gt;) or to preserve the pending changes and stay in the crisis editor (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">Он возвращает &lt;code&gt;Observable&lt;/code&gt; , который разрешается, когда пользователь в конечном итоге решает, что делать: либо отменить изменения и уйти ( &lt;code&gt;true&lt;/code&gt; ), либо сохранить ожидающие изменения и остаться в редакторе кризисов ( &lt;code&gt;false&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="f17b788f117ba6e453d05b278cd784e7b06521e5" translate="yes" xml:space="preserve">
          <source>It returns service responses in their original request order, even if the server returns them out of order.</source>
          <target state="translated">Он возвращает ответы сервиса в их первоначальном порядке запроса,даже если сервер возвращает их не в порядке.</target>
        </trans-unit>
        <trans-unit id="e8347f69be7f37a1644f92b33a93b2dee7c617e2" translate="yes" xml:space="preserve">
          <source>It should look something like this, depending on where you run it:</source>
          <target state="translated">Оно должно выглядеть примерно так,в зависимости от того,где ты им управляешь:</target>
        </trans-unit>
        <trans-unit id="fde1c30a4ed9c7ecc8b3522111845cd4f468613d" translate="yes" xml:space="preserve">
          <source>It takes a bit more work to get the child view into the parent component &lt;em&gt;class&lt;/em&gt;.</source>
          <target state="translated">Требуется немного больше работы, чтобы получить дочернее представление в &lt;em&gt;класс&lt;/em&gt; родительского компонента .</target>
        </trans-unit>
        <trans-unit id="2f20885a1acc0aea1959ff23c8f48814d62d5065" translate="yes" xml:space="preserve">
          <source>It takes a function argument that returns an &lt;code&gt;Observable&lt;/code&gt;. &lt;code&gt;PackageSearchService.search&lt;/code&gt; returns an &lt;code&gt;Observable&lt;/code&gt;, as other data service methods do.</source>
          <target state="translated">Он принимает аргумент функции, который возвращает &lt;code&gt;Observable&lt;/code&gt; . &lt;code&gt;PackageSearchService.search&lt;/code&gt; возвращает &lt;code&gt;Observable&lt;/code&gt; , как это делают другие методы обслуживания данных.</target>
        </trans-unit>
        <trans-unit id="674f64671b4a8d0cb23d0caf55d87a3f7dde911d" translate="yes" xml:space="preserve">
          <source>It takes two arguments: the component type to override (&lt;code&gt;HeroDetailComponent&lt;/code&gt;) and an override metadata object. The &lt;a href=&quot;testing#metadata-override-object&quot;&gt;override metadata object&lt;/a&gt; is a generic defined as follows:</source>
          <target state="translated">Он принимает два аргумента: тип компонента для переопределения ( &lt;code&gt;HeroDetailComponent&lt;/code&gt; ) и объект метаданных переопределения. Объект &lt;a href=&quot;testing#metadata-override-object&quot;&gt;метаданных переопределения&lt;/a&gt; является общим, определенным следующим образом:</target>
        </trans-unit>
        <trans-unit id="fe763eb54958bc5bce1ca54318ae85f6b15cea14" translate="yes" xml:space="preserve">
          <source>It takes two arguments: the component type to override (&lt;code&gt;HeroDetailComponent&lt;/code&gt;) and an override metadata object. The &lt;a href=&quot;testing-utility-apis#metadata-override-object&quot;&gt;override metadata object&lt;/a&gt; is a generic defined as follows:</source>
          <target state="translated">Он принимает два аргумента: тип компонента для переопределения ( &lt;code&gt;HeroDetailComponent&lt;/code&gt; ) и переопределяемый объект метаданных. Объект &lt;a href=&quot;testing-utility-apis#metadata-override-object&quot;&gt;метаданных переопределения&lt;/a&gt; является универсальным, определяемым следующим образом:</target>
        </trans-unit>
        <trans-unit id="6b7ade15f2e40422ade0a9b4e8bd3a6ec4688da6" translate="yes" xml:space="preserve">
          <source>It takes two more parameters:</source>
          <target state="translated">Нужно еще два параметра:</target>
        </trans-unit>
        <trans-unit id="ca9ca3b7d869e7250ea3e82c4497b55685884167" translate="yes" xml:space="preserve">
          <source>It tells the injector to start its search for a &lt;code&gt;Parent&lt;/code&gt; dependency in a component &lt;em&gt;above&lt;/em&gt; itself, which &lt;em&gt;is&lt;/em&gt; what parent means.</source>
          <target state="translated">Он говорит форсунку , чтобы начать свой поиск для &lt;code&gt;Parent&lt;/code&gt; зависимости в компоненте &lt;em&gt;над&lt;/em&gt; собой, что &lt;em&gt;является&lt;/em&gt; каким родитель средством.</target>
        </trans-unit>
        <trans-unit id="87287c749aedf291db51189f1922d8e0ed42f2e2" translate="yes" xml:space="preserve">
          <source>It used to display the hero details on its own, before you cut that portion of the template. Now it will delegate to the &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">Он раньше отображал детали героя самостоятельно, прежде чем вырезать эту часть шаблона. Теперь он будет делегирован &lt;code&gt;HeroDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="26603cbdf502504b4bafbb3d1bd7c3f1f9536e25" translate="yes" xml:space="preserve">
          <source>It will be either an instance of &lt;code&gt;TestBedViewEngine&lt;/code&gt; or &lt;code&gt;TestBedRender3&lt;/code&gt;.</source>
          <target state="translated">Это будет либо экземпляр &lt;code&gt;TestBedViewEngine&lt;/code&gt; , либо &lt;code&gt;TestBedRender3&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b2aee283c41ff9b11753db47219f0539ccacca7d" translate="yes" xml:space="preserve">
          <source>It worked because the Angular CLI declared &lt;code&gt;HeroesComponent&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt; when it generated that component.</source>
          <target state="translated">Это сработало, потому что Angular CLI объявил &lt;code&gt;HeroesComponent&lt;/code&gt; в &lt;code&gt;AppModule&lt;/code&gt; при создании этого компонента.</target>
        </trans-unit>
        <trans-unit id="a18d731dddd044fda8c0206e03d977e14385f507" translate="yes" xml:space="preserve">
          <source>It works perfectly with long property paths such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;?.b?.c?.d&lt;/code&gt;.</source>
          <target state="translated">Он отлично работает с длинными путями собственности , таких как &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt;?.b?.c?.d&lt;/code&gt; .&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b61828efce1a32f9f0c8ea1d12bb762c91b945f" translate="yes" xml:space="preserve">
          <source>It works perfectly with long property paths such as &lt;code&gt;a?.b?.c?.d&lt;/code&gt;.</source>
          <target state="translated">Он отлично работает с длинными путями свойств, такими как &lt;code&gt;a?.b?.c?.d&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1bf143650c4c43d18c8241673d0204f40c18a4a" translate="yes" xml:space="preserve">
          <source>It would be ideal to change the type of &lt;code&gt;value&lt;/code&gt; here, from &lt;code&gt;boolean&lt;/code&gt; to &lt;code&gt;boolean|''&lt;/code&gt;, to match the set of values which are actually accepted by the setter. TypeScript requires that both the getter and setter have the same type, so if the getter should return a &lt;code&gt;boolean&lt;/code&gt; then the setter is stuck with the narrower type.</source>
          <target state="translated">Было бы идеально изменить здесь тип &lt;code&gt;value&lt;/code&gt; с &lt;code&gt;boolean&lt;/code&gt; на &lt;code&gt;boolean|''&lt;/code&gt; , чтобы соответствовать набору значений, которые фактически принимаются установщиком. TypeScript требует, чтобы и геттер, и сеттер имели один и тот же тип, поэтому, если геттер должен возвращать &lt;code&gt;boolean&lt;/code&gt; то сеттер застревает на более узком типе.</target>
        </trans-unit>
        <trans-unit id="af0e2debe677c9c678729b2bc1cbfd09e3f7a0d9" translate="yes" xml:space="preserve">
          <source>It would be nice to have a button on the &lt;code&gt;HeroDetail&lt;/code&gt; view that can do that.</source>
          <target state="translated">Было бы неплохо иметь кнопку в представлении &lt;code&gt;HeroDetail&lt;/code&gt; , которая может сделать это.</target>
        </trans-unit>
        <trans-unit id="0051be8012a415185793f036c9c8e5128fc7e68d" translate="yes" xml:space="preserve">
          <source>It's a &lt;em&gt;one way&lt;/em&gt; data binding from the &lt;code&gt;selectedHero&lt;/code&gt; property of the &lt;code&gt;HeroesComponent&lt;/code&gt; to the &lt;code&gt;hero&lt;/code&gt; property of the target element, which maps to the &lt;code&gt;hero&lt;/code&gt; property of the &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">Это &lt;em&gt;односторонняя&lt;/em&gt; привязка данных из свойства &lt;code&gt;selectedHero&lt;/code&gt; объекта &lt;code&gt;HeroesComponent&lt;/code&gt; к свойству &lt;code&gt;hero&lt;/code&gt; целевого элемента, которое отображается на свойство &lt;code&gt;hero&lt;/code&gt; объекта &lt;code&gt;HeroDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60b2581c46072f14693ad4b2115581cbacdca79b" translate="yes" xml:space="preserve">
          <source>It's a bit tighter and smaller, with fewer import statements (not shown).</source>
          <target state="translated">Немного туже и меньше,с меньшим количеством импортных утверждений (не показан).</target>
        </trans-unit>
        <trans-unit id="69a8bddb93aeeda0022b562464f122f8b32da08f" translate="yes" xml:space="preserve">
          <source>It's a different story if you improperly import &lt;code&gt;GreetingModule&lt;/code&gt; into a lazy loaded module such as &lt;code&gt;CustomersModule&lt;/code&gt;.</source>
          <target state="translated">Это другая история, если вы неправильно импортировали &lt;code&gt;GreetingModule&lt;/code&gt; в лениво загруженный модуль, такой как &lt;code&gt;CustomersModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09434c75600174446486b9af36cce437fffe1ce2" translate="yes" xml:space="preserve">
          <source>It's a good idea to put unit test spec files in the same folder as the application source code files that they test:</source>
          <target state="translated">Хорошая идея-поместить файлы спецификации юнит-теста в ту же папку,что и файлы исходного кода приложения,которое они тестируют:</target>
        </trans-unit>
        <trans-unit id="9bcfe973543c84bb66b75ce9b66043cdfd62ffa5" translate="yes" xml:space="preserve">
          <source>It's a little more involved if you are in an interpolation. If you have an interpolation of &lt;code&gt;{{data.---}}&lt;/code&gt; inside a &lt;code&gt;div&lt;/code&gt; and need the completion list after &lt;code&gt;data.---&lt;/code&gt;, the compiler can't use the HTML AST to find the answer. The HTML AST can only tell the compiler that there is some text with the characters &quot;&lt;code&gt;{{data.---}}&lt;/code&gt;&quot;. That's when the template parser produces an expression AST, which resides within the template AST. The Angular Language Services then looks at &lt;code&gt;data.---&lt;/code&gt; within its context, asks the TypeScript Language Service what the members of &lt;code&gt;data&lt;/code&gt; are, and returns the list of possibilities.</source>
          <target state="translated">Это немного сложнее, если вы находитесь в интерполяции. Если у вас есть интерполяция &lt;code&gt;{{data.---}}&lt;/code&gt; внутри &lt;code&gt;div&lt;/code&gt; и вам нужен список завершения после &lt;code&gt;data.---&lt;/code&gt; , компилятор не может использовать HTML AST, чтобы найти ответ. HTML AST может только сказать компилятору, что есть некоторый текст с символами &quot; &lt;code&gt;{{data.---}}&lt;/code&gt; &quot;. Именно тогда анализатор шаблонов создает выражение AST, которое находится в шаблоне AST. Затем Angular Language Services просматривает &lt;code&gt;data.---&lt;/code&gt; своем контексте запрашивает Language Type Service, каковы члены &lt;code&gt;data&lt;/code&gt; , и возвращает список возможностей.</target>
        </trans-unit>
        <trans-unit id="fcb0348ea77c1a0b6ee18a979c38ff18f522a08c" translate="yes" xml:space="preserve">
          <source>It's a simpler and more efficient alternative to removing all elements one by one:</source>
          <target state="translated">Это более простая и эффективная альтернатива удалению всех элементов один за другим:</target>
        </trans-unit>
        <trans-unit id="6a71d528e9fd07b4df2b1b862b68940c3e7e83b3" translate="yes" xml:space="preserve">
          <source>It's also possible to specify that a service should be provided in a particular &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;. For example, if you don't want &lt;code&gt;UserService&lt;/code&gt; to be available to applications unless they import a &lt;code&gt;UserModule&lt;/code&gt; you've created, you can specify that the service should be provided in the module:</source>
          <target state="translated">Также можно указать, что служба должна предоставляться в определенном &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; @ NgModule . Например, если вы не хотите, чтобы &lt;code&gt;UserService&lt;/code&gt; был доступен для приложений, если они не импортируют &lt;code&gt;UserModule&lt;/code&gt; вами UserModule , вы можете указать, что служба должна предоставляться в модуле:</target>
        </trans-unit>
        <trans-unit id="9552d457536c1b64a297fca25a1283d35d3a935d" translate="yes" xml:space="preserve">
          <source>It's also possible to use &lt;code&gt;&lt;a href=&quot;../core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; with Observables. The example below binds the &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;time&lt;/a&gt;&lt;/code&gt; Observable to the view. The Observable continuously updates the view with the current time.</source>
          <target state="translated">Также возможно использовать &lt;code&gt;&lt;a href=&quot;../core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; с Observables. Ниже пример связывает &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;time&lt;/a&gt;&lt;/code&gt; Наблюдаемое с точки зрения. The Observable постоянно обновляет представление с текущим временем.</target>
        </trans-unit>
        <trans-unit id="573c20ee769df0dbbf6c5bedf2b66b0de69acbe1" translate="yes" xml:space="preserve">
          <source>It's also possible to use &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; with Observables. The example below binds the &lt;code&gt;time&lt;/code&gt; Observable to the view. The Observable continuously updates the view with the current time.</source>
          <target state="translated">Также можно использовать &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; с Observables. В приведенном ниже примере привязка &lt;code&gt;time&lt;/code&gt; Observable к представлению. Observable постоянно обновляет представление с текущим временем.</target>
        </trans-unit>
        <trans-unit id="321bd8fb08a8edefb40590d92c8b9e018f5c3cce" translate="yes" xml:space="preserve">
          <source>It's also recommended to export the &lt;code&gt;heroesServiceFactory&lt;/code&gt; function so that Ahead-of-Time compilation can pick it up.</source>
          <target state="translated">Также рекомендуется экспортировать функцию &lt;code&gt;heroesServiceFactory&lt;/code&gt; , чтобы компиляция Ahead-of-Time могла ее забрать.</target>
        </trans-unit>
        <trans-unit id="f699da3b1f9e220fa97ad28cd922a1330c2a3881" translate="yes" xml:space="preserve">
          <source>It's an anemic model with few requirements and no behavior. Perfect for the demo.</source>
          <target state="translated">Это анемическая модель с небольшим количеством требований и отсутствием поведения.Идеально подходит для демонстрации.</target>
        </trans-unit>
        <trans-unit id="f2f02356a25344321ea932ed9aa84284ad0b5391" translate="yes" xml:space="preserve">
          <source>It's better to pause and let the user decide what to do. If the user cancels, you'll stay put and allow more changes. If the user approves, the app can save.</source>
          <target state="translated">Лучше сделать паузу и позволить пользователю решить,что делать.Если пользователь отменит,вы останетесь на месте и позволите внести больше изменений.Если пользователь одобрит,приложение может сохранить.</target>
        </trans-unit>
        <trans-unit id="9f78888bb37d208c4ff42770338b7ad54c0ab57e" translate="yes" xml:space="preserve">
          <source>It's better to use the &lt;code&gt;&lt;a href=&quot;../router/router&quot;&gt;Router&lt;/a&gt;#navigate&lt;/code&gt; service to trigger route changes. Use &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; only if you need to interact with or create normalized URLs outside of routing.</source>
          <target state="translated">Лучше использовать сервис &lt;code&gt;&lt;a href=&quot;../router/router&quot;&gt;Router&lt;/a&gt;#navigate&lt;/code&gt; для запуска изменений маршрута. Используйте &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; только в том случае, если вам нужно взаимодействовать или создавать нормализованные URL-адреса вне маршрутизации.</target>
        </trans-unit>
        <trans-unit id="f8b602ffbddc224ba7425e27dba721fa66a2d522" translate="yes" xml:space="preserve">
          <source>It's called an &lt;em&gt;input&lt;/em&gt; property because data flows from the binding expression &lt;em&gt;into&lt;/em&gt; the directive. Without that input metadata, Angular rejects the binding; see &lt;a href=&quot;attribute-directives#why-input&quot;&gt;below&lt;/a&gt; for more about that.</source>
          <target state="translated">Он называется свойством &lt;em&gt;ввода,&lt;/em&gt; поскольку данные передаются из выражения привязки &lt;em&gt;в&lt;/em&gt; директиву. Без этих входных метаданных Angular отклоняет привязку; см. &lt;a href=&quot;attribute-directives#why-input&quot;&gt;ниже&lt;/a&gt; для получения дополнительной информации об этом.</target>
        </trans-unit>
        <trans-unit id="a1c5b2c14f47a4acb6a4e31a66880f00d640c203" translate="yes" xml:space="preserve">
          <source>It's certainly a good idea to give the user some kind of feedback when data access fails. But displaying the raw error object returned by &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; is far from the best way to do it.</source>
          <target state="translated">Конечно, это хорошая идея, чтобы дать пользователю некоторую обратную связь, когда доступ к данным не удается. Но отображение необработанного объекта ошибки, возвращаемого &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , далеко не лучший способ сделать это.</target>
        </trans-unit>
        <trans-unit id="f716eb9a6b02b45e7ef6afb1e41d83af97f96b96" translate="yes" xml:space="preserve">
          <source>It's difficult to identify the &lt;em&gt;selected hero&lt;/em&gt; in the list when all &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; elements look alike.</source>
          <target state="translated">Трудно определить &lt;em&gt;выбранного героя&lt;/em&gt; в списке, когда все элементы &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; выглядят одинаково.</target>
        </trans-unit>
        <trans-unit id="f18821981bfd33d573d82ec783fb8b3c0ddffd55" translate="yes" xml:space="preserve">
          <source>It's easier to get to the input box with the template reference variable than to go through the &lt;code&gt;$event&lt;/code&gt; object. Here's a rewrite of the previous &lt;code&gt;keyup&lt;/code&gt; example that uses a template reference variable to get the user's input.</source>
          <target state="translated">Попасть в поле ввода с помощью переменной ссылки на шаблон проще, чем пройти через объект &lt;code&gt;$event&lt;/code&gt; . Вот переписать предыдущий пример &lt;code&gt;keyup&lt;/code&gt; , который использует переменную ссылки шаблона для получения ввода пользователя.</target>
        </trans-unit>
        <trans-unit id="13c09e93ba14e7c6aec0f030ed4749ec45cde327" translate="yes" xml:space="preserve">
          <source>It's faster to run without the debugger by pressing &lt;code&gt;Ctrl-F5&lt;/code&gt;.</source>
          <target state="translated">Быстрее работать без отладчика, нажав &lt;code&gt;Ctrl-F5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0a37d50ae18f2cda48cc6b441cf45b1f4e85db3" translate="yes" xml:space="preserve">
          <source>It's harder to target an element that is entering a view because it isn't in the DOM yet. So, use the aliases &lt;code&gt;:enter&lt;/code&gt; and &lt;code&gt;:leave&lt;/code&gt; to target HTML elements that are inserted or removed from a view.</source>
          <target state="translated">Сложнее нацелить элемент, который входит в представление, потому что его еще нет в DOM. Поэтому используйте псевдонимы &lt;code&gt;:enter&lt;/code&gt; и &lt;code&gt;:leave&lt;/code&gt; для нацеливания на элементы HTML, которые вставляются или удаляются из представления.</target>
        </trans-unit>
        <trans-unit id="9ce2298b180c8607f70e58c08e6ccdb870ec4f0c" translate="yes" xml:space="preserve">
          <source>It's identical to &lt;em&gt;Carol&lt;/em&gt;'s constructor except for the additional &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Он идентичен конструктору &lt;em&gt;Кэрол&lt;/em&gt; за исключением дополнительного декоратора &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eae527c8fde7a93b29c9ba68e0c762ac9e719b0c" translate="yes" xml:space="preserve">
          <source>It's important to note that this guarantee is &lt;strong&gt;stronger&lt;/strong&gt; than that provided by the normal web deployment model. Without a service worker, there is no guarantee that code lazily loaded later in a running app is from the same version as the initial code for the app.</source>
          <target state="translated">Важно отметить, что эта гарантия &lt;strong&gt;сильнее&lt;/strong&gt; той, которая обеспечивается обычной моделью веб-развертывания. Без работника службы нет никакой гарантии, что код, загруженный позже в запущенном приложении, имеет ту же версию, что и исходный код приложения.</target>
        </trans-unit>
        <trans-unit id="9db5b0bbcab65b4cd73852c1ab0915c241d74fda" translate="yes" xml:space="preserve">
          <source>It's important to note that you cannot register this worker directly, as old clients with cached state may not see a new &lt;code&gt;index.html&lt;/code&gt; which installs the different worker script. Instead, you must serve the contents of &lt;code&gt;safety-worker.js&lt;/code&gt; at the URL of the Service Worker script you are trying to unregister, and must continue to do so until you are certain all users have successfully unregistered the old worker. For most sites, this means that you should serve the safety worker at the old Service Worker URL forever.</source>
          <target state="translated">Важно отметить, что вы не можете зарегистрировать этого работника напрямую, так как старые клиенты с кэшированным состоянием могут не увидеть новый &lt;code&gt;index.html&lt;/code&gt; , который устанавливает другой рабочий скрипт. Вместо этого вы должны предоставить содержимое &lt;code&gt;safety-worker.js&lt;/code&gt; по URL-адресу сценария Service Worker, который вы пытаетесь отменить, и должны продолжать это делать, пока не убедитесь, что все пользователи успешно отменили регистрацию старого работника. Для большинства сайтов это означает, что вы должны обслуживать работника службы безопасности по старому URL Service Worker навсегда.</target>
        </trans-unit>
        <trans-unit id="e74e1f2339eafee8c333b7f5cf205b600c69bb1c" translate="yes" xml:space="preserve">
          <source>It's nice to tidy up and you'll be grateful to yourself later. Here's the class after pruning away the dead code.</source>
          <target state="translated">Приятно прибраться,и ты будешь благодарен себе позже.Вот класс после отсечения мертвого кода.</target>
        </trans-unit>
        <trans-unit id="34494c9030345f1487599d11e1d17558d38fe1c0" translate="yes" xml:space="preserve">
          <source>It's no longer possible to overwrite lifecycle hooks with mocks on directive instances for testing (instead, modify the lifecycle hook on the directive type itself).</source>
          <target state="translated">Перезаписывать крючки жизненного цикла с насмешками на экземплярах директив для тестирования больше нельзя (вместо этого модифицируйте крючок жизненного цикла на самом типе директивы).</target>
        </trans-unit>
        <trans-unit id="a88c6800d206ae0cb17eaddfbc40c121f4954f34" translate="yes" xml:space="preserve">
          <source>It's not as simple as intercepting a request to the root address &lt;code&gt;/&lt;/code&gt;. The browser could ask for one of the application routes such as &lt;code&gt;/dashboard&lt;/code&gt;, &lt;code&gt;/heroes&lt;/code&gt;, or &lt;code&gt;/detail:12&lt;/code&gt;. In fact, if the app were only rendered by the server, &lt;em&gt;every&lt;/em&gt; app link clicked would arrive at the server as a navigation URL intended for the router.</source>
          <target state="translated">Это не так просто, как перехватить запрос на корневой адрес &lt;code&gt;/&lt;/code&gt; . Браузер может запросить один из маршрутов приложения, например &lt;code&gt;/dashboard&lt;/code&gt; , &lt;code&gt;/heroes&lt;/code&gt; или &lt;code&gt;/detail:12&lt;/code&gt; . Фактически, если приложение отображалось только сервером, &lt;em&gt;каждая&lt;/em&gt; нажатая ссылка на приложение попадет на сервер в виде URL-адреса навигации, предназначенного для маршрутизатора.</target>
        </trans-unit>
        <trans-unit id="4480eae9954dacdb424800801156a46c1ca47a25" translate="yes" xml:space="preserve">
          <source>It's not much fun updating the template to test the custom pipe. Upgrade the example to a &quot;Power Boost Calculator&quot; that combines your pipe and two-way data binding with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Обновление шаблона для тестирования пользовательского канала не очень интересно. Обновите пример до &amp;laquo;Power Boost Calculator&amp;raquo;, который сочетает ваш канал и двустороннее связывание данных с &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="36d858deb7acc1b44aba6f193eae181e7610542d" translate="yes" xml:space="preserve">
          <source>It's not possible to stub the component's &lt;code&gt;HeroDetailService&lt;/code&gt; in the &lt;code&gt;providers&lt;/code&gt; of the &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt;. Those are providers for the &lt;em&gt;testing module&lt;/em&gt;, not the component. They prepare the dependency injector at the &lt;em&gt;fixture level&lt;/em&gt;.</source>
          <target state="translated">Это не возможно , незавершенная компонента &lt;code&gt;HeroDetailService&lt;/code&gt; в &lt;code&gt;providers&lt;/code&gt; в &lt;code&gt;TestBed.configureTestingModule&lt;/code&gt; . Это поставщики для &lt;em&gt;модуля тестирования&lt;/em&gt; , а не компонент. Они готовят инжектор зависимости на &lt;em&gt;уровне прибора&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7933cc3e6088270dbdd94b164b5a3e681402b77e" translate="yes" xml:space="preserve">
          <source>It's often better to create an appropriate folder for them in the &lt;code&gt;tests&lt;/code&gt; directory.</source>
          <target state="translated">Часто лучше создать соответствующую папку для них в каталоге &lt;code&gt;tests&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="69b70cec57aa9f3f0a7a6b85e143f4fb3199dd40" translate="yes" xml:space="preserve">
          <source>It's often easier and more clear to filter with a standard &lt;code&gt;HTMLElement&lt;/code&gt; method such as &lt;code&gt;&lt;a href=&quot;testing&quot;&gt;querySelector()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;testing&quot;&gt;querySelectorAll()&lt;/a&gt;&lt;/code&gt;, as you'll see in the next set of tests.</source>
          <target state="translated">Часто проще и понятнее фильтровать с помощью стандартного метода &lt;code&gt;HTMLElement&lt;/code&gt; , такого как &lt;code&gt;&lt;a href=&quot;testing&quot;&gt;querySelector()&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;testing&quot;&gt;querySelectorAll()&lt;/a&gt;&lt;/code&gt; , как вы увидите в следующем наборе тестов.</target>
        </trans-unit>
        <trans-unit id="33dd8893cf93c4e6ca6f4628047b460d359f5f36" translate="yes" xml:space="preserve">
          <source>It's often easier and more clear to filter with a standard &lt;code&gt;HTMLElement&lt;/code&gt; method such as &lt;code&gt;querySelector()&lt;/code&gt; or &lt;code&gt;querySelectorAll()&lt;/code&gt;.</source>
          <target state="translated">Часто проще и понятнее фильтровать с помощью стандартного метода &lt;code&gt;HTMLElement&lt;/code&gt; , такого как &lt;code&gt;querySelector()&lt;/code&gt; или &lt;code&gt;querySelectorAll()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de2e6fbff08a65946c5039baf520c82a6fb6449d" translate="yes" xml:space="preserve">
          <source>It's possible for &lt;code&gt;$locationChange&lt;/code&gt; events to happen, but for the browser URL (window.location) to remain unchanged. This &lt;code&gt;onChange&lt;/code&gt; callback will fire only when AngularJS actually updates the browser URL (window.location).</source>
          <target state="translated">События &lt;code&gt;$locationChange&lt;/code&gt; возможны , но URL-адрес браузера (window.location) может остаться неизменным. Этот &lt;code&gt;onChange&lt;/code&gt; вызов onChange сработает только тогда, когда AngularJS действительно обновит URL браузера (window.location).</target>
        </trans-unit>
        <trans-unit id="0cb9b96f78d78cd173396cf253b6e58b220b0340" translate="yes" xml:space="preserve">
          <source>It's possible to ask the service worker to check if any updates have been deployed to the server. The service worker checks for updates during initialization and on each navigation request&amp;mdash;that is, when the user navigates from a different address to your app. However, you might choose to manually check for updates if you have a site that changes frequently or want updates to happen on a schedule.</source>
          <target state="translated">Можно попросить сервис-воркера проверить, были ли на сервере развернуты какие-либо обновления. Сервисный работник проверяет наличие обновлений во время инициализации и при каждом запросе навигации, то есть когда пользователь переходит с другого адреса в ваше приложение. Однако вы можете выбрать проверку обновлений вручную, если у вас есть сайт, который часто изменяется или вы хотите, чтобы обновления выполнялись по расписанию.</target>
        </trans-unit>
        <trans-unit id="4d37c9df140e369670ed6bb296a85b5b6dfb223d" translate="yes" xml:space="preserve">
          <source>It's possible to ask the service worker to check if any updates have been deployed to the server. You might choose to do this if you have a site that changes frequently or want updates to happen on a schedule.</source>
          <target state="translated">Можно попросить работника службы проверить,были ли развернуты какие-либо обновления на сервере.Вы можете сделать это,если у вас есть сайт,который часто меняется или вы хотите,чтобы обновления происходили по расписанию.</target>
        </trans-unit>
        <trans-unit id="af32a95f4c2aebf2b62f7cd376de21ad5a8dffab" translate="yes" xml:space="preserve">
          <source>It's preferable to pre-fetch data from the server so it's ready the moment the route is activated. This also allows you to handle errors before routing to the component. There's no point in navigating to a crisis detail for an &lt;code&gt;id&lt;/code&gt; that doesn't have a record. It'd be better to send the user back to the &lt;code&gt;Crisis &lt;a href=&quot;../api/common/numbersymbol#List&quot;&gt;List&lt;/a&gt;&lt;/code&gt; that shows only valid crisis centers.</source>
          <target state="translated">Желательно предварительно получить данные с сервера, чтобы они были готовы в момент активации маршрута. Это также позволяет обрабатывать ошибки перед маршрутизацией к компоненту. Нет смысла переходить к деталям кризиса для &lt;code&gt;id&lt;/code&gt; , который не имеет записи. Было бы лучше отправить пользователя обратно в &lt;code&gt;Crisis &lt;a href=&quot;../api/common/numbersymbol#List&quot;&gt;List&lt;/a&gt;&lt;/code&gt; который показывает только действительные кризисные центры.</target>
        </trans-unit>
        <trans-unit id="871df3f9bf4a0065fd65bd1d8ff90e84ce8843d2" translate="yes" xml:space="preserve">
          <source>It's still an async test, calling &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; and &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick()&lt;/a&gt;, because the component itself calls &lt;code&gt;setTimeout()&lt;/code&gt; when processing errors.</source>
          <target state="translated">Это все еще асинхронный тест, вызывающий &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; и &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick ()&lt;/a&gt; , потому что сам компонент вызывает &lt;code&gt;setTimeout()&lt;/code&gt; при обработке ошибок.</target>
        </trans-unit>
        <trans-unit id="75b5fea13d499ea02d483d5825f4588a4c55e4de" translate="yes" xml:space="preserve">
          <source>It's still an async test, calling &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt;, because the component itself calls &lt;code&gt;setTimeout()&lt;/code&gt; when processing errors.</source>
          <target state="translated">Это все еще асинхронный тест, вызывающий &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; , потому что сам компонент вызывает &lt;code&gt;setTimeout()&lt;/code&gt; при обработке ошибок.</target>
        </trans-unit>
        <trans-unit id="11cce46b02b398c680b8cd2e4906b38f9b8086dd" translate="yes" xml:space="preserve">
          <source>It's the brackets (&lt;code&gt;[]&lt;/code&gt;) that make it an attribute selector. Angular locates each element in the template that has an attribute named &lt;code&gt;appHighlight&lt;/code&gt; and applies the logic of this directive to that element.</source>
          <target state="translated">Именно скобки ( &lt;code&gt;[]&lt;/code&gt; ) делают его селектором атрибутов. Angular находит каждый элемент в шаблоне, который имеет атрибут &lt;code&gt;appHighlight&lt;/code&gt; , и применяет логику этой директивы к этому элементу.</target>
        </trans-unit>
        <trans-unit id="d0e169e22ebee633303a5cfbc4f3efc6239042d4" translate="yes" xml:space="preserve">
          <source>It's time to add real features to the app's current placeholder crisis center.</source>
          <target state="translated">Пришло время добавить реальные функции в текущий кризисный центр приложения.</target>
        </trans-unit>
        <trans-unit id="93572108533b695852669c26df4d5072f1d7409a" translate="yes" xml:space="preserve">
          <source>It's used throughout the application, perhaps most simply in the &lt;code&gt;AboutComponent&lt;/code&gt;:</source>
          <target state="translated">Он используется во всем приложении, возможно, наиболее просто в &lt;code&gt;AboutComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="90d2c8844c1e3e393da4af416666932eaeab7062" translate="yes" xml:space="preserve">
          <source>IterableChangeRecord</source>
          <target state="translated">IterableChangeRecord</target>
        </trans-unit>
        <trans-unit id="65bf71a2aefacfda4d7b23bc058c87dadebdf19f" translate="yes" xml:space="preserve">
          <source>IterableChanges</source>
          <target state="translated">IterableChanges</target>
        </trans-unit>
        <trans-unit id="c04313d783fe0e607c4d190cf131f3656b1d8927" translate="yes" xml:space="preserve">
          <source>IterableDiffer</source>
          <target state="translated">IterableDiffer</target>
        </trans-unit>
        <trans-unit id="c7213c9ad2d27ea342b15057ff78294c56b1b169" translate="yes" xml:space="preserve">
          <source>IterableDifferFactory</source>
          <target state="translated">IterableDifferFactory</target>
        </trans-unit>
        <trans-unit id="4364a912da1d06d537974eb8581e6a149ccdd75d" translate="yes" xml:space="preserve">
          <source>IterableDiffers</source>
          <target state="translated">IterableDiffers</target>
        </trans-unit>
        <trans-unit id="b4f02bf069d0c4048fa93e0b57dc8e1868b21afd" translate="yes" xml:space="preserve">
          <source>Iterate over a set of operations which when applied to the original &lt;code&gt;Iterable&lt;/code&gt; will produce the new &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">Выполните итерацию по набору операций, которые при применении к исходному &lt;code&gt;Iterable&lt;/code&gt; создаст новый &lt;code&gt;Iterable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9ffa02faa4bce072280e6f955939fc074385b0c" translate="yes" xml:space="preserve">
          <source>Iterate over all added items.</source>
          <target state="translated">Итерация по всем добавленным пунктам.</target>
        </trans-unit>
        <trans-unit id="7b02d8c737198c5290f7d076a7fb4c7d9d683e29" translate="yes" xml:space="preserve">
          <source>Iterate over all changes. &lt;code&gt;&lt;a href=&quot;iterablechangerecord&quot;&gt;IterableChangeRecord&lt;/a&gt;&lt;/code&gt; will contain information about changes to each item.</source>
          <target state="translated">Переберите все изменения. &lt;code&gt;&lt;a href=&quot;iterablechangerecord&quot;&gt;IterableChangeRecord&lt;/a&gt;&lt;/code&gt; будет содержать информацию об изменениях каждого элемента.</target>
        </trans-unit>
        <trans-unit id="beb98ba78ea6ecd3802b7151eadeefd5b1c99318" translate="yes" xml:space="preserve">
          <source>Iterate over all changes. &lt;code&gt;&lt;a href=&quot;keyvaluechangerecord&quot;&gt;KeyValueChangeRecord&lt;/a&gt;&lt;/code&gt; will contain information about changes to each item.</source>
          <target state="translated">Переберите все изменения. &lt;code&gt;&lt;a href=&quot;keyvaluechangerecord&quot;&gt;KeyValueChangeRecord&lt;/a&gt;&lt;/code&gt; будет содержать информацию об изменениях каждого элемента.</target>
        </trans-unit>
        <trans-unit id="29c0d96526568e9909421843c0f1afea4a690e7c" translate="yes" xml:space="preserve">
          <source>Iterate over all items which had their identity (as computed by the &lt;code&gt;&lt;a href=&quot;trackbyfunction&quot;&gt;TrackByFunction&lt;/a&gt;&lt;/code&gt;) changed.</source>
          <target state="translated">Перебирайте все элементы, &lt;code&gt;&lt;a href=&quot;trackbyfunction&quot;&gt;TrackByFunction&lt;/a&gt;&lt;/code&gt; идентичность (вычисленная с помощью TrackByFunction ) изменилась</target>
        </trans-unit>
        <trans-unit id="4e85b2b64bc908fceeecabec10e0065e19464566" translate="yes" xml:space="preserve">
          <source>Iterate over all keys for which values have changed.</source>
          <target state="translated">Итерация по всем клавишам,для которых значения изменились.</target>
        </trans-unit>
        <trans-unit id="fb1385171738b82cea0b7d429c1042f5e8978d31" translate="yes" xml:space="preserve">
          <source>Iterate over all moved items.</source>
          <target state="translated">Итеррирует все перемещаемые предметы.</target>
        </trans-unit>
        <trans-unit id="cfb6e0e8a0c18815505bb8efd4f29e4d8ac463a0" translate="yes" xml:space="preserve">
          <source>Iterate over all removed items.</source>
          <target state="translated">Итерация по всем удаленным предметам.</target>
        </trans-unit>
        <trans-unit id="d45779a25ee648454d24aa9fdd02da54d493be84" translate="yes" xml:space="preserve">
          <source>Iterate over changes in the order of original &lt;code&gt;Iterable&lt;/code&gt; showing where the original items have moved.</source>
          <target state="translated">Итерируйте изменения в порядке оригинальной &lt;code&gt;Iterable&lt;/code&gt; показывая, куда переместились оригинальные элементы.</target>
        </trans-unit>
        <trans-unit id="66bd7b588566a69a193c5a2f36874c0414c74a1d" translate="yes" xml:space="preserve">
          <source>Iterate over changes in the order of original Map showing where the original items have moved.</source>
          <target state="translated">Изменение порядка следования оригинальной Карты,показывающей,куда переместились оригинальные элементы.</target>
        </trans-unit>
        <trans-unit id="ea79adbb1c7288e6d303027d9db472281313ff38" translate="yes" xml:space="preserve">
          <source>Iterating through the values in a stream</source>
          <target state="translated">Итерация значений в потоке</target>
        </trans-unit>
        <trans-unit id="6406032da55c56d8885f6b288e705bcb402f7d72" translate="yes" xml:space="preserve">
          <source>Its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/mode&quot;&gt;mode&lt;/a&gt; is &lt;code&gt;navigation&lt;/code&gt;.</source>
          <target state="translated">Его &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Request/mode&quot;&gt;режим&lt;/a&gt; - &lt;code&gt;navigation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b563b2914e52ad780cc6bdd2b9a6539c97c4b58" translate="yes" xml:space="preserve">
          <source>Its URL matches certain criteria (see below).</source>
          <target state="translated">Его URL соответствует определенным критериям (см.ниже).</target>
        </trans-unit>
        <trans-unit id="2e88fcbebf8ad2a04b9f75bc715de634f8a37725" translate="yes" xml:space="preserve">
          <source>Its companion component class &lt;code&gt;flying-heroes.component.ts (v1)&lt;/code&gt; provides heroes, adds heroes into the array, and resets the array.</source>
          <target state="translated">Его сопутствующий компонент, класс &lt;code&gt;flying-heroes.component.ts (v1)&lt;/code&gt; предоставляет героев, добавляет героев в массив и сбрасывает массив.</target>
        </trans-unit>
        <trans-unit id="f3742ddc65ddad911e4f7f284021686e152498d7" translate="yes" xml:space="preserve">
          <source>Ivy</source>
          <target state="translated">Ivy</target>
        </trans-unit>
        <trans-unit id="6417fef38d8d9de0afac7152272dfc555180d824" translate="yes" xml:space="preserve">
          <source>Ivy and Universal/App shell</source>
          <target state="translated">оболочка из плюща и универсального/аппликационного панциря</target>
        </trans-unit>
        <trans-unit id="160098452aad6512767e7539f0472d4967ddc942" translate="yes" xml:space="preserve">
          <source>Ivy and libraries</source>
          <target state="translated">плющ и библиотеки</target>
        </trans-unit>
        <trans-unit id="46a052845c1cd470a77a7e698fb651d5f8c56d52" translate="yes" xml:space="preserve">
          <source>Ivy applications can be built with libraries that were created with the View Engine compiler. This compatibility is provided by a tool known as the Angular compatibility compiler (&lt;code&gt;ngcc&lt;/code&gt;). CLI commands run &lt;code&gt;ngcc&lt;/code&gt; as needed when performing an Angular build.</source>
          <target state="translated">Приложения Ivy можно создавать с помощью библиотек, созданных с помощью компилятора View Engine. Эта совместимость обеспечивается инструментом, известным как компилятор совместимости Angular ( &lt;code&gt;ngcc&lt;/code&gt; ). Команды CLI запускают &lt;code&gt;ngcc&lt;/code&gt; по мере необходимости при выполнении сборки Angular.</target>
        </trans-unit>
        <trans-unit id="6172cf4831e34f113151cb2ac9635dff5d8d0b0d" translate="yes" xml:space="preserve">
          <source>Ivy compatibility guide</source>
          <target state="translated">руководство по совместимости с плющом</target>
        </trans-unit>
        <trans-unit id="84a2abde412642218f0e5080324588754f35f7af" translate="yes" xml:space="preserve">
          <source>Ivy does not support merging i18n translations when using JIT mode. If you &lt;a href=&quot;ivy#opting-out-of-ivy-in-version-9&quot;&gt;disable Ivy&lt;/a&gt; and are using JIT mode, see &lt;a href=&quot;https://v8.angular.io/guide/i18n#merge-with-the-jit-compiler&quot;&gt;merging with the JIT compiler&lt;/a&gt;.</source>
          <target state="translated">Ivy не поддерживает слияние переводов i18n при использовании режима JIT. Если вы &lt;a href=&quot;ivy#opting-out-of-ivy-in-version-9&quot;&gt;отключили Ivy&lt;/a&gt; и используете режим JIT, см. &lt;a href=&quot;https://v8.angular.io/guide/i18n#merge-with-the-jit-compiler&quot;&gt;Слияние с компилятором JIT&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1683c48b5f7747723f4d8164bb4a3451f3cc60d" translate="yes" xml:space="preserve">
          <source>Ivy features and compatibility</source>
          <target state="translated">Особенности и совместимость с плющом</target>
        </trans-unit>
        <trans-unit id="533daa94e88ce1081e6444153c285b64693f39ce" translate="yes" xml:space="preserve">
          <source>Ivy is the code name for Angular's &lt;a href=&quot;https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7&quot;&gt;next-generation compilation and rendering pipeline&lt;/a&gt;. Starting with Angular version 8, you can choose to opt in to start using a preview version of Ivy and help in its continuing development and tuning.</source>
          <target state="translated">Ivy - это кодовое имя для &lt;a href=&quot;https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7&quot;&gt;компиляции и рендеринга&lt;/a&gt; Angular следующего поколения . Начиная с Angular версии 8, вы можете отказаться от использования предварительной версии Ivy и помочь в ее дальнейшей разработке и настройке.</target>
        </trans-unit>
        <trans-unit id="33a8f2f4e1a0fb21c331debb10a11bb20a968878" translate="yes" xml:space="preserve">
          <source>Ivy is the code name for Angular's &lt;a href=&quot;https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7&quot;&gt;next-generation compilation and rendering pipeline&lt;/a&gt;. With the version 9 release of Angular, the new compiler and runtime instructions are used by default instead of the older compiler and runtime, known as &lt;a href=&quot;glossary#ve&quot;&gt;View Engine&lt;/a&gt;.</source>
          <target state="translated">Ivy - это кодовое название &lt;a href=&quot;https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7&quot;&gt;конвейера компиляции и рендеринга&lt;/a&gt; Angular следующего поколения . В выпуске Angular версии 9 новые инструкции компилятора и среды выполнения используются по умолчанию вместо старых компилятора и среды выполнения, известных как &lt;a href=&quot;glossary#ve&quot;&gt;View Engine&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="914de7c4c667979756cde1759caaab274ed4150c" translate="yes" xml:space="preserve">
          <source>Ivy is the code name for Angular's &lt;a href=&quot;https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7&quot;&gt;next-generation compilation and rendering pipeline&lt;/a&gt;. With the version 9 release of Angular, the new compiler and runtime instructions are used by default instead of the older compiler and runtime, known as View Engine.</source>
          <target state="translated">Ivy - это кодовое название &lt;a href=&quot;https://blog.angular.io/a-plan-for-version-8-0-and-ivy-b3318dfc19f7&quot;&gt;конвейера компиляции и рендеринга&lt;/a&gt; Angular следующего поколения . В выпуске Angular версии 9 новые инструкции компилятора и среды выполнения используются по умолчанию вместо старых компилятора и среды выполнения, известных как View Engine.</target>
        </trans-unit>
        <trans-unit id="97c35ca691769b08824133a20d0b01e844696c10" translate="yes" xml:space="preserve">
          <source>JIT compilation is the default (as opposed to AOT compilation) when you run Angular's &lt;code&gt;ng build&lt;/code&gt; and &lt;code&gt;ng serve&lt;/code&gt; CLI commands, and is a good choice during development. JIT mode is strongly discouraged for production use because it results in large application payloads that hinder the bootstrap performance.</source>
          <target state="translated">JIT-компиляция используется по умолчанию (в отличие от AOT-компиляции), когда вы запускаете Angular-команды &lt;code&gt;ng build&lt;/code&gt; и &lt;code&gt;ng serve&lt;/code&gt; CLI, и это хороший выбор во время разработки. Режим JIT настоятельно не рекомендуется для производственного использования, поскольку он приводит к большим нагрузкам приложений, которые снижают производительность начальной загрузки.</target>
        </trans-unit>
        <trans-unit id="100955a614a47a100a0c1d379a56348ad67eab92" translate="yes" xml:space="preserve">
          <source>JIT compilation is the default when you run the &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt; (build only) or &lt;a href=&quot;cli/serve&quot;&gt;&lt;code&gt;ng serve&lt;/code&gt;&lt;/a&gt; (build and serve locally) CLI commands:</source>
          <target state="translated">JIT-компиляция используется по умолчанию, когда вы запускаете команды CLI &lt;a href=&quot;cli/build&quot;&gt; &lt;code&gt;ng build&lt;/code&gt; &lt;/a&gt; (только сборка) или &lt;a href=&quot;cli/serve&quot;&gt; &lt;code&gt;ng serve&lt;/code&gt; &lt;/a&gt; (сборка и обслуживание локально):</target>
        </trans-unit>
        <trans-unit id="f39e4bdefdba26f9731fa104f4dc571370e960e1" translate="yes" xml:space="preserve">
          <source>JSON files</source>
          <target state="translated">JSON-файлы</target>
        </trans-unit>
        <trans-unit id="200ea8b30d97106e227dd426de9470d1b9e5f6dc" translate="yes" xml:space="preserve">
          <source>JSONP Example</source>
          <target state="translated">JSONP Пример</target>
        </trans-unit>
        <trans-unit id="5126883581dd0d87d57ac5704c8df63b2bc61717" translate="yes" xml:space="preserve">
          <source>Jasmine &lt;em&gt;done()&lt;/em&gt;</source>
          <target state="translated">Жасмин &lt;em&gt;сделано ()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7b8ef1b9cd0e4f4d6572da9bde4bff2706b7e3ca" translate="yes" xml:space="preserve">
          <source>Jasmine also provides a &lt;code&gt;clock&lt;/code&gt; feature to mock dates. Angular automatically runs tests that are run after &lt;code&gt;jasmine.clock().install()&lt;/code&gt; is called inside a &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; method until &lt;code&gt;jasmine.clock().uninstall()&lt;/code&gt; is called. &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; is not needed and throws an error if nested.</source>
          <target state="translated">Жасмин также предоставляет функцию &lt;code&gt;clock&lt;/code&gt; для фиктивных дат. Angular автоматически запускает тесты, запускаемые после &lt;code&gt;jasmine.clock().install()&lt;/code&gt; внутри &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; до &lt;code&gt;jasmine.clock().uninstall()&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; не требуется и выдает ошибку, если вложена.</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="e4e56910ea532a32775fa361c6e193dfb89d0f17" translate="yes" xml:space="preserve">
          <source>JavaScript Modules vs. NgModules</source>
          <target state="translated">Модули JavaScript против NgModules</target>
        </trans-unit>
        <trans-unit id="fdca30518a58215f071ba5c35508f58fe8c3fc88" translate="yes" xml:space="preserve">
          <source>JavaScript and Angular use modules to organize code, and though they organize it differently, Angular apps rely on both.</source>
          <target state="translated">JavaScript и Angular используют модули для организации кода,и хотя они организуют его по-разному,Angular приложения полагаются и на то,и на другое.</target>
        </trans-unit>
        <trans-unit id="e427373b78bde22bea74df011ec7e3ebee573414" translate="yes" xml:space="preserve">
          <source>JavaScript features new to ES2015, like arrow functions, &lt;code&gt;let&lt;/code&gt;s and &lt;code&gt;const&lt;/code&gt;s, default function parameters, and destructuring assignments can also be gradually added to make the code more expressive.</source>
          <target state="translated">JavaScript, новые для ES2015, такие как функции стрелок, &lt;code&gt;let&lt;/code&gt; s и &lt;code&gt;const&lt;/code&gt; s, параметры функций по умолчанию и назначения деструктурирования, также могут постепенно добавляться, чтобы сделать код более выразительным.</target>
        </trans-unit>
        <trans-unit id="813155b28b8ee2bbf4f6efd8be0aff1a8379446a" translate="yes" xml:space="preserve">
          <source>JavaScript modules</source>
          <target state="translated">модули JavaScript</target>
        </trans-unit>
        <trans-unit id="6272c55fb8883905bd42232de7e38543bd97f3e0" translate="yes" xml:space="preserve">
          <source>JavaScript modules and NgModules can help you modularize your code, but they are very different. Angular apps rely on both kinds of modules.</source>
          <target state="translated">Модули JavaScript и NgModules могут помочь вам модулировать код,но они сильно отличаются друг от друга.Угловые приложения полагаются на оба типа модулей.</target>
        </trans-unit>
        <trans-unit id="80315fb1334c813a6b687f8cf6aba6867ead2d1b" translate="yes" xml:space="preserve">
          <source>JavaScript modules help you namespace, preventing accidental global variables.</source>
          <target state="translated">Модули JavaScript помогают использовать пространство имен,предотвращая случайные глобальные переменные.</target>
        </trans-unit>
        <trans-unit id="638d218e5afc21a4aaced22467fdfeee6f031a25" translate="yes" xml:space="preserve">
          <source>JavaScript modules vs. NgModules</source>
          <target state="translated">Модули JavaScript против NgModules</target>
        </trans-unit>
        <trans-unit id="3b77e8995b03370ac676628ae0b22c65d3fac5b0" translate="yes" xml:space="preserve">
          <source>JavaScript modules: Files containing code</source>
          <target state="translated">Модули JavaScript:Файлы,содержащие код</target>
        </trans-unit>
        <trans-unit id="7466df73c7a75f7fab07289c7c1fb62ec498abba" translate="yes" xml:space="preserve">
          <source>JitCompilerFactory</source>
          <target state="translated">JitCompilerFactory</target>
        </trans-unit>
        <trans-unit id="a22aee298933fd3299920aebce3877a6554d67bf" translate="yes" xml:space="preserve">
          <source>Join our community</source>
          <target state="translated">Присоединяйтесь к нашему сообществу</target>
        </trans-unit>
        <trans-unit id="b069d85c6c5a1040d5766e98392651c7573ae4fc" translate="yes" xml:space="preserve">
          <source>Join the Angular community</source>
          <target state="translated">Присоединиться к сообществу Angular</target>
        </trans-unit>
        <trans-unit id="87e6a6731c3d14a812bc4b63bb7fde49224e7eb9" translate="yes" xml:space="preserve">
          <source>Joins two parts of a URL with a slash if needed.</source>
          <target state="translated">При необходимости соединяет две части URL с косой чертой.</target>
        </trans-unit>
        <trans-unit id="5476e9b9f4a192c11d46458bd1af59f8fb187f48" translate="yes" xml:space="preserve">
          <source>JsonPipe</source>
          <target state="translated">JsonPipe</target>
        </trans-unit>
        <trans-unit id="f9734727c3307bfa948623de46c33ca6cfb42687" translate="yes" xml:space="preserve">
          <source>JsonpClientBackend</source>
          <target state="translated">JsonpClientBackend</target>
        </trans-unit>
        <trans-unit id="6dc692df4f14103795aed4e22a3eac866f471215" translate="yes" xml:space="preserve">
          <source>JsonpInterceptor</source>
          <target state="translated">JsonpInterceptor</target>
        </trans-unit>
        <trans-unit id="46405c235890cb26d0b5a6bcba77b2127eb88a79" translate="yes" xml:space="preserve">
          <source>Jun 24, 2020</source>
          <target state="translated">24 июня 2020 года</target>
        </trans-unit>
        <trans-unit id="3d20c8ac3c0ebca318b90dcf112410be899903bd" translate="yes" xml:space="preserve">
          <source>Just as TypeScript catches type errors in your code, Angular checks the expressions and bindings within the templates of your application and can report any type errors it finds. Angular currently has three modes of doing this, depending on the value of the &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; and &lt;code&gt;strictTemplates&lt;/code&gt; flags in the &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript configuration file&lt;/a&gt;.</source>
          <target state="translated">Подобно тому, как TypeScript улавливает ошибки типа в вашем коде, Angular проверяет выражения и привязки в шаблонах вашего приложения и может сообщать о любых обнаруженных ошибках типа. Angular в настоящее время имеет три режима для этого, в зависимости от значения флагов &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; и &lt;code&gt;strictTemplates&lt;/code&gt; в &lt;a href=&quot;typescript-configuration&quot;&gt;файле конфигурации TypeScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="86ade25665aab98adbdecbd2678a114f46ce9f95" translate="yes" xml:space="preserve">
          <source>Just as a form control instance gives you control over a single input field, a form group instance tracks the form state of a group of form control instances (for example, a form). Each control in a form group instance is tracked by name when creating the form group. The following example shows how to manage multiple form control instances in a single group.</source>
          <target state="translated">Подобно тому,как экземпляр управления формой дает контроль над одним полем ввода,экземпляр группы форм отслеживает состояние формы группы экземпляров управления формой (например,формы).Каждый элемент управления в экземпляре группы форм отслеживается по имени при создании группы форм.Следующий пример показывает,как управлять несколькими экземплярами управления формы в одной группе.</target>
        </trans-unit>
        <trans-unit id="7ba5c7cfe37fd57ce918bf417c82139cfd6e4c6d" translate="yes" xml:space="preserve">
          <source>Just as for components, the metadata for a directive associates the decorated class with a &lt;code&gt;selector&lt;/code&gt; element that you use to insert it into HTML. In templates, directives typically appear within an element tag as attributes, either by name or as the target of an assignment or a binding.</source>
          <target state="translated">Как и для компонентов, метаданные для директивы связывают декорированный класс с элементом &lt;code&gt;selector&lt;/code&gt; который вы используете для вставки его в HTML. В шаблонах директивы обычно отображаются в теге элемента в виде атрибутов, либо по имени, либо в качестве цели назначения или привязки.</target>
        </trans-unit>
        <trans-unit id="952028f0e1b2702fd956f9f61aab0587b89f85ff" translate="yes" xml:space="preserve">
          <source>Just as in the &lt;code&gt;FlowerService&lt;/code&gt; example, if you add &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; to the constructor for the &lt;code&gt;AnimalService&lt;/code&gt;, the injector won't look in the current &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;'s &lt;code&gt;ElementInjector&lt;/code&gt; for the &lt;code&gt;AnimalService&lt;/code&gt;.</source>
          <target state="translated">Так же , как и в &lt;code&gt;FlowerService&lt;/code&gt; Например, если вы добавите &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; в конструктор для &lt;code&gt;AnimalService&lt;/code&gt; , инжектор не будет выглядеть в текущем &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; &amp;laquo;s &lt;code&gt;ElementInjector&lt;/code&gt; для &lt;code&gt;AnimalService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50a3565cd343f55461efc882d3f1056f8f2843ef" translate="yes" xml:space="preserve">
          <source>Just as with the &lt;code&gt;FlowerService&lt;/code&gt; example, the &lt;code&gt;AnimalService&lt;/code&gt; is provided in the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator. This means that since the injector first looks in the &lt;code&gt;ElementInjector&lt;/code&gt; of the component, it finds the &lt;code&gt;AnimalService&lt;/code&gt; value of 🐶 (puppy). It doesn't need to continue searching the &lt;code&gt;ElementInjector&lt;/code&gt; tree, nor does it need to search the &lt;code&gt;ModuleInjector&lt;/code&gt;.</source>
          <target state="translated">Как и в примере с &lt;code&gt;FlowerService&lt;/code&gt; , &lt;code&gt;AnimalService&lt;/code&gt; предоставляется в декораторе &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; . Это означает , что , поскольку инжектор сначала смотрит в &lt;code&gt;ElementInjector&lt;/code&gt; компоненты, он находит &lt;code&gt;AnimalService&lt;/code&gt; значения 🐶 (щенок). Ему не нужно продолжать поиск в дереве &lt;code&gt;ElementInjector&lt;/code&gt; , равно как и не нужно искать &lt;code&gt;ModuleInjector&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcbe13374c0b6e5160a92304e2958769789d6903" translate="yes" xml:space="preserve">
          <source>Just as you can project AngularJS content into Angular components, you can &lt;em&gt;transclude&lt;/em&gt; Angular content into AngularJS components, whenever you are using upgraded versions from them.</source>
          <target state="translated">Точно так же, как вы можете проецировать контент AngularJS в компоненты Angular, вы можете &lt;em&gt;преобразовывать&lt;/em&gt; контент Angular в компоненты AngularJS всякий раз, когда вы используете из них обновленные версии.</target>
        </trans-unit>
        <trans-unit id="1d3b5872a8da8780f730b9a6d692e8ef62ba276b" translate="yes" xml:space="preserve">
          <source>Just like Web and the entire web ecosystem, Angular is continuously improving. Angular balances continuous improvement with a strong focus on stability and making updates easy. Keeping your Angular app up-to-date enables you to take advantage of leading-edge new features, as well as optimizations and bug fixes.</source>
          <target state="translated">Так же,как и Web и вся веб-система,Angular постоянно совершенствуется.Angular уравновешивает непрерывное улучшение с сильным акцентом на стабильность и простоту обновлений.Поддержание вашего приложения Angular в актуальном состоянии позволяет вам воспользоваться преимуществами новейших функций,а также оптимизаций и исправлений ошибок.</target>
        </trans-unit>
        <trans-unit id="5ca2b5f86d531d00a29d9169b827a1109624e083" translate="yes" xml:space="preserve">
          <source>Just like synchronous validators have the &lt;code&gt;&lt;a href=&quot;../api/forms/validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/validator&quot;&gt;Validator&lt;/a&gt;&lt;/code&gt; interfaces, asynchronous validators have their own counterparts: &lt;code&gt;&lt;a href=&quot;../api/forms/asyncvalidatorfn&quot;&gt;AsyncValidatorFn&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/asyncvalidator&quot;&gt;AsyncValidator&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Так же, как синхронные валидаторы имеют интерфейсы &lt;code&gt;&lt;a href=&quot;../api/forms/validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/validator&quot;&gt;Validator&lt;/a&gt;&lt;/code&gt; , асинхронные валидаторы имеют свои собственные аналоги: &lt;code&gt;&lt;a href=&quot;../api/forms/asyncvalidatorfn&quot;&gt;AsyncValidatorFn&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/asyncvalidator&quot;&gt;AsyncValidator&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d673c861402fe0c15e579d517c4f053b2fcbfefe" translate="yes" xml:space="preserve">
          <source>Just like with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, you can use &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; on a property of the child component but its type should be &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Как и в случае с &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; , вы можете использовать &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; для свойства дочернего компонента, но его тип должен быть &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="817700a4464e4e191b283e342f94c1991f779ce0" translate="yes" xml:space="preserve">
          <source>Just the Stackblitz</source>
          <target state="translated">Просто Стэкблиц</target>
        </trans-unit>
        <trans-unit id="a1f18edf65e1f35b5d98a957b4ea1ca6278d408c" translate="yes" xml:space="preserve">
          <source>Karma configuration should then be changed so that it uses the application root dir as the base directory, instead of &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">Затем следует изменить конфигурацию Karma, чтобы вместо &lt;code&gt;app&lt;/code&gt; она использовала корневой каталог приложения в качестве базового каталога .</target>
        </trans-unit>
        <trans-unit id="42600b11fefe8ad521ad30fad8660704a0b4ffbf" translate="yes" xml:space="preserve">
          <source>Karma reporters to use. Directly passed to the karma runner.</source>
          <target state="translated">Репортёры из Кармы.Прямо перешёл к кармическому бегуну.</target>
        </trans-unit>
        <trans-unit id="b4460e678bcf89af04481e0ca8656d0cee5a316f" translate="yes" xml:space="preserve">
          <source>Keep constructors simple</source>
          <target state="translated">Сохраняйте простоту конструкторов</target>
        </trans-unit>
        <trans-unit id="8850b59a0703a38117329723734c5d92e2073bb3" translate="yes" xml:space="preserve">
          <source>Keep current by following the &lt;a href=&quot;https://blog.angular.io/&quot;&gt;Angular blog&lt;/a&gt;.</source>
          <target state="translated">Будьте в курсе, следуя &lt;a href=&quot;https://blog.angular.io/&quot;&gt;Angular блог&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3e0d5a5af4787be28dd80c60ff4a76f4d1dcf910" translate="yes" xml:space="preserve">
          <source>Keep in mind that a directive's data-bound input properties are not set until &lt;em&gt;after construction&lt;/em&gt;. If you need to initialize the directive based on those properties, set them when &lt;code&gt;ngOnInit()&lt;/code&gt; runs.</source>
          <target state="translated">Имейте в виду, что входные свойства директивы с привязкой к данным устанавливаются только &lt;em&gt;после создания&lt;/em&gt; . Если вам нужно инициализировать директиву на основе этих свойств, установите их при &lt;code&gt;ngOnInit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9e51787ad5d5b5ca81319e00bd3e2af12366b1b" translate="yes" xml:space="preserve">
          <source>Keep template statements minimal by using method calls or basic property assignments.</source>
          <target state="translated">Сохраняйте минимальное количество шаблонных выражений,используя вызовы методов или базовые задания свойств.</target>
        </trans-unit>
        <trans-unit id="5de9b63aa5c026111c38b95e17436330040893dc" translate="yes" xml:space="preserve">
          <source>Keep this process running in the background, watching and recompiling as you make changes.</source>
          <target state="translated">Держите этот процесс в фоновом режиме,наблюдая и перекомпилируя его по мере внесения изменений.</target>
        </trans-unit>
        <trans-unit id="75b190e26551d30888434ef5e10c264fd2094702" translate="yes" xml:space="preserve">
          <source>Keeping all features in one component as the application grows will not be maintainable. You'll want to split up large components into smaller sub-components, each focused on a specific task or workflow.</source>
          <target state="translated">Сохранение всех функций в одном компоненте по мере роста приложения не будет поддерживаться.Вы захотите разделить большие компоненты на более мелкие подкомпоненты,каждый из которых ориентирован на конкретную задачу или рабочий процесс.</target>
        </trans-unit>
        <trans-unit id="3950ebebea0b9fa7aab3b677f39dbcffdc5260a0" translate="yes" xml:space="preserve">
          <source>Keeping your Angular Projects Up-to-Date</source>
          <target state="translated">Поддержание ваших угловых проектов в актуальном состоянии</target>
        </trans-unit>
        <trans-unit id="009c1fdcb326fe22fdb96d8f6b762042126fa6be" translate="yes" xml:space="preserve">
          <source>Keeping your Angular projects up-to-date</source>
          <target state="translated">Поддержка ваших угловых проектов в актуальном состоянии</target>
        </trans-unit>
        <trans-unit id="0e98238c1a123f2c93163aa116c02a7491e9b3d0" translate="yes" xml:space="preserve">
          <source>Key differences</source>
          <target state="translated">Ключевые различия</target>
        </trans-unit>
        <trans-unit id="d24f1a6439a067297b07682b27dca0466177ddc2" translate="yes" xml:space="preserve">
          <source>Key event filtering (with &lt;code&gt;key.enter&lt;/code&gt;)</source>
          <target state="translated">Фильтрация по ключевым событиям (с &lt;code&gt;key.enter&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e6a63d973ce4fce07ea7910869aeaa58dcc486e5" translate="yes" xml:space="preserve">
          <source>Key takeaways:</source>
          <target state="translated">Ключевые моменты:</target>
        </trans-unit>
        <trans-unit id="bb3c05a548b50d8ab473aa91a3bc6c081c4b5c99" translate="yes" xml:space="preserve">
          <source>KeyValue</source>
          <target state="translated">KeyValue</target>
        </trans-unit>
        <trans-unit id="9b3401cf8def25530e9fd1c26637d0047a8726c9" translate="yes" xml:space="preserve">
          <source>KeyValueChangeRecord</source>
          <target state="translated">KeyValueChangeRecord</target>
        </trans-unit>
        <trans-unit id="73aa019b64cd0c76d411a1451198da70801d52c4" translate="yes" xml:space="preserve">
          <source>KeyValueChanges</source>
          <target state="translated">KeyValueChanges</target>
        </trans-unit>
        <trans-unit id="c9f3815ecee4aa3527346e46c9976e1e8f5842c1" translate="yes" xml:space="preserve">
          <source>KeyValueDiffer</source>
          <target state="translated">KeyValueDiffer</target>
        </trans-unit>
        <trans-unit id="b74cac1bdb5561f5eaed8f9096562dbc1cbfcbb5" translate="yes" xml:space="preserve">
          <source>KeyValueDifferFactory</source>
          <target state="translated">KeyValueDifferFactory</target>
        </trans-unit>
        <trans-unit id="c6bbedfd75cd733b25c3584df7236c67ccd8bcba" translate="yes" xml:space="preserve">
          <source>KeyValueDiffers</source>
          <target state="translated">KeyValueDiffers</target>
        </trans-unit>
        <trans-unit id="9ba558627c56c78559234ffc0ae09f6dc16dea1a" translate="yes" xml:space="preserve">
          <source>KeyValuePipe</source>
          <target state="translated">KeyValuePipe</target>
        </trans-unit>
        <trans-unit id="987e5e1f455e03766d3ef3740947f4db46336d53" translate="yes" xml:space="preserve">
          <source>Keyframes</source>
          <target state="translated">Keyframes</target>
        </trans-unit>
        <trans-unit id="6eb2cb65b6b265087cc2d5112489a6c3d6948a43" translate="yes" xml:space="preserve">
          <source>Keyframes include an &lt;em&gt;offset&lt;/em&gt; that defines the point in the animation where each style change occurs. Offsets are relative measures from zero to one, marking the beginning and end of the animation, respectively and should be applied to each of the keyframe's steps if used at least once.</source>
          <target state="translated">Ключевые кадры включают &lt;em&gt;смещение,&lt;/em&gt; которое определяет точку в анимации, где происходит каждое изменение стиля. Смещения - это относительные меры от нуля до единицы, обозначающие начало и конец анимации, соответственно, и должны применяться к каждому из шагов ключевого кадра, если они используются хотя бы один раз.</target>
        </trans-unit>
        <trans-unit id="893056aa39e96a084b3d311ebde22e7acf05fc70" translate="yes" xml:space="preserve">
          <source>Keyframes summary</source>
          <target state="translated">Резюме ключевых тем</target>
        </trans-unit>
        <trans-unit id="d6a03b41f716acfc6fd0ac6d70d7b37c373ace99" translate="yes" xml:space="preserve">
          <source>Keyframes with a pulsation</source>
          <target state="translated">Брелоки с пульсацией</target>
        </trans-unit>
        <trans-unit id="258044e7b813d16f725b367c95a2d8e459f094fc" translate="yes" xml:space="preserve">
          <source>Keys have:</source>
          <target state="translated">Ключи есть:</target>
        </trans-unit>
        <trans-unit id="284add57ddefeac62dc890be8a4e8973296321db" translate="yes" xml:space="preserve">
          <source>Kicks off the animation and serves as a container for all other animation function calls. HTML template binds to &lt;code&gt;&lt;a href=&quot;../api/animations/animationevent#triggerName&quot;&gt;triggerName&lt;/a&gt;&lt;/code&gt;. Use the first argument to declare a unique trigger name. Uses array syntax.</source>
          <target state="translated">Запускает анимацию и служит контейнером для всех других вызовов функций анимации. HTML-шаблон привязывается к &lt;code&gt;&lt;a href=&quot;../api/animations/animationevent#triggerName&quot;&gt;triggerName&lt;/a&gt;&lt;/code&gt; . Используйте первый аргумент, чтобы объявить уникальное имя триггера. Использует синтаксис массива.</target>
        </trans-unit>
        <trans-unit id="fa438cb50759fa5742977214c2ee1e81a57db99b" translate="yes" xml:space="preserve">
          <source>Kicks off the animation and serves as a container for all other animation function calls. HTML template binds to &lt;code&gt;triggerName&lt;/code&gt;. Use the first argument to declare a unique trigger name. Uses array syntax.</source>
          <target state="translated">Запускает анимацию и служит контейнером для всех других вызовов функций анимации. HTML-шаблон привязывается к &lt;code&gt;triggerName&lt;/code&gt; . Используйте первый аргумент, чтобы объявить уникальное имя триггера. Использует синтаксис массива.</target>
        </trans-unit>
        <trans-unit id="b9a401030ae31427bf36aafaa6d13ce01e5c38e0" translate="yes" xml:space="preserve">
          <source>Kidding aside, pay attention to two key points:</source>
          <target state="translated">Шутя в сторону,обратите внимание на два ключевых момента:</target>
        </trans-unit>
        <trans-unit id="e4b6a725b52a13d1cccf14a76ba4d885abd9d4b0" translate="yes" xml:space="preserve">
          <source>Knowing that it is an &lt;code&gt;HTMLElement&lt;/code&gt; of some sort, you can use the standard HTML &lt;code&gt;querySelector&lt;/code&gt; to dive deeper into the element tree.</source>
          <target state="translated">Зная, что это какой-то &lt;code&gt;HTMLElement&lt;/code&gt; , вы можете использовать стандартный HTML &lt;code&gt;querySelector&lt;/code&gt; , чтобы глубже погрузиться в дерево элементов.</target>
        </trans-unit>
        <trans-unit id="71131f7aee7025ef5618a88cee7db1bc11db3816" translate="yes" xml:space="preserve">
          <source>Knowledge of &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; is helpful, but not required.</source>
          <target state="translated">Знание &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; полезно, но не обязательно.</target>
        </trans-unit>
        <trans-unit id="c4b1aea668c6b62ca0106cddefaf0fd61af5def7" translate="yes" xml:space="preserve">
          <source>Knowledge of this structure can inform how you provide and inject your services, and give you complete control of service visibility.</source>
          <target state="translated">Знание этой структуры может дать вам информацию о том,как вы предоставляете и вводите свои услуги,и дать вам полный контроль над видимостью услуг.</target>
        </trans-unit>
        <trans-unit id="d160e0986aca4714714a16f29ec605af90be704d" translate="yes" xml:space="preserve">
          <source>L</source>
          <target state="translated">L</target>
        </trans-unit>
        <trans-unit id="855b4c3da111de1cc3bf0426bb3c3d9b0c13d293" translate="yes" xml:space="preserve">
          <source>L (S)</source>
          <target state="translated">L (S)</target>
        </trans-unit>
        <trans-unit id="ad97b692157548122b2491efcefede18a971027f" translate="yes" xml:space="preserve">
          <source>LIBRARY SOURCE FILES</source>
          <target state="translated">ИСХОДНЫЕ ФАЙЛЫ БИБЛИОТЕКИ</target>
        </trans-unit>
        <trans-unit id="1460dc33fdc66db88bdcc5b32057457efeed3ce5" translate="yes" xml:space="preserve">
          <source>LL</source>
          <target state="translated">LL</target>
        </trans-unit>
        <trans-unit id="ae6269698bf58fd847def39ce4ac2fae66e5387f" translate="yes" xml:space="preserve">
          <source>LLL</source>
          <target state="translated">LLL</target>
        </trans-unit>
        <trans-unit id="366642afad85161718d3199bbb3eeec4323b4561" translate="yes" xml:space="preserve">
          <source>LLLL</source>
          <target state="translated">LLLL</target>
        </trans-unit>
        <trans-unit id="2f63457c6d31c1457c936d330e5d022b720e7ea8" translate="yes" xml:space="preserve">
          <source>LLLLL</source>
          <target state="translated">LLLLL</target>
        </trans-unit>
        <trans-unit id="46dbfd3ddbab363ec3229828156cfc7cbbf79e53" translate="yes" xml:space="preserve">
          <source>LOCALE_ID</source>
          <target state="translated">LOCALE_ID</target>
        </trans-unit>
        <trans-unit id="5054e68056df235551347e024191933731ac90af" translate="yes" xml:space="preserve">
          <source>LOCATION_INITIALIZED</source>
          <target state="translated">LOCATION_INITIALIZED</target>
        </trans-unit>
        <trans-unit id="b5e0fa918e23be61311591d33895ec581f8ea479" translate="yes" xml:space="preserve">
          <source>LOCATION_UPGRADE_CONFIGURATION</source>
          <target state="translated">LOCATION_UPGRADE_CONFIGURATION</target>
        </trans-unit>
        <trans-unit id="80fea83804bf0e1f73c7272f7a19c26bc52d63ef" translate="yes" xml:space="preserve">
          <source>LTS</source>
          <target state="translated">LTS</target>
        </trans-unit>
        <trans-unit id="c3cddb869a298772e4140a9d210d3c1e037f73e9" translate="yes" xml:space="preserve">
          <source>LTS Ends</source>
          <target state="translated">концы LTS</target>
        </trans-unit>
        <trans-unit id="ebe84b18d41b3defb8e3d74f6f0bd38e69c3d734" translate="yes" xml:space="preserve">
          <source>LTS fixes</source>
          <target state="translated">LTS исправления</target>
        </trans-unit>
        <trans-unit id="ddc05edf33a67ff62443367b7faa25ddb394059a" translate="yes" xml:space="preserve">
          <source>Language features outside of the compiler's &lt;a href=&quot;aot-compiler#expression-syntax&quot;&gt;restricted expression syntax&lt;/a&gt; can produce this error, as seen in the following example:</source>
          <target state="translated">Возможности языка за пределами &lt;a href=&quot;aot-compiler#expression-syntax&quot;&gt;синтаксиса ограниченного выражения&lt;/a&gt; компилятора могут вызвать эту ошибку, как показано в следующем примере:</target>
        </trans-unit>
        <trans-unit id="838123c690032c3d77f2cf978058b56afa0f2909" translate="yes" xml:space="preserve">
          <source>Language services include:</source>
          <target state="translated">Языковые услуги включают в себя:</target>
        </trans-unit>
        <trans-unit id="734fa40ff03686294aa0c60e9fa60f8ca7b15bcd" translate="yes" xml:space="preserve">
          <source>Large image files can be slow to load, harming the user experience. Always compress the image. Consider using an image compression web site such as &lt;a href=&quot;https://tinypng.com/&quot;&gt;tinypng&lt;/a&gt;.</source>
          <target state="translated">Большие файлы изображений могут загружаться медленно, что отрицательно влияет на работу пользователя. Всегда сжимайте изображение. Подумайте об использовании веб-сайта сжатия изображений, такого как &lt;a href=&quot;https://tinypng.com/&quot;&gt;tinypng&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fdbfb45b871130cc5890d749d31a074e087dbb17" translate="yes" xml:space="preserve">
          <source>Last update check</source>
          <target state="translated">Последняя проверка обновлений</target>
        </trans-unit>
        <trans-unit id="70a03b91dbc99c3f4c22b136089730dab49465a9" translate="yes" xml:space="preserve">
          <source>Lastly, call it within the &lt;code&gt;imports&lt;/code&gt; list of the &lt;code&gt;AppModule&lt;/code&gt;. In the following snippet, other parts of the file are left out. For the complete file, see the , or continue to the next section of this document.</source>
          <target state="translated">Наконец, вызовите его в списке &lt;code&gt;imports&lt;/code&gt; &lt;code&gt;AppModule&lt;/code&gt; . В следующем фрагменте другие части файла не учтены. Полный файл см. В или перейдите к следующему разделу этого документа.</target>
        </trans-unit>
        <trans-unit id="512803435153cdf149e51c2b7560f6d2d5123dc7" translate="yes" xml:space="preserve">
          <source>Later in this guide you will create &lt;a href=&quot;router#heroes-functionality&quot;&gt;multiple routing modules&lt;/a&gt; and discover that you must import those routing modules &lt;a href=&quot;router#routing-module-order&quot;&gt;in the correct order&lt;/a&gt;.</source>
          <target state="translated">Далее в этом руководстве вы создадите &lt;a href=&quot;router#heroes-functionality&quot;&gt;несколько модулей маршрутизации&lt;/a&gt; и обнаружите, что вы должны импортировать эти модули маршрутизации &lt;a href=&quot;router#routing-module-order&quot;&gt;в правильном порядке&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1d334b9a4b3cf925264a3a1774fc490eb6e86a86" translate="yes" xml:space="preserve">
          <source>Later you'll call &lt;code&gt;TestBed.configureTestingModule()&lt;/code&gt; with imports, providers, and more declarations to suit your testing needs. Optional &lt;code&gt;override&lt;/code&gt; methods can further fine-tune aspects of the configuration.</source>
          <target state="translated">Позже вы будете вызывать &lt;code&gt;TestBed.configureTestingModule()&lt;/code&gt; с импортом, поставщиками и другими объявлениями в соответствии с вашими потребностями тестирования. Необязательные методы &lt;code&gt;override&lt;/code&gt; могут дополнительно отрегулировать аспекты конфигурации.</target>
        </trans-unit>
        <trans-unit id="06d986c1b367afb8ba4fb3fbdad2551ff5cf409a" translate="yes" xml:space="preserve">
          <source>Later, in the &lt;a href=&quot;https://angular.io/start/start/forms&quot;&gt;Forms&lt;/a&gt; part of this tutorial, this cart service also will be accessed from the page where the user checks out.</source>
          <target state="translated">Позже, в части &amp;laquo; &lt;a href=&quot;https://angular.io/start/start/forms&quot;&gt;Формы&amp;raquo;&lt;/a&gt; этого руководства, эта услуга корзины также будет доступна со страницы, где пользователь проверяет данные.</target>
        </trans-unit>
        <trans-unit id="754103d0963cb240496afc2220bcce0c35ff57b6" translate="yes" xml:space="preserve">
          <source>Later, in the &lt;code&gt;ngOnInit&lt;/code&gt; method, you use the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; service to retrieve the parameters for the route, pull the hero &lt;code&gt;id&lt;/code&gt; from the parameters and retrieve the hero to display.</source>
          <target state="translated">Позже, в методе &lt;code&gt;ngOnInit&lt;/code&gt; , вы используете сервис &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; для получения параметров маршрута, извлечения &lt;code&gt;id&lt;/code&gt; героя из параметров и получения героя для отображения.</target>
        </trans-unit>
        <trans-unit id="e7547ca42bb362a9b11d36774bbdfcd704b4a366" translate="yes" xml:space="preserve">
          <source>Later, the tests will be able to easily check &lt;code&gt;selectedHero&lt;/code&gt; to verify that the &lt;code&gt;DashboardHeroComponent.selected&lt;/code&gt; event emitted the expected hero.</source>
          <target state="translated">Позже тесты смогут легко проверить &lt;code&gt;selectedHero&lt;/code&gt; , чтобы убедиться, что событие &lt;code&gt;DashboardHeroComponent.selected&lt;/code&gt; испустило ожидаемого героя.</target>
        </trans-unit>
        <trans-unit id="5515a41b4344b9f65fe779948499e1d5d6f34c6d" translate="yes" xml:space="preserve">
          <source>Later, this guide shows you how to create &lt;a href=&quot;router-tutorial-toh#heroes-functionality&quot;&gt;multiple routing modules&lt;/a&gt; and import those routing modules &lt;a href=&quot;router-tutorial-toh#routing-module-order&quot;&gt;in the correct order&lt;/a&gt;.</source>
          <target state="translated">Позже в этом руководстве показано, как создать &lt;a href=&quot;router-tutorial-toh#heroes-functionality&quot;&gt;несколько модулей маршрутизации&lt;/a&gt; и импортировать эти модули маршрутизации &lt;a href=&quot;router-tutorial-toh#routing-module-order&quot;&gt;в правильном порядке&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21fda7ea70f96e74170c060719d7b5657f338386" translate="yes" xml:space="preserve">
          <source>Latest manifest hash</source>
          <target state="translated">Последний манифест гашиша</target>
        </trans-unit>
        <trans-unit id="5e52348bd45eeec46b21e6ad2ead896b3cef0bb5" translate="yes" xml:space="preserve">
          <source>Launch the server by using the CLI command &lt;code&gt;ng serve&lt;/code&gt;, with the &lt;code&gt;--open&lt;/code&gt; option.</source>
          <target state="translated">Запустите сервер с помощью команды CLI &lt;code&gt;ng serve&lt;/code&gt; с параметром &lt;code&gt;--open&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ee1107c3f31dfe72f1b2c8c9f4dbd7811c4a206" translate="yes" xml:space="preserve">
          <source>Launching your app</source>
          <target state="translated">Запуск вашего приложения</target>
        </trans-unit>
        <trans-unit id="8cdd14c7391daa639de4c11bd4f21bff8eb8dfdd" translate="yes" xml:space="preserve">
          <source>Launching your app with a root module</source>
          <target state="translated">Запуск вашего приложения с помощью корневого модуля</target>
        </trans-unit>
        <trans-unit id="ae7bffee7c5009ade8cdb896ee38347b7b498008" translate="yes" xml:space="preserve">
          <source>Lazily retrieves the reference value from a forwardRef.</source>
          <target state="translated">Лениво извлекает опорное значение из forwardRef.</target>
        </trans-unit>
        <trans-unit id="9d8fd079f87e6df7079e2cb3921cb7d7a59ad6f7" translate="yes" xml:space="preserve">
          <source>Lazy Loaded folders</source>
          <target state="translated">Ленивые Загруженные папки</target>
        </trans-unit>
        <trans-unit id="53a754e3d992d869269c4cb92a2837bbd5a07aee" translate="yes" xml:space="preserve">
          <source>Lazy Loading</source>
          <target state="translated">Ленивая загрузка</target>
        </trans-unit>
        <trans-unit id="b9db421e8fed8420ce1824b3ccff0707fa4d9adc" translate="yes" xml:space="preserve">
          <source>Lazy Loading AngularJS</source>
          <target state="translated">Ленивая загрузка угловой JS</target>
        </trans-unit>
        <trans-unit id="e85192724b293a8f60c1280d0d24a8c45ab04f15" translate="yes" xml:space="preserve">
          <source>Lazy Loading Feature Modules</source>
          <target state="translated">Модули с функцией ленивой загрузки</target>
        </trans-unit>
        <trans-unit id="0db7bee2dbf162d4bb73916ab3193a20850ec970" translate="yes" xml:space="preserve">
          <source>Lazy Loading route configuration</source>
          <target state="translated">Настройка маршрута ленивой загрузки</target>
        </trans-unit>
        <trans-unit id="961dcc883b258c2d939be82886386097e05d2115" translate="yes" xml:space="preserve">
          <source>Lazy load the &lt;em&gt;crisis center&lt;/em&gt;</source>
          <target state="translated">Ленивый груз &lt;em&gt;кризисного центра&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d4e26b5d436da7c36bc26793e58eaeec1fdc4705" translate="yes" xml:space="preserve">
          <source>Lazy load the crisis center</source>
          <target state="translated">Ленивая нагрузка на кризисный центр</target>
        </trans-unit>
        <trans-unit id="8745c3d3f236ee4ba968248b7004084810969715" translate="yes" xml:space="preserve">
          <source>Lazy loading</source>
          <target state="translated">ленивая погрузка</target>
        </trans-unit>
        <trans-unit id="78f2517723ef00321461f6e4e944eac63fbf25bc" translate="yes" xml:space="preserve">
          <source>Lazy loading NgModules</source>
          <target state="translated">Ленивая загрузка NgМодулей</target>
        </trans-unit>
        <trans-unit id="f002b47a9674f08e88a467d632ae3477aad802fe" translate="yes" xml:space="preserve">
          <source>Lazy loading an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Ленивая загрузка &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="52a025ef2198526b4b9361d282bbf81bda351341" translate="yes" xml:space="preserve">
          <source>Lazy loading basics</source>
          <target state="translated">ленивые основы погрузки</target>
        </trans-unit>
        <trans-unit id="a70dd563d0cf22b10094a8634ce271d270a2f3d3" translate="yes" xml:space="preserve">
          <source>Lazy loading feature modules.</source>
          <target state="translated">Модули с функцией ленивой загрузки.</target>
        </trans-unit>
        <trans-unit id="dafd78a2060910a592eef7719a94d1cb70951800" translate="yes" xml:space="preserve">
          <source>Lazy loading speeds up application load time by splitting the application into multiple bundles and loading them on demand. To use lazy loading, provide the &lt;code&gt;&lt;a href=&quot;route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; property instead of the &lt;code&gt;children&lt;/code&gt; property.</source>
          <target state="translated">Ленивая загрузка ускоряет время загрузки приложения, разбивая приложение на несколько пакетов и загружая их по требованию. Чтобы использовать &lt;code&gt;&lt;a href=&quot;route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; загрузку, предоставьте свойство loadChildren вместо свойства &lt;code&gt;children&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9a626761db78fd38db2cdd82e365bb22188a611" translate="yes" xml:space="preserve">
          <source>Lazy loading speeds up application load time by splitting the application into multiple bundles and loading them on demand. To use lazy loading, provide the &lt;code&gt;loadChildren&lt;/code&gt; property in the &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; object, instead of the &lt;code&gt;children&lt;/code&gt; property.</source>
          <target state="translated">Ленивая загрузка ускоряет время загрузки приложения, разделяя приложение на несколько пакетов и загружая их по запросу. Чтобы использовать &lt;code&gt;loadChildren&lt;/code&gt; загрузку, укажите свойство loadChildren в объекте &lt;code&gt;&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt;&lt;/code&gt; вместо свойства &lt;code&gt;children&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="628c7bafd341d3b8b82c1179cbcc0927f03d5efc" translate="yes" xml:space="preserve">
          <source>Lazy-loaded modules and their components can inject &lt;code&gt;AppModule&lt;/code&gt; services; they can't inject &lt;code&gt;AppComponent&lt;/code&gt; services.</source>
          <target state="translated">Модули с &lt;code&gt;AppModule&lt;/code&gt; загрузкой и их компоненты могут внедрять службы AppModule ; они не могут внедрять сервисы &lt;code&gt;AppComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="957a78005dabe65160b5a15925b793d1fa82108f" translate="yes" xml:space="preserve">
          <source>Lazy-loaded services are scoped to the lazy module's injector. If a lazy-loaded module also provides the &lt;code&gt;UserService&lt;/code&gt;, any component created within that module's context (such as by router navigation) gets the local instance of the service, not the instance in the root application injector.</source>
          <target state="translated">Ленивые загруженные сервисы ограничены инжектором ленивого модуля. Если модуль с &lt;code&gt;UserService&lt;/code&gt; загрузкой также предоставляет UserService , любой компонент, созданный в контексте этого модуля (например, с помощью навигации по маршрутизатору), получает локальный экземпляр службы, а не экземпляр в инжекторе корневого приложения.</target>
        </trans-unit>
        <trans-unit id="d9c40704401e4873ac74e3957c70dadaa21ecc87" translate="yes" xml:space="preserve">
          <source>Lazy-loading feature modules</source>
          <target state="translated">Функциональные модули с лёгкостью загрузки</target>
        </trans-unit>
        <trans-unit id="3f620ff844008aa025233953d1ce142aa5cda2f1" translate="yes" xml:space="preserve">
          <source>Learn about &lt;code&gt;ngOnChanges()&lt;/code&gt; in the &lt;a href=&quot;lifecycle-hooks&quot;&gt;Lifecycle Hooks&lt;/a&gt; chapter.</source>
          <target state="translated">Узнайте о &lt;code&gt;ngOnChanges()&lt;/code&gt; в главе &lt;a href=&quot;lifecycle-hooks&quot;&gt;Крючки жизненного цикла&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="14b272638be9bcb6a919ee9155d34a360ce378ea" translate="yes" xml:space="preserve">
          <source>Learn about marble testing</source>
          <target state="translated">Узнать об испытании мрамора</target>
        </trans-unit>
        <trans-unit id="e7fdfe1b303da9330f863be0ed83883e1c50ecd2" translate="yes" xml:space="preserve">
          <source>Learn about providers and the bootstrap process in the &lt;a href=&quot;dependency-injection#bootstrap&quot;&gt;Dependency Injection guide&lt;/a&gt;.</source>
          <target state="translated">Узнайте о поставщиках и процессе начальной загрузки в руководстве по &lt;a href=&quot;dependency-injection#bootstrap&quot;&gt;внедрению зависимостей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da27a2f7b1e6d4b67b7e83f584c9c5f289cfc65d" translate="yes" xml:space="preserve">
          <source>Learn how to &lt;a href=&quot;https://github.com/ng-packagr/ng-packagr/blob/master/docs/copy-assets.md&quot;&gt;copy assets into your library as part of the build&lt;/a&gt;.</source>
          <target state="translated">Узнайте, как &lt;a href=&quot;https://github.com/ng-packagr/ng-packagr/blob/master/docs/copy-assets.md&quot;&gt;копировать ресурсы в свою библиотеку как часть сборки&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a66275f34e1f5a7519630477918b8d4723a6bbad" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;a href=&quot;dependency-injection-providers&quot;&gt;DI tokens and providers&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о &lt;a href=&quot;dependency-injection-providers&quot;&gt;токенах и провайдерах DI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="929d9c410b56408fb863a3b3762f37617edbdee9" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;a href=&quot;dependency-injection-providers&quot;&gt;different kinds of providers&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о &lt;a href=&quot;dependency-injection-providers&quot;&gt;различных видах поставщиков&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64e85116af3881f2b807a4ac93b6ca6a118e4228" translate="yes" xml:space="preserve">
          <source>Learn more about &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;where to configure providers&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о том, &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;где настроить провайдеров&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="42696a9635d606ebe6044734ac2f34dd63e3b588" translate="yes" xml:space="preserve">
          <source>Learn more about Circle CI from &lt;a href=&quot;https://circleci.com/docs/2.0/&quot;&gt;Circle CI documentation&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о Circle CI из &lt;a href=&quot;https://circleci.com/docs/2.0/&quot;&gt;документации Circle CI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fbd3617cce085a5e8ca250fd33373a22ecbb1c83" translate="yes" xml:space="preserve">
          <source>Learn more about Travis CI testing from &lt;a href=&quot;https://docs.travis-ci.com/&quot;&gt;Travis CI documentation&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о тестировании &lt;a href=&quot;https://docs.travis-ci.com/&quot;&gt;Travis CI из документации Travis CI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab522e0dc334f2f66198b9d67ad8d7c7cf8fade9" translate="yes" xml:space="preserve">
          <source>Learn more about decorators on the web.</source>
          <target state="translated">Узнайте больше о декораторах в Интернете.</target>
        </trans-unit>
        <trans-unit id="3d9f8497153e69f1f8ced844ece70962ae1dc467" translate="yes" xml:space="preserve">
          <source>Learn more about how Angular uses &lt;a href=&quot;npm-packages&quot;&gt;Npm Packages&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о том, как Angular использует &lt;a href=&quot;npm-packages&quot;&gt;пакеты Npm&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b69eeeb2b9edc6d0b9216f8daf3d46902457fb8" translate="yes" xml:space="preserve">
          <source>Learn more about how the &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;injector hierarchy&lt;/a&gt; works.</source>
          <target state="translated">Узнайте больше о том, как работает &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;иерархия инжекторов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bce1b146d96af53018096aeb9c71ae57f7bbc6d0" translate="yes" xml:space="preserve">
          <source>Learn more about how to use the tool to &lt;a href=&quot;https://github.com/ng-packagr/ng-packagr/blob/master/docs/embed-assets-css.md&quot;&gt;embed assets in CSS&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о том, как использовать этот инструмент для &lt;a href=&quot;https://github.com/ng-packagr/ng-packagr/blob/master/docs/embed-assets-css.md&quot;&gt;встраивания ресурсов в CSS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3ca3602b6be5394836ea6883fbc98df272116471" translate="yes" xml:space="preserve">
          <source>Learn more about nested injectors in &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical Dependency Injection&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о вложенных инжекторах в разделе &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Иерархическая инъекция зависимостей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2491968c7982a380d0f03c94567638e978e99d66" translate="yes" xml:space="preserve">
          <source>Learn more about parameter decorators in &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical Dependency Injectors&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о декораторах параметров в &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Инъекторах Иерархической Зависимости&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0a54e4c772828f62d79c92c5650ee3ba4fd8547" translate="yes" xml:space="preserve">
          <source>Learn more about reactive and template-driven forms in the &lt;a href=&quot;forms-overview&quot;&gt;Introduction to forms in Angular&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о реагирующих и управляемых шаблонами формах в разделе &lt;a href=&quot;forms-overview&quot;&gt;Введение в формы в Angular&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="70918ca856d1bb3ddb3a6cf983a40bf830f966f5" translate="yes" xml:space="preserve">
          <source>Learn more about the &lt;a href=&quot;dependency-injection-providers&quot;&gt;different kinds of providers&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о &lt;a href=&quot;dependency-injection-providers&quot;&gt;различных видах поставщиков&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="143c65e04478f769cd31bc055ec2c74e5a0f04f2" translate="yes" xml:space="preserve">
          <source>Learn more about the &lt;a href=&quot;https://www.youtube.com/watch?v=anphffaCZrQ&quot;&gt;Compiler&lt;/a&gt; and &lt;a href=&quot;https://www.youtube.com/watch?v=S0o-4yc2n-8&quot;&gt;Runtime&lt;/a&gt; in these videos from our team.</source>
          <target state="translated">Узнайте больше о &lt;a href=&quot;https://www.youtube.com/watch?v=anphffaCZrQ&quot;&gt;компиляторе&lt;/a&gt; и &lt;a href=&quot;https://www.youtube.com/watch?v=S0o-4yc2n-8&quot;&gt;среде выполнения&lt;/a&gt; в этих видео от нашей команды.</target>
        </trans-unit>
        <trans-unit id="096d0c679238ccb9dceaa845a2ed7a9859c6fc35" translate="yes" xml:space="preserve">
          <source>Learn more about the JavaScript module system on the web.</source>
          <target state="translated">Узнайте больше о модульной системе JavaScript в Интернете.</target>
        </trans-unit>
        <trans-unit id="b5b77382c3ceee8b94fb94d422b9199a86328115" translate="yes" xml:space="preserve">
          <source>Learn more about the injector hierarchy in &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Hierarchical Dependency Injectors&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше об иерархии инжекторов в &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;Инъекторах иерархической зависимости&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58a34f4059f910727e76619fb8f09151e30f4164" translate="yes" xml:space="preserve">
          <source>Learn more about zones in this &lt;a href=&quot;https://www.youtube.com/watch?v=3IqtmUscE_U&quot;&gt;Brian Ford video&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше о зонах в этом &lt;a href=&quot;https://www.youtube.com/watch?v=3IqtmUscE_U&quot;&gt;видео Брайана Форда&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a06dd36c4697393e8591b0aebf3314fd66a43a1" translate="yes" xml:space="preserve">
          <source>Learn more from the &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt; guide.</source>
          <target state="translated">Узнайте больше из руководства &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49ef03ab06d34819f0df49aacfb549f83abffb4f" translate="yes" xml:space="preserve">
          <source>Learn more in &lt;a href=&quot;attribute-directives&quot;&gt;Attribute Directives&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;attribute-directives&quot;&gt;Директивах&lt;/a&gt; по атрибутам .</target>
        </trans-unit>
        <trans-unit id="061e792bcfae6a72b414a42e4732a01bdfcc764a" translate="yes" xml:space="preserve">
          <source>Learn more in &lt;a href=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a2595474c0bb630d7c9233d6e9cb83f4e1984c4e" translate="yes" xml:space="preserve">
          <source>Learn more in &lt;a href=&quot;dependency-injection&quot;&gt;Dependency Injection in Angular&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;dependency-injection&quot;&gt;Injection Dependency in Angular&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d65e1d322ab658292d1ee386605706fe88f9423a" translate="yes" xml:space="preserve">
          <source>Learn more in &lt;a href=&quot;dependency-injection&quot;&gt;Dependency Injection&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;dependency-injection&quot;&gt;инъекции зависимости&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="543454a1ea1ed89206ddafe40279ccb14fd61601" translate="yes" xml:space="preserve">
          <source>Learn more in &lt;a href=&quot;elements&quot;&gt;Angular Elements Overview&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;elements&quot;&gt;обзоре угловых элементов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d5562b1d6f1c92ab22ddd2839b427022bb5479b0" translate="yes" xml:space="preserve">
          <source>Learn more in &lt;a href=&quot;https://developers.google.com/web/fundamentals/architecture/app-shell&quot;&gt;The App Shell Model&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;https://developers.google.com/web/fundamentals/architecture/app-shell&quot;&gt;App Shell Model&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="69e83458aeba90795b2ec92b95ac860501f7f762" translate="yes" xml:space="preserve">
          <source>Learn more in Victor Savkin's &lt;a href=&quot;http://vsavkin.tumblr.com/post/146722301646/angular-router-empty-paths-componentless-routes&quot;&gt;post on redirects&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;http://vsavkin.tumblr.com/post/146722301646/angular-router-empty-paths-componentless-routes&quot;&gt;посте&lt;/a&gt; Виктора Савкина о перенаправлениях .</target>
        </trans-unit>
        <trans-unit id="ee5bfdc51cf5efa838170544062b01249b630636" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&quot;Dependency Injection Guide&quot;&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;../../guide/dependency-injection&quot;&gt;&amp;laquo;Руководстве по внедрению зависимостей&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ea4f3e368bdb8ee46d30b3c881b3f2fae673597" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;../../guide/dependency-injection-in-action#skip&quot;&gt;Dependency Injection guide&lt;/a&gt;.</source>
          <target state="translated">Узнайте больше в руководстве по &lt;a href=&quot;../../guide/dependency-injection-in-action#skip&quot;&gt;внедрению зависимостей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8722cd7f2f8e80fc745d60c7437d08c266bd0da6" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;attribute-directives&quot;&gt;Attribute Directives&lt;/a&gt; and &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt; guides.</source>
          <target state="translated">Узнайте больше в &lt;a href=&quot;attribute-directives&quot;&gt;Директивах&lt;/a&gt; по атрибутам и Руководствах по &lt;a href=&quot;structural-directives&quot;&gt;структурным директивам&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="335b559673f68f2f45eacd159df851d58d214e55" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;router#preventing-unauthorized-access&quot;&gt;Routing and Navigation&lt;/a&gt; guide.</source>
          <target state="translated">Дополнительные сведения см. В руководстве по &lt;a href=&quot;router#preventing-unauthorized-access&quot;&gt;маршрутизации и навигации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f281d9bb8a624734a3f2318519573c93302200b0" translate="yes" xml:space="preserve">
          <source>Learn more in the &lt;a href=&quot;testing&quot;&gt;Testing&lt;/a&gt; guide.</source>
          <target state="translated">Узнайте больше в руководстве по &lt;a href=&quot;testing&quot;&gt;тестированию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="123406725caa64a10ae164244ffa8356f20fb2c7" translate="yes" xml:space="preserve">
          <source>Learn more: See &lt;a href=&quot;../guide/architecture-services&quot;&gt;Introduction to Services and Dependency Injection&lt;/a&gt; for more information about services.</source>
          <target state="translated">Узнайте больше: см. &lt;a href=&quot;../guide/architecture-services&quot;&gt;Введение в службы и внедрение зависимостей&lt;/a&gt; для получения дополнительной информации об услугах.</target>
        </trans-unit>
        <trans-unit id="1fcac7e737821f3c88ed512904352d47d44d6e8e" translate="yes" xml:space="preserve">
          <source>Learn more: See &lt;a href=&quot;../guide/router&quot;&gt;Routing &amp;amp; Navigation&lt;/a&gt; for more information about the Angular router.</source>
          <target state="translated">Узнайте больше: см. &lt;a href=&quot;../guide/router&quot;&gt;Маршрутизация и навигация&lt;/a&gt; для получения дополнительной информации о угловом маршрутизаторе.</target>
        </trans-unit>
        <trans-unit id="b9654aca29b333345621b40d474db8caace16011" translate="yes" xml:space="preserve">
          <source>Learn more: See the &lt;a href=&quot;../guide/http&quot;&gt;HttpClient guide&lt;/a&gt; for more information about Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Узнайте больше: см. &lt;a href=&quot;../guide/http&quot;&gt;Руководство&lt;/a&gt; по HttpClient для получения дополнительной информации о &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; от Angular .</target>
        </trans-unit>
        <trans-unit id="cb1ae2aa745d0c404aecbc5148457ae04537a735" translate="yes" xml:space="preserve">
          <source>Learning Angular</source>
          <target state="translated">Угловой метод обучения</target>
        </trans-unit>
        <trans-unit id="51a8db0b974271a01e08c116fc2ed02f73e9f5ca" translate="yes" xml:space="preserve">
          <source>Learning about new features</source>
          <target state="translated">Узнать о новых возможностях</target>
        </trans-unit>
        <trans-unit id="cc650de6468563e40595e1b2eb359a2020010fc2" translate="yes" xml:space="preserve">
          <source>Leave the default and the wildcard routes as these are still in use at the top level of the application.</source>
          <target state="translated">Оставьте маршруты по умолчанию и подстановочные знаки,так как они все еще используются на верхнем уровне приложения.</target>
        </trans-unit>
        <trans-unit id="04a7f280698f2243487f6b62f727ea79038a1f1b" translate="yes" xml:space="preserve">
          <source>Legacy JavaScript libraries that are not imported into an app can be added to the runtime global scope and loaded as if they were in a script tag. Configure the CLI to do this at build time using the &quot;scripts&quot; and &quot;styles&quot; options of the build target in the &lt;a href=&quot;workspace-config&quot;&gt;CLI configuration file&lt;/a&gt;, &lt;code&gt;angular.json&lt;/code&gt;.</source>
          <target state="translated">Устаревшие библиотеки JavaScript, которые не импортируются в приложение, можно добавить в глобальную область выполнения и загрузить, как если бы они были в теге сценария. Настройка интерфейса командной строки , чтобы сделать это во время сборки с помощью &amp;laquo;сценариев&amp;raquo; и &amp;laquo;стили&amp;raquo; варианты цели сборки в &lt;a href=&quot;workspace-config&quot;&gt;файле конфигурации CLI&lt;/a&gt; , &lt;code&gt;angular.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb7a7527cb3b41fff45bdf01cc4023654295db7c" translate="yes" xml:space="preserve">
          <source>Legacy values are deprecated since v4 and should not be used for new applications:</source>
          <target state="translated">Наследственные значения устаревают с версии 4 и не должны использоваться для новых приложений:</target>
        </trans-unit>
        <trans-unit id="6c5bb53f486dae84d16877b1a814f7a9af911ad8" translate="yes" xml:space="preserve">
          <source>Length of the control array.</source>
          <target state="translated">Длина массива управления.</target>
        </trans-unit>
        <trans-unit id="79524b43bbfafb265085c4285b823ad36756f103" translate="yes" xml:space="preserve">
          <source>Less common changes</source>
          <target state="translated">Менее распространенные изменения</target>
        </trans-unit>
        <trans-unit id="ddc8669a8abb9a8a2505c175a74ead6882464f81" translate="yes" xml:space="preserve">
          <source>Less explicit, created by directives</source>
          <target state="translated">Менее явный,созданный директивами</target>
        </trans-unit>
        <trans-unit id="7ea222e5b87aefaada7cfc3c3f8a56b08c51fc09" translate="yes" xml:space="preserve">
          <source>Let it control the highlight color with a property binding.</source>
          <target state="translated">Пусть он управляет цветом подсветки с помощью привязки свойств.</target>
        </trans-unit>
        <trans-unit id="004d38bc3d9031d71cb310214ca0b608ad86e5f7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple &lt;code&gt;angular.json&lt;/code&gt; file that puts target configurations into context.</source>
          <target state="translated">Давайте создадим простой файл &lt;code&gt;angular.json&lt;/code&gt; , который помещает целевые конфигурации в контекст.</target>
        </trans-unit>
        <trans-unit id="01795115ab37723d08f0d9b07ef9dfa96d603a40" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at an example that counts from 1 to 3, with a one-second delay after each number emitted.</source>
          <target state="translated">Давайте посмотрим на пример, который насчитывает от 1 до 3 с задержкой в ​​одну секунду после каждого испускаемого числа.</target>
        </trans-unit>
        <trans-unit id="0676c335f0a95ff58af45724e2f7974f94d0ddb5" translate="yes" xml:space="preserve">
          <source>Let's add a new target that will run our builder to execute a particular command. This target will tell the builder to run &lt;code&gt;touch&lt;/code&gt; on a file, in order to update its modified date.</source>
          <target state="translated">Давайте добавим новую цель, которая запустит наш конструктор для выполнения определенной команды. Эта цель скажет сборщику, чтобы он &lt;code&gt;touch&lt;/code&gt; файла, чтобы обновить дату его изменения.</target>
        </trans-unit>
        <trans-unit id="ffd15a05977d9b50a1e2b66ca7733331ed9bd1b5" translate="yes" xml:space="preserve">
          <source>Let's animate a simple transition that changes a single HTML element from one state to another. For example, you can specify that a button displays either &lt;strong&gt;Open&lt;/strong&gt; or &lt;strong&gt;Closed&lt;/strong&gt; based on the user's last action. When the button is in the &lt;code&gt;open&lt;/code&gt; state, it's visible and yellow. When it's the &lt;code&gt;closed&lt;/code&gt; state, it's transparent and green.</source>
          <target state="translated">Давайте оживим простой переход, который изменяет один элемент HTML из одного состояния в другое. Например, вы можете указать, что кнопка отображает либо &lt;strong&gt;Открыто,&lt;/strong&gt; либо &lt;strong&gt;Закрыто в&lt;/strong&gt; зависимости от последнего действия пользователя. Когда кнопка находится в &lt;code&gt;open&lt;/code&gt; состоянии, она видна и желтая. Когда это &lt;code&gt;closed&lt;/code&gt; состояние, оно прозрачное и зеленое.</target>
        </trans-unit>
        <trans-unit id="a182086c861ef403fccc741e4f9e3fffb9b4f5cd" translate="yes" xml:space="preserve">
          <source>Let's assume that we are routing from the &lt;em&gt;Home =&amp;gt; About&lt;/em&gt;.</source>
          <target state="translated">Давайте предположим , что мы маршрутизация от &lt;em&gt;дома =&amp;gt; О&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ee3e3e3afa20d18becc2636614b18f6aaf75e485" translate="yes" xml:space="preserve">
          <source>Let's assume that you have an Angular component called &lt;code&gt;ng2Heroes&lt;/code&gt; that needs to be made available in AngularJS templates.</source>
          <target state="translated">Предположим, у вас есть Angular-компонент &lt;code&gt;ng2Heroes&lt;/code&gt; , который необходимо сделать доступным в шаблонах AngularJS.</target>
        </trans-unit>
        <trans-unit id="3a0e89b617672fce2fabac2e7f5f5850f70a9142" translate="yes" xml:space="preserve">
          <source>Let's assume that you have an AngularJS component called &lt;code&gt;ng1Hero&lt;/code&gt; that needs to be made available in Angular templates.</source>
          <target state="translated">Предположим, у вас есть компонент AngularJS с именем &lt;code&gt;ng1Hero&lt;/code&gt; , который необходимо сделать доступным в шаблонах Angular.</target>
        </trans-unit>
        <trans-unit id="51663bc4d8fc83af90e5716b6dec0d20f693b0a7" translate="yes" xml:space="preserve">
          <source>Let's change the example to display a message if there are more than three heroes.</source>
          <target state="translated">Давайте изменим пример для отображения сообщения,если героев больше трех.</target>
        </trans-unit>
        <trans-unit id="b44579a57df4195be1460c0b0de8ed1fb8e88665" translate="yes" xml:space="preserve">
          <source>Let's illustrate a router transition animation by navigating between two routes, &lt;em&gt;Home&lt;/em&gt; and &lt;em&gt;About&lt;/em&gt; associated with the &lt;code&gt;HomeComponent&lt;/code&gt; and &lt;code&gt;AboutComponent&lt;/code&gt; views respectively. Both of these component views are children of the top-most view, hosted by &lt;code&gt;AppComponent&lt;/code&gt;. We'll implement a router transition animation that slides in the new view to the right and slides out the old view when the user navigates between the two routes.</source>
          <target state="translated">Давайте иллюстрировать анимации перехода маршрутизатора, перемещаясь между двумя путями, &lt;em&gt;Home&lt;/em&gt; и &lt;em&gt;О&lt;/em&gt; , связанные с &lt;code&gt;HomeComponent&lt;/code&gt; и &lt;code&gt;AboutComponent&lt;/code&gt; рассматривает соответственно. Оба этих представления компонентов являются &lt;code&gt;AppComponent&lt;/code&gt; для самого верхнего представления, размещенного в AppComponent . Мы реализуем анимацию перехода маршрутизатора, которая перемещается в новом представлении вправо и выдвигает старое представление, когда пользователь перемещается между двумя маршрутами.</target>
        </trans-unit>
        <trans-unit id="51c9e9bb879b365c74c45744fdcb949bb94a2d8f" translate="yes" xml:space="preserve">
          <source>Let's imagine that instead of logging the counter value, you update a field of your component and display it in its template.</source>
          <target state="translated">Представим себе,что вместо записи значения счетчика,вы обновляете поле своего компонента и отображаете его в шаблоне.</target>
        </trans-unit>
        <trans-unit id="26d1e55048167bc6baaf2e0793fb782ee863e26b" translate="yes" xml:space="preserve">
          <source>Let's imagine that you start a recurrent task (here incrementing a counter, using RxJS &lt;code&gt;interval&lt;/code&gt;), and at the same time subscribe to &lt;code&gt;isStable&lt;/code&gt;.</source>
          <target state="translated">Давайте представим, что вы запускаете повторяющуюся задачу (здесь увеличиваете счетчик, используя &lt;code&gt;interval&lt;/code&gt; RxJS ) и одновременно подписываетесь на &lt;code&gt;isStable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5946821487f82e01968f21fb28ca6f81745022b" translate="yes" xml:space="preserve">
          <source>Let's say you don't want to inject &lt;code&gt;UserService&lt;/code&gt; directly into &lt;code&gt;HeroService&lt;/code&gt;, because you don't want to complicate that service with security-sensitive information. &lt;code&gt;HeroService&lt;/code&gt; won't have direct access to the user information to decide who is authorized and who isn't.</source>
          <target state="translated">Допустим, вы не хотите внедрять &lt;code&gt;UserService&lt;/code&gt; непосредственно в &lt;code&gt;HeroService&lt;/code&gt; , потому что вы не хотите усложнять этот сервис конфиденциальной информацией. &lt;code&gt;HeroService&lt;/code&gt; не будет иметь прямого доступа к пользовательской информации, чтобы решить, кто авторизован, а кто нет.</target>
        </trans-unit>
        <trans-unit id="951a6b55c578c36b78a513bf32b448dca8905f11" translate="yes" xml:space="preserve">
          <source>Let's say you have an AngularJS service:</source>
          <target state="translated">Допустим,у вас есть служба AngularJS:</target>
        </trans-unit>
        <trans-unit id="4227a9febaa50aa231ec79ac6d7a0b59e1802b16" translate="yes" xml:space="preserve">
          <source>Let's see how Angular's &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; function works with the &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;⁣&amp;shy;(⁠)&lt;/code&gt; function to set CSS style attributes. In this code snippet, multiple style attributes are set at the same time for the state. In the &lt;code&gt;open&lt;/code&gt; state, the button has a height of 200 pixels, an opacity of 1, and a background color of yellow.</source>
          <target state="translated">Давайте посмотрим, как функция Angular &lt;code&gt;&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt; работает с функцией &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;⁣&amp;shy;(⁠)&lt;/code&gt; для установки атрибутов стиля CSS. В этом фрагменте кода для состояния одновременно установлено несколько атрибутов стиля. В &lt;code&gt;open&lt;/code&gt; состоянии кнопка имеет высоту 200 пикселей, непрозрачность 1 и желтый цвет фона.</target>
        </trans-unit>
        <trans-unit id="3bfc635473c5d0a274aeaebda63d5676a80f9758" translate="yes" xml:space="preserve">
          <source>Let's see how Angular's &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; function works with the &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;⁣&amp;shy;(⁠)&lt;/code&gt; function to set CSS style attributes. In this code snippet, multiple style attributes are set at the same time for the state. In the &lt;code&gt;open&lt;/code&gt; state, the button has a height of 200 pixels, an opacity of 1, and a background color of yellow.</source>
          <target state="translated">Давайте посмотрим, как функция Angular &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; работает с функцией &lt;code&gt;&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;⁣&amp;shy;(⁠)&lt;/code&gt; для установки атрибутов стиля CSS. В этом фрагменте кода для атрибута состояния одновременно задаются несколько атрибутов стиля. В &lt;code&gt;open&lt;/code&gt; состоянии кнопка имеет высоту 200 пикселей, непрозрачность 1 и желтый цвет фона.</target>
        </trans-unit>
        <trans-unit id="b2ffa03a6796485c7010eeb3285db01c52a7f841" translate="yes" xml:space="preserve">
          <source>Let's start by creating the validator class.</source>
          <target state="translated">Начнем с создания класса валидатора.</target>
        </trans-unit>
        <trans-unit id="99f7276b18539354571fb0b39a65472e8470d3e1" translate="yes" xml:space="preserve">
          <source>Let's take a look at another animation on the live example page. Under the Filter/Stagger tab, enter some text into the &lt;strong&gt;Search Heroes&lt;/strong&gt; text box, such as &lt;code&gt;Magnet&lt;/code&gt; or &lt;code&gt;tornado&lt;/code&gt;.</source>
          <target state="translated">Давайте посмотрим на другую анимацию на странице примера. На вкладке &amp;laquo;Фильтр / Stagger&amp;raquo; введите текст в поле &amp;laquo; &lt;strong&gt;Поиск героев&amp;raquo;&lt;/strong&gt; , например, &amp;laquo; &lt;code&gt;Magnet&lt;/code&gt; или &amp;laquo; &lt;code&gt;tornado&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a78a57bd9b98e941523e213b265835c6bf8b7325" translate="yes" xml:space="preserve">
          <source>Let's take the &lt;code&gt;Hero&lt;/code&gt; routes and migrate them to new URLs. The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; checks for redirects in your configuration before navigating, so each redirect is triggered when needed. To support this change, you'll add redirects from the old routes to the new routes in the &lt;code&gt;heroes-routing.module&lt;/code&gt;.</source>
          <target state="translated">Давайте возьмем маршруты &lt;code&gt;Hero&lt;/code&gt; и перенесем их на новые URL. В &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; проверяет переадресовывает в конфигурации до навигации, так что каждый редирект срабатывает при необходимости. Чтобы поддержать это изменение, вы добавите перенаправления из старых маршрутов в новые маршруты в &lt;code&gt;heroes-routing.module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="731147e6fd716658458f531b1b9ea06ed3c678b7" translate="yes" xml:space="preserve">
          <source>Lets you add a CSS class to an element when the link's route becomes active.</source>
          <target state="translated">Позволяет добавлять CSS класс к элементу,когда маршрут ссылки становится активным.</target>
        </trans-unit>
        <trans-unit id="cc9c5c8e30a394eae9d072458a3e300ebe3613cd" translate="yes" xml:space="preserve">
          <source>Lets you link to specific routes in your app.</source>
          <target state="translated">В вашем приложении вы можете перейти по ссылкам на конкретные маршруты.</target>
        </trans-unit>
        <trans-unit id="185c8d387520a8df821ea96c64127c9ce02efa89" translate="yes" xml:space="preserve">
          <source>Leverage full framework capabilities with Zone.js opt-out</source>
          <target state="translated">Использовать все возможности фреймворка,отказавшись от Zone.js.</target>
        </trans-unit>
        <trans-unit id="3fd4d244695eda3ce03c3906d63aa441208d0648" translate="yes" xml:space="preserve">
          <source>Libraries (unlike applications and their associated e2e projects) have their own &lt;code&gt;package.json&lt;/code&gt; configuration files.</source>
          <target state="translated">Библиотеки (в отличие от приложений и связанных с ними проектов e2e) имеют свои собственные файлы конфигурации &lt;code&gt;package.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="249a68415825c618581383ebd8e77e0d58a9f6d8" translate="yes" xml:space="preserve">
          <source>Libraries are published as &lt;a href=&quot;npm-packages&quot;&gt;npm packages&lt;/a&gt;, usually together with schematics that integrate them with the Angular CLI. To integrate reusable library code into an application, you need to install the package and import the provided functionality where you will use it. For most published Angular libraries, you can use the Angular CLI &lt;code&gt;ng add &amp;lt;lib_name&amp;gt;&lt;/code&gt; command.</source>
          <target state="translated">Библиотеки публикуются в виде &lt;a href=&quot;npm-packages&quot;&gt;пакетов npm&lt;/a&gt; , обычно вместе со схемами, которые интегрируют их с Angular CLI. Чтобы интегрировать повторно используемый библиотечный код в приложение, вам необходимо установить пакет и импортировать предоставленную функциональность там, где вы будете его использовать. Для большинства опубликованных библиотек Angular вы можете использовать команду Angular CLI &lt;code&gt;ng add &amp;lt;lib_name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9699d0766df04c3c3118cb5d84d81f7cbe5b396a" translate="yes" xml:space="preserve">
          <source>Libraries can be updated by their publishers, and also have their own dependencies which need to be kept current. To check for updates to your installed libraries, use the &lt;a href=&quot;cli/update&quot;&gt;&lt;code&gt;ng update&lt;/code&gt; command&lt;/a&gt;.</source>
          <target state="translated">Библиотеки могут обновляться их издателями, а также иметь свои собственные зависимости, которые необходимо поддерживать в актуальном состоянии. Чтобы проверить наличие обновлений для установленных библиотек, используйте &lt;a href=&quot;cli/update&quot;&gt; &lt;code&gt;ng update&lt;/code&gt; команды&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0376bb56d3bac292a79a960dea3ef8945bb90d1d" translate="yes" xml:space="preserve">
          <source>Libraries extend Angular's base functionality. For example, to add &lt;a href=&quot;reactive-forms&quot;&gt;reactive forms&lt;/a&gt; to an app, add the library package using &lt;code&gt;ng add @angular/forms&lt;/code&gt;, then import the &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; from the &lt;code&gt;@angular/forms&lt;/code&gt; library in your application code. Similarly, adding the &lt;a href=&quot;service-worker-intro&quot;&gt;service worker&lt;/a&gt; library to an Angular application is one of the steps for turning an application into a &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;Progressive Web App&lt;/a&gt; (PWA). &lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; is an example of a large, general-purpose library that provides sophisticated, reusable, and adaptable UI components.</source>
          <target state="translated">Библиотеки расширяют базовую функциональность Angular. Например, чтобы добавить &lt;a href=&quot;reactive-forms&quot;&gt;реактивные формы&lt;/a&gt; в приложение, добавьте пакет библиотеки с помощью &lt;code&gt;ng add @angular/forms&lt;/code&gt; , а затем импортируйте &lt;code&gt;&lt;a href=&quot;../api/forms/reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; из библиотеки &lt;code&gt;@angular/forms&lt;/code&gt; в коде приложения. Точно так же добавление библиотеки &lt;a href=&quot;service-worker-intro&quot;&gt;рабочего сервиса&lt;/a&gt; в приложение Angular является одним из шагов по превращению приложения в &lt;a href=&quot;https://developers.google.com/web/progressive-web-apps/&quot;&gt;Progressive Web App&lt;/a&gt; (PWA). &lt;a href=&quot;https://material.angular.io/&quot;&gt;Angular Material&lt;/a&gt; - это пример большой универсальной библиотеки, которая предоставляет сложные, повторно используемые и адаптируемые компоненты пользовательского интерфейса.</target>
        </trans-unit>
        <trans-unit id="0a8fcac923bdc2f041e17f19ca0ee882b12e109e" translate="yes" xml:space="preserve">
          <source>Library developers can use the &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; to &lt;code&gt;generate&lt;/code&gt; scaffolding for a new library in an existing &lt;a href=&quot;glossary#workspace&quot;&gt;workspace&lt;/a&gt;, and can publish a library as an &lt;code&gt;npm&lt;/code&gt; package.</source>
          <target state="translated">Разработчики библиотек могут использовать &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; для &lt;code&gt;generate&lt;/code&gt; строительных лесов для новой библиотеки в существующей &lt;a href=&quot;glossary#workspace&quot;&gt;рабочей области&lt;/a&gt; и могут публиковать библиотеку в виде пакета &lt;code&gt;npm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa66e52846472f9fd27f98294eccf19a26b04dd3" translate="yes" xml:space="preserve">
          <source>Library packages often include typings in &lt;code&gt;.d.ts&lt;/code&gt; files; see examples in &lt;code&gt;node_modules/@angular/material&lt;/code&gt;. If your library's package does not include typings and your IDE complains, you may need to install the library's associated &lt;code&gt;@types/&amp;lt;lib_name&amp;gt;&lt;/code&gt; package.</source>
          <target state="translated">Библиотечные пакеты часто включают в себя наборы в файлах &lt;code&gt;.d.ts&lt;/code&gt; ; см. примеры в &lt;code&gt;node_modules/@angular/material&lt;/code&gt; . Если в пакет вашей библиотеки не входит набор текста и ваша IDE жалуется, вам может потребоваться установить связанный с библиотекой пакет &lt;code&gt;@types/&amp;lt;lib_name&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="369dc2dcfb562bc1b488d8c1c0682319334ebd52" translate="yes" xml:space="preserve">
          <source>Library project files</source>
          <target state="translated">Файлы библиотечных проектов</target>
        </trans-unit>
        <trans-unit id="5caffd27e3ec471b46ded28417241aa0b83195e8" translate="yes" xml:space="preserve">
          <source>Library typings</source>
          <target state="translated">Библиотечные наборы</target>
        </trans-unit>
        <trans-unit id="9e9de5dc714b0ebcdc870442c864fb8d36ef6f88" translate="yes" xml:space="preserve">
          <source>Library-specific &lt;a href=&quot;https://karma-runner.github.io/2.0/config/configuration-file.html&quot;&gt;Karma&lt;/a&gt; configuration.</source>
          <target state="translated">Конфигурация &lt;a href=&quot;https://karma-runner.github.io/2.0/config/configuration-file.html&quot;&gt;кармы&lt;/a&gt; для конкретной библиотеки .</target>
        </trans-unit>
        <trans-unit id="1462d279df315f445494a726cde98792d2ce8e8e" translate="yes" xml:space="preserve">
          <source>Library-specific &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; configuration.</source>
          <target state="translated">Специфичная для &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;библиотеки&lt;/a&gt; конфигурация TSLint .</target>
        </trans-unit>
        <trans-unit id="b7467e05747f314fdd1067fd36131c4e4aa55601" translate="yes" xml:space="preserve">
          <source>Library-specific &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration, including TypeScript and Angular template compiler options. See &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript Configuration&lt;/a&gt;.</source>
          <target state="translated">Специфичная для библиотеки конфигурация &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; , включая параметры компилятора шаблонов TypeScript и Angular. См. &lt;a href=&quot;typescript-configuration&quot;&gt;Конфигурация TypeScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3229609e15436ec51bcf00818a69a84dbc58a0c2" translate="yes" xml:space="preserve">
          <source>License</source>
          <target state="translated">License</target>
        </trans-unit>
        <trans-unit id="e91f6ba4ec02c67a796600daa345b1a2b526d763" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution License 4.0.</source>
          <target state="translated">Лицензия на атрибуцию Creative Commons 4.0.</target>
        </trans-unit>
        <trans-unit id="4e48f698aadae9546857e8298a5bcd17843d6036" translate="yes" xml:space="preserve">
          <source>Lifecycle Hooks</source>
          <target state="translated">Крюки для жизненного цикла</target>
        </trans-unit>
        <trans-unit id="543997ccf23b19cef73c5b0ec7004f7141aabd78" translate="yes" xml:space="preserve">
          <source>Lifecycle event sequence</source>
          <target state="translated">Последовательность событий жизненного цикла</target>
        </trans-unit>
        <trans-unit id="18f610992ae69af4410d455e6cbeb4fbb02b2d58" translate="yes" xml:space="preserve">
          <source>Lifecycle example set</source>
          <target state="translated">Пример жизненного цикла</target>
        </trans-unit>
        <trans-unit id="b958ad9eb9a6b36ba54104b6bc92f5faa443cc61" translate="yes" xml:space="preserve">
          <source>Lifecycle examples</source>
          <target state="translated">Примеры жизненного цикла</target>
        </trans-unit>
        <trans-unit id="37857eb2e2aa8efab7a0ac716f62d18f83e34871" translate="yes" xml:space="preserve">
          <source>Lifecycle hooks</source>
          <target state="translated">Крючки для велосипедов</target>
        </trans-unit>
        <trans-unit id="b4399d677c3a4329e5891e6b3f01426b36bd04ad" translate="yes" xml:space="preserve">
          <source>Lifecycle hooks guide</source>
          <target state="translated">Руководство по крючкам для велосипедов</target>
        </trans-unit>
        <trans-unit id="8ced92a0a018d03498243304ed4b11aebef88de0" translate="yes" xml:space="preserve">
          <source>Lifecycle method called after the view is initialized. For internal use only.</source>
          <target state="translated">Метод жизненного цикла,вызываемый после инициализации представления.Только для внутреннего использования.</target>
        </trans-unit>
        <trans-unit id="8bcc83c9b4f7ee797688986e365040d42abe8375" translate="yes" xml:space="preserve">
          <source>Lifecycle method called before the directive's instance is destroyed. For internal use only.</source>
          <target state="translated">Метод жизненного цикла,вызываемый перед уничтожением экземпляра директивы.Только для внутреннего использования.</target>
        </trans-unit>
        <trans-unit id="c76a477802c13c19852bc378c8dbbea9cf0b4d8f" translate="yes" xml:space="preserve">
          <source>Lifecycle sequence</source>
          <target state="translated">Последовательность жизненного цикла</target>
        </trans-unit>
        <trans-unit id="4c3ad870fd2ee3048b365677c3d250426730e41f" translate="yes" xml:space="preserve">
          <source>Lightweight injection tokens are only useful with components. The Angular style guide suggests that you name components using the &quot;Component&quot; suffix. The example &quot;LibHeaderComponent&quot; follows this convention.</source>
          <target state="translated">Легкие жетоны для впрыска полезны только с компонентами.В руководстве по угловому стилю предлагается называть компоненты с помощью суффикса &quot;Компонент&quot;.Пример &quot;LibHeaderComponent&quot; следует этой конвенции.</target>
        </trans-unit>
        <trans-unit id="df16d57ee0cc4cdc69baadd4526493b4e9b3cea2" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;interpolation&quot;&gt;template expressions&lt;/a&gt;, template statements use a language that looks like JavaScript. However, the parser for template statements differs from the parser for template expressions. In addition, the template statements parser specifically supports both basic assignment, &lt;code&gt;=&lt;/code&gt;, and chaining expressions with semicolons, &lt;code&gt;;&lt;/code&gt;.</source>
          <target state="translated">Как и в &lt;a href=&quot;interpolation&quot;&gt;выражениях&lt;/a&gt; шаблонов, в операторах шаблонов используется язык, похожий на JavaScript. Однако синтаксический анализатор шаблонных операторов отличается от синтаксического анализатора шаблонных выражений. Кроме того, заявление шаблон парсер специально поддерживает как основное назначение, &lt;code&gt;=&lt;/code&gt; и цепочка выражений с запятой, &lt;code&gt;;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbd1175e41951b23bc6a03577b221bca30219cd8" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;toh-pt4#observable-heroservice&quot;&gt;&lt;code&gt;getHeroes()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;getHero()&lt;/code&gt; has an asynchronous signature. It returns a &lt;em&gt;mock hero&lt;/em&gt; as an &lt;code&gt;Observable&lt;/code&gt;, using the RxJS &lt;code&gt;of()&lt;/code&gt; function.</source>
          <target state="translated">Как и &lt;a href=&quot;toh-pt4#observable-heroservice&quot;&gt; &lt;code&gt;getHeroes()&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;getHero()&lt;/code&gt; имеет асинхронную подпись. Он возвращает &lt;em&gt;фиктивного героя&lt;/em&gt; в качестве &lt;code&gt;Observable&lt;/code&gt; , используя функцию RxJS &lt;code&gt;of()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f813a9b214ba457adfc3f3b7f635326573cb767b" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;../api/common/http/jsonpinterceptor#intercept&quot;&gt;intercept()&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;handle()&lt;/code&gt; method transforms an HTTP request into an &lt;code&gt;Observable&lt;/code&gt; of &lt;a href=&quot;http#httpevents&quot;&gt;&lt;code&gt;HttpEvents&lt;/code&gt;&lt;/a&gt; which ultimately include the server's response. The &lt;code&gt;&lt;a href=&quot;../api/common/http/jsonpinterceptor#intercept&quot;&gt;intercept()&lt;/a&gt;&lt;/code&gt; method could inspect that observable and alter it before returning it to the caller.</source>
          <target state="translated">Как и &lt;code&gt;&lt;a href=&quot;../api/common/http/jsonpinterceptor#intercept&quot;&gt;intercept()&lt;/a&gt;&lt;/code&gt; , метод &lt;code&gt;handle()&lt;/code&gt; преобразует HTTP-запрос в &lt;code&gt;Observable&lt;/code&gt; of &lt;a href=&quot;http#httpevents&quot;&gt; &lt;code&gt;HttpEvents&lt;/code&gt; ,&lt;/a&gt; который в конечном итоге включает ответ сервера. Метод &lt;code&gt;&lt;a href=&quot;../api/common/http/jsonpinterceptor#intercept&quot;&gt;intercept()&lt;/a&gt;&lt;/code&gt; может проверить это наблюдаемое и изменить его, прежде чем вернуть вызывающему.</target>
        </trans-unit>
        <trans-unit id="cac87216a54ce1ed331461ec55435eb45df8962d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instances, you choose to pass in validators and async validators as part of an options object.</source>
          <target state="translated">Как и экземпляры &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; , вы выбираете передачу валидаторов и асинхронных валидаторов как часть объекта параметров.</target>
        </trans-unit>
        <trans-unit id="59351fc10bef4908180431ddc9136fdd2825ec9d" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;EvenBetterLogger&lt;/code&gt;, &lt;code&gt;HeroService&lt;/code&gt; needs to know if the user is authorized to see secret heroes. That authorization can change during the course of a single application session, as when you log in a different user.</source>
          <target state="translated">Как и &lt;code&gt;EvenBetterLogger&lt;/code&gt; , &lt;code&gt;HeroService&lt;/code&gt; необходимо знать, авторизован ли пользователь для просмотра секретных героев. Эта авторизация может измениться в течение одного сеанса приложения, как при входе в систему другого пользователя.</target>
        </trans-unit>
        <trans-unit id="daf09706446fb58188e9e62e06dc4a762e1c0cea" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;intercept()&lt;/code&gt;, the &lt;code&gt;handle()&lt;/code&gt; method transforms an HTTP request into an &lt;code&gt;Observable&lt;/code&gt; of &lt;a href=&quot;http#interceptor-events&quot;&gt;&lt;code&gt;HttpEvents&lt;/code&gt;&lt;/a&gt; which ultimately include the server's response. The &lt;code&gt;intercept()&lt;/code&gt; method could inspect that observable and alter it before returning it to the caller.</source>
          <target state="translated">Как &lt;code&gt;intercept()&lt;/code&gt; , то &lt;code&gt;handle()&lt;/code&gt; метод преобразует запрос HTTP в &lt;code&gt;Observable&lt;/code&gt; из &lt;a href=&quot;http#interceptor-events&quot;&gt; &lt;code&gt;HttpEvents&lt;/code&gt; &lt;/a&gt; , который в конечном счете , включает в себя ответ сервера. Метод &lt;code&gt;intercept()&lt;/code&gt; может проверить этот наблюдаемый и изменить его, прежде чем вернуть его вызывающему.</target>
        </trans-unit>
        <trans-unit id="2712b30047f7466a2e4dc145651016587aaff9e5" translate="yes" xml:space="preserve">
          <source>Like JavaScript modules, NgModules can import functionality from other NgModules, and allow their own functionality to be exported and used by other NgModules. For example, to use the router service in your app, you import the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; NgModule.</source>
          <target state="translated">Как и модули JavaScript, NgModules могут импортировать функциональность из других NgModules, и позволяют экспортировать и использовать их собственные функции другими NgModules. Например, чтобы использовать службу роутера в вашем приложении, вы импортируете &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; NgModule.</target>
        </trans-unit>
        <trans-unit id="9c551f24bba1fc42974492065f7f565414accad5" translate="yes" xml:space="preserve">
          <source>Like a &lt;a href=&quot;glossary#module&quot;&gt;JavaScript module&lt;/a&gt;, an NgModule can export functionality for use by other NgModules and import public functionality from other NgModules. The metadata for an NgModule class collects components, directives, and pipes that the application uses along with the list of imports and exports. See also &lt;a href=&quot;glossary#declarable&quot;&gt;declarable&lt;/a&gt;.</source>
          <target state="translated">Как и &lt;a href=&quot;glossary#module&quot;&gt;модуль JavaScript&lt;/a&gt; , NgModule может экспортировать функциональные возможности для использования другими NgModules и импортировать открытые функциональные возможности из других NgModules. Метаданные для класса NgModule собирают компоненты, директивы и каналы, которые приложение использует вместе со списком импорта и экспорта. Смотрите также &lt;a href=&quot;glossary#declarable&quot;&gt;декларируемый&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="585189adbddf6995a44ae66c57e2a58943711031" translate="yes" xml:space="preserve">
          <source>Like all routers, it needs a place in the UI to display routed views. For Angular that's the &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; and it belongs in a &lt;em&gt;root component&lt;/em&gt; at the top of the applications component tree.</source>
          <target state="translated">Как и всем маршрутизаторам, ему нужно место в пользовательском интерфейсе для отображения маршрутизированных представлений. Для Angular это &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; и он принадлежит &lt;em&gt;корневому компоненту&lt;/em&gt; вверху дерева компонентов приложения.</target>
        </trans-unit>
        <trans-unit id="e9fb86eb5b7b244ce3a393d7bf88fb154e10ed44" translate="yes" xml:space="preserve">
          <source>Like any complex system, bugs or broken configurations can cause the Angular service worker to act in unforeseen ways. While its design attempts to minimize the impact of such problems, the Angular service worker contains several failsafe mechanisms in case an administrator ever needs to deactivate the service worker quickly.</source>
          <target state="translated">Как и любая сложная система,ошибки или неисправные конфигурации могут привести к тому,что работник службы Angular будет действовать непредвиденным образом.В то время как его конструкция пытается свести к минимуму влияние подобных проблем,работник сервиса Angular содержит несколько отказоустойчивых механизмов на случай,если администратору когда-нибудь понадобится быстро деактивировать работника сервиса.</target>
        </trans-unit>
        <trans-unit id="91b6a9c73693ab7273fd7bd5232e5b0489fdfe05" translate="yes" xml:space="preserve">
          <source>Like in AngularJS, Angular automatically mirrors many control properties onto the form control element as CSS classes. You can use these classes to style form control elements according to the state of the form. The following classes are currently supported:</source>
          <target state="translated">Как и в AngularJS,Angular автоматически зеркалирует многие управляющие свойства на элемент управления формой в виде CSS-классов.Вы можете использовать эти классы для стилизации элементов управления формы в соответствии с состоянием формы.В настоящее время поддерживаются следующие классы:</target>
        </trans-unit>
        <trans-unit id="6ba9bb36f4f12f28285f91a1591a915e06d43a4b" translate="yes" xml:space="preserve">
          <source>Like most shells, the &lt;code&gt;CrisisCenterComponent&lt;/code&gt; class is minimal because it has no business logic, and its template has no links, just a title and &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; for the crisis center child component.</source>
          <target state="translated">Как и большинство оболочек, класс &lt;code&gt;CrisisCenterComponent&lt;/code&gt; минимален, потому что у него нет бизнес-логики, а в его шаблоне нет ссылок, только заголовок и &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; для дочернего компонента кризисного центра.</target>
        </trans-unit>
        <trans-unit id="d328b7053c6feca70f5f37fd0b1b8634858620c3" translate="yes" xml:space="preserve">
          <source>Like most shells, the &lt;code&gt;CrisisCenterComponent&lt;/code&gt; class is very simple, simpler even than &lt;code&gt;AppComponent&lt;/code&gt;: it has no business logic, and its template has no links, just a title and &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; for the crisis center child component.</source>
          <target state="translated">Как и большинство оболочек, класс &lt;code&gt;CrisisCenterComponent&lt;/code&gt; очень прост, даже проще, чем &lt;code&gt;AppComponent&lt;/code&gt; : у него нет бизнес-логики, а в шаблоне нет ссылок, только заголовок и &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; для дочернего компонента кризисного центра.</target>
        </trans-unit>
        <trans-unit id="ad5fbe7de515867968271cf92da0ab219dfe53ce" translate="yes" xml:space="preserve">
          <source>Like regular outlets, secondary outlets persists until you navigate away to a new component.</source>
          <target state="translated">Как и обычные розетки,вторичные розетки сохраняются до тех пор,пока вы не перейдете к новому компоненту.</target>
        </trans-unit>
        <trans-unit id="3c960f51394e20fb877a0120ae9db80a6aba3cf3" translate="yes" xml:space="preserve">
          <source>Like template expressions, template &lt;em&gt;statements&lt;/em&gt; use a language that looks like JavaScript. The template statement parser differs from the template expression parser and specifically supports both basic assignment (&lt;code&gt;=&lt;/code&gt;) and chaining expressions (with &lt;code&gt;;&lt;/code&gt; or &lt;code&gt;,&lt;/code&gt;).</source>
          <target state="translated">Как и выражения шаблонов, &lt;em&gt;операторы&lt;/em&gt; шаблонов используют язык, похожий на JavaScript. Анализатор операторов шаблона отличается от синтаксического анализатора выражений шаблона и, в частности, поддерживает как базовые выражения присваивания ( &lt;code&gt;=&lt;/code&gt; ), так и выражения цепочки (с &lt;code&gt;;&lt;/code&gt; или &lt;code&gt;,&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="83341afc572aa00f0348ef8d662d360d9825cc0f" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;ng serve&lt;/code&gt; command, this regenerates output files when source files change.</source>
          <target state="translated">Как и команда &lt;code&gt;ng serve&lt;/code&gt; , она восстанавливает выходные файлы при изменении исходных файлов.</target>
        </trans-unit>
        <trans-unit id="4690ba435c1d9c2e19677d724dba0cd8f8b810f8" translate="yes" xml:space="preserve">
          <source>Like the TypeScript compiler, The Angular AOT compiler also supports &lt;code&gt;extends&lt;/code&gt; in the &lt;code&gt;angularCompilerOptions&lt;/code&gt; section of the TypeScript configuration file. The &lt;code&gt;extends&lt;/code&gt; property is at the top level, parallel to &lt;code&gt;compilerOptions&lt;/code&gt; and &lt;code&gt;angularCompilerOptions&lt;/code&gt;.</source>
          <target state="translated">Как компилятор машинописи, Угловое AOT компилятор поддерживает также &lt;code&gt;extends&lt;/code&gt; в &lt;code&gt;angularCompilerOptions&lt;/code&gt; секции конфигурационного файла машинопись. Свойство &lt;code&gt;extends&lt;/code&gt; находится на верхнем уровне, параллельно &lt;code&gt;compilerOptions&lt;/code&gt; и &lt;code&gt;angularCompilerOptions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9eb90305b666c99c946bb5838a4ddc083cb67f27" translate="yes" xml:space="preserve">
          <source>Like the TypeScript compiler, The Angular AoT compiler also supports &lt;code&gt;extends&lt;/code&gt; in the &lt;code&gt;angularCompilerOptions&lt;/code&gt; section of the TypeScript configuration file, &lt;code&gt;tsconfig.json&lt;/code&gt;. The &lt;code&gt;extends&lt;/code&gt; property is at the top level, parallel to &lt;code&gt;compilerOptions&lt;/code&gt; and &lt;code&gt;angularCompilerOptions&lt;/code&gt;.</source>
          <target state="translated">Как компилятор машинописи, Угловое AoT компилятор поддерживает также &lt;code&gt;extends&lt;/code&gt; в &lt;code&gt;angularCompilerOptions&lt;/code&gt; секции конфигурационного файла машинопись, &lt;code&gt;tsconfig.json&lt;/code&gt; . Свойство &lt;code&gt;extends&lt;/code&gt; находится на верхнем уровне, параллельно &lt;code&gt;compilerOptions&lt;/code&gt; и &lt;code&gt;angularCompilerOptions&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e6fbfb2e44912c9fae79f4fff1fd632c52f34ac5" translate="yes" xml:space="preserve">
          <source>Like the array bound to the &lt;em&gt;Contact&lt;/em&gt;&lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;AppComponent&lt;/code&gt;, this one includes an object with an &lt;code&gt;outlets&lt;/code&gt; property. The &lt;code&gt;outlets&lt;/code&gt; property value is another object with outlet names for keys. The only named outlet is &lt;code&gt;'popup'&lt;/code&gt;.</source>
          <target state="translated">Как и массив, связанный с &lt;em&gt;Contact &lt;/em&gt; &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;AppComponent&lt;/code&gt; , этот объект включает в себя объект со свойством &lt;code&gt;outlets&lt;/code&gt; . Значение свойства &lt;code&gt;outlets&lt;/code&gt; - это еще один объект с именами розеток для ключей. Единственный названный выход - &lt;code&gt;'popup'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71038456701c3916973173203244b127960e1aa5" translate="yes" xml:space="preserve">
          <source>Limit &lt;a href=&quot;aot-compiler#expression-syntax&quot;&gt;expression syntax&lt;/a&gt; to the supported subset of JavaScript.</source>
          <target state="translated">Ограничьте &lt;a href=&quot;aot-compiler#expression-syntax&quot;&gt;синтаксис выражения&lt;/a&gt; поддерживаемым подмножеством JavaScript.</target>
        </trans-unit>
        <trans-unit id="aeed6a8852492bee7de657e7a04fde558cde0b38" translate="yes" xml:space="preserve">
          <source>Limit service scope to a component subtree</source>
          <target state="translated">Ограничение объема услуг на компонентное поддерево</target>
        </trans-unit>
        <trans-unit id="673e281991136d9d7e9c64e2f080eb1b1ecac1ef" translate="yes" xml:space="preserve">
          <source>Limitation: The &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; function won't work if the test body makes an &lt;code&gt;XMLHttpRequest&lt;/code&gt; (XHR) call. XHR calls within a test are rare, but if you need to call XHR, see &lt;a href=&quot;testing#async&quot;&gt;&lt;code&gt;async()&lt;/code&gt;&lt;/a&gt;, below.</source>
          <target state="translated">Ограничение: &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; не будет работать, если тело теста выполняет вызов &lt;code&gt;XMLHttpRequest&lt;/code&gt; (XHR). Вызовы XHR в тесте редки, но если вам нужно вызвать XHR, см. &lt;a href=&quot;testing#async&quot;&gt; &lt;code&gt;async()&lt;/code&gt; &lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="0d0f482405b1ca09a504168b85c0821c0a7b2c58" translate="yes" xml:space="preserve">
          <source>Limitation: The &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; function won't work if the test body makes an &lt;code&gt;XMLHttpRequest&lt;/code&gt; (XHR) call. XHR calls within a test are rare, but if you need to call XHR, see &lt;a href=&quot;testing-components-scenarios#waitForAsync&quot;&gt;&lt;code&gt;waitForAsync()&lt;/code&gt;&lt;/a&gt;, below.</source>
          <target state="translated">Ограничение: &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; не будет работать, если тело теста выполняет вызов &lt;code&gt;XMLHttpRequest&lt;/code&gt; (XHR). Вызовы XHR в тесте редки, но если вам нужно вызвать XHR, см. &lt;a href=&quot;testing-components-scenarios#waitForAsync&quot;&gt; &lt;code&gt;waitForAsync()&lt;/code&gt; &lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="ded306388332ec989fda506a02d51aba128c7138" translate="yes" xml:space="preserve">
          <source>Limiting provider scope by lazy loading modules</source>
          <target state="translated">Ограничение возможностей провайдера ленивыми загрузочными модулями</target>
        </trans-unit>
        <trans-unit id="89ab768d7c5f66203eca0f427be89355c7490b9e" translate="yes" xml:space="preserve">
          <source>Limiting provider scope with components</source>
          <target state="translated">Ограничение сферы деятельности поставщика компонентами</target>
        </trans-unit>
        <trans-unit id="dafc778c795eaafcbc7950d059ea632b0bbed413" translate="yes" xml:space="preserve">
          <source>Link parameters array</source>
          <target state="translated">Массив параметров ссылок</target>
        </trans-unit>
        <trans-unit id="ebeeb12b89ea951a3d70569f3a883c5068bcd2c5" translate="yes" xml:space="preserve">
          <source>Link tag</source>
          <target state="translated">Ссылочная бирка</target>
        </trans-unit>
        <trans-unit id="05a4c3bd058773e937f5a60f7f7a6ac340bd0ee8" translate="yes" xml:space="preserve">
          <source>Link the library</source>
          <target state="translated">Связать библиотеку</target>
        </trans-unit>
        <trans-unit id="e95ec7effe5117842199bf6a8a33372713843750" translate="yes" xml:space="preserve">
          <source>Linked libraries</source>
          <target state="translated">Связанные библиотеки</target>
        </trans-unit>
        <trans-unit id="5abd1d8d73b4555d463bfb879da84e8d8357edc1" translate="yes" xml:space="preserve">
          <source>List Example</source>
          <target state="translated">Пример списка</target>
        </trans-unit>
        <trans-unit id="fe441653b156494ea24f494a301178e5b59c44e7" translate="yes" xml:space="preserve">
          <source>List heroes with &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Список героев с &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9554ab96c5780c8e77824d964ff8ec18697124d1" translate="yes" xml:space="preserve">
          <source>List of additional NgModule files that will be lazy loaded. Lazy router modules will be discovered automatically.</source>
          <target state="translated">Список дополнительных файлов NgModule,которые будут лениво загружаться.Ленивые модули маршрутизаторов будут обнаружены автоматически.</target>
        </trans-unit>
        <trans-unit id="cbce62cc871e24eefa3b59c5e93efe28fffa5a14" translate="yes" xml:space="preserve">
          <source>List of components not referenced in any reachable template, for example dynamically created from code.</source>
          <target state="translated">Список компонентов,на которые нет ссылок в каком-либо доступном шаблоне,например,динамически созданный из кода.</target>
        </trans-unit>
        <trans-unit id="efe7666b861fee17fb6c8a4c39c06756c03bb105" translate="yes" xml:space="preserve">
          <source>List of components to bootstrap when this module is bootstrapped.</source>
          <target state="translated">Список компонентов для загрузки при загрузке этого модуля.</target>
        </trans-unit>
        <trans-unit id="4095ea4985f0e38f002f69cf452dec18fa4bd79e" translate="yes" xml:space="preserve">
          <source>List of components, directives, and pipes that belong to this module.</source>
          <target state="translated">Список компонентов,директив и труб,которые принадлежат этому модулю.</target>
        </trans-unit>
        <trans-unit id="c889ce564a34bf3ed0a510d34b49b021f11d1487" translate="yes" xml:space="preserve">
          <source>List of components, directives, and pipes visible to modules that import this module.</source>
          <target state="translated">Список компонентов,директив и труб,видимых для модулей,импортирующих этот модуль.</target>
        </trans-unit>
        <trans-unit id="d1207345ca32d222a8e432068269adabe143d033" translate="yes" xml:space="preserve">
          <source>List of dependency injection providers for this directive and its children.</source>
          <target state="translated">Список поставщиков инъекций с зависимостью для этой директивы и ее детей.</target>
        </trans-unit>
        <trans-unit id="fe1604c69069d34dff1de4bebbd2c00d202aad46" translate="yes" xml:space="preserve">
          <source>List of dependency injection providers scoped to this component's view.</source>
          <target state="translated">Список провайдеров инъекций с зависимостями просмотрен для этого компонента.</target>
        </trans-unit>
        <trans-unit id="0764d9c4b1ea0aa7ca88575f1383a8a28c5e17ce" translate="yes" xml:space="preserve">
          <source>List of dependency injection providers visible both to the contents of this module and to importers of this module.</source>
          <target state="translated">Список провайдеров инъекций зависимостей,видимых как для содержимого этого модуля,так и для импортеров этого модуля.</target>
        </trans-unit>
        <trans-unit id="1f045cc2a6aef9ce1b80467ca9aa73e97e4a5cf7" translate="yes" xml:space="preserve">
          <source>List of hosts that are allowed to access the dev server.</source>
          <target state="translated">Список хостов,которым разрешен доступ к серверу Dev.</target>
        </trans-unit>
        <trans-unit id="1705616178a33f362179ee1acbbd208dd8db8f30" translate="yes" xml:space="preserve">
          <source>List of inline CSS styles or external stylesheet URLs for styling the component&amp;rsquo;s view.</source>
          <target state="translated">Список встроенных стилей CSS или URL внешних таблиц стилей для стилизации вида компонента.</target>
        </trans-unit>
        <trans-unit id="f5d4fc5e3688560af7a94670d8c7f9b85064b9c2" translate="yes" xml:space="preserve">
          <source>List of modules to import into this module. Everything from the imported modules is available to &lt;code&gt;declarations&lt;/code&gt; of this module.</source>
          <target state="translated">Список модулей для импорта в этот модуль. Все из импортированных модулей доступно для &lt;code&gt;declarations&lt;/code&gt; этого модуля.</target>
        </trans-unit>
        <trans-unit id="f0d5e8ade3dc66891a3b11ab132029d51b67ca80" translate="yes" xml:space="preserve">
          <source>List the generated bundles in the &lt;code&gt;dist/&lt;/code&gt; folder.</source>
          <target state="translated">Список сгенерированных пакетов в папке &lt;code&gt;dist/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="beb3e6d282efa5be1b17ff0ef3d00e6cf72f51b8" translate="yes" xml:space="preserve">
          <source>List the generated bundles in the &lt;code&gt;dist/project-name/&lt;/code&gt; folder.</source>
          <target state="translated">Перечислите сгенерированные пакеты в папке &lt;code&gt;dist/project-name/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="73d6d61553d6923f0e56af93936294f91739b3f9" translate="yes" xml:space="preserve">
          <source>List-item separator. Example: &quot;one, two, and three&quot;</source>
          <target state="translated">Разделитель листов.Пример:&quot;раз,два и три&quot;</target>
        </trans-unit>
        <trans-unit id="f819e377af6a253cf7b15c400531f8b31594b0b4" translate="yes" xml:space="preserve">
          <source>Listed below are the base classes and services used to create and manage form controls.</source>
          <target state="translated">Ниже перечислены базовые классы и сервисы,используемые для создания и управления элементами контроля форм.</target>
        </trans-unit>
        <trans-unit id="a90c21e873b5d8262d59496442bc0220f95054ad" translate="yes" xml:space="preserve">
          <source>Listen for data from an input.</source>
          <target state="translated">Прослушайте данные из входа.</target>
        </trans-unit>
        <trans-unit id="148541005c620fc1e1bb09453d368cfc1c05ad83" translate="yes" xml:space="preserve">
          <source>Listen for keystrokes, but provide a stream representing the value in the input.</source>
          <target state="translated">Прослушайте нажатия клавиш,но предоставьте поток,представляющий значение на входе.</target>
        </trans-unit>
        <trans-unit id="37ea46b5942beaeb21bb4e06a14e4f7232d2a1b0" translate="yes" xml:space="preserve">
          <source>Listener</source>
          <target state="translated">Listener</target>
        </trans-unit>
        <trans-unit id="a6bab703979ffded38cb18ceafb2498266b4ba40" translate="yes" xml:space="preserve">
          <source>Listening for form submission</source>
          <target state="translated">Прослушивание для подачи формы</target>
        </trans-unit>
        <trans-unit id="de906cfc91b32a32df4f149847ed0a39eecca3f3" translate="yes" xml:space="preserve">
          <source>Listening to progress events</source>
          <target state="translated">Прослушивание информации о ходе работы</target>
        </trans-unit>
        <trans-unit id="f9528c7fd458964ab7b0b92b633774bce83a6ea7" translate="yes" xml:space="preserve">
          <source>Listens for an element change event.</source>
          <target state="translated">Слушает событие смены элемента.</target>
        </trans-unit>
        <trans-unit id="461c42998bd4b841c62ede37f929ff1a1b0ebff3" translate="yes" xml:space="preserve">
          <source>Lists CSS files that supply styles for a project. The extension reflects the style preprocessor you have configured for the project.</source>
          <target state="translated">Списки CSS-файлов,поставляющих стили для проекта.Расширение отражает стиль препроцессора,который вы настроили для проекта.</target>
        </trans-unit>
        <trans-unit id="4155cc0df13221795a620210d3c6cbdaea741275" translate="yes" xml:space="preserve">
          <source>Lists available commands and their short descriptions.</source>
          <target state="translated">Списки доступных команд и их краткое описание.</target>
        </trans-unit>
        <trans-unit id="16ed44692d8ad77b79438ff89f70547bfc2c8f59" translate="yes" xml:space="preserve">
          <source>Literal array</source>
          <target state="translated">буквальный массив</target>
        </trans-unit>
        <trans-unit id="5e5d6608e9c1043b497854f14ddd3f434365adbb" translate="yes" xml:space="preserve">
          <source>Literal boolean</source>
          <target state="translated">буквально логический</target>
        </trans-unit>
        <trans-unit id="aefb6c535c633d3fd4c244f05f9150051f95d764" translate="yes" xml:space="preserve">
          <source>Literal null</source>
          <target state="translated">буквальный ноль</target>
        </trans-unit>
        <trans-unit id="f09a5cb4fe044da34e2089937646a3266bcb0772" translate="yes" xml:space="preserve">
          <source>Literal number</source>
          <target state="translated">Буквальное число</target>
        </trans-unit>
        <trans-unit id="e873017807fac060c5a6a2540134ecd7af88ac3a" translate="yes" xml:space="preserve">
          <source>Literal object</source>
          <target state="translated">Буквальный предмет</target>
        </trans-unit>
        <trans-unit id="0dd2df3bdd58ea3fee6371ca12874b46ac5a08a5" translate="yes" xml:space="preserve">
          <source>Literal string</source>
          <target state="translated">Буквальная строка</target>
        </trans-unit>
        <trans-unit id="b57452dc90c7272633a6e55b09bbe97b6fc736c0" translate="yes" xml:space="preserve">
          <source>Live Example for named Stackblitz</source>
          <target state="translated">Живой пример для имени Stackblitz</target>
        </trans-unit>
        <trans-unit id="388c9001eb6fdc7be89eee00a249fe06fb40880d" translate="yes" xml:space="preserve">
          <source>Live Example with download-only</source>
          <target state="translated">Живой пример только для скачивания</target>
        </trans-unit>
        <trans-unit id="07ff11a723e5a565044db2e9077a5159e72c2853" translate="yes" xml:space="preserve">
          <source>Live Example without download</source>
          <target state="translated">Живой пример без скачивания</target>
        </trans-unit>
        <trans-unit id="15dae1e0d363cb6cbea91c5b210a73bf0dfaf3ce" translate="yes" xml:space="preserve">
          <source>Live example from another guide</source>
          <target state="translated">Живой пример из другого путеводителя</target>
        </trans-unit>
        <trans-unit id="7df310a49c994290ecfc7e21b62d9c4caf2a0804" translate="yes" xml:space="preserve">
          <source>Live example with content label</source>
          <target state="translated">Живой пример с ярлыком контента</target>
        </trans-unit>
        <trans-unit id="d66c6803c67f60624e428beacade6cb10972157a" translate="yes" xml:space="preserve">
          <source>Live examples</source>
          <target state="translated">Живые примеры</target>
        </trans-unit>
        <trans-unit id="8a7981f020f2c3393efbc6bb8b6d8826836467e9" translate="yes" xml:space="preserve">
          <source>Live examples (AKA &quot;stackblitz&quot;) are defined by one or more &lt;code&gt;stackblitz.json&lt;/code&gt; files in the root of a code sample folder. Each sample folder usually has a single unnamed definition file, the default &lt;code&gt;stackblitz.json&lt;/code&gt;.</source>
          <target state="translated">Живые примеры (AKA &quot;stackblitz&quot;) определяются одним или несколькими файлами &lt;code&gt;stackblitz.json&lt;/code&gt; в корне папки с примерами кода. Каждая папка с &lt;code&gt;stackblitz.json&lt;/code&gt; обычно имеет один безымянный файл определения, по умолчанию stackblitz.json .</target>
        </trans-unit>
        <trans-unit id="c411dac4ba609b8397b10861a22cedb488ad6bfe" translate="yes" xml:space="preserve">
          <source>Load the module lazily if you can. Angular gives a &lt;a href=&quot;ngmodule-faq#q-lazy-loaded-module-provider-visibility&quot;&gt;lazy-loaded module&lt;/a&gt; its own child injector. The module's providers are visible only within the component tree created with this injector.</source>
          <target state="translated">Загрузите модуль лениво, если можете. Angular дает &lt;a href=&quot;ngmodule-faq#q-lazy-loaded-module-provider-visibility&quot;&gt;модулю&lt;/a&gt; с отложенной загрузкой собственный дочерний инжектор. Поставщики модуля видны только внутри дерева компонентов, созданного с помощью этого инжектора.</target>
        </trans-unit>
        <trans-unit id="855626215880fd7dea9a3f607d78c18204bfbf46" translate="yes" xml:space="preserve">
          <source>Load the router library.</source>
          <target state="translated">Загрузите библиотеку маршрутизаторов.</target>
        </trans-unit>
        <trans-unit id="2fc4426cd416a32214c9b3b17bd86f3d1c1570cf" translate="yes" xml:space="preserve">
          <source>LoadChildren</source>
          <target state="translated">LoadChildren</target>
        </trans-unit>
        <trans-unit id="9f0b098c811d75663f50ef7845bc4eb008bd71e1" translate="yes" xml:space="preserve">
          <source>LoadChildrenCallback</source>
          <target state="translated">LoadChildrenCallback</target>
        </trans-unit>
        <trans-unit id="31112e015bc59afed4d726bc9b3b2423316d6d0e" translate="yes" xml:space="preserve">
          <source>Loading component styles</source>
          <target state="translated">Стиль загружаемых компонентов</target>
        </trans-unit>
        <trans-unit id="35b7de4928575370e540a435aa94cc96210fd6a0" translate="yes" xml:space="preserve">
          <source>Loading components</source>
          <target state="translated">Загрузочные компоненты</target>
        </trans-unit>
        <trans-unit id="ef1b3efd0750b6cb1d1bea14f88b3643b10ef11c" translate="yes" xml:space="preserve">
          <source>Loading external stylesheets is a blocking operation, which means that the browser can&amp;rsquo;t start rendering your application until it loads all the referenced CSS. Having render-blocking resources in the header of a page can significantly impact its load performance, for example, its &lt;a href=&quot;https://web.dev/first-contentful-paint/&quot;&gt;first contentful paint&lt;/a&gt;. To make apps faster, we&amp;rsquo;ve been collaborating with the Google Chrome team on inlining critical CSS and loading the rest of the styles asynchronously.</source>
          <target state="translated">Загрузка внешних таблиц стилей является блокирующей операцией, что означает, что браузер не может начать рендеринг вашего приложения, пока не загрузит весь CSS, на который есть ссылка. Наличие ресурсов, блокирующих рендеринг, в заголовке страницы может значительно повлиять на производительность ее загрузки, например, на ее &lt;a href=&quot;https://web.dev/first-contentful-paint/&quot;&gt;первую отрисовку содержимого&lt;/a&gt; . Чтобы сделать приложения быстрее, мы сотрудничаем с командой Google Chrome над встраиванием критически важного CSS и асинхронной загрузкой остальных стилей.</target>
        </trans-unit>
        <trans-unit id="f359a44a5b3782750e70ce88ac64b11e5f3123ba" translate="yes" xml:space="preserve">
          <source>Local development in older browsers</source>
          <target state="translated">Локальное развитие в старых браузерах</target>
        </trans-unit>
        <trans-unit id="d1e5308b3d59fa3cd12e651dd78e919dc9761776" translate="yes" xml:space="preserve">
          <source>Local references to DOM elements.</source>
          <target state="translated">Локальные ссылки на элементы DOM.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
