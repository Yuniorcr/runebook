<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="834aabaa20612a9062cae3e29b9e961cdcdb7ef5" translate="yes" xml:space="preserve">
          <source>The second argument in the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method takes an object for additional configuration options. The &lt;code&gt;&lt;a href=&quot;../api/router/extraoptions#preloadingStrategy&quot;&gt;preloadingStrategy&lt;/a&gt;&lt;/code&gt; is one of those options. Add the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; token to the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; call:</source>
          <target state="translated">Второй аргумент в &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; принимает объект для дополнительных параметров конфигурации. &lt;code&gt;&lt;a href=&quot;../api/router/extraoptions#preloadingStrategy&quot;&gt;preloadingStrategy&lt;/a&gt;&lt;/code&gt; является один из этих вариантов. Добавьте &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; токен &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;forRoot()&lt;/a&gt;&lt;/code&gt; вызова:</target>
        </trans-unit>
        <trans-unit id="10b4aaa9ae011e0088bd88bc7ad23a24e9905f16" translate="yes" xml:space="preserve">
          <source>The second argument in the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method takes an object for additional configuration options. The &lt;code&gt;preloadingStrategy&lt;/code&gt; is one of those options. Add the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; token to the &lt;code&gt;forRoot()&lt;/code&gt; call:</source>
          <target state="translated">Второй аргумент в &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; принимает объект для дополнительных параметров конфигурации. &lt;code&gt;preloadingStrategy&lt;/code&gt; является один из этих вариантов. Добавьте &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; токен &lt;code&gt;forRoot()&lt;/code&gt; вызова:</target>
        </trans-unit>
        <trans-unit id="67420eba778c81bceda710b2f41019a12b62d5ce" translate="yes" xml:space="preserve">
          <source>The second argument, &lt;code&gt;delay&lt;/code&gt;, has the same syntax as &lt;code&gt;duration&lt;/code&gt;. For example:</source>
          <target state="translated">Второй аргумент, &lt;code&gt;delay&lt;/code&gt; , имеет тот же синтаксис, что и &lt;code&gt;duration&lt;/code&gt; . Например:</target>
        </trans-unit>
        <trans-unit id="e4728132b472fdaf23f6157a81e7c259035ede28" translate="yes" xml:space="preserve">
          <source>The second bundle contains code in the old ES5 syntax, along with all necessary polyfills. This results in a larger bundle size, but supports older browsers.</source>
          <target state="translated">Вторая связка содержит код в старом синтаксисе ES5 вместе со всеми необходимыми полифайлами.Это приводит к увеличению размера пакета,но поддерживает старые браузеры.</target>
        </trans-unit>
        <trans-unit id="485d48505fce9c188f96c7e8b59519767596a7bf" translate="yes" xml:space="preserve">
          <source>The second bundle contains code in the old ES5 syntax, along with all necessary polyfills. This second bundle is larger, but supports older browsers.</source>
          <target state="translated">Вторая связка содержит код в старом синтаксисе ES5 вместе со всеми необходимыми полифайлами.Этот второй пакет больше по размеру,но поддерживает старые браузеры.</target>
        </trans-unit>
        <trans-unit id="5fc3b5f238bb412f7f32cb42963fe9d6adf48d83" translate="yes" xml:space="preserve">
          <source>The second element is a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; with a &lt;code&gt;click&lt;/code&gt;&lt;a href=&quot;event-binding&quot;&gt;event binding&lt;/a&gt;.</source>
          <target state="translated">Второй элемент - это &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; с &lt;a href=&quot;event-binding&quot;&gt;привязкой к событию &lt;/a&gt; &lt;code&gt;click&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="acd35964f6f0d51879b94ba5f5c61077dd99875c" translate="yes" xml:space="preserve">
          <source>The second element is a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; with an &lt;a href=&quot;template-syntax#event-binding&quot;&gt;event binding&lt;/a&gt;. You know it's an event binding because the part to the left of the equal sign is in parentheses, &lt;code&gt;(click)&lt;/code&gt;.</source>
          <target state="translated">Второй элемент - это &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; с &lt;a href=&quot;template-syntax#event-binding&quot;&gt;привязкой&lt;/a&gt; к событию . Вы знаете, что это привязка к событию, потому что часть слева от знака равенства находится в скобках &lt;code&gt;(click)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc449d513e1cc929356564804a02d3b22062ddbc" translate="yes" xml:space="preserve">
          <source>The second example demonstrates passing in the &lt;code&gt;$event&lt;/code&gt; object, which provides details about the event to the component.</source>
          <target state="translated">Второй пример демонстрирует передачу объекта &lt;code&gt;$event&lt;/code&gt; , который предоставляет подробности о событии компоненту.</target>
        </trans-unit>
        <trans-unit id="ad0d312637a21eae4b82436cf870b90d8c9345ee" translate="yes" xml:space="preserve">
          <source>The second example demonstrates passing in the &lt;code&gt;$event&lt;/code&gt; object, which provides details about the event to the controller.</source>
          <target state="translated">Второй пример демонстрирует передачу объекта &lt;code&gt;$event&lt;/code&gt; , который предоставляет подробности о событии контроллеру.</target>
        </trans-unit>
        <trans-unit id="3b637601413f91f94772399c112fac361b60d0c5" translate="yes" xml:space="preserve">
          <source>The second item identifies the child route details about a particular crisis (&lt;code&gt;/:id&lt;/code&gt;).</source>
          <target state="translated">Второй элемент идентифицирует детали дочернего маршрута о конкретном кризисе ( &lt;code&gt;/:id&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="31c7c11b46015d9e7e37751c373ace9c44818123" translate="yes" xml:space="preserve">
          <source>The second kind of entry component occurs in a route definition like this:</source>
          <target state="translated">Второй вид входного компонента встречается в определении маршрута,подобном этому:</target>
        </trans-unit>
        <trans-unit id="80d2b152141df0551d01e052076dd9a2bf659174" translate="yes" xml:space="preserve">
          <source>The second parameter identifies this as a &lt;code&gt;plural&lt;/code&gt; translation type.</source>
          <target state="translated">Второй параметр идентифицирует это как &lt;code&gt;plural&lt;/code&gt; тип перевода.</target>
        </trans-unit>
        <trans-unit id="2ad7a68528bfceb60940f6593bc4a5c0d6da5983" translate="yes" xml:space="preserve">
          <source>The second parameter to the Jasmine matcher (e.g., &lt;code&gt;'expected name'&lt;/code&gt;) is an optional failure label. If the expectation fails, Jasmine appends this label to the expectation failure message. In a spec with multiple expectations, it can help clarify what went wrong and which expectation failed.</source>
          <target state="translated">Вторым параметром в сопоставлении Jasmine (например, &lt;code&gt;'expected name'&lt;/code&gt; ) является необязательный ярлык ошибки. Если ожидание не выполняется, Жасмин добавляет эту метку к сообщению об ошибке ожидания. В спецификации с множественными ожиданиями это может помочь прояснить, что пошло не так, а какое ожидание не удалось.</target>
        </trans-unit>
        <trans-unit id="75e29b682d0d5764eb407c6ced980c4bbb5fe3df" translate="yes" xml:space="preserve">
          <source>The second parameter, &lt;code&gt;extraProviders&lt;/code&gt;, is optional. It lets you specify dependency providers that apply only when running on this server. You can do this when your app needs information that can only be determined by the currently running server instance. One example could be the running server's &lt;em&gt;origin&lt;/em&gt;, which could be used to &lt;a href=&quot;universal#http-urls&quot;&gt;calculate absolute HTTP URLs&lt;/a&gt; if not using the &lt;code&gt;Request&lt;/code&gt; token as shown above.</source>
          <target state="translated">Второй параметр, &lt;code&gt;extraProviders&lt;/code&gt; , является необязательным. Это позволяет вам указать поставщиков зависимостей, которые применяются только при работе на этом сервере. Вы можете сделать это, когда вашему приложению нужна информация, которая может быть определена только текущим экземпляром сервера. Одним из примеров могут быть бегущим сервер &lt;em&gt;происхождения&lt;/em&gt; , которые могут быть использованы для &lt;a href=&quot;universal#http-urls&quot;&gt;вычисления абсолютной HTTP URL - адреса&lt;/a&gt; , если не используется &lt;code&gt;Request&lt;/code&gt; маркеров , как показаны выше.</target>
        </trans-unit>
        <trans-unit id="022dba050c6e8639ff2efe745f9496f6a07db6c0" translate="yes" xml:space="preserve">
          <source>The second property is a provider definition object, which tells the injector how to create the dependency value. The provider-definition key can be &lt;code&gt;useClass&lt;/code&gt;, as in the example. It can also be &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt;. Each of these keys provides a different type of dependency, as discussed below.</source>
          <target state="translated">Второе свойство - это объект определения провайдера, который сообщает инжектору, как создать значение зависимости. Ключом определения провайдера может быть &lt;code&gt;useClass&lt;/code&gt; , как в примере. Это также может быть &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; . Каждый из этих ключей обеспечивает свой тип зависимости, как описано ниже.</target>
        </trans-unit>
        <trans-unit id="63e014ed09f964af9d1f6d4bfa26bc87d09f1031" translate="yes" xml:space="preserve">
          <source>The second property is a provider definition object, which tells the injector how to create the dependency value. The provider-definition key can be &lt;code&gt;useClass&lt;/code&gt;, as in the example. It can also be &lt;code&gt;useExisting&lt;/code&gt;, &lt;code&gt;useValue&lt;/code&gt;, or &lt;code&gt;useFactory&lt;/code&gt;. Each of these keys provides a different type of dependency, as discussed below.</source>
          <target state="translated">Второе свойство - это объект определения поставщика, который сообщает инжектору, как создать значение зависимости. Ключом определения поставщика может быть &lt;code&gt;useClass&lt;/code&gt; , как в примере. Это также может быть &lt;code&gt;useExisting&lt;/code&gt; , &lt;code&gt;useValue&lt;/code&gt; или &lt;code&gt;useFactory&lt;/code&gt; . Каждый из этих ключей обеспечивает различный тип зависимости, как описано ниже.</target>
        </trans-unit>
        <trans-unit id="fe60b9d875a80248b494fbc59dbdf2537b6de57a" translate="yes" xml:space="preserve">
          <source>The second provider substitutes &lt;code&gt;DateLoggerService&lt;/code&gt; for &lt;code&gt;LoggerService&lt;/code&gt;. &lt;code&gt;LoggerService&lt;/code&gt; is already registered at the &lt;code&gt;AppComponent&lt;/code&gt; level. When this child component requests &lt;code&gt;LoggerService&lt;/code&gt;, it receives a &lt;code&gt;DateLoggerService&lt;/code&gt; instance instead.</source>
          <target state="translated">Второй поставщик заменяет &lt;code&gt;DateLoggerService&lt;/code&gt; на &lt;code&gt;LoggerService&lt;/code&gt; . &lt;code&gt;LoggerService&lt;/code&gt; уже зарегистрирован на уровне &lt;code&gt;AppComponent&lt;/code&gt; . Когда этот дочерний компонент запрашивает &lt;code&gt;LoggerService&lt;/code&gt; , он получает вместо &lt;code&gt;DateLoggerService&lt;/code&gt; экземпляр DateLoggerService .</target>
        </trans-unit>
        <trans-unit id="0e6434f6538db6265436fe3ae1f9a0d66262b187" translate="yes" xml:space="preserve">
          <source>The second specifies a literal string resource to use for the &lt;code&gt;TITLE&lt;/code&gt; token. The &lt;code&gt;TITLE&lt;/code&gt; provider token is &lt;em&gt;not&lt;/em&gt; a class, but is instead a special kind of provider lookup key called an &lt;a href=&quot;dependency-injection-in-action#injection-token&quot;&gt;injection token&lt;/a&gt;, represented by an &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Второе указывает литеральный строковый ресурс, используемый для токена &lt;code&gt;TITLE&lt;/code&gt; . &lt;code&gt;TITLE&lt;/code&gt; поставщик маркер &lt;em&gt;не&lt;/em&gt; класс, а вместо этого специального вида ключа поиска поставщика , называемых &lt;a href=&quot;dependency-injection-in-action#injection-token&quot;&gt;маркерами инъекции&lt;/a&gt; , представленного в &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; инстанции.</target>
        </trans-unit>
        <trans-unit id="40ecbe84de362925e62a27cbbf180f49461b3f3a" translate="yes" xml:space="preserve">
          <source>The second translation unit contains the &lt;code&gt;select&lt;/code&gt; clause:</source>
          <target state="translated">Вторая единица перевода содержит предложение &lt;code&gt;select&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="597f9d257275e6a2cf81eaaa818c2f9da7dacfc6" translate="yes" xml:space="preserve">
          <source>The second translation unit contains the complete nested expression:</source>
          <target state="translated">Вторая единица перевода содержит полное вложенное выражение:</target>
        </trans-unit>
        <trans-unit id="cc2fae3d6572ac8d718bd250497aa8031b7f47a3" translate="yes" xml:space="preserve">
          <source>The second translation unit, immediately below the first one, contains the &lt;code&gt;select&lt;/code&gt; message. Translate that as well.</source>
          <target state="translated">Второй блок перевода, непосредственно под первым, содержит сообщение &lt;code&gt;select&lt;/code&gt; . Переведите это также.</target>
        </trans-unit>
        <trans-unit id="322bf6fe354feb0ed8eefdb996e96edbf6d504a6" translate="yes" xml:space="preserve">
          <source>The second unit contains the complete nested expression:</source>
          <target state="translated">Вторая единица содержит полное вложенное выражение:</target>
        </trans-unit>
        <trans-unit id="fd3336ba8ecc74fbec8d08991026da2b43cbb769" translate="yes" xml:space="preserve">
          <source>The second, synchronous &lt;code&gt;beforeEach()&lt;/code&gt; contains the remaining setup steps, which include creating the component and querying for elements to inspect.</source>
          <target state="translated">Второй, синхронный &lt;code&gt;beforeEach()&lt;/code&gt; содержит оставшиеся этапы настройки, которые включают создание компонента и запрос элементов для проверки.</target>
        </trans-unit>
        <trans-unit id="ccbbf197c57bcf4dcf2acbe9b02811d4fb7292ef" translate="yes" xml:space="preserve">
          <source>The secondary heading should be followed by a blank line and then the content for that heading.</source>
          <target state="translated">За вторичным заголовком должна следовать пустая строка,а затем содержание этого заголовка.</target>
        </trans-unit>
        <trans-unit id="9bbf6669b097783c6f5e9731d8bd819d03e19f1c" translate="yes" xml:space="preserve">
          <source>The secondary route consists of an outlet name (&lt;code&gt;popup&lt;/code&gt;), a &lt;code&gt;colon&lt;/code&gt; separator, and the secondary route path (&lt;code&gt;compose&lt;/code&gt;).</source>
          <target state="translated">Вторичный маршрут состоит из имени выхода ( &lt;code&gt;popup&lt;/code&gt; ), разделителя &lt;code&gt;colon&lt;/code&gt; и пути вторичного маршрута ( &lt;code&gt;compose&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1f5be36fc06501fc3a0ac8451cd3973d79bb65e3" translate="yes" xml:space="preserve">
          <source>The section &lt;a href=&quot;reactive-forms#validating-form-input&quot;&gt;Validating form input&lt;/a&gt; introduces the basics of how input validation works in reactive forms.</source>
          <target state="translated">Раздел &amp;laquo; &lt;a href=&quot;reactive-forms#validating-form-input&quot;&gt;Проверка ввода формы&amp;raquo;&lt;/a&gt; знакомит с основами работы проверки ввода в реактивных формах.</target>
        </trans-unit>
        <trans-unit id="5974edf352069a00dd09a93b85b1e1cf03f0a232" translate="yes" xml:space="preserve">
          <source>The selector tells Angular to plug this root component into the &lt;code&gt;&amp;lt;phonecat-app&amp;gt;&lt;/code&gt; element on the host web page when the application launches.</source>
          <target state="translated">Селектор сообщает Angular подключить этот корневой компонент к &lt;code&gt;&amp;lt;phonecat-app&amp;gt;&lt;/code&gt; на веб-странице хоста при запуске приложения.</target>
        </trans-unit>
        <trans-unit id="e950633873ec03732fd9736996584fa6ed62259d" translate="yes" xml:space="preserve">
          <source>The separation of concerns here is the same as with &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt;, which are used for other CLI commands that touch your code (such as &lt;code&gt;ng generate&lt;/code&gt;).</source>
          <target state="translated">Разделение проблем здесь такое же, как и для &lt;a href=&quot;glossary#schematic&quot;&gt;схем&lt;/a&gt; , которые используются для других команд CLI, которые касаются вашего кода (например, &lt;code&gt;ng generate&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="81aeb61d2e22f8b8d9459e05b501bced326adf60" translate="yes" xml:space="preserve">
          <source>The sequence of log messages follows the prescribed hook calling order: &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt; (3x), &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentinit&quot;&gt;AfterContentInit&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentchecked&quot;&gt;AfterContentChecked&lt;/a&gt;&lt;/code&gt; (3x), &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;&lt;/code&gt; (3x), and &lt;code&gt;&lt;a href=&quot;../api/core/ondestroy&quot;&gt;OnDestroy&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Последовательность сообщений журнала следует установленному порядку вызова &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; : OnChanges , &lt;code&gt;&lt;a href=&quot;../api/core/oninit&quot;&gt;OnInit&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt; (3x), &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentinit&quot;&gt;AfterContentInit&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentchecked&quot;&gt;AfterContentChecked&lt;/a&gt;&lt;/code&gt; (3x), &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;&lt;/code&gt; (3x) и &lt;code&gt;&lt;a href=&quot;../api/core/ondestroy&quot;&gt;OnDestroy&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18ae83b605e538232ca7b3bc82c832eb67e352a0" translate="yes" xml:space="preserve">
          <source>The sequence of router events is as follows:</source>
          <target state="translated">Последовательность событий маршрутизатора выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="1737d4ed6f800daea7476c0c70a1734eb7ce1928" translate="yes" xml:space="preserve">
          <source>The server (&lt;a href=&quot;https://expressjs.com/&quot;&gt;Node Express&lt;/a&gt; in this guide's example) passes client requests for application pages to the NgUniversal &lt;code&gt;ngExpressEngine&lt;/code&gt;. Under the hood, this calls Universal's &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; function, while providing caching and other helpful utilities.</source>
          <target state="translated">Сервер ( &lt;a href=&quot;https://expressjs.com/&quot;&gt;Node Express&lt;/a&gt; в примере этого руководства) передает запросы клиентов на страницы приложения в NgUniversal &lt;code&gt;ngExpressEngine&lt;/code&gt; . Под капотом это вызывает &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; Universal , обеспечивая при этом кэширование и другие полезные утилиты.</target>
        </trans-unit>
        <trans-unit id="d02e253b850f113d73bfb00512bed301e76af61e" translate="yes" xml:space="preserve">
          <source>The server (&lt;a href=&quot;https://expressjs.com/&quot;&gt;Node.js Express&lt;/a&gt; in this guide's example) passes client requests for application pages to the NgUniversal &lt;code&gt;ngExpressEngine&lt;/code&gt;. Under the hood, this calls Universal's &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; function, while providing caching and other helpful utilities.</source>
          <target state="translated">Сервер ( &lt;a href=&quot;https://expressjs.com/&quot;&gt;Node.js Express&lt;/a&gt; в примере этого руководства) передает клиентские запросы страниц приложения в NgUniversal &lt;code&gt;ngExpressEngine&lt;/code&gt; . Под капотом это вызывает универсальную &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; , обеспечивая при этом кеширование и другие полезные утилиты.</target>
        </trans-unit>
        <trans-unit id="833b0d09ecb324069b98f0951ab344fac2fef24f" translate="yes" xml:space="preserve">
          <source>The server backend might reject the request, returning an HTTP response with a status code such as 404 or 500. These are error &lt;em&gt;responses&lt;/em&gt;.</source>
          <target state="translated">Бэкэнд сервера может отклонить запрос, вернув HTTP-ответ с кодом состояния, например 404 или 500. Это &lt;em&gt;ответы с&lt;/em&gt; ошибками .</target>
        </trans-unit>
        <trans-unit id="b91c33e79c6d8ce1f35c11a0064ccf17c1206386" translate="yes" xml:space="preserve">
          <source>The server platform that supports the runtime compiler.</source>
          <target state="translated">Серверная платформа,поддерживающая компилятор времени выполнения.</target>
        </trans-unit>
        <trans-unit id="fdc7974bddc4251d37c899dec154f7616873a7f7" translate="yes" xml:space="preserve">
          <source>The server should respond with a single hero rather than an array of heroes.</source>
          <target state="translated">Сервер должен ответить одним героем,а не массивом героев.</target>
        </trans-unit>
        <trans-unit id="eca5a8837e9ee160489059a172e9ebc977dd83cd" translate="yes" xml:space="preserve">
          <source>The server will automatically reload your browser when new files are output.</source>
          <target state="translated">При выводе новых файлов сервер автоматически перезагрузит ваш браузер.</target>
        </trans-unit>
        <trans-unit id="0d9613e884c4d7057875fd99d39be99f233ae206" translate="yes" xml:space="preserve">
          <source>The server's data API determines the shape of the JSON data. The &lt;em&gt;Tour of Heroes&lt;/em&gt; data API returns the hero data as an array.</source>
          <target state="translated">API данных сервера определяет форму данных JSON. &lt;em&gt;Гастроли Heroes&lt;/em&gt; API данных возвращают данные героя в виде массива.</target>
        </trans-unit>
        <trans-unit id="d608ede8654d1838eb5137faa0d8ed16a87869ad" translate="yes" xml:space="preserve">
          <source>The server-rendered app still launches quickly but the full client app may take seconds to load.</source>
          <target state="translated">Отозванное с сервера приложение по-прежнему быстро запускается,но загрузка полного клиентского приложения может занять несколько секунд.</target>
        </trans-unit>
        <trans-unit id="e791eab073e4d3b4cd8bc1aca0e02dd44233a6e7" translate="yes" xml:space="preserve">
          <source>The service can be instantiated by configuring a factory function, as in the following example.</source>
          <target state="translated">Для конкретизации услуги можно настроить заводскую функцию,как это показано на следующем примере.</target>
        </trans-unit>
        <trans-unit id="b01cb6b08662ccfbcebed41545cd05a24d2577c4" translate="yes" xml:space="preserve">
          <source>The service exposes its cache of &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#messages&quot;&gt;messages&lt;/a&gt;&lt;/code&gt; and two methods: one to &lt;code&gt;add()&lt;/code&gt; a message to the cache and another to &lt;code&gt;&lt;a href=&quot;../api/forms/formarray#clear&quot;&gt;clear()&lt;/a&gt;&lt;/code&gt; the cache.</source>
          <target state="translated">Служба предоставляет кеш &lt;code&gt;&lt;a href=&quot;../api/service-worker/swpush#messages&quot;&gt;messages&lt;/a&gt;&lt;/code&gt; и два метода: один для &lt;code&gt;add()&lt;/code&gt; сообщения в кеш, а другой для &lt;code&gt;&lt;a href=&quot;../api/forms/formarray#clear&quot;&gt;clear()&lt;/a&gt;&lt;/code&gt; кеша.</target>
        </trans-unit>
        <trans-unit id="e6443c7850c012b2c10c16adbba71b75368fdc4f" translate="yes" xml:space="preserve">
          <source>The service exposes its cache of &lt;code&gt;messages&lt;/code&gt; and two methods: one to &lt;code&gt;add()&lt;/code&gt; a message to the cache and another to &lt;code&gt;clear()&lt;/code&gt; the cache.</source>
          <target state="translated">Служба предоставляет свой кеш &lt;code&gt;messages&lt;/code&gt; и два метода: один для &lt;code&gt;add()&lt;/code&gt; сообщения в кеш, а другой для &lt;code&gt;clear()&lt;/code&gt; кеша.</target>
        </trans-unit>
        <trans-unit id="8fbb599e20de587b80201a2202b3533ea4c17924" translate="yes" xml:space="preserve">
          <source>The service itself is a class that the CLI generated and that's decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt;. By default, this decorator has a &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; property, which creates a provider for the service. In this case, &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; specifies that Angular should provide the service in the root injector.</source>
          <target state="translated">Сам сервис - это класс, сгенерированный CLI и украшенный &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; . По умолчанию у этого декоратора есть свойство &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; , которое создает провайдера для сервиса. В этом случае &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;: 'root'&lt;/code&gt; In : 'root' указывает, что Angular должен предоставить сервис в корневом инжекторе.</target>
        </trans-unit>
        <trans-unit id="1eb2341b2a56fcef48a10982c82e78d778efcf41" translate="yes" xml:space="preserve">
          <source>The service itself is a class that the CLI generated and that's decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt;. By default, this decorator has a &lt;code&gt;providedIn&lt;/code&gt; property, which creates a provider for the service. In this case, &lt;code&gt;providedIn: 'root'&lt;/code&gt; specifies that Angular should provide the service in the root injector.</source>
          <target state="translated">Сама служба - это класс, созданный CLI и украшенный &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; . По умолчанию у этого декоратора есть свойство &lt;code&gt;providedIn&lt;/code&gt; , которое создает поставщика для службы. В этом случае &lt;code&gt;providedIn: 'root'&lt;/code&gt; указывает, что Angular должен предоставлять службу в корневом инжекторе.</target>
        </trans-unit>
        <trans-unit id="a8d86534f286c4014047b48e39157c9ac642d3f4" translate="yes" xml:space="preserve">
          <source>The service provided by the root &lt;code&gt;AppModule&lt;/code&gt; takes precedence over services provided by imported NgModules. The &lt;code&gt;AppModule&lt;/code&gt; always wins.</source>
          <target state="translated">Сервис, предоставляемый корневым &lt;code&gt;AppModule&lt;/code&gt; , имеет приоритет над сервисами, предоставляемыми импортированными NgModules. &lt;code&gt;AppModule&lt;/code&gt; всегда побеждает.</target>
        </trans-unit>
        <trans-unit id="e4c344300d7fd4d9f966ba1a8642b3e11076118a" translate="yes" xml:space="preserve">
          <source>The service uses the &lt;code&gt;import()&lt;/code&gt; method to load your bundled AngularJS application lazily. This decreases the initial bundle size of your application as you're not loading code your user doesn't need yet. You also need to provide a way to &lt;em&gt;bootstrap&lt;/em&gt; the application manually after it has been loaded. AngularJS provides a way to manually bootstrap an application using the &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt;angular.bootstrap()&lt;/a&gt; method with a provided HTML element. Your AngularJS app should also expose a &lt;code&gt;bootstrap&lt;/code&gt; method that bootstraps the AngularJS app.</source>
          <target state="translated">Служба использует метод &lt;code&gt;import()&lt;/code&gt; чтобы лениво загрузить ваше приложение AngularJS. Это уменьшает первоначальный размер пакета вашего приложения, так как вы не загружаете код, который еще не нужен вашему пользователю. Вам также необходимо предоставить способ &lt;em&gt;начальной загрузки&lt;/em&gt; приложения после его загрузки. AngularJS предоставляет способ ручной загрузки приложения с помощью &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt;метода angular.bootstrap ()&lt;/a&gt; с предоставленным элементом HTML. Ваше приложение AngularJS также должно предоставлять метод начальной &lt;code&gt;bootstrap&lt;/code&gt; который загружает приложение AngularJS.</target>
        </trans-unit>
        <trans-unit id="dc4b5f46b09780ea494a593541c8cc9fef7174dd" translate="yes" xml:space="preserve">
          <source>The service worker conserves bandwidth when possible. Resources are only downloaded if they've changed.</source>
          <target state="translated">Работник сервисной службы сохраняет полосу пропускания,когда это возможно.Ресурсы загружаются только в том случае,если они изменились.</target>
        </trans-unit>
        <trans-unit id="73a76971f818809f629500d6b5210621468c33c3" translate="yes" xml:space="preserve">
          <source>The service worker installed the updated version of your app &lt;em&gt;in the background&lt;/em&gt;, and the next time the page is loaded or reloaded, the service worker switches to the latest version.</source>
          <target state="translated">Работник сервиса установил обновленную версию вашего приложения &lt;em&gt;в фоновом режиме&lt;/em&gt; , и при следующей загрузке или перезагрузке страницы работник сервиса переключится на последнюю версию.</target>
        </trans-unit>
        <trans-unit id="e5e8a28aed57347d4280ded734f47df1ae665528" translate="yes" xml:space="preserve">
          <source>The service worker is unable to find the asset in the cache (remember that the browser evicted it). Nor is it able to retrieve it from the server (since the server now only has &lt;code&gt;lazy-chunk.&amp;lt;lazy-hash-2&amp;gt;.js&lt;/code&gt; from the newer version).</source>
          <target state="translated">Сервисный работник не может найти актив в кеше (помните, что браузер удалил его). Он также не может получить его с сервера (поскольку теперь на сервере есть только &lt;code&gt;lazy-chunk.&amp;lt;lazy-hash-2&amp;gt;.js&lt;/code&gt; из более новой версии).</target>
        </trans-unit>
        <trans-unit id="cc0df69a7bfbd6545911d095948cf97558edba0d" translate="yes" xml:space="preserve">
          <source>The set of NgModules whose exported &lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;declarables&lt;/a&gt; are available to templates in this module.</source>
          <target state="translated">Набор NgModules, чьи экспортированные &lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;деклараторы&lt;/a&gt; доступны для шаблонов в этом модуле.</target>
        </trans-unit>
        <trans-unit id="abd06758e4687a7c44919fabc0c064aac2354cc2" translate="yes" xml:space="preserve">
          <source>The set of components that are bootstrapped when this module is bootstrapped. The components listed here are automatically added to &lt;code&gt;entryComponents&lt;/code&gt;.</source>
          <target state="translated">Набор компонентов, которые загружаются при загрузке этого модуля. Перечисленные здесь компоненты автоматически добавляются в &lt;code&gt;entryComponents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32d438c2e575af5904ec9ce7fda3a5333ad0ee04" translate="yes" xml:space="preserve">
          <source>The set of components to compile when this NgModule is defined, so that they can be dynamically loaded into the view.</source>
          <target state="translated">Набор компонентов,которые необходимо скомпилировать при определении этого NgModule,чтобы их можно было динамически загружать в представление.</target>
        </trans-unit>
        <trans-unit id="5fb26e057f395ff1c2bbe69c4c8605bab3259d00" translate="yes" xml:space="preserve">
          <source>The set of components, directives, and pipes (&lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;declarables&lt;/a&gt;) that belong to this module.</source>
          <target state="translated">Набор компонентов, директив и каналов ( &lt;a href=&quot;../../guide/glossary#declarable&quot;&gt;объявляемых&lt;/a&gt; ), которые принадлежат этому модулю.</target>
        </trans-unit>
        <trans-unit id="7b2caf88051dc93e4146531fb1b86232037cd52e" translate="yes" xml:space="preserve">
          <source>The set of components, directives, and pipes declared in this NgModule that can be used in the template of any component that is part of an NgModule that imports this NgModule. Exported declarations are the module's public API.</source>
          <target state="translated">Набор компонентов,директив и труб,заявленный в данном NgModule,который может быть использован в шаблоне любого компонента,являющегося частью NgModule,который импортирует данный NgModule.Экспортируемые декларации являются публичным API модуля.</target>
        </trans-unit>
        <trans-unit id="0c259b27e27fec00cdb957688cd4f00e39150e77" translate="yes" xml:space="preserve">
          <source>The set of injectable objects that are available in the injector of this module.</source>
          <target state="translated">Набор инжектируемых объектов,имеющихся в инжекторе данного модуля.</target>
        </trans-unit>
        <trans-unit id="d5765ec9ddf94071c5020c93344913452a009948" translate="yes" xml:space="preserve">
          <source>The set of questions you've defined for the job application is returned from the &lt;code&gt;QuestionService&lt;/code&gt;. In a real app you'd retrieve these questions from storage.</source>
          <target state="translated">Набор вопросов, которые вы определили для заявления о приеме на работу, возвращается из службы &lt;code&gt;QuestionService&lt;/code&gt; . В реальном приложении вы бы получили эти вопросы из хранилища.</target>
        </trans-unit>
        <trans-unit id="21e915a97b647841a3c77d6bb5bc493db4e59530" translate="yes" xml:space="preserve">
          <source>The set of schemas that declare elements to be allowed in the NgModule. Elements and properties that are neither Angular components nor directives must be declared in a schema.</source>
          <target state="translated">Набор схем,объявляющих элементы,которые должны быть разрешены в NgModule.Элементы и свойства,которые не являются ни угловыми компонентами,ни директивами,должны быть объявлены в схеме.</target>
        </trans-unit>
        <trans-unit id="f833bd6b1e79171a431acd5cc244779fb79402e4" translate="yes" xml:space="preserve">
          <source>The set of selectors that are available to a template include those declared here, and those that are exported from imported NgModules.</source>
          <target state="translated">В набор селекторов,доступных для шаблона,входят те,которые объявлены здесь,и те,которые экспортируются из импортированных NgModules.</target>
        </trans-unit>
        <trans-unit id="b6a30893f8633b1e28a52635e18ed8118090a942" translate="yes" xml:space="preserve">
          <source>The setter of the &lt;code&gt;name&lt;/code&gt; input property in the child &lt;code&gt;NameChildComponent&lt;/code&gt; trims the whitespace from a name and replaces an empty value with default text.</source>
          <target state="translated">Установщик свойства ввода &lt;code&gt;name&lt;/code&gt; в дочернем &lt;code&gt;NameChildComponent&lt;/code&gt; NameChildComponent удаляет пробелы из имени и заменяет пустое значение текстом по умолчанию.</target>
        </trans-unit>
        <trans-unit id="882e77e815d86faba535964e8ae6e6a1f26ffa49" translate="yes" xml:space="preserve">
          <source>The setup for the &lt;em&gt;test-host&lt;/em&gt; tests is similar to the setup for the stand-alone tests:</source>
          <target state="translated">Настройка для &lt;em&gt;тестовых хост-&lt;/em&gt; тестов аналогична настройке для автономных тестов:</target>
        </trans-unit>
        <trans-unit id="52f4e19d49b1e5a67a00d5af99c62cbc1c7875a5" translate="yes" xml:space="preserve">
          <source>The shadow-dom-piercing descendant combinator is deprecated and support is being &lt;a href=&quot;https://developers.google.com/web/updates/2017/10/remove-shadow-piercing&quot;&gt;removed from major browsers and tools&lt;/a&gt;. As such, in v4 we deprecated support in Angular for all 3 of &lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;::ng-deep&lt;/code&gt;. Until removal, &lt;code&gt;::ng-deep&lt;/code&gt; is preferred for broader compatibility with the tools.</source>
          <target state="translated">Пронзительный теневой комбинатор наследников устарел, и поддержка &lt;a href=&quot;https://developers.google.com/web/updates/2017/10/remove-shadow-piercing&quot;&gt;удаляется из основных браузеров и инструментов&lt;/a&gt; . Таким образом, в v4 мы не поддерживали поддержку Angular для всех 3 of &lt;code&gt;/deep/&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;::ng-deep&lt;/code&gt; . До удаления &lt;code&gt;::ng-deep&lt;/code&gt; предпочтительнее для более широкой совместимости с инструментами.</target>
        </trans-unit>
        <trans-unit id="e4af087be2847b1c9f00ac636a9cf97937c7f75f" translate="yes" xml:space="preserve">
          <source>The shadow-piercing descendant combinator is deprecated and &lt;a href=&quot;https://www.chromestatus.com/feature/6750456638341120&quot;&gt;support is being removed from major browsers&lt;/a&gt; and tools. As such we plan to drop support in Angular (for all 3 of &lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;::ng-deep&lt;/code&gt;). Until then &lt;code&gt;::ng-deep&lt;/code&gt; should be preferred for a broader compatibility with the tools.</source>
          <target state="translated">Комбинатор потомков с пропусканием теней устарел, и его &lt;a href=&quot;https://www.chromestatus.com/feature/6750456638341120&quot;&gt;поддержка прекращается из основных браузеров&lt;/a&gt; и инструментов. По этой причине мы планируем отказаться от поддержки Angular (для всех трех из &lt;code&gt;/deep/&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;::ng-deep&lt;/code&gt; ). До тех пор следует предпочесть &lt;code&gt;::ng-deep&lt;/code&gt; для более широкой совместимости с инструментами.</target>
        </trans-unit>
        <trans-unit id="e2b9108143779ec04ceb04bcde0783f4eb419bdf" translate="yes" xml:space="preserve">
          <source>The shadow-piercing descendant combinator is deprecated and &lt;a href=&quot;https://www.chromestatus.com/features/6750456638341120&quot;&gt;support is being removed from major browsers&lt;/a&gt; and tools. As such we plan to drop support in Angular (for all 3 of &lt;code&gt;/deep/&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; and &lt;code&gt;::ng-deep&lt;/code&gt;). Until then &lt;code&gt;::ng-deep&lt;/code&gt; should be preferred for a broader compatibility with the tools.</source>
          <target state="translated">Пронзающий теневой комбинатор не рекомендуется, и &lt;a href=&quot;https://www.chromestatus.com/features/6750456638341120&quot;&gt;поддержка удаляется из основных браузеров&lt;/a&gt; и инструментов. Поэтому мы планируем отказаться от поддержки в Angular (для всех 3 of &lt;code&gt;/deep/&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; и &lt;code&gt;::ng-deep&lt;/code&gt; ). До тех пор &lt;code&gt;::ng-deep&lt;/code&gt; следует предпочитать для более широкой совместимости с инструментами.</target>
        </trans-unit>
        <trans-unit id="d1572bbd4b2543d39de382abeaa39b959a062225" translate="yes" xml:space="preserve">
          <source>The shim first loads the SystemJS configuration, then Angular's test support libraries, and then the application's spec files themselves.</source>
          <target state="translated">Сначала шайба загружает конфигурацию SystemJS,затем библиотеки поддержки тестов Angular,а затем сами файлы спецификации приложения.</target>
        </trans-unit>
        <trans-unit id="d9c0ff4882b7ddca991893d98816e7055727d7c4" translate="yes" xml:space="preserve">
          <source>The shorthand form expands into a long form that uses the &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;&lt;/code&gt; selector on an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element. The content of the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element is the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element that held the short-form directive.</source>
          <target state="translated">Сокращенная форма раскрывается в длинную форму, в которой используется селектор &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngForOf&lt;/a&gt;&lt;/code&gt; для элемента &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; . Содержимое элемента &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; является элементом &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; , который содержит директиву краткой формы.</target>
        </trans-unit>
        <trans-unit id="553922474ce1ca6a6f30eca0ff378d2e094bbbe1" translate="yes" xml:space="preserve">
          <source>The shorthand syntax &lt;code&gt;*&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; expands into two separate template specifications for the &quot;then&quot; and &quot;else&quot; clauses. For example, consider the following shorthand statement, that is meant to show a loading page while waiting for data to be loaded.</source>
          <target state="translated">Сокращенный синтаксис &lt;code&gt;*&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; расширяется до двух отдельных спецификаций шаблонов для предложений &amp;laquo;then&amp;raquo; и &amp;laquo;else&amp;raquo;. Например, рассмотрим следующий сокращенный оператор, предназначенный для отображения страницы загрузки во время ожидания загрузки данных.</target>
        </trans-unit>
        <trans-unit id="1c97c8ccbdc799a2ca76696b4e244bd5effa4af9" translate="yes" xml:space="preserve">
          <source>The signature registerLocaleData(data: any, extraData?: any) is deprecated since v5.1</source>
          <target state="translated">Подпись registerLocaleData(data:any,extraData?:any)устарела с версии 5.1.</target>
        </trans-unit>
        <trans-unit id="153a8913765ac20b181614adc3911db7022d20a6" translate="yes" xml:space="preserve">
          <source>The single parameter accepted is an initialization hash. Any properties of the response passed there will override the default values.</source>
          <target state="translated">Единственным принятым параметром является хэш инициализации.Любые свойства переданного туда ответа будут переопределять значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="7ae02ec48c2aa6b29e8bf62369aed78347f97d35" translate="yes" xml:space="preserve">
          <source>The smallest grouping of display elements that can be created and destroyed together. Angular renders a view under the control of one or more &lt;a href=&quot;glossary#directive&quot;&gt;directives&lt;/a&gt;, especially &lt;a href=&quot;glossary#component&quot;&gt;component&lt;/a&gt; directives and their companion &lt;a href=&quot;glossary#template&quot;&gt;templates&lt;/a&gt;.</source>
          <target state="translated">Наименьшая группировка элементов отображения, которые можно создавать и уничтожать вместе. Angular отображает представление под управлением одной или нескольких &lt;a href=&quot;glossary#directive&quot;&gt;директив&lt;/a&gt; , особенно директив &lt;a href=&quot;glossary#component&quot;&gt;компонента&lt;/a&gt; и их сопутствующих &lt;a href=&quot;glossary#template&quot;&gt;шаблонов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd8270c38ce691281c77b7ee88227b5e7764e526" translate="yes" xml:space="preserve">
          <source>The smallest grouping of display elements that can be created and destroyed together. Angular renders a view under the control of one or more &lt;a href=&quot;glossary#directive&quot;&gt;directives&lt;/a&gt;.</source>
          <target state="translated">Наименьшая группа отображаемых элементов, которая может быть создана и уничтожена вместе. Angular отображает представление под управлением одной или нескольких &lt;a href=&quot;glossary#directive&quot;&gt;директив&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd28324682f0c17450b3cf5ed2f78e84c835aa30" translate="yes" xml:space="preserve">
          <source>The sneaky spy directive is simple, consisting almost entirely of &lt;code&gt;ngOnInit()&lt;/code&gt; and &lt;code&gt;ngOnDestroy()&lt;/code&gt; hooks that log messages to the parent via an injected &lt;code&gt;LoggerService&lt;/code&gt;.</source>
          <target state="translated">Скрытая директива шпиона проста, состоит почти полностью из &lt;code&gt;ngOnInit()&lt;/code&gt; и &lt;code&gt;ngOnDestroy()&lt;/code&gt; которые регистрируют сообщения для родителя через &lt;code&gt;LoggerService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a51977b23bb7ecc232209e8d1327212e8a3ebfb7" translate="yes" xml:space="preserve">
          <source>The source code for this tutorial and the complete &lt;em&gt;Tour of Heroes&lt;/em&gt; global styles are available in the live example.</source>
          <target state="translated">Исходный код этого урока и полные глобальные стили &lt;em&gt;Tour of Heroes&lt;/em&gt; доступны в живом примере.</target>
        </trans-unit>
        <trans-unit id="197396630d371033ea63576d710b5005e3bd9ab9" translate="yes" xml:space="preserve">
          <source>The source component's injector.</source>
          <target state="translated">Инжектор исходного компонента.</target>
        </trans-unit>
        <trans-unit id="26d4b7c388a1bdb518c645561859bb64e0fbf361" translate="yes" xml:space="preserve">
          <source>The source of truth provides the value and status of the form element at a given point in time. In reactive forms, the form model is the source of truth. In the example above, the form model is the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Источник правды предоставляет значение и статус элемента формы в данный момент времени. В реактивных формах модель формы является источником истины. В приведенном выше примере модель формы является экземпляром &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="711481c7ae759061bd5e4428a64fc27d4832dd02" translate="yes" xml:space="preserve">
          <source>The spy is designed such that any call to &lt;code&gt;getQuote&lt;/code&gt; receives an observable with a test quote. Unlike the real &lt;code&gt;getQuote()&lt;/code&gt; method, this spy bypasses the server and returns a synchronous observable whose value is available immediately.</source>
          <target state="translated">Шпион спроектирован так, что любой вызов &lt;code&gt;getQuote&lt;/code&gt; получает наблюдаемое с тестовой цитатой. В отличие от реального &lt;code&gt;getQuote()&lt;/code&gt; , этот шпион обходит сервер и возвращает синхронную наблюдаемую информацию, значение которой доступно немедленно.</target>
        </trans-unit>
        <trans-unit id="90b43b9097739862d0cb30d76b768225cec8d2a5" translate="yes" xml:space="preserve">
          <source>The starter app's structure looks like this:</source>
          <target state="translated">Структура стартового приложения выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="8fa84009f343b37f2c309935ebef67d3cf1bb17d" translate="yes" xml:space="preserve">
          <source>The state name, unique within the component.</source>
          <target state="translated">Название государства,уникальное внутри компонента.</target>
        </trans-unit>
        <trans-unit id="8ba0f66a562868f6f0949ad17ceaa5aa9040735a" translate="yes" xml:space="preserve">
          <source>The state object is defined by &lt;code&gt;&lt;a href=&quot;navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt;, and contains any developer-defined state value, as well as a unique ID that the router assigns to every router transition/navigation.</source>
          <target state="translated">Объект состояния определяется &lt;code&gt;&lt;a href=&quot;navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; и содержит любое определенное разработчиком значение состояния, а также уникальный идентификатор, который маршрутизатор назначает каждому переходу / навигации маршрутизатора.</target>
        </trans-unit>
        <trans-unit id="94da77aa1c11c6ad0070c12223f965f714061382" translate="yes" xml:space="preserve">
          <source>The statement context may also refer to properties of the template's own context. In the following example, the component's event handling method, &lt;code&gt;onSave()&lt;/code&gt; takes the template's own &lt;code&gt;$event&lt;/code&gt; object as an argument. On the next two lines, the &lt;code&gt;deleteHero()&lt;/code&gt; method takes a &lt;a href=&quot;built-in-directives#template-input-variable&quot;&gt;template input variable&lt;/a&gt;, &lt;code&gt;hero&lt;/code&gt;, and &lt;code&gt;onSubmit()&lt;/code&gt; takes a &lt;a href=&quot;template-reference-variables&quot;&gt;template reference variable&lt;/a&gt;, &lt;code&gt;#heroForm&lt;/code&gt;.</source>
          <target state="translated">Контекст оператора может также относиться к свойствам собственного контекста шаблона. В следующем примере метод обработки событий компонента &lt;code&gt;onSave()&lt;/code&gt; принимает в качестве аргумента собственный объект шаблона &lt;code&gt;$event&lt;/code&gt; . В следующих двух строках метод &lt;code&gt;deleteHero()&lt;/code&gt; принимает &lt;a href=&quot;built-in-directives#template-input-variable&quot;&gt;входную переменную шаблона&lt;/a&gt; , &lt;code&gt;hero&lt;/code&gt; , а &lt;code&gt;onSubmit()&lt;/code&gt; принимает &lt;a href=&quot;template-reference-variables&quot;&gt;ссылочную переменную шаблона&lt;/a&gt; , &lt;code&gt;#heroForm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29682628931d961e1dc643e174f6cb46d55f3a40" translate="yes" xml:space="preserve">
          <source>The statement context may also refer to properties of the template's own context. In the following examples, the template &lt;code&gt;$event&lt;/code&gt; object, a &lt;a href=&quot;template-syntax#template-input-variable&quot;&gt;template input variable&lt;/a&gt; (&lt;code&gt;let hero&lt;/code&gt;), and a &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;template reference variable&lt;/a&gt; (&lt;code&gt;#heroForm&lt;/code&gt;) are passed to an event handling method of the component.</source>
          <target state="translated">Контекст оператора также может ссылаться на свойства собственного контекста шаблона. В следующих примерах объект шаблона &lt;code&gt;$event&lt;/code&gt; , &lt;a href=&quot;template-syntax#template-input-variable&quot;&gt;входная переменная шаблона&lt;/a&gt; ( &lt;code&gt;let hero&lt;/code&gt; ) и &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;ссылочная переменная шаблона&lt;/a&gt; ( &lt;code&gt;#heroForm&lt;/code&gt; ) передаются в метод обработки событий компонента.</target>
        </trans-unit>
        <trans-unit id="ee7031536fc9f3201d33e673cc50dc352588d037" translate="yes" xml:space="preserve">
          <source>The static and resolved data of this route</source>
          <target state="translated">Статические и разрешенные данные этого маршрута</target>
        </trans-unit>
        <trans-unit id="6079268a1495ab3832f3c122c48c8debcb04466b" translate="yes" xml:space="preserve">
          <source>The steps are the same as using the &lt;code&gt;providers&lt;/code&gt; array, with the exception of using the &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; array instead.</source>
          <target state="translated">Действия аналогичны использованию массива &lt;code&gt;providers&lt;/code&gt; , за исключением использования массива &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cebfcbb525983dfc838b3ae9b82235f2b846443b" translate="yes" xml:space="preserve">
          <source>The steps are the same as using the &lt;code&gt;providers&lt;/code&gt; array, with the exception of using the &lt;code&gt;viewProviders&lt;/code&gt; array instead.</source>
          <target state="translated">Шаги такие же, как при использовании массива &lt;code&gt;providers&lt;/code&gt; , за исключением использования вместо &lt;code&gt;viewProviders&lt;/code&gt; массива viewProviders .</target>
        </trans-unit>
        <trans-unit id="7019f7ed50fbce076b2ffcd0fd378bb53f9230fa" translate="yes" xml:space="preserve">
          <source>The steps below outline the data flow from model to view when the &lt;code&gt;favoriteColor&lt;/code&gt; changes from &lt;em&gt;Blue&lt;/em&gt; to &lt;em&gt;Red&lt;/em&gt;.</source>
          <target state="translated">Приведенные ниже шаги описывают поток данных от модели к представлению, когда значение &lt;code&gt;favoriteColor&lt;/code&gt; меняется с &lt;em&gt;синего&lt;/em&gt; на &lt;em&gt;красный&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8f083b699a0e24cfb31552a7c5515dedc3bffa68" translate="yes" xml:space="preserve">
          <source>The steps below outline the data flow from model to view.</source>
          <target state="translated">Следующие шаги описывают поток данных от модели к просмотру.</target>
        </trans-unit>
        <trans-unit id="d6d931d512cd5180e215ff2bd54df9514cdbd37a" translate="yes" xml:space="preserve">
          <source>The steps below outline the data flow from view to model when the input value changes from &lt;em&gt;Red&lt;/em&gt; to &lt;em&gt;Blue&lt;/em&gt;.</source>
          <target state="translated">Приведенные ниже шаги описывают поток данных от вида к модели, когда входное значение изменяется с &lt;em&gt;красного&lt;/em&gt; на &lt;em&gt;синий&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cf66d9ec419458eca31557b6784e06c3d74c7302" translate="yes" xml:space="preserve">
          <source>The steps below outline the data flow from view to model.</source>
          <target state="translated">Следующие шаги описывают поток данных от представления к модели.</target>
        </trans-unit>
        <trans-unit id="93bcd38a5f62ce5f433e4b3619e142ff10dbf2d5" translate="yes" xml:space="preserve">
          <source>The steps below show you how to do the following:</source>
          <target state="translated">Следующие шаги покажут вам,как это сделать:</target>
        </trans-unit>
        <trans-unit id="b62b2ca3bd1da7bcd7ed67d55220aa0c687e3b42" translate="yes" xml:space="preserve">
          <source>The strategy that controls how a component is transformed in a custom element.</source>
          <target state="translated">Стратегия,которая контролирует,как компонент преобразуется в пользовательский элемент.</target>
        </trans-unit>
        <trans-unit id="930fe4769070145b5d1902f6b39df80e384668cc" translate="yes" xml:space="preserve">
          <source>The strategy that the default change detector uses to detect changes. When set, takes effect the next time change detection is triggered.</source>
          <target state="translated">Стратегия,используемая детектором изменений по умолчанию для обнаружения изменений.Когда она установлена,вступает в силу при следующем обнаружении изменений.</target>
        </trans-unit>
        <trans-unit id="bf8be7fcf53ea5a196bf46985745bd43109fefe5" translate="yes" xml:space="preserve">
          <source>The strict checks of the &lt;code&gt;setValue()&lt;/code&gt; method help catch nesting errors in complex forms, while &lt;code&gt;patchValue()&lt;/code&gt; fails silently on those errors.</source>
          <target state="translated">Строгие проверки метода &lt;code&gt;setValue()&lt;/code&gt; помогают отследить ошибки вложения в сложных формах, в то время как &lt;code&gt;patchValue()&lt;/code&gt; завершает работу с этими ошибками.</target>
        </trans-unit>
        <trans-unit id="6a9ea9c73e5951ca219b42e33dc1405dd30050db" translate="yes" xml:space="preserve">
          <source>The string assigned to &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is not a &lt;a href=&quot;interpolation&quot;&gt;template expression&lt;/a&gt;. Rather, it's a &lt;em&gt;microsyntax&lt;/em&gt;&amp;mdash;a little language of its own that Angular interprets. The string &lt;code&gt;&quot;let item of items&quot;&lt;/code&gt; means:</source>
          <target state="translated">Строка, присвоенная &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; , не является &lt;a href=&quot;interpolation&quot;&gt;выражением шаблона&lt;/a&gt; . Скорее, это &lt;em&gt;микросинтаксис&lt;/em&gt; - маленький собственный язык, который интерпретирует Angular. Строка &lt;code&gt;&quot;let item of items&quot;&lt;/code&gt; означает:</target>
        </trans-unit>
        <trans-unit id="372bafa1bce494ea990979dd34c53dd96c7cc2ca" translate="yes" xml:space="preserve">
          <source>The string assigned to &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; is not a &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;template expression&lt;/a&gt;. Rather, it's a &lt;em&gt;microsyntax&lt;/em&gt;&amp;mdash;a little language of its own that Angular interprets. The string &lt;code&gt;&quot;let &lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt; of items&quot;&lt;/code&gt; means:</source>
          <target state="translated">Строка, присвоенная &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; , не является &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;выражением шаблона&lt;/a&gt; . Скорее, это &lt;em&gt;микросинтаксис&lt;/em&gt; - маленький собственный язык, который интерпретирует Angular. Строка &lt;code&gt;&quot;let &lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt; of items&quot;&lt;/code&gt; означает:</target>
        </trans-unit>
        <trans-unit id="e44daa65c98054f261ccfa5f7cf11e49ee653d27" translate="yes" xml:space="preserve">
          <source>The string form of &lt;code&gt;&lt;a href=&quot;loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; is deprecated (see &lt;code&gt;&lt;a href=&quot;deprecatedloadchildren&quot;&gt;DeprecatedLoadChildren&lt;/a&gt;&lt;/code&gt;). The function form (&lt;code&gt;&lt;a href=&quot;loadchildrencallback&quot;&gt;LoadChildrenCallback&lt;/a&gt;&lt;/code&gt;) should be used instead.</source>
          <target state="translated">Строковая форма &lt;code&gt;&lt;a href=&quot;loadchildren&quot;&gt;LoadChildren&lt;/a&gt;&lt;/code&gt; устарела (см. &lt;code&gt;&lt;a href=&quot;deprecatedloadchildren&quot;&gt;DeprecatedLoadChildren&lt;/a&gt;&lt;/code&gt; ). &lt;code&gt;&lt;a href=&quot;loadchildrencallback&quot;&gt;LoadChildrenCallback&lt;/a&gt;&lt;/code&gt; следует использовать форму функции ( LoadChildrenCallback ).</target>
        </trans-unit>
        <trans-unit id="c5e2186518aafc34e0de597f98ce5a35b638ef12" translate="yes" xml:space="preserve">
          <source>The string is a fixed value that you can put directly into the template.</source>
          <target state="translated">Строка-это фиксированное значение,которое можно поместить непосредственно в шаблон.</target>
        </trans-unit>
        <trans-unit id="ee37f1eaca83dd9bb097b5466bff65a943fac485" translate="yes" xml:space="preserve">
          <source>The string to transform to lower case.</source>
          <target state="translated">Строка для преобразования в нижний регистр.</target>
        </trans-unit>
        <trans-unit id="cb45bf71782ca8d0a97a51a6af91cbb4a490dedc" translate="yes" xml:space="preserve">
          <source>The string to transform to title case.</source>
          <target state="translated">Строка для преобразования в регистр заголовка.</target>
        </trans-unit>
        <trans-unit id="417a5ce2ca98d102c22ce8871b11edab28c7f8e7" translate="yes" xml:space="preserve">
          <source>The string to transform to upper case.</source>
          <target state="translated">Строка для преобразования в верхний регистр.</target>
        </trans-unit>
        <trans-unit id="79bdda991ab152b790e3070b35eb8fda7e4c2b45" translate="yes" xml:space="preserve">
          <source>The structure of an NgModule is the same whether it is a root module or a feature module. In the CLI generated feature module, there are two JavaScript import statements at the top of the file: the first imports &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, which, like the root module, lets you use the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator; the second imports &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt;, which contributes many common directives such as &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. Feature modules import &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, which is only imported once in the root module. &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; only contains information for common directives such as &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; which are needed in most templates, whereas &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; configures the Angular app for the browser which needs to be done only once.</source>
          <target state="translated">Структура модуля NgModule одинакова, будь то корневой модуль или функциональный модуль. В генерируемом модуле CLI имеется две инструкции импорта JavaScript в верхней части файла: первая импортирует &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , который, подобно корневому модулю, позволяет использовать декоратор &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; ; второй импортирует &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; , который содержит много общих директив, таких как &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; модули импортируют CommonModule вместо &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; , который импортируется только один раз в корневой модуль. &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; содержит информацию только для общих директив, таких как &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; которые необходимы в большинстве шаблонов, тогда как &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; настраивает приложение Angular для браузера, что необходимо сделать только один раз.</target>
        </trans-unit>
        <trans-unit id="de78df528fc5f787d89545140bece8187c6b8538" translate="yes" xml:space="preserve">
          <source>The stub selectors match the selectors for the corresponding real components. But their templates and classes are empty.</source>
          <target state="translated">Селекторы шлейфов соответствуют селекторам для соответствующих реальных компонентов.Но их шаблоны и классы пусты.</target>
        </trans-unit>
        <trans-unit id="a2d59788c70b71518e84d399dc1f8c1b1995a79e" translate="yes" xml:space="preserve">
          <source>The styles specified in &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata &lt;em&gt;apply only within the template of that component&lt;/em&gt;.</source>
          <target state="translated">Стили, указанные в метаданных &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; &lt;em&gt; применяются только внутри шаблона этого компонента&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f48dea481324aa0b7a7a250484ea3649910069fd" translate="yes" xml:space="preserve">
          <source>The suggested polyfills are the ones that run full Angular applications. You may need additional polyfills to support features not covered by this list. Note that polyfills cannot magically transform an old, slow browser into a modern, fast one.</source>
          <target state="translated">Предлагаемые полифили-это те,которые работают с полными Угловыми приложениями.Вам могут понадобиться дополнительные полифили для поддержки функций,не описанных в этом списке.Обратите внимание,что полифили не могут волшебным образом преобразовать старый,медленный браузер в современный,быстрый.</target>
        </trans-unit>
        <trans-unit id="629cf41ae2bb443d131c775aab136684c9761d9b" translate="yes" xml:space="preserve">
          <source>The switch directives are particularly useful for adding and removing &lt;em&gt;component elements&lt;/em&gt;. This example switches among four &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; components defined in the &lt;code&gt;item-switch.components.ts&lt;/code&gt; file. Each component has an &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;input property&lt;/a&gt; which is bound to the &lt;code&gt;currentItem&lt;/code&gt; of the parent component.</source>
          <target state="translated">Директивы switch особенно полезны для добавления и удаления &lt;em&gt;элементов компонента&lt;/em&gt; . В этом примере &lt;code&gt;item-switch.components.ts&lt;/code&gt; переключение между четырьмя компонентами &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; определенными в файле item-switch.components.ts . Каждый компонент имеет &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;свойство ввода &lt;/a&gt; &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; которое связано с &lt;code&gt;currentItem&lt;/code&gt; родительского компонента.</target>
        </trans-unit>
        <trans-unit id="a89ade83ec04e3798353f8fcdcde955060d9b066" translate="yes" xml:space="preserve">
          <source>The switch directives are particularly useful for adding and removing &lt;em&gt;component elements&lt;/em&gt;. This example switches among four &lt;code&gt;item&lt;/code&gt; components defined in the &lt;code&gt;item-switch.components.ts&lt;/code&gt; file. Each component has an &lt;code&gt;item&lt;/code&gt;&lt;a href=&quot;inputs-outputs#input&quot;&gt;input property&lt;/a&gt; which is bound to the &lt;code&gt;currentItem&lt;/code&gt; of the parent component.</source>
          <target state="translated">Директивы switch особенно полезны для добавления и удаления &lt;em&gt;компонентных элементов&lt;/em&gt; . В этом примере &lt;code&gt;item-switch.components.ts&lt;/code&gt; переключение между четырьмя компонентами &lt;code&gt;item&lt;/code&gt; определенными в файле item-switch.components.ts . Каждый компонент имеет &lt;a href=&quot;inputs-outputs#input&quot;&gt;свойство ввода &lt;/a&gt; &lt;code&gt;item&lt;/code&gt; которое привязано к &lt;code&gt;currentItem&lt;/code&gt; родительского компонента.</target>
        </trans-unit>
        <trans-unit id="cb1898cd24b327b717bb4aef090ad4e9542fafed" translate="yes" xml:space="preserve">
          <source>The switch from the &lt;em&gt;local variable&lt;/em&gt; to the &lt;em&gt;ViewChild&lt;/em&gt; technique is solely for the purpose of demonstration.</source>
          <target state="translated">Переход от &lt;em&gt;локальной переменной&lt;/em&gt; к технике &lt;em&gt;ViewChild&lt;/em&gt; предназначен исключительно для демонстрации.</target>
        </trans-unit>
        <trans-unit id="40988748687c9ee6daa755f997551a5b4a1441e8" translate="yes" xml:space="preserve">
          <source>The switch value assigned to &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;hero.emotion&lt;/code&gt;) determines which (if any) of the switch cases are displayed.</source>
          <target state="translated">Значение переключателя, присвоенное &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; ( &lt;code&gt;hero.emotion&lt;/code&gt; ), определяет, какие (если есть) варианты переключений отображаются.</target>
        </trans-unit>
        <trans-unit id="9a62c528f0a931f89b2287d8a503aed1f8009829" translate="yes" xml:space="preserve">
          <source>The symbol to localize.</source>
          <target state="translated">Символ для локализации.</target>
        </trans-unit>
        <trans-unit id="4ed679bf2daa47968c73d3b3701e2547464b78f8" translate="yes" xml:space="preserve">
          <source>The synchronous &lt;em&gt;beforeEach&lt;/em&gt;</source>
          <target state="translated">Синхронный &lt;em&gt;beforeEach&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="abbd548fb3da1a05f8609c8a3757af73c0e7704c" translate="yes" xml:space="preserve">
          <source>The synchronous validators registered with this group.</source>
          <target state="translated">Синхронные валидаторы,зарегистрированные в этой группе.</target>
        </trans-unit>
        <trans-unit id="d372dcb466775574685c3fae862c265b2b17aef2" translate="yes" xml:space="preserve">
          <source>The syntax in this example is as follows:</source>
          <target state="translated">Синтаксис в этом примере следующий:</target>
        </trans-unit>
        <trans-unit id="7e8b4d98df92da09eb34184a7a9efa8bfa65588d" translate="yes" xml:space="preserve">
          <source>The syntax may seem strange to you but users are unlikely to notice or care as long as the URL can be emailed and pasted into a browser address bar as this one can.</source>
          <target state="translated">Синтаксис может показаться вам странным,но пользователи вряд ли заметят или позаботятся о нем до тех пор,пока URL может быть отправлен по электронной почте и вставлен в адресную строку браузера,как это может показаться на первый взгляд.</target>
        </trans-unit>
        <trans-unit id="5f242d259e92ca5a53c10705d273887b830471cd" translate="yes" xml:space="preserve">
          <source>The table below summarizes the key differences between reactive and template-driven forms.</source>
          <target state="translated">В таблице ниже приведены основные различия между реактивными формами и формами,основанными на шаблонах.</target>
        </trans-unit>
        <trans-unit id="3c4e7caf543ca7199e467fdb0d9c36eb0a217ab0" translate="yes" xml:space="preserve">
          <source>The tabs in the following example demonstrates toggling between two different formats (&lt;code&gt;'shortDate'&lt;/code&gt; and &lt;code&gt;'fullDate'&lt;/code&gt;):</source>
          <target state="translated">Вкладки в следующем примере демонстрируют переключение между двумя разными форматами ( &lt;code&gt;'shortDate'&lt;/code&gt; и &lt;code&gt;'fullDate'&lt;/code&gt; ):</target>
        </trans-unit>
        <trans-unit id="220ad8eac98ea25feaee853e9a31ab932f922b98" translate="yes" xml:space="preserve">
          <source>The tag attribute and value to match against, in the format &lt;code&gt;&quot;tag_attribute='value string'&quot;&lt;/code&gt;.</source>
          <target state="translated">Атрибут тега и значение для сопоставления в формате &lt;code&gt;&quot;tag_attribute='value string'&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d90e8518f65ddbaf9cd91f81cdabaaf8afb11625" translate="yes" xml:space="preserve">
          <source>The tag definition to match against to identify an existing tag.</source>
          <target state="translated">Определение тега для сравнения с целью идентификации существующего тега.</target>
        </trans-unit>
        <trans-unit id="dfe05f51b185acbf840147ce35d32d01c530d4c8" translate="yes" xml:space="preserve">
          <source>The tag description with which to replace the existing tag content.</source>
          <target state="translated">Описание тега,с помощью которого можно заменить существующее содержимое тега.</target>
        </trans-unit>
        <trans-unit id="08365a3c201aa0c652bb798a6188518150b14a2a" translate="yes" xml:space="preserve">
          <source>The target event determines the shape of the &lt;code&gt;$event&lt;/code&gt; object. If the target event is a native DOM element event, then &lt;code&gt;$event&lt;/code&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM event object&lt;/a&gt;, with properties such as &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;target.value&lt;/code&gt;.</source>
          <target state="translated">Целевое событие определяет форму объекта &lt;code&gt;$event&lt;/code&gt; . Если целевое событие является собственным событием элемента DOM, то &lt;code&gt;$event&lt;/code&gt; является &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;объектом события DOM&lt;/a&gt; со свойствами, такими как &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;target.value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="204c978751f63d09d4d7fdfadbc1e4791b804461" translate="yes" xml:space="preserve">
          <source>The target event determines the shape of the &lt;code&gt;$event&lt;/code&gt; object. If the target event is a native DOM element event, then &lt;code&gt;$event&lt;/code&gt; is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM event object&lt;/a&gt;, with properties such as &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;target.value&lt;/code&gt;.</source>
          <target state="translated">Целевое событие определяет форму объекта &lt;code&gt;$event&lt;/code&gt; . Если целевое событие является собственным событием элемента DOM, тогда &lt;code&gt;$event&lt;/code&gt; является &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;объектом события DOM&lt;/a&gt; со свойствами, такими как &lt;code&gt;target&lt;/code&gt; и &lt;code&gt;target.value&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="088749979b09bfd46d68e94f37fbfac7f9f02497" translate="yes" xml:space="preserve">
          <source>The target in the square brackets, &lt;code&gt;[]&lt;/code&gt;, is the property you decorate with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; in the child component. The binding source, the part to the right of the equal sign, is the data that the parent component passes to the nested component.</source>
          <target state="translated">Цель в квадратных скобках &lt;code&gt;[]&lt;/code&gt; - это свойство, которое вы украшаете с помощью &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; в дочернем компоненте. Источник привязки, часть справа от знака равенства, представляет собой данные, которые родительский компонент передает вложенному компоненту.</target>
        </trans-unit>
        <trans-unit id="ea8a5033f54ae9c4081d5ab74a38829cd1975b5f" translate="yes" xml:space="preserve">
          <source>The target named &quot;touch&quot; uses our builder, which we published to &lt;code&gt;@example/command-runner&lt;/code&gt;. (See &lt;a href=&quot;creating-libraries#publishing-your-library&quot;&gt;Publishing your Library&lt;/a&gt;)</source>
          <target state="translated">Цель с именем &quot;touch&quot; использует наш конструктор, который мы опубликовали в &lt;code&gt;@example/command-runner&lt;/code&gt; . (См. &lt;a href=&quot;creating-libraries#publishing-your-library&quot;&gt;Публикация вашей библиотеки&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="83189c190de1ae321a2890e3cde83b83c7039a71" translate="yes" xml:space="preserve">
          <source>The target property accepts a string value.</source>
          <target state="translated">Целевое свойство принимает строковое значение.</target>
        </trans-unit>
        <trans-unit id="9803929ad21484881b4d3f6acabd34faf9ef3af2" translate="yes" xml:space="preserve">
          <source>The target to apply service worker to.</source>
          <target state="translated">Цель,к которой должен обратиться работник сферы обслуживания.</target>
        </trans-unit>
        <trans-unit id="758b33e79798a18b4b5d7ce28a40f40423430f66" translate="yes" xml:space="preserve">
          <source>The target to apply web worker to.</source>
          <target state="translated">Цель,к которой нужно применить веб-работника.</target>
        </trans-unit>
        <trans-unit id="4832cdf5716df7acd57fe0ac87672a04e59ff3aa" translate="yes" xml:space="preserve">
          <source>The target, &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt;, which is an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property in the child component class, receives its value from the parent's property, &lt;code&gt;currentItem&lt;/code&gt;. When you click delete, the child component raises an event, &lt;code&gt;deleteRequest&lt;/code&gt;, which is the argument for the parent's &lt;code&gt;crossOffItem()&lt;/code&gt; method.</source>
          <target state="translated">Цель &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; , являющаяся свойством &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; в классе дочернего компонента, получает свое значение из свойства родителя &lt;code&gt;currentItem&lt;/code&gt; . Когда вы нажимаете &amp;laquo;удалить&amp;raquo;, дочерний компонент вызывает событие &lt;code&gt;deleteRequest&lt;/code&gt; , которое является аргументом для родительского &lt;code&gt;crossOffItem()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fba0b19cd787422e1cf01da19ec8f25d07cada93" translate="yes" xml:space="preserve">
          <source>The target, &lt;code&gt;item&lt;/code&gt;, which is an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property in the child component class, receives its value from the parent's property, &lt;code&gt;currentItem&lt;/code&gt;. When you click delete, the child component raises an event, &lt;code&gt;deleteRequest&lt;/code&gt;, which is the argument for the parent's &lt;code&gt;crossOffItem()&lt;/code&gt; method.</source>
          <target state="translated">Целевой &lt;code&gt;item&lt;/code&gt; , который является свойством &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; в классе дочернего компонента, получает свое значение из родительского свойства &lt;code&gt;currentItem&lt;/code&gt; . Когда вы нажимаете кнопку &amp;laquo;Удалить&amp;raquo;, дочерний компонент вызывает событие &lt;code&gt;deleteRequest&lt;/code&gt; , которое является аргументом родительского &lt;code&gt;crossOffItem()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f1ff5014d8414a2f274237e4b393821bcc007a8" translate="yes" xml:space="preserve">
          <source>The technique is particularly useful when you have a type of form whose content must change frequently to meet rapidly changing business and regulatory requirements. A typical use case is a questionaire. You might need to get input from users in different contexts. The format and style of the forms a user sees should remain constant, while the actual questions you need to ask vary with the context.</source>
          <target state="translated">Этот метод особенно полезен,когда у вас есть тип формы,содержание которой должно часто меняться,чтобы соответствовать быстро меняющимся деловым и нормативным требованиям.Типичным случаем использования является вопросник.Вам может понадобиться получить информацию от пользователей в различных контекстах.Форма и стиль форм,которые видит пользователь,должны оставаться неизменными,в то время как фактические вопросы,которые вам необходимо задать,варьируются в зависимости от контекста.</target>
        </trans-unit>
        <trans-unit id="cd2fa7e7402ff15d8269c74078e6ca3033630d4e" translate="yes" xml:space="preserve">
          <source>The telltale signs of &lt;em&gt;content projection&lt;/em&gt; are twofold:</source>
          <target state="translated">Контрольные признаки &lt;em&gt;проекции контента&lt;/em&gt; имеют два аспекта:</target>
        </trans-unit>
        <trans-unit id="5e77a452f056e2f53277faeefa0476eb5ee812b2" translate="yes" xml:space="preserve">
          <source>The template (&lt;code&gt;flying-heroes.component.html (flyers)&lt;/code&gt;) with the new pipe.</source>
          <target state="translated">Шаблон ( &lt;code&gt;flying-heroes.component.html (flyers)&lt;/code&gt; ) с новой трубкой.</target>
        </trans-unit>
        <trans-unit id="e2a40647498302ae30e3c37d356dbc6aee8a2f1c" translate="yes" xml:space="preserve">
          <source>The template and style filenames reference the HTML and CSS files that StackBlitz generates.</source>
          <target state="translated">Имена файлов шаблонов и стилей ссылаются на HTML и CSS файлы,которые генерирует StackBlitz.</target>
        </trans-unit>
        <trans-unit id="c4786e4078a2207abe9c4cfa9d1d9cf3ab9a3992" translate="yes" xml:space="preserve">
          <source>The template associated with a component binds an animation trigger to an element.</source>
          <target state="translated">Шаблон,связанный с компонентом,привязывает анимационный триггер к элементу.</target>
        </trans-unit>
        <trans-unit id="7456b59897a0fe9f7fab60b1fd5714f118ee168e" translate="yes" xml:space="preserve">
          <source>The template associated with this component makes use of the defined trigger by binding to an element within its template code.</source>
          <target state="translated">Шаблон,связанный с этим компонентом,использует заданный триггер путем привязки к элементу в его коде шаблона.</target>
        </trans-unit>
        <trans-unit id="ad2640340c3b2204b3e2187d3156835ccc870fd9" translate="yes" xml:space="preserve">
          <source>The template displays the two component properties using double curly brace interpolation:</source>
          <target state="translated">Шаблон отображает свойства двух компонентов с помощью двойной интерполяции фигурных скобок:</target>
        </trans-unit>
        <trans-unit id="576bb8173300bc75c8165cf5e1686bbdae4c4807" translate="yes" xml:space="preserve">
          <source>The template expression inside the double quotes, &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;=&quot;heroes.length &amp;gt; 3&quot;&lt;/code&gt;, looks and behaves much like TypeScript. When the component's list of heroes has more than three items, Angular adds the paragraph to the DOM and the message appears. If there are three or fewer items, Angular omits the paragraph, so no message appears. For more information, see the &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;template expressions&lt;/a&gt; section of the &lt;a href=&quot;template-syntax&quot;&gt;Template Syntax&lt;/a&gt; page.</source>
          <target state="translated">Выражение шаблона внутри двойных кавычек, &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;=&quot;heroes.length &amp;gt; 3&quot;&lt;/code&gt; , выглядит и ведет себя подобно TypeScript. Если в списке героев компонента более трех элементов, Angular добавляет абзац в DOM и появляется сообщение. Если есть три или меньше элементов, Angular пропускает абзац, поэтому сообщение не появляется. Для получения дополнительной информации см. Раздел &amp;laquo; &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;Выражения &lt;/a&gt;&lt;a href=&quot;template-syntax&quot;&gt;шаблона&amp;raquo; на&lt;/a&gt; странице &amp;laquo; Синтаксис шаблона&amp;raquo; .</target>
        </trans-unit>
        <trans-unit id="06a26eec315b228b84cdf45c3df4a6172bf6d5de" translate="yes" xml:space="preserve">
          <source>The template expression should evaluate to the type of value that the target property expects. Return a string if the target property expects a string, a number if it expects a number, an object if it expects an object, and so on.</source>
          <target state="translated">Выражение шаблона должно вычисляться по типу значения,ожидаемого целевым свойством.Возвращает строку,если целевое свойство ожидает строку,число,если оно ожидает число,объект,если оно ожидает объект,и так далее.</target>
        </trans-unit>
        <trans-unit id="ac5e4c5de5dc648043bccd61180f0f506003d6cf" translate="yes" xml:space="preserve">
          <source>The template expression to the right of the equal sign, &lt;code&gt;=&lt;/code&gt;, contains a space-delimited string of CSS classes that the Router adds when this link is active (and removes when the link is inactive). You set the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; directive to a string of classes such as &lt;code&gt;[&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;]=&quot;'active fluffy'&quot;&lt;/code&gt; or bind it to a component property that returns such a string.</source>
          <target state="translated">Выражение шаблона справа от знака равенства, &lt;code&gt;=&lt;/code&gt; , содержит разделенную пробелами строку классов CSS, которые Маршрутизатор добавляет, когда эта ссылка активна (и удаляет, когда ссылка неактивна). Вы устанавливаете директиву &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; для строки классов, таких как &lt;code&gt;[&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;]=&quot;'active fluffy'&quot;&lt;/code&gt; или привязываете ее к свойству компонента, которое возвращает такую ​​строку.</target>
        </trans-unit>
        <trans-unit id="c2d8c395975bbaf307f8b6ad3d0e90daae25b98a" translate="yes" xml:space="preserve">
          <source>The template expression to the right of the equals (=) contains a space-delimited string of CSS classes that the Router will add when this link is active (and remove when the link is inactive). You set the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; directive to a string of classes such as &lt;code&gt;[&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;]=&quot;'active fluffy'&quot;&lt;/code&gt; or bind it to a component property that returns such a string.</source>
          <target state="translated">Выражение шаблона справа от равенства (=) содержит разделенную пробелами строку классов CSS, которую Маршрутизатор добавит, когда эта ссылка активна (и удалит, когда ссылка неактивна). Вы устанавливаете директиву &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;RouterLinkActive&lt;/a&gt;&lt;/code&gt; на строку классов, таких как &lt;code&gt;[&lt;a href=&quot;../api/router/routerlinkactive&quot;&gt;routerLinkActive&lt;/a&gt;]=&quot;'active fluffy'&quot;&lt;/code&gt; , или привязываете ее к свойству компонента, которое возвращает такую ​​строку.</target>
        </trans-unit>
        <trans-unit id="c4a5ffd1d833be7be8234c4da4123676ff8d6c69" translate="yes" xml:space="preserve">
          <source>The template input elements do &lt;em&gt;not&lt;/em&gt; use &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Элементы ввода шаблона &lt;em&gt;не&lt;/em&gt; используют &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e42a3efc7ee16d8ee04f26132d4fe495e4010874" translate="yes" xml:space="preserve">
          <source>The template is a multi-line string within ECMAScript 2015 backticks (&lt;code&gt;`&lt;/code&gt;). The backtick (&lt;code&gt;`&lt;/code&gt;)&amp;mdash;which is &lt;em&gt;not&lt;/em&gt; the same character as a single quote (&lt;code&gt;'&lt;/code&gt;)&amp;mdash;allows you to compose a string over several lines, which makes the HTML more readable.</source>
          <target state="translated">Шаблон представляет собой многострочную строку внутри обратных ссылок ECMAScript 2015 ( &lt;code&gt;`&lt;/code&gt; ). Кавычка ( &lt;code&gt;`&lt;/code&gt; ) -Какое это &lt;em&gt;не&lt;/em&gt; тот же символ , как одинарные кавычки ( &lt;code&gt;'&lt;/code&gt; ) -Позволяет составить строку на несколько строк, что делает HTML более удобным для чтения.</target>
        </trans-unit>
        <trans-unit id="3bfaca46091594f4d1d50328af755b641a1f6fb4" translate="yes" xml:space="preserve">
          <source>The template is compiled within the context of an NgModule&amp;mdash;the NgModule within which the template's component is declared&amp;mdash;which determines the set of selectors using the following rules:</source>
          <target state="translated">Шаблон компилируется в контексте модуля NgModule - модуля NgModule, в котором объявлен компонент шаблона, - который определяет набор селекторов с использованием следующих правил:</target>
        </trans-unit>
        <trans-unit id="08d9755e408a260636b09bfef92316faea44cef4" translate="yes" xml:space="preserve">
          <source>The template is completely self contained. It doesn't bind to the component, and the component does nothing.</source>
          <target state="translated">Шаблон полностью сам по себе.Он не привязывается к компоненту,и компонент ничего не делает.</target>
        </trans-unit>
        <trans-unit id="70313244a4cd1e80d96df911743747c5b1d0a1c0" translate="yes" xml:space="preserve">
          <source>The template options object, &lt;code&gt;angularCompilerOptions&lt;/code&gt;, is a sibling to the &lt;code&gt;compilerOptions&lt;/code&gt; object that supplies standard options to the TypeScript compiler.</source>
          <target state="translated">Объект опций шаблона &lt;code&gt;angularCompilerOptions&lt;/code&gt; является родственным объекту &lt;code&gt;compilerOptions&lt;/code&gt; , который предоставляет стандартные опции компилятору TypeScript.</target>
        </trans-unit>
        <trans-unit id="3b72560eddb355fd40b07d7d81925030a83c57a2" translate="yes" xml:space="preserve">
          <source>The template reference variable (&lt;code&gt;#name&lt;/code&gt;) is set to &lt;code&gt;&quot;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt; because that is the value of the &lt;a href=&quot;../api/core/directive#exportAs&quot;&gt;&lt;code&gt;NgModel.exportAs&lt;/code&gt;&lt;/a&gt; property. This property tells Angular how to link a reference variable to a directive.</source>
          <target state="translated">&lt;code&gt;#name&lt;/code&gt; переменная шаблона ( #name ) установлена ​​в &lt;code&gt;&quot;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&quot;&lt;/code&gt; потому что это значение свойства &lt;a href=&quot;../api/core/directive#exportAs&quot;&gt; &lt;code&gt;NgModel.exportAs&lt;/code&gt; &lt;/a&gt; . Это свойство сообщает Angular, как связать ссылочную переменную с директивой.</target>
        </trans-unit>
        <trans-unit id="51b07ca66a0c80d8a3f63013141583e49737c085" translate="yes" xml:space="preserve">
          <source>The template reference variable named &lt;code&gt;box&lt;/code&gt;, declared on the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element, refers to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element itself. The code uses the &lt;code&gt;box&lt;/code&gt; variable to get the input element's &lt;code&gt;value&lt;/code&gt; and display it with interpolation between &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">Ссылочная переменная шаблона с именем &lt;code&gt;box&lt;/code&gt; , объявленная в элементе &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , ссылается на сам элемент &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; . Код использует &lt;code&gt;box&lt;/code&gt; переменный для получения входного элемента &lt;code&gt;value&lt;/code&gt; и отобразить его с интерполяцией между &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; тегами.</target>
        </trans-unit>
        <trans-unit id="be99d9963797c6d6b4d78974ccde065adf89a39f" translate="yes" xml:space="preserve">
          <source>The template syntax guides show you how you can control the UX/UI by coordinating data between the class and the template.</source>
          <target state="translated">Руководства по синтаксису шаблонов показывают,как можно управлять UX/UI,координируя данные между классом и шаблоном.</target>
        </trans-unit>
        <trans-unit id="de2262f6eff650096d5ec2a922c11474976de6e1" translate="yes" xml:space="preserve">
          <source>The template syntax provides specialized one-way bindings for scenarios less well-suited to property binding.</source>
          <target state="translated">Синтаксис шаблона предоставляет специализированные односторонние привязки для сценариев,менее подходящих для привязки свойств.</target>
        </trans-unit>
        <trans-unit id="083a3f1dd8ef9b722e60e2598176af5110f9dbf5" translate="yes" xml:space="preserve">
          <source>The test assumes (correctly in this case) that the runtime event handler&amp;mdash;the component's &lt;code&gt;click()&lt;/code&gt; method&amp;mdash;doesn't care about the event object.</source>
          <target state="translated">Тест предполагает (в данном случае правильно), что обработчик события времени выполнения - метод &lt;code&gt;click()&lt;/code&gt; компонента - не заботится об объекте события.</target>
        </trans-unit>
        <trans-unit id="3fee678255a89c608b1621887a0565d3703b71c4" translate="yes" xml:space="preserve">
          <source>The test configuration can use the &lt;code&gt;SharedModule&lt;/code&gt; too as seen in this alternative setup:</source>
          <target state="translated">Тестовая конфигурация также может использовать &lt;code&gt;SharedModule&lt;/code&gt; , как видно из этой альтернативной настройки:</target>
        </trans-unit>
        <trans-unit id="9b3f7b35cc6454035e62b2373f127b23cbdae65d" translate="yes" xml:space="preserve">
          <source>The test consumes that spy in the same way it did earlier.</source>
          <target state="translated">Тест потребляет этого шпиона точно так же,как и раньше.</target>
        </trans-unit>
        <trans-unit id="64d8dd78adadc9a255e228a4c2bdbf4eb2d5cae3" translate="yes" xml:space="preserve">
          <source>The test detects that event through its subscription to &lt;code&gt;selected&lt;/code&gt;.</source>
          <target state="translated">Тест обнаруживает это событие по своей подписке на &lt;code&gt;selected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a9ff9ce0ff2aea3ea5d9b5e4c05171faa52806f" translate="yes" xml:space="preserve">
          <source>The test fails when the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; tries to create the component.</source>
          <target state="translated">Тест не &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; когда TestBed пытается создать компонент.</target>
        </trans-unit>
        <trans-unit id="dc61697c7a24dc30137c8a1be726e1064a8ae44b" translate="yes" xml:space="preserve">
          <source>The test file extension &lt;strong&gt;must be &lt;code&gt;.spec.ts&lt;/code&gt;&lt;/strong&gt; so that tooling can identify it as a file with tests (AKA, a &lt;em&gt;spec&lt;/em&gt; file).</source>
          <target state="translated">Расширение файла теста &lt;strong&gt;должно быть &lt;code&gt;.spec.ts&lt;/code&gt; ,&lt;/strong&gt; чтобы инструментарий мог идентифицировать его как файл с тестами (AKA, файл &lt;em&gt;спецификации&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="e1c2770aafe4156298be6944b33c74e2f41bc2b8" translate="yes" xml:space="preserve">
          <source>The test host sets the component's &lt;code&gt;hero&lt;/code&gt; input property with its test hero. It binds the component's &lt;code&gt;selected&lt;/code&gt; event with its &lt;code&gt;onSelected&lt;/code&gt; handler, which records the emitted hero in its &lt;code&gt;selectedHero&lt;/code&gt; property.</source>
          <target state="translated">Тестовый хост устанавливает свойство input &lt;code&gt;hero&lt;/code&gt; компонента с помощью тестового героя. Он связывает &lt;code&gt;selected&lt;/code&gt; событие компонента с его обработчиком &lt;code&gt;onSelected&lt;/code&gt; , который записывает испущенного героя в свойстве &lt;code&gt;selectedHero&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb31db149beae9a822efe838f27bfc240e01968b" translate="yes" xml:space="preserve">
          <source>The test must wait for the &lt;code&gt;getQuote()&lt;/code&gt; observable to emit the next quote. Instead of calling &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick()&lt;/a&gt;, it calls &lt;code&gt;fixture.whenStable()&lt;/code&gt;.</source>
          <target state="translated">Тест должен дождаться, &lt;code&gt;getQuote()&lt;/code&gt; наблюдаемый getQuote () выдаст следующую цитату. Вместо вызова &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick ()&lt;/a&gt; он вызывает &lt;code&gt;fixture.whenStable()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f2fe2155132bb0d67244809298ea98ce16fe29e" translate="yes" xml:space="preserve">
          <source>The test must wait for the &lt;code&gt;getQuote()&lt;/code&gt; observable to emit the next quote. Instead of calling &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt;, it calls &lt;code&gt;fixture.whenStable()&lt;/code&gt;.</source>
          <target state="translated">Тест должен ждать, &lt;code&gt;getQuote()&lt;/code&gt; наблюдаемая функция getQuote () отправит следующую кавычку. Вместо вызова &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; он вызывает &lt;code&gt;fixture.whenStable()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eae43c82340aebd9536a260fd2377f5061a497ef" translate="yes" xml:space="preserve">
          <source>The test resumes within the promise callback, which calls &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; to update the quote element with the expected text.</source>
          <target state="translated">Тест возобновляется в &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; обещания, который вызывает DetectChanges (), чтобы обновить элемент кавычки с ожидаемым текстом.</target>
        </trans-unit>
        <trans-unit id="6513a6033669aff320e259d0c6833fb95d1491eb" translate="yes" xml:space="preserve">
          <source>The test resumes within the promise callback, which calls &lt;code&gt;detectChanges()&lt;/code&gt; to update the quote element with the expected text.</source>
          <target state="translated">Тест возобновляется в &lt;code&gt;detectChanges()&lt;/code&gt; обещания, который вызывает detectChanges () для обновления элемента цитаты ожидаемым текстом.</target>
        </trans-unit>
        <trans-unit id="9991de36b4ebc0ec198e7d693844d908feef9de2" translate="yes" xml:space="preserve">
          <source>The test suite setup provided the same router spy &lt;a href=&quot;testing#routing-component&quot;&gt;described above&lt;/a&gt; which spies on the router without actually navigating.</source>
          <target state="translated">В настройках тестового набора был тот же шпион маршрутизатора, который был &lt;a href=&quot;testing#routing-component&quot;&gt;описан выше,&lt;/a&gt; который шпионил за маршрутизатором без реальной навигации.</target>
        </trans-unit>
        <trans-unit id="26c2531c64b39001e8bbe987859331ff8589c07b" translate="yes" xml:space="preserve">
          <source>The test suite setup provided the same router spy &lt;a href=&quot;testing-components-scenarios#routing-component&quot;&gt;described above&lt;/a&gt; which spies on the router without actually navigating.</source>
          <target state="translated">В тестовом комплекте использовался тот же шпион маршрутизатора, &lt;a href=&quot;testing-components-scenarios#routing-component&quot;&gt;описанный выше,&lt;/a&gt; который шпионит за маршрутизатором, фактически не выполняя навигацию.</target>
        </trans-unit>
        <trans-unit id="6e4274a8f1842c774f28cff1fab41deb042b588a" translate="yes" xml:space="preserve">
          <source>The test triggered a &quot;click&quot; event with a &lt;code&gt;null&lt;/code&gt; event object.</source>
          <target state="translated">Тест вызвал событие &amp;laquo;щелчка&amp;raquo; с &lt;code&gt;null&lt;/code&gt; объектом события.</target>
        </trans-unit>
        <trans-unit id="7fc3193a4fa820f2db5a35cc3a595865239a463f" translate="yes" xml:space="preserve">
          <source>The testing documentation offers tips and techniques for unit and integration testing Angular applications through a sample application created with the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;. This sample application is much like the one in the &lt;a href=&quot;tutorial&quot;&gt;&lt;em&gt;Tour of Heroes&lt;/em&gt; tutorial&lt;/a&gt;.</source>
          <target state="translated">Документация по тестированию предлагает советы и методы для модульного и интеграционного тестирования приложений Angular с помощью примера приложения, созданного с помощью &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; . Этот пример приложения очень похож на приложение &lt;a href=&quot;tutorial&quot;&gt;&lt;em&gt;из&lt;/em&gt; учебника &lt;em&gt;Tour of Heroes&lt;/em&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="64322dc55f479cb397712aa1ca434f09788d33d9" translate="yes" xml:space="preserve">
          <source>The testing goal is to verify that such bindings work as expected. The tests should set input values and listen for output events.</source>
          <target state="translated">Целью тестирования является проверка того,что такие крепления работают,как ожидалось.Тесты должны установить входные значения и прослушать выходные события.</target>
        </trans-unit>
        <trans-unit id="6e2010246d07d1175ff55b50a4ac15be59351555" translate="yes" xml:space="preserve">
          <source>The testing shims (&lt;code&gt;karma-test-shim&lt;/code&gt;, &lt;code&gt;browser-test-shim&lt;/code&gt;) call it for you so there is rarely a reason for you to call it yourself.</source>
          <target state="translated">&lt;code&gt;karma-test-shim&lt;/code&gt; ( karma-test-shim , &lt;code&gt;browser-test-shim&lt;/code&gt; ) называют его для вас, поэтому вам редко приходится называть его самим.</target>
        </trans-unit>
        <trans-unit id="148b2781f0537830461040ebc4675f60de170e4e" translate="yes" xml:space="preserve">
          <source>The testing shims (&lt;code&gt;karma-test-shim&lt;/code&gt;, &lt;code&gt;browser-test-shim&lt;/code&gt;) establish the &lt;a href=&quot;testing&quot;&gt;initial test environment&lt;/a&gt; and a default testing module. The default testing module is configured with basic declaratives and some Angular service substitutes that every tester needs.</source>
          <target state="translated">&lt;code&gt;karma-test-shim&lt;/code&gt; ( karma-test-shim , &lt;code&gt;browser-test-shim&lt;/code&gt; ) устанавливают &lt;a href=&quot;testing&quot;&gt;начальную среду&lt;/a&gt; тестирования и модуль тестирования по умолчанию. Модуль тестирования по умолчанию настроен с базовыми декларативами и некоторыми заменителями службы Angular, которые нужны каждому тестировщику.</target>
        </trans-unit>
        <trans-unit id="32d01fc5844e040dbbc5a7fa7fc314aed7f8af26" translate="yes" xml:space="preserve">
          <source>The tests described in this guide are in &lt;code&gt;src/testing/http-client.spec.ts&lt;/code&gt;. There are also tests of an application data service that call &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;src/app/heroes/heroes.service.spec.ts&lt;/code&gt;.</source>
          <target state="translated">Тесты, описанные в этом руководстве, находятся в &lt;code&gt;src/testing/http-client.spec.ts&lt;/code&gt; . Есть также тесты службы данных приложения, которые вызывают &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;src/app/heroes/heroes.service.spec.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c46d6deffac15f691e67af3e7802efbd62c6f4b5" translate="yes" xml:space="preserve">
          <source>The tests in this guide are designed to run in a browser so a &lt;code&gt;nativeElement&lt;/code&gt; value will always be an &lt;code&gt;HTMLElement&lt;/code&gt; or one of its derived classes.</source>
          <target state="translated">Тесты, &lt;code&gt;nativeElement&lt;/code&gt; в данном руководстве, предназначены для запуска в браузере, поэтому значением nativeElement всегда будет &lt;code&gt;HTMLElement&lt;/code&gt; или один из его производных классов.</target>
        </trans-unit>
        <trans-unit id="97411629b7777fd387f17c68fd54b77f893a322d" translate="yes" xml:space="preserve">
          <source>The tests in this guide only call &lt;code&gt;compileComponents&lt;/code&gt; when necessary.</source>
          <target state="translated">Тесты, &lt;code&gt;compileComponents&lt;/code&gt; в этом руководстве, вызывают compileComponents только при необходимости.</target>
        </trans-unit>
        <trans-unit id="b9b3c07155cb24bc62c23428c9b9b89113dffe1f" translate="yes" xml:space="preserve">
          <source>The tests need access to the (stub) &lt;code&gt;UserService&lt;/code&gt; injected into the &lt;code&gt;WelcomeComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UserService&lt;/code&gt; необходим доступ к (заглушке) UserService, внедренному в &lt;code&gt;WelcomeComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="552798847cfd969bee03bd536ec0eaa7b9abccb0" translate="yes" xml:space="preserve">
          <source>The tests themselves are almost identical to the stand-alone version:</source>
          <target state="translated">Сами тесты практически идентичны автономной версии:</target>
        </trans-unit>
        <trans-unit id="f24377c82eb7c604520a6472b6cdeda1e15d8e75" translate="yes" xml:space="preserve">
          <source>The text between the braces is often the name of a component property. Angular replaces that name with the string value of the corresponding component property.</source>
          <target state="translated">Текст между скобками часто является именем свойства компонента.Угол заменяет это имя строковым значением соответствующего свойства компонента.</target>
        </trans-unit>
        <trans-unit id="7001ead9ab548d59ed3b0b0d47f9fc2feadd5c3b" translate="yes" xml:space="preserve">
          <source>The text string.</source>
          <target state="translated">Текстовая строка.</target>
        </trans-unit>
        <trans-unit id="019a0c6e6325000b9ec468afe8f97d5dd0f39c5b" translate="yes" xml:space="preserve">
          <source>The textbox should both &lt;em&gt;display&lt;/em&gt; the hero's &lt;code&gt;name&lt;/code&gt; property and &lt;em&gt;update&lt;/em&gt; that property as the user types. That means data flows from the component class &lt;em&gt;out to the screen&lt;/em&gt; and from the screen &lt;em&gt;back to the class&lt;/em&gt;.</source>
          <target state="translated">Текстовое поле должно &lt;em&gt;отображать&lt;/em&gt; свойство &lt;code&gt;name&lt;/code&gt; героя и &lt;em&gt;обновлять&lt;/em&gt; это свойство по мере ввода пользователем. Это означает, что данные передаются из класса компонента &lt;em&gt;на экран&lt;/em&gt; и с экрана &lt;em&gt;обратно в класс&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="9c58df2e0d216969a6b8f76eb1c801e78a85b760" translate="yes" xml:space="preserve">
          <source>The third argument, &lt;code&gt;easing&lt;/code&gt;, controls how the animation &lt;a href=&quot;http://easings.net/&quot;&gt;accelerates and decelerates&lt;/a&gt; during its runtime. For example, &lt;code&gt;ease-in&lt;/code&gt; causes the animation to begin slowly, and to pick up speed as it progresses.</source>
          <target state="translated">Третий аргумент, &lt;code&gt;easing&lt;/code&gt; , контролирует, как анимация &lt;a href=&quot;http://easings.net/&quot;&gt;ускоряется и замедляется&lt;/a&gt; во время выполнения. Например, &lt;code&gt;ease-in&lt;/code&gt; причинах анимации , чтобы начать медленно, и подобрать скорость , как она прогрессирует.</target>
        </trans-unit>
        <trans-unit id="387ef2ede0548f8a7e5227510a281240ebc65597" translate="yes" xml:space="preserve">
          <source>The third parameter defines a pattern of pluralization categories and their matching values:</source>
          <target state="translated">Третий параметр определяет шаблон категорий множественного числа и их соответствующие значения:</target>
        </trans-unit>
        <trans-unit id="02b20036ccb6a097e5d6133a873e25f13d920be9" translate="yes" xml:space="preserve">
          <source>The third parameter defines a pluralization pattern consisting of pluralization categories and their matching values.</source>
          <target state="translated">Третий параметр определяет шаблон множественного числа,состоящий из категорий множественного числа и соответствующих им значений.</target>
        </trans-unit>
        <trans-unit id="9e89f13f3f25c09bfbb1e27588e7ce09b251770a" translate="yes" xml:space="preserve">
          <source>The three modes of type-checking treat embedded views differently. Consider the following example.</source>
          <target state="translated">Три режима проверки типа по-разному относятся к встроенным представлениям.Рассмотрим следующий пример.</target>
        </trans-unit>
        <trans-unit id="e1fbe17ffff22abb0345952cf457c1a79e7059ef" translate="yes" xml:space="preserve">
          <source>The threshold for error relative to the baseline (min &amp;amp; max).</source>
          <target state="translated">Порог ошибки относительно базовой линии (мин и макс).</target>
        </trans-unit>
        <trans-unit id="60c47ee6ec4aee3d2f301fc3d304a4955e681b57" translate="yes" xml:space="preserve">
          <source>The threshold for warning relative to the baseline (min &amp;amp; max).</source>
          <target state="translated">Порог для предупреждения относительно базовой линии (мин и макс).</target>
        </trans-unit>
        <trans-unit id="c4b55d03441bffab6eec1d8c5b1ac161eb54aa13" translate="yes" xml:space="preserve">
          <source>The time it takes the animation to complete, in milliseconds.</source>
          <target state="translated">Время,необходимое для завершения анимации,в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="39672ec6c077499845ec25181d8fdddc36ce80f6" translate="yes" xml:space="preserve">
          <source>The time zone. A time zone offset from GMT (such as &lt;code&gt;'+0430'&lt;/code&gt;), or a standard UTC/GMT or continental US time zone abbreviation. If not specified, uses host system settings.</source>
          <target state="translated">Часовой пояс. Смещение часового пояса от GMT (например, &lt;code&gt;'+0430'&lt;/code&gt; ) или стандартное UTC / GMT или аббревиатура часового пояса континентальной части США. Если не указан, используются настройки хост-системы.</target>
        </trans-unit>
        <trans-unit id="20e4e50a13a151170196f0e0befe4c1c2ba96789" translate="yes" xml:space="preserve">
          <source>The timing data for the step.</source>
          <target state="translated">Временные данные для шага.</target>
        </trans-unit>
        <trans-unit id="3a5862865c9788bb436ccfadcc4ca1e2e0ed4f85" translate="yes" xml:space="preserve">
          <source>The timing data for the steps.</source>
          <target state="translated">Временные данные для этапов.</target>
        </trans-unit>
        <trans-unit id="9bb53d35a2e2718224cdb5414e304756bc3d18c6" translate="yes" xml:space="preserve">
          <source>The title should appear at the top of the physical page. Begin the title with the markdown &lt;code&gt;#&lt;/code&gt; character. Alternatively, you can write the equivalent &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Заголовок должен появиться в верхней части физической страницы. Начните заголовок с символа уценки &lt;code&gt;#&lt;/code&gt; . Кроме того, вы можете написать эквивалент &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="964f1d13124f53046f40e305bcf164695c936261" translate="yes" xml:space="preserve">
          <source>The token is used as a type specifier for constructor injection.</source>
          <target state="translated">Токен используется в качестве спецификатора типа для инжекции конструктора.</target>
        </trans-unit>
        <trans-unit id="8f009ca4174665a8b55345b2eea3c338ed581af6" translate="yes" xml:space="preserve">
          <source>The token is used in the value position of a &lt;a href=&quot;lifecycle-hooks#using-aftercontent-hooks&quot;&gt;content query&lt;/a&gt;.</source>
          <target state="translated">Маркер используется в позиции значения &lt;a href=&quot;lifecycle-hooks#using-aftercontent-hooks&quot;&gt;запроса содержимого&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7392074d5488bfada1cba2db29c9e3aaea938dec" translate="yes" xml:space="preserve">
          <source>The tool that the CLI uses to perform complex tasks such as compilation and test running, according to a provided configuration. Architect is a shell that runs a &lt;a href=&quot;glossary#builder&quot;&gt;builder&lt;/a&gt; (defined in an &lt;a href=&quot;glossary#npm-package&quot;&gt;npm package&lt;/a&gt;) with a given &lt;a href=&quot;glossary#target&quot;&gt;target configuration&lt;/a&gt;.</source>
          <target state="translated">Инструмент, который CLI использует для выполнения сложных задач, таких как компиляция и запуск теста, в соответствии с предоставленной конфигурацией. Architect - это оболочка, которая запускает &lt;a href=&quot;glossary#builder&quot;&gt;компоновщик&lt;/a&gt; (определенный в &lt;a href=&quot;glossary#npm-package&quot;&gt;пакете npm&lt;/a&gt; ) с заданной &lt;a href=&quot;glossary#target&quot;&gt;целевой конфигурацией&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a41ed1a3c20f3b032ce6bf341b07b3ff788f0e6c" translate="yes" xml:space="preserve">
          <source>The top level of the root project folder for a collection contains configuration files, a &lt;code&gt;node_modules&lt;/code&gt; folder, and a &lt;code&gt;src/&lt;/code&gt; folder. The &lt;code&gt;src/&lt;/code&gt; folder contains subfolders for named schematics in the collection, and a schema, &lt;code&gt;collection.json&lt;/code&gt;, which describes the collected schematics. Each schematic is created with a name, description, and factory function.</source>
          <target state="translated">Верхний уровень корневой папки проекта для коллекции содержит файлы конфигурации, папку &lt;code&gt;node_modules&lt;/code&gt; и папку &lt;code&gt;src/&lt;/code&gt; . &lt;code&gt;src/&lt;/code&gt; папка содержит вложенные папки для имени схемы в коллекции, и схемы, &lt;code&gt;collection.json&lt;/code&gt; , которая описывает собранные схемы. Каждая схема создается с именем, описанием и заводской функцией.</target>
        </trans-unit>
        <trans-unit id="3f8c3bac42ac19a6aeec66ddbb65426c9445956b" translate="yes" xml:space="preserve">
          <source>The top paragraph is in the DOM. The bottom, disused paragraph is not; in its place is a comment about &quot;bindings&quot; (more about that &lt;a href=&quot;structural-directives#asterisk&quot;&gt;later&lt;/a&gt;).</source>
          <target state="translated">Верхний абзац находится в DOM. Внизу, заброшенный абзац нет; на его месте комментарий о &amp;laquo;привязках&amp;raquo; (подробнее об этом &lt;a href=&quot;structural-directives#asterisk&quot;&gt;позже&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="00501897b059678bdf07befdac7616fe6a03505a" translate="yes" xml:space="preserve">
          <source>The top-level directive for this control if present, otherwise null.</source>
          <target state="translated">Директива верхнего уровня для этого элемента управления,если она присутствует,в противном случае нулевая.</target>
        </trans-unit>
        <trans-unit id="aa4c65514687fcb647bd478319e8cd7a18baae19" translate="yes" xml:space="preserve">
          <source>The top-level directive for this group if present, otherwise null.</source>
          <target state="translated">Директива верхнего уровня для этой группы,если она присутствует,в противном случае нулевая.</target>
        </trans-unit>
        <trans-unit id="7f59f229151882c691c9c4dbd40db2c8cf35cf79" translate="yes" xml:space="preserve">
          <source>The top-level form directive for the control.</source>
          <target state="translated">Директива формы верхнего уровня для управления.</target>
        </trans-unit>
        <trans-unit id="aa96b6dd3b9c83ecd894feff632ccdcd8ce5055e" translate="yes" xml:space="preserve">
          <source>The total run time of the animation, in milliseconds.</source>
          <target state="translated">Общее время работы анимации,в миллисекундах.</target>
        </trans-unit>
        <trans-unit id="14aee0513a51a8b6574f4395af2536721cbd0b69" translate="yes" xml:space="preserve">
          <source>The transition from the server-rendered app to the client app happens quickly on a development machine, but you should always test your apps in real-world scenarios.</source>
          <target state="translated">Переход от серверного приложения к клиентскому происходит быстро на машине разработчика,но вы всегда должны тестировать свои приложения в реальных сценариях.</target>
        </trans-unit>
        <trans-unit id="2b2c02e508d78290b606f3c251693a83d5dd77d7" translate="yes" xml:space="preserve">
          <source>The translation file format.</source>
          <target state="translated">Формат файла перевода.</target>
        </trans-unit>
        <trans-unit id="a01d8be6610dc7e8ff92abc660e7a063be84ddba" translate="yes" xml:space="preserve">
          <source>The translation file.</source>
          <target state="translated">Файл перевода.</target>
        </trans-unit>
        <trans-unit id="566718f0b46f66443c966e183abd9ebc1557a5c4" translate="yes" xml:space="preserve">
          <source>The translation process that transforms one version of JavaScript to another version; for example, down-leveling ES2015 to the older ES5 version.</source>
          <target state="translated">Процесс перевода,который преобразует одну версию JavaScript в другую;например,понижение уровня ES2015 до более старой версии ES5.</target>
        </trans-unit>
        <trans-unit id="349bc86574d83717c24e66cc03a3095ffbe80534" translate="yes" xml:space="preserve">
          <source>The translator may also need to know the meaning or intent of the text message within this particular app context, in order to translate it the same way as other text with the same meaning. Start the &lt;code&gt;i18n&lt;/code&gt; attribute value with the &lt;em&gt;meaning&lt;/em&gt; and separate it from the &lt;em&gt;description&lt;/em&gt; with the &lt;code&gt;|&lt;/code&gt; character: &lt;code&gt;&amp;lt;meaning&amp;gt;|&amp;lt;description&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Переводчику также может потребоваться знать значение или цель текстового сообщения в этом конкретном контексте приложения, чтобы перевести его так же, как и другой текст с тем же значением. Начните значение атрибута &lt;code&gt;i18n&lt;/code&gt; со &lt;em&gt;смысла&lt;/em&gt; и отделите его от &lt;em&gt;описания&lt;/em&gt; знаком &lt;code&gt;|&lt;/code&gt; символ: &lt;code&gt;&amp;lt;meaning&amp;gt;|&amp;lt;description&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2fd93ca59b690739d63aaf50fa1d89967d7ba17a" translate="yes" xml:space="preserve">
          <source>The translator may also need to know the meaning or intent of the text message within this particular app context.</source>
          <target state="translated">Переводчику,возможно,также потребуется знать значение или намерение текстового сообщения в контексте данного конкретного приложения.</target>
        </trans-unit>
        <trans-unit id="c27e3942c3254b8b0f806e9fac192f3f58c19b32" translate="yes" xml:space="preserve">
          <source>The tree-shaking problem arises when a component is used as an injection token. There are two cases when that can happen.</source>
          <target state="translated">Проблема встряхивания деревьев возникает,когда компонент используется в качестве токена для инъекций.Есть два случая,когда это может произойти.</target>
        </trans-unit>
        <trans-unit id="6cbae59239e49c4968e3b2022136d5ac4b8dd7eb" translate="yes" xml:space="preserve">
          <source>The trigger name, used to associate it with an element. Unique within the component.</source>
          <target state="translated">Имя триггера,используемое для связи с элементом.Уникальное внутри компонента.</target>
        </trans-unit>
        <trans-unit id="d35231c4743a554b907dbe3ec68e6d1c03c3e04e" translate="yes" xml:space="preserve">
          <source>The tutorial walks you through the following steps.</source>
          <target state="translated">Учебник проведет вас через следующие шаги.</target>
        </trans-unit>
        <trans-unit id="599b7384324d0565d53e3693b7036e321e474501" translate="yes" xml:space="preserve">
          <source>The tutorial's &quot;in-memory web API&quot; module, a demo and development tool, intercepts all HTTP calls and simulates the behavior of a remote data server. In practice, you would remove that module and register your web API middleware on the server here.</source>
          <target state="translated">Учебный модуль &quot;in-memory web API&quot;,демо-версия и инструмент разработки,перехватывает все HTTP-вызовы и моделирует поведение удаленного сервера данных.На практике вы бы удалили этот модуль и зарегистрировали на сервере свое промежуточное программное обеспечение для работы с веб-интерфейсом API здесь.</target>
        </trans-unit>
        <trans-unit id="29c54a0ff6d263b78d0ad5a2dc608fb24dc18c92" translate="yes" xml:space="preserve">
          <source>The tutorial's &lt;code&gt;HeroService&lt;/code&gt; and &lt;code&gt;HeroSearchService&lt;/code&gt; delegate to the Angular &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; module to fetch application data. These services send requests to &lt;em&gt;relative&lt;/em&gt; URLs such as &lt;code&gt;api/heroes&lt;/code&gt;. In a Universal app, HTTP URLs must be &lt;em&gt;absolute&lt;/em&gt; (for example, &lt;code&gt;https://my-server.com/api/heroes&lt;/code&gt;). This means you need to change your services to make requests with absolute URLs when running on the server and with relative URLs when running in the browser.</source>
          <target state="translated">В учебном пособии по &lt;code&gt;HeroService&lt;/code&gt; и &lt;code&gt;HeroSearchService&lt;/code&gt; делегата Угловой &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; модулю для извлечения данных приложения. Эти сервисы отправляют запросы на &lt;em&gt;относительные&lt;/em&gt; URL, такие как &lt;code&gt;api/heroes&lt;/code&gt; . В универсальном приложении URL-адреса HTTP должны быть &lt;em&gt;абсолютными&lt;/em&gt; (например, &lt;code&gt;https://my-server.com/api/heroes&lt;/code&gt; ). Это означает, что вам нужно изменить свои службы, чтобы они выполняли запросы с абсолютными URL-адресами при работе на сервере и с относительными URL-адресами при запуске в браузере.</target>
        </trans-unit>
        <trans-unit id="305db64f25ecd1b1da157b5b8c651450a07346de" translate="yes" xml:space="preserve">
          <source>The tutorial's &lt;code&gt;HeroService&lt;/code&gt; and &lt;code&gt;HeroSearchService&lt;/code&gt; delegate to the Angular &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; module to fetch application data. These services send requests to &lt;em&gt;relative&lt;/em&gt; URLs such as &lt;code&gt;api/heroes&lt;/code&gt;. In a server-side rendered app, HTTP URLs must be &lt;em&gt;absolute&lt;/em&gt; (for example, &lt;code&gt;https://my-server.com/api/heroes&lt;/code&gt;). This means that the URLs must be somehow converted to absolute when running on the server and be left relative when running in the browser.</source>
          <target state="translated">В учебном пособии по &lt;code&gt;HeroService&lt;/code&gt; и &lt;code&gt;HeroSearchService&lt;/code&gt; делегата Угловой &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; модулю для извлечения данных приложения. Эти службы отправляют запросы на &lt;em&gt;относительные&lt;/em&gt; URL-адреса, такие как &lt;code&gt;api/heroes&lt;/code&gt; . В приложении, отображаемом на стороне сервера, URL-адреса HTTP должны быть &lt;em&gt;абсолютными&lt;/em&gt; (например, &lt;code&gt;https://my-server.com/api/heroes&lt;/code&gt; ). Это означает, что URL-адреса должны быть каким-то образом преобразованы в абсолютные при работе на сервере и оставлены относительными при работе в браузере.</target>
        </trans-unit>
        <trans-unit id="67bfdaa72e9953f6fcebc0bfa93857733007382e" translate="yes" xml:space="preserve">
          <source>The two asterisks, &lt;code&gt;**&lt;/code&gt;, indicate to Angular that this &lt;code&gt;routes&lt;/code&gt; definition is a wildcard route. For the component property, you can define any component in your application. Common choices include an application-specific &lt;code&gt;PageNotFoundComponent&lt;/code&gt;, which you can define to &lt;a href=&quot;router#404-page-how-to&quot;&gt;display a 404 page&lt;/a&gt; to your users; or a redirect to your application's main component. A wildcard route is the last route because it matches any URL. For more detail on why order matters for routes, see &lt;a href=&quot;router#route-order&quot;&gt;Route order&lt;/a&gt;.</source>
          <target state="translated">Две звездочки &lt;code&gt;**&lt;/code&gt; указывают Angular, что это определение &lt;code&gt;routes&lt;/code&gt; является маршрутом с подстановочными знаками. Для свойства компонента вы можете определить любой компонент в своем приложении. Общие варианты включают в себя &lt;code&gt;PageNotFoundComponent&lt;/code&gt; конкретного приложения , который вы можете определить для &lt;a href=&quot;router#404-page-how-to&quot;&gt;отображения страницы 404&lt;/a&gt; для ваших пользователей; или перенаправление на основной компонент вашего приложения. Маршрут с подстановочными знаками - это последний маршрут, поскольку он соответствует любому URL-адресу. Дополнительные сведения о том, почему порядок важен для маршрутов, см. В разделе &lt;a href=&quot;router#route-order&quot;&gt;Порядок маршрутов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afc05ea2dd3769a2464a65395b0f8fc1046a9410" translate="yes" xml:space="preserve">
          <source>The two build systems support different things, and even where they support the same things, they do those things differently. This means that the TypeScript source can result in different JavaScript code in a built library than it would in a built application.</source>
          <target state="translated">Обе системы сборки поддерживают разные вещи,и даже там,где они поддерживают одни и те же вещи,они делают эти вещи по-разному.Это означает,что исходные тексты TypeScript могут привести к тому,что код на JavaScript в собранной библиотеке будет отличаться от того,что было бы в собранном приложении.</target>
        </trans-unit>
        <trans-unit id="3d6bab88072a051c166e9e7471ac45c3b0a3264e" translate="yes" xml:space="preserve">
          <source>The two components will have a parent/child relationship. The parent &lt;code&gt;HeroesComponent&lt;/code&gt; will control the child &lt;code&gt;HeroDetailComponent&lt;/code&gt; by sending it a new hero to display whenever the user selects a hero from the list.</source>
          <target state="translated">Два компонента будут иметь отношения родитель / потомок. Родительский &lt;code&gt;HeroesComponent&lt;/code&gt; будет управлять дочерним &lt;code&gt;HeroDetailComponent&lt;/code&gt; , посылая ему нового героя для отображения всякий раз, когда пользователь выбирает героя из списка.</target>
        </trans-unit>
        <trans-unit id="5afe858ace0f507f6e00dcce82eccd00126d0833" translate="yes" xml:space="preserve">
          <source>The two types of validators are passed in separately as the second and third arg respectively, or together as part of an options object.</source>
          <target state="translated">Два типа валидаторов передаются по отдельности,как второй и третий аргументы соответственно,или вместе,как часть объекта опций.</target>
        </trans-unit>
        <trans-unit id="b4abd53c0253243e985b7e065cc9f874147ab4e8" translate="yes" xml:space="preserve">
          <source>The two update events, &lt;code&gt;available&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#activated&quot;&gt;activated&lt;/a&gt;&lt;/code&gt;, are &lt;code&gt;Observable&lt;/code&gt; properties of &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Два события обновления, &lt;code&gt;available&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate#activated&quot;&gt;activated&lt;/a&gt;&lt;/code&gt; , являются &lt;code&gt;Observable&lt;/code&gt; свойствами &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="681906e7bceda4d76618f4d591a5d4a3561cc264" translate="yes" xml:space="preserve">
          <source>The two update events, &lt;code&gt;available&lt;/code&gt; and &lt;code&gt;activated&lt;/code&gt;, are &lt;code&gt;Observable&lt;/code&gt; properties of &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Два события обновления, &lt;code&gt;available&lt;/code&gt; и &lt;code&gt;activated&lt;/code&gt; , являются &lt;code&gt;Observable&lt;/code&gt; свойствами &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1dbdba75ae5eb9e9bc50a6b2bc270a30ddeeee80" translate="yes" xml:space="preserve">
          <source>The two-way binding syntax is a great convenience compared to separate property and event bindings. It would be convenient to use two-way binding with HTML form elements like &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;. However, no native HTML element follows the &lt;code&gt;x&lt;/code&gt; value and &lt;code&gt;xChange&lt;/code&gt; event pattern.</source>
          <target state="translated">Синтаксис двусторонней привязки является большим удобством по сравнению с отдельными привязками свойств и событий. Было бы удобно использовать двустороннее связывание с такими элементами HTML-формы, как &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; . Однако ни один собственный элемент HTML не следует за значением &lt;code&gt;x&lt;/code&gt; и &lt;code&gt;xChange&lt;/code&gt; события xChange .</target>
        </trans-unit>
        <trans-unit id="552f44eabf3bee5b16dbbe6d805c5e4727da9fe7" translate="yes" xml:space="preserve">
          <source>The two-way binding syntax is really just syntactic sugar for a &lt;em&gt;property&lt;/em&gt; binding and an &lt;em&gt;event&lt;/em&gt; binding. Angular desugars the &lt;code&gt;SizerComponent&lt;/code&gt; binding into this:</source>
          <target state="translated">Синтаксис двусторонней привязки на самом деле является просто синтаксическим сахаром для привязки &lt;em&gt;свойства и&lt;/em&gt; привязки &lt;em&gt;события&lt;/em&gt; . Angular desugars привязка &lt;code&gt;SizerComponent&lt;/code&gt; в это:</target>
        </trans-unit>
        <trans-unit id="76cff48315da67038bca27defef7706ac9ac1f06" translate="yes" xml:space="preserve">
          <source>The two-way binding syntax is shorthand for a combination of property binding and event binding. The &lt;code&gt;SizerComponent&lt;/code&gt; binding as separate property binding and event binding is as follows.</source>
          <target state="translated">Синтаксис двусторонней привязки - это сокращение для комбинации привязки свойств и привязки событий. &lt;code&gt;SizerComponent&lt;/code&gt; связывание как связывание раздельной собственности и связывания событий выглядит следующим образом .</target>
        </trans-unit>
        <trans-unit id="194f581853ac13d61cf24a5c84685394267efc75" translate="yes" xml:space="preserve">
          <source>The type checker also throws an error if it can't determine whether a variable will be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; at runtime. You tell the type checker not to throw an error by applying the postfix &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator&quot;&gt;non-null assertion operator, !&lt;/a&gt;.</source>
          <target state="translated">Средство проверки типов также выдает ошибку, если не может определить, будет ли переменная &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; во время выполнения. Вы говорите средству проверки типов не выдавать ошибку, применяя постфиксный &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator&quot;&gt;ненулевой оператор утверждения,! &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="c8a7a258976054efab3a1877f011c988d0c55da1" translate="yes" xml:space="preserve">
          <source>The type checker also throws an error if it can't determine whether a variable will be &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; at runtime. You tell the type checker not to throw an error by applying the postfix &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator&quot;&gt;non-null assertion operator, !&lt;/a&gt;.</source>
          <target state="translated">Средство проверки типов также выдает ошибку, если не может определить, будет ли переменная &lt;code&gt;null&lt;/code&gt; или &lt;code&gt;undefined&lt;/code&gt; во время выполнения. Вы говорите средству проверки типов не выдавать ошибку, применяя постфиксный &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator&quot;&gt;ненулевой оператор утверждения,! &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6513ae7688b62a5255ebc4d625abc9be33526ee7" translate="yes" xml:space="preserve">
          <source>The type checker also throws an error if it can't determine whether a variable will be &lt;code&gt;null&lt;/code&gt; or undefined at runtime. You tell the type checker not to throw an error by applying the postfix &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator&quot;&gt;non-null assertion operator, !&lt;/a&gt;.</source>
          <target state="translated">Средство проверки типа также выдает ошибку, если не может определить, будет ли переменная &lt;code&gt;null&lt;/code&gt; или неопределенной во время выполнения. Вы говорите, что средство проверки типов не выдает ошибку, применяя &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html#non-null-assertion-operator&quot;&gt;оператор ненулевого утверждения&lt;/a&gt; postfix ,! ,</target>
        </trans-unit>
        <trans-unit id="d949ded92c64bb6e37f7798775515186c690205d" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;#parent&lt;/code&gt; now indicates that it may be null. See &lt;a href=&quot;https://github.com/angular/angular/pull/32671&quot;&gt;PR 32671&lt;/a&gt;.</source>
          <target state="translated">Тип &lt;code&gt;&lt;a href=&quot;../api/forms/abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;#parent&lt;/code&gt; теперь указывает, что он может иметь значение NULL. См. &lt;a href=&quot;https://github.com/angular/angular/pull/32671&quot;&gt;PR 32671&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81dce0b481d7ac34dd874fc96a0c29f5d10a16ae" translate="yes" xml:space="preserve">
          <source>The type of budget. One of:</source>
          <target state="translated">Тип бюджета.Один из:</target>
        </trans-unit>
        <trans-unit id="c15292902555eb7a2059d3f203806ac34a995f12" translate="yes" xml:space="preserve">
          <source>The type of component the factory will create.</source>
          <target state="translated">Тип компонента,который будет создан на заводе.</target>
        </trans-unit>
        <trans-unit id="7c0884d61dcbf36812f4f429d57a3fd536285ae5" translate="yes" xml:space="preserve">
          <source>The type of numeric value to be formatted (such as &lt;code&gt;Decimal&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;numberformatstyle#Currency&quot;&gt;Currency&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">Тип числового значения для форматирования (например, &lt;code&gt;Decimal&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;numberformatstyle#Currency&quot;&gt;Currency&lt;/a&gt;&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="4ca1c6ea29abaecf66afa18e36661807315423ea" translate="yes" xml:space="preserve">
          <source>The type of numeric value to be formatted (such as &lt;code&gt;Decimal&lt;/code&gt; or &lt;code&gt;Currency&lt;/code&gt;.)</source>
          <target state="translated">Тип форматируемого числового значения (например, &lt;code&gt;Decimal&lt;/code&gt; или &lt;code&gt;Currency&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="1914de4f10fd251ed62f048b8948f40fc99532fb" translate="yes" xml:space="preserve">
          <source>The type of object that &lt;a href=&quot;viewchildren&quot;&gt;&lt;code&gt;ViewChildren&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;contentchildren&quot;&gt;&lt;code&gt;ContentChildren&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;querylist&quot;&gt;&lt;code&gt;QueryList&lt;/code&gt;&lt;/a&gt; provide.</source>
          <target state="translated">Тип объекта, который предоставляют &lt;a href=&quot;viewchildren&quot;&gt; &lt;code&gt;ViewChildren&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;contentchildren&quot;&gt; &lt;code&gt;ContentChildren&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;querylist&quot;&gt; &lt;code&gt;QueryList&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cee06caf5b085e8040bc4dd74a44cf2669ac0d4" translate="yes" xml:space="preserve">
          <source>The type of this component (as created by a &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; class).</source>
          <target state="translated">Тип этого компонента (созданный классом &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;ComponentFactory&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="351e662a9168935a10d637a721b52c3db93d0b18" translate="yes" xml:space="preserve">
          <source>The type parameter, &lt;code&gt;T&lt;/code&gt;, is the kind of metadata you'd pass to the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator:</source>
          <target state="translated">Параметр типа &lt;code&gt;T&lt;/code&gt; - это тип метаданных, которые вы передаете декоратору &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="92e0731044a01c861010ac8dd3364de0bab42484" translate="yes" xml:space="preserve">
          <source>The type parameter, while optional, conveys the dependency's type to developers and tooling. The token description is another developer aid.</source>
          <target state="translated">Параметр Type,хотя и необязателен,передает тип зависимости разработчикам и инструментам.Описание токена-это еще одна помощь разработчикам.</target>
        </trans-unit>
        <trans-unit id="3be642a3bc4d6290043093ef6c6b0e31a8237f3c" translate="yes" xml:space="preserve">
          <source>The types of the &lt;code&gt;observe&lt;/code&gt; and &lt;code&gt;response&lt;/code&gt; options are &lt;em&gt;string unions&lt;/em&gt;, rather than plain strings.</source>
          <target state="translated">Типы опций &lt;code&gt;observe&lt;/code&gt; и &lt;code&gt;response&lt;/code&gt; - это &lt;em&gt;объединения строк&lt;/em&gt; , а не простые строки.</target>
        </trans-unit>
        <trans-unit id="fdab28b804a5bc2df8ed953cd182dcd879bebcd0" translate="yes" xml:space="preserve">
          <source>The underlying native element or &lt;code&gt;null&lt;/code&gt; if direct access to native elements is not supported (e.g. when the application runs in a web worker).</source>
          <target state="translated">Основной нативный элемент или &lt;code&gt;null&lt;/code&gt; если прямой доступ к нативным элементам не поддерживается (например, когда приложение работает в веб-приложении).</target>
        </trans-unit>
        <trans-unit id="f9fb3d4a522a7d59fc653358ee450cd39cd54d77" translate="yes" xml:space="preserve">
          <source>The unit test files themselves also need to be switched to Angular when their production counterparts are switched. The specs for the checkmark pipe are probably the most straightforward, as the pipe has no dependencies:</source>
          <target state="translated">Сами файлы модульных тестов также должны быть переключены на &quot;Угловые&quot; при переключении их производственных аналогов.Характеристики контрольной трубы,вероятно,являются самыми простыми,так как труба не имеет зависимостей:</target>
        </trans-unit>
        <trans-unit id="7b843cdeff59d7337d09dffec8474c659f368f17" translate="yes" xml:space="preserve">
          <source>The unit test for the phone service is a bit more involved. You need to switch from the mocked-out AngularJS &lt;code&gt;$httpBackend&lt;/code&gt; to a mocked-out Angular Http backend.</source>
          <target state="translated">Модульный тест для телефонной службы немного сложнее. Вам нужно переключиться с &lt;code&gt;$httpBackend&lt;/code&gt; AngularJS $ httpBackend на макетированный бэкэнд Angular Http.</target>
        </trans-unit>
        <trans-unit id="789acab94f4da6bd1b31fd8d53475bbe9758d87a" translate="yes" xml:space="preserve">
          <source>The updated &lt;code&gt;HeroesRoutingModule&lt;/code&gt; looks like this:</source>
          <target state="translated">Обновленный &lt;code&gt;HeroesRoutingModule&lt;/code&gt; выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="987de19a86a67d115685949783bff6fddad8b8ee" translate="yes" xml:space="preserve">
          <source>The upgrade NgModule.</source>
          <target state="translated">Обновленный NgModule.</target>
        </trans-unit>
        <trans-unit id="d44b088804cbf01923d7400df118887612abd201" translate="yes" xml:space="preserve">
          <source>The url from which this snapshot was created</source>
          <target state="translated">Урл,из которого был создан этот снимок...</target>
        </trans-unit>
        <trans-unit id="0ee83b79b718d1a4ec36d1b3d58ebe726ac3e494" translate="yes" xml:space="preserve">
          <source>The url serialization strategy is customizable. You can make all URLs case insensitive by providing a custom UrlSerializer.</source>
          <target state="translated">Стратегия сериализации url настраивается.Вы можете сделать все URL-адреса нечувствительными к регистру,предоставив пользовательский UrlSerializer.</target>
        </trans-unit>
        <trans-unit id="ad97874a0022a010e0155677ec6967027c4314b9" translate="yes" xml:space="preserve">
          <source>The use of &lt;code&gt;name&lt;/code&gt; attributes for validation and form-element change tracking.</source>
          <target state="translated">Использование атрибутов &lt;code&gt;name&lt;/code&gt; для проверки и отслеживания изменений элемента формы.</target>
        </trans-unit>
        <trans-unit id="9154043e44b5d932b8c61e6a2f25ebf4ef5aea92" translate="yes" xml:space="preserve">
          <source>The user calls the &lt;code&gt;favoriteColorControl.setValue()&lt;/code&gt; method, which updates the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; value.</source>
          <target state="translated">Пользователь вызывает метод &lt;code&gt;favoriteColorControl.setValue()&lt;/code&gt; , который обновляет значение &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a5976d96dbc10bd55988a4a489b75fc9937bde4" translate="yes" xml:space="preserve">
          <source>The user can select a hero and see that hero's details.</source>
          <target state="translated">Пользователь может выбрать героя и просмотреть его данные.</target>
        </trans-unit>
        <trans-unit id="b99c1b741aee49f63e964f6109422ed732ed9ff3" translate="yes" xml:space="preserve">
          <source>The user closes the app and does not open it for a while.</source>
          <target state="translated">Пользователь закрывает приложение и некоторое время не открывает его.</target>
        </trans-unit>
        <trans-unit id="aa661a59e3356526e5cd2452506236a954f28c3e" translate="yes" xml:space="preserve">
          <source>The user needs a way to open the popup. Open the &lt;code&gt;AppComponent&lt;/code&gt; and add a &quot;Contact&quot; link.</source>
          <target state="translated">Пользователю нужен способ открыть всплывающее окно. Откройте &lt;code&gt;AppComponent&lt;/code&gt; и добавьте ссылку &amp;laquo;Контакт&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ec95381196d078fadc8f2f14dd8fb15e40e96c16" translate="yes" xml:space="preserve">
          <source>The user opens the app again. The service worker serves the latest version known to it at this point, namely the old version (&lt;code&gt;index.html&lt;/code&gt; and &lt;code&gt;main.&amp;lt;main-hash-1&amp;gt;.js&lt;/code&gt;).</source>
          <target state="translated">Пользователь снова открывает приложение. Сервисный воркер обслуживает последнюю известную ему на данный момент версию, а именно старую версию ( &lt;code&gt;index.html&lt;/code&gt; и &lt;code&gt;main.&amp;lt;main-hash-1&amp;gt;.js&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="369264e6d1f498d1106a6d3877d3ee5e43560ae5" translate="yes" xml:space="preserve">
          <source>The user should be able to get to these details in three ways.</source>
          <target state="translated">Пользователь должен иметь возможность добраться до этих деталей тремя способами.</target>
        </trans-unit>
        <trans-unit id="bbafb9f9e9d3caf33087f60e1818944be5dd3d9b" translate="yes" xml:space="preserve">
          <source>The user should be able to navigate back and forth between the &lt;code&gt;DashboardComponent&lt;/code&gt; and the &lt;code&gt;HeroesComponent&lt;/code&gt; by clicking links in the navigation area near the top of the page.</source>
          <target state="translated">Пользователь должен иметь возможность перемещаться назад и вперед между &lt;code&gt;DashboardComponent&lt;/code&gt; и &lt;code&gt;HeroesComponent&lt;/code&gt; , щелкая ссылки в области навигации в верхней части страницы.</target>
        </trans-unit>
        <trans-unit id="e9cc50a2572132b6fe866bbf0976206cd31bec89" translate="yes" xml:space="preserve">
          <source>The user should be able to submit this form after filling it in. The &lt;em&gt;Submit&lt;/em&gt; button at the bottom of the form does nothing on its own, but it will trigger a form submit because of its type (&lt;code&gt;type=&quot;submit&quot;&lt;/code&gt;).</source>
          <target state="translated">Пользователь должен иметь возможность отправить эту форму после ее заполнения. Кнопка &amp;laquo; &lt;em&gt;Отправить&amp;raquo;&lt;/em&gt; внизу формы ничего не делает сама по себе, но она инициирует отправку формы из-за ее типа ( &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8e8ef51761e17807182420e3debbce24091d7fd9" translate="yes" xml:space="preserve">
          <source>The user should be able to submit this form after filling it in. The &lt;strong&gt;Submit&lt;/strong&gt; button at the bottom of the form does nothing on its own, but it does trigger a form-submit event because of its type (&lt;code&gt;type=&quot;submit&quot;&lt;/code&gt;). To respond to this event, take the following steps.</source>
          <target state="translated">Пользователь должен иметь возможность отправить эту форму после ее заполнения. Кнопка &amp;laquo; &lt;strong&gt;Отправить&amp;raquo;&lt;/strong&gt; в нижней части формы ничего не делает сама по себе, но вызывает событие отправки формы из-за его типа ( &lt;code&gt;type=&quot;submit&quot;&lt;/code&gt; ). Чтобы отреагировать на это событие, сделайте следующие шаги.</target>
        </trans-unit>
        <trans-unit id="01ba075c2899372b1eb9a9b167514bce8549789e" translate="yes" xml:space="preserve">
          <source>The user types &lt;em&gt;Blue&lt;/em&gt; into the input element.</source>
          <target state="translated">Пользователь вводит &lt;em&gt;синий&lt;/em&gt; в элемент ввода.</target>
        </trans-unit>
        <trans-unit id="746db581b79b8e44db4102f1f4a9027db5fb21fd" translate="yes" xml:space="preserve">
          <source>The user types a value into the input element, in this case the favorite color &lt;em&gt;Blue&lt;/em&gt;.</source>
          <target state="translated">Пользователь вводит значение в элемент ввода, в данном случае любимый цвет &lt;em&gt;синий&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0f5eade11b7a8a4872382f56342ccc7dae30caf1" translate="yes" xml:space="preserve">
          <source>The validation status of the control. There are four possible validation status values:</source>
          <target state="translated">Проверка статуса контроля.Существует четыре возможных значения статуса валидации:</target>
        </trans-unit>
        <trans-unit id="98b77f9877456963068b672348f174d66942c7cb" translate="yes" xml:space="preserve">
          <source>The validation uses the TypeScript type checker and the options supplied to the TypeScript compiler to control how detailed the type validation is. For example, if the &lt;code&gt;strictTypeChecks&lt;/code&gt; is specified, the error &lt;code&gt;my.component.ts.MyComponent.html(1,1): : Object is possibly 'undefined'&lt;/code&gt; is reported as well as the above error message.</source>
          <target state="translated">При проверке используется средство проверки типов TypeScript и параметры, предоставляемые компилятору TypeScript, для управления подробностью проверки типа. Например, если &lt;code&gt;strictTypeChecks&lt;/code&gt; , &lt;code&gt;my.component.ts.MyComponent.html(1,1): : Object is possibly 'undefined'&lt;/code&gt; об ошибке my.component.ts.MyComponent.html (1,1):: объект, возможно, &amp;laquo;неопределенный&amp;raquo;, а также указанное выше сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="a629e0949c3e58ce213f6f6bd6ae68dbb3fa29cd" translate="yes" xml:space="preserve">
          <source>The validator code is as follows.</source>
          <target state="translated">Код валидатора выглядит следующим образом.</target>
        </trans-unit>
        <trans-unit id="0d21ce6b8675f7d9e43afcf309b4fddb296bc7b1" translate="yes" xml:space="preserve">
          <source>The validator code is as follows:</source>
          <target state="translated">Код валидатора выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="c9d7dbc5ca49f1ab98a4c94cd5b17358e1f32e71" translate="yes" xml:space="preserve">
          <source>The validator retrieves the child controls by calling the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;'s &lt;a href=&quot;../api/forms/abstractcontrol#get&quot;&gt;get&lt;/a&gt; method, then compares the values of the &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;alterEgo&lt;/code&gt; controls.</source>
          <target state="translated">Валидатор извлекает дочерние элементы управления с помощью вызова &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; &amp;laquo;s &lt;a href=&quot;../api/forms/abstractcontrol#get&quot;&gt;ПОЛУЧИТЬ&lt;/a&gt; метод, затем сравнивает значение &lt;code&gt;name&lt;/code&gt; и &lt;code&gt;alterEgo&lt;/code&gt; управления.</target>
        </trans-unit>
        <trans-unit id="e446494ebae458b5aea2681dfd535005a9fb5001" translate="yes" xml:space="preserve">
          <source>The value</source>
          <target state="translated">Значение</target>
        </trans-unit>
        <trans-unit id="b3ab44397f0e829c1263e8d41c48f13f570826c7" translate="yes" xml:space="preserve">
          <source>The value accessor for the control</source>
          <target state="translated">Значение аксессуара для управления</target>
        </trans-unit>
        <trans-unit id="516bd69561122628d42ad25e8281d2c0a9abe779" translate="yes" xml:space="preserve">
          <source>The value for each day of the week, based on the &lt;code&gt;en-US&lt;/code&gt; locale</source>
          <target state="translated">Значение для каждого дня недели в зависимости от локали &lt;code&gt;en-US&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c2748ca458055ddfd5db76827b1b28c8b741c19c" translate="yes" xml:space="preserve">
          <source>The value is the statement to execute when the event occurs. If the statement evaluates to &lt;code&gt;false&lt;/code&gt;, then &lt;code&gt;preventDefault&lt;/code&gt; is applied on the DOM event. A handler method can refer to the &lt;code&gt;$event&lt;/code&gt; local variable.</source>
          <target state="translated">Значение - это оператор, который выполняется при возникновении события. Если оператор оценивается как &lt;code&gt;false&lt;/code&gt; , то на событие DOM применяется &lt;code&gt;preventDefault&lt;/code&gt; . Метод-обработчик может ссылаться на локальную переменную &lt;code&gt;$event&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8273c4bd416c41f6f045c126981755bb55c2fa6" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#nativeElement&quot;&gt;ComponentFixture.nativeElement&lt;/a&gt;&lt;/code&gt; has the &lt;code&gt;any&lt;/code&gt; type. Later you'll encounter the &lt;code&gt;&lt;a href=&quot;../api/core/debugelement#nativeElement&quot;&gt;DebugElement.nativeElement&lt;/a&gt;&lt;/code&gt; and it too has the &lt;code&gt;any&lt;/code&gt; type.</source>
          <target state="translated">Значение &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#nativeElement&quot;&gt;ComponentFixture.nativeElement&lt;/a&gt;&lt;/code&gt; имеет &lt;code&gt;any&lt;/code&gt; тип. Позже вы столкнетесь с &lt;code&gt;&lt;a href=&quot;../api/core/debugelement#nativeElement&quot;&gt;DebugElement.nativeElement&lt;/a&gt;&lt;/code&gt; , и он тоже имеет тип &lt;code&gt;any&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0ad903e2fa7af996e920297f63f7b7748e6d5872" translate="yes" xml:space="preserve">
          <source>The value of &lt;em&gt;settingOrProject&lt;/em&gt; is one of the following.</source>
          <target state="translated">Значение &lt;em&gt;settingOrProject&lt;/em&gt; является одним из следующих.</target>
        </trans-unit>
        <trans-unit id="74c4007c0c9568fe1d9f263c845a7b9cdffe9674" translate="yes" xml:space="preserve">
          <source>The value of a &lt;em&gt;value provider&lt;/em&gt; must be defined before you specify it here. The title string literal is immediately available. The &lt;code&gt;someHero&lt;/code&gt; variable in this example was set earlier in the file as shown below. You can't use a variable whose value will be defined later.</source>
          <target state="translated">Значение &lt;em&gt;поставщика значения&lt;/em&gt; должны быть определены , прежде чем указать его здесь. Строка литерала заголовка доступна сразу. &lt;code&gt;someHero&lt;/code&gt; переменная в данном примере был установлен ранее в файле , как показано ниже. Вы не можете использовать переменную, значение которой будет определено позже.</target>
        </trans-unit>
        <trans-unit id="c638e133e6a98cc0fc2d797245f610b6e500f4d6" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;enableIvy&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt; by default, as of version 9.</source>
          <target state="translated">Значение флага &lt;code&gt;enableIvy&lt;/code&gt; по умолчанию установлено в значение &lt;code&gt;true&lt;/code&gt; ,начиная с версии 9.</target>
        </trans-unit>
        <trans-unit id="9e40077c9021d6667f8d32f6871c8f00bc068d9d" translate="yes" xml:space="preserve">
          <source>The value of the iterable expression, which can be used as a &lt;a href=&quot;../../guide/structural-directives#template-input-variable&quot;&gt;template input variable&lt;/a&gt;.</source>
          <target state="translated">Значение итеративного выражения, которое можно использовать в качестве &lt;a href=&quot;../../guide/structural-directives#template-input-variable&quot;&gt;входной переменной шаблона&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e5b7782babd6cd47ebb1077395fdc52934d8acaf" translate="yes" xml:space="preserve">
          <source>The value or values to delete for the given header.</source>
          <target state="translated">Значение или значения,которые необходимо удалить для данного заголовка.</target>
        </trans-unit>
        <trans-unit id="c3a47c38e67f33789b5fcdb66f3ebef0b8ae5f17" translate="yes" xml:space="preserve">
          <source>The value or values to set or overide for the given header.</source>
          <target state="translated">Значение или значения,которые необходимо установить или перекрыть для данного заголовка.</target>
        </trans-unit>
        <trans-unit id="9ea1a4ae4b9c004c5d2afcb14b6504f978c0f7ea" translate="yes" xml:space="preserve">
          <source>The value to append.</source>
          <target state="translated">Значение,которое нужно добавить.</target>
        </trans-unit>
        <trans-unit id="2b048ad41afe70b72be36c6e88e6bdc321667a94" translate="yes" xml:space="preserve">
          <source>The value to emit.</source>
          <target state="translated">Значение для излучения.</target>
        </trans-unit>
        <trans-unit id="1d37da7064bd8c9a2adb3a8365e6b179578a33bb" translate="yes" xml:space="preserve">
          <source>The value to inject.</source>
          <target state="translated">Значение для инъекций.</target>
        </trans-unit>
        <trans-unit id="965b65af75152cd8483b194aca89f3d4a3563d3b" translate="yes" xml:space="preserve">
          <source>The value to remove, if provided.</source>
          <target state="translated">Значение для удаления,если оно предусмотрено.</target>
        </trans-unit>
        <trans-unit id="36090b23e6b19abea403f7cf11708f739d6ebe0a" translate="yes" xml:space="preserve">
          <source>The value.</source>
          <target state="translated">Значение.</target>
        </trans-unit>
        <trans-unit id="752b8837b88dbea5e1b07283811801b832bbf900" translate="yes" xml:space="preserve">
          <source>The values in the store are serialized/deserialized using JSON.stringify/JSON.parse. So only boolean, number, string, null and non-class objects will be serialized and deserialzied in a non-lossy manner.</source>
          <target state="translated">Значения в магазине сериализуются/дериализуются с помощью JSON.stringify/JSON.parse.Таким образом,только булевые,номерные,строковые,нулевые и неклассовые объекты будут сериализованы и десериализованы без потерь.</target>
        </trans-unit>
        <trans-unit id="52ff44818e20f7220d3cd6a6457d439574feaba5" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;heroForm&lt;/code&gt; is now a reference to the &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive that governs the form as a whole.</source>
          <target state="translated">Переменная &lt;code&gt;heroForm&lt;/code&gt; теперь является ссылкой на директиву &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; , которая управляет формой в целом.</target>
        </trans-unit>
        <trans-unit id="54da2a6d6e9f9a935b31b81218374530af583f38" translate="yes" xml:space="preserve">
          <source>The verbose form shows that &lt;code&gt;ref2&lt;/code&gt; is outside the parent template.</source>
          <target state="translated">Подробная форма показывает, что &lt;code&gt;ref2&lt;/code&gt; находится за пределами родительского шаблона.</target>
        </trans-unit>
        <trans-unit id="3f524c06d92d1f81ab05583d4d275b72aa86fd3a" translate="yes" xml:space="preserve">
          <source>The version identifier of the app is determined by the contents of all resources, and it changes if any of them change. In practice, the version is determined by the contents of the &lt;code&gt;ngsw.json&lt;/code&gt; file, which includes hashes for all known content. If any of the cached files change, the file's hash will change in &lt;code&gt;ngsw.json&lt;/code&gt;, causing the Angular service worker to treat the active set of files as a new version.</source>
          <target state="translated">Идентификатор версии приложения определяется содержимым всех ресурсов и изменяется при изменении любого из них. На практике версия определяется содержимым файла &lt;code&gt;ngsw.json&lt;/code&gt; , который содержит хеши для всего известного содержимого. Если какой-либо из кэшированных файлов изменится, хеш файла изменится в &lt;code&gt;ngsw.json&lt;/code&gt; , в результате чего работник службы Angular будет рассматривать активный набор файлов как новую версию.</target>
        </trans-unit>
        <trans-unit id="61010f814fd314444171513bbb7090fb2e7c56e3" translate="yes" xml:space="preserve">
          <source>The version number is incremented based on the level of change included in the release.</source>
          <target state="translated">Номер версии увеличивается в зависимости от уровня изменений,включенных в релиз.</target>
        </trans-unit>
        <trans-unit id="a40aa756483f3a5f523498855f5257b57156b5a8" translate="yes" xml:space="preserve">
          <source>The view encapsulation strategy to use in the initial project.</source>
          <target state="translated">Стратегия инкапсуляции представления для использования в начальном проекте.</target>
        </trans-unit>
        <trans-unit id="fa51a23f655a6d3d42ddb64f7327a8e642728256" translate="yes" xml:space="preserve">
          <source>The view encapsulation strategy to use in the new app.</source>
          <target state="translated">Стратегия инкапсуляции представления для использования в новом приложении.</target>
        </trans-unit>
        <trans-unit id="fcf377037a7d42bc71c7f002d89b4f46b0d68cfa" translate="yes" xml:space="preserve">
          <source>The view encapsulation strategy to use in the new component.</source>
          <target state="translated">Стратегия инкапсуляции представления для использования в новом компоненте.</target>
        </trans-unit>
        <trans-unit id="3f5b538e2927dd6de153329e296a74a421bc0c36" translate="yes" xml:space="preserve">
          <source>The view encapsulation type, which determines how styles are applied to DOM elements. One of</source>
          <target state="translated">Тип инкапсуляции вида,определяющий применение стилей к элементам DOM.Один из</target>
        </trans-unit>
        <trans-unit id="52604a8e00ae2362f799cae913f8150372948692" translate="yes" xml:space="preserve">
          <source>The view hierarchy doesn't imply a component hierarchy. Views that are embedded in the context of a particular hierarchy can be host views of other components. Those components can be in the same NgModule as the hosting component, or belong to other NgModules.</source>
          <target state="translated">Иерархия представлений не подразумевает иерархию компонентов.Представления,которые встроены в контекст определенной иерархии,могут быть представлениями хостов других компонентов.Эти компоненты могут находиться в том же NgModule,что и компонент хостинга,или принадлежать другим NgModules.</target>
        </trans-unit>
        <trans-unit id="c7838a7b8c734a7282cb30df6d8616064238194b" translate="yes" xml:space="preserve">
          <source>The view to insert.</source>
          <target state="translated">Вид для вставки.</target>
        </trans-unit>
        <trans-unit id="4ea024c3fe94500d702337f77198fe17d570e08e" translate="yes" xml:space="preserve">
          <source>The view to move.</source>
          <target state="translated">Вид,чтобы двигаться.</target>
        </trans-unit>
        <trans-unit id="64ae54575a804f27c02ce687200e683460668cdb" translate="yes" xml:space="preserve">
          <source>The view to query.</source>
          <target state="translated">Вид на запрос.</target>
        </trans-unit>
        <trans-unit id="c984239cd56798261fc1dbd922778058b32b773d" translate="yes" xml:space="preserve">
          <source>The view-to-model diagram shows how data flows when an input field's value is changed from the view through the following steps.</source>
          <target state="translated">Диаграмма &quot;представление-модель&quot; показывает,как проходят данные при изменении значения поля ввода из представления следующим образом.</target>
        </trans-unit>
        <trans-unit id="f7eca5f51435a85c65dffa7d0a3287d518cfc6d9" translate="yes" xml:space="preserve">
          <source>The virtual file system is represented by a &lt;code&gt;Tree&lt;/code&gt;. The &lt;code&gt;Tree&lt;/code&gt; data structure contains a &lt;em&gt;base&lt;/em&gt; (a set of files that already exists) and a &lt;em&gt;staging area&lt;/em&gt; (a list of changes to be applied to the base). When making modifications, you don't actually change the base, but add those modifications to the staging area.</source>
          <target state="translated">Виртуальная файловая система представлена &lt;code&gt;Tree&lt;/code&gt; . &lt;code&gt;Tree&lt;/code&gt; структура данных содержит &lt;em&gt;базу&lt;/em&gt; (набор файлов , которые уже существуют) и &lt;em&gt;промежуточную область&lt;/em&gt; (список изменений , который будет применен к основанию). При внесении изменений вы фактически не меняете базу, а добавляете эти модификации в область подготовки.</target>
        </trans-unit>
        <trans-unit id="2cefd7f9cff91ac8ee2cb82756abed3d99ad82ad" translate="yes" xml:space="preserve">
          <source>The web is used by a wide variety of people, including those who have visual or motor impairments. A variety of assistive technologies are available that make it much easier for these groups to interact with web-based software applications. In addition, designing an application to be more accessible generally improves the user experience for all users.</source>
          <target state="translated">Паутиной пользуются самые разные люди,включая тех,у кого есть проблемы со зрением или моторикой.Доступны различные вспомогательные технологии,которые значительно облегчают взаимодействие этих групп с веб-приложениями.Кроме того,разработка более доступного приложения в целом улучшает пользовательский опыт для всех пользователей.</target>
        </trans-unit>
        <trans-unit id="0870b1ddd7a401e28edca7748851260cf0d812b1" translate="yes" xml:space="preserve">
          <source>The web server must distinguish &lt;em&gt;app page requests&lt;/em&gt; from other kinds of requests.</source>
          <target state="translated">Веб-сервер должен отличать &lt;em&gt;запросы страницы приложения&lt;/em&gt; от других типов запросов.</target>
        </trans-unit>
        <trans-unit id="3bcd56955050ccb3584a4da36608073e9ca82456" translate="yes" xml:space="preserve">
          <source>The wildcard state &lt;code&gt;*&lt;/code&gt; matches to &lt;em&gt;any&lt;/em&gt; state, including &lt;code&gt;void&lt;/code&gt;.</source>
          <target state="translated">Состояние подстановочного знака &lt;code&gt;*&lt;/code&gt; соответствует &lt;em&gt;любому&lt;/em&gt; состоянию, включая &lt;code&gt;void&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdfa623802e57793c0a1db6ff9d61453c796514c" translate="yes" xml:space="preserve">
          <source>The word &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;uppercase&lt;/a&gt;&lt;/code&gt; in the interpolation binding, right after the pipe operator ( | ), activates the built-in &lt;code&gt;UppercasePipe&lt;/code&gt;.</source>
          <target state="translated">Верхний &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;uppercase&lt;/a&gt;&lt;/code&gt; слова в интерполяционной привязке сразу после оператора канала (|) активирует встроенный &lt;code&gt;UppercasePipe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b02e653c1a608596d35a7fd022b60a7182b55381" translate="yes" xml:space="preserve">
          <source>The wording of each guideline indicates how strong the recommendation is.</source>
          <target state="translated">Формулировка каждого руководящего положения указывает на то,насколько настоятельной является рекомендация.</target>
        </trans-unit>
        <trans-unit id="7c860c7e7f5c46dabbf52c5dc7a52a91bc246694" translate="yes" xml:space="preserve">
          <source>Their details are quite different in architecture and implementation. In AngularJS, you add Angular assets to the &lt;code&gt;angular.module&lt;/code&gt; property. In Angular, you create one or more classes adorned with an &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator that describes Angular assets in metadata. The differences blossom from there.</source>
          <target state="translated">Их детали сильно отличаются по архитектуре и реализации. В AngularJS вы добавляете ресурсы Angular к свойству &lt;code&gt;angular.module&lt;/code&gt; . В Angular вы создаете один или несколько классов, украшенных декоратором &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , который описывает ресурсы Angular в метаданных. Различия расцветают оттуда.</target>
        </trans-unit>
        <trans-unit id="1c9f03dfa8dacad02e2c3ca38cbf5ee7fdadd4d0" translate="yes" xml:space="preserve">
          <source>Their details are quite different in architecture and implementation. In AngularJS, you create a module by specifying its name and dependencies with &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.module&quot;&gt;angular.module()&lt;/a&gt;. Then you can add assets using its various methods. In Angular, you create a class adorned with an &lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt; decorator that describes assets in metadata.</source>
          <target state="translated">Их детали сильно отличаются по архитектуре и реализации. В AngularJS вы создаете модуль, указывая его имя и зависимости с помощью &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.module&quot;&gt;angular.module ()&lt;/a&gt; . Затем вы можете добавлять активы, используя различные методы. В Angular вы создаете класс, украшенный декоратором &lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule,&lt;/a&gt; который описывает ресурсы в метаданных.</target>
        </trans-unit>
        <trans-unit id="4a746b75626a8bf1b8d141962d550672ee26a9a0" translate="yes" xml:space="preserve">
          <source>Then Angular calls the &lt;code&gt;ngAfterViewInit&lt;/code&gt; lifecycle hook at which time it is &lt;em&gt;too late&lt;/em&gt; to update the parent view's display of the countdown seconds. Angular's unidirectional data flow rule prevents updating the parent view's in the same cycle. The app has to &lt;em&gt;wait one turn&lt;/em&gt; before it can display the seconds.</source>
          <target state="translated">Затем Angular вызывает &lt;code&gt;ngAfterViewInit&lt;/code&gt; жизненного цикла ngAfterViewInit, когда уже &lt;em&gt;слишком поздно&lt;/em&gt; обновлять отображение обратного отсчета в родительском представлении. Однонаправленное правило потока данных Angular предотвращает обновление родительского представления в том же цикле. Приложение должно &lt;em&gt;подождать один ход,&lt;/em&gt; прежде чем оно сможет отображать секунды.</target>
        </trans-unit>
        <trans-unit id="dbecf897d73ac2b6641e82fba7920890079f1124" translate="yes" xml:space="preserve">
          <source>Then add &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata's &lt;code&gt;imports&lt;/code&gt; array, which contains a list of external modules that the app needs.</source>
          <target state="translated">Затем добавьте &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; в массив &lt;code&gt;imports&lt;/code&gt; метаданных &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , который содержит список внешних модулей, которые необходимы приложению.</target>
        </trans-unit>
        <trans-unit id="302c6ab52d600acc4553bea66d084dd5f7f37330" translate="yes" xml:space="preserve">
          <source>Then add a &lt;em&gt;parameterized&lt;/em&gt; route to the &lt;code&gt;AppRoutingModule.routes&lt;/code&gt; array that matches the path pattern to the &lt;em&gt;hero detail&lt;/em&gt; view.</source>
          <target state="translated">Затем добавьте &lt;em&gt;параметризованный&lt;/em&gt; маршрут в массив &lt;code&gt;AppRoutingModule.routes&lt;/code&gt; , который соответствует шаблону пути в &lt;em&gt;подробном&lt;/em&gt; представлении &lt;em&gt;героя&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="7087a31795c1cc6622e1648ea10337e6e7796752" translate="yes" xml:space="preserve">
          <source>Then add it to the &lt;code&gt;providers&lt;/code&gt; array of the testing module configuration:</source>
          <target state="translated">Затем добавьте его в массив &lt;code&gt;providers&lt;/code&gt; конфигурации модуля тестирования:</target>
        </trans-unit>
        <trans-unit id="476c63ff60da4bb61e86cb5f4efd206fa03aa9dc" translate="yes" xml:space="preserve">
          <source>Then add the &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/httpclienttestingmodule&quot;&gt;HttpClientTestingModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; and continue with the setup of the &lt;em&gt;service-under-test&lt;/em&gt;.</source>
          <target state="translated">Затем добавьте &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/httpclienttestingmodule&quot;&gt;HttpClientTestingModule&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; и продолжите настройку &lt;em&gt;тестируемой службы&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1bfa821c841240ffbf8adf699d29a6b8346ac678" translate="yes" xml:space="preserve">
          <source>Then add two event handlers that respond when the mouse enters or leaves, each adorned by the &lt;code&gt;&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Затем добавьте два обработчика событий, которые отвечают, когда мышь входит или выходит, каждый из которых украшен декоратором &lt;code&gt;&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2077cb3e1b43eb4d0aa0bdfb4e87ddd6fe05d012" translate="yes" xml:space="preserve">
          <source>Then change &lt;code&gt;main-aot.ts&lt;/code&gt; to bootstrap the &lt;code&gt;AppComponentFactory&lt;/code&gt; that was generated by the AOT compiler:</source>
          <target state="translated">Затем измените &lt;code&gt;main-aot.ts&lt;/code&gt; для начальной загрузки &lt;code&gt;AppComponentFactory&lt;/code&gt; , сгенерированного компилятором AOT:</target>
        </trans-unit>
        <trans-unit id="8f98a3b01b00f3cdc0645e1bb016df36002ccc41" translate="yes" xml:space="preserve">
          <source>Then create some HTML to try it.</source>
          <target state="translated">Затем создайте HTML,чтобы попробовать.</target>
        </trans-unit>
        <trans-unit id="ed0c20efaf787e9c5968245911ff8d07f8f0da7a" translate="yes" xml:space="preserve">
          <source>Then declare them in the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; configuration next to the components, directives, and pipes that need to be real.</source>
          <target state="translated">Затем объявите их в конфигурации &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; рядом с компонентами, директивами и каналами , которые должны быть реальными.</target>
        </trans-unit>
        <trans-unit id="e412dc563abd459ce251cf7cfccd9f863136e63b" translate="yes" xml:space="preserve">
          <source>Then each test invokes &lt;code&gt;setup()&lt;/code&gt; in its first line, before continuing with steps that manipulate the test subject and assert expectations.</source>
          <target state="translated">Затем каждый тест вызывает &lt;code&gt;setup()&lt;/code&gt; в своей первой строке, прежде чем перейти к шагам, которые манипулируют объектом теста и подтверждают ожидания.</target>
        </trans-unit>
        <trans-unit id="150a9555cd5004b3999517db04d6f79faab05564" translate="yes" xml:space="preserve">
          <source>Then exercise the component class, remembering to call the &lt;a href=&quot;lifecycle-hooks&quot;&gt;lifecycle hook methods&lt;/a&gt; as Angular does when running the app.</source>
          <target state="translated">Затем используйте класс компонента, не забывая вызывать &lt;a href=&quot;lifecycle-hooks&quot;&gt;методы ловушки жизненного цикла,&lt;/a&gt; как это делает Angular при запуске приложения.</target>
        </trans-unit>
        <trans-unit id="fb4a68d7b2f52dce99079de606d30ebaa5bb531f" translate="yes" xml:space="preserve">
          <source>Then go to &lt;code&gt;localhost:4200&lt;/code&gt; where you should see &amp;ldquo;app works!&amp;rdquo; and three buttons.</source>
          <target state="translated">Затем перейдите на &lt;code&gt;localhost:4200&lt;/code&gt; , где вы должны увидеть &amp;laquo;приложение работает!&amp;raquo; и три кнопки.</target>
        </trans-unit>
        <trans-unit id="a49419a5b8645cd07645760c057756d92e18c23d" translate="yes" xml:space="preserve">
          <source>Then go to &lt;code&gt;localhost:4200&lt;/code&gt; where you should see &amp;ldquo;customer-app&amp;rdquo; and three buttons.</source>
          <target state="translated">Затем перейдите на &lt;code&gt;localhost:4200&lt;/code&gt; , где вы должны увидеть &amp;laquo;клиентское приложение&amp;raquo; и три кнопки.</target>
        </trans-unit>
        <trans-unit id="38933987a79b6e0405d4682b79b28629cbf06cda" translate="yes" xml:space="preserve">
          <source>Then import and add it to the &lt;code&gt;AppModule&lt;/code&gt;&lt;em&gt;providers array&lt;/em&gt; like this:</source>
          <target state="translated">Затем импортируйте и добавьте его в &lt;code&gt;AppModule&lt;/code&gt; &lt;em&gt;поставщиков &lt;/em&gt;AppModule следующим образом:</target>
        </trans-unit>
        <trans-unit id="ba51c703735b0a9ca10a1f38c791fa66ebf4dc99" translate="yes" xml:space="preserve">
          <source>Then inject &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; into your Angular &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; and use it to bootstrap the top level &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/angular.Module&quot;&gt;AngularJS module&lt;/a&gt; in the &lt;code&gt;ngDoBootstrap()&lt;/code&gt; method.</source>
          <target state="translated">Затем &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; в ваш Angular NgModule и используйте его для начальной загрузки &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/angular.Module&quot;&gt;модуля AngularJS&lt;/a&gt; верхнего уровня в &lt;code&gt;ngDoBootstrap()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea80e24f31be172808e0a76630ab02df1fbba4cf" translate="yes" xml:space="preserve">
          <source>Then inject it inside a test by calling &lt;code&gt;TestBed.get()&lt;/code&gt; with the service class as the argument.</source>
          <target state="translated">Затем вставьте его внутрь теста, вызвав &lt;code&gt;TestBed.get()&lt;/code&gt; с классом службы в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="dee306a2d35591d51fe2402e82a0ca9f0820f749" translate="yes" xml:space="preserve">
          <source>Then inject it inside a test by calling &lt;code&gt;TestBed.inject()&lt;/code&gt; with the service class as the argument.</source>
          <target state="translated">Затем введите его в тест, вызвав &lt;code&gt;TestBed.inject()&lt;/code&gt; с классом обслуживания в качестве аргумента.</target>
        </trans-unit>
        <trans-unit id="ed47e3226a89095f74e2f4a490e662cccb0ebbc0" translate="yes" xml:space="preserve">
          <source>Then modify the &lt;code&gt;app.component.ts&lt;/code&gt; file by changing the template and the body of the component.</source>
          <target state="translated">Затем измените файл &lt;code&gt;app.component.ts&lt;/code&gt; , изменив шаблон и тело компонента.</target>
        </trans-unit>
        <trans-unit id="8f2ea7f19a02db5f1bb037406ad378d2b4d2753b" translate="yes" xml:space="preserve">
          <source>Then provide and inject &lt;em&gt;both the&lt;/em&gt;&lt;strong&gt;component&lt;/strong&gt;&lt;em&gt;and the service&lt;/em&gt; in the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; configuration.</source>
          <target state="translated">Затем предоставьте и внедрите &lt;em&gt;как &lt;/em&gt;&lt;strong&gt;компонент, так &lt;/strong&gt;&lt;em&gt;и службу&lt;/em&gt; в конфигурации &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6575d9ffd1443fafb383b5f99065fc07d42c1e8a" translate="yes" xml:space="preserve">
          <source>Then provide the &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; in the main module:</source>
          <target state="translated">Затем &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; в основном модуле:</target>
        </trans-unit>
        <trans-unit id="5cd36815d6513b0d19bf87503dfe0afab93f9fa9" translate="yes" xml:space="preserve">
          <source>Then reload with &lt;code&gt;Cmd+r&lt;/code&gt; or &lt;code&gt;Ctrl+r&lt;/code&gt;, depending on your platform.</source>
          <target state="translated">Затем перезагрузите с помощью &lt;code&gt;Cmd+r&lt;/code&gt; или &lt;code&gt;Ctrl+r&lt;/code&gt; , в зависимости от вашей платформы.</target>
        </trans-unit>
        <trans-unit id="62acde2949df74c80c6b969effb470f5543854f7" translate="yes" xml:space="preserve">
          <source>Then the following link &lt;code&gt;&amp;lt;&lt;a href=&quot;routerlinkwithhref&quot;&gt;a&lt;/a&gt; [&lt;a href=&quot;routerlink&quot;&gt;routerLink&lt;/a&gt;]=&quot;['/user/jim']&quot;&amp;gt;Jim&amp;lt;/&lt;a href=&quot;routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; will generate the link &lt;code&gt;/user/(jim//aux:team)&lt;/code&gt;.</source>
          <target state="translated">Тогда следующая ссылка &lt;code&gt;&amp;lt;&lt;a href=&quot;routerlinkwithhref&quot;&gt;a&lt;/a&gt; [&lt;a href=&quot;routerlink&quot;&gt;routerLink&lt;/a&gt;]=&quot;['/user/jim']&quot;&amp;gt;Jim&amp;lt;/&lt;a href=&quot;routerlinkwithhref&quot;&gt;a&lt;/a&gt;&amp;gt;&lt;/code&gt; сгенерирует ссылку &lt;code&gt;/user/(jim//aux:team)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf4cba0cf8f8221ce918d56c4b25cb5bf60574f6" translate="yes" xml:space="preserve">
          <source>Then use &lt;code&gt;relativeTo&lt;/code&gt; in your navigation method. After the link parameters array, which here contains &lt;code&gt;items&lt;/code&gt;, add an object with the &lt;code&gt;relativeTo&lt;/code&gt; property set to the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt;, which is &lt;code&gt;this.route&lt;/code&gt;.</source>
          <target state="translated">Затем используйте &lt;code&gt;relativeTo&lt;/code&gt; в своем методе навигации. После массива параметров ссылки, который здесь содержит &lt;code&gt;items&lt;/code&gt; , добавьте объект со свойством &lt;code&gt;relativeTo&lt;/code&gt; , установленным для &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; , то есть &lt;code&gt;this.route&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="31a24e38017cc0ca331b2c164af11448fb71f88f" translate="yes" xml:space="preserve">
          <source>Then use the service inside your component by injecting it in the component constructor using its class as a type annotation:</source>
          <target state="translated">Затем воспользуйтесь услугой внутри компонента,впрыснув его в конструктор компонента,используя его класс в качестве типовой аннотации:</target>
        </trans-unit>
        <trans-unit id="3d28664e3228d12b67d0ad4e11b39b8bfa234399" translate="yes" xml:space="preserve">
          <source>Then you can assert that the quote element displays the expected text.</source>
          <target state="translated">Тогда можно утверждать,что элемент кавычки отображает ожидаемый текст.</target>
        </trans-unit>
        <trans-unit id="fb5aa1a656847347c6ad33e809979b893a2a0af1" translate="yes" xml:space="preserve">
          <source>Then you can use the &quot;upgraded&quot; AngularJS service by injecting it into an Angular component or service.</source>
          <target state="translated">Затем вы можете использовать &quot;модернизированную&quot; услугу AngularJS,впрыснув ее в угловой компонент или услугу.</target>
        </trans-unit>
        <trans-unit id="7235d5f78eb3fc75c9de23a894249dff7395ce21" translate="yes" xml:space="preserve">
          <source>Then you create a child component (B) that defines its own, &lt;em&gt;specialized&lt;/em&gt; providers for &lt;code&gt;CarService&lt;/code&gt; and &lt;code&gt;EngineService&lt;/code&gt; that have special capabilities suitable for whatever is going on in component (B).</source>
          <target state="translated">Затем создается дочерний компонент (В) , который определяет свои собственные, &lt;em&gt;специализированные&lt;/em&gt; поставщик для &lt;code&gt;CarService&lt;/code&gt; и &lt;code&gt;EngineService&lt;/code&gt; , которые имеют специальные возможности , подходящие для всего, что происходит в компоненте (В).</target>
        </trans-unit>
        <trans-unit id="13b7250037e2791c30d8b2b60220889c166804a2" translate="yes" xml:space="preserve">
          <source>Then you inject the &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;HeroListComponent&lt;/code&gt; constructor.</source>
          <target state="translated">Затем вы вводите &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; в конструктор &lt;code&gt;HeroListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06b87cc1eeb739adae3341e69733b9a6c335c899" translate="yes" xml:space="preserve">
          <source>Then you should define an Angular provider to be included in your &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;providers&lt;/code&gt; property.</source>
          <target state="translated">Затем вы должны определить поставщика Angular, который будет включен в ваше &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;providers&lt;/code&gt; NgModule .</target>
        </trans-unit>
        <trans-unit id="3996f4d02c86b0214c6856fbd020c552536ef23e" translate="yes" xml:space="preserve">
          <source>Then you tell the &lt;code&gt;HeroService&lt;/code&gt; to fetch the hero with that &lt;code&gt;id&lt;/code&gt; and return the result of the &lt;code&gt;HeroService&lt;/code&gt; request.</source>
          <target state="translated">Затем вы сообщаете &lt;code&gt;HeroService&lt;/code&gt; ,что нужно выбрать героя с этим &lt;code&gt;id&lt;/code&gt; и вернуть результат запроса &lt;code&gt;HeroService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed06e960c3c34ee183cdb9c0a6a2a5d5f20a03f6" translate="yes" xml:space="preserve">
          <source>Then, another animation can be called when the current animation finishes. For example, the button goes from the &lt;code&gt;inProgress&lt;/code&gt; state to the &lt;code&gt;closed&lt;/code&gt; state when the API call is completed.</source>
          <target state="translated">Затем другая анимация может быть вызвана, когда текущая анимация заканчивается. Например, кнопка переходит из состояния &lt;code&gt;inProgress&lt;/code&gt; в &lt;code&gt;closed&lt;/code&gt; состояние после завершения вызова API.</target>
        </trans-unit>
        <trans-unit id="6309056a807e88260ec1b8e1f7ee99de74f63bb1" translate="yes" xml:space="preserve">
          <source>Then, the code contains an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator with the &lt;code&gt;childItem&lt;/code&gt; property so data can flow into it.</source>
          <target state="translated">Затем код содержит декоратор &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; со свойством &lt;code&gt;childItem&lt;/code&gt; , чтобы данные могли поступать в него.</target>
        </trans-unit>
        <trans-unit id="edf82d0382f477967edce3fb6b12681334c96dc8" translate="yes" xml:space="preserve">
          <source>Then, when some component injects &lt;code&gt;UserService&lt;/code&gt;, Angular finds it in the app root injector, and delivers the app-wide singleton service. No problem.</source>
          <target state="translated">Затем, когда какой-либо компонент внедряет &lt;code&gt;UserService&lt;/code&gt; , Angular находит его в корневом инжекторе приложения и предоставляет единый сервис для всего приложения. Нет проблем.</target>
        </trans-unit>
        <trans-unit id="c3a0ceb7d76985503f10a062c39d4ecc9f73b6e5" translate="yes" xml:space="preserve">
          <source>Then, when you need that file&amp;rsquo;s code in another file, you import it like this:</source>
          <target state="translated">Затем, когда вам нужен код этого файла в другом файле, вы импортируете его так:</target>
        </trans-unit>
        <trans-unit id="7f94783b2fdbdd4b5788239abe980a7f9c2a0feb" translate="yes" xml:space="preserve">
          <source>Then, you change into your library directory to build the schematic</source>
          <target state="translated">Затем вы переходите в каталог своей библиотеки,чтобы построить схему.</target>
        </trans-unit>
        <trans-unit id="b558f2a5f6c20368ac31efe8ab04dc45d807c8b6" translate="yes" xml:space="preserve">
          <source>There are &lt;em&gt;important differences&lt;/em&gt; in the way the router treats these &lt;em&gt;child routes&lt;/em&gt;.</source>
          <target state="translated">Существуют &lt;em&gt;важные различия&lt;/em&gt; в том, как маршрутизатор обрабатывает эти &lt;em&gt;дочерние маршруты&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="566ab24996dda55d07b696f9fcb91995338b7d7a" translate="yes" xml:space="preserve">
          <source>There are a few cases where you give a component an attribute, such as when you want to augment a built-in element. For example, &lt;a href=&quot;https://material.angular.io/components/button/overview&quot;&gt;Material Design&lt;/a&gt; uses this technique with &lt;code&gt;&amp;lt;button mat-button&amp;gt;&lt;/code&gt;. However, you wouldn't use this technique on a custom element.</source>
          <target state="translated">Есть несколько случаев, когда вы даете компоненту атрибут, например, когда вы хотите дополнить встроенный элемент. Например, &lt;a href=&quot;https://material.angular.io/components/button/overview&quot;&gt;Material Design&lt;/a&gt; использует эту технику с &lt;code&gt;&amp;lt;button mat-button&amp;gt;&lt;/code&gt; . Однако вы не будете использовать эту технику на пользовательском элементе.</target>
        </trans-unit>
        <trans-unit id="4a44db3593849baa6fd286f1a9dad3ee4be9f41f" translate="yes" xml:space="preserve">
          <source>There are a few exceptional observables where this is not necessary. The &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; observables are among the exceptions.</source>
          <target state="translated">Есть несколько исключительных наблюдаемых, где это не обязательно. В &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; наблюдаемые среди исключений.</target>
        </trans-unit>
        <trans-unit id="1e9c60f04e3a15c6ff01e79a5018c059fb20d209" translate="yes" xml:space="preserve">
          <source>There are a few limited reasons why the Angular service worker might change the version of a running app. Some of them are error conditions:</source>
          <target state="translated">Есть несколько ограниченных причин,по которым работник службы Angular может изменить версию работающего приложения.Некоторые из них-это условия ошибок:</target>
        </trans-unit>
        <trans-unit id="a6013a4fe41dc5c7411d2f89c39f1e20616a17ba" translate="yes" xml:space="preserve">
          <source>There are a few options if you want to get correct types for your custom elements. Let's assume you create a &lt;code&gt;my-dialog&lt;/code&gt; custom element based on the following component:</source>
          <target state="translated">Есть несколько вариантов, если вы хотите получить правильные типы для ваших пользовательских элементов. Предположим, вы создаете пользовательский элемент &lt;code&gt;my-dialog&lt;/code&gt; на основе следующего компонента:</target>
        </trans-unit>
        <trans-unit id="3191a1618b8faa99c49daa031fba849003a13bd3" translate="yes" xml:space="preserve">
          <source>There are a few rules in particular that will make it much easier to do &lt;em&gt;an incremental upgrade&lt;/em&gt; using the Angular &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; module:</source>
          <target state="translated">В частности, есть несколько правил, которые значительно облегчат выполнение &lt;em&gt;инкрементального обновления&lt;/em&gt; с помощью модуля Angular &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a01d9115f3a3ad52c673da81193da8c683b0a1c6" translate="yes" xml:space="preserve">
          <source>There are a few things to note, though:</source>
          <target state="translated">Но есть кое-что,что следует отметить:</target>
        </trans-unit>
        <trans-unit id="cdc057156f4a0afc834e3e15f4b4be9942560eb6" translate="yes" xml:space="preserve">
          <source>There are a number of options for modifying the default search behavior, using &lt;em&gt;parameter decorators&lt;/em&gt; on the service-valued parameters of a class constructor.</source>
          <target state="translated">Существует ряд опций для изменения поведения поиска по умолчанию с использованием &lt;em&gt;декораторов параметров&lt;/em&gt; для служебных параметров конструктора класса.</target>
        </trans-unit>
        <trans-unit id="c676ec6b692f6df001e20a544ca9a4ac7cc35255" translate="yes" xml:space="preserve">
          <source>There are also completions within elements. Any elements you have as a component selector will show up in the completion list.</source>
          <target state="translated">Есть также дополнения внутри элементов.Любые элементы,имеющиеся у Вас в качестве селектора компонентов,будут отображаться в списке завершения.</target>
        </trans-unit>
        <trans-unit id="2b0041e80379dba90a5c135457752493c4e52ac4" translate="yes" xml:space="preserve">
          <source>There are configuration files for both the &lt;a href=&quot;https://karma-runner.github.io/latest/config/configuration-file.html&quot;&gt;Karma JavaScript test runner&lt;/a&gt; and &lt;a href=&quot;https://www.protractortest.org/#/api-overview&quot;&gt;Protractor&lt;/a&gt; end-to-end testing tool, which you must adjust to start Chrome without sandboxing.</source>
          <target state="translated">Существуют файлы конфигурации для запуска &lt;a href=&quot;https://karma-runner.github.io/latest/config/configuration-file.html&quot;&gt;тестов Karma JavaScript&lt;/a&gt; и инструмента комплексного тестирования &lt;a href=&quot;https://www.protractortest.org/#/api-overview&quot;&gt;Protractor&lt;/a&gt; , которые необходимо настроить для запуска Chrome без песочницы.</target>
        </trans-unit>
        <trans-unit id="8f70e6e9da25ad1b098bbc6719f6c5877729d762" translate="yes" xml:space="preserve">
          <source>There are five general categories of feature modules which tend to fall into the following groups:</source>
          <target state="translated">Существует пять общих категорий функциональных модулей,которые,как правило,делятся на следующие группы:</target>
        </trans-unit>
        <trans-unit id="f083c43f33d22558e0080c2eef9a154aecda0827" translate="yes" xml:space="preserve">
          <source>There are important differences in the way the router treats child routes.</source>
          <target state="translated">Существуют важные различия в том,как маршрутизатор обращается с детскими маршрутами.</target>
        </trans-unit>
        <trans-unit id="9d24499582f9d74be4e55dfd292e78d548d73a51" translate="yes" xml:space="preserve">
          <source>There are many more interceptors in the complete sample code.</source>
          <target state="translated">В полном примере кода есть еще много перехватчиков.</target>
        </trans-unit>
        <trans-unit id="a08951de0f1de6bd2f6e60bba79ba111ed7ae1d7" translate="yes" xml:space="preserve">
          <source>There are many resources to complement the Angular docs. Mozilla's MDN docs include both &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML&quot;&gt;HTML&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt; introductions. &lt;a href=&quot;https://www.typescriptlang.org/docs/home.html&quot;&gt;TypeScript's docs&lt;/a&gt; include a 5-minute tutorial. Various online course platforms, such as &lt;a href=&quot;http://www.udemy.com&quot;&gt;Udemy&lt;/a&gt; and &lt;a href=&quot;https://www.codecademy.com/&quot;&gt;Codecademy&lt;/a&gt;, also cover web development basics.</source>
          <target state="translated">Есть много ресурсов, чтобы дополнить Angular Docs. Документы Mozilla по MDN включают в себя как &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML&quot;&gt;HTML, так&lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt; . &lt;a href=&quot;https://www.typescriptlang.org/docs/home.html&quot;&gt;Документы TypeScript&lt;/a&gt; включают 5-минутное руководство. Различные платформы онлайн-курсов, такие как &lt;a href=&quot;http://www.udemy.com&quot;&gt;Udemy&lt;/a&gt; и &lt;a href=&quot;https://www.codecademy.com/&quot;&gt;Codecademy&lt;/a&gt; , также охватывают основы веб-разработки.</target>
        </trans-unit>
        <trans-unit id="2b01ae378331b4d8c4c4a3a49c3e172ca7e1f3f7" translate="yes" xml:space="preserve">
          <source>There are many resources to complement the Angular docs. Mozilla's MDN docs include both &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML&quot;&gt;HTML&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt; introductions. &lt;a href=&quot;https://www.typescriptlang.org/docs/home.html&quot;&gt;TypeScript's docs&lt;/a&gt; include a 5-minute tutorial. Various online course platforms, such as &lt;a href=&quot;https://www.udemy.com&quot;&gt;Udemy&lt;/a&gt; and &lt;a href=&quot;https://www.codecademy.com/&quot;&gt;Codecademy&lt;/a&gt;, also cover web development basics.</source>
          <target state="translated">Есть много ресурсов, дополняющих документацию по Angular. Документация Mozilla по MDN включает введение как в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML&quot;&gt;HTML, так&lt;/a&gt; и в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt; . &lt;a href=&quot;https://www.typescriptlang.org/docs/home.html&quot;&gt;Документация TypeScript&lt;/a&gt; включает 5-минутное руководство. Различные платформы онлайн-курсов, такие как &lt;a href=&quot;https://www.udemy.com&quot;&gt;Udemy&lt;/a&gt; и &lt;a href=&quot;https://www.codecademy.com/&quot;&gt;Codecademy&lt;/a&gt; , также охватывают основы веб-разработки.</target>
        </trans-unit>
        <trans-unit id="66ad0af28f7ac3d95ccbf0739cccfa8af77155a9" translate="yes" xml:space="preserve">
          <source>There are many ways to structure AngularJS applications. When you begin to upgrade these applications to Angular, some will turn out to be much more easy to work with than others. There are a few key techniques and patterns that you can apply to future proof apps even before you begin the migration.</source>
          <target state="translated">Существует множество способов структурирования приложений AngularJS.Когда вы начнете обновлять эти приложения до Angular,некоторые из них окажутся намного проще в работе,чем другие.Есть несколько ключевых техник и шаблонов,которые вы можете применить к будущим приложениям еще до того,как вы начнете миграцию.</target>
        </trans-unit>
        <trans-unit id="00d98f0576741a1e108297fca91f90e751881e55" translate="yes" xml:space="preserve">
          <source>There are multiple ways to prevent this:</source>
          <target state="translated">Есть несколько способов предотвратить это:</target>
        </trans-unit>
        <trans-unit id="ff870a40c32b15241e0dc290ffe99e696ec7e316" translate="yes" xml:space="preserve">
          <source>There are new requirements for the Tour of Heroes app:</source>
          <target state="translated">Есть новые требования к приложению &quot;Тур героев&quot;:</target>
        </trans-unit>
        <trans-unit id="b7c35a18e43689374a55ffc6988124f5f7c095f9" translate="yes" xml:space="preserve">
          <source>There are no easy answers to these questions. Prohibiting multiple structural directives makes them moot. There's an easy solution for this use case: put the &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; on a container element that wraps the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; element. One or both elements can be an &lt;a href=&quot;structural-directives#ngcontainer&quot;&gt;&lt;code&gt;ng-container&lt;/code&gt;&lt;/a&gt; so you don't have to introduce extra levels of HTML.</source>
          <target state="translated">На эти вопросы нет простых ответов. Запрещение нескольких структурных директив делает их спорными. Для этого &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; использования есть простое решение: поместите * ngIf в элемент контейнера, который обертывает элемент &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; . Один или оба элемента могут быть &lt;a href=&quot;structural-directives#ngcontainer&quot;&gt; &lt;code&gt;ng-container&lt;/code&gt; &lt;/a&gt; поэтому вам не нужно вводить дополнительные уровни HTML.</target>
        </trans-unit>
        <trans-unit id="93b4d15b36f576847810650de967eae2da32c1f5" translate="yes" xml:space="preserve">
          <source>There are no parameters for this parent route so you're done with it.</source>
          <target state="translated">Для этого родительского маршрута нет параметров,так что с этим покончено.</target>
        </trans-unit>
        <trans-unit id="08a0080e437b247c15d7d516f9eb6d35b78c311f" translate="yes" xml:space="preserve">
          <source>There are no parameters for this parent route.</source>
          <target state="translated">Для этого родительского маршрута нет параметров.</target>
        </trans-unit>
        <trans-unit id="fcf8d135851b80ffbe87dcd35d86d4ad22ed02e6" translate="yes" xml:space="preserve">
          <source>There are no parameters.</source>
          <target state="translated">Параметров нет.</target>
        </trans-unit>
        <trans-unit id="347acdbd61105fadd07872f8156b46696cb3b692" translate="yes" xml:space="preserve">
          <source>There are only two changes. The &lt;code&gt;template&lt;/code&gt; is simply the new element tag identified by the component's &lt;code&gt;selector&lt;/code&gt; property. This displays the hero form when the application component is loaded. Don't forget to remove the &lt;code&gt;name&lt;/code&gt; field from the class body as well.</source>
          <target state="translated">Есть только два изменения. &lt;code&gt;template&lt;/code&gt; просто новый элемент тег идентифицируется компонентом &lt;code&gt;selector&lt;/code&gt; имущества. Это отображает форму героя при загрузке компонента приложения. Не забудьте также удалить поле &lt;code&gt;name&lt;/code&gt; из тела класса.</target>
        </trans-unit>
        <trans-unit id="159f34be61579ceb6ae8d16ef7ee7eeb786eef01" translate="yes" xml:space="preserve">
          <source>There are paid CI services like Circle CI and Travis CI, and you can also host your own for free using Jenkins and others. Although Circle CI and Travis CI are paid services, they are provided free for open source projects. You can create a public project on GitHub and add these services without paying. Contributions to the Angular repo are automatically run through a whole suite of Circle CI tests.</source>
          <target state="translated">Существуют платные услуги КИ,такие как Circle CI и Travis CI,и вы также можете разместить свои собственные бесплатно,используя Jenkins и другие.Несмотря на то,что Circle CI и Travis CI являются платными услугами,они предоставляются бесплатно для проектов с открытым исходным кодом.Вы можете создать публичный проект на GitHub и добавить эти услуги без оплаты.Взносы в Угловое репо автоматически прогоняются через целый набор тестов Circle CI.</target>
        </trans-unit>
        <trans-unit id="879cd324a70c4c96acf893c99d3b9dc84ee024ff" translate="yes" xml:space="preserve">
          <source>There are several examples over the next few sections.</source>
          <target state="translated">В следующих разделах приведено несколько примеров.</target>
        </trans-unit>
        <trans-unit id="2cf39c6658c13b371aa454d5575113ab2b716d55" translate="yes" xml:space="preserve">
          <source>There are several notable changes here:</source>
          <target state="translated">Здесь есть несколько заметных изменений:</target>
        </trans-unit>
        <trans-unit id="b3ecb535a2ce87ce6aa9dd8adc9feb06a8b4ddfd" translate="yes" xml:space="preserve">
          <source>There are several ways to add styles to a component:</source>
          <target state="translated">Существует несколько способов добавления стилей к компоненту:</target>
        </trans-unit>
        <trans-unit id="1b266b00929430b0621b4b49767764faeeeeab85" translate="yes" xml:space="preserve">
          <source>There are three categories of directive:</source>
          <target state="translated">Существует три категории директив:</target>
        </trans-unit>
        <trans-unit id="38597e951fad51067690768d9f762544a13ddd71" translate="yes" xml:space="preserve">
          <source>There are three different &lt;em&gt;urgency levels&lt;/em&gt; used to style the alerts based on the severity or importance of the content.</source>
          <target state="translated">Существует три различных &lt;em&gt;уровня срочности, которые&lt;/em&gt; используются для стилизации предупреждений в зависимости от серьезности или важности содержимого.</target>
        </trans-unit>
        <trans-unit id="24e9e91fde41867db08419b1f04c4cbe517ddcb5" translate="yes" xml:space="preserve">
          <source>There are three fundamental building blocks to creating a route.</source>
          <target state="translated">Для создания маршрута есть три основных строительных блока.</target>
        </trans-unit>
        <trans-unit id="e76077d148cfb3df1507661f67b5067f5ff2d5a6" translate="yes" xml:space="preserve">
          <source>There are three kinds of directives in Angular:</source>
          <target state="translated">В Угловом есть три вида директив:</target>
        </trans-unit>
        <trans-unit id="25e737b2092b55d9eb5f239e56b9516518d5f446" translate="yes" xml:space="preserve">
          <source>There are three main reasons to create a Universal version of your app.</source>
          <target state="translated">Есть три основные причины для создания Универсальной версии вашего приложения.</target>
        </trans-unit>
        <trans-unit id="a4f700c6eaa2262317c0d957e29675f3621c94d0" translate="yes" xml:space="preserve">
          <source>There are three main steps to setting up a lazy-loaded feature module:</source>
          <target state="translated">Существует три основных этапа настройки ленивого функционального модуля:</target>
        </trans-unit>
        <trans-unit id="165573f1548a8f99cacaaa3440578c4519f99108" translate="yes" xml:space="preserve">
          <source>There are three phases of AOT compilation.</source>
          <target state="translated">Существует три этапа компиляции AOT.</target>
        </trans-unit>
        <trans-unit id="ab9b96e090b917419a7b4b07d60725578c370783" translate="yes" xml:space="preserve">
          <source>There are three significant differences from &lt;code&gt;getHeroes()&lt;/code&gt;:</source>
          <target state="translated">Есть три существенных отличия от &lt;code&gt;getHeroes()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6700c051353ace657c742055b93c035122544edb" translate="yes" xml:space="preserve">
          <source>There are three steps to using form controls.</source>
          <target state="translated">Есть три шага для использования контроля формы.</target>
        </trans-unit>
        <trans-unit id="9dd01b7be4e57b57b1627f79224ce07af7d2d99e" translate="yes" xml:space="preserve">
          <source>There are three supported input types.</source>
          <target state="translated">Существует три поддерживаемых типа ввода.</target>
        </trans-unit>
        <trans-unit id="f5034306f8346e549a24ab826839194a108f3818" translate="yes" xml:space="preserve">
          <source>There are two categories of pipes: &lt;em&gt;pure&lt;/em&gt; and &lt;em&gt;impure&lt;/em&gt;. Pipes are pure by default. Every pipe you've seen so far has been pure. You make a pipe impure by setting its pure flag to false. You could make the &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; impure like this:</source>
          <target state="translated">Есть две категории труб: &lt;em&gt;чистые&lt;/em&gt; и &lt;em&gt;нечистые&lt;/em&gt; . Трубы чистые по умолчанию. Каждая труба, которую вы видели до сих пор, была чистой. Вы делаете трубу нечистой, устанавливая ее чистый флаг в false. Вы можете сделать &lt;code&gt;FlyingHeroesPipe&lt;/code&gt; нечистым вот так:</target>
        </trans-unit>
        <trans-unit id="c0d0261683ac70f77d2cb64caaaa6be2e633442f" translate="yes" xml:space="preserve">
          <source>There are two changes:</source>
          <target state="translated">Есть два изменения:</target>
        </trans-unit>
        <trans-unit id="0757ae2710d35ffd65d63c8e4408b8f8b222e032" translate="yes" xml:space="preserve">
          <source>There are two important things to keep in mind when using Web Workers in Angular projects:</source>
          <target state="translated">Есть две важные вещи,которые следует помнить при использовании веб-работников в угловых проектах:</target>
        </trans-unit>
        <trans-unit id="ed5307db9a7ed9a50bdf282cc464f6252ca2c8b1" translate="yes" xml:space="preserve">
          <source>There are two independent frameworks running in a single application, each framework treats the other as a black box.</source>
          <target state="translated">Есть две независимые фреймворки,работающие в одном приложении,каждая из которых рассматривает другую как &quot;черный ящик&quot;.</target>
        </trans-unit>
        <trans-unit id="ad6b0f208e637f748bf275b29c341ba579e95709" translate="yes" xml:space="preserve">
          <source>There are two injector hierarchies in Angular:</source>
          <target state="translated">В Угловой иерархии есть две иерархии инжекторов:</target>
        </trans-unit>
        <trans-unit id="43178632845a92d22afa35ca0676f6eb7a1f7062" translate="yes" xml:space="preserve">
          <source>There are two kinds of generated attributes:</source>
          <target state="translated">Существует два вида генерируемых атрибутов:</target>
        </trans-unit>
        <trans-unit id="ae6efc4f0655823ca7f29eb7bf3eefe1625ce1e5" translate="yes" xml:space="preserve">
          <source>There are two main kinds of entry components:</source>
          <target state="translated">Существует два основных вида входных компонентов:</target>
        </trans-unit>
        <trans-unit id="36eef38b4cd7460eba454e934ddc760e1199d5bf" translate="yes" xml:space="preserve">
          <source>There are two main steps to setting up a lazy-loaded feature module:</source>
          <target state="translated">Существует два основных шага по настройке ленивого функционального модуля:</target>
        </trans-unit>
        <trans-unit id="550828cc689d902dc2704d305cf15fafb615c2b6" translate="yes" xml:space="preserve">
          <source>There are two more injectors above &lt;code&gt;root&lt;/code&gt;, an additional &lt;code&gt;ModuleInjector&lt;/code&gt; and &lt;code&gt;NullInjector()&lt;/code&gt;.</source>
          <target state="translated">Над &lt;code&gt;root&lt;/code&gt; есть еще два инжектора , дополнительный &lt;code&gt;ModuleInjector&lt;/code&gt; и &lt;code&gt;NullInjector()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec82505f597f4541fee947d1b90b7670a8bfe1fc" translate="yes" xml:space="preserve">
          <source>There are two other kinds of Angular directives, described extensively elsewhere: (1) components and (2) attribute directives.</source>
          <target state="translated">Существует два других вида Угловых директив,подробно описанных в других местах:(1)компоненты и (2)атрибутные директивы.</target>
        </trans-unit>
        <trans-unit id="eee5ab865a86fd0b73b19b491d8642111214cd0d" translate="yes" xml:space="preserve">
          <source>There are two possible degraded states:</source>
          <target state="translated">Есть два возможных деградированных состояния:</target>
        </trans-unit>
        <trans-unit id="bc52776a75e0fe43e572fa425a1db8d585ca5328" translate="yes" xml:space="preserve">
          <source>There are two potential workarounds to the above issues:</source>
          <target state="translated">Существуют два потенциальных обходных пути для решения вышеуказанных вопросов:</target>
        </trans-unit>
        <trans-unit id="25650f34b85cc033bcf18133335c7c20ab26b348" translate="yes" xml:space="preserve">
          <source>There are two types of validator functions: sync validators and async validators.</source>
          <target state="translated">Существует два типа функций валидаторов:синхронные валидаторы и асинхронные валидаторы.</target>
        </trans-unit>
        <trans-unit id="3f8e7458d2bd37a51a02a94b62cdecdc59f8af4c" translate="yes" xml:space="preserve">
          <source>There are two ways to make a service a singleton in Angular:</source>
          <target state="translated">Есть два способа сделать услугу одной кнопкой в Angular:</target>
        </trans-unit>
        <trans-unit id="faa6ad5446f7861f6ecf46da71ea515c5fb5f071" translate="yes" xml:space="preserve">
          <source>There are two ways to update the model value:</source>
          <target state="translated">Есть два способа обновить значение модели:</target>
        </trans-unit>
        <trans-unit id="f26b5471a1dd6edb128afdf26847e8bb73608215" translate="yes" xml:space="preserve">
          <source>There are usually one or more main sections that may be further divided into secondary sections.</source>
          <target state="translated">Обычно существуют одна или несколько основных секций,которые могут быть далее разделены на вторичные секции.</target>
        </trans-unit>
        <trans-unit id="1d5c6b97ecc7419e7dd8afaaeb5bfae0e26e836c" translate="yes" xml:space="preserve">
          <source>There can also be false positives when the typings of an Angular library are either incomplete or incorrect, or when the typings don't quite line up with expectations as in the following cases.</source>
          <target state="translated">Могут быть и ложные срабатывания,когда наборы в библиотеке Angular либо неполные,либо неправильные,либо когда наборы не совсем соответствуют ожиданиям,как в следующих случаях.</target>
        </trans-unit>
        <trans-unit id="ca00ae37aaf723dcf8b96d9e5fe70f20f93c9cc4" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;tree hierarchy of injectors&lt;/a&gt;, with a root injector and an additional injector for each component.</source>
          <target state="translated">Существует &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;древовидная иерархия инжекторов&lt;/a&gt; , с корневым инжектором и дополнительным инжектором для каждого компонента.</target>
        </trans-unit>
        <trans-unit id="027fb989b8678c3235e885de0c12df209840f1d8" translate="yes" xml:space="preserve">
          <source>There is a rule for each defined day period. The first rule is applied to the first day period and so on. Fall back to AM/PM when no rules are available.</source>
          <target state="translated">Для каждого определенного дневного периода существует правило.Первое правило применяется к периоду первых суток и так далее.Возвращайтесь к AM/PM,когда правила недоступны.</target>
        </trans-unit>
        <trans-unit id="7654c24d9c7b87cc2fb7d574ad4e33ff2eb6cd63" translate="yes" xml:space="preserve">
          <source>There is a small but critical difference. In the &lt;code&gt;AppRoutingModule&lt;/code&gt;, you used the static &lt;strong&gt;&lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt; method to register the routes and application level service providers. In a feature module you use the static &lt;strong&gt;&lt;code&gt;forChild&lt;/code&gt;&lt;/strong&gt; method.</source>
          <target state="translated">Есть небольшая, но критическая разница. В &lt;code&gt;AppRoutingModule&lt;/code&gt; вы использовали статический &lt;strong&gt; &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt; для регистрации маршрутов и поставщиков услуг уровня приложения. В функциональном модуле вы используете статический метод &lt;strong&gt; &lt;code&gt;forChild&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="1089bb549e548f1eece3447abc86312a541125a5" translate="yes" xml:space="preserve">
          <source>There is an API for navigating &lt;em&gt;down&lt;/em&gt; the view hierarchy. Check out &lt;code&gt;&lt;a href=&quot;../api/core/query&quot;&gt;Query&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/querylist&quot;&gt;QueryList&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/viewchildren&quot;&gt;ViewChildren&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; in the &lt;a href=&quot;../api/index&quot;&gt;API Reference&lt;/a&gt;.</source>
          <target state="translated">Существует API для навигации &lt;em&gt;по&lt;/em&gt; иерархии представлений. Проверьте &lt;code&gt;&lt;a href=&quot;../api/core/query&quot;&gt;Query&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/querylist&quot;&gt;QueryList&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/viewchildren&quot;&gt;ViewChildren&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; в &lt;a href=&quot;../api/index&quot;&gt;Справочнике&lt;/a&gt; по API .</target>
        </trans-unit>
        <trans-unit id="bf10db6389feae71b1aa42ec8c45a030a861e2e0" translate="yes" xml:space="preserve">
          <source>There is an important distinction between using another module's component and using a service from another module. Import modules when you want to use directives, pipes, and components. Importing a module with services means that you will have a new instance of that service, which typically is not what you need (typically one wants to reuse an existing service). Use module imports to control service instantiation.</source>
          <target state="translated">Существует важное различие между использованием компонента другого модуля и использованием сервиса от другого модуля.Импорт модулей,когда необходимо использовать директивы,трубы и компоненты.Импорт модуля со службами означает,что у вас будет новый экземпляр этого сервиса,который обычно не является тем,что вам нужно (обычно вы хотите повторно использовать существующий сервис).Используйте импорт модулей для контроля инстанцирования сервисов.</target>
        </trans-unit>
        <trans-unit id="cceabdb690dfa8a94f69d03b06952860cf555cc4" translate="yes" xml:space="preserve">
          <source>There is exactly one injector. Even in multi-module applications, everything is poured into one big namespace.</source>
          <target state="translated">Есть ровно один инжектор.Даже в многомодульных приложениях все выливается в одно большое пространство имён.</target>
        </trans-unit>
        <trans-unit id="8b6ca3d80875d293406dd0f142004f9fede44d55" translate="yes" xml:space="preserve">
          <source>There is no &lt;em&gt;live example&lt;/em&gt; for this cookbook because it describes Visual Studio, not the Angular application itself. It uses the starter Angular application created by the CLI command &lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt;&lt;/a&gt; as an example.</source>
          <target state="translated">Для этой кулинарной книги нет &lt;em&gt;живого примера,&lt;/em&gt; потому что она описывает Visual Studio, а не само приложение Angular. В качестве примера используется стартовое приложение Angular, созданное командой CLI &lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="133a9567390a248ff96c3ddfeb770bd616eadd71" translate="yes" xml:space="preserve">
          <source>There is no default for the child route so you need to pick one.</source>
          <target state="translated">По умолчанию для детского маршрута нет,поэтому вам нужно выбрать один из них.</target>
        </trans-unit>
        <trans-unit id="c9bb67cef244a52a5902839951c12ad9006e5375" translate="yes" xml:space="preserve">
          <source>There is no issue when the user navigates to that URL from within a running client. The Angular router interprets the URL and routes to that page and hero.</source>
          <target state="translated">Нет никаких проблем,когда пользователь переходит на этот URL изнутри работающего клиента.Угловой маршрутизатор интерпретирует URL и маршруты к этой странице и герою.</target>
        </trans-unit>
        <trans-unit id="565fc140f826820d99228d067e03328fac73f380" translate="yes" xml:space="preserve">
          <source>There is no longer a reference to &lt;code&gt;template&lt;/code&gt; and, therefore, nothing to trouble the compiler when it later interprets the &lt;em&gt;collector's&lt;/em&gt; output in &lt;code&gt;.metadata.json&lt;/code&gt;.</source>
          <target state="translated">Больше нет ссылки на &lt;code&gt;template&lt;/code&gt; и, следовательно, нет ничего, что могло бы беспокоить компилятор, когда он позже интерпретирует вывод &lt;em&gt;сборщика&lt;/em&gt; в &lt;code&gt;.metadata.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e748fc4f70bcf252a46a3d8e24d8e97b2bd9b8c" translate="yes" xml:space="preserve">
          <source>There is no public API for acquiring a parent reference. However, because every component instance is added to an injector's container, you can use Angular dependency injection to reach a parent component.</source>
          <target state="translated">Не существует публичного API для получения родительской ссылки.Однако,поскольку каждый экземпляр компонента добавляется в контейнер инжектора,вы можете использовать инъекцию с угловой зависимостью для достижения родительского компонента.</target>
        </trans-unit>
        <trans-unit id="9e1f226d0769c2006bed4876b7fe7a774057642d" translate="yes" xml:space="preserve">
          <source>There is no single configuration that works for every server. The following sections describe configurations for some of the most popular servers. The list is by no means exhaustive, but should provide you with a good starting point.</source>
          <target state="translated">Не существует единой конфигурации,которая бы работала на каждом сервере.В следующих разделах описаны конфигурации для некоторых из наиболее популярных серверов.Этот список ни в коем случае не является исчерпывающим,но должен предоставить вам хорошую отправную точку.</target>
        </trans-unit>
        <trans-unit id="259bb0afbd8fefe05bdc556bd5eef64a565fd518" translate="yes" xml:space="preserve">
          <source>There is no specific API for upgrading an AngularJS service. Instead you should just follow the following recipe:</source>
          <target state="translated">Для обновления сервиса AngularJS нет специального API.Вместо этого вы должны просто следовать следующему рецепту:</target>
        </trans-unit>
        <trans-unit id="550621addec4fd2e0708772894f55350f2a0f79c" translate="yes" xml:space="preserve">
          <source>There is no upgrade method to convert filters into pipes. You won't miss it. It's easy to turn the filter function into an equivalent Pipe class. The implementation is the same as before, repackaged in the &lt;code&gt;transform&lt;/code&gt; method. Rename the file to &lt;code&gt;checkmark.pipe.ts&lt;/code&gt; to conform with Angular conventions:</source>
          <target state="translated">Не существует метода обновления для преобразования фильтров в трубы. Вы не пропустите это. Легко превратить функцию фильтра в эквивалентный класс Pipe. Реализация такая же, как и раньше, переупакована в методе &lt;code&gt;transform&lt;/code&gt; . Переименуйте файл в &lt;code&gt;checkmark.pipe.ts&lt;/code&gt; в соответствии с угловыми соглашениями:</target>
        </trans-unit>
        <trans-unit id="781eeaf093073ff0f504a446a6e2751d0558d133" translate="yes" xml:space="preserve">
          <source>There is one exception to this behavior that applies to &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; has &lt;code&gt;trackBy&lt;/code&gt; functionality that can deal with referential inequality of objects when iterating over them. See &lt;a href=&quot;built-in-directives#ngfor-with-trackby&quot;&gt;*ngFor with &lt;code&gt;trackBy&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Есть одно исключение из этого поведения, которое применяется к &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; имеет функцию &lt;code&gt;trackBy&lt;/code&gt; , которая может справляться с ссылочным неравенством объектов при итерации по ним. Подробнее см. &lt;a href=&quot;built-in-directives#ngfor-with-trackby&quot;&gt;* NgFor с &lt;code&gt;trackBy&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4367e8254fa20fae31dcd949ca18914ce55ee3c5" translate="yes" xml:space="preserve">
          <source>There is one exception to this behavior that applies to &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; has &lt;code&gt;trackBy&lt;/code&gt; functionality that can deal with referential inequality of objects when iterating over them. See &lt;a href=&quot;template-syntax#ngfor-with-trackby&quot;&gt;*ngFor with &lt;code&gt;trackBy&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">Есть одно исключение из этого поведения, которое применяется к &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; имеет функцию &lt;code&gt;trackBy&lt;/code&gt; , которая может справиться с неравенством объектов при их переборе. Смотрите &lt;a href=&quot;template-syntax#ngfor-with-trackby&quot;&gt;* ngFor с &lt;code&gt;trackBy&lt;/code&gt; &lt;/a&gt; для деталей.</target>
        </trans-unit>
        <trans-unit id="7dd62d5ae3789ef38b487eab0e8d1f7f87b82b99" translate="yes" xml:space="preserve">
          <source>There is one exception to this rule. Attributes can be changed by &lt;code&gt;&lt;a href=&quot;template-syntax&quot;&gt;setAttribute()&lt;/a&gt;&lt;/code&gt;, which re-initializes corresponding DOM properties.</source>
          <target state="translated">Из этого правила есть одно исключение. Атрибуты могут быть изменены с помощью &lt;code&gt;&lt;a href=&quot;template-syntax&quot;&gt;setAttribute()&lt;/a&gt;&lt;/code&gt; , который повторно инициализирует соответствующие свойства DOM.</target>
        </trans-unit>
        <trans-unit id="11dbb8bce3c3271a707e1c42a72d9f859744e253" translate="yes" xml:space="preserve">
          <source>There is one exception to this rule. Attributes can be changed by &lt;code&gt;setAttribute()&lt;/code&gt;, which re-initializes corresponding DOM properties.</source>
          <target state="translated">Есть одно исключение из этого правила. Атрибуты можно изменить с помощью &lt;code&gt;setAttribute()&lt;/code&gt; , который повторно инициализирует соответствующие свойства DOM.</target>
        </trans-unit>
        <trans-unit id="d33886b39df983b142ac0e4c678d0df8e24d2439" translate="yes" xml:space="preserve">
          <source>There is one exception to this rule: to make local development easier, browsers do &lt;em&gt;not&lt;/em&gt; require a secure connection when accessing an app on &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">Из этого правила есть одно исключение: для облегчения локальной разработки браузерам &lt;em&gt;не&lt;/em&gt; требуется защищенное соединение при доступе к приложению на &lt;code&gt;localhost&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56ed5ae7d3569c2686c1ede9ce1a1546720090e8" translate="yes" xml:space="preserve">
          <source>There is only one root injector for an app. Providing &lt;code&gt;UserService&lt;/code&gt; at the &lt;code&gt;root&lt;/code&gt; or &lt;code&gt;AppModule&lt;/code&gt; level means it is registered with the root injector. There is just one &lt;code&gt;UserService&lt;/code&gt; instance in the entire app and every class that injects &lt;code&gt;UserService&lt;/code&gt; gets this service instance &lt;em&gt;unless&lt;/em&gt; you configure another provider with a &lt;em&gt;child injector&lt;/em&gt;.</source>
          <target state="translated">Для приложения есть только один корневой инжектор. Предоставление &lt;code&gt;UserService&lt;/code&gt; на уровне &lt;code&gt;root&lt;/code&gt; или &lt;code&gt;AppModule&lt;/code&gt; означает, что он зарегистрирован в корневом инжекторе. Существует всего один экземпляр &lt;code&gt;UserService&lt;/code&gt; во всем приложении, и каждый класс, который внедряет &lt;code&gt;UserService&lt;/code&gt; , получает этот экземпляр службы, &lt;em&gt;если&lt;/em&gt; вы не настроите другого поставщика с &lt;em&gt;дочерним инжектором&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="aa0f46f07be6d7bd145a95e639f76d57f093602d" translate="yes" xml:space="preserve">
          <source>There isn't anything the client application can do about these errors. The server must be configured to accept the application's requests. Read about how to enable CORS for specific servers at &lt;a href=&quot;http://enable-cors.org/server.html&quot;&gt;enable-cors.org&lt;/a&gt;.</source>
          <target state="translated">Клиентское приложение ничего не может сделать с этими ошибками. Сервер должен быть настроен на прием запросов приложения. Прочтите о том, как включить CORS для определенных серверов, на сайте &lt;a href=&quot;http://enable-cors.org/server.html&quot;&gt;enable-cors.org&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd29a80577a16149f809aa709e10802120f26a64" translate="yes" xml:space="preserve">
          <source>There will be one additional argument to the &lt;code&gt;transform&lt;/code&gt; method for each parameter passed to the pipe. Your pipe has one such parameter: the &lt;code&gt;exponent&lt;/code&gt;.</source>
          <target state="translated">Будет один дополнительный аргумент метода &lt;code&gt;transform&lt;/code&gt; для каждого параметра, передаваемого в канал. У вашей трубы есть один такой параметр: &lt;code&gt;exponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cc5eb405460e77c124b415c5ccacffdb138ea7a" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s nothing special about this component, nothing form-specific, nothing to distinguish it from any component you've written before.</source>
          <target state="translated">В этом компоненте нет ничего особенного, ничего специфичного для формы, ничего отличающего его от любого компонента, который вы написали ранее.</target>
        </trans-unit>
        <trans-unit id="542467bb8ed2c1b3891b718134b4968a6fc9a566" translate="yes" xml:space="preserve">
          <source>There's a good reason for this circuitous path to the element.</source>
          <target state="translated">Есть веская причина для этого контурного пути к элементу.</target>
        </trans-unit>
        <trans-unit id="508e59adf4df546f2bbce6e533bf9e238970539b" translate="yes" xml:space="preserve">
          <source>There's a similar helper for producing an async error.</source>
          <target state="translated">Есть похожий помощник для создания асинхронной ошибки.</target>
        </trans-unit>
        <trans-unit id="84cc470613727d84aabbfa2c1862c5ad36fcaf45" translate="yes" xml:space="preserve">
          <source>There's also the &lt;code&gt;bind-&lt;/code&gt; prefix alternative:</source>
          <target state="translated">Есть также альтернатива префикса &lt;code&gt;bind-&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="0909bf3d1ff44badd0511d8a77fa43424485ad25" translate="yes" xml:space="preserve">
          <source>There's an easier way: bind to Angular's &lt;code&gt;keyup.enter&lt;/code&gt; pseudo-event. Then Angular calls the event handler only when the user presses &lt;em&gt;Enter&lt;/em&gt;.</source>
          <target state="translated">Есть более простой способ: связать с псевдо-событием Angular &lt;code&gt;keyup.enter&lt;/code&gt; . Затем Angular вызывает обработчик событий только тогда, когда пользователь нажимает &lt;em&gt;Enter&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ab30027be9f11ddbb2b70f4586d177e63c2b9249" translate="yes" xml:space="preserve">
          <source>There's another school of testing that never calls &lt;code&gt;beforeEach()&lt;/code&gt; and prefers to create classes explicitly rather than use the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Есть другая школа тестирования, которая никогда не вызывает &lt;code&gt;beforeEach()&lt;/code&gt; и предпочитает создавать классы явно, а не использовать &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ea61c19309ff72246ea3a2984fbfffe7d47f7033" translate="yes" xml:space="preserve">
          <source>There's another way to get the user data: use Angular &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;&lt;strong&gt;template reference variables&lt;/strong&gt;&lt;/a&gt;. These variables provide direct access to an element from within the template. To declare a template reference variable, precede an identifier with a hash (or pound) character (#).</source>
          <target state="translated">Есть еще один способ получить пользовательские данные: использовать &lt;a href=&quot;template-syntax#ref-vars&quot;&gt;&lt;strong&gt;ссылочные переменные шаблона&lt;/strong&gt;&lt;/a&gt; Angular . Эти переменные обеспечивают прямой доступ к элементу из шаблона. Чтобы объявить переменную ссылки на шаблон, перед идентификатором должен стоять символ хеша (или фунта) (#).</target>
        </trans-unit>
        <trans-unit id="649efc388a11470109bc9e7158e40958a6267aea" translate="yes" xml:space="preserve">
          <source>There's no harm in calling &lt;code&gt;compileComponents()&lt;/code&gt; when it's not required.</source>
          <target state="translated">Нет никакого вреда в вызове &lt;code&gt;compileComponents()&lt;/code&gt; когда это не требуется.</target>
        </trans-unit>
        <trans-unit id="37d89c9051846e27681d13e418f11f2bb4feecdd" translate="yes" xml:space="preserve">
          <source>There's no link to the new shipping component yet, but you can see its template in the preview pane by entering the URL its route specifies. The URL has the pattern: &lt;code&gt;https://getting-started.stackblitz.io/shipping&lt;/code&gt; where the &lt;code&gt;getting-started.stackblitz.io&lt;/code&gt; part may be different for your StackBlitz project.</source>
          <target state="translated">Ссылка на новый компонент доставки пока отсутствует, но вы можете увидеть его шаблон на панели предварительного просмотра, введя URL-адрес, указанный в его маршруте. URL имеет шаблон: &lt;code&gt;https://getting-started.stackblitz.io/shipping&lt;/code&gt; где &lt;code&gt;getting-started.stackblitz.io&lt;/code&gt; часть может отличаться для вашего проекта StackBlitz.</target>
        </trans-unit>
        <trans-unit id="d18f6add8e2e8495aacfbde5fe0813a6561d85a2" translate="yes" xml:space="preserve">
          <source>There's no need to declare or import anything else. The default test module is pre-configured with something like the &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/platform-browser&lt;/code&gt;.</source>
          <target state="translated">Там нет необходимости декларировать или импортировать что-либо еще. Стандартный тестовый модуль предварительно настроен на что-то вроде &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;@angular/platform-browser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9485387892c4a4b5f9d2bd3163e6e9e7f2a2b699" translate="yes" xml:space="preserve">
          <source>There's no need to list a component in both the &lt;code&gt;bootstrap&lt;/code&gt; and &lt;code&gt;entryComponents&lt;/code&gt; lists, although doing so is harmless.</source>
          <target state="translated">Нет необходимости &lt;code&gt;entryComponents&lt;/code&gt; компонент в списках &lt;code&gt;bootstrap&lt;/code&gt; и entryComponents , хотя это безопасно.</target>
        </trans-unit>
        <trans-unit id="c90aada73387116e19e933942a34d908ca737c3b" translate="yes" xml:space="preserve">
          <source>There's often a &lt;em&gt;root&lt;/em&gt; element that can and should host the structural directive. The list element (&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;) is a typical host element of an &lt;code&gt;NgFor&lt;/code&gt; repeater.</source>
          <target state="translated">Часто существует &lt;em&gt;корневой&lt;/em&gt; элемент, который может и должен содержать структурную директиву. Элемент списка ( &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; ) является типичным хост-элементом повторителя &lt;code&gt;NgFor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ca6a4c5f2988457896869f467e895a0eeb19531f" translate="yes" xml:space="preserve">
          <source>There's one notable exception to the rule of using Angular attribute syntax for downgraded components. It has to do with input or output names that consist of multiple words. In Angular, you would bind these attributes using camelCase:</source>
          <target state="translated">Есть одно примечательное исключение из правила использования синтаксиса атрибутов Angular для пониженных компонентов.Оно касается входных или выходных имен,состоящих из нескольких слов.В Angular вы бы связали эти атрибуты с помощью верблюжьего кейса:</target>
        </trans-unit>
        <trans-unit id="6cf332e6a1ddffd2a30959312ecbc288187e50d8" translate="yes" xml:space="preserve">
          <source>There's really nothing for the component to do with the &lt;code&gt;Observable&lt;/code&gt; returned by &lt;code&gt;heroService.delete()&lt;/code&gt;&lt;strong&gt;but it must subscribe anyway&lt;/strong&gt;.</source>
          <target state="translated">В действительности компонент не имеет ничего общего с &lt;code&gt;Observable&lt;/code&gt; , возвращаемым &lt;code&gt;heroService.delete()&lt;/code&gt; &lt;strong&gt;но он все равно должен подписаться&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2e367708179b8c6b769aeb5784a73ff30d8bb02d" translate="yes" xml:space="preserve">
          <source>There's the hero again, displayed read-only with interpolation bindings. This &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; appears only while the component is in the submitted state.</source>
          <target state="translated">Там снова герой, отображается только для чтения с интерполяционными привязками. Этот &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; появляется только тогда, когда компонент находится в отправленном состоянии.</target>
        </trans-unit>
        <trans-unit id="6dd1142b94c5ac636081fac9b5a1e93324c5c2d5" translate="yes" xml:space="preserve">
          <source>These &lt;code&gt;import&lt;/code&gt; statements add several important elements that your component needs. To learn more about each, see the following API pages:</source>
          <target state="translated">Эти операторы &lt;code&gt;import&lt;/code&gt; добавляют несколько важных элементов, которые нужны вашему компоненту. Чтобы узнать больше о каждом, посетите следующие страницы API:</target>
        </trans-unit>
        <trans-unit id="83d7c16de255fb2bdba11db803994a1ace7987c7" translate="yes" xml:space="preserve">
          <source>These Angular docs help you learn and use the Angular framework and development platform, from your first application to optimizing complex single-page apps for enterprises. Tutorials and guides include downloadable examples to accelerate your projects.</source>
          <target state="translated">Эти Угловые документы помогут вам узнать и использовать Угловой фреймворк и платформу разработки,от вашего первого приложения до оптимизации сложных одностраничных приложений для предприятий.Учебники и руководства включают в себя загружаемые примеры для ускорения ваших проектов.</target>
        </trans-unit>
        <trans-unit id="a7f47f5fef07e1400c8770e346e27dd983d3210c" translate="yes" xml:space="preserve">
          <source>These Angular docs help you learn and use the Angular platform and framework, from your first app to optimizing complex enterprise apps. Tutorials and guides include downloadable example to accelerate your projects.</source>
          <target state="translated">Эти документы помогут вам изучить и использовать платформу и фреймворк Angular,начиная с вашего первого приложения и заканчивая оптимизацией сложных корпоративных приложений.Учебники и руководства содержат примеры,которые можно загрузить,чтобы ускорить выполнение проектов.</target>
        </trans-unit>
        <trans-unit id="9c8f4170de94e38e103661daa9cd09d22d382f76" translate="yes" xml:space="preserve">
          <source>These are all features you'll want to test.</source>
          <target state="translated">Это все функции,которые вы захотите проверить.</target>
        </trans-unit>
        <trans-unit id="19fa4dd3c3af8618e37296f1894ca8c3663deadc" translate="yes" xml:space="preserve">
          <source>These are short, simple functions that you can write yourself. Unfortunately, they're too simple for many common scenarios. An observable often emits multiple times, perhaps after a significant delay. A component may coordinate multiple observables with overlapping sequences of values and errors.</source>
          <target state="translated">Это короткие,простые функции,которые вы можете написать сами.К сожалению,они слишком просты для многих распространенных сценариев.Наблюдаемый часто испускает несколько раз,возможно,после значительной задержки.Компонент может координировать несколько наблюдаемых функций с перекрывающимися последовательностями значений и ошибок.</target>
        </trans-unit>
        <trans-unit id="15a8bdbc2d27676173c0870bb9d476a44f9c0ec8" translate="yes" xml:space="preserve">
          <source>These are techniques for &lt;em&gt;Shallow Component Testing&lt;/em&gt; , so-named because they reduce the visual surface of the component to just those elements in the component's template that matter for tests.</source>
          <target state="translated">Это методы поверхностного &lt;em&gt;тестирования компонентов&lt;/em&gt; , так называемые, потому что они уменьшают визуальную поверхность компонента до тех элементов в шаблоне компонента, которые имеют значение для тестов.</target>
        </trans-unit>
        <trans-unit id="874d82075cf5a1fb8e894c6a1831e2a99c4f9cf5" translate="yes" xml:space="preserve">
          <source>These are tests of the pipe &lt;em&gt;in isolation&lt;/em&gt;. They can't tell if the &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt; is working properly as applied in the application components.</source>
          <target state="translated">Это испытания трубы &lt;em&gt;в изоляции&lt;/em&gt; . Они не могут сказать, работает ли &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt; должным образом, как применяется в компонентах приложения.</target>
        </trans-unit>
        <trans-unit id="7aa6e184a2127bbab023de5210efd3d94de5eaf2" translate="yes" xml:space="preserve">
          <source>These are the polyfills required to run an Angular application on each supported browser:</source>
          <target state="translated">Это полилинии,необходимые для запуска приложения Angular в каждом поддерживаемом браузере:</target>
        </trans-unit>
        <trans-unit id="d6422d60e6eed75caf6b039379d70a9d2b91599f" translate="yes" xml:space="preserve">
          <source>These buttons work, because the CLI automatically added the routes to the feature modules to the &lt;code&gt;routes&lt;/code&gt; array in &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">Эти кнопки работают, потому что CLI автоматически добавляет маршруты к функциональным модулям в массив &lt;code&gt;routes&lt;/code&gt; в &lt;code&gt;app.module.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fadb046a4f69a8a29a6dfda895733f7808fc510" translate="yes" xml:space="preserve">
          <source>These complications argue for &lt;em&gt;avoiding component inheritance&lt;/em&gt;.</source>
          <target state="translated">Эти осложнения приводят к &lt;em&gt;отказу от наследования компонентов&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3cd97d4aaaa391802aacd2112d378fb5a981f75d" translate="yes" xml:space="preserve">
          <source>These declared classes are visible within the module but invisible to components in a different module unless they are exported from this module and the other module imports this one.</source>
          <target state="translated">Эти объявленные классы видны внутри модуля,но невидимы для компонентов в другом модуле,если только они не экспортируются из этого модуля,а другой модуль не импортирует этот класс.</target>
        </trans-unit>
        <trans-unit id="e0813bed7ed16b4e0b736f3f56fccf8998f10650" translate="yes" xml:space="preserve">
          <source>These decorators can be used individually or together, as shown in the example. This &lt;code&gt;HeroBiosAndContactsComponent&lt;/code&gt; is a revision of &lt;code&gt;HeroBiosComponent&lt;/code&gt; which you looked at &lt;a href=&quot;dependency-injection-in-action#hero-bios-component&quot;&gt;above&lt;/a&gt;.</source>
          <target state="translated">Эти декораторы могут использоваться по отдельности или вместе, как показано в примере. Этот &lt;code&gt;HeroBiosAndContactsComponent&lt;/code&gt; является ревизией &lt;code&gt;HeroBiosComponent&lt;/code&gt; ,на которую вы смотрели &lt;a href=&quot;dependency-injection-in-action#hero-bios-component&quot;&gt;выше&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e87f8d2277a30ddb602eb3ef7903e879dae9750f" translate="yes" xml:space="preserve">
          <source>These differences argue for a re-usable stub class.</source>
          <target state="translated">Эти различия приводят к тому,что класс &quot;корешков&quot; может быть использован повторно.</target>
        </trans-unit>
        <trans-unit id="5d480207010587b40e48ea63c6eb80e8e93917ee" translate="yes" xml:space="preserve">
          <source>These docs assume that you are already familiar with &lt;a href=&quot;https://developer.mozilla.org/docs/Learn/HTML/Introduction_to_HTML&quot;&gt;HTML&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/docs/Learn/CSS/First_steps&quot;&gt;CSS&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript&quot;&gt;JavaScript&lt;/a&gt;, and some of the tools from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;latest standards&lt;/a&gt;, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;classes&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;modules&lt;/a&gt;. The code samples are written using &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. Most Angular code can be written with just the latest JavaScript, using &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/classes.html&quot;&gt;types&lt;/a&gt; for dependency injection, and using &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/decorators.html&quot;&gt;decorators&lt;/a&gt; for metadata.</source>
          <target state="translated">В этих документах предполагается, что вы уже знакомы с &lt;a href=&quot;https://developer.mozilla.org/docs/Learn/HTML/Introduction_to_HTML&quot;&gt;HTML&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/docs/Learn/CSS/First_steps&quot;&gt;CSS&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript&quot;&gt;JavaScript&lt;/a&gt; и некоторыми инструментами из &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;последних стандартов&lt;/a&gt; , такими как &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;классы&lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;модули&lt;/a&gt; . Примеры кода написаны с использованием &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; . Большая часть кода Angular может быть написана с использованием только последней версии JavaScript, с использованием &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/classes.html&quot;&gt;типов&lt;/a&gt; для внедрения зависимостей и &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/decorators.html&quot;&gt;декораторов&lt;/a&gt; для метаданных.</target>
        </trans-unit>
        <trans-unit id="332167a123f1d6b741515c29ca0f4c696c2a51c9" translate="yes" xml:space="preserve">
          <source>These docs assume that you are already familiar with HTML, CSS, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript&quot;&gt;JavaScript&lt;/a&gt;, and some of the tools from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;latest standards&lt;/a&gt;, such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;classes&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;modules&lt;/a&gt;. The code samples are written using &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt;. Most Angular code can be written with just the latest JavaScript, using &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/classes.html&quot;&gt;types&lt;/a&gt; for dependency injection, and using &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/decorators.html&quot;&gt;decorators&lt;/a&gt; for metadata.</source>
          <target state="translated">В этих документах предполагается, что вы уже знакомы с HTML, CSS, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript&quot;&gt;JavaScript&lt;/a&gt; и некоторыми инструментами из &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Language_Resources&quot;&gt;последних стандартов&lt;/a&gt; , такими как &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes&quot;&gt;классы&lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import&quot;&gt;модули&lt;/a&gt; . Примеры кода написаны с использованием &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; . Большая часть кода Angular может быть написана только с использованием новейшего JavaScript, с использованием &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/classes.html&quot;&gt;типов&lt;/a&gt; для внедрения зависимостей и с использованием &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/decorators.html&quot;&gt;декораторов&lt;/a&gt; для метаданных.</target>
        </trans-unit>
        <trans-unit id="c0248cf761a672df747afacece78839e13096947" translate="yes" xml:space="preserve">
          <source>These events are logged to the console when the &lt;code&gt;&lt;a href=&quot;../api/router/extraoptions#enableTracing&quot;&gt;enableTracing&lt;/a&gt;&lt;/code&gt; option is enabled also. For an example of filtering router navigation events, visit the &lt;a href=&quot;observables-in-angular#router&quot;&gt;router section&lt;/a&gt; of the &lt;a href=&quot;observables-in-angular&quot;&gt;Observables in Angular&lt;/a&gt; guide.</source>
          <target state="translated">Эти события записываются на консоль, когда &lt;code&gt;&lt;a href=&quot;../api/router/extraoptions#enableTracing&quot;&gt;enableTracing&lt;/a&gt;&lt;/code&gt; опция enableTracing . Пример фильтрации событий навигации &lt;a href=&quot;observables-in-angular#router&quot;&gt;маршрутизатора см. В разделе &amp;laquo;Маршрутизатор&amp;raquo;&lt;/a&gt; в &lt;a href=&quot;observables-in-angular&quot;&gt;Observables in Angular&lt;/a&gt; guide.</target>
        </trans-unit>
        <trans-unit id="1f157bfae90a971b921468f9fd643dfd20928fdb" translate="yes" xml:space="preserve">
          <source>These examples demonstrate features of Angular components.</source>
          <target state="translated">Эти примеры демонстрируют особенности угловых компонентов.</target>
        </trans-unit>
        <trans-unit id="87d6961b56e31c059fead7fe33dd1106be84b901" translate="yes" xml:space="preserve">
          <source>These examples demonstrate features of Angular templates.</source>
          <target state="translated">Эти примеры демонстрируют особенности угловых шаблонов.</target>
        </trans-unit>
        <trans-unit id="16439e0a64a943344cbb334dca94796483e78e42" translate="yes" xml:space="preserve">
          <source>These examples demonstrate minimal, fundamental concepts.</source>
          <target state="translated">Эти примеры демонстрируют минимальные,фундаментальные понятия.</target>
        </trans-unit>
        <trans-unit id="2680c5c9b2a75fe66adbcbcf8321b6c19da88cdf" translate="yes" xml:space="preserve">
          <source>These examples transform a date into various formats, assuming that &lt;code&gt;dateObj&lt;/code&gt; is a JavaScript &lt;code&gt;Date&lt;/code&gt; object for year: 2015, month: 6, day: 15, hour: 21, minute: 43, second: 11, given in the local time for the &lt;code&gt;en-US&lt;/code&gt; locale.</source>
          <target state="translated">Эти примеры преобразуют дату в различные форматы, предполагая, что &lt;code&gt;dateObj&lt;/code&gt; - это объект JavaScript &lt;code&gt;Date&lt;/code&gt; для года: 2015, месяц: 6, день: 15, час: 21, минута: 43, секунда: 11, заданная по местному времени для &lt;code&gt;en-US&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2c3bf4e06192c72785cca976fd12148948a7cb90" translate="yes" xml:space="preserve">
          <source>These examples use a shorthand form of the prompt syntax, supplying only the text of the question. In most cases, this is all that is required. Notice however, that the two prompts expect different types of input. When using the shorthand form, the most appropriate type is automatically selected based on the property's schema. In the example, the &lt;code&gt;name&lt;/code&gt; prompt uses the &lt;code&gt;input&lt;/code&gt; type because it it is a string property. The &lt;code&gt;useColor&lt;/code&gt; prompt uses a &lt;code&gt;confirmation&lt;/code&gt; type because it is a Boolean property. In this case, &quot;yes&quot; corresponds to &lt;code&gt;true&lt;/code&gt; and &quot;no&quot; corresponds to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">В этих примерах используется сокращенная форма синтаксиса приглашения, содержащая только текст вопроса. В большинстве случаев это все, что требуется. Однако обратите внимание, что эти два запроса ожидают разные типы ввода. При использовании сокращенной формы наиболее подходящий тип автоматически выбирается на основе схемы свойства. В этом примере приглашение &lt;code&gt;name&lt;/code&gt; использует тип &lt;code&gt;input&lt;/code&gt; поскольку оно является строковым свойством. &lt;code&gt;useColor&lt;/code&gt; стремительное использует &lt;code&gt;confirmation&lt;/code&gt; типа , потому что это логическое свойство. В этом случае &amp;laquo;да&amp;raquo; соответствует &lt;code&gt;true&lt;/code&gt; а &amp;laquo;нет&amp;raquo; соответствует &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d24eb680a33027e2617530dc12e6676b87a2c5ca" translate="yes" xml:space="preserve">
          <source>These files need to be copied together with the polyfills. The files the application needs at runtime, like the &lt;code&gt;.json&lt;/code&gt; phone lists and images, also need to be copied.</source>
          <target state="translated">Эти файлы необходимо скопировать вместе с полифилами. Файлы, которые нужны приложению во время выполнения, такие как &lt;code&gt;.json&lt;/code&gt; телефонов .json и изображения, также необходимо скопировать.</target>
        </trans-unit>
        <trans-unit id="02b3a7df8a6c77dd99266ab2b91a34b6a3d23a77" translate="yes" xml:space="preserve">
          <source>These four bindings demonstrate the difference between &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;. Since the 🐶 (puppy) is declared inside the &amp;lt;#VIEW&amp;gt;, it isn't visible to the projected content. Instead, the projected content sees the 🐳 (whale).</source>
          <target state="translated">Эти четыре привязки демонстрируют разницу между &lt;code&gt;providers&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; . Поскольку 🐶 (щенок) объявлен внутри &amp;lt;#VIEW&amp;gt;, он не виден проецируемому контенту. Вместо этого спроецированный контент видит 🐳 (кит).</target>
        </trans-unit>
        <trans-unit id="b30edd37d2f476685d4ba739caa2c47f5b94f2fd" translate="yes" xml:space="preserve">
          <source>These four bindings demonstrate the difference between &lt;code&gt;providers&lt;/code&gt; and &lt;code&gt;viewProviders&lt;/code&gt;. Since the 🐶 (puppy) is declared inside the &amp;lt;#VIEW&amp;gt;, it isn't visible to the projected content. Instead, the projected content sees the 🐳 (whale).</source>
          <target state="translated">Эти четыре привязки демонстрируют разницу между &lt;code&gt;providers&lt;/code&gt; и поставщиками &lt;code&gt;viewProviders&lt;/code&gt; . Поскольку 🐶 (щенок) объявлен внутри &amp;lt;#VIEW&amp;gt;, он не отображается для проецируемого содержимого. Вместо этого проецируемый контент видит 🐳 (кит).</target>
        </trans-unit>
        <trans-unit id="8eb673fe0a5db30500d447cd8ed9df2e9892d31d" translate="yes" xml:space="preserve">
          <source>These inputs and outputs can be supplied from the AngularJS template, and the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; method takes care of wiring them up:</source>
          <target state="translated">Эти входы и выходы могут быть предоставлены из шаблона AngularJS, а метод &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgradecomponent&quot;&gt;downgradeComponent&lt;/a&gt;()&lt;/code&gt; позаботится о их подключении:</target>
        </trans-unit>
        <trans-unit id="aca1e5487bdae512316a9552870710cde2c7edc4" translate="yes" xml:space="preserve">
          <source>These kinds of parameters don't fit easily in a URL &lt;em&gt;path&lt;/em&gt;. Even if you could define a suitable URL token scheme, doing so greatly complicates the pattern matching required to translate an incoming URL to a named route.</source>
          <target state="translated">Эти типы параметров не легко вписываются в URL- &lt;em&gt;путь&lt;/em&gt; . Даже если бы вы могли определить подходящую схему токена URL, это значительно усложняет сопоставление с шаблоном, необходимое для преобразования входящего URL в именованный маршрут.</target>
        </trans-unit>
        <trans-unit id="29425b5274cb55ea0877f8425586bc76b4a9c960" translate="yes" xml:space="preserve">
          <source>These may not be troubling questions for the simple components illustrated above. But many components have complex interactions with the DOM elements described in their templates, causing HTML to appear and disappear as the component state changes.</source>
          <target state="translated">Эти вопросы могут не вызывать беспокойства для простых компонентов,проиллюстрированных выше.Но многие компоненты имеют сложные взаимодействия с DOM-элементами,описанными в их шаблонах,что приводит к появлению и исчезновению HTML по мере изменения состояния компонента.</target>
        </trans-unit>
        <trans-unit id="9280883bdf2743a9d36490d0dc135e8e9a512cc2" translate="yes" xml:space="preserve">
          <source>These methods access the injected timer component directly.</source>
          <target state="translated">Эти методы имеют прямой доступ к инжектируемому компоненту таймера.</target>
        </trans-unit>
        <trans-unit id="c22429bdeba56aae46b0da88ebbd1eba5c9f7eb4" translate="yes" xml:space="preserve">
          <source>These microsyntax mechanisms are also available to you when you write your own structural directives. For example, microsyntax in Angular allows you to write &lt;code&gt;&amp;lt;div *&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;=&quot;let &lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt; of items&quot;&amp;gt;{{&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;}}&amp;lt;/div&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;ng-template &lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt; [&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngForOf&lt;/a&gt;]=&quot;items&quot;&amp;gt;&amp;lt;div&amp;gt;{{&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;}}&amp;lt;/div&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt;. The following sections provide detailed information on constraints, grammar, and translation of microsyntax.</source>
          <target state="translated">Эти механизмы микросинтаксиса также доступны вам, когда вы пишете свои собственные структурные директивы. Например, микросинтаксис в Angular позволяет писать &lt;code&gt;&amp;lt;div *&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;=&quot;let &lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt; of items&quot;&amp;gt;{{&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;}}&amp;lt;/div&amp;gt;&lt;/code&gt; вместо &lt;code&gt;&amp;lt;ng-template &lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt; [&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngForOf&lt;/a&gt;]=&quot;items&quot;&amp;gt;&amp;lt;div&amp;gt;{{&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;}}&amp;lt;/div&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt; . В следующих разделах представлена ​​подробная информация об ограничениях, грамматике и переводе микросинтаксиса.</target>
        </trans-unit>
        <trans-unit id="a5772cf07dfef80156b6e9a71682c4a0275d4733" translate="yes" xml:space="preserve">
          <source>These microsyntax mechanisms are also available to you when you write your own structural directives. For example, microsyntax in Angular allows you to write &lt;code&gt;&amp;lt;div *&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;=&quot;let item of items&quot;&amp;gt;{{item}}&amp;lt;/div&amp;gt;&lt;/code&gt; instead of &lt;code&gt;&amp;lt;ng-template &lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt; let-item [&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngForOf&lt;/a&gt;]=&quot;items&quot;&amp;gt;&amp;lt;div&amp;gt;{{item}}&amp;lt;/div&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt;. The following sections provide detailed information on constraints, grammar, and translation of microsyntax.</source>
          <target state="translated">Эти механизмы микросинтаксиса также доступны вам, когда вы пишете свои собственные структурные директивы. Например, микросинтаксис в Angular позволяет писать &lt;code&gt;&amp;lt;div *&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;=&quot;let item of items&quot;&amp;gt;{{item}}&amp;lt;/div&amp;gt;&lt;/code&gt; вместо &lt;code&gt;&amp;lt;ng-template &lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt; let-item [&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngForOf&lt;/a&gt;]=&quot;items&quot;&amp;gt;&amp;lt;div&amp;gt;{{item}}&amp;lt;/div&amp;gt;&amp;lt;/ng-template&amp;gt;&lt;/code&gt; . В следующих разделах представлена ​​подробная информация об ограничениях, грамматике и переводе микросинтаксиса.</target>
        </trans-unit>
        <trans-unit id="5b1b2fa607afc63d8c9722ad2df075b0b65154ed" translate="yes" xml:space="preserve">
          <source>These options are used to modify the matching behavior of requests. They are passed to the browsers &lt;code&gt;Cache#match&lt;/code&gt; function. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Cache/match&quot;&gt;MDN&lt;/a&gt; for details. Currently, only the following options are supported:</source>
          <target state="translated">Эти параметры используются для изменения поведения сопоставления запросов. Они передаются &lt;code&gt;Cache#match&lt;/code&gt; функции Cache # match . См. Подробности в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Cache/match&quot;&gt;MDN&lt;/a&gt; . В настоящее время поддерживаются только следующие параметры:</target>
        </trans-unit>
        <trans-unit id="f75727d0e53686975b5f9fe934821fc5ef2a010f" translate="yes" xml:space="preserve">
          <source>These providers are insulated from changes to application providers with the same lookup token. When the router creates a component within the lazy-loaded context, Angular prefers service instances created from these providers to the service instances of the application root injector.</source>
          <target state="translated">Эти оференты изолированы от изменений к оферентам применений с одинаковым токеном поиска.Когда маршрутизатор создает компонент в ленивом контексте,Angular предпочитает экземпляры сервисов,созданные из этих провайдеров,экземплярам сервисов корневого инжектора приложения.</target>
        </trans-unit>
        <trans-unit id="24dcfb3b1d815ddbfc80be55b49ecf74b9b01fec" translate="yes" xml:space="preserve">
          <source>These services become available for injection into any component, directive, pipe or service which is a child of this injector.</source>
          <target state="translated">Эти услуги становятся доступными для инъекций в любой компонент,директиву,трубу или сервис,который является детищем этого инжектора.</target>
        </trans-unit>
        <trans-unit id="f9b0721484302592e733b6e272928008f313a2ba" translate="yes" xml:space="preserve">
          <source>These situations should be very rare, and extraordinary care must be taken to avoid creating a Cross Site Scripting (XSS) security bug!</source>
          <target state="translated">Такие ситуации должны быть очень редкими,и необходимо проявлять исключительную осторожность,чтобы избежать создания ошибки безопасности Cross Site Scripting (XSS)!</target>
        </trans-unit>
        <trans-unit id="a17e78995649c771b926fa480048cee49ac14e32" translate="yes" xml:space="preserve">
          <source>These standard testing techniques are great for unit testing services in isolation.</source>
          <target state="translated">Эти стандартные методы тестирования отлично подходят для услуг по единичному тестированию в изоляции.</target>
        </trans-unit>
        <trans-unit id="471f11bedf623af5e51a7550b62738fa78f523b0" translate="yes" xml:space="preserve">
          <source>These status values are mutually exclusive, so a control cannot be both valid AND invalid or invalid AND disabled.</source>
          <target state="translated">Эти значения статуса взаимно исключают друг друга,поэтому элемент управления не может быть как действительным,так и недействительным или недействительным И отключенным.</target>
        </trans-unit>
        <trans-unit id="05f39205bd9c10860f4038f8cb6f1f80b35432f1" translate="yes" xml:space="preserve">
          <source>These styles are post-processed so that each selector is augmented with &lt;code&gt;_nghost&lt;/code&gt; or &lt;code&gt;_ngcontent&lt;/code&gt; attribute selectors. These extra selectors enable the scoping rules described in this page.</source>
          <target state="translated">Эти стили подвергаются &lt;code&gt;_nghost&lt;/code&gt; обработке, поэтому каждый селектор дополняется селекторами атрибутов _nghost или &lt;code&gt;_ngcontent&lt;/code&gt; . Эти дополнительные селекторы активируют правила области видимости, описанные на этой странице.</target>
        </trans-unit>
        <trans-unit id="59ed30c14d44ecaa6cf045e5333024f1a3034ced" translate="yes" xml:space="preserve">
          <source>These techniques are useful for small-scale demonstrations, but they quickly become verbose and clumsy when handling large amounts of user input. Two-way data binding is a more elegant and compact way to move values between data entry fields and model properties. The next page, &lt;code&gt;Forms&lt;/code&gt;, explains how to write two-way bindings with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эти методы полезны для небольших демонстраций, но они быстро становятся многословными и неуклюжими при обработке большого количества пользовательского ввода. Двухстороннее связывание данных - более элегантный и компактный способ перемещения значений между полями ввода данных и свойствами модели. На следующей странице, &lt;code&gt;Forms&lt;/code&gt; , объясняется, как писать двусторонние привязки с помощью &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="53c3322dcb945c3c38eca1315cb0acd70af9667e" translate="yes" xml:space="preserve">
          <source>These tests could fail or timeout if the &lt;code&gt;HeroDetailService&lt;/code&gt; made its own XHR calls to a remote server. There might not be a remote server to call.</source>
          <target state="translated">Эти тесты могут завершиться неудачно или &lt;code&gt;HeroDetailService&lt;/code&gt; если HeroDetailService сделал свои собственные вызовы XHR для удаленного сервера. Возможно, нет удаленного сервера для вызова.</target>
        </trans-unit>
        <trans-unit id="ce3f767e6032b95a5a603034551bf8233c93f3f2" translate="yes" xml:space="preserve">
          <source>These three examples cover the need for an app with one level routing. The moment you add a child router, such as the crisis center, you create new link array possibilities.</source>
          <target state="translated">Эти три примера охватывают необходимость создания приложения с одноуровневой маршрутизацией.В момент добавления дочернего маршрутизатора,например,кризисного центра,вы создаете новые возможности массива ссылок.</target>
        </trans-unit>
        <trans-unit id="9c84bcfdd1bbb4bcd869d39ead56a3ce00137884" translate="yes" xml:space="preserve">
          <source>These three examples cover the needs of an app with one level of routing. However, with a child router, such as in the crisis center, you create new link array possibilities.</source>
          <target state="translated">Эти три примера охватывают потребности приложения с одним уровнем маршрутизации.Однако,с помощью дочернего маршрутизатора,например,в кризисном центре,вы создаете новые возможности массива ссылок.</target>
        </trans-unit>
        <trans-unit id="a858b580e5d1dabed41a7075d6de4bc56502ab07" translate="yes" xml:space="preserve">
          <source>These two properties have subtle differences, so switching to &lt;code&gt;textContent&lt;/code&gt; under the hood can be surprising to users. For this reason, we are deprecating this behavior. Going forward, users should explicitly bind to &lt;code&gt;textContent&lt;/code&gt; when using Domino.</source>
          <target state="translated">Эти два свойства имеют тонкие различия, поэтому переключение на &lt;code&gt;textContent&lt;/code&gt; под капотом может удивить пользователей. По этой причине мы осуждаем это поведение. В дальнейшем пользователи должны явно связываться с &lt;code&gt;textContent&lt;/code&gt; при использовании Domino.</target>
        </trans-unit>
        <trans-unit id="db3d1e9b8dc7f1d6ba6781b5d1aeadad60243cbb" translate="yes" xml:space="preserve">
          <source>These two routes navigate to the crisis center child components, &lt;code&gt;CrisisCenterHomeComponent&lt;/code&gt; and &lt;code&gt;CrisisDetailComponent&lt;/code&gt;, respectively.</source>
          <target state="translated">Эти два маршрута &lt;code&gt;CrisisCenterHomeComponent&lt;/code&gt; дочерним компонентам кризисного центра, CrisisCenterHomeComponent и &lt;code&gt;CrisisDetailComponent&lt;/code&gt; , соответственно.</target>
        </trans-unit>
        <trans-unit id="ce122e04c4a0e2a0a5f7ad63d194e4fea023293d" translate="yes" xml:space="preserve">
          <source>They are &lt;em&gt;not inherited&lt;/em&gt; by any components nested within the template nor by any content projected into the component.</source>
          <target state="translated">Они &lt;em&gt;не наследуются&lt;/em&gt; ни компонентами, вложенными в шаблон, ни содержимым, проецируемым в компонент.</target>
        </trans-unit>
        <trans-unit id="16ada202f0f526edb509f857ec3037ca6a0f4115" translate="yes" xml:space="preserve">
          <source>They are displayed in named outlets.</source>
          <target state="translated">Они отображаются в названных торговых точках.</target>
        </trans-unit>
        <trans-unit id="1b990f73ae62c0da4608dce9f08db78466a71820" translate="yes" xml:space="preserve">
          <source>They are immutable for a good reason: the app may retry a request several times before it succeeds, which means that the interceptor chain may re-process the same request multiple times. If an interceptor could modify the original request object, the re-tried operation would start from the modified request rather than the original. Immutability ensures that interceptors see the same request for each try.</source>
          <target state="translated">Они непреложны по уважительной причине:приложение может повторять запрос несколько раз,прежде чем он увенчается успехом,что означает,что цепочка перехватчиков может повторно обрабатывать один и тот же запрос несколько раз.Если перехватчик может изменить первоначальный запрос,то повторная попытка начнется с измененного запроса,а не с оригинала.Неизменяемость гарантирует,что перехватчики будут видеть один и тот же запрос при каждой попытке.</target>
        </trans-unit>
        <trans-unit id="0a5e8503c85509faa05b6e855e4edcff069456e9" translate="yes" xml:space="preserve">
          <source>They are independent of each other.</source>
          <target state="translated">Они независимы друг от друга.</target>
        </trans-unit>
        <trans-unit id="6afb78efe8cab856821000146ea4a61b8a334fa8" translate="yes" xml:space="preserve">
          <source>They are very similar with the only difference being:</source>
          <target state="translated">Они очень похожи с единственной разницей:</target>
        </trans-unit>
        <trans-unit id="cfd5fb1fb1b07124fb1aace027accf1df4c99e03" translate="yes" xml:space="preserve">
          <source>They follow a common pattern: a &lt;em&gt;parent&lt;/em&gt; component serves as a test rig for a &lt;em&gt;child&lt;/em&gt; component that illustrates one or more of the lifecycle hook methods.</source>
          <target state="translated">Они следуют общему шаблону: &lt;em&gt;родительский&lt;/em&gt; компонент служит тестовой установкой для &lt;em&gt;дочернего&lt;/em&gt; компонента, который иллюстрирует один или несколько методов ловушки жизненного цикла.</target>
        </trans-unit>
        <trans-unit id="73b47ba16ec3ed20f7c0f09044645d6af1239f79" translate="yes" xml:space="preserve">
          <source>They might be imported by the root &lt;code&gt;AppModule&lt;/code&gt; of a small application that lacks routing.</source>
          <target state="translated">Они могут быть импортированы корневым &lt;code&gt;AppModule&lt;/code&gt; небольшого приложения, которому не хватает маршрутизации.</target>
        </trans-unit>
        <trans-unit id="0bd9de91dc582fbf7daa5013098dfee5a9baa9df" translate="yes" xml:space="preserve">
          <source>They might. By default, the router re-uses a component instance when it re-navigates to the same component type without visiting a different component first. The route parameters could change each time.</source>
          <target state="translated">Они могут.По умолчанию маршрутизатор повторно использует экземпляр компонента,когда он повторно переходит на один и тот же тип компонента,не посещая сначала другой компонент.Параметры маршрута могут меняться каждый раз.</target>
        </trans-unit>
        <trans-unit id="bcebc66109bd0b943ba34a0b34f724475faa7a20" translate="yes" xml:space="preserve">
          <source>They must return a Promise or an Observable,</source>
          <target state="translated">Они должны вернуть Обещание или Наблюдателя,</target>
        </trans-unit>
        <trans-unit id="6a1d3b6796b2728eca30d7dc142c330459e6d1b9" translate="yes" xml:space="preserve">
          <source>They typically have a top component that acts as the feature root and private, supporting sub-components descend from it.</source>
          <target state="translated">Обычно они имеют верхний компонент,который действует в качестве корневого и приватного,поддерживающие подкомпоненты идут от него.</target>
        </trans-unit>
        <trans-unit id="f8026517cd2a6484e993db7a3cd1d56c8845b6ed" translate="yes" xml:space="preserve">
          <source>They work in combination with other routes.</source>
          <target state="translated">Они работают в сочетании с другими маршрутами.</target>
        </trans-unit>
        <trans-unit id="3d3f6d4959980160a0fdb422743d1ab226d66d6a" translate="yes" xml:space="preserve">
          <source>They'll do that with the RxJS &lt;code&gt;tap()&lt;/code&gt; operator, which looks at the observable values, does something with those values, and passes them along. The &lt;code&gt;tap()&lt;/code&gt; call back doesn't touch the values themselves.</source>
          <target state="translated">Они будут делать это с помощью оператора &lt;code&gt;tap()&lt;/code&gt; RxJS , который просматривает наблюдаемые значения, что-то делает с этими значениями и передает их. &lt;code&gt;tap()&lt;/code&gt; обратного вызова не трогайте сами значения.</target>
        </trans-unit>
        <trans-unit id="6764cd39877eeca69ad10d4286668ee2c1b61792" translate="yes" xml:space="preserve">
          <source>Things go wrong, especially when you're getting data from a remote server. The &lt;code&gt;HeroService.getHeroes()&lt;/code&gt; method should catch errors and do something appropriate.</source>
          <target state="translated">Все идет не так, особенно когда вы получаете данные с удаленного сервера. Метод &lt;code&gt;HeroService.getHeroes()&lt;/code&gt; должен перехватывать ошибки и делать что-то подходящее.</target>
        </trans-unit>
        <trans-unit id="bba021091f297904597c2bb05d6e5e449bd86e0a" translate="yes" xml:space="preserve">
          <source>Things to keep in mind, when downgrading multiple modules:</source>
          <target state="translated">О чем следует помнить при понижении рейтинга нескольких модулей:</target>
        </trans-unit>
        <trans-unit id="756e27539ff0999bdbcc7f5377fff9d815ce78d8" translate="yes" xml:space="preserve">
          <source>Third step of the Tour of Heroes example application. For more information, see &lt;a href=&quot;../tutorial/toh-pt3&quot;&gt;Create a feature component&lt;/a&gt;.</source>
          <target state="translated">Третий шаг примера приложения Tour of Heroes. Для получения дополнительной информации см. &lt;a href=&quot;../tutorial/toh-pt3&quot;&gt;Создание компонента функции&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e70dff18e1178a855b0cc1f8fc21945818c734cb" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;, which shows a read-only hero with interpolation bindings, appears only while the component is in the submitted state.</source>
          <target state="translated">Этот &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; , который показывает героя только для чтения с привязками интерполяции, появляется только тогда, когда компонент находится в отправленном состоянии.</target>
        </trans-unit>
        <trans-unit id="2c24139a9de681ae61f6d7ec726db576f5f264b0" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; displays the error if the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; has the cross validation error returned by the &lt;code&gt;identityRevealed&lt;/code&gt; validator, but only if the user has finished &lt;a href=&quot;form-validation#dirty-or-touched&quot;&gt;interacting with the form&lt;/a&gt;.</source>
          <target state="translated">Этот &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; отображает ошибку, если &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; имеет ошибку перекрестной проверки, возвращенную валидатором &lt;code&gt;identityRevealed&lt;/code&gt; , но только если пользователь завершил &lt;a href=&quot;form-validation#dirty-or-touched&quot;&gt;взаимодействие с формой&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c7b69adf603ad8f6d0e880b3effde6a1bd75ec06" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; example:</source>
          <target state="translated">Вот &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; пример:</target>
        </trans-unit>
        <trans-unit id="258e5fd8f98e77a1547ddec9b070f084c89034c4" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;MissionService&lt;/code&gt; connects the &lt;code&gt;MissionControlComponent&lt;/code&gt; to multiple &lt;code&gt;AstronautComponent&lt;/code&gt; children.</source>
          <target state="translated">Это &lt;code&gt;MissionService&lt;/code&gt; соединяет &lt;code&gt;MissionControlComponent&lt;/code&gt; к нескольким &lt;code&gt;AstronautComponent&lt;/code&gt; детей.</target>
        </trans-unit>
        <trans-unit id="59e007abb53ac82deffb3014ce0885f777370e0d" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;VersionChildComponent&lt;/code&gt; detects changes to the &lt;code&gt;&lt;a href=&quot;../api/core/version#major&quot;&gt;major&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/version#minor&quot;&gt;minor&lt;/a&gt;&lt;/code&gt; input properties and composes a log message reporting these changes:</source>
          <target state="translated">Этот &lt;code&gt;VersionChildComponent&lt;/code&gt; обнаруживает изменения &lt;code&gt;&lt;a href=&quot;../api/core/version#major&quot;&gt;major&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/version#minor&quot;&gt;minor&lt;/a&gt;&lt;/code&gt; свойств ввода и составляет сообщение журнала, сообщающее об этих изменениях:</target>
        </trans-unit>
        <trans-unit id="5e474d161be24784860c8aaa6c3af723b09d2443" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;VersionChildComponent&lt;/code&gt; detects changes to the &lt;code&gt;major&lt;/code&gt; and &lt;code&gt;minor&lt;/code&gt; input properties and composes a log message reporting these changes:</source>
          <target state="translated">Этот &lt;code&gt;VersionChildComponent&lt;/code&gt; обнаруживает изменения &lt;code&gt;major&lt;/code&gt; и &lt;code&gt;minor&lt;/code&gt; входных свойств и составляет сообщение журнала, сообщающее об этих изменениях:</target>
        </trans-unit>
        <trans-unit id="fbe66defed731afe2b351869493bed1b439539c0" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; syntax can only &lt;em&gt;set&lt;/em&gt; a data-bound property. If you need to do something more, you can write the expanded form; for example, the following changes the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; value to uppercase:</source>
          <target state="translated">Этот синтаксис &lt;code&gt;[(&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;)]&lt;/code&gt; может &lt;em&gt;устанавливать&lt;/em&gt; только свойство с привязкой к данным. Если вам нужно сделать что-то большее, вы можете написать расширенную форму; например, следующее меняет значение &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; на верхний регистр:</target>
        </trans-unit>
        <trans-unit id="d891bfbbc30a830ed00d349d04e68d42b5ea2457" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;bootstrap&lt;/code&gt; method is a direct replacement (takes same arguments) for AngularJS &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt;&lt;code&gt;bootstrap&lt;/code&gt;&lt;/a&gt; method. Unlike AngularJS, this bootstrap is asynchronous.</source>
          <target state="translated">Этот метод &lt;code&gt;bootstrap&lt;/code&gt; является прямой заменой (принимает те же аргументы) метода &lt;a href=&quot;https://docs.angularjs.org/api/ng/function/angular.bootstrap&quot;&gt; &lt;code&gt;bootstrap&lt;/code&gt; &lt;/a&gt; AngularJS . В отличие от AngularJS, этот загрузчик является асинхронным.</target>
        </trans-unit>
        <trans-unit id="a81bbff7f4c2b4f66516ab105c5f2da6f8908842" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;getHeroes()&lt;/code&gt; returns the sliced list of heroes at positions 1 and 5, returning only four of the Top Heroes (2nd, 3rd, 4th, and 5th).</source>
          <target state="translated">Этот &lt;code&gt;getHeroes()&lt;/code&gt; возвращает нарезанный список героев в позициях 1 и 5, возвращая только четырех из главных героев (2-го, 3-го, 4-го и 5-го).</target>
        </trans-unit>
        <trans-unit id="9b89a86d9e9910b9545a4d39e96b18d0d3af5a5b" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;outlets&lt;/code&gt; object within an outer object was completely unnecessary when there was only one route and one &lt;em&gt;unnamed&lt;/em&gt; outlet to think about.</source>
          <target state="translated">Этот объект &lt;code&gt;outlets&lt;/code&gt; во внешнем объекте был совершенно ненужным, когда нужно было думать только об одном маршруте и об одной &lt;em&gt;неназванной&lt;/em&gt; розетке.</target>
        </trans-unit>
        <trans-unit id="5491cacef48b72757c7e430268f1e44c75a5a9c3" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;outlets&lt;/code&gt; object within an outer object was unnecessary when there was only one route and one unnamed outlet.</source>
          <target state="translated">Этот объект &lt;code&gt;outlets&lt;/code&gt; во внешнем объекте не нужен, когда существует только один маршрут и одна безымянная розетка.</target>
        </trans-unit>
        <trans-unit id="7f20e0dbf005f61cffb8c3dd9af39a375a30b434" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;Tour of Heroes&lt;/em&gt; tutorial provides an introduction to the fundamentals of Angular. It shows you how to set up your local development environment and develop an app using the &lt;a href=&quot;https://angular.io/cli&quot;&gt;Angular CLI tool&lt;/a&gt;.</source>
          <target state="translated">Это руководство &lt;em&gt;Tour of Heroes&lt;/em&gt; представляет собой введение в основы Angular. В нем показано, как настроить локальную среду разработки и разработать приложение с помощью &lt;a href=&quot;https://angular.io/cli&quot;&gt;инструмента Angular CLI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c24943786f27bf8eb8f423a4535eae1d8c0db2ea" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;Tour of Heroes&lt;/em&gt; tutorial shows you how to set up your local development environment and develop an app using the &lt;a href=&quot;https://angular.io/cli&quot;&gt;Angular CLI tool&lt;/a&gt;, and provides an introduction to the fundamentals of Angular.</source>
          <target state="translated">В этом руководстве &lt;em&gt;Tour of Heroes&lt;/em&gt; показано, как настроить локальную среду разработки и разработать приложение с помощью &lt;a href=&quot;https://angular.io/cli&quot;&gt;инструмента Angular CLI&lt;/a&gt; , а также представлены основные принципы Angular.</target>
        </trans-unit>
        <trans-unit id="f09b226e4f2c4eb0d926e572d4a75f6880da5490" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;no-op&lt;/em&gt; interceptor simply calls &lt;code&gt;next.handle()&lt;/code&gt; with the original request and returns the observable without doing a thing.</source>
          <target state="translated">Этот перехватчик &lt;em&gt;без операции&lt;/em&gt; просто вызывает &lt;code&gt;next.handle()&lt;/code&gt; с исходным запросом и возвращает наблюдаемое без &lt;em&gt;каких-либо &lt;/em&gt;действий .</target>
        </trans-unit>
        <trans-unit id="50210317fa118bab69579c2022e5d9a816190d39" translate="yes" xml:space="preserve">
          <source>This API is the recommended way to construct injectors in performance-sensitive parts.</source>
          <target state="translated">Данный API является рекомендуемым способом построения инжекторов в чувствительных к производительности деталях.</target>
        </trans-unit>
        <trans-unit id="0afd71a82786c8f3561d56c5cfd0be5839b4503c" translate="yes" xml:space="preserve">
          <source>This HTML uses an Angular directive, &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt;. This directive connects the routes you defined to your template files.</source>
          <target state="translated">Этот HTML использует директиву Angular &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; . Эта директива связывает маршруты, которые вы определили, с вашими файлами шаблонов.</target>
        </trans-unit>
        <trans-unit id="469f1d1eec641289327d7f725b8bc80d83c5b953" translate="yes" xml:space="preserve">
          <source>This Style Guide is for anyone who contributes to the Angular documentation (this site). These guidelines should be followed by all authors. Deviations must be approved by a documentation editor.</source>
          <target state="translated">Это руководство по стилю для всех,кто вносит свой вклад в Угловую документацию (этот сайт).Этим рекомендациям должны следовать все авторы.Отклонения должны быть одобрены редактором документации.</target>
        </trans-unit>
        <trans-unit id="3415857a9e6030331c79e1e76604015a5df5e041" translate="yes" xml:space="preserve">
          <source>This UI uses the HTML unordered list with &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; tags. The &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element is the Angular &quot;repeater&quot; directive. It marks that &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element (and its children) as the &quot;repeater template&quot;:</source>
          <target state="translated">Этот пользовательский интерфейс использует неупорядоченный список HTML с тегами &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; . Элемент &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; в элементе &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; является угловой директивой &amp;laquo;retater&amp;raquo;. Он отмечает этот элемент &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; (и его дочерние элементы) как &amp;laquo;шаблон повторителя&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="2b4ebc81415f90795ab79ed8a5b2cd8f2bb7595a" translate="yes" xml:space="preserve">
          <source>This XML element represents the translation of the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; greeting tag that you marked with the &lt;code&gt;i18n&lt;/code&gt; attribute earlier in this guide.</source>
          <target state="translated">Этот элемент XML представляет перевод &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; приветствия &amp;lt;h1&amp;gt;, который вы пометили атрибутом &lt;code&gt;i18n&lt;/code&gt; ранее в этом руководстве.</target>
        </trans-unit>
        <trans-unit id="48298b5a19ab51f248711bfb5fa88cc617b0670f" translate="yes" xml:space="preserve">
          <source>This allows the Angular Language Service to provide diagnostics and completions in &lt;code&gt;.ts&lt;/code&gt; files.</source>
          <target state="translated">Это позволяет Angular Language Service предоставлять диагностику и дополнения в файлах &lt;code&gt;.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98f7af4e84f120f59a1303fcf4a9447a45a5d38a" translate="yes" xml:space="preserve">
          <source>This allows the compiler to generate a reference to &lt;code&gt;ɵ0&lt;/code&gt; in the factory without having to know what the value of &lt;code&gt;ɵ0&lt;/code&gt; contains.</source>
          <target state="translated">Это позволяет компилятору генерировать ссылку на &lt;code&gt;ɵ0&lt;/code&gt; на фабрике без необходимости знать, что содержит значение &lt;code&gt;ɵ0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="24015a5bb2d8b1f8210c5acd6f640d4dc6d483b2" translate="yes" xml:space="preserve">
          <source>This allows us to add new states without having to include separate transitions for each one.</source>
          <target state="translated">Это позволяет нам добавлять новые состояния без необходимости включать отдельные переходы для каждого из них.</target>
        </trans-unit>
        <trans-unit id="cbe0ef929bc0631d02b1205466d152dddaeabe4f" translate="yes" xml:space="preserve">
          <source>This allows you to set appropriate styles for individual components that won&amp;rsquo;t leak into other parts of the application.</source>
          <target state="translated">Это позволяет вам устанавливать соответствующие стили для отдельных компонентов, которые не попадут в другие части приложения.</target>
        </trans-unit>
        <trans-unit id="fa04bc183c4a35ffd59532acaddb459c40802b8c" translate="yes" xml:space="preserve">
          <source>This always means importing &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/common&lt;/code&gt; for access to the Angular directives such as &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;NgFor&lt;/code&gt;. You can import it directly or from another NgModule that &lt;a href=&quot;ngmodule-faq#q-reexport&quot;&gt;re-exports&lt;/a&gt; it.</source>
          <target state="translated">Это всегда означает импорт &lt;code&gt;&lt;a href=&quot;../api/common/commonmodule&quot;&gt;CommonModule&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;@angular/common&lt;/code&gt; для доступа к директивам Angular, таким как &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;NgFor&lt;/code&gt; . Вы можете импортировать его напрямую или из другого модуля NgModule, который &lt;a href=&quot;ngmodule-faq#q-reexport&quot;&gt;реэкспортирует&lt;/a&gt; его.</target>
        </trans-unit>
        <trans-unit id="e4af21eecd43fe210746ff3a4c62a38f49ffe7f9" translate="yes" xml:space="preserve">
          <source>This app has many of the features you'd expect to find in a data-driven application. It acquires and displays a list of heroes, edits a selected hero's detail, and navigates among different views of heroic data.</source>
          <target state="translated">Это приложение обладает многими функциями,которые вы ожидаете найти в приложении,работающем с данными.Оно получает и отображает список героев,редактирует детали выбранного героя и перемещается между различными представлениями героических данных.</target>
        </trans-unit>
        <trans-unit id="f17ea08bfc5149a70f6152907b2632dc2a63714a" translate="yes" xml:space="preserve">
          <source>This app provides &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; in the app's root injector, as a side-effect of importing the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;AppModule&lt;/code&gt;. You should provide interceptors in &lt;code&gt;AppModule&lt;/code&gt; as well.</source>
          <target state="translated">Это приложение предоставляет &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; в корневой инжектор приложения, как побочный эффект импорта &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;AppModule&lt;/code&gt; . Вы также должны предоставить перехватчики в &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9010af53dce21e99cd1b98b6918ed08a568edceb" translate="yes" xml:space="preserve">
          <source>This app uses more terse &quot;variable assignment&quot; style simply for brevity.</source>
          <target state="translated">Это приложение использует более лаконичный стиль &quot;присваивания переменных&quot; просто для краткости.</target>
        </trans-unit>
        <trans-unit id="e2dd29b7095751503adbe18ae104950880b8fed2" translate="yes" xml:space="preserve">
          <source>This application deletes a hero with the &lt;code&gt;HttpClient.delete&lt;/code&gt; method by passing the hero's id in the request URL.</source>
          <target state="translated">Это приложение удаляет героя с &lt;code&gt;HttpClient.delete&lt;/code&gt; метода HttpClient.delete , передавая идентификатор героя в URL-адресе запроса.</target>
        </trans-unit>
        <trans-unit id="fb866e223d05018eca2dedfbe444966b166935fb" translate="yes" xml:space="preserve">
          <source>This application won't re-use the &lt;code&gt;HeroDetailComponent&lt;/code&gt;. The user always returns to the hero list to select another hero to view. There's no way to navigate from one hero detail to another hero detail without visiting the list component in between. Therefore, the router creates a new &lt;code&gt;HeroDetailComponent&lt;/code&gt; instance every time.</source>
          <target state="translated">Это приложение не будет повторно использовать &lt;code&gt;HeroDetailComponent&lt;/code&gt; . Пользователь всегда возвращается к списку героев, чтобы выбрать другого героя для просмотра. Невозможно перейти от одной детали героя к другой детали героя, не посетив промежуточный компонент списка. Поэтому маршрутизатор каждый раз создает новый экземпляр &lt;code&gt;HeroDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="448875963d3ea5d9faf62ce4ea4e238a24bd4684" translate="yes" xml:space="preserve">
          <source>This approach makes it easier to re-use the component somewhere else and deliver the component's intended appearance even if the global styles are different.</source>
          <target state="translated">Такой подход облегчает повторное использование компонента в другом месте и позволяет добиться желаемого внешнего вида компонента,даже если глобальные стили отличаются.</target>
        </trans-unit>
        <trans-unit id="736cdde48162e97e7bae316bb32e7680eb170f89" translate="yes" xml:space="preserve">
          <source>This approach works for prototyping, but is not robust or maintainable. As soon as you try to test this component or get heroes from a remote server, you have to change the implementation of &lt;code&gt;HeroesListComponent&lt;/code&gt; and replace every use of the &lt;code&gt;HEROES&lt;/code&gt; mock data.</source>
          <target state="translated">Этот подход работает для прототипирования, но не является надежным или обслуживаемым. Как только вы попытаетесь протестировать этот компонент или получить героев с удаленного сервера, вам придется изменить реализацию &lt;code&gt;HeroesListComponent&lt;/code&gt; и заменить каждое использование ложных данных &lt;code&gt;HEROES&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0acaa2b4ca7df60a89c610729a6dc049181aab2c" translate="yes" xml:space="preserve">
          <source>This array lacks a route parameter because previously you didn't need to send information to the &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">В этом массиве отсутствует параметр маршрута, потому что ранее вам не нужно было отправлять информацию в &lt;code&gt;HeroListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2207c94db1f3c39ac92627d2d416a732485be1c" translate="yes" xml:space="preserve">
          <source>This array lacks a route parameter because you had no reason to send information to the &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">В этом массиве отсутствует параметр маршрута, поскольку у вас не было причин отправлять информацию в &lt;code&gt;HeroListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9b9947c5ef101e16618174c23e01f209fae9d4e" translate="yes" xml:space="preserve">
          <source>This article explains how to configure your project to run Circle CI and Travis CI, and also update your test configuration to be able to run tests in the Chrome browser in either environment.</source>
          <target state="translated">Эта статья объясняет,как настроить ваш проект на запуск Circle CI и Travis CI,а также обновить вашу тестовую конфигурацию,чтобы иметь возможность запускать тесты в браузере Chrome в любом окружении.</target>
        </trans-unit>
        <trans-unit id="4e02ae1fdc78e80303d48713d37550a281676bcb" translate="yes" xml:space="preserve">
          <source>This asynchronous approach &lt;em&gt;will work&lt;/em&gt; when the &lt;code&gt;HeroService&lt;/code&gt; requests heroes from the server.</source>
          <target state="translated">Этот асинхронный подход &lt;em&gt;будет работать,&lt;/em&gt; когда &lt;code&gt;HeroService&lt;/code&gt; запрашивает героев с сервера.</target>
        </trans-unit>
        <trans-unit id="9e58e666a6e882960d6b1daf78543b6547ba94f0" translate="yes" xml:space="preserve">
          <source>This attack is only successful if the returned JSON is executable as JavaScript. Servers can prevent an attack by prefixing all JSON responses to make them non-executable, by convention, using the well-known string &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt;.</source>
          <target state="translated">Эта атака успешна только в том случае, если возвращаемый JSON исполняется как JavaScript. Серверы могут предотвратить атаку, добавив префикс всех ответов JSON, чтобы сделать их неисполняемыми, по соглашению, используя общеизвестную строку &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="651be0a8100915d5529b17ae73b92bbe7b153f12" translate="yes" xml:space="preserve">
          <source>This bare minimum &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; imports &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, the module every Angular browser-based app must have. It also defines an empty &lt;code&gt;ngDoBootstrap()&lt;/code&gt; method, to prevent the &lt;a href=&quot;../api/core/compiler&quot;&gt;Compiler&lt;/a&gt; from returning errors. This is necessary because the module will not have a &lt;code&gt;bootstrap&lt;/code&gt; declaration on its &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Этот минимальный &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; импортирует &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; , модуль, который должен иметь каждое приложение на основе браузера Angular. Он также определяет пустой &lt;code&gt;ngDoBootstrap()&lt;/code&gt; , чтобы &lt;a href=&quot;../api/core/compiler&quot;&gt;компилятор не&lt;/a&gt; возвращал ошибки. Это необходимо, потому что у модуля не будет объявления &lt;code&gt;bootstrap&lt;/code&gt; на его декораторе &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f56abc002d8d199ab12c7a00e8eceb4cb5324712" translate="yes" xml:space="preserve">
          <source>This bare minimum &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; imports &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, the module every Angular browser-based app must have. It also imports &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/upgrade/&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt;, which exports providers that will be used for upgrading and downgrading services and components.</source>
          <target state="translated">Этот минимальный &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; импортирует &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; , модуль, который должен иметь каждое приложение на основе браузера Angular. Он также импортирует &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;@angular/upgrade/&lt;a href=&quot;../api/upgrade/static&quot;&gt;static&lt;/a&gt;&lt;/code&gt; , который экспортирует поставщиков, которые будут использоваться для обновления и понижения качества сервисов и компонентов.</target>
        </trans-unit>
        <trans-unit id="b7707e5e049453b4bfe2c53a590c89b76a5930cb" translate="yes" xml:space="preserve">
          <source>This base route reuse strategy only reuses routes when the matched router configs are identical. This prevents components from being destroyed and recreated when just the fragment or query parameters change (that is, the existing component is &lt;em&gt;reused&lt;/em&gt;).</source>
          <target state="translated">Эта стратегия повторного использования базового маршрута повторно использует маршруты только в том случае, если совпадающие конфигурации маршрутизатора идентичны. Это предотвращает разрушение и воссоздание компонентов при изменении только фрагмента или параметров запроса (то есть &lt;em&gt;повторно используется&lt;/em&gt; существующий компонент ).</target>
        </trans-unit>
        <trans-unit id="4182fbf9bcd985eb43d694af8b1af19720683102" translate="yes" xml:space="preserve">
          <source>This behavior necessarily changes when you use lazy loading. Lazy loading is when you load modules only when you need them; for example, when routing. They aren&amp;rsquo;t loaded right away like with eagerly loaded modules. This means that any services listed in their provider arrays aren&amp;rsquo;t available because the root injector doesn&amp;rsquo;t know about these modules.</source>
          <target state="translated">Это поведение обязательно меняется, когда вы используете ленивую загрузку. Ленивая загрузка - это когда вы загружаете модули только тогда, когда они вам нужны; например, при маршрутизации. Они загружаются не сразу, как в случае загруженных модулей. Это означает, что любые сервисы, перечисленные в их массивах провайдеров, недоступны, поскольку корневой инжектор не знает об этих модулях.</target>
        </trans-unit>
        <trans-unit id="d78768b8b53f7f8d52aad3d6a653f672b2d18303" translate="yes" xml:space="preserve">
          <source>This binding causes the &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; to span two columns.</source>
          <target state="translated">Эта привязка заставляет &lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt; охватывать два столбца.</target>
        </trans-unit>
        <trans-unit id="ab02175f78bb844c7114edbf8c6e52980e6dba3f" translate="yes" xml:space="preserve">
          <source>This cadence of releases gives eager developers access to new features as soon as they are fully developed and pass through our code review and integration testing processes, while maintaining the stability and reliability of the platform for production users that prefer to receive features after they have been validated by Google and other developers that use the pre-release builds.</source>
          <target state="translated">Эта каденция релизов дает энергичным разработчикам доступ к новым функциям,как только они полностью разработаны и проходят через наши процессы обзора кода и тестирования интеграции,сохраняя при этом стабильность и надежность платформы для производственных пользователей,которые предпочитают получать функции после их проверки компанией Google и другими разработчиками,использующими предварительные сборки релизов.</target>
        </trans-unit>
        <trans-unit id="35a35e5d7d8bb3b5d8a866028a9f757d0c2abbb7" translate="yes" xml:space="preserve">
          <source>This cadence of releases gives you access to new features as soon as they are ready, while maintaining the stability and reliability of the platform for production users.</source>
          <target state="translated">Эта каденция релизов дает вам доступ к новым функциям,как только они готовы,сохраняя при этом стабильность и надежность платформы для производственных пользователей.</target>
        </trans-unit>
        <trans-unit id="de8dbaffe2662ccb066fdee3c1966e668ead9335" translate="yes" xml:space="preserve">
          <source>This can be a problem if you have to change your app's location. If you setup a redirect from the old location (for example &lt;code&gt;example.com&lt;/code&gt;) to the new location (for example &lt;code&gt;www.example.com&lt;/code&gt;) the worker will stop working. Also, the redirect won't even trigger for users who are loading the site entirely from Service Worker. The old worker (registered at &lt;code&gt;example.com&lt;/code&gt;) tries to update and sends requests to the old location &lt;code&gt;example.com&lt;/code&gt; which get redirected to the new location &lt;code&gt;www.example.com&lt;/code&gt; and create the error &lt;code&gt;The script resource is behind &lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; redirect, which is disallowed&lt;/code&gt;.</source>
          <target state="translated">Это может быть проблемой, если вам нужно изменить местоположение вашего приложения. Если вы настроите перенаправление со старого местоположения (например, &lt;code&gt;example.com&lt;/code&gt; ) на новое местоположение (например, &lt;code&gt;www.example.com&lt;/code&gt; ), рабочий перестанет работать. Кроме того, перенаправление даже не сработает для пользователей, которые полностью загружают сайт из Service Worker. Старый работник (зарегистрировано в &lt;code&gt;example.com&lt;/code&gt; ) пытается обновлять и отправляет запросы на старое место &lt;code&gt;example.com&lt;/code&gt; , которые попадают в новом место &lt;code&gt;www.example.com&lt;/code&gt; и создать ошибку &lt;code&gt;The script resource is behind &lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; redirect, which is disallowed&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="cf472237a640d8cae814bf8d16bcc95349771c9f" translate="yes" xml:space="preserve">
          <source>This can be a problem if you have to change your app's location. If you setup a redirect from the old location (for example &lt;code&gt;example.com&lt;/code&gt;) to the new location (for example &lt;code&gt;www.example.com&lt;/code&gt;) the worker will stop working. Also, the redirect won't even trigger for users who are loading the site entirely from Service Worker. The old worker (registered at &lt;code&gt;example.com&lt;/code&gt;) tries to update and sends requests to the old location &lt;code&gt;example.com&lt;/code&gt; which get redirected to the new location &lt;code&gt;www.example.com&lt;/code&gt; and create the error &lt;code&gt;The script resource is behind a redirect, which is disallowed&lt;/code&gt;.</source>
          <target state="translated">Это может быть проблемой, если вам нужно изменить местоположение вашего приложения. Если вы настроите перенаправление из старого местоположения (например, &lt;code&gt;example.com&lt;/code&gt; ) в новое местоположение (например, &lt;code&gt;www.example.com&lt;/code&gt; ), воркер перестанет работать. Кроме того, перенаправление даже не сработает для пользователей, которые полностью загружают сайт из Service Worker. Старый воркер (зарегистрированный на &lt;code&gt;example.com&lt;/code&gt; ) пытается обновить и отправляет запросы в старое местоположение &lt;code&gt;example.com&lt;/code&gt; , которые перенаправляются в новое местоположение &lt;code&gt;www.example.com&lt;/code&gt; и создают ошибку &lt;code&gt;The script resource is behind a redirect, which is disallowed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3a25a7112462a90a222ddd01185604490e952693" translate="yes" xml:space="preserve">
          <source>This can be used to resume testing after events have triggered asynchronous activity or asynchronous change detection.</source>
          <target state="translated">Это может быть использовано для возобновления тестирования после того,как события спровоцировали асинхронную активность или асинхронное обнаружение изменений.</target>
        </trans-unit>
        <trans-unit id="934112ccd1aa2b6915e125429be40b8b0e576f0a" translate="yes" xml:space="preserve">
          <source>This can be useful when scanning through code and looking for observable values. Also, if you want a property to store the most recent value from an observable, it can be convenient to simply use the same name with or without the &amp;ldquo;$&amp;rdquo;.</source>
          <target state="translated">Это может быть полезно при сканировании кода и поиске наблюдаемых значений. Также, если вы хотите, чтобы свойство сохраняло самое последнее значение из наблюдаемой, может быть удобно просто использовать то же имя с или без &amp;laquo;$&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="9f44c321dfe09485e6daf24efdf592a980b9e74b" translate="yes" xml:space="preserve">
          <source>This can cause confusion. For example:</source>
          <target state="translated">Это может привести к путанице.Например:</target>
        </trans-unit>
        <trans-unit id="2b2a566810683bdb154f2660dc33dfd48367534d" translate="yes" xml:space="preserve">
          <source>This can happen if you refer to an ambient type. For example, the &lt;code&gt;Window&lt;/code&gt; type is an ambient type declared in the global &lt;code&gt;.d.ts&lt;/code&gt; file.</source>
          <target state="translated">Это может произойти, если вы ссылаетесь на окружающий тип. Например, тип &lt;code&gt;Window&lt;/code&gt; является типом ambient, объявленным в глобальном файле &lt;code&gt;.d.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6476281277699a0797217af1c8c95aadca9fed5f" translate="yes" xml:space="preserve">
          <source>This can happen if you use a number as a property name as in the following example.</source>
          <target state="translated">Это может произойти,если вы используете номер в качестве имени свойства,как в следующем примере.</target>
        </trans-unit>
        <trans-unit id="3b41585be32bdaba39097b77ac3bb57808c72252" translate="yes" xml:space="preserve">
          <source>This can happen when a &lt;a href=&quot;../../guide/router#milestone-5-route-guards&quot;&gt;route guard&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; or initiates a redirect by returning a &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это может произойти, когда средство &lt;a href=&quot;../../guide/router#milestone-5-route-guards&quot;&gt;защиты маршрута&lt;/a&gt; возвращает &lt;code&gt;false&lt;/code&gt; или инициирует перенаправление, возвращая &lt;code&gt;&lt;a href=&quot;urltree&quot;&gt;UrlTree&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="161acaf31fb43a0787ee8fbb9353bde452188f86" translate="yes" xml:space="preserve">
          <source>This causes the CLI to create a folder called &lt;code&gt;customer-dashboard&lt;/code&gt; with a file inside called &lt;code&gt;customer-dashboard.module.ts&lt;/code&gt; with the following contents:</source>
          <target state="translated">Это заставляет CLI создавать папку с именем &lt;code&gt;customer-dashboard&lt;/code&gt; с файлом внутри с именем &lt;code&gt;customer-dashboard.module.ts&lt;/code&gt; со следующим содержимым:</target>
        </trans-unit>
        <trans-unit id="5019a44a75c49b88537ac9e8329f1c2eab2831e5" translate="yes" xml:space="preserve">
          <source>This class is an &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, which you import to provide AngularJS core services, and has an instance method used to bootstrap the hybrid upgrade application.</source>
          <target state="translated">Этот класс представляет собой &lt;code&gt;&lt;a href=&quot;../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , который вы импортируете для предоставления базовых сервисов AngularJS и имеет метод экземпляра, используемый для начальной загрузки гибридного приложения обновления.</target>
        </trans-unit>
        <trans-unit id="025bc612549c84721126511ec42b2a6d0ff1d56c" translate="yes" xml:space="preserve">
          <source>This class is immutable; all mutation operations return a new instance.</source>
          <target state="translated">Этот класс является непреложным;все операции мутации возвращают новый экземпляр.</target>
        </trans-unit>
        <trans-unit id="d3d60295749b3a3a0404d6398d78e18e444489d5" translate="yes" xml:space="preserve">
          <source>This class is only used internally in the &lt;code&gt;&lt;a href=&quot;reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Этот класс используется только внутри &lt;code&gt;&lt;a href=&quot;reactiveformsmodule&quot;&gt;ReactiveFormsModule&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="801d9cace214c9cf01792d4f29b30f5848a25da1" translate="yes" xml:space="preserve">
          <source>This class should not be used directly by an application developer. Instead, use &lt;a href=&quot;common/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот класс не должен использоваться непосредственно разработчиком приложения. Вместо этого используйте &lt;a href=&quot;common/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1d6a70007738552506319e31c6ae61765926844" translate="yes" xml:space="preserve">
          <source>This class should not be used directly by an application developer. Instead, use &lt;a href=&quot;location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Этот класс не должен использоваться непосредственно разработчиком приложения. Вместо этого используйте &lt;a href=&quot;location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1130101a82611d98bbdc3094466ba2af2e0c67ec" translate="yes" xml:space="preserve">
          <source>This code adds the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;imports&lt;/code&gt; array. Next, the code uses the &lt;code&gt;forRoot()&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; to define your two routes. This method takes an array of JavaScript objects, with each object defining the proprties of a route. The &lt;code&gt;forRoot()&lt;/code&gt; method ensures that your application only instantiates one &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt;. For more information, see &lt;a href=&quot;singleton-services#forroot-and-the-router&quot;&gt;Singleton Services&lt;/a&gt;.</source>
          <target state="translated">Этот код добавляет &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; в массив &lt;code&gt;imports&lt;/code&gt; . Затем код использует &lt;code&gt;forRoot()&lt;/code&gt; метод &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; определить свои два маршрута. Этот метод принимает массив объектов JavaScript, каждый из которых определяет свойства маршрута. Метод &lt;code&gt;forRoot()&lt;/code&gt; гарантирует, что ваше приложение создает только один &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; . Для получения дополнительной информации см. &lt;a href=&quot;singleton-services#forroot-and-the-router&quot;&gt;Singleton Services&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7dbb83be6aba801790f665b970b9f834230c23e" translate="yes" xml:space="preserve">
          <source>This code inspects certain &lt;em&gt;values of interest&lt;/em&gt;, capturing and comparing their current state against previous values. It writes a special message to the log when there are no substantive changes to the &lt;code&gt;hero&lt;/code&gt; or the &lt;code&gt;power&lt;/code&gt; so you can see how often &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;()&lt;/code&gt; is called. The results are illuminating.</source>
          <target state="translated">Этот код проверяет определенные &lt;em&gt;интересующие значения&lt;/em&gt; , фиксируя и сравнивая их текущее состояние с предыдущими значениями. Он записывает специальное сообщение в журнал, когда нет существенных изменений &lt;code&gt;hero&lt;/code&gt; или &lt;code&gt;power&lt;/code&gt; чтобы вы могли видеть, как часто &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;()&lt;/code&gt; . Результаты поучительны.</target>
        </trans-unit>
        <trans-unit id="d5c998372f08c1a101f67cf6fc6453dc480a13a2" translate="yes" xml:space="preserve">
          <source>This code inspects certain &lt;em&gt;values of interest&lt;/em&gt;, capturing and comparing their current state against previous values. It writes a special message to the log when there are no substantive changes to the &lt;code&gt;hero&lt;/code&gt; or the &lt;code&gt;power&lt;/code&gt; so you can see how often &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt; is called. The results are illuminating:</source>
          <target state="translated">Этот код проверяет определенные &lt;em&gt;значения интереса&lt;/em&gt; , захватывая и сравнивая их текущее состояние с предыдущими значениями. Он записывает специальное сообщение в журнал, когда нет существенных изменений в &lt;code&gt;hero&lt;/code&gt; или &lt;code&gt;power&lt;/code&gt; чтобы вы могли видеть, как часто &lt;code&gt;&lt;a href=&quot;../api/core/docheck&quot;&gt;DoCheck&lt;/a&gt;&lt;/code&gt; . Результаты освещают:</target>
        </trans-unit>
        <trans-unit id="db010d4e9e3ffb1514bc2b0d8a75b9801342ba2f" translate="yes" xml:space="preserve">
          <source>This code repeats the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tag for each power in the list of powers. The &lt;code&gt;pow&lt;/code&gt; template input variable is a different power in each iteration; you display its name using the interpolation syntax.</source>
          <target state="translated">Этот код повторяет &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; для каждой силы в списке способностей. &lt;code&gt;pow&lt;/code&gt; входная переменная шаблона является различной мощности в каждой итерации; вы отображаете его имя, используя синтаксис интерполяции.</target>
        </trans-unit>
        <trans-unit id="75b5c5fa1c91023ea749d4aa233f6b4929e1dfb1" translate="yes" xml:space="preserve">
          <source>This code sets the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;code&gt;value&lt;/code&gt; property by binding to the &lt;code&gt;name&lt;/code&gt; property. To listen for changes to the value, the code binds to the &lt;code&gt;input&lt;/code&gt; event of the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element. When the user makes changes, the &lt;code&gt;input&lt;/code&gt; event is raised, and the binding executes the statement within a context that includes the DOM event object, &lt;code&gt;$event&lt;/code&gt;.</source>
          <target state="translated">Этот код устанавливает свойство &lt;code&gt;value&lt;/code&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; путем привязки к свойству &lt;code&gt;name&lt;/code&gt; . Для прослушивания изменений в стоимости, код связывается с &lt;code&gt;input&lt;/code&gt; событием &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; элемента. Когда пользователь вносит изменения, событие &lt;code&gt;input&lt;/code&gt; вызывается, и привязка выполняет инструкцию в контексте, который включает в себя объект события DOM, &lt;code&gt;$event&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c635cb0e548cea6b4f39f0f4a00a64dd0890bc38" translate="yes" xml:space="preserve">
          <source>This code uses only one &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt;, so only one subscription is created. The conditional statement stores the result of &lt;code&gt;userStream|&lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; in the local variable &lt;code&gt;user&lt;/code&gt;. You can then bind the local &lt;code&gt;user&lt;/code&gt; repeatedly.</source>
          <target state="translated">В этом коде используется только один &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; , поэтому создается только одна подписка. Условный оператор сохраняет результат &lt;code&gt;userStream|&lt;a href=&quot;asyncpipe&quot;&gt;async&lt;/a&gt;&lt;/code&gt; в локальной переменной &lt;code&gt;user&lt;/code&gt; . Затем вы можете повторно привязать локального &lt;code&gt;user&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="077f99384ba94951a54310fe9d28e905bc2e0a9b" translate="yes" xml:space="preserve">
          <source>This code uses only one &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt;, so only one subscription is created. The conditional statement stores the result of &lt;code&gt;userStream|async&lt;/code&gt; in the local variable &lt;code&gt;user&lt;/code&gt;. You can then bind the local &lt;code&gt;user&lt;/code&gt; repeatedly.</source>
          <target state="translated">Этот код использует только один &lt;code&gt;&lt;a href=&quot;asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; , поэтому создается только одна подписка. Условный оператор сохраняет результат &lt;code&gt;userStream|async&lt;/code&gt; в локальной переменной &lt;code&gt;user&lt;/code&gt; . Затем вы можете повторно связать локального &lt;code&gt;user&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13648ab24db66abd7c6828bea92fd0f6dff2d7ba" translate="yes" xml:space="preserve">
          <source>This command creates the following &lt;code&gt;UserService&lt;/code&gt; skeleton:</source>
          <target state="translated">Эта команда создает следующий скелет &lt;code&gt;UserService&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="53ca835c29b278849f8cc8fdbc5ec1ec43128a05" translate="yes" xml:space="preserve">
          <source>This command updates both &lt;code&gt;@angular/material&lt;/code&gt; and its dependency &lt;code&gt;@angular/cdk&lt;/code&gt; in your workspace's &lt;code&gt;package.json&lt;/code&gt;. If either package contains an update schematic that covers migration from the existing version to a new version, the command runs that schematic on your workspace.</source>
          <target state="translated">Эта команда обновляет &lt;code&gt;@angular/material&lt;/code&gt; и его зависимость &lt;code&gt;@angular/cdk&lt;/code&gt; в &lt;code&gt;package.json&lt;/code&gt; вашего рабочего пространства . Если какой-либо из пакетов содержит схему обновления, охватывающую переход с существующей версии на новую версию, команда запускает эту схему в вашей рабочей области.</target>
        </trans-unit>
        <trans-unit id="d476387d6c2e84ce2ff55faed0c0f68d60302141" translate="yes" xml:space="preserve">
          <source>This command updates your project's &lt;code&gt;package.json&lt;/code&gt; and &lt;code&gt;polyfills.ts&lt;/code&gt; files to import the &lt;code&gt;@angular/localize&lt;/code&gt; package.</source>
          <target state="translated">Эта команда обновляет файлы вашего проекта &lt;code&gt;package.json&lt;/code&gt; и &lt;code&gt;polyfills.ts&lt;/code&gt; , чтобы импортировать пакет &lt;code&gt;@angular/localize&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f08f688b42cedaf1c2687380db97e840fa25cee" translate="yes" xml:space="preserve">
          <source>This completes the cross validation example. We managed to:</source>
          <target state="translated">На этом мы завершаем пример перекрестной проверки.Нам удалось:</target>
        </trans-unit>
        <trans-unit id="5c82d5954347561c2d21641e18971743651dd806" translate="yes" xml:space="preserve">
          <source>This component and its tree of child components receive &lt;code&gt;DateLoggerService&lt;/code&gt; instance. Components outside the tree continue to receive the original &lt;code&gt;LoggerService&lt;/code&gt; instance.</source>
          <target state="translated">Этот компонент и его дерево дочерних компонентов получают экземпляр &lt;code&gt;DateLoggerService&lt;/code&gt; . Компоненты вне дерева продолжают получать исходный экземпляр &lt;code&gt;LoggerService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="597e9233caedd83ac990f5386a4ce276f54df4c0" translate="yes" xml:space="preserve">
          <source>This component class has no dependencies. To test a service with no dependencies, you create it with &lt;code&gt;new&lt;/code&gt;, poke at its API, and assert expectations on its public state. Do the same with the component class.</source>
          <target state="translated">Этот класс компонентов не имеет зависимостей. Чтобы протестировать сервис без каких-либо зависимостей, вы создаете его с &lt;code&gt;new&lt;/code&gt; , ткните на его API и утверждаете ожидания в отношении его открытого состояния. Сделайте то же самое с классом компонента.</target>
        </trans-unit>
        <trans-unit id="c6c28a7b4cc8e7fda5755e8855df5f2f683d4200" translate="yes" xml:space="preserve">
          <source>This component class has no dependencies. To test these types of classes, follow the same steps as you would for a service that has no dependencies:</source>
          <target state="translated">Этот класс компонентов не имеет зависимостей.Чтобы протестировать эти типы классов,выполните те же действия,что и для службы,не имеющей зависимостей:</target>
        </trans-unit>
        <trans-unit id="065a8c2a12fca59785e66b9536ad7a4d7503a70d" translate="yes" xml:space="preserve">
          <source>This component instance.</source>
          <target state="translated">Этот компонентный экземпляр.</target>
        </trans-unit>
        <trans-unit id="a07464de42a69a73871d1c32b4cddf78f4a39cff" translate="yes" xml:space="preserve">
          <source>This component's &lt;code&gt;doSomething()&lt;/code&gt; method update's the component's data-bound &lt;code&gt;comment&lt;/code&gt; property immediately. There's no &lt;a href=&quot;lifecycle-hooks#wait-a-tick&quot;&gt;need to wait&lt;/a&gt;.</source>
          <target state="translated">Этот компонент в &lt;code&gt;doSomething()&lt;/code&gt; обновление метода данных связали компонента &lt;code&gt;comment&lt;/code&gt; свойство немедленно. Там нет &lt;a href=&quot;lifecycle-hooks#wait-a-tick&quot;&gt;необходимости ждать&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d24274c6577dbd524765b9a3853f26d6cf76951e" translate="yes" xml:space="preserve">
          <source>This component's &lt;code&gt;doSomething()&lt;/code&gt; method updates the component's data-bound &lt;code&gt;comment&lt;/code&gt; property immediately. There's no need to &lt;a href=&quot;lifecycle-hooks#wait-a-tick&quot;&gt;delay the update to ensure proper rendering&lt;/a&gt;.</source>
          <target state="translated">Метод &lt;code&gt;doSomething()&lt;/code&gt; этого компонента немедленно обновляет свойство &lt;code&gt;comment&lt;/code&gt; привязкой к данным . Нет необходимости &lt;a href=&quot;lifecycle-hooks#wait-a-tick&quot;&gt;откладывать обновление, чтобы обеспечить правильный рендеринг&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8831291497a6d0587b26b1c8ca5ca8dbd14f9441" translate="yes" xml:space="preserve">
          <source>This component's injector lookup tokens. Includes the component itself plus the tokens that the component lists in its &lt;code&gt;providers&lt;/code&gt; metadata.</source>
          <target state="translated">Токены поиска инжектора этого компонента. Включает сам компонент плюс токены, которые компонент перечисляет в метаданных своих &lt;code&gt;providers&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b0506327a430462426c6e68b6e09fd639e04c8d" translate="yes" xml:space="preserve">
          <source>This concludes the &quot;Tour of Heroes&quot; tutorial. You're ready to learn more about Angular development in the fundamentals section, starting with the &lt;a href=&quot;../guide/architecture&quot;&gt;Architecture&lt;/a&gt; guide.</source>
          <target state="translated">На этом учебник &amp;laquo;Тур героев&amp;raquo; завершен. Вы готовы узнать больше о разработке Angular в разделе основы, начиная с руководства по &lt;a href=&quot;../guide/architecture&quot;&gt;архитектуре&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e37d0d91df8ad47c0dbbb5e123254e61fce1c600" translate="yes" xml:space="preserve">
          <source>This configuration caches &lt;code&gt;node_modules/&lt;/code&gt; and uses &lt;a href=&quot;https://docs.npmjs.com/cli/run-script&quot;&gt;&lt;code&gt;npm run&lt;/code&gt;&lt;/a&gt; to run CLI commands, because &lt;code&gt;@angular/cli&lt;/code&gt; is not installed globally. The double dash (&lt;code&gt;--&lt;/code&gt;) is needed to pass arguments into the &lt;code&gt;npm&lt;/code&gt; script.</source>
          <target state="translated">Эта конфигурация кэширует &lt;code&gt;node_modules/&lt;/code&gt; и использует &lt;a href=&quot;https://docs.npmjs.com/cli/run-script&quot;&gt; &lt;code&gt;npm run&lt;/code&gt; &lt;/a&gt; для запуска команд CLI, поскольку &lt;code&gt;@angular/cli&lt;/code&gt; не устанавливается глобально. Двойная черта ( &lt;code&gt;--&lt;/code&gt; ) необходима для передачи аргументов в скрипт &lt;code&gt;npm&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b488b5be2952d75c23fd56a333c827a2b7d402f" translate="yes" xml:space="preserve">
          <source>This configures the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; preloader to immediately load all lazy loaded routes (routes with a &lt;code&gt;loadChildren&lt;/code&gt; property).</source>
          <target state="translated">Это настраивает предварительный &lt;code&gt;loadChildren&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; для немедленной загрузки всех ленивых загружаемых маршрутов (маршрутов со свойством loadChildren ).</target>
        </trans-unit>
        <trans-unit id="40d0adebce1666f54fd687822290b1370ce51244" translate="yes" xml:space="preserve">
          <source>This cookbook contains recipes for common component communication scenarios in which two or more components share information.</source>
          <target state="translated">Эта книга рецептов содержит рецепты сценариев взаимодействия общих компонентов,в которых два или более компонентов обмениваются информацией.</target>
        </trans-unit>
        <trans-unit id="a322972c7d99a3ec23cfc786253fdee6e876e02e" translate="yes" xml:space="preserve">
          <source>This cookbook describes the steps required to set up and use Angular app files in Visual Studio 2015 within an ASP.NET 4.x project.</source>
          <target state="translated">Эта книга рецептов описывает шаги,необходимые для настройки и использования файлов приложений Angular в Visual Studio 2015 в рамках проекта ASP.NET 4.x.</target>
        </trans-unit>
        <trans-unit id="81fab89603358b3015fbab03f643f5619e9e7e16" translate="yes" xml:space="preserve">
          <source>This cookbook shows you how to use &lt;code&gt;&lt;a href=&quot;../api/core/componentfactoryresolver&quot;&gt;ComponentFactoryResolver&lt;/a&gt;&lt;/code&gt; to add components dynamically.</source>
          <target state="translated">В этой кулинарной книге показано, как использовать &lt;code&gt;&lt;a href=&quot;../api/core/componentfactoryresolver&quot;&gt;ComponentFactoryResolver&lt;/a&gt;&lt;/code&gt; для динамического добавления компонентов.</target>
        </trans-unit>
        <trans-unit id="e813c2193e41174a6e571245c4cd3c17e5e9558e" translate="yes" xml:space="preserve">
          <source>This cookbook shows you how to use &lt;code&gt;formGroup&lt;/code&gt; to dynamically render a simple form with different control types and validation. It's a primitive start. It might evolve to support a much richer variety of questions, more graceful rendering, and superior user experience. All such greatness has humble beginnings.</source>
          <target state="translated">В этой кулинарной книге показано, как использовать &lt;code&gt;formGroup&lt;/code&gt; для динамического рендеринга простой формы с различными типами элементов управления и проверки. Это примитивное начало. Он может развиваться, чтобы поддерживать гораздо более широкий спектр вопросов, более изящный рендеринг и превосходный пользовательский опыт. Все такое величие имеет скромное начало.</target>
        </trans-unit>
        <trans-unit id="d822107036c9c9bdc81f05621421ed35206b48fe" translate="yes" xml:space="preserve">
          <source>This cookbook uses &lt;a href=&quot;reactive-forms&quot;&gt;reactive forms&lt;/a&gt;.</source>
          <target state="translated">Эта кулинарная книга использует &lt;a href=&quot;reactive-forms&quot;&gt;реактивные формы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d23601ec63a90736809116d022f4fadccabb0fbd" translate="yes" xml:space="preserve">
          <source>This cookbook uses the &lt;code&gt;Empty&lt;/code&gt; template with no added folders, no authentication, and no hosting. Pick the template and options appropriate for your project.</source>
          <target state="translated">Эта кулинарная книга использует &lt;code&gt;Empty&lt;/code&gt; шаблон без добавленных папок, без аутентификации и без хостинга. Выберите шаблон и параметры, подходящие для вашего проекта.</target>
        </trans-unit>
        <trans-unit id="b56c91898d64379544ac2ea2325b00bc842db730" translate="yes" xml:space="preserve">
          <source>This creates a &lt;code&gt;customers&lt;/code&gt; folder having the new lazy-loadable feature module &lt;code&gt;CustomersModule&lt;/code&gt; defined in the &lt;code&gt;customers.module.ts&lt;/code&gt; file and the routing module &lt;code&gt;CustomersRoutingModule&lt;/code&gt; defined in the &lt;code&gt;customers-routing.module.ts&lt;/code&gt; file. The command automatically declares the &lt;code&gt;CustomersComponent&lt;/code&gt; and imports &lt;code&gt;CustomersRoutingModule&lt;/code&gt; inside the new feature module.</source>
          <target state="translated">При этом создается папка &lt;code&gt;customers&lt;/code&gt; содержащая новый функциональный модуль с &lt;code&gt;customers-routing.module.ts&lt;/code&gt; &lt;code&gt;CustomersModule&lt;/code&gt; , определенный в файле &lt;code&gt;customers.module.ts&lt;/code&gt; , и модуль маршрутизации &lt;code&gt;CustomersRoutingModule&lt;/code&gt; , определенный в файле customers-routing.module.ts . Команда автоматически объявляет &lt;code&gt;CustomersComponent&lt;/code&gt; и импортирует &lt;code&gt;CustomersRoutingModule&lt;/code&gt; внутри нового функционального модуля.</target>
        </trans-unit>
        <trans-unit id="a651647f94c034ce66b15f4ab627c4ac2e28535c" translate="yes" xml:space="preserve">
          <source>This creates a &lt;code&gt;customers&lt;/code&gt; folder with the new lazy-loadable module &lt;code&gt;CustomersModule&lt;/code&gt; defined in the file &lt;code&gt;customers.module.ts&lt;/code&gt;. The command automatically adds the &lt;code&gt;CustomerComponent&lt;/code&gt; to the new feature module.</source>
          <target state="translated">Это создает &lt;code&gt;customers&lt;/code&gt; папку с новым ленивым-загружаемым модулем &lt;code&gt;CustomersModule&lt;/code&gt; , определенным в файл &lt;code&gt;customers.module.ts&lt;/code&gt; . Команда автоматически добавляет &lt;code&gt;CustomerComponent&lt;/code&gt; в новый функциональный модуль.</target>
        </trans-unit>
        <trans-unit id="14b67ee4f93cd53fc641ba3366b0aa1e81714ab4" translate="yes" xml:space="preserve">
          <source>This creates a new folder called &lt;code&gt;orders&lt;/code&gt; containing an &lt;code&gt;OrdersModule&lt;/code&gt; and &lt;code&gt;OrdersRoutingModule&lt;/code&gt;, along with the new &lt;code&gt;OrderComponent&lt;/code&gt; source files. The &lt;code&gt;order-list&lt;/code&gt; route is added to the &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array in &lt;code&gt;app-routing.module.ts&lt;/code&gt;, using the lazy-loading syntax.</source>
          <target state="translated">Это создает новую папку с именем &lt;code&gt;orders&lt;/code&gt; , содержащую &lt;code&gt;OrdersModule&lt;/code&gt; и &lt;code&gt;OrdersRoutingModule&lt;/code&gt; вместе с новыми исходными файлами &lt;code&gt;OrderComponent&lt;/code&gt; . &lt;code&gt;order-list&lt;/code&gt; маршрут добавляется в &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; массив в &lt;code&gt;app-routing.module.ts&lt;/code&gt; , используя синтаксис отложенной загрузки.</target>
        </trans-unit>
        <trans-unit id="12212d34d2986bacb58c68284883a32c3bce8fdb" translate="yes" xml:space="preserve">
          <source>This creates a new folder called &lt;code&gt;orders&lt;/code&gt; containing the &lt;code&gt;OrdersModule&lt;/code&gt; and &lt;code&gt;OrdersRoutingModule&lt;/code&gt;, along with the new &lt;code&gt;OrdersComponent&lt;/code&gt; source files. The &lt;code&gt;orders&lt;/code&gt; route, specified with the &lt;code&gt;--route&lt;/code&gt; option, is added to the &lt;code&gt;routes&lt;/code&gt; array inside the &lt;code&gt;app-routing.module.ts&lt;/code&gt; file, using the lazy-loading syntax.</source>
          <target state="translated">Это создает новую папку с именем &lt;code&gt;orders&lt;/code&gt; , содержащую &lt;code&gt;OrdersModule&lt;/code&gt; и &lt;code&gt;OrdersRoutingModule&lt;/code&gt; , а также новые исходные файлы &lt;code&gt;OrdersComponent&lt;/code&gt; . &lt;code&gt;orders&lt;/code&gt; маршрут, указанный с &lt;code&gt;--route&lt;/code&gt; вариант, добавляется к &lt;code&gt;routes&lt;/code&gt; массива внутри &lt;code&gt;app-routing.module.ts&lt;/code&gt; файл, используя синтаксис отложенной загрузки.</target>
        </trans-unit>
        <trans-unit id="a0adbda48788d27b45342d5c21c7e2786033726c" translate="yes" xml:space="preserve">
          <source>This creates a separate file named &lt;code&gt;my-module-routing.module.ts&lt;/code&gt; to store the NgModule's routes. The file includes an empty &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; object that you can fill with routes to different components and NgModules.</source>
          <target state="translated">Это создает отдельный файл с именем &lt;code&gt;my-module-routing.module.ts&lt;/code&gt; для хранения маршрутов NgModule. Файл содержит пустой объект &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; , который вы можете заполнить маршрутами к различным компонентам и NgModules.</target>
        </trans-unit>
        <trans-unit id="1e0fcef7f7df8d4e453466c52facdaf940fe0d0a" translate="yes" xml:space="preserve">
          <source>This creates an app called &lt;code&gt;customer-app&lt;/code&gt; and the &lt;code&gt;--routing&lt;/code&gt; flag generates a file called &lt;code&gt;app-routing.module.ts&lt;/code&gt;, which is one of the files you need for setting up lazy loading for your feature module. Navigate into the project by issuing the command &lt;code&gt;cd customer-app&lt;/code&gt;.</source>
          <target state="translated">Это создает приложение под названием &lt;code&gt;customer-app&lt;/code&gt; , а флаг &lt;code&gt;--routing&lt;/code&gt; создает файл с именем &lt;code&gt;app-routing.module.ts&lt;/code&gt; , который является одним из файлов, необходимых для настройки отложенной загрузки вашего функционального модуля. Перейдите в проект, введя команду &lt;code&gt;cd customer-app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0198faa84961169c4d04809b0185acf9e3ac22b4" translate="yes" xml:space="preserve">
          <source>This creates the &lt;code&gt;projects/my-lib&lt;/code&gt; folder in your workspace, which contains a component and a service inside an NgModule. The workspace configuration file, &lt;code&gt;angular.json&lt;/code&gt;, is updated with a project of type 'library'.</source>
          <target state="translated">Это создаст в вашем рабочем пространстве папку &lt;code&gt;projects/my-lib&lt;/code&gt; , которая содержит компонент и сервис внутри NgModule. Файл конфигурации рабочей области &lt;code&gt;angular.json&lt;/code&gt; обновляется проектом типа &amp;laquo;библиотека&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="742c3e2e58b8f0be6640dfb54f738b9a9e7625e7" translate="yes" xml:space="preserve">
          <source>This declares that the input property &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; directive should be treated as a guard to the use of its template, implying that the template will only be instantiated if the &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; input property is true.</source>
          <target state="translated">Это говорит о том , что входное свойство &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; директивы должны рассматриваться в качестве охраны к использованию его шаблона, подразумевая , что шаблон будет экземпляр только если &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; свойство ввода верно.</target>
        </trans-unit>
        <trans-unit id="048e83daee9abd14678f6339d9376992f4af52ee" translate="yes" xml:space="preserve">
          <source>This default behavior is suitable for a typical &quot;multi-repo&quot; development style where each application resides in its own workspace. Beginners and intermediate users are encouraged to use &lt;code&gt;ng new&lt;/code&gt; to create a separate workspace for each application.</source>
          <target state="translated">Такое поведение по умолчанию подходит для типичного стиля разработки с несколькими репо, где каждое приложение находится в своей собственной рабочей области. Начинающим и промежуточным пользователям рекомендуется использовать &lt;code&gt;ng new&lt;/code&gt; для создания отдельной рабочей области для каждого приложения.</target>
        </trans-unit>
        <trans-unit id="6587344c6ac0fb7a73ec81835299d2d7ce729572" translate="yes" xml:space="preserve">
          <source>This demo does neither. Instead, it asks the user to make that choice explicitly in a confirmation dialog box that &lt;em&gt;waits asynchronously for the user's answer&lt;/em&gt;.</source>
          <target state="translated">Эта демонстрация не делает ни того, ни другого. Вместо этого он просит пользователя сделать этот выбор явно в диалоговом окне подтверждения, которое &lt;em&gt;асинхронно ожидает ответа пользователя&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="87db080ed00574e5e5d7d6687a8530849c3aceb8" translate="yes" xml:space="preserve">
          <source>This demo uses dummy data for &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;powers&lt;/code&gt;. In a real app, you would inject a data service to get and save real data, or expose these properties as inputs and outputs.</source>
          <target state="translated">Эта демонстрация использует фиктивные данные для &lt;code&gt;model&lt;/code&gt; и &lt;code&gt;powers&lt;/code&gt; . В реальном приложении вы должны внедрить службу данных для получения и сохранения реальных данных или предоставить эти свойства в качестве входных и выходных данных.</target>
        </trans-unit>
        <trans-unit id="6b5876f473d01141acbb800a8ab479df9db1837f" translate="yes" xml:space="preserve">
          <source>This directive accepts an existing &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance. It will then use this &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; instance to match any child &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instances to child &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">Эта директива принимает существующий экземпляр &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; . Затем он будет использовать этот экземпляр &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; для сопоставления любых дочерних &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; с дочерними &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formgroupname&quot;&gt;FormGroupName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;formarrayname&quot;&gt;FormArrayName&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7989fce38212429c7062b9c5da6235e1e43e7a8" translate="yes" xml:space="preserve">
          <source>This directive can only be used as a child of &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; (within &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags).</source>
          <target state="translated">Эта директива может использоваться только как дочерний &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; (внутри тегов &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="251b666c976f4261c91fe4beed08cf42cce8548f" translate="yes" xml:space="preserve">
          <source>This directive can only be used with a parent &lt;code&gt;&lt;a href=&quot;formgroupdirective&quot;&gt;FormGroupDirective&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Эта директива может использоваться только с родительской &lt;code&gt;&lt;a href=&quot;formgroupdirective&quot;&gt;FormGroupDirective&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e18d93c8deadcb10dbc3f3516c1984ce080db614" translate="yes" xml:space="preserve">
          <source>This directive is designed to be used with a parent &lt;code&gt;&lt;a href=&quot;formgroupdirective&quot;&gt;FormGroupDirective&lt;/a&gt;&lt;/code&gt; (selector: &lt;code&gt;[formGroup]&lt;/code&gt;).</source>
          <target state="translated">Эта директива предназначена для использования с родительским &lt;code&gt;&lt;a href=&quot;formgroupdirective&quot;&gt;FormGroupDirective&lt;/a&gt;&lt;/code&gt; (селектор: &lt;code&gt;[formGroup]&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8ac905b9010d53abe6967453b6081cf348d35f38" translate="yes" xml:space="preserve">
          <source>This directive is solely used to display warnings when the deprecated &lt;code&gt;&lt;a href=&quot;forms/ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; selector is used.</source>
          <target state="translated">Эта директива используется исключительно для отображения предупреждений, когда используется устаревший селектор &lt;code&gt;&lt;a href=&quot;forms/ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b316720613e231db957c48b5c531a72244e235ef" translate="yes" xml:space="preserve">
          <source>This directive is solely used to display warnings when the deprecated &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; selector is used.</source>
          <target state="translated">Эта директива используется исключительно для отображения предупреждений, когда используется устаревший селектор &lt;code&gt;&lt;a href=&quot;ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cf3a222ca96206b5b9edc9d51a79dbc263b73654" translate="yes" xml:space="preserve">
          <source>This directive is used by itself or as part of a larger form. Use the &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; selector to activate it.</source>
          <target state="translated">Эта директива используется сама по себе или как часть более крупной формы. Используйте селектор &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; , чтобы активировать его.</target>
        </trans-unit>
        <trans-unit id="079bfc81b016d5fdb9440e147c8f59ceacfd53ed" translate="yes" xml:space="preserve">
          <source>This directive lets you add a CSS class to an element when the link's route becomes active.</source>
          <target state="translated">Эта директива позволяет добавлять CSS класс к элементу,когда маршрут ссылки становится активным.</target>
        </trans-unit>
        <trans-unit id="75bdf4a08a98952e88ab0d9d8d3f69ffb18f7db5" translate="yes" xml:space="preserve">
          <source>This document contains information and resources to help you keep your Angular apps and libraries up-to-date.</source>
          <target state="translated">Этот документ содержит информацию и ресурсы,которые помогут вам поддерживать ваши приложения и библиотеки Angular в актуальном состоянии.</target>
        </trans-unit>
        <trans-unit id="5c3c465a1a031a3ba31db55cb2026597de7378a1" translate="yes" xml:space="preserve">
          <source>This document contains the practices that we follow to provide you with a leading-edge app development platform, balanced with stability. We strive to ensure that future changes are always introduced in a predictable way. We want everyone who depends on Angular to know when and how new features are added, and to be well-prepared when obsolete ones are removed.</source>
          <target state="translated">Этот документ содержит практику,которой мы следуем,чтобы предоставить вам передовую платформу для разработки приложений,сбалансированную со стабильностью.Мы стремимся к тому,чтобы будущие изменения всегда вносились предсказуемым образом.Мы хотим,чтобы каждый,кто зависит от Angular,знал,когда и как добавляются новые функции,и был хорошо подготовлен,когда удаляются устаревшие.</target>
        </trans-unit>
        <trans-unit id="5bc557b45ba44abe0921a0e64654f12154157a7c" translate="yes" xml:space="preserve">
          <source>This document explains how CLI builders integrate with the workspace configuration file, and shows how you can create your own builder.</source>
          <target state="translated">Этот документ объясняет,как сборщики CLI интегрируются с конфигурационным файлом рабочего пространства,и показывает,как можно создать своего собственного сборщика.</target>
        </trans-unit>
        <trans-unit id="a18d52460187370aee9da7ba825b392cfeb2488a" translate="yes" xml:space="preserve">
          <source>This document explains how to enable Angular service worker support in projects that you created with the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;. It then uses a simple example to show you a service worker in action, demonstrating loading and basic caching.</source>
          <target state="translated">В этом документе объясняется, как включить поддержку Angular Service Worker в проектах, которые вы создали с помощью &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; . Затем он использует простой пример, чтобы показать вам работника службы в действии, демонстрируя загрузку и базовое кэширование.</target>
        </trans-unit>
        <trans-unit id="91cf023004b2aaf04380d0ea7e79d9a637aeaec2" translate="yes" xml:space="preserve">
          <source>This document refers to a unit of translatable text as &quot;text,&quot; a &quot;message&quot;, or a &quot;text message.&quot;</source>
          <target state="translated">Данный документ обозначает единицу переводимого текста как &quot;текст&quot;,&quot;сообщение&quot; или &quot;текстовое сообщение&quot;.</target>
        </trans-unit>
        <trans-unit id="f12cdb59b126570dec1c8c00fc1543f0b13ae7d0" translate="yes" xml:space="preserve">
          <source>This does not use the deprecated jsdoc tag on purpose because it renders all overloads as deprecated in TSLint due to &lt;a href=&quot;https://github.com/palantir/tslint/issues/4522&quot;&gt;https://github.com/palantir/tslint/issues/4522&lt;/a&gt;.</source>
          <target state="translated">Это не использует устаревший тег jsdoc специально, поскольку он отображает все перегрузки как устаревшие в TSLint из-за &lt;a href=&quot;https://github.com/palantir/tslint/issues/4522&quot;&gt;https://github.com/palantir/tslint/issues/4522&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49942dcd9689b7ed449bd1f739e91d6c6991a659" translate="yes" xml:space="preserve">
          <source>This does the same things as the Circle CI configuration, except that Travis doesn't come with Chrome, so we use Chromium instead.</source>
          <target state="translated">Это делает те же вещи,что и настройка Circle CI,за исключением того,что Трэвис не поставляется с Chrome,поэтому мы используем Chromium вместо него.</target>
        </trans-unit>
        <trans-unit id="e20d0e4a3c8903623d5db93d1eaa42a7319f2bb4" translate="yes" xml:space="preserve">
          <source>This does the same things as the CircleCI configuration, except that Travis doesn't come with Chrome, so use Chromium instead.</source>
          <target state="translated">Это делает те же вещи,что и настройка CircleCI,за исключением того,что Трэвис не поставляется с Chrome,так что используйте Chromium вместо этого.</target>
        </trans-unit>
        <trans-unit id="7a173481108f8e08ee23eccdc0ba37f48670a382" translate="yes" xml:space="preserve">
          <source>This duration string specifies the network timeout. The network timeout is how long the Angular service worker will wait for the network to respond before using a cached response, if configured to do so. &lt;code&gt;timeout&lt;/code&gt; is a duration string, using the following unit suffixes:</source>
          <target state="translated">Эта строка длительности указывает время ожидания сети. Время ожидания сети - это время, в течение которого работник службы Angular будет ждать ответа от сети, прежде чем использовать кэшированный ответ, если он настроен для этого. &lt;code&gt;timeout&lt;/code&gt; - строка продолжительности, использующая следующие суффиксы единиц:</target>
        </trans-unit>
        <trans-unit id="148a52c96fd5321b2e9f47b1c411e3997ad1ee54" translate="yes" xml:space="preserve">
          <source>This ensures that the build and serve commands can find the configurations for specific build targets.</source>
          <target state="translated">Это гарантирует,что команды сборки и обслуживания смогут найти конфигурации для конкретных целей сборки.</target>
        </trans-unit>
        <trans-unit id="dd6ef74d3212dfa09ccacfec3ba04d981a0ae6bd" translate="yes" xml:space="preserve">
          <source>This error can occur if you use an expression in the &lt;code&gt;extends&lt;/code&gt; clause of a class.</source>
          <target state="translated">Эта ошибка может возникнуть, если вы используете выражение в предложении &lt;code&gt;extends&lt;/code&gt; класса.</target>
        </trans-unit>
        <trans-unit id="f96ad016e893a674d5f49749d37377695df58a8c" translate="yes" xml:space="preserve">
          <source>This error often means that you haven't declared the directive &quot;x&quot; or haven't imported the NgModule to which &quot;x&quot; belongs.</source>
          <target state="translated">Эта ошибка часто означает,что вы не объявили директиву &quot;x&quot; или не импортировали NgModule,к которому принадлежит &quot;x&quot;.</target>
        </trans-unit>
        <trans-unit id="ef4ec03d4ed605a8e9e66585cd5c2453ff07a4af" translate="yes" xml:space="preserve">
          <source>This example adds a few getter methods. In a reactive form, you can always access any form control through the &lt;code&gt;get&lt;/code&gt; method on its parent group, but sometimes it's useful to define getters as shorthands for the template.</source>
          <target state="translated">Этот пример добавляет несколько методов получения. В реактивной форме вы всегда можете получить доступ к любому элементу управления формы через метод &lt;code&gt;get&lt;/code&gt; в его родительской группе, но иногда полезно определить получатели в качестве сокращений для шаблона.</target>
        </trans-unit>
        <trans-unit id="835a254bafaad8e2e761a6f3738065e79183f666" translate="yes" xml:space="preserve">
          <source>This example adds a state transition from the &lt;code&gt;closed&lt;/code&gt; state to the &lt;code&gt;open&lt;/code&gt; state with a 0.5 second transition animation arc.</source>
          <target state="translated">В этом примере добавляется переход состояния из &lt;code&gt;closed&lt;/code&gt; состояния в &lt;code&gt;open&lt;/code&gt; с 0,5-секундной дугой анимации перехода.</target>
        </trans-unit>
        <trans-unit id="e27903790bcd6cf8a4d227d598fb3d9c51e485a2" translate="yes" xml:space="preserve">
          <source>This example also adds a few getter methods. In a reactive form, you can always access any form control through the &lt;code&gt;get&lt;/code&gt; method on its parent group, but sometimes it's useful to define getters as shorthand for the template.</source>
          <target state="translated">В этом примере также добавлено несколько методов получения. В реактивной форме вы всегда можете получить доступ к любому элементу управления формой с помощью метода &lt;code&gt;get&lt;/code&gt; в его родительской группе, но иногда полезно определить геттеры как сокращение для шаблона.</target>
        </trans-unit>
        <trans-unit id="47a1afa39668210136eb0481e3dfa7dda063e91e" translate="yes" xml:space="preserve">
          <source>This example app asks the user to be explicit with a confirmation dialog box that waits asynchronously for the user's response.</source>
          <target state="translated">В этом примере приложение запрашивает у пользователя явное диалоговое окно подтверждения,которое ожидает асинхронно ответа пользователя.</target>
        </trans-unit>
        <trans-unit id="3871ea91cb489329270131828414d4e4a419b07f" translate="yes" xml:space="preserve">
          <source>This example applies the &lt;code&gt;SpyDirective&lt;/code&gt; from the previous example to the &lt;code&gt;CounterComponent&lt;/code&gt; log, in order to watch the creation and destruction of log entries.</source>
          <target state="translated">Этот пример относится к &lt;code&gt;SpyDirective&lt;/code&gt; из предыдущего примера в &lt;code&gt;CounterComponent&lt;/code&gt; журнал для того, чтобы наблюдать за создание и уничтожение записей.</target>
        </trans-unit>
        <trans-unit id="91b20a46620fed8511ccd3504ac47cc1854c74e2" translate="yes" xml:space="preserve">
          <source>This example applies the &lt;code&gt;SpyDirective&lt;/code&gt; to a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; in an &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;&lt;em&gt;hero&lt;/em&gt; repeater managed by the parent &lt;code&gt;SpyComponent&lt;/code&gt;.</source>
          <target state="translated">В этом примере &lt;code&gt;SpyDirective&lt;/code&gt; применяется к &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; &lt;em&gt; героя &lt;/em&gt;ngFor, управляемом родительским &lt;code&gt;SpyComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3dfd88d242d31d74d24a1d273231ff4e8624d83a" translate="yes" xml:space="preserve">
          <source>This example binds a &lt;code&gt;Promise&lt;/code&gt; to the view. Clicking the &lt;code&gt;&lt;a href=&quot;../router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; button resolves the promise.</source>
          <target state="translated">Этот пример связывает &lt;code&gt;Promise&lt;/code&gt; с представлением. Нажатие кнопки &amp;laquo; &lt;code&gt;&lt;a href=&quot;../router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; разрешает обещание.</target>
        </trans-unit>
        <trans-unit id="76fea2ff263dbc0e5640bda0886d27fd33ac4eb8" translate="yes" xml:space="preserve">
          <source>This example completely replaces the component's &lt;code&gt;providers&lt;/code&gt; array with a new array containing a &lt;code&gt;HeroDetailServiceSpy&lt;/code&gt;.</source>
          <target state="translated">Этот пример полностью заменяет массив &lt;code&gt;providers&lt;/code&gt; компонента новым массивом, содержащим &lt;code&gt;HeroDetailServiceSpy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b38e94209799b7cb2ad45b15b4c0f49aebeeaf6c" translate="yes" xml:space="preserve">
          <source>This example features an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; where a user can enter a value and click a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; that raises an event. The &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; then relays the data to the parent component.</source>
          <target state="translated">В этом примере показан элемент &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; ,в котором пользователь может ввести значение и нажать &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; которая вызывает событие. Затем &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; передает данные в родительский компонент.</target>
        </trans-unit>
        <trans-unit id="e3900b3c5f734c8b42b0423653ffc07e9a8c5717" translate="yes" xml:space="preserve">
          <source>This example filters the &lt;code&gt;title&lt;/code&gt; property to uppercase.</source>
          <target state="translated">В этом примере фильтруется свойство &lt;code&gt;title&lt;/code&gt; в верхнем регистре.</target>
        </trans-unit>
        <trans-unit id="175ec0e7ef7252b24060674256a084243d66f30a" translate="yes" xml:space="preserve">
          <source>This example from the &lt;code&gt;HeroListComponent&lt;/code&gt; template uses three of these forms.</source>
          <target state="translated">Этот пример из шаблона &lt;code&gt;HeroListComponent&lt;/code&gt; использует три из этих форм.</target>
        </trans-unit>
        <trans-unit id="c018c65b2f71e95da11870a345d0bd8ce8ee7841" translate="yes" xml:space="preserve">
          <source>This example has a special trigger for the enter and leave animation called &lt;code&gt;myInsertRemoveTrigger&lt;/code&gt;. The HTML template contains the following code.</source>
          <target state="translated">В этом примере есть специальный триггер для анимации входа и выхода, называемый &lt;code&gt;myInsertRemoveTrigger&lt;/code&gt; . Шаблон HTML содержит следующий код.</target>
        </trans-unit>
        <trans-unit id="c383e4bfd674f8c3ca365e3f2524cda5c7864ed8" translate="yes" xml:space="preserve">
          <source>This example has a temporary diagnostic interpolation after each input tag, &lt;code&gt;{{model.name}}&lt;/code&gt;, to show the current data value of the corresponding property. The note reminds you to remove the diagnostic lines when you have finished observing the two-way data binding at work.</source>
          <target state="translated">В этом примере есть временная диагностическая интерполяция после каждого входного тега &lt;code&gt;{{model.name}}&lt;/code&gt; , чтобы показать текущее значение данных соответствующего свойства. Примечание напоминает вам удалить диагностические строки, когда вы закончите наблюдать за работой двусторонней привязки данных.</target>
        </trans-unit>
        <trans-unit id="48f92247fb3553c5917ea007bd2c3e17c2e4d8ad" translate="yes" xml:space="preserve">
          <source>This example is so simple that it is tempting to write the &lt;code&gt;Http.get()&lt;/code&gt; inside the component itself and skip the service. In practice, however, data access rarely stays this simple. You typically need to post-process the data, add error handling, and maybe some retry logic to cope with intermittent connectivity.</source>
          <target state="translated">Этот пример настолько прост, что заманчиво написать &lt;code&gt;Http.get()&lt;/code&gt; внутри самого компонента и пропустить сервис. Однако на практике доступ к данным редко остается таким простым. Обычно вам требуется пост-обработка данных, добавление обработки ошибок и, возможно, некоторая логика повторения, чтобы справиться с прерывистой связью.</target>
        </trans-unit>
        <trans-unit id="7738f3bfb08d1f44b77915ef508354d761db0235" translate="yes" xml:space="preserve">
          <source>This example provides a state transition from &lt;code&gt;open&lt;/code&gt; to &lt;code&gt;closed&lt;/code&gt; with a one second transition between states.</source>
          <target state="translated">Этот пример обеспечивает переход состояния из &lt;code&gt;open&lt;/code&gt; в &lt;code&gt;closed&lt;/code&gt; с переходом между состояниями в одну секунду.</target>
        </trans-unit>
        <trans-unit id="9e2fbcbc42a2d75d74a3222a5d342beb0a9c1ce0" translate="yes" xml:space="preserve">
          <source>This example recreates the heroes feature in the &quot;Services&quot; episode of the &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;Tour of Heroes tutorial&lt;/a&gt;, and you'll be copying much of the code from the .</source>
          <target state="translated">В этом примере воссоздается функция &amp;laquo; &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;Герои&lt;/a&gt; &amp;raquo; в эпизоде ​​&amp;laquo;Службы&amp;raquo; учебного пособия &amp;laquo; Тур героев&amp;raquo; , и большая часть кода будет скопирована из.</target>
        </trans-unit>
        <trans-unit id="373455b46f233c304aab2070dd6730bb07e917cc" translate="yes" xml:space="preserve">
          <source>This example shows some of the most useful &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; configuration options:</source>
          <target state="translated">В этом примере показаны некоторые из наиболее полезных параметров конфигурации &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9700001752d1ddad2bef57a54fdbab31b4d92d72" translate="yes" xml:space="preserve">
          <source>This example wires parent buttons to the child's &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; and uses interpolation to display the child's &lt;code&gt;seconds&lt;/code&gt; property.</source>
          <target state="translated">В этом примере родительские кнопки связываются со &lt;code&gt;start&lt;/code&gt; и &lt;code&gt;stop&lt;/code&gt; дочернего элемента и используют интерполяцию для отображения свойства &lt;code&gt;seconds&lt;/code&gt; дочернего элемента .</target>
        </trans-unit>
        <trans-unit id="7de281f2ca63df5ae46cabdcc5a3f0a47f5d8df0" translate="yes" xml:space="preserve">
          <source>This example&amp;mdash;which displays &lt;strong&gt;&lt;samp&gt;FRIDAY, APRIL 15, 1988&lt;/samp&gt;&lt;/strong&gt;&amp;mdash;chains the same pipes as above, but passes in a parameter to &lt;code&gt;date&lt;/code&gt; as well.</source>
          <target state="translated">Этот пример, который отображает &lt;strong&gt;&lt;samp&gt;Пятница, 15 апреля 1988 г.&lt;/samp&gt;&lt;/strong&gt;- связывает те же каналы, что и выше, но передает и параметр на &lt;code&gt;date&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4820eaf9e83b02c2a47b5745671a9d1f9f915362" translate="yes" xml:space="preserve">
          <source>This examples show how an Object or a Map can be iterated by ngFor with the use of this keyvalue pipe.</source>
          <target state="translated">Эти примеры показывают,как объект или карта может быть итерацией ngFor с использованием этой трубки ключевых значений.</target>
        </trans-unit>
        <trans-unit id="d18607ddf27a24b42e28d94bce4f221af52bab0a" translate="yes" xml:space="preserve">
          <source>This exercise shows how you can respond to a native HTML button-click event by adding to the model data. To let form users add a new hero, you will add a &lt;strong&gt;New Hero&lt;/strong&gt; button that responds to a click event.</source>
          <target state="translated">В этом упражнении показано, как можно отреагировать на собственное событие нажатия кнопки HTML путем добавления данных в модель. Чтобы позволить пользователям формы добавлять нового героя, вы добавите кнопку &amp;laquo; &lt;strong&gt;Новый герой&amp;raquo;&lt;/strong&gt; , которая реагирует на событие щелчка.</target>
        </trans-unit>
        <trans-unit id="d13f81c361ce43971a48c424f3851c8dbc4f0ebf" translate="yes" xml:space="preserve">
          <source>This exists to support future Ivy work and has no effect currently.</source>
          <target state="translated">Это существует для поддержки будущей работы с плющом и не дает никакого эффекта в настоящее время.</target>
        </trans-unit>
        <trans-unit id="29df732f2a0c84758770605719258bd4b737a4b9" translate="yes" xml:space="preserve">
          <source>This field contains an array of URLs and &lt;a href=&quot;service-worker-config#glob-patterns&quot;&gt;glob-like&lt;/a&gt; URL patterns that will be matched at runtime. It can contain both negative patterns (i.e. patterns starting with &lt;code&gt;!&lt;/code&gt;) and non-negative patterns and URLs.</source>
          <target state="translated">Это поле содержит массив URL-адресов и &lt;a href=&quot;service-worker-config#glob-patterns&quot;&gt;глобальные&lt;/a&gt; шаблоны URL - адресов, которые будут сопоставляться во время выполнения. Он может содержать как негативные шаблоны (т. Е. Шаблоны, начинающиеся с &lt;code&gt;!&lt;/code&gt; ), Так и неотрицательные шаблоны и URL-адреса.</target>
        </trans-unit>
        <trans-unit id="8a65db321c5e9974fc66318e4ba5bcd4b192ba5d" translate="yes" xml:space="preserve">
          <source>This field contains an array of asset groups, each of which defines a set of asset resources and the policy by which they are cached.</source>
          <target state="translated">Это поле содержит массив групп активов,каждая из которых определяет набор ресурсов активов и политику,с помощью которой они кэшируются.</target>
        </trans-unit>
        <trans-unit id="1c59748df0f341098bafef8c91da8de48dc6bd24" translate="yes" xml:space="preserve">
          <source>This field contains an array of data groups, each of which defines a set of data resources and the policy by which they are cached.</source>
          <target state="translated">Это поле содержит массив групп данных,каждая из которых определяет набор ресурсов данных и политику,с помощью которой они кэшируются.</target>
        </trans-unit>
        <trans-unit id="db68317d18e90d33c9d724f39c1b4574e3e29e26" translate="yes" xml:space="preserve">
          <source>This field does not need to have a value. Its existence communicates to the Angular type checker that the &lt;code&gt;disabled&lt;/code&gt; input should be considered as accepting bindings that match the type &lt;code&gt;boolean|''&lt;/code&gt;. The suffix should be the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;&lt;em&gt;field&lt;/em&gt; name.</source>
          <target state="translated">Это поле не обязательно должно иметь значение. Его существование сообщает средству проверки типов Angular, что &lt;code&gt;disabled&lt;/code&gt; ввод должен рассматриваться как принимающий привязки, соответствующие типу &lt;code&gt;boolean|''&lt;/code&gt; . Суффикс должен быть именем &lt;em&gt;поля &lt;/em&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="39dca8bdfadccce3aa32a1f0f34acf9df4dfd38c" translate="yes" xml:space="preserve">
          <source>This file contains imports and functionality that is available to the entire app.</source>
          <target state="translated">Этот файл содержит импорт и функциональность,которая доступна всему приложению.</target>
        </trans-unit>
        <trans-unit id="c09c8b1c3afe0b2f3e211e35dda11d6b49d046a2" translate="yes" xml:space="preserve">
          <source>This file contains options and flags that are essential for Angular applications.</source>
          <target state="translated">Этот файл содержит опции и флаги,необходимые для Угловых приложений.</target>
        </trans-unit>
        <trans-unit id="7774dea1cbb9ba9a9affbe79a52ad87b124f3078" translate="yes" xml:space="preserve">
          <source>This file does the following:</source>
          <target state="translated">Этот файл делает следующее:</target>
        </trans-unit>
        <trans-unit id="8e6fad8835e771be15a7e60de8d9f839976d92ca" translate="yes" xml:space="preserve">
          <source>This file integrity is especially important when lazy loading modules. A JS bundle may reference many lazy chunks, and the filenames of the lazy chunks are unique to the particular build of the app. If a running app at version &lt;code&gt;X&lt;/code&gt; attempts to load a lazy chunk, but the server has updated to version &lt;code&gt;X + 1&lt;/code&gt; already, the lazy loading operation will fail.</source>
          <target state="translated">Эта целостность файла особенно важна при отложенной загрузке модулей. Пакет JS может ссылаться на многие ленивые чанки, а имена файлов ленивых чанков уникальны для конкретной сборки приложения. Если работающее приложение в версии &lt;code&gt;X&lt;/code&gt; пытается загрузить отложенный фрагмент, но сервер уже обновился до версии &lt;code&gt;X + 1&lt;/code&gt; , операция отложенной загрузки завершится неудачно.</target>
        </trans-unit>
        <trans-unit id="18dc9ff9208e9157f8adfe6cb8c2bceab30b16aa" translate="yes" xml:space="preserve">
          <source>This first implementation sets the background color of the host element to yellow.</source>
          <target state="translated">Эта первая реализация устанавливает желтый цвет фона элемента хоста.</target>
        </trans-unit>
        <trans-unit id="e338895d77bf3b3efdf78e1a4135c26e375e5651" translate="yes" xml:space="preserve">
          <source>This form differs from the template-driven version in that it no longer exports any directives. Instead, it uses the &lt;code&gt;name&lt;/code&gt; getter defined in the component class.</source>
          <target state="translated">Эта форма отличается от версии, управляемой шаблоном, тем, что больше не экспортирует никаких директив. Вместо этого он использует получатель &lt;code&gt;name&lt;/code&gt; определенный в классе компонента.</target>
        </trans-unit>
        <trans-unit id="fc36f6372162820e0033b4e4ebdc541bbbe324f4" translate="yes" xml:space="preserve">
          <source>This function &lt;em&gt;must&lt;/em&gt; match the form above: an arrow function of the form &lt;code&gt;() =&amp;gt; import('...').then(mod =&amp;gt; mod.MODULE)&lt;/code&gt;.</source>
          <target state="translated">Эта функция &lt;em&gt;должна&lt;/em&gt; соответствовать форме выше: функция стрелки в форме &lt;code&gt;() =&amp;gt; import('...').then(mod =&amp;gt; mod.MODULE)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4878fd2cfdcaf11685e5e72d2354cd83ec8f9724" translate="yes" xml:space="preserve">
          <source>This function is functionally the same as &lt;a href=&quot;formcontrol#setValue&quot;&gt;setValue&lt;/a&gt; at this level. It exists for symmetry with &lt;a href=&quot;formgroup#patchValue&quot;&gt;patchValue&lt;/a&gt; on &lt;code&gt;FormGroups&lt;/code&gt; and &lt;code&gt;FormArrays&lt;/code&gt;, where it does behave differently.</source>
          <target state="translated">Эта функция функционально совпадает с &lt;a href=&quot;formcontrol#setValue&quot;&gt;setValue&lt;/a&gt; на этом уровне. Он существует для симметрии с &lt;a href=&quot;formgroup#patchValue&quot;&gt;patchValue&lt;/a&gt; в &lt;code&gt;FormGroups&lt;/code&gt; и &lt;code&gt;FormArrays&lt;/code&gt; , где он ведет себя по-разному.</target>
        </trans-unit>
        <trans-unit id="56d3f264d77db65b5e665e640dd42a9db6e677ef" translate="yes" xml:space="preserve">
          <source>This function returns an &lt;code&gt;&lt;a href=&quot;../../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorated class that is configured to wire up the Angular and AngularJS injectors without the need to actually bootstrap a hybrid application. This makes it simpler and faster to unit test services.</source>
          <target state="translated">Эта функция возвращает декорированный класс &lt;code&gt;&lt;a href=&quot;../../../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , который настроен для подключения инжекторов Angular и AngularJS без необходимости фактически загружать гибридное приложение. Это упрощает и ускоряет сервисы модульного тестирования.</target>
        </trans-unit>
        <trans-unit id="e6acc9bce8fe23418fda41554da4f4e2de103857" translate="yes" xml:space="preserve">
          <source>This function returns an AngularJS module that is configured to wire up the AngularJS and Angular injectors without the need to actually bootstrap a hybrid application. This makes it simpler and faster to unit test services.</source>
          <target state="translated">Эта функция возвращает модуль AngularJS,который сконфигурирован так,чтобы подсоединять провода к угловым инжекторам AngularJS и угловым инжекторам без необходимости фактически загружать гибридное приложение.Это упрощает и ускоряет обслуживание модульных тестов.</target>
        </trans-unit>
        <trans-unit id="ec2de2fde95bef298a51f31a0130f6587e05afec" translate="yes" xml:space="preserve">
          <source>This functionality is only available when you have loaded the full locale data. See the &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;&quot;I18n guide&quot;&lt;/a&gt;.</source>
          <target state="translated">Эта функциональность доступна только тогда, когда вы загрузили полные данные локали. Смотрите &lt;a href=&quot;../../guide/i18n#i18n-pipes&quot;&gt;&quot;Руководство по I18n&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71d1005561ab53d8d9b93d80838e0492d40b9143" translate="yes" xml:space="preserve">
          <source>This general rule can help you build a mental model of attributes and DOM properties: &lt;strong&gt;Attributes initialize DOM properties and then they are done. Property values can change; attribute values can't.&lt;/strong&gt;</source>
          <target state="translated">Это общее правило может помочь вам построить интеллектуальную модель атрибутов и свойств DOM: &lt;strong&gt;атрибуты инициализируют свойства DOM, а затем они выполняются. Значения свойств могут меняться; значения атрибута не могут.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed51a3d987c448eabd0caaad7d11446c5f4ee98e" translate="yes" xml:space="preserve">
          <source>This generates a folder for the new component within the customer-dashboard folder and updates the feature module with the &lt;code&gt;CustomerDashboardComponent&lt;/code&gt; info:</source>
          <target state="translated">При этом создается папка для нового компонента в папке на панели пользователя и обновляется модуль компонента с информацией о &lt;code&gt;CustomerDashboardComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a8ca933ae9ed34a8a06321e5395d5386f3467055" translate="yes" xml:space="preserve">
          <source>This gives users a meaningful first paint of your application that appears quickly because the browser can simply render the HTML and CSS without the need to initialize any JavaScript.</source>
          <target state="translated">Это дает пользователям полноценный первый рисунок вашего приложения,который появляется быстро,потому что браузер может просто визуализировать HTML и CSS без необходимости инициализации какого-либо JavaScript.</target>
        </trans-unit>
        <trans-unit id="7491170871e6c27e83f7232d07de91c8f51b4dc0" translate="yes" xml:space="preserve">
          <source>This glossary lists the most prominent terms and a few less familiar ones with unusual or unexpected definitions.</source>
          <target state="translated">В этом глоссарии перечислены наиболее известные термины и несколько менее знакомых с необычными или неожиданными определениями.</target>
        </trans-unit>
        <trans-unit id="fdd0dd4255112079ec8cd2cac891a62c3bc630af" translate="yes" xml:space="preserve">
          <source>This guard returns a synchronous boolean result. If the user is logged in, it returns true and the navigation continues.</source>
          <target state="translated">Этот кожух возвращает синхронный логический результат.Если пользователь вошел в систему,он возвращает true и навигация продолжается.</target>
        </trans-unit>
        <trans-unit id="99832741e09d1b5644ac6acf807f68e045c1d8e4" translate="yes" xml:space="preserve">
          <source>This guide assumes that you have a basic understanding of the following.</source>
          <target state="translated">Данное руководство предполагает,что у вас есть базовое понимание следующего.</target>
        </trans-unit>
        <trans-unit id="71b0a76f127063119253692ead9f31153f3cf61f" translate="yes" xml:space="preserve">
          <source>This guide assumes you are already familiar with developing and building Angular applications using the &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt;.</source>
          <target state="translated">В этом руководстве предполагается, что вы уже знакомы с разработкой и сборкой приложений Angular с использованием &lt;a href=&quot;cli&quot;&gt;CLI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f91f9ca40378a30abae72457a623c7d9b92e26f1" translate="yes" xml:space="preserve">
          <source>This guide contains a summary of all Angular APIs and features that are currently deprecated.</source>
          <target state="translated">Это руководство содержит краткое описание всех Угловых API и функций,которые в настоящее время устарели.</target>
        </trans-unit>
        <trans-unit id="663987c724bd81899dc1933e4786c728fbe26b01" translate="yes" xml:space="preserve">
          <source>This guide contains information related to updating to the latest version of Angular.</source>
          <target state="translated">Данное руководство содержит информацию,относящуюся к обновлению до последней версии Angular.</target>
        </trans-unit>
        <trans-unit id="a03008f3c8f9dc5daf041fcc08d5096f9ec3c5aa" translate="yes" xml:space="preserve">
          <source>This guide covers the basic Angular animation features to get you started on adding Angular animations to your project.</source>
          <target state="translated">Это руководство охватывает основные функции угловой анимации,чтобы вы могли начать добавлять угловую анимацию в ваш проект.</target>
        </trans-unit>
        <trans-unit id="72e2d1efd7dc0408171b8a02495eccd2a194f9ee" translate="yes" xml:space="preserve">
          <source>This guide covers the router's primary features, illustrating them through the evolution of a small application that you can run live in the browser.</source>
          <target state="translated">Это руководство описывает основные функции маршрутизатора,иллюстрируя их на примере эволюции небольшого приложения,которое можно запускать в браузере в реальном времени.</target>
        </trans-unit>
        <trans-unit id="16b4b3c7d27b05a7a93d7585fd80da6f87695735" translate="yes" xml:space="preserve">
          <source>This guide demonstrates that scenario with an example in the Tour of Heroes theme. Imagine an outer &lt;code&gt;HeroListComponent&lt;/code&gt; that displays a list of super heroes.</source>
          <target state="translated">Это руководство демонстрирует этот сценарий на примере темы &amp;laquo;Тур героев&amp;raquo;. Представьте себе внешний &lt;code&gt;HeroListComponent&lt;/code&gt; , который отображает список супер героев.</target>
        </trans-unit>
        <trans-unit id="94795f12569496bcae1ed95d5adfb2856a55c12a" translate="yes" xml:space="preserve">
          <source>This guide describes &lt;strong&gt;Angular Universal&lt;/strong&gt;, a technology that renders Angular applications on the server.</source>
          <target state="translated">В этом руководстве описывается &lt;strong&gt;Angular Universal&lt;/strong&gt; , технология, которая отображает Angular-приложения на сервере.</target>
        </trans-unit>
        <trans-unit id="7c79df812f600818480fccaad006560ab578d116" translate="yes" xml:space="preserve">
          <source>This guide describes development of a multi-page routed sample application. Along the way, it highlights design decisions and describes key features of the router such as:</source>
          <target state="translated">В данном руководстве описывается разработка многостраничной маршрутизированной пробы.По ходу работы в нем выделяются конструкторские решения и описываются ключевые особенности маршрутизатора,например:</target>
        </trans-unit>
        <trans-unit id="85b1e7320fc65610cb0b9d5744a3924bbc69efbb" translate="yes" xml:space="preserve">
          <source>This guide describes development of a multi-page routed sample application. Along the way, it highlights key features of the router such as:</source>
          <target state="translated">В данном руководстве описывается разработка многостраничной маршрутизированной пробы.При этом в нем выделяются ключевые особенности маршрутизатора:</target>
        </trans-unit>
        <trans-unit id="5eaa5268ab448450e02df4dcd7d854a3b74ebfd4" translate="yes" xml:space="preserve">
          <source>This guide describes how to develop locally on your own machine. Setting up a new project on your machine is quick and easy with the &lt;a href=&quot;https://github.com/angular/quickstart&quot;&gt;QuickStart seed on github&lt;/a&gt;.</source>
          <target state="translated">В этом руководстве описывается, как разрабатывать локально на собственной машине. Быстрое и простое создание нового проекта на вашей машине с &lt;a href=&quot;https://github.com/angular/quickstart&quot;&gt;семенем QuickStart на github&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a071d6040e5b884251f92cb51a3a612a4400f9c1" translate="yes" xml:space="preserve">
          <source>This guide describes some of the built-in tools for efficiently migrating AngularJS projects over to the Angular platform, one piece at a time. It is very similar to &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt; with the exception that this one uses the &lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule()&lt;/a&gt; helper function instead of the &lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt; class. This affects how the app is bootstrapped and how change detection is propagated between the two frameworks. It allows you to upgrade incrementally while improving the speed of your hybrid apps and leveraging the latest of Angular in AngularJS apps early in the process of upgrading.</source>
          <target state="translated">В этом руководстве описываются некоторые встроенные инструменты для эффективной миграции проектов AngularJS на платформу Angular, по одной части за раз. Это очень похоже на &lt;a href=&quot;upgrade&quot;&gt;Обновление с AngularJS,&lt;/a&gt; за исключением того, что этот использует вспомогательную функцию &lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule ()&lt;/a&gt; вместо класса &lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt; . Это влияет на то, как приложение загружается и как обнаружение изменений распространяется между двумя платформами. Он позволяет вам постепенно обновляться, одновременно повышая скорость ваших гибридных приложений и используя самые последние приложения Angular в AngularJS на ранних стадиях процесса обновления.</target>
        </trans-unit>
        <trans-unit id="52f91de3b44e77776bb5d72dda1262736b0f2d6c" translate="yes" xml:space="preserve">
          <source>This guide explains how to build and test Angular apps with Bazel.</source>
          <target state="translated">Это руководство объясняет,как создавать и тестировать угловые приложения с Bazel.</target>
        </trans-unit>
        <trans-unit id="a7f2364975bf639296fbad2e6ccfbf1dc9b2ff63" translate="yes" xml:space="preserve">
          <source>This guide explains how to set up your environment for Angular development using the &lt;a href=&quot;cli&quot;&gt;Angular CLI tool&lt;/a&gt;. It includes information about prerequisites, installing the CLI, creating an initial workspace and starter app, and running that app locally to verify your setup.</source>
          <target state="translated">В этом руководстве объясняется, как настроить среду для разработки на &lt;a href=&quot;cli&quot;&gt;Angular с помощью инструмента Angular CLI&lt;/a&gt; . Он содержит информацию о предварительных условиях, установке интерфейса командной строки, создании начального рабочего пространства и начального приложения, а также локальном запуске этого приложения для проверки ваших настроек.</target>
        </trans-unit>
        <trans-unit id="e4e5dc8be1da9c2744ee3e6ff19277fa157b7049" translate="yes" xml:space="preserve">
          <source>This guide explains how to specify metadata and apply available compiler options to compile your applications efficiently using the AOT compiler.</source>
          <target state="translated">В этом руководстве объясняется,как указать метаданные и применить доступные опции компилятора для эффективной компиляции приложений с помощью компилятора AOT.</target>
        </trans-unit>
        <trans-unit id="bde2ceb420303c6bb7fd13502c38aab2782431cb" translate="yes" xml:space="preserve">
          <source>This guide explores common component testing use cases.</source>
          <target state="translated">В данном руководстве рассматриваются случаи использования общих испытаний компонентов.</target>
        </trans-unit>
        <trans-unit id="e8e0ddc6e4a1bac092793252db146528b491a1a7" translate="yes" xml:space="preserve">
          <source>This guide follows that approach. It has a &lt;code&gt;&lt;a href=&quot;../api/common/nglocalelocalization#locale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt; folder under &lt;code&gt;src/&lt;/code&gt;. Assets within that folder have a filename extension that matches their associated locale.</source>
          <target state="translated">Это руководство следует этому подходу. Он имеет папку &lt;code&gt;&lt;a href=&quot;../api/common/nglocalelocalization#locale&quot;&gt;locale&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;src/&lt;/code&gt; . Активы в этой папке имеют расширение имени файла, которое соответствует их связанной локали.</target>
        </trans-unit>
        <trans-unit id="2488b81bee26c1a6b3945e50d5b7209076c7232f" translate="yes" xml:space="preserve">
          <source>This guide goes into greater depth on special transition states such as &lt;code&gt;*&lt;/code&gt; (wildcard) and &lt;code&gt;void&lt;/code&gt;, and show how these special states are used for elements entering and leaving a view. This chapter also explores multiple animation triggers, animation callbacks, and sequence-based animation using keyframes.</source>
          <target state="translated">В этом руководстве более подробно рассматриваются особые состояния перехода, такие как &lt;code&gt;*&lt;/code&gt; (подстановочный знак) и &lt;code&gt;void&lt;/code&gt; , и показано, как эти особые состояния используются для элементов, входящих и выходящих из представления. В этой главе также исследуются несколько триггеров анимации, обратные вызовы анимации и последовательная анимация с использованием ключевых кадров.</target>
        </trans-unit>
        <trans-unit id="a4fe0eebc6c53dfd8ba7ae172b29d6085d11576f" translate="yes" xml:space="preserve">
          <source>This guide helps you transition from AngularJS to Angular by mapping AngularJS syntax to the equivalent Angular syntax.</source>
          <target state="translated">Это руководство поможет вам перейти от AngularJS к Angular путем отображения синтаксиса AngularJS к эквивалентному синтаксису Angular.</target>
        </trans-unit>
        <trans-unit id="8b1d6ce9f824c1b57c26e8b4535de072da1382f6" translate="yes" xml:space="preserve">
          <source>This guide is a &lt;em&gt;living document&lt;/em&gt;; it changes over time. We strive for consistency to the extent feasible, but you may find parts of our documentation that don't match this style guide. When in doubt, &lt;strong&gt;follow this guide rather than imitating existing documents.&lt;/strong&gt;</source>
          <target state="translated">Это руководство является &lt;em&gt;живым документом&lt;/em&gt; ; это меняется со временем. Мы стремимся к согласованности, насколько это возможно, но вы можете найти части нашей документации, которые не соответствуют этому руководству по стилю. В случае сомнений &lt;strong&gt;следуйте этому руководству, а не подражая существующим документам.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7b86a88184ea70d17effff794189dd4cb85c357f" translate="yes" xml:space="preserve">
          <source>This guide looks at how Angular manipulates the DOM with &lt;strong&gt;structural directives&lt;/strong&gt; and how you can write your own structural directives to do the same thing.</source>
          <target state="translated">В этом руководстве рассказывается, как Angular манипулирует DOM &lt;strong&gt;структурными директивами,&lt;/strong&gt; и как вы можете написать свои собственные структурные директивы, чтобы сделать то же самое.</target>
        </trans-unit>
        <trans-unit id="593d82739fc5c50f931f13f1ea5af12b64068cec" translate="yes" xml:space="preserve">
          <source>This guide offers tips and techniques for unit and integration testing Angular applications.</source>
          <target state="translated">Данное руководство предлагает советы и методики для модульного и интеграционного тестирования Угловые приложения.</target>
        </trans-unit>
        <trans-unit id="ef57621e56bb2f75a1048b0c3475daddc587411b" translate="yes" xml:space="preserve">
          <source>This guide proceeds as a sequence of milestones as if you were building the app step-by-step, but assumes you are familiar with basic &lt;a href=&quot;architecture&quot;&gt;Angular concepts&lt;/a&gt;. For a general introduction to angular, see the &lt;a href=&quot;start&quot;&gt;Getting Started&lt;/a&gt;. For a more in-depth overview, see the &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes&lt;/a&gt; tutorial.</source>
          <target state="translated">Это руководство представляет собой последовательность этапов, как если бы вы создавали приложение шаг за шагом, но предполагает, что вы знакомы с основными &lt;a href=&quot;architecture&quot;&gt;концепциями Angular&lt;/a&gt; . Для общего введения в angular см. &lt;a href=&quot;start&quot;&gt;Начало работы&lt;/a&gt; . Для более подробного обзора см. Руководство &amp;laquo; &lt;a href=&quot;tutorial&quot;&gt;Тур героев&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c0d6e75bcf91e32b2e66ca76df8b63da387d1f38" translate="yes" xml:space="preserve">
          <source>This guide proceeds in phases, marked by milestones, starting from a simple two-pager and building toward a modular, multi-view design with child routes.</source>
          <target state="translated">Это руководство проходит поэтапно,отмеченные вехами,начиная с простого двухпейджерного и строительного дизайна и заканчивая модульным,мульти-пейджерным дизайном с детскими маршрутами.</target>
        </trans-unit>
        <trans-unit id="d3c69f9ce0aa91fc4ff28ea4156ea22eb64b216f" translate="yes" xml:space="preserve">
          <source>This guide provides information to help you decide which type of form works best for your situation. It introduces the common building blocks used by both approaches. It also summarizes the key differences between the two approaches, and demonstrates those differences in the context of setup, data flow, and testing.</source>
          <target state="translated">Это руководство содержит информацию,которая поможет вам решить,какой тип формы лучше всего подходит для вашей ситуации.В нем представлены общие строительные блоки,используемые в обоих подходах.Он также обобщает основные различия между двумя подходами и демонстрирует эти различия в контексте настройки,потока данных и тестирования.</target>
        </trans-unit>
        <trans-unit id="ff1a4eed9922504491639bfc2f2085934810a731" translate="yes" xml:space="preserve">
          <source>This guide shows you how to use Angular &lt;a href=&quot;../guide/glossary#router&quot;&gt;routing&lt;/a&gt; to give the user in-app navigation. In a single-page app, instead of loading new pages, you show different components and data to the user based on where the user is in the application.</source>
          <target state="translated">В этом руководстве показано, как использовать &lt;a href=&quot;../guide/glossary#router&quot;&gt;маршрутизацию&lt;/a&gt; Angular для навигации в приложении. В одностраничном приложении вместо загрузки новых страниц вы показываете пользователю различные компоненты и данные в зависимости от того, где он находится в приложении.</target>
        </trans-unit>
        <trans-unit id="5d34585a93f67fec9f496e464bff52a80a3a9cbe" translate="yes" xml:space="preserve">
          <source>This guide uses the StackBlitz Generator to show you a ready-made, simple application that you can examine and play with interactively. In actual development you will typically use the &lt;a href=&quot;guide/glossary#command-line-interface-cli&quot;&gt;Angular CLI&lt;/a&gt;, a powerful command-line tool that lets you generate and modify applications. For more information, see the &lt;a href=&quot;https://angular.io/cli&quot;&gt;CLI Overview&lt;/a&gt;.</source>
          <target state="translated">В этом руководстве используется генератор StackBlitz, чтобы показать вам готовое простое приложение, которое вы можете просмотреть и поиграть в интерактивном режиме. В реальной разработке вы обычно используете &lt;a href=&quot;guide/glossary#command-line-interface-cli&quot;&gt;Angular CLI&lt;/a&gt; , мощный инструмент командной строки, который позволяет создавать и изменять приложения. Для получения дополнительной информации см. &lt;a href=&quot;https://angular.io/cli&quot;&gt;Обзор CLI&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e586281684b3e248038b701f36893a54ff5a55bc" translate="yes" xml:space="preserve">
          <source>This guide won't repeat how to &lt;em&gt;use&lt;/em&gt; them. But it does explain &lt;em&gt;how they work&lt;/em&gt; and how to &lt;a href=&quot;structural-directives#unless&quot;&gt;write your own&lt;/a&gt; structural directive.</source>
          <target state="translated">Это руководство не будет повторять, как их &lt;em&gt;использовать&lt;/em&gt; . Но это объясняет, &lt;em&gt;как они работают&lt;/em&gt; и как &lt;a href=&quot;structural-directives#unless&quot;&gt;написать свою собственную&lt;/a&gt; структурную директиву.</target>
        </trans-unit>
        <trans-unit id="e3989ef0ea3239b97b243b6842c7b698d20fb5bb" translate="yes" xml:space="preserve">
          <source>This guide works with a CLI-generated Angular app. If you are working manually, make sure that you have &lt;code&gt;&amp;lt;base href=&quot;/&quot;&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your index.html file. This assumes that the &lt;code&gt;app&lt;/code&gt; folder is the application root, and uses &lt;code&gt;&quot;/&quot;&lt;/code&gt;.</source>
          <target state="translated">Это руководство работает с приложением Angular, созданным с помощью интерфейса командной строки. Если вы работаете вручную, убедитесь, что у вас есть &lt;code&gt;&amp;lt;base href=&quot;/&quot;&amp;gt;&lt;/code&gt; в &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; вашего файла index.html. Это предполагает, что папка &lt;code&gt;app&lt;/code&gt; является корнем приложения и использует &lt;code&gt;&quot;/&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="051838d2f6789f70fb2f89d0d3b7b55f2fd66a1e" translate="yes" xml:space="preserve">
          <source>This has been deprecated for a few reasons. First, developers have found this pattern confusing. It seems like the actual &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive is being used, but in fact it's an input/output property named &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; on the reactive form directive that simply approximates (some of) its behavior. Specifically, it allows getting/setting the value and intercepting value events. However, some of &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;'s other features - like delaying updates with&lt;code&gt;ngModelOptions&lt;/code&gt; or exporting the directive - simply don't work, which has understandably caused some confusion.</source>
          <target state="translated">Это устарело по нескольким причинам. Во-первых, разработчики сочли эту модель запутанной. Кажется, что используется фактическая директива &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; , но на самом деле это свойство ввода / вывода с именем &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; в директиве реактивной формы, которое просто приближает (некоторые) ее поведение. В частности, он позволяет получать / устанавливать значения и перехватывать значения событий. Однако некоторые другие функции &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; , такие как задержка обновления с помощью &lt;code&gt;ngModelOptions&lt;/code&gt; или экспорт директивы, просто не работают, что, по понятным причинам, вызвало некоторую путаницу.</target>
        </trans-unit>
        <trans-unit id="9a36abc535f66e5a2a598972e3e540ed77c184f6" translate="yes" xml:space="preserve">
          <source>This has been deprecated for several reasons. First, developers have found this pattern confusing. It seems like the actual &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive is being used, but in fact it's an input/output property named &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; on the reactive form directive that approximates some, but not all, of the directive's behavior. It allows getting and setting a value and intercepting value events, but some of &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;'s other features, such as delaying updates with&lt;code&gt;ngModelOptions&lt;/code&gt; or exporting the directive, don't work.</source>
          <target state="translated">Это устарело по нескольким причинам. Во-первых, эта закономерность сбивает разработчиков с толку. Похоже, что используется фактическая директива &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; , но на самом деле это свойство ввода / вывода с именем &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; в директиве реактивной формы, которое приближает некоторые, но не все, поведения директивы. Он позволяет получать и устанавливать значения и перехватывать события значений, но некоторые другие функции &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; , такие как задержка обновлений с помощью &lt;code&gt;ngModelOptions&lt;/code&gt; или экспорт директивы, не работают.</target>
        </trans-unit>
        <trans-unit id="bb14c528bca95d7e4e8b5c0e75434cfae54a895b" translate="yes" xml:space="preserve">
          <source>This has been deprecated to keep selectors consistent with other core Angular selectors, as element selectors are typically written in kebab-case.</source>
          <target state="translated">Это было сделано для того,чтобы селекторы соответствовали другим основным Угловым селекторам,так как селекторы элементов обычно пишутся в кейсе.</target>
        </trans-unit>
        <trans-unit id="753971c71e6ca491908f50d23acb603dc1a664a4" translate="yes" xml:space="preserve">
          <source>This has the same effect as the binding:</source>
          <target state="translated">Это имеет такое же действие,как и переплет:</target>
        </trans-unit>
        <trans-unit id="1095f7e1edc68ff18dd9e80137271b101bd86c29" translate="yes" xml:space="preserve">
          <source>This helper class should be used as a base class for creating Angular directives that wrap AngularJS components that need to be &quot;upgraded&quot;.</source>
          <target state="translated">Этот вспомогательный класс следует использовать в качестве базового класса для создания директив Angular,которые обёртывают компоненты AngularJS,нуждающиеся в &quot;обновлении&quot;.</target>
        </trans-unit>
        <trans-unit id="4a9910a470680f461d5e2a2614c8675ebcbbb9c4" translate="yes" xml:space="preserve">
          <source>This helper function returns a factory function that provides access to the Angular service identified by the &lt;code&gt;token&lt;/code&gt; parameter.</source>
          <target state="translated">Эта вспомогательная функция возвращает заводскую функцию, которая обеспечивает доступ к службе Angular, определенной параметром &lt;code&gt;token&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3feef579a17c24eb18bbf65e912c0af25f671bc1" translate="yes" xml:space="preserve">
          <source>This helper function returns a factory function to be used for registering an AngularJS wrapper directive for &quot;downgrading&quot; an Angular component.</source>
          <target state="translated">Эта вспомогательная функция возвращает заводскую функцию для регистрации директивы AngularJS-обертки для &quot;понижения&quot; угловой составляющей.</target>
        </trans-unit>
        <trans-unit id="47aa8d05f2d4f3b4a736e0ea1dd586657dd4775e" translate="yes" xml:space="preserve">
          <source>This helper is for testing services not Components. For Component testing you must still bootstrap a hybrid app. See &lt;code&gt;&lt;a href=&quot;../upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;&lt;/code&gt; for more information.</source>
          <target state="translated">Этот помощник предназначен для тестирования сервисов, а не компонентов. Для тестирования компонентов вы все равно должны загрузить гибридное приложение. См. &lt;code&gt;&lt;a href=&quot;../upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="4eef553362f7318dd361d3d0f6a5760f3585a142" translate="yes" xml:space="preserve">
          <source>This helper is for testing services not components. For Component testing you must still bootstrap a hybrid app. See &lt;code&gt;&lt;a href=&quot;../upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;&lt;/code&gt; for more information.</source>
          <target state="translated">Этот помощник предназначен для тестирования сервисов, а не компонентов. Для тестирования компонентов вы все равно должны загрузить гибридное приложение. См. &lt;code&gt;&lt;a href=&quot;../upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="9b9ba1412b83f44b56ecd7943b94f7e6d7ad49fa" translate="yes" xml:space="preserve">
          <source>This helper's observable emits the &lt;code&gt;data&lt;/code&gt; value in the next turn of the JavaScript engine.</source>
          <target state="translated">Наблюдаемый этим помощником испускает значение &lt;code&gt;data&lt;/code&gt; в следующем обороте движка JavaScript.</target>
        </trans-unit>
        <trans-unit id="326ed6100992d8304a4c4512b4ef1b97e697f367" translate="yes" xml:space="preserve">
          <source>This highlight directive has a single customizable property. In a real app, it may need more.</source>
          <target state="translated">Эта директива подсветки имеет одно настраиваемое свойство.В реальном приложении ей может понадобиться больше.</target>
        </trans-unit>
        <trans-unit id="a8424043c89606ac692d26ae91eabcf058b3b255" translate="yes" xml:space="preserve">
          <source>This implies that the component bindings will always follow the semantics of the instantiation framework.</source>
          <target state="translated">Это означает,что компонентная привязка всегда будет следовать семантике рамок инстанцирования.</target>
        </trans-unit>
        <trans-unit id="13526051beab5c2cb1409738f1705df68acfffb7" translate="yes" xml:space="preserve">
          <source>This indicates the last time the service worker checked for a new version, or update, of the app. &lt;code&gt;never&lt;/code&gt; indicates that the service worker has never checked for an update.</source>
          <target state="translated">Это указывает, когда в последний раз работник службы проверял наличие новой версии или обновления приложения. &lt;code&gt;never&lt;/code&gt; указывает на то, что работник сервиса никогда не проверял наличие обновлений.</target>
        </trans-unit>
        <trans-unit id="c6866fb4d3be58dfa31c9fcb707a31824d7cdb10" translate="yes" xml:space="preserve">
          <source>This initial value never changes.</source>
          <target state="translated">Это исходное значение никогда не меняется.</target>
        </trans-unit>
        <trans-unit id="8fdbd80f7713591b405acb108f078354e86bdf7e" translate="yes" xml:space="preserve">
          <source>This installs the &lt;code&gt;schematics&lt;/code&gt; executable, which you can use to create a new schematics &lt;a href=&quot;glossary#collection&quot;&gt;collection&lt;/a&gt; with an initial named schematic. The collection folder is a workspace for schematics. You can also use the &lt;code&gt;schematics&lt;/code&gt; command to add a new schematic to an existing collection, or extend an existing schematic.</source>
          <target state="translated">Это устанавливает исполняемый файл &lt;code&gt;schematics&lt;/code&gt; , который можно использовать для создания новой &lt;a href=&quot;glossary#collection&quot;&gt;коллекции&lt;/a&gt; схем с исходным именем схема. Папка коллекции - это рабочее пространство для схем. Вы также можете использовать команду &lt;code&gt;schematics&lt;/code&gt; , чтобы добавить новую схему в существующую коллекцию или расширить существующую схему.</target>
        </trans-unit>
        <trans-unit id="f4f376c92f4d721a1cb60edfb651e536ba4f5e3e" translate="yes" xml:space="preserve">
          <source>This installs the &lt;code&gt;schematics&lt;/code&gt; executable, which you can use to create a new schematics collection in its own project folder, add a new schematic to an existing collection, or extend an existing schematic.</source>
          <target state="translated">При этом устанавливается исполняемый файл &lt;code&gt;schematics&lt;/code&gt; , который можно использовать для создания новой коллекции схем в собственной папке проекта, добавления новой схемы в существующую коллекцию или расширения существующей схемы.</target>
        </trans-unit>
        <trans-unit id="1b7cb0effa29e839a96dca4c18f240ba5551dbba" translate="yes" xml:space="preserve">
          <source>This installs the command &lt;code&gt;ng&lt;/code&gt; on your system, which is the command you use to create new workspaces, new projects, serve your application during development, or produce builds to share or distribute.</source>
          <target state="translated">Это устанавливает команду &lt;code&gt;ng&lt;/code&gt; в вашей системе, которую вы используете для создания новых рабочих пространств, новых проектов, обслуживания вашего приложения во время разработки или создания сборок для совместного использования или распространения.</target>
        </trans-unit>
        <trans-unit id="b28a949d24ede3e30d4f2425cea4c004accffb6c" translate="yes" xml:space="preserve">
          <source>This interface allows access to the underlying &lt;code&gt;&lt;a href=&quot;../httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt;, and allows responding with &lt;code&gt;&lt;a href=&quot;../httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt;s or &lt;code&gt;&lt;a href=&quot;../httperrorresponse&quot;&gt;HttpErrorResponse&lt;/a&gt;&lt;/code&gt;s.</source>
          <target state="translated">Этот интерфейс обеспечивает доступ к базовому &lt;code&gt;&lt;a href=&quot;../httprequest&quot;&gt;HttpRequest&lt;/a&gt;&lt;/code&gt; и позволяет отвечать с &lt;code&gt;&lt;a href=&quot;../httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../httperrorresponse&quot;&gt;HttpErrorResponse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f14b1937cf79a6a85c55fe443bf06ded14c39fe9" translate="yes" xml:space="preserve">
          <source>This is a &lt;em&gt;cold&lt;/em&gt; observable that waits three frames and then emits an error, The hash (&lt;code&gt;#&lt;/code&gt;) indicates the timing of the error that is specified in the third argument. The second argument is null because the observable never emits a value.</source>
          <target state="translated">Это &lt;em&gt;холодная&lt;/em&gt; наблюдаемая, которая ждет три кадра и затем выдает ошибку. Хэш ( &lt;code&gt;#&lt;/code&gt; ) указывает время ошибки, которая указана в третьем аргументе. Второй аргумент является нулевым, потому что наблюдаемое никогда не выдает значение.</target>
        </trans-unit>
        <trans-unit id="325c383689dc505c167a4efdf3ff1bfffcda2dac" translate="yes" xml:space="preserve">
          <source>This is a common middleware pattern found in frameworks such as Express.js.</source>
          <target state="translated">Это распространенный шаблон промежуточного программного обеспечения,встречающийся в таких фреймворках,как Express.js.</target>
        </trans-unit>
        <trans-unit id="8a0404a183044b9e9c6ffe40bc631a912f26a05f" translate="yes" xml:space="preserve">
          <source>This is a considerable effort and it often isn't worth it, especially since you are in the process of moving your code to Angular. Instead, declare &lt;code&gt;angular&lt;/code&gt; as &lt;code&gt;angular.IAngularStatic&lt;/code&gt; to indicate it is a global variable and still have full typing support.</source>
          <target state="translated">Это значительное усилие, и оно часто не стоит того, особенно потому, что вы находитесь в процессе перевода вашего кода на Angular. Вместо этого объявите &lt;code&gt;angular&lt;/code&gt; как &lt;code&gt;angular.IAngularStatic&lt;/code&gt; , чтобы указать, что это глобальная переменная и все еще есть полная поддержка ввода.</target>
        </trans-unit>
        <trans-unit id="ebfc1fc3ae76182d341bfaf13595ca3c04aee718" translate="yes" xml:space="preserve">
          <source>This is a general purpose guard&amp;mdash;you can imagine other features that require authenticated users&amp;mdash;so you generate an &lt;code&gt;AuthGuard&lt;/code&gt; in the &lt;code&gt;auth&lt;/code&gt; folder.</source>
          <target state="translated">Это защита общего назначения - вы можете представить другие функции, требующие аутентифицированных пользователей, - поэтому вы генерируете &lt;code&gt;AuthGuard&lt;/code&gt; в папке &lt;code&gt;auth&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="745624b6290490997a074676dc013e0ad3433575" translate="yes" xml:space="preserve">
          <source>This is a good candidate for an impure pipe because the &lt;code&gt;transform&lt;/code&gt; function is trivial and fast.</source>
          <target state="translated">Это хороший кандидат на нечистую трубу, потому что функция &lt;code&gt;transform&lt;/code&gt; тривиальна и быстра.</target>
        </trans-unit>
        <trans-unit id="5b9b9bda285209856e8b9f18df0fc5414bc4d50e" translate="yes" xml:space="preserve">
          <source>This is a good way to quickly get TypeScript features, such as type checking and autocomplete support, for you custom element. But it can get cumbersome if you need it in several places, because you have to cast the return type on every occurrence.</source>
          <target state="translated">Это хороший способ быстро получить возможности TypeScript,такие как проверка типов и поддержка автозавершения для пользовательского элемента.Но он может стать громоздким,если он вам понадобится в нескольких местах,потому что вам придется приводить возвращаемый тип в каждом вхождении.</target>
        </trans-unit>
        <trans-unit id="6fe29256f1b66a8c5853dd12c474275473bc08da" translate="yes" xml:space="preserve">
          <source>This is a good way to quickly get TypeScript features, such as type checking and autocomplete support, for your custom element. But it can get cumbersome if you need it in several places, because you have to cast the return type on every occurrence.</source>
          <target state="translated">Это хороший способ быстро получить функции TypeScript,такие как проверка типов и поддержка автозавершения для вашего пользовательского элемента.Но он может стать громоздким,если вам понадобится в нескольких местах,потому что вам придется приводить возвращаемый тип в каждом вхождении.</target>
        </trans-unit>
        <trans-unit id="6520fb09eb7f64f65fec620f22a827ad129c5147" translate="yes" xml:space="preserve">
          <source>This is a nonissue in Angular because ES 2015 modules handle the namespacing for you.</source>
          <target state="translated">Это не проблема в Angular,потому что модули ES 2015 обрабатывают пространство имен для вас.</target>
        </trans-unit>
        <trans-unit id="b1360d42910235d11c8da57171809f03949b89f4" translate="yes" xml:space="preserve">
          <source>This is a tree of activated route snapshots. Every node in this tree knows about the &quot;consumed&quot; URL segments, the extracted parameters, and the resolved data.</source>
          <target state="translated">Это дерево активированных снимков маршрута.Каждый узел этого дерева знает о &quot;потребленных&quot; сегментах URL,извлечённых параметрах и разрешённых данных.</target>
        </trans-unit>
        <trans-unit id="308f6f1ffa549dea73f1268332bb7efda867f32b" translate="yes" xml:space="preserve">
          <source>This is a typical &quot;&lt;em&gt;service-in-service&lt;/em&gt;&quot; scenario: you inject the &lt;code&gt;MessageService&lt;/code&gt; into the &lt;code&gt;HeroService&lt;/code&gt; which is injected into the &lt;code&gt;HeroesComponent&lt;/code&gt;.</source>
          <target state="translated">Это типичный сценарий &amp;laquo; &lt;em&gt;сервис в обслуживании&lt;/em&gt; &amp;raquo;: вы &lt;code&gt;MessageService&lt;/code&gt; в &lt;code&gt;HeroService&lt;/code&gt; , который вводится в &lt;code&gt;HeroesComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd1783005dfb776d1af2f04f6577b41eaa1ff956" translate="yes" xml:space="preserve">
          <source>This is a very simple example, but the use of a schema for validation can be very powerful. For more information, see the &lt;a href=&quot;http://json-schema.org/&quot;&gt;JSON schemas website&lt;/a&gt;.</source>
          <target state="translated">Это очень простой пример, но использование схемы для проверки может быть очень мощным. Для получения дополнительной информации см. &lt;a href=&quot;http://json-schema.org/&quot;&gt;Веб-сайт схем JSON&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="662db076dee3f4f6d5c3a525a6b889d424dd0cf8" translate="yes" xml:space="preserve">
          <source>This is a very simple example, but the use of a schema for validation can be very powerful. For more information, see the &lt;a href=&quot;https://json-schema.org/&quot;&gt;JSON schemas website&lt;/a&gt;.</source>
          <target state="translated">Это очень простой пример, но использование схемы для проверки может оказаться очень эффективным. Дополнительные сведения см. На &lt;a href=&quot;https://json-schema.org/&quot;&gt;веб-сайте схем JSON&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="98e22f6dda8c73c831d901b714a07d0b7689f227" translate="yes" xml:space="preserve">
          <source>This is actually a convenience method, implemented as &lt;code&gt;fixture.debugElement.nativeElement&lt;/code&gt;.</source>
          <target state="translated">На самом деле это удобный метод, реализованный как &lt;code&gt;fixture.debugElement.nativeElement&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd436a739a02b80b45abdb0c1ad5a566028baa06" translate="yes" xml:space="preserve">
          <source>This is actually a pretty good starting point. The code uses the AngularJS 1.5 component API and the organization follows the &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md&quot;&gt;AngularJS Style Guide&lt;/a&gt;, which is an important &lt;a href=&quot;upgrade#follow-the-angular-styleguide&quot;&gt;preparation step&lt;/a&gt; before a successful upgrade.</source>
          <target state="translated">Это на самом деле довольно хорошая отправная точка. В коде используется API компонента AngularJS 1.5, и организация следует &lt;a href=&quot;https://github.com/johnpapa/angular-styleguide/blob/master/a1/README.md&quot;&gt;Руководству по стилю AngularJS&lt;/a&gt; , которое является важным &lt;a href=&quot;upgrade#follow-the-angular-styleguide&quot;&gt;подготовительным этапом&lt;/a&gt; перед успешным обновлением.</target>
        </trans-unit>
        <trans-unit id="b8005693863fa9b16e3799069756d7fed430b5f1" translate="yes" xml:space="preserve">
          <source>This is an example of Angular's &lt;a href=&quot;../guide/event-binding&quot;&gt;event binding&lt;/a&gt; syntax.</source>
          <target state="translated">Это пример синтаксиса &lt;a href=&quot;../guide/event-binding&quot;&gt;привязки событий&lt;/a&gt; Angular .</target>
        </trans-unit>
        <trans-unit id="28fd6969c6d6369ceb7285ab5a770ea3315ffab8" translate="yes" xml:space="preserve">
          <source>This is an example of Angular's &lt;a href=&quot;../guide/template-syntax#event-binding&quot;&gt;event binding&lt;/a&gt; syntax.</source>
          <target state="translated">Это пример синтаксиса &lt;a href=&quot;../guide/template-syntax#event-binding&quot;&gt;привязки событий&lt;/a&gt; Angular .</target>
        </trans-unit>
        <trans-unit id="edb830bd9f42a141071913f2de5f0ee10c46edce" translate="yes" xml:space="preserve">
          <source>This is an interim code sample that will allow you to provide and use the &lt;code&gt;HeroService&lt;/code&gt;. At this point, the code will differ from the &lt;code&gt;HeroService&lt;/code&gt; in the &lt;a href=&quot;toh-pt4#final-code-review&quot;&gt;&quot;final code review&quot;&lt;/a&gt;.</source>
          <target state="translated">Это временный пример кода, который позволит вам предоставлять и использовать &lt;code&gt;HeroService&lt;/code&gt; . На этом этапе код будет отличаться от &lt;code&gt;HeroService&lt;/code&gt; в &lt;a href=&quot;toh-pt4#final-code-review&quot;&gt;&amp;laquo;окончательной проверке кода&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b3974dfe8a8053bf2f0f9d406986e6d789c88746" translate="yes" xml:space="preserve">
          <source>This is an internal project to add support for Angular front-ends to Google's internal integrated server stack.</source>
          <target state="translated">Это внутренний проект по добавлению поддержки угловых фронт-оконцев к внутреннему интегрированному серверному стеку Google.</target>
        </trans-unit>
        <trans-unit id="b2b55aa5e71e846d741afa9a4891157e8f09cdfb" translate="yes" xml:space="preserve">
          <source>This is an opaque value the router will give to a custom route reuse strategy to store and retrieve later on.</source>
          <target state="translated">Это непрозрачное значение,которое маршрутизатор будет давать пользовательской стратегии повторного использования маршрута для хранения и извлечения в дальнейшем.</target>
        </trans-unit>
        <trans-unit id="47187f9c60a312936c257bcbf674f7a846c9c3b7" translate="yes" xml:space="preserve">
          <source>This is disagreeable. The word, &lt;code&gt;appHighlight&lt;/code&gt;, is a terrible property name and it doesn't convey the property's intent.</source>
          <target state="translated">Это неприятно. Слово &lt;code&gt;appHighlight&lt;/code&gt; - это ужасное имя свойства, и оно не передает намерения свойства.</target>
        </trans-unit>
        <trans-unit id="402dd3cc505c92b3ebc8041d5e0f5ce4dca64317" translate="yes" xml:space="preserve">
          <source>This is especially useful when child components are defined with an empty path string, as in the following example. With this configuration, navigating to '/parent/10' creates the main child and aux components.</source>
          <target state="translated">Это особенно полезно,когда дочерние компоненты определены пустой строкой пути,как в следующем примере.При такой конфигурации,переход в '/parent/10' создает основные дочерние и вспомогательные компоненты.</target>
        </trans-unit>
        <trans-unit id="f0a8eee1520084e40ddb251d4ee70816b2810239" translate="yes" xml:space="preserve">
          <source>This is how you associate a template with logic, which is defined in the component class.</source>
          <target state="translated">Так вы связываете шаблон с логикой,которая определяется в классе компонента.</target>
        </trans-unit>
        <trans-unit id="3a2de92bdd97f6fbeeca5fdc9ee29a195958c537" translate="yes" xml:space="preserve">
          <source>This is illustrated in the following image, which displays the logging date.</source>
          <target state="translated">Это показано на следующем изображении,на котором отображается дата регистрации.</target>
        </trans-unit>
        <trans-unit id="4461ea0ba25396c618a6f8a0d7132ba6f60a3420" translate="yes" xml:space="preserve">
          <source>This is manifestly more complicated than &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; and rightly so. The &lt;code&gt;NgFor&lt;/code&gt; directive has more features, both required and optional, than the &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; shown in this guide. At minimum &lt;code&gt;NgFor&lt;/code&gt; needs a looping variable (&lt;code&gt;let hero&lt;/code&gt;) and a list (&lt;code&gt;heroes&lt;/code&gt;).</source>
          <target state="translated">Это явно сложнее, чем &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; , и это правильно. &lt;code&gt;NgFor&lt;/code&gt; директива имеет больше возможностей, как требуется , и факультативный, чем &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; показано в этом руководстве. Как минимум, для &lt;code&gt;NgFor&lt;/code&gt; необходимы циклическая переменная ( &lt;code&gt;let hero&lt;/code&gt; ) и список ( &lt;code&gt;heroes&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="7efe4c9363e221388c4cd38d8c3a512cea782501" translate="yes" xml:space="preserve">
          <source>This is often the case with &lt;em&gt;routing components&lt;/em&gt;. As a rule you test the component, not the router, and care only if the component navigates with the right address under the given conditions.</source>
          <target state="translated">Это часто имеет место с &lt;em&gt;компонентами маршрутизации&lt;/em&gt; . Как правило, вы тестируете компонент, а не маршрутизатор, и заботитесь, только если компонент перемещается с правильным адресом в данных условиях.</target>
        </trans-unit>
        <trans-unit id="60412eee3362861bf6dd3a41df31f62ad91b66a4" translate="yes" xml:space="preserve">
          <source>This is one of the three fundamental building blocks of Angular forms, along with &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. It extends the &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; class that implements most of the base functionality for accessing the value, validation status, user interactions and events.</source>
          <target state="translated">Это один из трех основных строительных блоков Angular форм, наряду с &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; . Он расширяет класс &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; , который реализует большинство базовых функций для доступа к значению, состоянию проверки, пользовательским взаимодействиям и событиям.</target>
        </trans-unit>
        <trans-unit id="c8af7d6538861c4de12ed064fb23bf497866d794" translate="yes" xml:space="preserve">
          <source>This is one of the three fundamental building blocks of Angular forms, along with &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. It extends the &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; class that implements most of the base functionality for accessing the value, validation status, user interactions and events. See &lt;a href=&quot;formcontrol#usage-notes&quot;&gt;usage examples below&lt;/a&gt;.</source>
          <target state="translated">Это один из трех основных строительных блоков угловых форм, наряду с &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; . Он расширяет класс &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; , который реализует большую часть базовых функций для доступа к значению, статусу проверки, взаимодействиям с пользователем и событиям. См. &lt;a href=&quot;formcontrol#usage-notes&quot;&gt;Примеры использования ниже&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="51b5158af868b9258e387116060b9c47ff8fb973" translate="yes" xml:space="preserve">
          <source>This is similar to the phone list component. The new wrinkle is the &lt;code&gt;RouteParams&lt;/code&gt; type annotation that identifies the &lt;code&gt;routeParams&lt;/code&gt; dependency.</source>
          <target state="translated">Это похоже на компонент списка телефонов. Новая складка - это аннотация типа &lt;code&gt;RouteParams&lt;/code&gt; , которая определяет зависимость &lt;code&gt;routeParams&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="804a4031c3f14f499869d2204177c75dee70978b" translate="yes" xml:space="preserve">
          <source>This is the SHA1 hash of the most up-to-date version of the app that the service worker knows about.</source>
          <target state="translated">Это SHA1 хэш самой последней версии приложения,о котором знает сервисный работник.</target>
        </trans-unit>
        <trans-unit id="16525e697531723027c408ae314d617a3cee22fa" translate="yes" xml:space="preserve">
          <source>This is the base class for &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это базовый класс для &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32e4434471515868a1b3925d1547dbdde41ab113" translate="yes" xml:space="preserve">
          <source>This is the base class for &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Это базовый класс для &lt;code&gt;&lt;a href=&quot;forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09772e314d49341cf87eb2642be70a9dc5fc7d9f" translate="yes" xml:space="preserve">
          <source>This is the default option.</source>
          <target state="translated">Это опция по умолчанию.</target>
        </trans-unit>
        <trans-unit id="2f800de1b08868e8b8e49cce1d56cd86eef0162b" translate="yes" xml:space="preserve">
          <source>This is the inner &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Это внутренний &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cff98b359039fbd0f2a88788c0ca5a17c544f06f" translate="yes" xml:space="preserve">
          <source>This is the outer &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">Это внешний &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6fbcbb942159ed1a22b254df114719bad20d47a4" translate="yes" xml:space="preserve">
          <source>This is the perfect infiltration job for a directive. The heroes will never know they're being watched.</source>
          <target state="translated">Это идеальная работа по проникновению для директивы.Герои никогда не узнают,что за ними следят.</target>
        </trans-unit>
        <trans-unit id="4ccba53d17df213bee27c394101fd3424e3c0b6f" translate="yes" xml:space="preserve">
          <source>This is the place to free resources that won't be garbage collected automatically. Unsubscribe from Observables and DOM events. Stop interval timers. Unregister all callbacks that this directive registered with global or application services. You risk memory leaks if you neglect to do so.</source>
          <target state="translated">Это место,где можно освободить ресурсы,которые не будут собираться автоматически.Откажитесь от подписки на события Observables и DOM.Таймеры интервала останова.Отменить регистрацию всех вызовов,которые эта директива зарегистрировала в глобальных сервисах или сервисах приложений.Риск утечки памяти,если вы этого не сделаете.</target>
        </trans-unit>
        <trans-unit id="2f5ed6fbbb5f8dadb12202b2e0fbdec880ace274" translate="yes" xml:space="preserve">
          <source>This is the place to free resources that won't be garbage-collected automatically. You risk memory leaks if you neglect to do so.</source>
          <target state="translated">Это место,где можно освободить ресурсы,которые не будут автоматически собирать мусор.Вы рискуете утечкой памяти,если пренебрегаете этим.</target>
        </trans-unit>
        <trans-unit id="9a6525a4da9f9f2b0077e6c20e8b8ad052414394" translate="yes" xml:space="preserve">
          <source>This is the same in both template-driven and reactive forms.</source>
          <target state="translated">Это одинаково как в шаблонных,так и в реактивных формах.</target>
        </trans-unit>
        <trans-unit id="87a555dd35ff17530be3a1fe3b938e47130474eb" translate="yes" xml:space="preserve">
          <source>This is the simplest production-ready deployment of your application.</source>
          <target state="translated">Это самое простое развертывание вашего приложения,готового к производству.</target>
        </trans-unit>
        <trans-unit id="c58e06956699ce3b5d0d19719918b6ae26cfc2f3" translate="yes" xml:space="preserve">
          <source>This is the time to notify another part of the application that the component is going away.</source>
          <target state="translated">В это время необходимо уведомить другую часть приложения о том,что компонент уходит.</target>
        </trans-unit>
        <trans-unit id="5d3cebde8a1c748058ff6feaf6d6fd7fffbd33c4" translate="yes" xml:space="preserve">
          <source>This is used to parse the response appropriately before returning it to the requestee.</source>
          <target state="translated">Это используется для правильного разбора ответа перед тем,как вернуть его получателю.</target>
        </trans-unit>
        <trans-unit id="4575447306482a712f678b2a9d395b8a07e7fe6d" translate="yes" xml:space="preserve">
          <source>This is usually created automatically by &lt;code&gt;Injector.resolveAndCreate&lt;/code&gt;.</source>
          <target state="translated">Обычно это создается автоматически &lt;code&gt;Injector.resolveAndCreate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8d4f6bc5f09e6fd5355e7d9f2a9258c893547afc" translate="yes" xml:space="preserve">
          <source>This is very important since it allows you to repurpose the components for any type of survey as long as it's compatible with the &lt;em&gt;question&lt;/em&gt; object model. The key is the dynamic data binding of metadata used to render the form without making any hardcoded assumptions about specific questions. In addition to control metadata, you are also adding validation dynamically.</source>
          <target state="translated">Это очень важно, поскольку позволяет повторно использовать компоненты для любого типа опроса, если он совместим с объектной моделью &lt;em&gt;вопроса&lt;/em&gt; . Ключ - это динамическая привязка метаданных к данным, используемая для визуализации формы без каких-либо жестких предположений по конкретным вопросам. Помимо управления метаданными, вы также добавляете проверку динамически.</target>
        </trans-unit>
        <trans-unit id="30cc4dc7a4b6f15bc6646908fab43b52eb183eb7" translate="yes" xml:space="preserve">
          <source>This isn't an oversight. Angular doesn't offer such pipes because they perform poorly and prevent aggressive minification. Both &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;orderBy&lt;/code&gt; require parameters that reference object properties. Earlier in this page, you learned that such pipes must be &lt;a href=&quot;pipes#pure-and-impure-pipes&quot;&gt;impure&lt;/a&gt; and that Angular calls impure pipes in almost every change-detection cycle.</source>
          <target state="translated">Это не упущение. Angular не предлагает такие трубы, потому что они плохо работают и предотвращают агрессивную минификацию. И &lt;code&gt;filter&lt;/code&gt; , и &lt;code&gt;orderBy&lt;/code&gt; требуют параметры, которые ссылаются на свойства объекта. Ранее на этой странице вы узнали, что такие каналы должны быть &lt;a href=&quot;pipes#pure-and-impure-pipes&quot;&gt;нечистыми&lt;/a&gt; и что Angular вызывает нечистые каналы почти в каждом цикле обнаружения изменений.</target>
        </trans-unit>
        <trans-unit id="bf87feeb4d56bb09ecc40ffedbf5b9b09eea90de" translate="yes" xml:space="preserve">
          <source>This isn't necessarily good design. This example is examining &lt;em&gt;whether a component can inject its parent via the parent's base class&lt;/em&gt;.</source>
          <target state="translated">Это не обязательно хороший дизайн. В этом примере рассматривается &lt;em&gt;, может ли компонент внедрить своего родителя через базовый класс родителя&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="6eaca4844068379a7e60176fbbfc6443308fe713" translate="yes" xml:space="preserve">
          <source>This isn't usually a problem, especially if you adhere to the recommended &lt;em&gt;one class per file&lt;/em&gt; rule. But sometimes circular references are unavoidable. You're in a bind when class 'A' refers to class 'B' and 'B' refers to 'A'. One of them has to be defined first.</source>
          <target state="translated">Обычно это не проблема, особенно если вы придерживаетесь рекомендованного &lt;em&gt;класса для каждого файла&lt;/em&gt; . Но иногда круговые ссылки неизбежны. Вы находитесь в затруднительном положении, когда класс &amp;laquo;A&amp;raquo; относится к классу &amp;laquo;B&amp;raquo;, а &amp;laquo;B&amp;raquo; относится к &amp;laquo;A&amp;raquo;. Один из них должен быть определен первым.</target>
        </trans-unit>
        <trans-unit id="c05a6f671aee7310acf8516389c5116cf909b2b4" translate="yes" xml:space="preserve">
          <source>This list of modules are those that export components, directives, or pipes that component templates in this module reference. In this case, the component is &lt;code&gt;AppComponent&lt;/code&gt;, which references components, directives, or pipes in &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;. A component template can reference another component, directive, or pipe when the referenced class is declared in this module or the class was imported from another module.</source>
          <target state="translated">Этот список модулей - это те, которые экспортируют компоненты, директивы или каналы, которые используются в шаблонах компонентов в этом модуле. В этом случае компонент - это &lt;code&gt;AppComponent&lt;/code&gt; , который ссылается на компоненты, директивы или каналы в &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; . Шаблон компонента может ссылаться на другой компонент, директиву или канал, когда указанный класс объявлен в этом модуле или класс был импортирован из другого модуля.</target>
        </trans-unit>
        <trans-unit id="ee0b3ac2c6c7f7ea1c3093b1d935ac0ccfed0cd9" translate="yes" xml:space="preserve">
          <source>This list of modules are those that export components, directives, or pipes that the component templates in this module reference. In this case, the component is &lt;code&gt;AppComponent&lt;/code&gt;, which references components, directives, or pipes in &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;. A component template can reference another component, directive, or pipe when the referenced class is declared in this module or the class was imported from another module.</source>
          <target state="translated">Это список модулей, которые экспортируют компоненты, директивы или каналы, на которые ссылаются шаблоны компонентов в этом модуле. В этом случае компонентом является &lt;code&gt;AppComponent&lt;/code&gt; , который ссылается на компоненты, директивы или каналы в &lt;code&gt;&lt;a href=&quot;../api/platform-browser/browsermodule&quot;&gt;BrowserModule&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; . Шаблон компонента может ссылаться на другой компонент, директиву или канал, когда указанный класс объявлен в этом модуле или класс был импортирован из другого модуля.</target>
        </trans-unit>
        <trans-unit id="4a9afe5b810e772d3eb663f9b40c1dd4d79aaccb" translate="yes" xml:space="preserve">
          <source>This makes the controller code look a lot more like Angular already. You're all set to actually introduce Angular into the project.</source>
          <target state="translated">В результате код контроллера уже больше похож на &quot;Угловой&quot;.Вы все готовы ввести в проект Angular.</target>
        </trans-unit>
        <trans-unit id="cf52b88eeaa1d49f9b18045164c3a40eae3476c3" translate="yes" xml:space="preserve">
          <source>This makes the provider visible to every class in the application that knows the provider's lookup token, or name.</source>
          <target state="translated">Это делает провайдера видимым для каждого класса в приложении,который знает токен поиска провайдера или его имя.</target>
        </trans-unit>
        <trans-unit id="e402b132534c7c9be62f7464642b0941cc482405" translate="yes" xml:space="preserve">
          <source>This mapping ensures that your library always loads the local copies of the modules it needs.</source>
          <target state="translated">Это отображение гарантирует,что ваша библиотека всегда загружает локальные копии необходимых ей модулей.</target>
        </trans-unit>
        <trans-unit id="31460d71bf9e1b081028cbc8de1171f82e87335e" translate="yes" xml:space="preserve">
          <source>This may only be called once, to set up the common providers for the current test suite on the current platform. If you absolutely need to change the providers, first use &lt;code&gt;resetTestEnvironment&lt;/code&gt;.</source>
          <target state="translated">Это можно вызвать только один раз, чтобы настроить общих провайдеров для текущего набора тестов на текущей платформе. Если вам абсолютно необходимо сменить провайдера, сначала используйте &lt;code&gt;resetTestEnvironment&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="61958d29a3c8058968147c18b0f01bb5c73d67d0" translate="yes" xml:space="preserve">
          <source>This may seem like what the app has been doing all along. Not quite. The &lt;code&gt;AppModule&lt;/code&gt; is loaded when the application starts; that's &lt;em&gt;eager&lt;/em&gt; loading. Now the &lt;code&gt;AdminModule&lt;/code&gt; loads only when the user clicks on a link; that's &lt;em&gt;lazy&lt;/em&gt; loading.</source>
          <target state="translated">Это может показаться тем, что приложение делало все это время. Не совсем. &lt;code&gt;AppModule&lt;/code&gt; загружается при запуске приложения; это &lt;em&gt;нетерпеливая&lt;/em&gt; загрузка. Теперь &lt;code&gt;AdminModule&lt;/code&gt; загружается только тогда, когда пользователь нажимает на ссылку; это &lt;em&gt;ленивая&lt;/em&gt; загрузка.</target>
        </trans-unit>
        <trans-unit id="12bc8c3aa7a62420ea2cb6d2e429c4880c25f7b6" translate="yes" xml:space="preserve">
          <source>This may seem restrictive but it's also fast. An object reference check is fast&amp;mdash;much faster than a deep check for differences&amp;mdash;so Angular can quickly determine if it can skip both the pipe execution and a view update.</source>
          <target state="translated">Это может показаться ограничительным, но это также быстро. Проверка ссылки на объект выполняется быстро - намного быстрее, чем глубокая проверка на различия - поэтому Angular может быстро определить, может ли он пропускать как выполнение канала, так и обновление представления.</target>
        </trans-unit>
        <trans-unit id="5ad5340f87862c854151cf06f5fd6043a1b00b74" translate="yes" xml:space="preserve">
          <source>This means that an NgModule behaves differently depending on whether it's loaded during application start or lazy-loaded later. Neglecting that difference can lead to &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;adverse consequences&lt;/a&gt;.</source>
          <target state="translated">Это означает, что NgModule ведет себя по-разному, в зависимости от того, загружен ли он при запуске приложения или загружен позже. Пренебрежение этой разницей может привести к &lt;a href=&quot;ngmodule-faq#q-why-bad&quot;&gt;неблагоприятным последствиям&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8e6e948c64201b9f8912c19889c92106c85c33fc" translate="yes" xml:space="preserve">
          <source>This means that when you build your production configuration (using &lt;code&gt;ng build --prod&lt;/code&gt; or &lt;code&gt;ng build --configuration=production&lt;/code&gt;), the &lt;code&gt;src/environments/environment.ts&lt;/code&gt; file is replaced with the target-specific version of the file, &lt;code&gt;src/environments/environment.prod.ts&lt;/code&gt;.</source>
          <target state="translated">Это означает, что при &lt;code&gt;ng build --prod&lt;/code&gt; конфигурации (с использованием ng build --prod или &lt;code&gt;ng build --configuration=production&lt;/code&gt; ) файл &lt;code&gt;src/environments/environment.ts&lt;/code&gt; заменяется целевой версией файла, &lt;code&gt;src/environments/environment.prod.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b42c601f1b0de6ca86d93b51f7a4f0d84c91d6c" translate="yes" xml:space="preserve">
          <source>This means you're responsible for putting &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; on your service classes.</source>
          <target state="translated">Это означает, что вы несете ответственность за использование &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; в своих классах обслуживания.</target>
        </trans-unit>
        <trans-unit id="b37292a0b3e74c75b71eca67292a0c0b9392a296" translate="yes" xml:space="preserve">
          <source>This method also updates the value and validity of the control.</source>
          <target state="translated">Этот метод также обновляет значение и достоверность управления.</target>
        </trans-unit>
        <trans-unit id="e754eab77abab498cd7f7a0b1268613ab289c6ed" translate="yes" xml:space="preserve">
          <source>This method does not update the value or validity of the control. Use &lt;a href=&quot;formgroup#addControl&quot;&gt;addControl&lt;/a&gt; instead.</source>
          <target state="translated">Этот метод не обновляет значение или действительность элемента управления. &lt;a href=&quot;formgroup#addControl&quot;&gt;Вместо&lt;/a&gt; этого используйте addControl .</target>
        </trans-unit>
        <trans-unit id="100a8e77d4f74abe1033d79495767430a1882094" translate="yes" xml:space="preserve">
          <source>This method is called by the forms API on initialization to update the form model when values propagate from the view to the model.</source>
          <target state="translated">Этот метод вызывается API форм при инициализации для обновления модели формы при распространении значений из представления в модель.</target>
        </trans-unit>
        <trans-unit id="957d45ae3b8977944714e03589b7ce213ef76cbd" translate="yes" xml:space="preserve">
          <source>This method is called by the forms API to write to the view when programmatic changes from model to view are requested.</source>
          <target state="translated">Этот метод вызывается API форм для записи в представление,когда запрашиваются программные изменения от модели к представлению.</target>
        </trans-unit>
        <trans-unit id="d4c0ca924e5a897aa17682cd4a412c4b9b49e4bc" translate="yes" xml:space="preserve">
          <source>This method is for development and testing only, and is not a supported or secure way of deploying an application.</source>
          <target state="translated">Этот метод предназначен только для разработки и тестирования и не является поддерживаемым или безопасным способом развертывания приложения.</target>
        </trans-unit>
        <trans-unit id="6edd05f81e26ff6f38d68bee1458846ab8ffe7a0" translate="yes" xml:space="preserve">
          <source>This method is supported only in HTML5 mode and only in browsers supporting the HTML5 History API methods such as &lt;code&gt;pushState&lt;/code&gt; and &lt;code&gt;replaceState&lt;/code&gt;. If you need to support older browsers (like Android &amp;lt; 4.0), don't use this method.</source>
          <target state="translated">Этот метод поддерживается только в режиме HTML5 и только в браузерах, поддерживающих методы API истории HTML5, такие как &lt;code&gt;pushState&lt;/code&gt; и &lt;code&gt;replaceState&lt;/code&gt; . Если вам нужна поддержка старых браузеров (например, Android &amp;lt;4.0), не используйте этот метод.</target>
        </trans-unit>
        <trans-unit id="07d75e6c897ca8fced62ff854dd31dff479c1ea8" translate="yes" xml:space="preserve">
          <source>This method is supported only in HTML5 mode and only in browsers supporting the HTML5 History API methods such as &lt;code&gt;pushState&lt;/code&gt; and &lt;code&gt;replaceState&lt;/code&gt;. If you need to support older browsers (like IE9 or Android &amp;lt; 4.0), don't use this method.</source>
          <target state="translated">Этот метод поддерживается только в режиме HTML5 и только в браузерах, поддерживающих методы API истории HTML5, такие как &lt;code&gt;pushState&lt;/code&gt; и &lt;code&gt;replaceState&lt;/code&gt; . Если вам требуется поддержка старых браузеров (например, IE9 или Android &amp;lt;4.0), не используйте этот метод.</target>
        </trans-unit>
        <trans-unit id="582cc9eb2f1253026d9fec705c1a27f27a1e5797" translate="yes" xml:space="preserve">
          <source>This method performs strict checks, and throws an error if you try to set the value of a control that doesn't exist or if you exclude the value of a control.</source>
          <target state="translated">Этот метод выполняет строгую проверку и выбрасывает ошибку,если попытаться установить значение элемента управления,которого не существует,или если исключить значение элемента управления.</target>
        </trans-unit>
        <trans-unit id="38f2789fcaf15e04940002919821b82465849aa8" translate="yes" xml:space="preserve">
          <source>This method returns a &lt;code&gt;Promise&lt;/code&gt; which indicates that the update check has completed successfully, though it does not indicate whether an update was discovered as a result of the check. Even if one is found, the service worker must still successfully download the changed files, which can fail. If successful, the &lt;code&gt;available&lt;/code&gt; event will indicate availability of a new version of the app.</source>
          <target state="translated">Этот метод возвращает &lt;code&gt;Promise&lt;/code&gt; которое указывает, что проверка обновления успешно завершена, хотя и не указывает, было ли обнаружено обновление в результате проверки. Даже если он найден, работнику службы все равно нужно успешно загрузить измененные файлы, что может привести к сбою. В случае успеха &lt;code&gt;available&lt;/code&gt; событие будет указывать на наличие новой версии приложения.</target>
        </trans-unit>
        <trans-unit id="7240a76f2e460d49075a05cb693f1cf044c80345" translate="yes" xml:space="preserve">
          <source>This might seem strange if you're used to dependency injection in strongly typed languages where an interface is the preferred dependency lookup key. However, JavaScript, doesn't have interfaces, so when TypeScript is transpiled to JavaScript, the interface disappears. There is no interface type information left for Angular to find at runtime.</source>
          <target state="translated">Это может показаться странным,если вы привыкли к инъекции зависимостей на сильно типизированных языках,где интерфейс является предпочтительным ключом поиска зависимостей.Однако,JavaScript,не имеет интерфейсов,поэтому при переносе TypeScript на JavaScript,интерфейс исчезает.Информация о типе интерфейса не остаётся для поиска Angular во время выполнения.</target>
        </trans-unit>
        <trans-unit id="cebcf45fa5843285adb17f4750feda2527b4caa3" translate="yes" xml:space="preserve">
          <source>This milestone covers the following:</source>
          <target state="translated">Эта веха охватывает следующее:</target>
        </trans-unit>
        <trans-unit id="0e15ee716458e352dc7390a8a35261c1328b3839" translate="yes" xml:space="preserve">
          <source>This milestone shows you how to configure a special-purpose module called a &lt;em&gt;Routing Module&lt;/em&gt;, which holds your app's routing configuration.</source>
          <target state="translated">На этом этапе показано, как настроить модуль специального назначения, называемый модулем &lt;em&gt;маршрутизации&lt;/em&gt; , который содержит конфигурацию маршрутизации вашего приложения.</target>
        </trans-unit>
        <trans-unit id="01a6160cc6927cc87e97af3ca12f5d7c3e578c05" translate="yes" xml:space="preserve">
          <source>This module defines a &lt;code&gt;routes&lt;/code&gt; object with two routes to the two phone components and a default route for the empty path. It passes the &lt;code&gt;routes&lt;/code&gt; to the &lt;code&gt;RouterModule.forRoot&lt;/code&gt; method which does the rest.</source>
          <target state="translated">Этот модуль определяет объект &lt;code&gt;routes&lt;/code&gt; с двумя маршрутами к двум телефонным компонентам и маршрут по умолчанию для пустого пути. Он передает &lt;code&gt;routes&lt;/code&gt; в метод &lt;code&gt;RouterModule.forRoot&lt;/code&gt; , который делает все остальное.</target>
        </trans-unit>
        <trans-unit id="81b384ca39cda92728b7bd10a1501aede53ebbbb" translate="yes" xml:space="preserve">
          <source>This next example binds an &lt;code&gt;Observable&lt;/code&gt; of message strings (&lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse#message&quot;&gt;message&lt;/a&gt;$&lt;/code&gt;) to a view with the &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; pipe.</source>
          <target state="translated">Этот следующий пример связывает &lt;code&gt;Observable&lt;/code&gt; строк сообщений ( &lt;code&gt;&lt;a href=&quot;../api/common/http/httperrorresponse#message&quot;&gt;message&lt;/a&gt;$&lt;/code&gt; ) с представлением с &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;&lt;/code&gt; каналом.</target>
        </trans-unit>
        <trans-unit id="1f28fed5c95e4e5fc2cf216bb7edd12cd2cdd95f" translate="yes" xml:space="preserve">
          <source>This one root component is usually called &lt;code&gt;AppComponent&lt;/code&gt; and is in the root module's &lt;code&gt;bootstrap&lt;/code&gt; array.</source>
          <target state="translated">Этот один корневой компонент обычно называется &lt;code&gt;AppComponent&lt;/code&gt; и находится в массиве &lt;code&gt;bootstrap&lt;/code&gt; корневого модуля .</target>
        </trans-unit>
        <trans-unit id="553c357233905d7a357b67f87ff6741c54ba7d0c" translate="yes" xml:space="preserve">
          <source>This option can take one of the following &lt;a href=&quot;https://angular.io/cli/cli/generate#schematic-commands&quot;&gt;sub-commands&lt;/a&gt;:</source>
          <target state="translated">Эта опция может принимать одну из следующих &lt;a href=&quot;https://angular.io/cli/cli/generate#schematic-commands&quot;&gt;подкоманд&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="7e2bdd9bc4821ec6e25c48f5020fa352d5d592c1" translate="yes" xml:space="preserve">
          <source>This option is intended to validate the &lt;code&gt;.metadata.json&lt;/code&gt; files emitted for bundling with an &lt;code&gt;npm&lt;/code&gt; package. The validation is strict and can emit errors for metadata that would never produce an error when used by the template compiler. You can choose to suppress the error emitted by this option for an exported symbol by including &lt;code&gt;@dynamic&lt;/code&gt; in the comment documenting the symbol.</source>
          <target state="translated">Этот параметр предназначен для проверки файлов &lt;code&gt;.metadata.json&lt;/code&gt; ,отправляемых для связывания с пакетом &lt;code&gt;npm&lt;/code&gt; . Проверка является строгой и может выдавать ошибки для метаданных, которые никогда не приведут к ошибке при использовании компилятором шаблона. Вы можете подавить ошибку, создаваемую этой опцией для экспортируемого символа, включив &lt;code&gt;@dynamic&lt;/code&gt; в комментарий, документирующий символ.</target>
        </trans-unit>
        <trans-unit id="d6eab3c2994a6a17d4115d07f1dae680ac2ec26d" translate="yes" xml:space="preserve">
          <source>This option is only available if application URLs look like normal web URLs without hashes (#) in the middle.</source>
          <target state="translated">Эта опция доступна только в том случае,если URL приложения выглядят как обычные веб-адреса без хэшей (#)посередине.</target>
        </trans-unit>
        <trans-unit id="8136dad883434011e60763326dfd8b6bf0a135fa" translate="yes" xml:space="preserve">
          <source>This optional property enables you to configure how the service worker handles navigation requests:</source>
          <target state="translated">Это дополнительное свойство позволяет настроить,как сервисный работник будет обрабатывать запросы на навигацию:</target>
        </trans-unit>
        <trans-unit id="b706956040eab679c0d00e95b8bd1fb93cd1e1bf" translate="yes" xml:space="preserve">
          <source>This optional section enables you to specify a custom list of URLs that will be redirected to the index file.</source>
          <target state="translated">Этот необязательный раздел позволяет указать пользовательский список URL-адресов,которые будут перенаправлены в индексный файл.</target>
        </trans-unit>
        <trans-unit id="d49647d5cde74d419f8b7a1440d72e1fa1cdb7e9" translate="yes" xml:space="preserve">
          <source>This page answers the questions many developers ask about NgModule design and implementation.</source>
          <target state="translated">Эта страница отвечает на вопросы многих разработчиков о проектировании и реализации NgModule.</target>
        </trans-unit>
        <trans-unit id="e470076e6470a706c5e7519008e46a929c297415" translate="yes" xml:space="preserve">
          <source>This page covered how to use the &lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt; package to incrementally upgrade existing AngularJS apps at your own pace and without impeding further development of the app for the duration of the upgrade process.</source>
          <target state="translated">На этой странице рассказывалось о том, как использовать пакет &lt;a href=&quot;../api/upgrade/static&quot;&gt;обновления / статический&lt;/a&gt; пакет для постепенного обновления существующих приложений AngularJS в своем собственном темпе и не препятствовать дальнейшей разработке приложения в течение всего процесса обновления.</target>
        </trans-unit>
        <trans-unit id="81be0c6f770103c818ad9a59d216fef97dd57b87" translate="yes" xml:space="preserve">
          <source>This page covered how to:</source>
          <target state="translated">На этой странице говорилось о том,как это сделать:</target>
        </trans-unit>
        <trans-unit id="c3d2f38bcda77f3d0e583e4cbd59a23c93e26dd3" translate="yes" xml:space="preserve">
          <source>This page covers some aspects of TypeScript configuration and the TypeScript environment that are important to Angular developers, including details about the following files:</source>
          <target state="translated">На этой странице рассматриваются некоторые аспекты настройки TypeScript и окружения TypeScript,которые важны для разработчиков Angular,включая подробности о следующих файлах:</target>
        </trans-unit>
        <trans-unit id="dc6463bb109d0d9d7a3485b00e656aa5ad4447d1" translate="yes" xml:space="preserve">
          <source>This page demonstrates building a simple &lt;em&gt;appHighlight&lt;/em&gt; attribute directive to set an element's background color when the user hovers over that element. You can apply it like this:</source>
          <target state="translated">На этой странице демонстрируется создание простой директивы атрибута &lt;em&gt;appHighlight&lt;/em&gt; для установки цвета фона элемента, когда пользователь наводит курсор на этот элемент. Вы можете применить это так:</target>
        </trans-unit>
        <trans-unit id="f41f995aa12a74f7c35870947d8b3dfcd851015a" translate="yes" xml:space="preserve">
          <source>This page describes Angular's built-in protections against common web-application vulnerabilities and attacks such as cross-site scripting attacks. It doesn't cover application-level security, such as authentication (&lt;em&gt;Who is this user?&lt;/em&gt;) and authorization (&lt;em&gt;What can this user do?&lt;/em&gt;).</source>
          <target state="translated">На этой странице описана встроенная защита Angular от распространенных уязвимостей веб-приложений и таких атак, как межсайтовые скриптовые атаки. Он не охватывает безопасность на уровне приложения, такую ​​как аутентификация ( &lt;em&gt;Кто этот пользователь?&lt;/em&gt; ) И авторизация ( &lt;em&gt;Что может сделать этот пользователь?&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="b0a26a5d944df815f572ce97ca9af1ebb2bdb5a7" translate="yes" xml:space="preserve">
          <source>This page describes how to load and apply these component styles.</source>
          <target state="translated">На этой странице описано,как загрузить и применить эти стили компонентов.</target>
        </trans-unit>
        <trans-unit id="9ea2990707bfb1eb329f12d6cb790431a215270f" translate="yes" xml:space="preserve">
          <source>This page describes the most useful Angular testing features.</source>
          <target state="translated">На этой странице описаны наиболее полезные функции углового тестирования.</target>
        </trans-unit>
        <trans-unit id="09ae81e8cd8b8d7fc27be03d544055e093469b55" translate="yes" xml:space="preserve">
          <source>This page discusses best practices for designing Angular applications that work well for all users, including those who rely on assistive technologies.</source>
          <target state="translated">На этой странице обсуждаются передовые методы проектирования Угловых приложений,которые хорошо работают для всех пользователей,включая тех,кто полагается на вспомогательные технологии.</target>
        </trans-unit>
        <trans-unit id="670a5a082b047a72ce1a558bd250325e58e09d59" translate="yes" xml:space="preserve">
          <source>This page discusses build-specific configuration options for Angular projects.</source>
          <target state="translated">На этой странице обсуждаются специальные варианты конфигурации для угловых проектов.</target>
        </trans-unit>
        <trans-unit id="e05b95dc7d3d7d081939018409b02519ccacc29a" translate="yes" xml:space="preserve">
          <source>This page guides you through creating the shopping cart in three phases:</source>
          <target state="translated">Эта страница поможет вам создать корзину в три этапа:</target>
        </trans-unit>
        <trans-unit id="cbfa8125c3023f0e5a452262dd4b80eb0950ad8c" translate="yes" xml:space="preserve">
          <source>This page is a comprehensive technical reference to the Angular template language. It explains basic principles of the template language and describes most of the syntax that you'll encounter elsewhere in the documentation.</source>
          <target state="translated">Эта страница представляет собой всеобъемлющую техническую ссылку на язык шаблонов Angular.Она объясняет основные принципы языка шаблонов и описывает большую часть синтаксиса,с которым вы столкнетесь в других местах документации.</target>
        </trans-unit>
        <trans-unit id="7fad648d853b5ed4d555cb38fbfbacd9ba7992b6" translate="yes" xml:space="preserve">
          <source>This page is a reference for deploying and supporting production apps that use the Angular service worker. It explains how the Angular service worker fits into the larger production environment, the service worker's behavior under various conditions, and available resources and fail-safes.</source>
          <target state="translated">Эта страница является ссылкой для развертывания и поддержки производственных приложений,которые используют работник службы Angular.Она объясняет,как сотрудник службы Angular вписывается в более крупную производственную среду,поведение сотрудника службы при различных условиях,а также доступные ресурсы и средства защиты от сбоев.</target>
        </trans-unit>
        <trans-unit id="be3ec6216875616431f7d6ed1137be9c33cace38" translate="yes" xml:space="preserve">
          <source>This page provides a conceptual overview of a dependency injection technique that is recommended for library developers. Designing your library with &lt;em&gt;lightweight injection tokens&lt;/em&gt; helps optimize the bundle size of client applications that use your library.</source>
          <target state="translated">На этой странице представлен концептуальный обзор техники внедрения зависимостей, рекомендованной разработчикам библиотек. Разработка вашей библиотеки с использованием &lt;em&gt;легких токенов внедрения&lt;/em&gt; помогает оптимизировать размер пакета клиентских приложений, использующих вашу библиотеку.</target>
        </trans-unit>
        <trans-unit id="5d3133b3ab2dc9616d7ee04b4ceb9f767579da99" translate="yes" xml:space="preserve">
          <source>This page provides a conceptual overview of how you can create and publish new libraries to extend Angular functionality.</source>
          <target state="translated">На этой странице представлен концептуальный обзор того,как можно создавать и публиковать новые библиотеки для расширения функциональности Angular.</target>
        </trans-unit>
        <trans-unit id="97c20e865f128e08c87e8b02ca1209e92134e457" translate="yes" xml:space="preserve">
          <source>This page shows how to validate user input in the UI and display useful validation messages using both reactive and template-driven forms. It assumes some basic knowledge of the two forms modules.</source>
          <target state="translated">На этой странице показано,как проверить пользовательский ввод в пользовательском интерфейсе и отобразить полезные сообщения о проверке с использованием как реактивных,так и шаблонных форм.Она предполагает некоторые базовые знания двух модулей форм.</target>
        </trans-unit>
        <trans-unit id="5d4c0327323a7a67f27b56ff84bda976d2f25fa4" translate="yes" xml:space="preserve">
          <source>This page shows you how to build a simple form from scratch. Along the way you'll learn how to:</source>
          <target state="translated">На этой странице показано,как построить простую форму с нуля.По пути вы научитесь:</target>
        </trans-unit>
        <trans-unit id="809f471c9fda21049d71c0885d6f8ee1429911d6" translate="yes" xml:space="preserve">
          <source>This particular &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; call returns an &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt;; that is, &quot;&lt;em&gt;an observable of hero arrays&lt;/em&gt;&quot;. In practice, it will only return a single hero array.</source>
          <target state="translated">Этот конкретный &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#get&quot;&gt;HttpClient.get()&lt;/a&gt;&lt;/code&gt; возвращает &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt; ; то есть &amp;laquo; &lt;em&gt;наблюдаемый массив героев&lt;/em&gt; &amp;raquo;. На практике он вернет только один массив героев.</target>
        </trans-unit>
        <trans-unit id="d836ca04f6cff950392c8ae7f7d0cf1a60a94c96" translate="yes" xml:space="preserve">
          <source>This particular test suite supplies a minimal mock of the &lt;code&gt;UserService&lt;/code&gt; that satisfies the needs of the &lt;code&gt;WelcomeComponent&lt;/code&gt; and its tests:</source>
          <target state="translated">Этот конкретный набор тестов предоставляет минимальный макет &lt;code&gt;UserService&lt;/code&gt; , который удовлетворяет требованиям &lt;code&gt;WelcomeComponent&lt;/code&gt; и его тестов:</target>
        </trans-unit>
        <trans-unit id="ff6ecdb8628c90cfa56e0ff26fbdce1243318d07" translate="yes" xml:space="preserve">
          <source>This pipe definition reveals the following key points:</source>
          <target state="translated">Это определение трубы раскрывает следующие ключевые моменты:</target>
        </trans-unit>
        <trans-unit id="9c06cdda191efa55a95c5ebbcd3348ce80c0d189" translate="yes" xml:space="preserve">
          <source>This platform has to be included in any other platform</source>
          <target state="translated">Эта платформа должна быть включена в любую другую платформу.</target>
        </trans-unit>
        <trans-unit id="1a66dd83805fb99c52388b0a549137c596348fd3" translate="yes" xml:space="preserve">
          <source>This produces the following error:</source>
          <target state="translated">Это приводит к следующей ошибке:</target>
        </trans-unit>
        <trans-unit id="cc28ea5e9b1a6b51e4c29ff84265e5f10b52e574" translate="yes" xml:space="preserve">
          <source>This registers Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; providers globally.</source>
          <target state="translated">Это регистрирует поставщиков &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; Angular по всему миру.</target>
        </trans-unit>
        <trans-unit id="40b2f3a8cf72659eb5e60961a2342494b2510413" translate="yes" xml:space="preserve">
          <source>This registers a drop-in replacement for the &lt;code&gt;$location&lt;/code&gt; provider in AngularJS. Once registered, all navigation, routing broadcast messages, and any necessary digest cycles in AngularJS triggered during navigation are handled by Angular. This gives you a single way to navigate within both sides of your hybrid application consistently.</source>
          <target state="translated">Это регистрирует замену для поставщика &lt;code&gt;$location&lt;/code&gt; в AngularJS. После регистрации все навигационные, широковещательные сообщения и любые необходимые циклы дайджеста в AngularJS, запускаемые во время навигации, обрабатываются Angular. Это дает вам единый способ последовательной навигации по обеим сторонам гибридного приложения.</target>
        </trans-unit>
        <trans-unit id="768b48e740a696bfc0705b3b4a88ffb9387d0941" translate="yes" xml:space="preserve">
          <source>This removal has no impact on CLI users, unless they modified their build configuration to explicitly consume these code distributions.</source>
          <target state="translated">Это удаление никак не повлияет на пользователей CLI,если только они не изменят свою конфигурацию сборки для явного потребления этих дистрибутивов кода.</target>
        </trans-unit>
        <trans-unit id="06f56de558de0a575487e683fea999edf392ee43" translate="yes" xml:space="preserve">
          <source>This request passes the &lt;code&gt;heroesURL&lt;/code&gt; as the first parameter and the callback function name as the second parameter. The response is wrapped in the callback function, which takes the observables returned by the JSONP method and pipes them through to the error handler.</source>
          <target state="translated">Этот запрос передает &lt;code&gt;heroesURL&lt;/code&gt; в качестве первого параметра и имя функции обратного вызова в качестве второго параметра. Ответ обернут в функцию обратного вызова, которая берет наблюдаемые значения, возвращенные методом JSONP, и передает их через обработчик ошибок.</target>
        </trans-unit>
        <trans-unit id="d9fd7c2c4a20b1de98c590fa48930235dc6aba0d" translate="yes" xml:space="preserve">
          <source>This route redirects a URL that fully matches the empty path to the route whose path is &lt;code&gt;'/dashboard'&lt;/code&gt;.</source>
          <target state="translated">Этот маршрут перенаправляет URL-адрес, который полностью совпадает с пустым путем к маршруту, путь которого равен &lt;code&gt;'/dashboard'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c41f8a018f7563801e156030ed8a8f8ca194ad0" translate="yes" xml:space="preserve">
          <source>This rule is essential to Angular's &quot;unidirectional data flow&quot; policy. You should never worry that reading a component value might change some other displayed value. The view should be stable throughout a single rendering pass.</source>
          <target state="translated">Это правило необходимо для политики &quot;однонаправленного потока данных&quot; компании Angular.Вы никогда не должны беспокоиться о том,что чтение значения компонента может изменить какое-то другое отображаемое значение.Вид должен быть стабильным на протяжении всего одного прохода рендеринга.</target>
        </trans-unit>
        <trans-unit id="57892addca2408cf0e87807e6475ac5695bf2874" translate="yes" xml:space="preserve">
          <source>This sample app recreates the heroes feature in the &quot;Services&quot; section of the &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;Tour of Heroes tutorial&lt;/a&gt;, and reuses much of the code from the .</source>
          <target state="translated">Этот пример приложения воссоздает функцию героев в разделе &amp;laquo;Услуги&amp;raquo; &lt;a href=&quot;../tutorial/toh-pt4&quot;&gt;учебного пособия Tour of Heroes&lt;/a&gt; и повторно использует большую часть кода из.</target>
        </trans-unit>
        <trans-unit id="0d1e4a2f1c53200691565434ab456d518f0bf3a4" translate="yes" xml:space="preserve">
          <source>This sample file is easy to translate without a special editor or knowledge of French.</source>
          <target state="translated">Этот файл-образец легко перевести без специального редактора или знания французского языка.</target>
        </trans-unit>
        <trans-unit id="480408f47c676f8c57b3cde5a055d6686d241608" translate="yes" xml:space="preserve">
          <source>This scenario causes your app to create a new instance every time, instead of using the singleton.</source>
          <target state="translated">Этот сценарий заставляет ваше приложение каждый раз создавать новый экземпляр вместо использования одной кнопки.</target>
        </trans-unit>
        <trans-unit id="99aa2e43a5383e16a847762330ebaee6bfd37ca5" translate="yes" xml:space="preserve">
          <source>This scoping restriction is a &lt;strong&gt;&lt;em&gt;styling modularity feature&lt;/em&gt;&lt;/strong&gt;.</source>
          <target state="translated">Это ограничение объема является &lt;strong&gt;&lt;em&gt;модульным элементом стиля&lt;/em&gt;&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="31d68c7991b2366acf1e70e15d44815dc09ecff1" translate="yes" xml:space="preserve">
          <source>This script can be used both to deactivate &lt;code&gt;@angular/service-worker&lt;/code&gt; as well as any other Service Workers which might have been served in the past on your site.</source>
          <target state="translated">Этот сценарий можно использовать как для деактивации &lt;code&gt;@angular/service-worker&lt;/code&gt; так и для любых других сервисных работников, которые могли ранее обслуживаться на вашем сайте.</target>
        </trans-unit>
        <trans-unit id="c18fae7524b94c2e1854507242de01f07367e013" translate="yes" xml:space="preserve">
          <source>This section about &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; has its own . The following subsections highlight key points in the sample app.</source>
          <target state="translated">Этот раздел о &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; имеет свои собственные. В следующих подразделах выделены ключевые моменты в примере приложения.</target>
        </trans-unit>
        <trans-unit id="b64223a794713879607f46b9296695b6693dcfef" translate="yes" xml:space="preserve">
          <source>This section assumes you are familiar with &lt;a href=&quot;https://docs.bazel.build&quot;&gt;Bazel&lt;/a&gt;.</source>
          <target state="translated">В этом разделе предполагается, что вы знакомы с &lt;a href=&quot;https://docs.bazel.build&quot;&gt;Bazel&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="61775d2ada3e1aaca95806012a1cae0e038b820d" translate="yes" xml:space="preserve">
          <source>This section contains a complete list all of the currently deprecated CLI flags.</source>
          <target state="translated">Этот раздел содержит полный список всех устаревших в настоящее время CLI-флагов.</target>
        </trans-unit>
        <trans-unit id="11a0d4f001f44cf92c4d038ced8939573bb0e86d" translate="yes" xml:space="preserve">
          <source>This section contains a complete list all of the currently-deprecated APIs, with details to help you plan your migration to a replacement.</source>
          <target state="translated">Этот раздел содержит полный список всех имеющихся в настоящее время API с подробной информацией,которая поможет вам спланировать переход на замену.</target>
        </trans-unit>
        <trans-unit id="f5235be074b4aa0d4b2e76c1864190fa474d6ead" translate="yes" xml:space="preserve">
          <source>This section contains default build target options, used when no named alternative configuration is specified. See &lt;a href=&quot;workspace-config#default-build-targets&quot;&gt;Default build targets&lt;/a&gt; below.</source>
          <target state="translated">Этот раздел содержит параметры целевого объекта сборки по умолчанию, которые используются, если не указана именованная альтернативная конфигурация. См. &lt;a href=&quot;workspace-config#default-build-targets&quot;&gt;Стандартные цели сборки&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="a6f4ac6b1d629df1dd4126322ebc082c11c00de6" translate="yes" xml:space="preserve">
          <source>This section covers changes you may have make to the server or to files deployed to the server.</source>
          <target state="translated">В этом разделе рассматриваются изменения,которые вы можете внести в сервер или в файлы,развернутые на сервере.</target>
        </trans-unit>
        <trans-unit id="b00ef0591ba8184696f1413d52cca1b7afa05294" translate="yes" xml:space="preserve">
          <source>This section covers changes you may have to make to the server or to files deployed on the server.</source>
          <target state="translated">В этом разделе рассматриваются изменения,которые,возможно,придется внести на сервер или в файлы,развернутые на сервере.</target>
        </trans-unit>
        <trans-unit id="1b184253cc42d7415bb50e2b1f1ae4bfa4d58e73" translate="yes" xml:space="preserve">
          <source>This section defines and names alternative configurations for different intended destinations. It contains a section for each named configuration, which sets the default options for that intended environment. See &lt;a href=&quot;workspace-config#build-configs&quot;&gt;Alternate build configurations&lt;/a&gt; below.</source>
          <target state="translated">Этот раздел определяет и называет альтернативные конфигурации для различных предполагаемых мест назначения. Он содержит раздел для каждой именованной конфигурации, который устанавливает параметры по умолчанию для этой предполагаемой среды. См. &lt;a href=&quot;workspace-config#build-configs&quot;&gt;Альтернативные конфигурации сборки&lt;/a&gt; ниже.</target>
        </trans-unit>
        <trans-unit id="e7378faaab25e8cea0f89eb0420acd35173d6d0c" translate="yes" xml:space="preserve">
          <source>This section defines the policy by which matching requests will be cached.</source>
          <target state="translated">Этот раздел определяет политику,с помощью которой совпадающие запросы будут кэшироваться.</target>
        </trans-unit>
        <trans-unit id="085d9b2381ce33b95badee4ece65c04252ae8b07" translate="yes" xml:space="preserve">
          <source>This section demonstrates a service worker in action, using an example application.</source>
          <target state="translated">В этом разделе на примере приложения демонстрируется работа сервисного работника в действии.</target>
        </trans-unit>
        <trans-unit id="b0beb9d185cb05154e1dd17453c7c97560febcea" translate="yes" xml:space="preserve">
          <source>This section demonstrates how to write providers that deliver dependent services.</source>
          <target state="translated">В этом разделе показано,как писать провайдерам,предоставляющим зависимые услуги.</target>
        </trans-unit>
        <trans-unit id="eb2c533b5e2645aa61c4b0e279f37acd6ba4506b" translate="yes" xml:space="preserve">
          <source>This section describes how to add a single form control. In the example, the user enters their name into an input field, captures that input value, and displays the current value of the form control element.</source>
          <target state="translated">В этом разделе описано,как добавить управление одной формой.В примере,пользователь вводит свое имя в поле ввода,захватывает это входное значение и отображает текущее значение элемента управления формой.</target>
        </trans-unit>
        <trans-unit id="8df9a0125bfce0a631c00cf027d6c0c9e9c21223" translate="yes" xml:space="preserve">
          <source>This section describes how to limit the scope of the beginning and ending &lt;code&gt;ElementInjector&lt;/code&gt; using the visibility decorators &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt;, and &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">В этом разделе описывается, как ограничить область начала и окончания &lt;code&gt;ElementInjector&lt;/code&gt; , используя декораторы видимости &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; , &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93a1f837d6690ccc5052bae1311690c80cb118fa" translate="yes" xml:space="preserve">
          <source>This section describes some techniques for doing that.</source>
          <target state="translated">В этом разделе описаны некоторые техники для этого.</target>
        </trans-unit>
        <trans-unit id="7d51845aea280551e7377855a04b80ead1d2f4bd" translate="yes" xml:space="preserve">
          <source>This section describes the resources to cache, broken up into the following groups:</source>
          <target state="translated">В этом разделе описаны ресурсы для кэширования,разбитые на следующие группы:</target>
        </trans-unit>
        <trans-unit id="69a1ff0385a87975f95ae5a798ec38b6e1fa9506" translate="yes" xml:space="preserve">
          <source>This section describes the resources to cache, broken up into three groups.</source>
          <target state="translated">В этом разделе описаны ресурсы для кэширования,разбитые на три группы.</target>
        </trans-unit>
        <trans-unit id="7164aeb8b556a0ff400bdf3da7f1df7d1f517925" translate="yes" xml:space="preserve">
          <source>This section describes two techniques for minimizing the setup. Use them, alone or in combination, to stay focused on testing the primary component.</source>
          <target state="translated">В этом разделе описаны два метода минимизации настройки.Используйте их по отдельности или в комбинации,чтобы сосредоточиться на тестировании основного компонента.</target>
        </trans-unit>
        <trans-unit id="25d342d94221065f56ba9567318ef23b976b78cb" translate="yes" xml:space="preserve">
          <source>This section describes two techniques for minimizing the setup. Use them, alone or in combination, to stay focused on the testing the primary component.</source>
          <target state="translated">В этом разделе описаны два метода минимизации настройки.Используйте их по отдельности или в комбинации,чтобы не отвлекаться на тестирование основного компонента.</target>
        </trans-unit>
        <trans-unit id="4b6eb3ab67768fa1db1718443a20d6bef34cf012" translate="yes" xml:space="preserve">
          <source>This section enables you to pass any data you want that describes this particular version of the app. The &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; service includes that data in the update notifications. Many apps use this section to provide additional information for the display of UI popups, notifying users of the available update.</source>
          <target state="translated">Этот раздел позволяет вам передавать любые данные, которые вы хотите описать эту конкретную версию приложения. Служба &lt;code&gt;&lt;a href=&quot;../api/service-worker/swupdate&quot;&gt;SwUpdate&lt;/a&gt;&lt;/code&gt; включает эти данные в уведомления об обновлениях. Многие приложения используют этот раздел, чтобы предоставить дополнительную информацию для отображения всплывающих окон пользовательского интерфейса, уведомляя пользователей о доступном обновлении.</target>
        </trans-unit>
        <trans-unit id="47fc123a3ed1f0d231e027d8288971ed0c72aa21" translate="yes" xml:space="preserve">
          <source>This section explores many of the features of dependency injection (DI) in Angular.</source>
          <target state="translated">В этом разделе рассматриваются многие из особенностей инъекции зависимостей (DI)в угловой.</target>
        </trans-unit>
        <trans-unit id="4384b75486bddedfea304c2a90535f59084acc2a" translate="yes" xml:space="preserve">
          <source>This section guides you through adding a custom strategy that only preloads routes whose &lt;code&gt;data.preload&lt;/code&gt; flag is set to &lt;code&gt;true&lt;/code&gt;. Recall that you can add anything to the &lt;code&gt;data&lt;/code&gt; property of a route.</source>
          <target state="translated">В этом разделе представлены инструкции по добавлению настраиваемой стратегии, которая предварительно загружает только маршруты, для которых флаг &lt;code&gt;data.preload&lt;/code&gt; установлен в значение &lt;code&gt;true&lt;/code&gt; . Напомним , что вы можете добавить что - либо к &lt;code&gt;data&lt;/code&gt; свойством маршрута.</target>
        </trans-unit>
        <trans-unit id="d4ab163f1040a173c8f1fee4855a987c614055d5" translate="yes" xml:space="preserve">
          <source>This section guides you through extending the crisis center with some new administrative features. Start by adding a new feature module named &lt;code&gt;AdminModule&lt;/code&gt;.</source>
          <target state="translated">В этом разделе представлены инструкции по расширению кризисного центра некоторыми новыми административными функциями. Начните с добавления нового функционального модуля с именем &lt;code&gt;AdminModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aa94115b584195aa264c16e4fb5711861e3ddede" translate="yes" xml:space="preserve">
          <source>This section guides you through migrating the &lt;code&gt;Hero&lt;/code&gt; routes to new URLs. The &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; checks for redirects in your configuration before navigating, so each redirect is triggered when needed. To support this change, add redirects from the old routes to the new routes in the &lt;code&gt;heroes-routing.module&lt;/code&gt;.</source>
          <target state="translated">В этом разделе вы узнаете, как перенести маршруты &lt;code&gt;Hero&lt;/code&gt; на новые URL-адреса. В &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; проверяет переадресовывает в конфигурации до навигации, так что каждый редирект срабатывает при необходимости. Чтобы поддержать это изменение, добавьте перенаправления со старых маршрутов на новые маршруты в &lt;code&gt;heroes-routing.module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fbce57e38fce3ed83994d74968cf78f64dac167" translate="yes" xml:space="preserve">
          <source>This section guides you through the following:</source>
          <target state="translated">Этот раздел проведет вас через следующее:</target>
        </trans-unit>
        <trans-unit id="e327b6a9a7d25aeebecb0e4a2e3d8dd80bb60d4b" translate="yes" xml:space="preserve">
          <source>This section guides you through updating the &lt;code&gt;CrisisCenterModule&lt;/code&gt; to load lazily by default and use the &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; strategy to load all lazy loaded modules.</source>
          <target state="translated">В этом разделе представлены инструкции по обновлению &lt;code&gt;CrisisCenterModule&lt;/code&gt; для ленивой загрузки по умолчанию и использование стратегии &lt;code&gt;&lt;a href=&quot;../api/router/preloadallmodules&quot;&gt;PreloadAllModules&lt;/a&gt;&lt;/code&gt; для загрузки всех лениво загружаемых модулей.</target>
        </trans-unit>
        <trans-unit id="a01d00f37cdecb7bf80e6521a92c1f8871d11b3b" translate="yes" xml:space="preserve">
          <source>This section has covered the following:</source>
          <target state="translated">В этом разделе было рассмотрено следующее:</target>
        </trans-unit>
        <trans-unit id="25546f650c09fba6868c4a94f07eeaca55c8fedb" translate="yes" xml:space="preserve">
          <source>This section introduces the basic procedure for configuring a lazy-loaded route. For a step-by-step example, see the &lt;a href=&quot;lazy-loading-ngmodules#step-by-step&quot;&gt;step-by-step setup&lt;/a&gt; section on this page.</source>
          <target state="translated">В этом разделе представлена ​​основная процедура настройки маршрута с отложенной загрузкой. Пошаговый пример см. В разделе &lt;a href=&quot;lazy-loading-ngmodules#step-by-step&quot;&gt;пошаговой настройки&lt;/a&gt; на этой странице.</target>
        </trans-unit>
        <trans-unit id="3a63d68a98a00a26a92cce922c9931db461a38cf" translate="yes" xml:space="preserve">
          <source>This section is an introduction to the common built-in structural directives:</source>
          <target state="translated">Этот раздел является введением в общие встроенные структурные директивы:</target>
        </trans-unit>
        <trans-unit id="c4d630efe539af7ec5dfcdfbcacacc0d6a4f3dbc" translate="yes" xml:space="preserve">
          <source>This section lists all of the currently-deprecated features, which includes template syntax, configuration options, and any other deprecations not listed in the &lt;a href=&quot;deprecations#deprecated-apis&quot;&gt;Deprecated APIs&lt;/a&gt; section above. It also includes deprecated API usage scenarios or API combinations, to augment the information above.</source>
          <target state="translated">В этом разделе перечислены все устаревшие функции, в том числе синтаксис шаблона, параметры конфигурации и любые другие устаревшие функции, не перечисленные в разделе &amp;laquo; &lt;a href=&quot;deprecations#deprecated-apis&quot;&gt;Устаревшие API&lt;/a&gt; &amp;raquo; выше. Он также включает в себя устаревшие сценарии использования API или комбинации API, чтобы дополнить информацию выше.</target>
        </trans-unit>
        <trans-unit id="7cae31034c8a2571577d2c3c5b7550e76da38a59" translate="yes" xml:space="preserve">
          <source>This section provides example of both kinds of type-guard property.</source>
          <target state="translated">В данном разделе приведен пример обоих типов свойств типа &quot;Охранник&quot;.</target>
        </trans-unit>
        <trans-unit id="306aadf682fc11264f3cfeb1c732892c12664c75" translate="yes" xml:space="preserve">
          <source>This section shows how to animate elements entering or leaving a page.</source>
          <target state="translated">В этом разделе показано,как анимировать элементы,входящие или покидающие страницу.</target>
        </trans-unit>
        <trans-unit id="3b6e09c67f8a39342ff4c0257fcd5cc67bae2f2c" translate="yes" xml:space="preserve">
          <source>This section shows how to create asynchronous validators. It assumes some basic knowledge of creating &lt;a href=&quot;form-validation#custom-validators&quot;&gt;custom validators&lt;/a&gt;.</source>
          <target state="translated">В этом разделе показано, как создавать асинхронные валидаторы. Это предполагает некоторые базовые знания по созданию &lt;a href=&quot;form-validation#custom-validators&quot;&gt;пользовательских валидаторов&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1876bae15f4c669767ab3331f67eef88c5960e8" translate="yes" xml:space="preserve">
          <source>This section shows how to perform cross field validation. It assumes some basic knowledge of creating custom validators.</source>
          <target state="translated">В этом разделе показано,как выполнять межполевую проверку.Он предполагает некоторые базовые знания о создании пользовательских валидаторов.</target>
        </trans-unit>
        <trans-unit id="d5c59841ebf0b19060f6d7b48397f23337988937" translate="yes" xml:space="preserve">
          <source>This section shows you how refactor the app into different feature modules, import them into the main module and navigate among them.</source>
          <target state="translated">В этом разделе показано,как рефакторизовать приложение в различные функциональные модули,импортировать их в основной модуль и перемещаться между ними.</target>
        </trans-unit>
        <trans-unit id="75b7c3faa674491b569ef3f7a4a266fb1b70aa3c" translate="yes" xml:space="preserve">
          <source>This section shows you how to add child routes and use relative routing in your app.</source>
          <target state="translated">В этом разделе показано,как добавлять дочерние маршруты и использовать относительную маршрутизацию в приложении.</target>
        </trans-unit>
        <trans-unit id="40c08e782b8b4dce59c05abd346b382ec356f9f6" translate="yes" xml:space="preserve">
          <source>This section shows you how to add some &lt;a href=&quot;animations&quot;&gt;animations&lt;/a&gt; to the &lt;code&gt;HeroDetailComponent&lt;/code&gt;.</source>
          <target state="translated">В этом разделе показано, как добавить &lt;a href=&quot;animations&quot;&gt;анимацию&lt;/a&gt; в &lt;code&gt;HeroDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28698d05d33f5b1671f713ab414eca9161933dd5" translate="yes" xml:space="preserve">
          <source>This section shows you how to organize the crisis center to conform to the following recommended pattern for Angular applications:</source>
          <target state="translated">В этом разделе показано,как организовать кризисный центр в соответствии со следующим рекомендуемым образцом для Угловых применений:</target>
        </trans-unit>
        <trans-unit id="6e5105772fe1e30775a6f76ca44803f4e4116d09" translate="yes" xml:space="preserve">
          <source>This section shows you how to use the HTTP client to retrieve shipping prices from an external file.</source>
          <target state="translated">Этот раздел показывает вам,как использовать HTTP-клиент для получения стоимости доставки из внешнего файла.</target>
        </trans-unit>
        <trans-unit id="e00ccb32c33d8d2804037de8c12b3f968f52ceea" translate="yes" xml:space="preserve">
          <source>This section shows you how to use the cart service to display the products in the cart.</source>
          <target state="translated">В этом разделе показано,как использовать службу корзины для отображения продуктов в корзине.</target>
        </trans-unit>
        <trans-unit id="8555832b3f593de35864e26800451467378353f6" translate="yes" xml:space="preserve">
          <source>This section takes inventory of the most useful Angular testing features and summarizes what they do.</source>
          <target state="translated">В этом разделе приводится перечень наиболее полезных функций углового тестирования и краткая информация о том,что они делают.</target>
        </trans-unit>
        <trans-unit id="e477486420bece3d0d8e61799151b739e8e6daf2" translate="yes" xml:space="preserve">
          <source>This section walks you through adding a form-based checkout feature to collect user information as part of checkout.</source>
          <target state="translated">Этот раздел проводит вас через добавление функции оформления заказа на основе форм для сбора информации о пользователе в рамках оформления заказа.</target>
        </trans-unit>
        <trans-unit id="87e4800653dc5aadd7144d1a9d30485a59601d33" translate="yes" xml:space="preserve">
          <source>This section walks you through using the cart service to add a product to the cart with a &quot;Buy&quot; button.</source>
          <target state="translated">Этот раздел проведет вас через службу корзины,чтобы добавить продукт в корзину с помощью кнопки &quot;Купить&quot;.</target>
        </trans-unit>
        <trans-unit id="15bf3c33e1424399ab26287ac6065fe7557dd98a" translate="yes" xml:space="preserve">
          <source>This setup also calls &lt;code&gt;TestBed.get()&lt;/code&gt; to inject the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service and the mocking controller so they can be referenced during the tests.</source>
          <target state="translated">Эта настройка также вызывает &lt;code&gt;TestBed.get()&lt;/code&gt; чтобы внедрить службу &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; и контроллер проверки, чтобы на них можно было ссылаться во время тестов.</target>
        </trans-unit>
        <trans-unit id="c78041ba40d1fbcc918dbb701fe401ee868f8518" translate="yes" xml:space="preserve">
          <source>This setup also calls &lt;code&gt;TestBed.inject()&lt;/code&gt; to inject the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service and the mocking controller so they can be referenced during the tests.</source>
          <target state="translated">Эта настройка также вызывает &lt;code&gt;TestBed.inject()&lt;/code&gt; для внедрения службы &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; и имитирующего контроллера, чтобы на них можно было ссылаться во время тестов.</target>
        </trans-unit>
        <trans-unit id="456f1cff8a28d651f522a6a70eb2cb94a641a08f" translate="yes" xml:space="preserve">
          <source>This setup guide uses the &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;npm client&lt;/a&gt; command line interface, which is installed with &lt;code&gt;Node.js&lt;/code&gt; by default.</source>
          <target state="translated">В этом руководстве по настройке используется интерфейс командной строки &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;клиента npm&lt;/a&gt; , который по умолчанию устанавливается с &lt;code&gt;Node.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92609043e3a5049fe9cf167aad090f47caad57aa" translate="yes" xml:space="preserve">
          <source>This simple rule factory returns the tree without modification. The options are the option values passed through from the &lt;code&gt;ng generate&lt;/code&gt; command.</source>
          <target state="translated">Эта простая фабрика правил возвращает дерево без изменений. Параметры - это значения параметров, передаваемые из команды &lt;code&gt;ng generate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3d73db06502687b0e565f94857691c977b98bee9" translate="yes" xml:space="preserve">
          <source>This small test demonstrates how Angular tests can verify a component's visual representation&amp;mdash;something not possible with &lt;a href=&quot;testing#component-class-testing&quot;&gt;component class tests&lt;/a&gt;&amp;mdash;at low cost and without resorting to much slower and more complicated end-to-end tests.</source>
          <target state="translated">Этот небольшой тест демонстрирует, как тесты Angular могут проверять визуальное представление компонента - что невозможно с помощью &lt;a href=&quot;testing#component-class-testing&quot;&gt;тестов классов компонентов&lt;/a&gt; - при низкой стоимости и не прибегая к гораздо более медленным и более сложным сквозным тестам.</target>
        </trans-unit>
        <trans-unit id="5fd279f89c1525d18c06d2c05403b810e6621320" translate="yes" xml:space="preserve">
          <source>This small test demonstrates how Angular tests can verify a component's visual representation&amp;mdash;something not possible with &lt;a href=&quot;testing-components-basics#component-class-testing&quot;&gt;component class tests&lt;/a&gt;&amp;mdash;at low cost and without resorting to much slower and more complicated end-to-end tests.</source>
          <target state="translated">Этот небольшой тест демонстрирует, как тесты Angular могут проверять визуальное представление компонента - что невозможно с &lt;a href=&quot;testing-components-basics#component-class-testing&quot;&gt;тестами классов компонентов&lt;/a&gt; - по низкой цене и без использования гораздо более медленных и более сложных сквозных тестов.</target>
        </trans-unit>
        <trans-unit id="cb009288ce29b0288afe49f6ee2aab850b60725f" translate="yes" xml:space="preserve">
          <source>This snapshot reflects the state of the log after the user clicked the &lt;em&gt;Create...&lt;/em&gt; button and then the &lt;em&gt;Destroy...&lt;/em&gt; button.</source>
          <target state="translated">Этот снимок отражает состояние журнала после того, как пользователь нажал кнопку &amp;laquo; &lt;em&gt;Создать ...&amp;raquo;&lt;/em&gt; , а затем кнопку &amp;laquo; &lt;em&gt;Удалить&amp;raquo;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="3191364fc32b6e08abc6a27512ac0807ec66c575" translate="yes" xml:space="preserve">
          <source>This step serves a purpose analogous to &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick()&lt;/a&gt; and &lt;code&gt;whenStable()&lt;/code&gt; in the earlier &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; examples. The balance of the test is the same as those examples.</source>
          <target state="translated">Этот шаг служит цели, аналогичной &lt;code&gt;whenStable()&lt;/code&gt; &lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick ()&lt;/a&gt; и whenStable () в предыдущих &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt; . Баланс теста такой же, как в этих примерах.</target>
        </trans-unit>
        <trans-unit id="079dfe1488f95b55bfe4eaaff729c5ed46abb14d" translate="yes" xml:space="preserve">
          <source>This step serves a purpose analogous to &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;whenStable()&lt;/code&gt; in the earlier &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; examples. The balance of the test is the same as those examples.</source>
          <target state="translated">Этот шаг служит цели, аналогичной &lt;code&gt;&lt;a href=&quot;../api/core/applicationref#tick&quot;&gt;tick()&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;whenStable()&lt;/code&gt; в более ранних &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt; . Баланс теста такой же, как в этих примерах.</target>
        </trans-unit>
        <trans-unit id="dd15d4d4538f8653d2b222f1a75f8aaa65446a2d" translate="yes" xml:space="preserve">
          <source>This strategy allows you to continue to build your web application to support multiple browsers, but only load the necessary code that the browser needs.</source>
          <target state="translated">Эта стратегия позволяет продолжать создавать веб-приложения,поддерживающие несколько браузеров,но загружать только тот код,который нужен браузеру.</target>
        </trans-unit>
        <trans-unit id="a6549f07c80220a17e94351180403481dcd649c2" translate="yes" xml:space="preserve">
          <source>This strategy allows you to continue to build your web application to support multiple browsers, but only load the necessary code that the browser needs. For more information about how this works, see &lt;a href=&quot;deployment#differential-loading&quot;&gt;Differential Loading&lt;/a&gt; in the &lt;a href=&quot;deployment&quot;&gt;Deployment guide&lt;/a&gt;.</source>
          <target state="translated">Эта стратегия позволяет вам продолжать создавать ваше веб-приложение для поддержки нескольких браузеров, но загружать только тот код, который необходим браузеру. Для получения дополнительной информации о том, как это работает, см. &lt;a href=&quot;deployment#differential-loading&quot;&gt;Разностная загрузка&lt;/a&gt; в &lt;a href=&quot;deployment&quot;&gt;руководстве&lt;/a&gt; по развертыванию .</target>
        </trans-unit>
        <trans-unit id="e609b20e1c574bc355c924ed6553ac80401ff0e8" translate="yes" xml:space="preserve">
          <source>This strategy does not store any routes for later reuse.</source>
          <target state="translated">Эта стратегия не хранит никаких маршрутов для последующего повторного использования.</target>
        </trans-unit>
        <trans-unit id="d7f27f72ef1db3f4b8e0b64ac49c35d1b3d860d4" translate="yes" xml:space="preserve">
          <source>This strategy is enabled by default.</source>
          <target state="translated">Эта стратегия включена по умолчанию.</target>
        </trans-unit>
        <trans-unit id="7c2cab4ddb78ce7228d94edd854eab1d7580006d" translate="yes" xml:space="preserve">
          <source>This stricter type checking is not enabled by default in version 9, but can be enabled by setting the &lt;code&gt;strictTemplates&lt;/code&gt; configuration option. We do expect to make strict type checking the default in the future.</source>
          <target state="translated">Эта более строгая проверка типов не включена по умолчанию в версии 9, но ее можно включить, задав &lt;code&gt;strictTemplates&lt;/code&gt; конфигурации strictTemplates . Мы действительно ожидаем сделать строгую проверку типов по умолчанию в будущем.</target>
        </trans-unit>
        <trans-unit id="8c4a67f46bf55c4aa1042894ef01b904f273ef12" translate="yes" xml:space="preserve">
          <source>This style guide is for anyone who contributes to the Angular documentation (this site). These guidelines should be followed by all authors. Deviations must be approved by a documentation editor.</source>
          <target state="translated">Это руководство по стилю для всех,кто вносит свой вклад в Угловую документацию (этот сайт).Этим рекомендациям должны следовать все авторы.Отклонения должны быть одобрены редактором документации.</target>
        </trans-unit>
        <trans-unit id="b4dc934e925dfc611be024d59208b2dd13b6d211" translate="yes" xml:space="preserve">
          <source>This syntax conforms to the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/messages&quot;&gt;ICU Message Format&lt;/a&gt; as specified in the &lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;CLDR pluralization rules&lt;/a&gt;.</source>
          <target state="translated">Этот синтаксис соответствует &lt;a href=&quot;http://userguide.icu-project.org/formatparse/messages&quot;&gt;формату сообщения ICU,&lt;/a&gt; как указано в &lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;правилах плюрализации CLDR&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a921404409acb321a0300d0ef76d994ae2a236f1" translate="yes" xml:space="preserve">
          <source>This syntax tells the Angular compiler to read the external files during component compilation.</source>
          <target state="translated">Этот синтаксис указывает компилятору Angular читать внешние файлы во время компиляции компонентов.</target>
        </trans-unit>
        <trans-unit id="f054420c1ce338910d0afb64bdc92e93d64d0562" translate="yes" xml:space="preserve">
          <source>This technique can improve performance on mobile and low-powered devices and improve the user experience by showing a static first page quickly while the client-side app is loading. The static version can also make your app more visible to web crawlers.</source>
          <target state="translated">Эта техника может улучшить производительность на мобильных и маломощных устройствах и улучшить пользовательский опыт,показывая статическую первую страницу быстро,в то время как клиентская сторона приложения загружается.Статическая версия также может сделать ваше приложение более видимым для веб-краулеров.</target>
        </trans-unit>
        <trans-unit id="ac27da6a3425110fb4858d56fa56042a9d64c44f" translate="yes" xml:space="preserve">
          <source>This technique is effective because all browsers implement the &lt;em&gt;same origin policy&lt;/em&gt;. Only code from the website on which cookies are set can read the cookies from that site and set custom headers on requests to that site. That means only your application can read this cookie token and set the custom header. The malicious code on &lt;code&gt;evil.com&lt;/code&gt; can't.</source>
          <target state="translated">Этот метод эффективен, потому что все браузеры реализуют &lt;em&gt;одну и&lt;/em&gt; ту &lt;em&gt;же политику происхождения&lt;/em&gt; . Только код с веб-сайта, на котором установлены файлы cookie, может считывать файлы cookie с этого сайта и устанавливать пользовательские заголовки для запросов к этому сайту. Это означает, что только ваше приложение может прочитать этот маркер cookie и установить собственный заголовок. Вредоносный код на &lt;code&gt;evil.com&lt;/code&gt; не может.</target>
        </trans-unit>
        <trans-unit id="edaf5e02d43ccc1019d65ebdfbccee03f175b8c8" translate="yes" xml:space="preserve">
          <source>This technique is suitable for setting a single style, but consider the &lt;a href=&quot;template-syntax#ngStyle&quot;&gt;&lt;code&gt;NgStyle&lt;/code&gt;&lt;/a&gt; directive when setting several inline styles at the same time.</source>
          <target state="translated">Этот метод подходит для установки одного стиля, но при установке нескольких встроенных стилей &lt;a href=&quot;template-syntax#ngStyle&quot;&gt; &lt;code&gt;NgStyle&lt;/code&gt; &lt;/a&gt; директиву NgStyle .</target>
        </trans-unit>
        <trans-unit id="f819a7b1e0aafa1d2068ac4808d42099765b1fd4" translate="yes" xml:space="preserve">
          <source>This technique works for any attribute of any element.</source>
          <target state="translated">Эта техника работает для любого атрибута любого элемента.</target>
        </trans-unit>
        <trans-unit id="c1e03a2b5a2ead7f58623d3d33ead88c0cbed81a" translate="yes" xml:space="preserve">
          <source>This tells the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; preloader to immediately load &lt;em&gt;all&lt;/em&gt; lazy loaded routes (routes with a &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; property).</source>
          <target state="translated">Это говорит &lt;code&gt;&lt;a href=&quot;../api/router/route#loadChildren&quot;&gt;loadChildren&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; немедленно загружать &lt;em&gt;все&lt;/em&gt; ленивые загруженные маршруты (маршруты со свойством loadChildren ).</target>
        </trans-unit>
        <trans-unit id="02a67f3677df899c9872b4c722cacd0ea9415c83" translate="yes" xml:space="preserve">
          <source>This tells the router to match that URL to &lt;code&gt;path: 'heroes'&lt;/code&gt; and display the &lt;code&gt;HeroesComponent&lt;/code&gt; when the URL is something like &lt;code&gt;localhost:4200/heroes&lt;/code&gt;.</source>
          <target state="translated">Это говорит маршрутизатору сопоставить этот URL с &lt;code&gt;path: 'heroes'&lt;/code&gt; и отображать &lt;code&gt;HeroesComponent&lt;/code&gt; , когда URL-адрес похож на &lt;code&gt;localhost:4200/heroes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec46416c5da71796079b783f64e64dd6e3d3f4fd" translate="yes" xml:space="preserve">
          <source>This template applies the &lt;code&gt;SpyDirective&lt;/code&gt; to a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;&lt;em&gt;hero&lt;/em&gt; repeater managed by the parent &lt;code&gt;SpyComponent&lt;/code&gt;.</source>
          <target state="translated">Этот шаблон применяет &lt;code&gt;SpyDirective&lt;/code&gt; к &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; &lt;em&gt; героя &lt;/em&gt;ngFor, управляемом родительским &lt;code&gt;SpyComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b56327c98c0651adf92a3962b35326d9411155a9" translate="yes" xml:space="preserve">
          <source>This template binds directly to the component's &lt;code&gt;messageService&lt;/code&gt;.</source>
          <target state="translated">Этот шаблон привязывается непосредственно к &lt;code&gt;messageService&lt;/code&gt; компонента .</target>
        </trans-unit>
        <trans-unit id="9e9c43c15900050160dc8be35d6067a63318aec5" translate="yes" xml:space="preserve">
          <source>This template looks a lot like the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeater in the &lt;code&gt;HeroesComponent&lt;/code&gt; template.</source>
          <target state="translated">Этот шаблон очень похож на ретранслятор &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; в шаблоне &lt;code&gt;HeroesComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d637ab123347ac13fe17a004c73c98b4dddb234f" translate="yes" xml:space="preserve">
          <source>This template uses typical HTML elements like &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, and also includes Angular template-syntax elements, &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;{{hero.name}}&lt;/code&gt;, &lt;code&gt;(click)&lt;/code&gt;, &lt;code&gt;[hero]&lt;/code&gt;, and &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt;. The template-syntax elements tell Angular how to render the HTML to the screen, using program logic and data.</source>
          <target state="translated">В этом шаблоне используются типичные элементы HTML, такие как &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; , а также элементы углового шаблона-синтаксиса, &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;{{hero.name}}&lt;/code&gt; , &lt;code&gt;(click)&lt;/code&gt; , &lt;code&gt;[hero]&lt;/code&gt; и &lt;code&gt;&amp;lt;app-hero-detail&amp;gt;&lt;/code&gt; . Элементы шаблона-синтаксиса сообщают Angular, как визуализировать HTML-код на экране, используя программную логику и данные.</target>
        </trans-unit>
        <trans-unit id="33f50f397f4ca96e33bfb10d036f4db70c1735c8" translate="yes" xml:space="preserve">
          <source>This test expects the component to try to navigate to the &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">Этот тест ожидает, что компонент попытается перейти к &lt;code&gt;HeroListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="501a5e4c0d88821fa944fe51ad014be796c1b208" translate="yes" xml:space="preserve">
          <source>This test host binds to &lt;code&gt;DashboardHeroComponent&lt;/code&gt; as the &lt;code&gt;DashboardComponent&lt;/code&gt; would but without the noise of the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;HeroService&lt;/code&gt;, or the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; repeater.</source>
          <target state="translated">Этот тестовый хост связывается с &lt;code&gt;DashboardHeroComponent&lt;/code&gt; , как &lt;code&gt;DashboardComponent&lt;/code&gt; , но без шума &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;HeroService&lt;/code&gt; или ретранслятора &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f65de663612898c193d6874b17e0426d7e59e43" translate="yes" xml:space="preserve">
          <source>This testing module configuration shows three important differences:</source>
          <target state="translated">Данная конфигурация тестового модуля показывает три важных отличия:</target>
        </trans-unit>
        <trans-unit id="750aba5f80080e328a3f7b0b79fa476b6891b62b" translate="yes" xml:space="preserve">
          <source>This text wraps around to the right of the floating &quot;flying hero&quot; image.</source>
          <target state="translated">Этот текст обертывается справа от плавающего изображения &quot;летающего героя&quot;.</target>
        </trans-unit>
        <trans-unit id="113e418e350b558b02724dea8b12bbcc059f4851" translate="yes" xml:space="preserve">
          <source>This time you'll be navigating in the opposite direction, from the &lt;code&gt;HeroDetailComponent&lt;/code&gt; to the &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">На этот раз вы будете перемещаться в противоположном направлении, от &lt;code&gt;HeroDetailComponent&lt;/code&gt; к &lt;code&gt;HeroListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cefc645993bf706c88455dca56b4abc1e03879d3" translate="yes" xml:space="preserve">
          <source>This time, in addition to declaring the &lt;em&gt;component-under-test&lt;/em&gt;, the configuration adds a &lt;code&gt;UserService&lt;/code&gt; provider to the &lt;code&gt;providers&lt;/code&gt; list. But not the real &lt;code&gt;UserService&lt;/code&gt;.</source>
          <target state="translated">На этот раз, помимо объявления &lt;em&gt;тестируемого компонента&lt;/em&gt; , конфигурация добавляет поставщика &lt;code&gt;UserService&lt;/code&gt; в список &lt;code&gt;providers&lt;/code&gt; . Но не настоящий &lt;code&gt;UserService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af2165b1138d7807abb0f9b20b74189222b793e4" translate="yes" xml:space="preserve">
          <source>This time, the value of &lt;code&gt;'popup'&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. That's not a route, but it is a legitimate value. Setting the popup &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt; clears the outlet and removes the secondary popup route from the current URL.</source>
          <target state="translated">На этот раз значение &lt;code&gt;'popup'&lt;/code&gt; равно &lt;code&gt;null&lt;/code&gt; . Это не маршрут, но это законная ценность. Настройка всплывающего окна &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;null&lt;/code&gt; сбрасывает выход и удаляет вторичный всплывающий маршрут из текущего URL.</target>
        </trans-unit>
        <trans-unit id="40bbb2371cebbdf60ae15d1ec5b7666df5d5300a" translate="yes" xml:space="preserve">
          <source>This topic describes how to create and configure an Angular component.</source>
          <target state="translated">Эта тема описывает,как создать и настроить Угловой компонент.</target>
        </trans-unit>
        <trans-unit id="5176ea8b8dc3fac7511f8583255f1137f947700f" translate="yes" xml:space="preserve">
          <source>This topic provides a conceptual overview of the different categories of &lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModules&lt;/a&gt; you can create in order to organize your code in a modular structure. These categories are not cast in stone&amp;mdash;they are suggestions. You may want to create NgModules for other purposes, or combine the characteristics of some of these categories.</source>
          <target state="translated">В этом разделе представлен концептуальный обзор различных категорий &lt;a href=&quot;glossary#ngmodule&quot;&gt;NgModules, которые&lt;/a&gt; вы можете создать, чтобы организовать свой код в виде модульной структуры. Эти категории не высечены из камня - это предложения. Вы можете создать NgModules для других целей или объединить характеристики некоторых из этих категорий.</target>
        </trans-unit>
        <trans-unit id="1d92a7f4ae8e3f11ab9554b88f4a5af57e0a872c" translate="yes" xml:space="preserve">
          <source>This topic provides some guidelines for the following general categories of NgModules:</source>
          <target state="translated">Эта тема содержит некоторые руководящие принципы для следующих общих категорий NgМодулей:</target>
        </trans-unit>
        <trans-unit id="21b58f299c596628607bfe82d7a2f31208c5268b" translate="yes" xml:space="preserve">
          <source>This tutorial describes how you can build a single-page application, SPA that uses multiple Angular routes.</source>
          <target state="translated">В этом учебном пособии описывается,как построить одностраничное приложение-SPA,использующее несколько угловых маршрутов.</target>
        </trans-unit>
        <trans-unit id="1017b080efe853ab4a37570f7704ed1185bde730" translate="yes" xml:space="preserve">
          <source>This tutorial introduces you to the essentials of Angular by walking you through a simple e-commerce site with a catalog, shopping cart, and check-out form. To help you get started right away, this guide uses a simple ready-made application that you can examine and modify interactively (without having to &lt;a href=&quot;guide/setup-local&quot;&gt;set up a local work environment&lt;/a&gt;).</source>
          <target state="translated">В этом руководстве вы познакомитесь с основами Angular, пройдя через простой сайт электронной коммерции с каталогом, корзиной для покупок и формой оформления заказа. Чтобы помочь вам сразу приступить к работе, в этом руководстве используется простое готовое приложение, которое вы можете изучить и изменить в интерактивном режиме (без необходимости &lt;a href=&quot;guide/setup-local&quot;&gt;настраивать локальную рабочую среду&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4d58a98a6b42341e9f6814cfed96b99344da3020" translate="yes" xml:space="preserve">
          <source>This tutorial introduces you to the essentials of Angular by walking you through building a simple e-commerce site with a catalog, shopping cart, and check-out form. It uses the &lt;a href=&quot;https://stackblitz.com/&quot;&gt;StackBlitz&lt;/a&gt; online development environment so you can get started right away.</source>
          <target state="translated">Это руководство знакомит вас с основами Angular и рассказывает о создании простого сайта электронной коммерции с каталогом, корзиной покупок и формой оформления заказа. Он использует &lt;a href=&quot;https://stackblitz.com/&quot;&gt;среду&lt;/a&gt; онлайн-разработки StackBlitz, чтобы вы могли сразу начать работу.</target>
        </trans-unit>
        <trans-unit id="75cca6ba2330a0de32bc9736198f0aa60de95f31" translate="yes" xml:space="preserve">
          <source>This tutorial provides an extensive overview of the Angular router. In this tutorial, you will build upon a basic router configuration to explore features such as child routes, route parameters, lazy load NgModules, guard routes, and preloading data to improve the user experience.</source>
          <target state="translated">В этом учебном пособии представлен обширный обзор Угловой маршрутизатор.В этом уроке вы будете основываться на базовой конфигурации маршрутизатора для изучения таких функций,как дочерние маршруты,параметры маршрута,ленивая загрузка NgModules,маршруты защиты и предварительная загрузка данных для улучшения удобства работы пользователя.</target>
        </trans-unit>
        <trans-unit id="4be47255fc4c07ae300b4da88c16205f91d089d6" translate="yes" xml:space="preserve">
          <source>This tutorial sample mimics communication with a remote data server by using the &lt;a href=&quot;https://github.com/angular/in-memory-web-api&quot;&gt;In-memory Web API&lt;/a&gt; module.</source>
          <target state="translated">Этот учебный пример имитирует связь с удаленным сервером данных с помощью модуля &lt;a href=&quot;https://github.com/angular/in-memory-web-api&quot;&gt;веб-API в памяти&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc3024b13e02f53d3e498300f1c2e6300a2d72b3" translate="yes" xml:space="preserve">
          <source>This tutorial shows how to build a a questionaire, which is just one kind of dynamic form. The example uses &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to collect a set of controls. For an example of a different type of dynamic form, see the section &lt;a href=&quot;reactive-forms#creating-dynamic-forms&quot;&gt;Creating dynamic forms&lt;/a&gt; in the Reactive Forms guide. That example also shows how to use &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to collect a set of controls.</source>
          <target state="translated">В этом руководстве показано, как создать вопросник, который представляет собой лишь один из видов динамической формы. В примере используется &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; для сбора набора элементов управления. Пример другого типа динамической формы см. В разделе &amp;laquo; &lt;a href=&quot;reactive-forms#creating-dynamic-forms&quot;&gt;Создание динамических форм&amp;raquo;&lt;/a&gt; в руководстве &amp;laquo;Реактивные формы&amp;raquo;. В этом примере также показано, как использовать &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; для сбора набора элементов управления.</target>
        </trans-unit>
        <trans-unit id="5ab45a75c827944992e1db362a0b5c036c3ecd7e" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to build a form from scratch, using a simplified sample form like the one from the &lt;a href=&quot;tutorial&quot;&gt;Tour of Heroes tutorial&lt;/a&gt; to illustrate the techniques.</source>
          <target state="translated">В этом руководстве показано, как создать форму с нуля, используя упрощенную форму-образец, подобную той, что &lt;a href=&quot;tutorial&quot;&gt;описана в учебнике Tour of Heroes,&lt;/a&gt; для иллюстрации методов.</target>
        </trans-unit>
        <trans-unit id="52b747de47c76fdb387428a809e8e59e74cebd64" translate="yes" xml:space="preserve">
          <source>This tutorial shows you how to create a template-driven form whose control elements are bound to data properties, with input validation to maintain data integrity and styling to improve the user experience.</source>
          <target state="translated">В этом учебном пособии показано,как создать форму,управляемую по шаблонам,элементы управления которой привязаны к свойствам данных,с проверкой входных данных для сохранения целостности данных и стилистики для повышения удобства работы пользователя.</target>
        </trans-unit>
        <trans-unit id="bb98a6fecbbb46c54191cd7e4fdf79d8bfd8c9d6" translate="yes" xml:space="preserve">
          <source>This tutorial teaches you how to do the following:</source>
          <target state="translated">Это учебное пособие научит тебя делать следующее:</target>
        </trans-unit>
        <trans-unit id="d9d67a376ed76f9dd9f3998880f05555c2f237ea" translate="yes" xml:space="preserve">
          <source>This user experience is the developer's choice. Some developers want the message to display at all times. If you ignore the &lt;code&gt;pristine&lt;/code&gt; state, you would hide the message only when the value is valid. If you arrive in this component with a new (blank) hero or an invalid hero, you'll see the error message immediately, before you've done anything.</source>
          <target state="translated">Этот пользовательский опыт - выбор разработчика. Некоторые разработчики хотят, чтобы сообщение отображалось всегда. Если вы игнорируете &lt;code&gt;pristine&lt;/code&gt; состояние, вы можете скрыть сообщение только тогда, когда значение действительно. Если вы попадаете в этот компонент с новым (пустым) героем или недействительным героем, вы сразу же увидите сообщение об ошибке, прежде чем что-либо предпринять.</target>
        </trans-unit>
        <trans-unit id="f2e4047e551556a93bbd7f194989120c57f25bea" translate="yes" xml:space="preserve">
          <source>This value accessor is used by default for &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;a href=&quot;defaultvalueaccessor&quot;&gt;textarea&lt;/a&gt;&amp;gt;&lt;/code&gt; elements, but you could also use it for custom components that have similar behavior and do not require special processing. In order to attach the default value accessor to a custom element, add the &lt;code&gt;&lt;a href=&quot;defaultvalueaccessor&quot;&gt;ngDefaultControl&lt;/a&gt;&lt;/code&gt; attribute as shown below.</source>
          <target state="translated">Этот метод доступа к значению используется по умолчанию для элементов &lt;code&gt;&amp;lt;input type=&quot;text&quot;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;&lt;a href=&quot;defaultvalueaccessor&quot;&gt;textarea&lt;/a&gt;&amp;gt;&lt;/code&gt; , но вы также можете использовать его для настраиваемых компонентов, которые имеют аналогичное поведение и не требуют специальной обработки. Чтобы прикрепить средство доступа к значению по умолчанию к настраиваемому элементу, добавьте атрибут &lt;code&gt;&lt;a href=&quot;defaultvalueaccessor&quot;&gt;ngDefaultControl&lt;/a&gt;&lt;/code&gt; , как показано ниже.</target>
        </trans-unit>
        <trans-unit id="7fe52a203b046ba6736edeae46dcac27488617b9" translate="yes" xml:space="preserve">
          <source>This version of the &lt;code&gt;HeroListComponent&lt;/code&gt; gets heroes from the &lt;code&gt;HEROES&lt;/code&gt; array, an in-memory collection defined in a separate &lt;code&gt;mock-heroes&lt;/code&gt; file.</source>
          <target state="translated">Эта версия &lt;code&gt;HeroListComponent&lt;/code&gt; получает героев из массива &lt;code&gt;HEROES&lt;/code&gt; , коллекции в памяти, определенной в отдельном файле &lt;code&gt;mock-heroes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ac5c50e4fc7fc8f690f46a387d86d6cd4e8a480" translate="yes" xml:space="preserve">
          <source>This will call the &lt;code&gt;ls&lt;/code&gt; command instead of the &lt;code&gt;touch&lt;/code&gt; command. Because we did not override the &lt;em&gt;args&lt;/em&gt; option, it will list information about the &lt;code&gt;src/main.ts&lt;/code&gt; file (the default value provided for the target).</source>
          <target state="translated">Это вызовет команду &lt;code&gt;ls&lt;/code&gt; вместо команды &lt;code&gt;touch&lt;/code&gt; . Поскольку мы не переопределили параметр &lt;em&gt;args&lt;/em&gt; , в нем будет &lt;code&gt;src/main.ts&lt;/code&gt; информация о файле src / main.ts (значение по умолчанию, предоставленное для цели).</target>
        </trans-unit>
        <trans-unit id="2d850926d891f5f4c805e3e17fdc18eb990f42f2" translate="yes" xml:space="preserve">
          <source>This will essentially do the following:</source>
          <target state="translated">Это,по сути,сделает следующее:</target>
        </trans-unit>
        <trans-unit id="9312003f28c3729ef201319a34848ad897938e4a" translate="yes" xml:space="preserve">
          <source>This will install the command &lt;code&gt;ng&lt;/code&gt; into your system, which is the command you use to create new workspaces, new projects, serve your application during development, or produce builds that can be shared or distributed.</source>
          <target state="translated">Это установит команду &lt;code&gt;ng&lt;/code&gt; в вашу систему, которая является командой, которую вы используете для создания новых рабочих пространств, новых проектов, обслуживания вашего приложения во время разработки или создания сборок, которые можно совместно использовать или распространять.</target>
        </trans-unit>
        <trans-unit id="9bb5987cb75dc888fb534638627a4e1a3c031126" translate="yes" xml:space="preserve">
          <source>This will not work in a real app. You're getting away with it now because the service currently returns &lt;em&gt;mock heroes&lt;/em&gt;. But soon the app will fetch heroes from a remote server, which is an inherently &lt;em&gt;asynchronous&lt;/em&gt; operation.</source>
          <target state="translated">Это не будет работать в реальном приложении. Вам это сходит с рук сейчас, потому что сервис в настоящее время возвращает &lt;em&gt;насмешливых героев&lt;/em&gt; . Но вскоре приложение будет извлекать героев с удаленного сервера, что по своей сути является &lt;em&gt;асинхронной&lt;/em&gt; операцией.</target>
        </trans-unit>
        <trans-unit id="c8a4d0a01462100bf09cd9c7a8827ae3dcb63eb8" translate="yes" xml:space="preserve">
          <source>This will produce the files that you need to deploy.</source>
          <target state="translated">В результате будут созданы файлы,которые необходимо установить.</target>
        </trans-unit>
        <trans-unit id="9b630be3829ca4b43f0c0f13ae624094630240e5" translate="yes" xml:space="preserve">
          <source>This will run the &lt;code&gt;touch&lt;/code&gt; command on the &lt;code&gt;src/main.ts&lt;/code&gt; file.</source>
          <target state="translated">Это запустит команду &lt;code&gt;touch&lt;/code&gt; в файле &lt;code&gt;src/main.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fb5514b164bef25ddca759f879da4b392519146" translate="yes" xml:space="preserve">
          <source>This will set the active-link class on the div tag if the url is either '/user/jim' or '/user/bob'.</source>
          <target state="translated">Это установит класс active-link на div-теге,если url это '/user/jim' или '/user/bob'.</target>
        </trans-unit>
        <trans-unit id="d430f7cac5ea324357497bb1e85a43cc3ac98f1a" translate="yes" xml:space="preserve">
          <source>This won't work if the service is an application-wide singleton. Every component would share the same service instance, and each component would overwrite the tax return that belonged to another hero.</source>
          <target state="translated">Это не сработает,если сервис является прикладной одноэлементной.Каждый компонент будет иметь один и тот же экземпляр сервиса,и каждый компонент будет переписывать налоговую декларацию,которая принадлежала другому герою.</target>
        </trans-unit>
        <trans-unit id="66ee2090966d8e328167f9dd11bd703bc89361b7" translate="yes" xml:space="preserve">
          <source>This worked well, but there's a better way. If you were using a real world API, there might be some delay before the data to display is returned from the server. You don't want to display a blank component while waiting for the data.</source>
          <target state="translated">Это сработало хорошо,но есть способ получше.Если бы вы использовали реальное API,то могла бы быть некоторая задержка до того,как данные для отображения будут возвращены с сервера.Вы не хотите отображать пустой компонент в ожидании данных.</target>
        </trans-unit>
        <trans-unit id="61821e653cb092afa1d5fad2bdbb72bc70644e00" translate="yes" xml:space="preserve">
          <source>Those developers may still use HTML5 URLs by taking the following two steps:</source>
          <target state="translated">Эти разработчики могут по-прежнему использовать HTML5 URL,выполнив следующие два шага:</target>
        </trans-unit>
        <trans-unit id="3030da2c36d0ffb5bb1a38f3d3ab06bd0ba9aebe" translate="yes" xml:space="preserve">
          <source>Those developers may still use HTML5 URLs by taking two remedial steps:</source>
          <target state="translated">Эти разработчики могут по-прежнему использовать HTML5 URL-адреса,предприняв два корректирующих шага:</target>
        </trans-unit>
        <trans-unit id="a4c3697ed1231b34be5a06d277ed21d7aec6aac6" translate="yes" xml:space="preserve">
          <source>Those three steps look like the following. In the file where you create your directive, export it. The following example, named &lt;code&gt;ItemDirective&lt;/code&gt; is the default directive structure that the CLI generates in its own file, &lt;code&gt;item.directive.ts&lt;/code&gt;:</source>
          <target state="translated">Эти три шага выглядят следующим образом. В файле, где вы создаете свою директиву, экспортируйте ее. В следующем примере с именем &lt;code&gt;ItemDirective&lt;/code&gt; является структурой директивы по умолчанию, которую CLI генерирует в своем собственном файле &lt;code&gt;item.directive.ts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7282182d46ba8591a3fb80eb88450d7e6e0fb75f" translate="yes" xml:space="preserve">
          <source>Though &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;template expressions&lt;/a&gt; shouldn't have &lt;a href=&quot;template-syntax#avoid-side-effects&quot;&gt;side effects&lt;/a&gt;, template statements usually do. The &lt;code&gt;deleteItem()&lt;/code&gt; method does have a side effect: it deletes an item.</source>
          <target state="translated">Хотя у &lt;a href=&quot;template-syntax#template-expressions&quot;&gt;шаблонных выражений&lt;/a&gt; не должно быть &lt;a href=&quot;template-syntax#avoid-side-effects&quot;&gt;побочных эффектов&lt;/a&gt; , шаблонные выражения обычно имеют. У &lt;code&gt;deleteItem()&lt;/code&gt; есть побочный эффект: он удаляет элемент.</target>
        </trans-unit>
        <trans-unit id="8b45283f651e66eedd857eedb3d79dccba5ecff8" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; provides the 🌻 (sunflower), the app renders the 🌺 (red hibiscus) because &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; causes the current injector to skip itself and look to its parent.</source>
          <target state="translated">Хотя &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; предоставляет 🌻 (подсолнух), приложение отображает 🌺 (красный гибискус), потому что &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; заставляет текущий инжектор пропустить себя и посмотреть на своего родителя.</target>
        </trans-unit>
        <trans-unit id="1075a1e80e7f93a1f8a46fd5766714abf59a2e2d" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; often appear together in apps, you can use them separately. If the nested component is such that it only needs to send data to its parent, you wouldn't need an &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, only an &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;. The reverse is also true in that if the child only needs to receive data from the parent, you'd only need &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">Хотя &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; часто появляются вместе в приложениях, вы можете использовать их отдельно. Если вложенный компонент таков, что ему нужно только отправить данные своему родителю, вам не понадобится &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; , только &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; . Обратное также верно в том смысле, что если ребенку нужно только получать данные от родителя, вам нужен только &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76c63fbb51bf2e00185f379ad812f423247e2cf5" translate="yes" xml:space="preserve">
          <source>Though &lt;em&gt;highlight&lt;/em&gt; would be a more concise selector than &lt;em&gt;appHighlight&lt;/em&gt; and it would work, the best practice is to prefix selector names to ensure they don't conflict with standard HTML attributes. This also reduces the risk of colliding with third-party directive names. The CLI added the &lt;code&gt;app&lt;/code&gt; prefix for you.</source>
          <target state="translated">Хотя &lt;em&gt;highlight&lt;/em&gt; будет более лаконичным селектором, чем &lt;em&gt;appHighlight,&lt;/em&gt; и он будет работать, лучше всего использовать префиксные имена селекторов, чтобы они не конфликтовали со стандартными атрибутами HTML. Это также снижает риск столкновения со сторонними именами директив. CLI добавил префикс &lt;code&gt;app&lt;/code&gt; для вас.</target>
        </trans-unit>
        <trans-unit id="e7794513d8ab6b404efc84e17a85b45fb430b7cb" translate="yes" xml:space="preserve">
          <source>Though the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator has an &lt;code&gt;entryComponents&lt;/code&gt; array, most of the time you won't have to explicitly set any entry components because Angular adds components listed in &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; and those in route definitions to entry components automatically. Though these two mechanisms account for most entry components, if your app happens to bootstrap or dynamically load a component by type imperatively, you must add it to &lt;code&gt;entryComponents&lt;/code&gt; explicitly.</source>
          <target state="translated">Хотя у декоратора &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; есть массив &lt;code&gt;entryComponents&lt;/code&gt; , большую часть времени вам не придется явно устанавливать какие-либо компоненты ввода, потому что Angular добавляет компоненты, перечисленные в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; и те, которые в определениях маршрута, автоматически вводят компоненты ввода. Хотя эти два механизма учитывают большинство входных компонентов, если ваше приложение происходит с начальной загрузкой или динамически загружает компонент по типу, вы должны явно добавить его в &lt;code&gt;entryComponents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0c89634e88d4f46eb100cf74294ba38817d4923" translate="yes" xml:space="preserve">
          <source>Though the target name is usually the name of a property, there is an automatic attribute-to-property mapping in Angular for several common attributes. These include &lt;code&gt;class&lt;/code&gt;/&lt;code&gt;className&lt;/code&gt;, &lt;code&gt;innerHtml&lt;/code&gt;/&lt;code&gt;innerHTML&lt;/code&gt;, and &lt;code&gt;tabindex&lt;/code&gt;/&lt;code&gt;tabIndex&lt;/code&gt;.</source>
          <target state="translated">Хотя целевым именем обычно является имя свойства, в Angular существует автоматическое сопоставление атрибута и свойства для нескольких общих атрибутов. К ним относятся &lt;code&gt;class&lt;/code&gt; / &lt;code&gt;className&lt;/code&gt; , &lt;code&gt;innerHtml&lt;/code&gt; / &lt;code&gt;innerHTML&lt;/code&gt; и &lt;code&gt;tabindex&lt;/code&gt; / &lt;code&gt;tabIndex&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bdc5ca158e9ca814a1efdfbdd56e2547c9decdf" translate="yes" xml:space="preserve">
          <source>Though you can limit access to a service by providing it in a lazy loaded module or providing it in a component, providing services in a component can lead to multiple instances of those services. Thus, the lazy loading is preferable.</source>
          <target state="translated">Хотя вы можете ограничить доступ к сервису,предоставляя его в ленивом загруженном модуле или предоставляя его в компоненте,предоставление сервисов в компоненте может привести к нескольким экземплярам этих сервисов.Таким образом,ленивая загрузка предпочтительнее.</target>
        </trans-unit>
        <trans-unit id="90e178c89e79710297fa1f0d8ae614004845fcca" translate="yes" xml:space="preserve">
          <source>Though you can provide services by lazy loading modules, not all services can be lazy loaded. For instance, some modules only work in the root module, such as the Router. The Router works with the global location object in the browser.</source>
          <target state="translated">Хотя вы можете предоставлять услуги ленивыми загрузочными модулями,не все услуги могут быть ленивыми.Например,некоторые модули работают только в корневом модуле,например,Маршрутизатор.Маршрутизатор работает с объектом глобального расположения в браузере.</target>
        </trans-unit>
        <trans-unit id="4ac43ae059a7abe0952abd693cdca4e55b219478" translate="yes" xml:space="preserve">
          <source>Though you can type the URL into the address bar, a navigation UI is easier for the user and more common. Replace the default placeholder markup in &lt;code&gt;app.component.html&lt;/code&gt; with a custom nav so you can easily navigate to your modules in the browser:</source>
          <target state="translated">Хотя вы можете ввести URL-адрес в адресную строку, пользовательский интерфейс навигации проще для пользователя и более распространен. Замените стандартную разметку заполнителя в &lt;code&gt;app.component.html&lt;/code&gt; пользовательской навигацией, чтобы вы могли легко переходить к своим модулям в браузере:</target>
        </trans-unit>
        <trans-unit id="528e1795eb218a5f3792808cc39b7bcce25ad8db" translate="yes" xml:space="preserve">
          <source>Though you could technically set the &lt;code&gt;[attr.disabled]&lt;/code&gt; attribute binding, the values are different in that the property binding requires to a boolean value, while its corresponding attribute binding relies on whether the value is &lt;code&gt;null&lt;/code&gt; or not. Consider the following:</source>
          <target state="translated">Хотя технически можно установить &lt;code&gt;[attr.disabled]&lt;/code&gt; атрибута [attr.disabled] , значения отличаются тем, что привязка свойства требует логического значения, тогда как соответствующая привязка атрибута зависит от того, является ли значение &lt;code&gt;null&lt;/code&gt; или нет. Учтите следующее:</target>
        </trans-unit>
        <trans-unit id="ab6a81da6264ab1813a6ae0bf0a2c52eb58c33e9" translate="yes" xml:space="preserve">
          <source>Though you could technically set the &lt;code&gt;[attr.disabled]&lt;/code&gt; attribute binding, the values are different in that the property binding requires to be a boolean value, while its corresponding attribute binding relies on whether the value is &lt;code&gt;null&lt;/code&gt; or not. Consider the following:</source>
          <target state="translated">Хотя вы можете технически установить &lt;code&gt;[attr.disabled]&lt;/code&gt; атрибута [attr.disabled] , значения отличаются тем, что привязка свойства должна быть логическим значением, тогда как соответствующая привязка атрибута зависит от того, является ли значение &lt;code&gt;null&lt;/code&gt; или нет. Учтите следующее:</target>
        </trans-unit>
        <trans-unit id="171a82320fbdf7d2e2689bc12c98963504c6696d" translate="yes" xml:space="preserve">
          <source>Three instances of &lt;code&gt;HeroBioComponent&lt;/code&gt; can't share the same instance of &lt;code&gt;HeroCacheService&lt;/code&gt;, as they'd be competing with each other to determine which hero to cache.</source>
          <target state="translated">Три экземпляра &lt;code&gt;HeroBioComponent&lt;/code&gt; не могут использовать один и тот же экземпляр &lt;code&gt;HeroCacheService&lt;/code&gt; , поскольку они будут конкурировать друг с другом, чтобы определить, какого героя следует кэшировать.</target>
        </trans-unit>
        <trans-unit id="e85a3cc08728cca8939b51f9d98196530fcc997a" translate="yes" xml:space="preserve">
          <source>Three of the common, built-in structural directives&amp;mdash;&lt;a href=&quot;built-in-directives#ngIf&quot;&gt;NgIf&lt;/a&gt;, &lt;a href=&quot;built-in-directives#ngFor&quot;&gt;NgFor&lt;/a&gt;, and &lt;a href=&quot;built-in-directives#ngSwitch&quot;&gt;NgSwitch...&lt;/a&gt;&amp;mdash;are described in the &lt;a href=&quot;built-in-directives&quot;&gt;Built-in directives&lt;/a&gt; guide and seen in samples throughout the Angular documentation. Here's an example of them in a template:</source>
          <target state="translated">Три стандартные встроенные структурные директивы - &lt;a href=&quot;built-in-directives#ngIf&quot;&gt;NgIf&lt;/a&gt; , &lt;a href=&quot;built-in-directives#ngFor&quot;&gt;NgFor&lt;/a&gt; и &lt;a href=&quot;built-in-directives#ngSwitch&quot;&gt;NgSwitch ...&lt;/a&gt; - описаны в руководстве по &lt;a href=&quot;built-in-directives&quot;&gt;встроенным директивам&lt;/a&gt; и представлены в примерах в документации Angular. Вот их пример в шаблоне:</target>
        </trans-unit>
        <trans-unit id="5d80c7ef855b73b71c4ca5c1c8a2d8119c7fa21b" translate="yes" xml:space="preserve">
          <source>Three of the common, built-in structural directives&amp;mdash;&lt;a href=&quot;template-syntax#ngIf&quot;&gt;NgIf&lt;/a&gt;, &lt;a href=&quot;template-syntax#ngFor&quot;&gt;NgFor&lt;/a&gt;, and &lt;a href=&quot;template-syntax#ngSwitch&quot;&gt;NgSwitch...&lt;/a&gt;&amp;mdash;are described in the &lt;a href=&quot;template-syntax&quot;&gt;&lt;em&gt;Template Syntax&lt;/em&gt;&lt;/a&gt; guide and seen in samples throughout the Angular documentation. Here's an example of them in a template:</source>
          <target state="translated">Три из общих встроенных структурных директив - &lt;a href=&quot;template-syntax#ngIf&quot;&gt;NgIf&lt;/a&gt; , &lt;a href=&quot;template-syntax#ngFor&quot;&gt;NgFor&lt;/a&gt; и &lt;a href=&quot;template-syntax#ngSwitch&quot;&gt;NgSwitch ...&lt;/a&gt; - описаны в руководстве по &lt;a href=&quot;template-syntax&quot;&gt;&lt;em&gt;синтаксису шаблона&lt;/em&gt;&lt;/a&gt; и встречаются в примерах в документации Angular. Вот пример их в шаблоне:</target>
        </trans-unit>
        <trans-unit id="8703c0daee7a3560153b94bc34a950b511daab36" translate="yes" xml:space="preserve">
          <source>Three points of special interest:</source>
          <target state="translated">Три пункта,представляющие особый интерес:</target>
        </trans-unit>
        <trans-unit id="6b164df9c4f94a91727830fddbf131671bff71ec" translate="yes" xml:space="preserve">
          <source>Three providers tell the JIT compiler how to translate the template texts for a particular language while compiling the app:</source>
          <target state="translated">Три оферента сообщают компилятору JIT,как при компиляции приложения переводить шаблонные тексты для определенного языка:</target>
        </trans-unit>
        <trans-unit id="ed12cc77bbd83748afc157b996ead876c3c5517c" translate="yes" xml:space="preserve">
          <source>Through the &lt;code&gt;valueChanges&lt;/code&gt; observable where you can listen for changes in the form's value in the template using &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; or in the component class using the &lt;code&gt;subscribe()&lt;/code&gt; method.</source>
          <target state="translated">Через наблюдаемое значение &lt;code&gt;valueChanges&lt;/code&gt; можно прослушивать изменения значения формы в шаблоне с помощью &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; или в классе компонента с помощью метода &lt;code&gt;subscribe()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a4cab0ebea476f32aa1e1c5fba91f40707b2ad6" translate="yes" xml:space="preserve">
          <source>Throughout this guide, you'll see a directive spelled in both &lt;em&gt;UpperCamelCase&lt;/em&gt; and &lt;em&gt;lowerCamelCase&lt;/em&gt;. Already you've seen &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. There's a reason. &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; refers to the directive &lt;em&gt;class&lt;/em&gt;; &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; refers to the directive's &lt;em&gt;attribute name&lt;/em&gt;.</source>
          <target state="translated">В этом руководстве вы увидите директиву, написанную как в &lt;em&gt;UpperCamelCase, так&lt;/em&gt; и в &lt;em&gt;lowerCamelCase&lt;/em&gt; . Вы уже видели &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; . Есть причина. &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; относится к &lt;em&gt;классу&lt;/em&gt; директивы ; &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; ссылается на &lt;em&gt;имя атрибута&lt;/em&gt; директивы .</target>
        </trans-unit>
        <trans-unit id="f9f4b0f30b3f06e61b21febef173645d29891305" translate="yes" xml:space="preserve">
          <source>Throws</source>
          <target state="translated">Throws</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="f7ea2d8763887c41cd7da975aaf8c487045171ac" translate="yes" xml:space="preserve">
          <source>Time passes and application logic triggers lazy loading of an NgModule. Angular must add the lazy-loaded module's providers to an injector somewhere. It can't add them to the app root injector because that injector is closed to new providers. So Angular creates a new child injector for the lazy-loaded module context.</source>
          <target state="translated">Проход времени и логика приложения приводят к ленивой загрузке NgModule.Угловой должен где-то добавить в инжектор ленивых провайдеров модуля.Он не может добавить их в корневой инжектор приложения,потому что этот инжектор закрыт для новых провайдеров.Поэтому Angular создает новый дочерний инжектор для контекста ленивого модуля.</target>
        </trans-unit>
        <trans-unit id="8f86764c71eb5f28fd785ba95ea223af744160bb" translate="yes" xml:space="preserve">
          <source>Timezone of the formatted text will be the local system timezone of the end-user's machine.</source>
          <target state="translated">Временным поясом отформатированного текста будет локальный системный часовой пояс машины конечного пользователя.</target>
        </trans-unit>
        <trans-unit id="098024dc5537ca3623978ac7c0a6140ce39062b8" translate="yes" xml:space="preserve">
          <source>Timing</source>
          <target state="translated">Timing</target>
        </trans-unit>
        <trans-unit id="ff73d9b2c838aef0837103246944b6eeaac4e811" translate="yes" xml:space="preserve">
          <source>Tip: In the &lt;a href=&quot;api&quot;&gt;API reference section&lt;/a&gt; of this doc site, deprecated APIs are indicated by &lt;del&gt;strikethrough.&lt;/del&gt; You can filter the API list by &lt;a href=&quot;api?status=deprecated&quot;&gt;&lt;strong&gt;Status: deprecated&lt;/strong&gt;&lt;/a&gt;.</source>
          <target state="translated">Подсказка. В &lt;a href=&quot;api&quot;&gt;справочном разделе API&lt;/a&gt; этого сайта документации устаревшие API обозначены&lt;del&gt;зачеркивания.&lt;/del&gt;Вы можете отфильтровать список API по &lt;a href=&quot;api?status=deprecated&quot;&gt;&lt;strong&gt;статусу: устарело&lt;/strong&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="768e0c1c69573fb588f61f1308a015c11468e05f" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Title</target>
        </trans-unit>
        <trans-unit id="cd78803504972c001f389f4b2e207d6fc9adc057" translate="yes" xml:space="preserve">
          <source>Title text should be in &quot;Sentence case&quot;, which means the first word is capitalized and all other words are lower case (unless they are technical terms that are always capitalized, like &quot;Angular&quot;).</source>
          <target state="translated">Текст заголовка должен быть в &quot;регистре приказов&quot;,что означает,что первое слово является заглавным,а все остальные слова-нижним регистром (если только это не технические термины,которые всегда являются заглавными,как,например,&quot;угловой&quot;).</target>
        </trans-unit>
        <trans-unit id="1ef4826ff87f22d637cb47eb360c1525fcf04ada" translate="yes" xml:space="preserve">
          <source>Title text should be in &quot;Title Case&quot;, which means that you use capital letters to start the first words and all &lt;em&gt;principal&lt;/em&gt; words. Use lower case letters for &lt;em&gt;secondary&lt;/em&gt; words such as &quot;in&quot;, &quot;of&quot;, and &quot;the&quot;.</source>
          <target state="translated">Текст заголовка должен быть в &amp;laquo;Заголовке&amp;raquo;, что означает, что вы используете заглавные буквы для начала первых слов и всех &lt;em&gt;основных&lt;/em&gt; слов. Используйте строчные буквы для &lt;em&gt;вторичных&lt;/em&gt; слов, таких как &amp;laquo;in&amp;raquo;, &amp;laquo;of&amp;raquo; и &amp;laquo;the&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="0443511f0f0d69e0669b6cc477969ba0177c046d" translate="yes" xml:space="preserve">
          <source>TitleCasePipe</source>
          <target state="translated">TitleCasePipe</target>
        </trans-unit>
        <trans-unit id="1edfc91ff1a795fb8fae2c2845186edc649e929e" translate="yes" xml:space="preserve">
          <source>To &lt;a href=&quot;http&quot;&gt;communicate with backend services using HTTP&lt;/a&gt;, the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service uses observables and offers the &lt;code&gt;HTTPClient.get()&lt;/code&gt; method to fetch data from a server. The asynchronous method sends an HTTP request, and returns an observable that emits the requested data for the response.</source>
          <target state="translated">Для того, чтобы &lt;a href=&quot;http&quot;&gt;общаться с серверными услуг с использованием HTTP&lt;/a&gt; , то &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; служба использует наблюдаемыми и предлагает &lt;code&gt;HTTPClient.get()&lt;/code&gt; метод , чтобы получить данные с сервера. Асинхронный метод отправляет HTTP-запрос и возвращает наблюдаемый объект, который выдает запрошенные данные для ответа.</target>
        </trans-unit>
        <trans-unit id="ed1a0b0c87e134832acc7d87c80e1e27c802b764" translate="yes" xml:space="preserve">
          <source>To access properties that are defined in an interface, you must explicitly convert the Object you get from the JSON to the required response type. For example, the following &lt;code&gt;subscribe&lt;/code&gt; callback receives &lt;code&gt;data&lt;/code&gt; as an Object, and then type-casts it in order to access the properties.</source>
          <target state="translated">Чтобы получить доступ к свойствам, которые определены в интерфейсе, вы должны явно преобразовать Объект, полученный из JSON, в требуемый тип ответа. Например, следующий обратный вызов &lt;code&gt;subscribe&lt;/code&gt; получает &lt;code&gt;data&lt;/code&gt; как объект, а затем приводит их к типу для доступа к свойствам.</target>
        </trans-unit>
        <trans-unit id="090bde2470cfa5d91164f0dd5ac0b680c316fd8a" translate="yes" xml:space="preserve">
          <source>To access properties that are defined in an interface, you must explicitly convert the plain object you get from the JSON to the required response type. For example, the following &lt;code&gt;subscribe&lt;/code&gt; callback receives &lt;code&gt;data&lt;/code&gt; as an Object, and then type-casts it in order to access the properties.</source>
          <target state="translated">Чтобы получить доступ к свойствам, которые определены в интерфейсе, вы должны явно преобразовать простой объект, полученный из JSON, в требуемый тип ответа. Например, следующий обратный вызов &lt;code&gt;subscribe&lt;/code&gt; получает &lt;code&gt;data&lt;/code&gt; как объект, а затем приводит их к типу, чтобы получить доступ к свойствам.</target>
        </trans-unit>
        <trans-unit id="612822e1f2a2307aaa6e2b3ed143cfc5b79f8e35" translate="yes" xml:space="preserve">
          <source>To achieve this effect, extend the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; tag with the following:</source>
          <target state="translated">Для достижения этого эффекта расширьте &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="bfbef04c66fa9ac05c09e94801b6ea0bdf69d6fb" translate="yes" xml:space="preserve">
          <source>To add a form group to this component, take the following steps.</source>
          <target state="translated">Чтобы добавить группу форм к этому компоненту,выполните следующие действия.</target>
        </trans-unit>
        <trans-unit id="4de9b850b6bc48b2b817512c2db67f3f4f4de00a" translate="yes" xml:space="preserve">
          <source>To add a hero, this app only needs the hero's name. You can use an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element paired with an add button.</source>
          <target state="translated">Чтобы добавить героя, этому приложению нужно только имя героя. Вы можете использовать элемент &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; в паре с кнопкой добавления.</target>
        </trans-unit>
        <trans-unit id="da8e56238639cdc891b1d4ed923efdcffe46b6f3" translate="yes" xml:space="preserve">
          <source>To add a new &lt;code&gt;devDependency&lt;/code&gt;, use either one of the following commands:</source>
          <target state="translated">Чтобы добавить новый &lt;code&gt;devDependency&lt;/code&gt; , используйте одну из следующих команд:</target>
        </trans-unit>
        <trans-unit id="27d7686824adeea94d6f50645d6b9afbe94609dd" translate="yes" xml:space="preserve">
          <source>To add a new dependency, use the &lt;a href=&quot;cli/add&quot;&gt;&lt;code&gt;ng add&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">Чтобы добавить новую зависимость, используйте команду &lt;a href=&quot;cli/add&quot;&gt; &lt;code&gt;ng add&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f457092233f40d2f34e89cbae624605c9b59951d" translate="yes" xml:space="preserve">
          <source>To add a schematic to an existing collection, use the same command you use to start a new schematics project, but run the command inside the project folder.</source>
          <target state="translated">Чтобы добавить схему в существующую коллекцию,используйте ту же команду,которую вы используете для запуска нового проекта схем,но выполните ее внутри папки проекта.</target>
        </trans-unit>
        <trans-unit id="e0dff7476603a4365ce04e28daa6e5ae648874f0" translate="yes" xml:space="preserve">
          <source>To add a validator to the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, pass the new validator in as the second argument on creation.</source>
          <target state="translated">Чтобы добавить валидатор в &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; , передайте новый валидатор в качестве второго аргумента при создании.</target>
        </trans-unit>
        <trans-unit id="6e5aa5b2615deae73ee3a7a681ef04a97504d33d" translate="yes" xml:space="preserve">
          <source>To add a web worker to an existing project, use the Angular CLI &lt;code&gt;ng generate&lt;/code&gt; command.</source>
          <target state="translated">Чтобы добавить веб-исполнителя в существующий проект, используйте команду Angular CLI &lt;code&gt;ng generate&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5af208734231896485781dd45087dcf140d59c94" translate="yes" xml:space="preserve">
          <source>To add another product, click &quot;My Store&quot; to return to the product list.</source>
          <target state="translated">Чтобы добавить еще один товар,нажмите кнопку &quot;Мой магазин&quot;,чтобы вернуться к списку товаров.</target>
        </trans-unit>
        <trans-unit id="b7c21a740943c10dfa15804fca8321cd2e41101e" translate="yes" xml:space="preserve">
          <source>To add another product, click &quot;My Store&quot; to return to the product list. Repeat the steps above.</source>
          <target state="translated">Чтобы добавить еще один товар,нажмите кнопку &quot;Мой магазин&quot;,чтобы вернуться к списку товаров.Повторите действия,описанные выше.</target>
        </trans-unit>
        <trans-unit id="af30217cecee494619d1758d399f71f84dae729e" translate="yes" xml:space="preserve">
          <source>To add artifacts to a project, your schematic needs its own template files. Schematic templates support special syntax to execute code and variable substitution.</source>
          <target state="translated">Для добавления артефактов в проект вашей схеме нужны собственные файлы шаблонов.Шаблоны схем поддерживают специальный синтаксис для выполнения кода и подстановку переменных.</target>
        </trans-unit>
        <trans-unit id="5c8962d1b60c02af2c0fa75a87fff3fbce78ea63" translate="yes" xml:space="preserve">
          <source>To add more features to the app's current crisis center, take similar steps as for the heroes feature:</source>
          <target state="translated">Чтобы добавить больше функций в текущий кризисный центр приложения,сделайте те же шаги,что и в случае с функцией &quot;Герои&quot;:</target>
        </trans-unit>
        <trans-unit id="b6b988734470ea226b7bc93e7814ababa57cf8ea" translate="yes" xml:space="preserve">
          <source>To add or remove a &lt;em&gt;single&lt;/em&gt; class, use &lt;a href=&quot;attribute-binding#class-binding&quot;&gt;class binding&lt;/a&gt; rather than &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;NgClass&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы добавить или удалить &lt;em&gt;один&lt;/em&gt; класс, используйте &lt;a href=&quot;attribute-binding#class-binding&quot;&gt;привязку класса,&lt;/a&gt; а не &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;NgClass&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3d2051452de0323eb6efd5aedc607498069cdae" translate="yes" xml:space="preserve">
          <source>To add or remove a &lt;em&gt;single&lt;/em&gt; class, use &lt;a href=&quot;template-syntax#class-binding&quot;&gt;class binding&lt;/a&gt; rather than &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;NgClass&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы добавить или удалить &lt;em&gt;отдельный&lt;/em&gt; класс, используйте &lt;a href=&quot;template-syntax#class-binding&quot;&gt;привязку классов,&lt;/a&gt; а не &lt;code&gt;&lt;a href=&quot;../api/common/ngclass&quot;&gt;NgClass&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9da25919d51d1a85e0005bea2eb758313daa6fe" translate="yes" xml:space="preserve">
          <source>To add paths, use the &lt;code&gt;stylePreprocessorOptions&lt;/code&gt; option:</source>
          <target state="translated">Чтобы добавить пути, используйте параметр &lt;code&gt;stylePreprocessorOptions&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="43fd32e81bc1770347d28bdfa0c8f42aa2ce4a7b" translate="yes" xml:space="preserve">
          <source>To add the classes only when the URL matches the link exactly, add the option &lt;code&gt;exact: true&lt;/code&gt;:</source>
          <target state="translated">Чтобы добавлять классы только в том случае, если URL-адрес точно соответствует ссылке, добавьте параметр &lt;code&gt;exact: true&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="496b7ad1d0a0eed5827dc1a97fd622e7f8d94e93" translate="yes" xml:space="preserve">
          <source>To add the component to the template, you call &lt;code&gt;createComponent()&lt;/code&gt; on &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Чтобы добавить компонент в шаблон, вы вызываете &lt;code&gt;createComponent()&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="987b409e8bf18353ecffd982c4a6027176175f26" translate="yes" xml:space="preserve">
          <source>To add the schematics to the library bundle, add scripts to the library's &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">Чтобы добавить схемы в комплект библиотеки, добавьте сценарии в файл &lt;code&gt;package.json&lt;/code&gt; библиотеки .</target>
        </trans-unit>
        <trans-unit id="1a7a24ab6c517387fe4fb759c2cbbe67fd7e654f" translate="yes" xml:space="preserve">
          <source>To add the stylesheet, open &lt;code&gt;styles.css&lt;/code&gt; and add the following import line at the top:</source>
          <target state="translated">Чтобы добавить таблицу стилей, откройте &lt;code&gt;styles.css&lt;/code&gt; и добавьте следующую строку импорта вверху:</target>
        </trans-unit>
        <trans-unit id="d7a97119528a1219e01d41b64f89cfc156ab2111" translate="yes" xml:space="preserve">
          <source>To add validation to a template-driven form, you add the same validation attributes as you would with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot;&gt;native HTML form validation&lt;/a&gt;. Angular uses directives to match these attributes with validator functions in the framework.</source>
          <target state="translated">Чтобы добавить проверку в форму на основе шаблона, вы добавляете те же атрибуты проверки, что и при &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot;&gt;проверке формы HTML&lt;/a&gt; . Angular использует директивы для сопоставления этих атрибутов с функциями валидатора в платформе.</target>
        </trans-unit>
        <trans-unit id="ce70784e6a2d0e1e0652eb7bae45da63bd42c69d" translate="yes" xml:space="preserve">
          <source>To alter the request, clone it first and modify the clone before passing it to &lt;code&gt;next.handle()&lt;/code&gt;. You can clone and modify the request in a single step as in this example.</source>
          <target state="translated">Чтобы изменить запрос, сначала &lt;code&gt;next.handle()&lt;/code&gt; его и измените клон, прежде чем передавать его в next.handle () . Вы можете клонировать и изменить запрос за один шаг, как в этом примере.</target>
        </trans-unit>
        <trans-unit id="be9073f11e0afa56717eb05e0a7001960b7a1b99" translate="yes" xml:space="preserve">
          <source>To alter where the injector starts looking for &lt;code&gt;FlowerService&lt;/code&gt;, add &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; to the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt;&lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; declaration for the &lt;code&gt;FlowerService&lt;/code&gt;. This declaration is in the &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; constructor as shown in &lt;code&gt;child.component.ts&lt;/code&gt;:</source>
          <target state="translated">Для того, чтобы изменить , где инжектор начинает искать &lt;code&gt;FlowerService&lt;/code&gt; , добавьте &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; в &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; &lt;code&gt;@&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; декларации за &lt;code&gt;FlowerService&lt;/code&gt; . Это объявление находится в конструкторе &lt;code&gt;&amp;lt;app-child&amp;gt;&lt;/code&gt; , как показано в &lt;code&gt;child.component.ts&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="22c3b2cba8f53e2ffe5dab01bc5b91f88e756346" translate="yes" xml:space="preserve">
          <source>To answer these kinds of questions, you have to create the DOM elements associated with the components, you must examine the DOM to confirm that component state displays properly at the appropriate times, and you must simulate user interaction with the screen to determine whether those interactions cause the component to behave as expected.</source>
          <target state="translated">Чтобы ответить на такого рода вопросы,вы должны создать элементы DOM,связанные с компонентами,вы должны изучить DOM,чтобы убедиться,что состояние компонента отображается должным образом в соответствующее время,и вы должны моделировать взаимодействие пользователя с экраном,чтобы определить,приводит ли это взаимодействие к тому,что компонент ведет себя так,как ожидалось.</target>
        </trans-unit>
        <trans-unit id="b914cc85efa6a3ee58a159fd0169f8e78be87368" translate="yes" xml:space="preserve">
          <source>To apply a pipe, use the pipe operator (&lt;code&gt;|&lt;/code&gt;) within a template expression as shown in the following code example, along with the &lt;em&gt;name&lt;/em&gt; of the pipe, which is &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; for the built-in &lt;a href=&quot;../api/common/datepipe&quot;&gt;&lt;code&gt;DatePipe&lt;/code&gt;&lt;/a&gt;. The tabs in the example show the following:</source>
          <target state="translated">Чтобы применить канал, используйте оператор канала ( &lt;code&gt;|&lt;/code&gt; ) в выражении шаблона, как показано в следующем примере кода, вместе с &lt;em&gt;именем&lt;/em&gt; канала, которое является &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; для встроенного &lt;a href=&quot;../api/common/datepipe&quot;&gt; &lt;code&gt;DatePipe&lt;/code&gt; &lt;/a&gt; . Вкладки в примере показывают следующее:</target>
        </trans-unit>
        <trans-unit id="dcf8f543ff93bfc9b163241813212b02a20d1ea1" translate="yes" xml:space="preserve">
          <source>To apply specific build options to only one locale, you can create a custom locale-specific configuration by specifying a single locale as shown in the following example:</source>
          <target state="translated">Чтобы применить специфические параметры сборки только к одной локали,вы можете создать пользовательскую конфигурацию с учетом специфики локали,указав одну локаль,как показано в следующем примере:</target>
        </trans-unit>
        <trans-unit id="36d091e0c047395da2a56a9e24df2133c4a12994" translate="yes" xml:space="preserve">
          <source>To attach the aliases from your form model, you must add it to the template. Similar to the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroupname&quot;&gt;formGroupName&lt;/a&gt;&lt;/code&gt; input provided by &lt;code&gt;FormGroupNameDirective&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/formarrayname&quot;&gt;formArrayName&lt;/a&gt;&lt;/code&gt; binds communication from the form array instance to the template with &lt;code&gt;FormArrayNameDirective&lt;/code&gt;.</source>
          <target state="translated">Чтобы прикрепить псевдонимы из вашей модели формы, вы должны добавить их в шаблон. Подобно &lt;code&gt;&lt;a href=&quot;../api/forms/formgroupname&quot;&gt;formGroupName&lt;/a&gt;&lt;/code&gt; предоставленному &lt;code&gt;FormGroupNameDirective&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/formarrayname&quot;&gt;formArrayName&lt;/a&gt;&lt;/code&gt; связывает связь из экземпляра массива формы с шаблоном с помощью &lt;code&gt;FormArrayNameDirective&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b439955a79dbd833d42d99f6fa91279d6ef67f27" translate="yes" xml:space="preserve">
          <source>To automate that data flow, setup a two-way data binding between the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; form element and the &lt;code&gt;hero.name&lt;/code&gt; property.</source>
          <target state="translated">Чтобы автоматизировать этот поток данных, установите двустороннюю привязку данных между элементом формы &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; и свойством &lt;code&gt;hero.name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c97596f545bc3c4cf4d6e36b38363f8b20cb690b" translate="yes" xml:space="preserve">
          <source>To avoid relying solely on visual cues, you need to make sure your routing code updates focus after page navigation. Use the &lt;code&gt;&lt;a href=&quot;../api/router/navigationend&quot;&gt;NavigationEnd&lt;/a&gt;&lt;/code&gt; event from the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service to know when to update focus.</source>
          <target state="translated">Чтобы не полагаться исключительно на визуальные подсказки, вам необходимо убедиться, что ваш код маршрутизации обновляется после навигации по страницам. Используйте событие &lt;code&gt;&lt;a href=&quot;../api/router/navigationend&quot;&gt;NavigationEnd&lt;/a&gt;&lt;/code&gt; из службы &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; , чтобы узнать, когда следует обновить фокус.</target>
        </trans-unit>
        <trans-unit id="b14c5694baf8932f7e55e412b232c287b7bc7e46" translate="yes" xml:space="preserve">
          <source>To avoid this error, a &lt;a href=&quot;lifecycle-hooks&quot;&gt;lifecycle hook&lt;/a&gt; method that seeks to make such a change should trigger a new change detection run. The new run follows the same direction as before, but succeeds in picking up the new value.</source>
          <target state="translated">Чтобы избежать этой ошибки, метод &lt;a href=&quot;lifecycle-hooks&quot;&gt;перехвата жизненного цикла,&lt;/a&gt; который пытается внести такое изменение, должен запускать новый запуск обнаружения изменений. Новый прогон следует в том же направлении, что и раньше, но ему удается получить новое значение.</target>
        </trans-unit>
        <trans-unit id="441327a3b62f31f08d7ebf067ab65b6221abce4c" translate="yes" xml:space="preserve">
          <source>To avoid this expensive operation, you can customize the default tracking algorithm. by supplying the &lt;code&gt;trackBy&lt;/code&gt; option to &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;trackBy&lt;/code&gt; takes a function that has two arguments: &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt;. If &lt;code&gt;trackBy&lt;/code&gt; is given, Angular tracks changes by the return value of the function.</source>
          <target state="translated">Чтобы избежать этой дорогостоящей операции, вы можете настроить алгоритм отслеживания по умолчанию. путем подачи &lt;code&gt;trackBy&lt;/code&gt; опции &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;trackBy&lt;/code&gt; принимает функцию с двумя аргументами: &lt;code&gt;index&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; . Если &lt;code&gt;trackBy&lt;/code&gt; , Angular отслеживает изменения, возвращаемые значением функции.</target>
        </trans-unit>
        <trans-unit id="4e45c920ee8a5bfaeada08016996d3dc7a94099f" translate="yes" xml:space="preserve">
          <source>To avoid this expensive operation, you can customize the default tracking algorithm. by supplying the &lt;code&gt;trackBy&lt;/code&gt; option to &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;trackBy&lt;/code&gt; takes a function that has two arguments: &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;item&lt;/code&gt;. If &lt;code&gt;trackBy&lt;/code&gt; is given, Angular tracks changes by the return value of the function.</source>
          <target state="translated">Чтобы избежать этой дорогостоящей операции, вы можете настроить алгоритм отслеживания по умолчанию. предоставив параметр &lt;code&gt;trackBy&lt;/code&gt; для &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;trackBy&lt;/code&gt; принимает функцию с двумя аргументами: &lt;code&gt;index&lt;/code&gt; и &lt;code&gt;item&lt;/code&gt; . Если &lt;code&gt;trackBy&lt;/code&gt; , Angular отслеживает изменения по возвращаемому значению функции.</target>
        </trans-unit>
        <trans-unit id="e8cfc2c0e9fadb81aa5e73b8bb58085461fa57a5" translate="yes" xml:space="preserve">
          <source>To avoid this problem, import the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; only in the &lt;code&gt;AppModule&lt;/code&gt;, the application &lt;em&gt;root module&lt;/em&gt;.</source>
          <target state="translated">Чтобы избежать этой проблемы, импортируйте &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; только в &lt;code&gt;AppModule&lt;/code&gt; , &lt;em&gt;корневой модуль&lt;/em&gt; приложения .</target>
        </trans-unit>
        <trans-unit id="598b94eaf0a9207b1b2f7e14b6bb329e39eadeca" translate="yes" xml:space="preserve">
          <source>To be Angular compatible, an AngularJS component directive should configure these attributes:</source>
          <target state="translated">Чтобы быть совместимым с Angular,директива компонента AngularJS должна сконфигурировать эти атрибуты:</target>
        </trans-unit>
        <trans-unit id="123c3019791e3c52ebbcbe83a892f8e6e401c499" translate="yes" xml:space="preserve">
          <source>To be notified when new releases are available, follow &lt;a href=&quot;https://twitter.com/angular&quot;&gt;@angular&lt;/a&gt; on Twitter or subscribe to the &lt;a href=&quot;https://blog.angular.io&quot;&gt;Angular blog&lt;/a&gt;.</source>
          <target state="translated">Чтобы получать уведомления о новых выпусках, &lt;a href=&quot;https://twitter.com/angular&quot;&gt;следите&lt;/a&gt; за @angular в Twitter или подписывайтесь на &lt;a href=&quot;https://blog.angular.io&quot;&gt;блог Angular&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dd4700612dcf5dc9d98d073d3fec1a9bda0633ef" translate="yes" xml:space="preserve">
          <source>To be used with watch mode, a builder handler function should return an Observable. Architect subscribes to the Observable until it completes and might reuse it if the builder is scheduled again with the same arguments.</source>
          <target state="translated">Для использования в режиме наблюдения,функция обработчика конструктора должна возвращать &quot;Наблюдаемое&quot;.Архитектор подписывается на функцию Observable до тех пор,пока она не завершится,и может использовать ее повторно,если сборщик будет назначен снова с теми же аргументами.</target>
        </trans-unit>
        <trans-unit id="c6264ce2f8d176973d84cc88a177c1b8d2ae8301" translate="yes" xml:space="preserve">
          <source>To begin converting your AngularJS application to a hybrid, you need to load the Angular framework. You can see how this can be done with SystemJS by following the instructions in &lt;a href=&quot;upgrade-setup&quot;&gt;Setup for Upgrading to AngularJS&lt;/a&gt; for selectively copying code from the &lt;a href=&quot;https://github.com/angular/quickstart&quot;&gt;QuickStart github repository&lt;/a&gt;.</source>
          <target state="translated">Чтобы начать преобразование приложения AngularJS в гибрид, вам необходимо загрузить платформу Angular. Вы можете увидеть, как это можно сделать с помощью SystemJS, следуя инструкциям в разделе &amp;laquo; &lt;a href=&quot;upgrade-setup&quot;&gt;Настройка обновления до AngularJS&amp;raquo;&lt;/a&gt; для выборочного копирования кода из &lt;a href=&quot;https://github.com/angular/quickstart&quot;&gt;репозитория QuickStart github&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ff25a3d91e518e6022fbcb82db9614eb3a86d036" translate="yes" xml:space="preserve">
          <source>To begin testing calls to &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, import the &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/httpclienttestingmodule&quot;&gt;HttpClientTestingModule&lt;/a&gt;&lt;/code&gt; and the mocking controller, &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/httptestingcontroller&quot;&gt;HttpTestingController&lt;/a&gt;&lt;/code&gt;, along with the other symbols your tests require.</source>
          <target state="translated">Чтобы начать тестирование вызовов в &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , импортируйте &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/httpclienttestingmodule&quot;&gt;HttpClientTestingModule&lt;/a&gt;&lt;/code&gt; и контроллер &lt;code&gt;&lt;a href=&quot;../api/common/http/testing/httptestingcontroller&quot;&gt;HttpTestingController&lt;/a&gt;&lt;/code&gt; , HttpTestingController , а также другие символы, необходимые для ваших тестов.</target>
        </trans-unit>
        <trans-unit id="970d997b1f905a43219b5008925290bb634cfd6b" translate="yes" xml:space="preserve">
          <source>To begin using Angular service workers, see &lt;a href=&quot;service-worker-getting-started&quot;&gt;Getting Started with service workers&lt;/a&gt;.</source>
          <target state="translated">Чтобы начать использовать сервисных работников Angular, см. &lt;a href=&quot;service-worker-getting-started&quot;&gt;Начало работы с сервисными работниками&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="de460edf05dca2d464a1be91407ed6ffea7d7a8e" translate="yes" xml:space="preserve">
          <source>To begin using the CLI for a new project, see &lt;a href=&quot;setup-local&quot;&gt;Local Environment Setup&lt;/a&gt;.</source>
          <target state="translated">Чтобы начать использовать интерфейс командной строки для нового проекта, см. &lt;a href=&quot;setup-local&quot;&gt;Настройка локальной среды&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6b18b6e1679f6b673ab980d8c28e59713ff54dfa" translate="yes" xml:space="preserve">
          <source>To begin, configure a set of routes using methods available in the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; class. This route configuration tells the router how to navigate.</source>
          <target state="translated">Для начала настройте набор маршрутов, используя методы, доступные в классе &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; . Эта конфигурация маршрута сообщает маршрутизатору, как осуществлять навигацию.</target>
        </trans-unit>
        <trans-unit id="008987cccbf2a31fda96aa5a830cd40924b91032" translate="yes" xml:space="preserve">
          <source>To begin, create a new subfolder, &lt;code&gt;my-service&lt;/code&gt;, in the &lt;code&gt;schematics&lt;/code&gt; folder.</source>
          <target state="translated">Для начала создайте новую подпапку &lt;code&gt;my-service&lt;/code&gt; в папке &lt;code&gt;schematics&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dd9e1c57cc321e0fe725c8e45cb7fc4f6d13c75" translate="yes" xml:space="preserve">
          <source>To benefit from the Angular service worker, your app must run in a web browser that supports service workers in general. Currently, service workers are supported in the latest versions of Chrome, Firefox, Edge, Safari, Opera, UC Browser (Android version) and Samsung Internet. Browsers like IE and Opera Mini do not support service workers.</source>
          <target state="translated">Чтобы воспользоваться преимуществами работника службы Angular,ваше приложение должно работать в веб-браузере,который поддерживает работников службы в целом.В настоящее время сервисные работники поддерживаются в последних версиях Chrome,Firefox,Edge,Safari,Opera,UC Browser (версия для Android)и Samsung Internet.Такие браузеры,как IE и Opera Mini не поддерживают сервисных работников.</target>
        </trans-unit>
        <trans-unit id="823f8f6067a0bd01cd8d63ba6022a1d82417c4ca" translate="yes" xml:space="preserve">
          <source>To better explain the condition under which token retention occurs, consider a library that provides a library-card component, which contains a body and can contain an optional header.</source>
          <target state="translated">Чтобы лучше объяснить условие,при котором происходит удержание токена,рассмотрим библиотеку,которая предоставляет компонент библиотеки-карты,который содержит тело и может содержать необязательный заголовок.</target>
        </trans-unit>
        <trans-unit id="a4b9a0b3c93987f15167a935557553029127ee66" translate="yes" xml:space="preserve">
          <source>To bind the &lt;code&gt;src&lt;/code&gt; property of an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element to a component's property, place the target, &lt;code&gt;src&lt;/code&gt;, in square brackets followed by an equal sign and then the property. The property here is &lt;code&gt;itemImageUrl&lt;/code&gt;.</source>
          <target state="translated">Чтобы связать свойство &lt;code&gt;src&lt;/code&gt; элемента &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; со свойством компонента, поместите цель, &lt;code&gt;src&lt;/code&gt; , в квадратные скобки, за которыми следует знак равенства, а затем свойство. Свойство здесь - &lt;code&gt;itemImageUrl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aceceb9344b852a619d58c97b4a87fbc9c2dc9ab" translate="yes" xml:space="preserve">
          <source>To bind to a DOM event, surround the DOM event name in parentheses and assign a quoted &lt;a href=&quot;template-syntax#template-statements&quot;&gt;template statement&lt;/a&gt; to it.</source>
          <target state="translated">Для привязки к событию DOM заключите имя события DOM в круглые скобки и присвойте ему оператор цитируемого &lt;a href=&quot;template-syntax#template-statements&quot;&gt;шаблона&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8805e78091225819c8ec4f163b041709b022dc53" translate="yes" xml:space="preserve">
          <source>To bind to an element's property, enclose it in square brackets, &lt;code&gt;[]&lt;/code&gt;, which identifies the property as a target property. A target property is the DOM property to which you want to assign a value. For example, the target property in the following code is the image element's &lt;code&gt;src&lt;/code&gt; property.</source>
          <target state="translated">Для привязки к свойству элемента заключите его в квадратные скобки, &lt;code&gt;[]&lt;/code&gt; , которые идентифицируют свойство как целевое свойство. Целевое свойство - это свойство DOM, которому вы хотите присвоить значение. Например, свойство target в следующем коде - это свойство &lt;code&gt;src&lt;/code&gt; элемента изображения .</target>
        </trans-unit>
        <trans-unit id="b6c9d270dcb9439d7a8e35a87d442f4c07eaf0b5" translate="yes" xml:space="preserve">
          <source>To bind to an event you use the Angular event binding syntax. This syntax consists of a target event name within parentheses to the left of an equal sign, and a quoted template statement to the right. In the following example, the target event name is &lt;code&gt;click&lt;/code&gt; and the template statement is &lt;code&gt;onSave()&lt;/code&gt;.</source>
          <target state="translated">Для привязки к событию вы используете синтаксис привязки событий Angular. Этот синтаксис состоит из имени целевого события в круглых скобках слева от знака равенства и цитируемого оператора шаблона справа. В следующем примере имя целевого события - &lt;code&gt;click&lt;/code&gt; , а оператор шаблона - &lt;code&gt;onSave()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d778e18735c77251c6e68dfae859e34ec242ed1" translate="yes" xml:space="preserve">
          <source>To bind to multiple classes, use &lt;code&gt;[class]&lt;/code&gt; set to an expression&amp;mdash;for example, &lt;code&gt;[class]=&quot;classExpression&quot;&lt;/code&gt;. The expression can be a space-delimited string of class names, or an object with class names as the keys and truthy or falsy expressions as the values. With an object format, Angular adds a class only if its associated value is truthy.</source>
          <target state="translated">Для привязки к нескольким классам используйте &lt;code&gt;[class]&lt;/code&gt; , установленный в выражение, например &lt;code&gt;[class]=&quot;classExpression&quot;&lt;/code&gt; . Выражение может быть строкой имен классов, разделенных пробелами, или объектом с именами классов в качестве ключей и истинными или ложными выражениями в качестве значений. В объектном формате Angular добавляет класс только в том случае, если связанное с ним значение истинно.</target>
        </trans-unit>
        <trans-unit id="2a2b43d8d4759c302041d5555e84a74b033db308" translate="yes" xml:space="preserve">
          <source>To block XSS attacks, you must prevent malicious code from entering the DOM (Document Object Model). For example, if attackers can trick you into inserting a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in the DOM, they can run arbitrary code on your website. The attack isn't limited to &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags&amp;mdash;many elements and properties in the DOM allow code execution, for example, &lt;code&gt;&amp;lt;img onerror=&quot;...&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; href=&quot;javascript:...&quot;&amp;gt;&lt;/code&gt;. If attacker-controlled data enters the DOM, expect security vulnerabilities.</source>
          <target state="translated">Чтобы заблокировать XSS-атаки, вы должны предотвратить попадание вредоносного кода в DOM (объектную модель документа). Например, если злоумышленники могут заставить вас вставить &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; в DOM, они могут запустить произвольный код на вашем веб-сайте. Атака не ограничивается &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; тегов-многих элементов и свойств в DOM позволяют выполнение кода, например, &lt;code&gt;&amp;lt;img onerror=&quot;...&quot;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routerlinkwithhref&quot;&gt;a&lt;/a&gt; href=&quot;javascript:...&quot;&amp;gt;&lt;/code&gt; . Если данные, контролируемые злоумышленником, попадают в DOM, ожидайте уязвимостей в безопасности.</target>
        </trans-unit>
        <trans-unit id="bf32545d272d3b9cbadb82b7e3da443ce9a08440" translate="yes" xml:space="preserve">
          <source>To block XSS attacks, you must prevent malicious code from entering the DOM (Document Object Model). For example, if attackers can trick you into inserting a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag in the DOM, they can run arbitrary code on your website. The attack isn't limited to &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags&amp;mdash;many elements and properties in the DOM allow code execution, for example, &lt;code&gt;&amp;lt;img onerror=&quot;...&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;a href=&quot;javascript:...&quot;&amp;gt;&lt;/code&gt;. If attacker-controlled data enters the DOM, expect security vulnerabilities.</source>
          <target state="translated">Чтобы заблокировать XSS-атаки, необходимо предотвратить проникновение вредоносного кода в DOM (объектную модель документа). Например, если злоумышленники могут обманом заставить вас вставить &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; в DOM, они могут запустить произвольный код на вашем веб-сайте. Атака не ограничивается тегами &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; - многие элементы и свойства в DOM допускают выполнение кода, например, &lt;code&gt;&amp;lt;img onerror=&quot;...&quot;&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;a href=&quot;javascript:...&quot;&amp;gt;&lt;/code&gt; . Если данные, контролируемые злоумышленником, попадают в DOM, следует ожидать уязвимости системы безопасности.</target>
        </trans-unit>
        <trans-unit id="82e29a55d59b6b2bd0a517982412ccec5411a4a1" translate="yes" xml:space="preserve">
          <source>To bootstrap a hybrid application, you must bootstrap each of the Angular and AngularJS parts of the application. You must bootstrap the Angular bits first and then ask the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; to bootstrap the AngularJS bits next.</source>
          <target state="translated">Чтобы загрузить гибридное приложение, вы должны загрузить каждую из его частей Angular и AngularJS. Вы должны сначала загрузить биты Angular, а затем попросить &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; затем загрузить биты AngularJS.</target>
        </trans-unit>
        <trans-unit id="4f304161933cd5ad06abfd2e9cde018e77079b3d" translate="yes" xml:space="preserve">
          <source>To build a separate distributable copy of the app for each locale, &lt;a href=&quot;i18n#localize-config&quot;&gt;define the locales in the build configuration&lt;/a&gt; in your project's workspace configuration file &lt;a href=&quot;workspace-config&quot;&gt;&lt;code&gt;angular.json&lt;/code&gt;&lt;/a&gt;. This method shortens the build process by removing the requirement to perform a full app build for each locale.</source>
          <target state="translated">Чтобы создать отдельную распространяемую копию приложения для каждого языкового стандарта, &lt;a href=&quot;i18n#localize-config&quot;&gt;определите языковые стандарты в конфигурации сборки&lt;/a&gt; в файле конфигурации рабочей области вашего проекта &lt;a href=&quot;workspace-config&quot;&gt; &lt;code&gt;angular.json&lt;/code&gt; &lt;/a&gt; . Этот метод сокращает процесс сборки, удаляя требование выполнять полную сборку приложения для каждой локали.</target>
        </trans-unit>
        <trans-unit id="e4ec3081d8abfef81b9c7b98512682fe817069de" translate="yes" xml:space="preserve">
          <source>To build up the generation schematic, start with an empty rule factory.</source>
          <target state="translated">Чтобы построить схему генерации,начните с пустой фабрики правил.</target>
        </trans-unit>
        <trans-unit id="8901fe39170514d01f50341a27e20f9604a9825a" translate="yes" xml:space="preserve">
          <source>To build using the staging configuration, run the following command:</source>
          <target state="translated">Чтобы построить с помощью инсценировочной конфигурации,выполните следующую команду:</target>
        </trans-unit>
        <trans-unit id="c4203d9a357f968995a61263dcb595eb193e91ce" translate="yes" xml:space="preserve">
          <source>To build your application locally or for production, download the source code from your StackBlitz project by clicking the &lt;code&gt;Download Project&lt;/code&gt; icon in the left menu across from &lt;code&gt;Project&lt;/code&gt; to download your files.</source>
          <target state="translated">Чтобы создать приложение локально или для производства, загрузите исходный код из проекта StackBlitz, щелкнув значок &amp;laquo; &lt;code&gt;Download Project&lt;/code&gt; в левом меню напротив &lt;code&gt;Project&lt;/code&gt; , чтобы загрузить файлы.</target>
        </trans-unit>
        <trans-unit id="e28bdfee0dc7a60965eea042b0b40687dbd667f9" translate="yes" xml:space="preserve">
          <source>To build your application locally or for production, you will need to download the source code from your StackBlitz project. Click the &lt;code&gt;Download Project&lt;/code&gt; icon in the left menu across from &lt;code&gt;Project&lt;/code&gt; to download your files.</source>
          <target state="translated">Чтобы создать приложение локально или для производства, вам необходимо загрузить исходный код из проекта StackBlitz. Щелкните значок &amp;laquo; &lt;code&gt;Download Project&lt;/code&gt; в левом меню напротив &lt;code&gt;Project&lt;/code&gt; , чтобы загрузить файлы.</target>
        </trans-unit>
        <trans-unit id="0466ae768a4d93cf77c8e4981171d89f8a7ca6ff" translate="yes" xml:space="preserve">
          <source>To bundle your schematics together with your library, you must configure the library to build the schematics separately, then add them to the bundle. You must build your schematics &lt;em&gt;after&lt;/em&gt; you build your library, so they are placed in the correct directory.</source>
          <target state="translated">Чтобы связать ваши схемы вместе с вашей библиотекой, вы должны сконфигурировать библиотеку для построения схем отдельно, а затем добавить их в пакет. Вы должны построить свои схемы &lt;em&gt;после&lt;/em&gt; создания библиотеки, чтобы они были помещены в правильный каталог.</target>
        </trans-unit>
        <trans-unit id="885d50f557834570c68a2e5e1be6b220c9216f5a" translate="yes" xml:space="preserve">
          <source>To bypass the service worker you can set &lt;code&gt;ngsw-bypass&lt;/code&gt; as a request header, or as a query parameter. (The value of the header or query parameter is ignored and can be empty or omitted.)</source>
          <target state="translated">Чтобы обойти сервисного работника, вы можете установить &lt;code&gt;ngsw-bypass&lt;/code&gt; в качестве заголовка запроса или в качестве параметра запроса. (Значение заголовка или параметра запроса игнорируется и может быть пустым или опущено.)</target>
        </trans-unit>
        <trans-unit id="12534712788ba78416f7f95870eaa280458520d6" translate="yes" xml:space="preserve">
          <source>To catch errors, you &lt;strong&gt;&quot;pipe&quot; the observable&lt;/strong&gt; result from &lt;code&gt;http.get()&lt;/code&gt; through an RxJS &lt;code&gt;catchError()&lt;/code&gt; operator.</source>
          <target state="translated">Чтобы поймать ошибки, вы &lt;strong&gt;&amp;laquo; &lt;/strong&gt; &lt;code&gt;http.get()&lt;/code&gt; &lt;strong&gt;&amp;raquo; наблюдаемый&lt;/strong&gt; результат из http.get () через оператор RxJS &lt;code&gt;catchError()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1399e0f4384532fff4fb5004d497a9b72d3762f" translate="yes" xml:space="preserve">
          <source>To change the appearance in this way, take the following steps.</source>
          <target state="translated">Чтобы изменить внешний вид таким образом,выполните следующие действия.</target>
        </trans-unit>
        <trans-unit id="1e0fe49f14510b713680172388a0dd717d0f6c10" translate="yes" xml:space="preserve">
          <source>To change the controls in the array, use the &lt;code&gt;push&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;removeAt&lt;/code&gt; or &lt;code&gt;clear&lt;/code&gt; methods in &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; itself. These methods ensure the controls are properly tracked in the form's hierarchy. Do not modify the array of &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt;s used to instantiate the &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; directly, as that result in strange and unexpected behavior such as broken change detection.</source>
          <target state="translated">Чтобы изменить элементы управления в массиве, используйте методы &lt;code&gt;push&lt;/code&gt; , &lt;code&gt;insert&lt;/code&gt; , &lt;code&gt;removeAt&lt;/code&gt; или &lt;code&gt;clear&lt;/code&gt; в самом &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; . Эти методы обеспечивают правильное отслеживание элементов управления в иерархии формы. Не изменяйте массив объектов &lt;code&gt;&lt;a href=&quot;abstractcontrol&quot;&gt;AbstractControl&lt;/a&gt;&lt;/code&gt; , используемых для непосредственного создания экземпляра &lt;code&gt;&lt;a href=&quot;formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; , поскольку это приводит к странному и неожиданному поведению, такому как обнаружение неработающих изменений.</target>
        </trans-unit>
        <trans-unit id="fa6c4e125d9030b1dd5bdb271106b3ee1210b79c" translate="yes" xml:space="preserve">
          <source>To change the name of the source language file generated by the extraction tool, use the &lt;code&gt;--outFile&lt;/code&gt; command option:</source>
          <target state="translated">Чтобы изменить имя файла исходного языка, созданного инструментом извлечения, используйте &lt;code&gt;--outFile&lt;/code&gt; команды --outFile :</target>
        </trans-unit>
        <trans-unit id="63029d22a7a0498f402e2ef9e4441e473404955c" translate="yes" xml:space="preserve">
          <source>To check that you have the npm client installed, run &lt;code&gt;npm -v&lt;/code&gt; in a terminal/console window.</source>
          <target state="translated">Чтобы убедиться, что у вас установлен клиент npm, запустите &lt;code&gt;npm -v&lt;/code&gt; в окне терминала / консоли.</target>
        </trans-unit>
        <trans-unit id="ca63fd9203fa01e0094b45d6b8d3f7271e129840" translate="yes" xml:space="preserve">
          <source>To check that your services are working as you intend, you can write tests specifically for them.</source>
          <target state="translated">Чтобы проверить,что ваши услуги работают так,как вы задумывали,вы можете написать тесты специально для них.</target>
        </trans-unit>
        <trans-unit id="6e948743b462eea7115d418352e1dbfa4b4b10ff" translate="yes" xml:space="preserve">
          <source>To check your app's version of Angular: From within your project directory, use the &lt;code&gt;ng version&lt;/code&gt; command.</source>
          <target state="translated">Чтобы проверить версию Angular вашего приложения: Из каталога вашего проекта используйте команду &lt;code&gt;ng version&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13078c07edb73de738fd267221caa6c4bad9f0a1" translate="yes" xml:space="preserve">
          <source>To check your version, run &lt;code&gt;node -v&lt;/code&gt; in a terminal/console window.</source>
          <target state="translated">Чтобы проверить свою версию, запустите &lt;code&gt;node -v&lt;/code&gt; в окне терминала / консоли.</target>
        </trans-unit>
        <trans-unit id="07cec4d840c8d65fc9e2b7b36b758a8ade445776" translate="yes" xml:space="preserve">
          <source>To combine property and event bindings using the banana-in-a-box syntax, &lt;code&gt;[()]&lt;/code&gt;, see &lt;a href=&quot;template-syntax#two-way&quot;&gt;Two-way Binding&lt;/a&gt;.</source>
          <target state="translated">Чтобы объединить привязки свойств и событий с использованием синтаксиса banana-in-a-box, &lt;code&gt;[()]&lt;/code&gt; , см. &lt;a href=&quot;template-syntax#two-way&quot;&gt;Двусторонняя привязка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="642e16b417c34000ddb663b1633653c4924b0252" translate="yes" xml:space="preserve">
          <source>To combine property and event bindings using the banana-in-a-box syntax, &lt;code&gt;[()]&lt;/code&gt;, see &lt;a href=&quot;two-way-binding&quot;&gt;Two-way Binding&lt;/a&gt;.</source>
          <target state="translated">Чтобы объединить привязки свойств и событий с использованием синтаксиса &amp;laquo;банан в коробке&amp;raquo;, &lt;code&gt;[()]&lt;/code&gt; , см. &lt;a href=&quot;two-way-binding&quot;&gt;Двусторонняя привязка&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="81d564a34225b7a86fd760cbe08da660a47b6d5c" translate="yes" xml:space="preserve">
          <source>To complete this tutorial, you should have a basic understanding of the following concepts:</source>
          <target state="translated">Чтобы закончить это учебное пособие,вы должны иметь базовое понимание следующих понятий:</target>
        </trans-unit>
        <trans-unit id="b3236306fb71061a53e3712837b9be971697d08d" translate="yes" xml:space="preserve">
          <source>To conditionally display an element, place the element's &lt;code&gt;hidden&lt;/code&gt; property in square brackets and set it to a quoted template expression that evaluates to the &lt;em&gt;opposite&lt;/em&gt; of &lt;em&gt;show&lt;/em&gt;.</source>
          <target state="translated">Чтобы условно отобразить элемент, место элемента &lt;code&gt;hidden&lt;/code&gt; свойств в квадратных скобках и установить его в кавычках выражения шаблона , который вычисляется в &lt;em&gt;противоположном&lt;/em&gt; от &lt;em&gt;шоу&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="53182894e9c6995045a12635221f90b2e4299c08" translate="yes" xml:space="preserve">
          <source>To configure access to your own users' CLI usage data, use the &lt;code&gt;ng &lt;a href=&quot;../api/router/router#config&quot;&gt;config&lt;/a&gt;&lt;/code&gt; command to add a key to your global &lt;a href=&quot;../guide/workspace-config&quot;&gt;&lt;code&gt;angular.json&lt;/code&gt; workspace configuration file&lt;/a&gt;. The key goes under &lt;code&gt;cli.analyticsSharing&lt;/code&gt; at the top level of the file, outside the &lt;code&gt;projects&lt;/code&gt; sections. The value of the key is your organization's tracking ID, as assigned by Google Analytics. This ID is a string that looks like &lt;code&gt;UA-123456-12&lt;/code&gt;.</source>
          <target state="translated">Чтобы настроить доступ к данным об использовании CLI своих пользователей, используйте команду &lt;code&gt;ng &lt;a href=&quot;../api/router/router#config&quot;&gt;config&lt;/a&gt;&lt;/code&gt; , чтобы добавить ключ в файл глобальной &lt;a href=&quot;../guide/workspace-config&quot;&gt; &lt;code&gt;angular.json&lt;/code&gt; рабочей&lt;/a&gt; области angular.json . Ключ находится под &lt;code&gt;cli.analyticsSharing&lt;/code&gt; на верхнем уровне файла, вне разделов &lt;code&gt;projects&lt;/code&gt; . Значение ключа - это идентификатор отслеживания вашей организации, назначенный Google Analytics. Этот идентификатор представляет собой строку, которая выглядит как &lt;code&gt;UA-123456-12&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43641662c305bf9094c3e1aabcca4466e6a5d8e8" translate="yes" xml:space="preserve">
          <source>To configure access to your own users' CLI usage data, use the &lt;code&gt;ng config&lt;/code&gt; command to add a key to your global &lt;a href=&quot;../guide/workspace-config&quot;&gt;&lt;code&gt;angular.json&lt;/code&gt; workspace configuration file&lt;/a&gt;. The key goes under &lt;code&gt;cli.analyticsSharing&lt;/code&gt; at the top level of the file, outside the &lt;code&gt;projects&lt;/code&gt; sections. The value of the key is your organization's tracking ID, as assigned by Google Analytics. This ID is a string that looks like &lt;code&gt;UA-123456-12&lt;/code&gt;.</source>
          <target state="translated">Чтобы настроить доступ к данным об использовании интерфейса командной строки ваших собственных пользователей, используйте команду &lt;code&gt;ng config&lt;/code&gt; , чтобы добавить ключ в глобальный &lt;a href=&quot;../guide/workspace-config&quot;&gt; &lt;code&gt;angular.json&lt;/code&gt; конфигурации рабочей&lt;/a&gt; области angular.json . Ключ находится в &lt;code&gt;cli.analyticsSharing&lt;/code&gt; на верхнем уровне файла, за пределами разделов &lt;code&gt;projects&lt;/code&gt; . Значение ключа - это идентификатор отслеживания вашей организации, присвоенный Google Analytics. Этот идентификатор представляет собой строку вида &lt;code&gt;UA-123456-12&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="081b1f073ba92cd82743621b3f2f2eb2c90049a3" translate="yes" xml:space="preserve">
          <source>To configure the Angular Router, you must define a route for AngularJS URLs. To match those URLs, you add a route configuration that uses the &lt;code&gt;&lt;a href=&quot;../api/router/route#matcher&quot;&gt;matcher&lt;/a&gt;&lt;/code&gt; property. The &lt;code&gt;&lt;a href=&quot;../api/router/route#matcher&quot;&gt;matcher&lt;/a&gt;&lt;/code&gt; allows you to use custom pattern matching for URL paths. The Angular Router tries to match on more specific routes such as static and variable routes first. When it doesn't find a match, it then looks at custom matchers defined in your route configuration. If the custom matchers don't match a route, it then goes to catch-all routes, such as a 404 page.</source>
          <target state="translated">Чтобы настроить Angular Router, необходимо определить маршрут для URL-адресов AngularJS. Чтобы соответствовать этим URL-адресам, вы добавляете конфигурацию маршрута, которая использует свойство &lt;code&gt;&lt;a href=&quot;../api/router/route#matcher&quot;&gt;matcher&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;../api/router/route#matcher&quot;&gt;matcher&lt;/a&gt;&lt;/code&gt; позволяет использовать пользовательские сопоставления с образцом для путей URL. Угловой маршрутизатор сначала пытается найти соответствие более конкретным маршрутам, таким как статические и переменные. Когда он не находит соответствия, он просматривает пользовательские соответствия, определенные в конфигурации вашего маршрута. Если пользовательские сопоставления не совпадают с маршрутом, он переходит ко всем маршрутам, таким как страница 404.</target>
        </trans-unit>
        <trans-unit id="8b0d3dc20b07af14896fcbb5d5c567cd4a2c240d" translate="yes" xml:space="preserve">
          <source>To configure the Angular Router, you must define a route for AngularJS URLs. To match those URLs, you add a route configuration that uses the &lt;code&gt;matcher&lt;/code&gt; property. The &lt;code&gt;matcher&lt;/code&gt; allows you to use custom pattern matching for URL paths. The Angular Router tries to match on more specific routes such as static and variable routes first. When it doesn't find a match, it then looks at custom matchers defined in your route configuration. If the custom matchers don't match a route, it then goes to catch-all routes, such as a 404 page.</source>
          <target state="translated">Чтобы настроить Angular Router, вы должны определить маршрут для URL-адресов AngularJS. Чтобы сопоставить эти URL-адреса, вы добавляете конфигурацию маршрута, которая использует свойство &lt;code&gt;matcher&lt;/code&gt; . Средство &lt;code&gt;matcher&lt;/code&gt; позволяет использовать настраиваемое сопоставление шаблонов для путей URL. Маршрутизатор Angular сначала пытается сопоставить более конкретные маршруты, такие как статические и переменные маршруты. Когда он не находит совпадения, он затем просматривает пользовательские сопоставители, определенные в вашей конфигурации маршрута. Если пользовательские сопоставители не соответствуют маршруту, он затем переходит к маршрутам для приема всей почты домена, например к странице 404.</target>
        </trans-unit>
        <trans-unit id="e972c128dc7bc14f3f17a87fcada88a6a2d87a1e" translate="yes" xml:space="preserve">
          <source>To configure whether navigation requests are sent through to the network or not, see the &lt;a href=&quot;service-worker-config#navigation-request-strategy&quot;&gt;navigationRequestStrategy&lt;/a&gt; section.</source>
          <target state="translated">Чтобы настроить, будут ли запросы навигации отправляться в сеть или нет, см. Раздел &lt;a href=&quot;service-worker-config#navigation-request-strategy&quot;&gt;navigationRequestStrategy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b884870273119a7d7e697d247c4d659cdde8b585" translate="yes" xml:space="preserve">
          <source>To confirm submission, open the console where you should see an object containing the name and address you submitted.</source>
          <target state="translated">Чтобы подтвердить отправку,откройте консоль,где вы должны увидеть объект,содержащий имя и адрес,который вы отправили.</target>
        </trans-unit>
        <trans-unit id="85a5f9228b0c283a4c0767bf17f5218cf21f432e" translate="yes" xml:space="preserve">
          <source>To confirm that the display updates as the user adds heroes, see the live example.</source>
          <target state="translated">Для подтверждения того,что дисплей обновляется по мере добавления пользователем героев,смотрите живой пример.</target>
        </trans-unit>
        <trans-unit id="f6838e6bcfc83475121bb1e4ad55f4fbcaddb58b" translate="yes" xml:space="preserve">
          <source>To confirm that two-way data binding works for the entire hero model, add a new binding at the top to the component's &lt;code&gt;diagnostic&lt;/code&gt; property.</source>
          <target state="translated">Чтобы убедиться, что двусторонняя привязка данных работает для всей модели героя, добавьте новую привязку вверху к &lt;code&gt;diagnostic&lt;/code&gt; свойству компонента .</target>
        </trans-unit>
        <trans-unit id="99be46bd11d0de83ad9e296968ef2c5a7118146b" translate="yes" xml:space="preserve">
          <source>To continue exploring Angular, choose either of the following options:</source>
          <target state="translated">Чтобы продолжить изучение Angular,выберите один из следующих вариантов:</target>
        </trans-unit>
        <trans-unit id="a3014c43a2313b977c6aed25419c31a95265fa08" translate="yes" xml:space="preserve">
          <source>To contrast the two types of components, there are components which are included in the template, which are declarative. Additionally, there are components which you load imperatively; that is, entry components.</source>
          <target state="translated">Для противопоставления двух типов компонентов в шаблоне имеются компоненты,которые являются декларативными.Кроме того,есть компоненты,которые загружаются обязательно,т.е.компоненты ввода.</target>
        </trans-unit>
        <trans-unit id="959d46928d85d110fdade5f2293bf97890445838" translate="yes" xml:space="preserve">
          <source>To control how this encapsulation happens on a &lt;em&gt;per component&lt;/em&gt; basis, you can set the &lt;em&gt;view encapsulation mode&lt;/em&gt; in the component metadata. Choose from the following modes:</source>
          <target state="translated">Чтобы контролировать, как происходит инкапсуляция для &lt;em&gt;каждого компонента&lt;/em&gt; , вы можете установить &lt;em&gt;режим инкапсуляции представления&lt;/em&gt; в метаданных компонента. Выберите один из следующих режимов:</target>
        </trans-unit>
        <trans-unit id="c93024cc33ad0ddbba14e6bbd25bf12722637c4a" translate="yes" xml:space="preserve">
          <source>To control the state of the button, set the &lt;code&gt;disabled&lt;/code&gt;&lt;em&gt;property&lt;/em&gt;,</source>
          <target state="translated">Чтобы контролировать состояние кнопки, установите &lt;em&gt;свойство &lt;/em&gt; &lt;code&gt;disabled&lt;/code&gt; ,&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
