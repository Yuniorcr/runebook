<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="94b7d838e156ba687705d55bf53cfaea0e2c0706" translate="yes" xml:space="preserve">
          <source>An options object containing developer-defined parameters that provide styling defaults and can be overridden on invocation.</source>
          <target state="translated">Объект опций,содержащий определяемые разработчиком параметры,которые обеспечивают стилизацию по умолчанию и могут быть переопределены при вызове.</target>
        </trans-unit>
        <trans-unit id="003f413ea648a113813256191625bc45b897caef" translate="yes" xml:space="preserve">
          <source>An options object that can contain a delay value for the start of the animation, and additional developer-defined parameters. Provided values for additional parameters are used as defaults, and override values can be passed to the caller on invocation.</source>
          <target state="translated">Объект настроек,который может содержать значение задержки для начала анимации,и дополнительные параметры,определяемые разработчиком.Предоставляемые значения дополнительных параметров используются как значения по умолчанию,а значения переопределения могут передаваться вызывающему абоненту по вызову.</target>
        </trans-unit>
        <trans-unit id="69da736740d2be7cce09038dd8384329068cb27f" translate="yes" xml:space="preserve">
          <source>An options object that can contain a delay value for the start of the animation, and additional override values for developer-defined parameters.</source>
          <target state="translated">Объект настроек,который может содержать значение задержки для начала анимации,а также дополнительные значения переопределения для параметров,определяемых разработчиком.</target>
        </trans-unit>
        <trans-unit id="eb15eab209a0162e90e8de577b3e4f749717a52f" translate="yes" xml:space="preserve">
          <source>An options object that determines how the URL should be constructed or interpreted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ba026d039587baf26944d77bd6fbe6191f4188" translate="yes" xml:space="preserve">
          <source>An options object. Use the 'limit' field to limit the total number of items to collect.</source>
          <target state="translated">Объект опций.Используйте поле &quot;Ограничение&quot;,чтобы ограничить общее количество собираемых предметов.</target>
        </trans-unit>
        <trans-unit id="2b8661ad4d0353fe1ca3345139fe01a98c998165" translate="yes" xml:space="preserve">
          <source>An outgoing HTTP request with an optional typed body.</source>
          <target state="translated">Исходящий HTTP-запрос с необязательно набранным телом.</target>
        </trans-unit>
        <trans-unit id="2b3e6f58b8017320fb8ad2d620bfa5f840b529df" translate="yes" xml:space="preserve">
          <source>An unmodifiable list of items that Angular keeps up to date when the state of the application changes.</source>
          <target state="translated">Немодифицируемый список элементов,которые Angular поддерживает в актуальном состоянии при изменении состояния приложения.</target>
        </trans-unit>
        <trans-unit id="b0c610b5f38365ac89cc6b28fe1af7503fdd6a36" translate="yes" xml:space="preserve">
          <source>An unrelated error causes the service worker to enter safe mode; that is, temporary deactivation.</source>
          <target state="translated">Не связанная с этим ошибка приводит к переходу работника сервисной службы в безопасный режим,т.е.к временной деактивации.</target>
        </trans-unit>
        <trans-unit id="cc3c9eefabc7f0cea08522cde34fd4642d6273a0" translate="yes" xml:space="preserve">
          <source>An unsurprising observation for a demo. To be honest, jazzing it up won't teach you anything new about forms. But this is an opportunity to exercise some of your newly won binding skills. If you aren't interested, skip to this page's conclusion.</source>
          <target state="translated">Неудивительное наблюдение для демонстрации.Честно говоря,дрожание не научит тебя ничему новому в формах.Но это возможность проявить некоторые из ваших недавно завоеванных связующих навыков.Если вам не интересно,переходите к заключению этой страницы.</target>
        </trans-unit>
        <trans-unit id="452cffe88932ae77fe68dbf055515d671319274e" translate="yes" xml:space="preserve">
          <source>An upgraded component may also have inputs and outputs, as defined by the scope/controller bindings of the original AngularJS component directive. When you use the component from an Angular template, provide the inputs and outputs using &lt;strong&gt;Angular template syntax&lt;/strong&gt;, observing the following rules:</source>
          <target state="translated">Модернизированный компонент может также иметь входы и выходы, как это определено привязками контекста / контроллера в исходной директиве компонента AngularJS. При использовании компонента из шаблона Angular предоставьте входные и выходные данные с использованием &lt;strong&gt;синтаксиса шаблона Angular&lt;/strong&gt; , соблюдая следующие правила:</target>
        </trans-unit>
        <trans-unit id="c32307f2c480f6053e5eabae11932dca1c5bd1fb" translate="yes" xml:space="preserve">
          <source>An upload progress event was received.</source>
          <target state="translated">Было получено событие о ходе загрузки.</target>
        </trans-unit>
        <trans-unit id="3ecd206c90170f8ae7938d7cd6bd36735ba58063" translate="yes" xml:space="preserve">
          <source>An upload progress event.</source>
          <target state="translated">Событие о ходе загрузки.</target>
        </trans-unit>
        <trans-unit id="e2e2a215be86f3d1acdd9e0d7a47d98ae4b62c70" translate="yes" xml:space="preserve">
          <source>Anchor element that specifies the location of this container in the containing view. Each view container can have only one anchor element, and each anchor element can have only a single view container.</source>
          <target state="translated">Элемент якоря,который определяет местоположение этого контейнера в содержащем представлении.Каждый контейнер вида может иметь только один якорный элемент,и каждый якорный элемент может иметь только один контейнер вида.</target>
        </trans-unit>
        <trans-unit id="b5d76a3a5f5caf5269f66c1a65575cf3b3e26baf" translate="yes" xml:space="preserve">
          <source>Anchor scrolling does not happen on 'popstate'. Instead, we restore the position that we stored or scroll to the top.</source>
          <target state="translated">Якорная прокрутка не происходит на &quot;поп-штате&quot;.Вместо этого мы восстанавливаем сохраненное положение или прокручиваем вверх.</target>
        </trans-unit>
        <trans-unit id="a307a637b89fe16e9922778e99bea2ed2e8e496b" translate="yes" xml:space="preserve">
          <source>Anchors</source>
          <target state="translated">Anchors</target>
        </trans-unit>
        <trans-unit id="f51084cd80a34108fd5adb4fd8ede43309c33705" translate="yes" xml:space="preserve">
          <source>And because this component is being used from the AngularJS module, and is an entry point into the Angular application, you must add it to the &lt;code&gt;entryComponents&lt;/code&gt; for the NgModule.</source>
          <target state="translated">И поскольку этот компонент используется из модуля AngularJS и является точкой входа в приложение Angular, вы должны добавить его в &lt;code&gt;entryComponents&lt;/code&gt; для NgModule.</target>
        </trans-unit>
        <trans-unit id="220dca1fbf38afa8fcb52d2808f50aad1904d032" translate="yes" xml:space="preserve">
          <source>And both together:</source>
          <target state="translated">И то и другое вместе:</target>
        </trans-unit>
        <trans-unit id="4cb748fd250adc2e2b24d881d384cd3f1ceeff26" translate="yes" xml:space="preserve">
          <source>And for the phone list component, a few adjustments to the router make the &lt;code&gt;RouteLink&lt;/code&gt; directives work.</source>
          <target state="translated">А для компонента списка телефонов несколько настроек маршрутизатора заставляют &lt;code&gt;RouteLink&lt;/code&gt; директивы RouteLink .</target>
        </trans-unit>
        <trans-unit id="029ba4666a2a6cfed9bf04394f2a405b66d1d323" translate="yes" xml:space="preserve">
          <source>And here are some tests:</source>
          <target state="translated">И вот несколько тестов:</target>
        </trans-unit>
        <trans-unit id="fffb5f839ebabc375dc3442fb647c4f7c7a16fe5" translate="yes" xml:space="preserve">
          <source>And here's how you could use it with a different parent type.</source>
          <target state="translated">И вот как ты можешь использовать его с другим типом родителей.</target>
        </trans-unit>
        <trans-unit id="726041286efb6514f4d5c48dff50434ecdff60e6" translate="yes" xml:space="preserve">
          <source>And if the first segment begins with &lt;code&gt;../&lt;/code&gt;, the router will go up one level.</source>
          <target state="translated">И если первый сегмент начинается с &lt;code&gt;../&lt;/code&gt; , маршрутизатор поднимется на один уровень вверх.</target>
        </trans-unit>
        <trans-unit id="ace9fdb010266cfc5897288d4e8cb9c930bc595b" translate="yes" xml:space="preserve">
          <source>And in some case, we don't want to trigger the new macro task when ticking, we can use &lt;code&gt;&lt;a href=&quot;../api/core/testing/tick&quot;&gt;tick&lt;/a&gt;(milliseconds, {processNewMacroTasksSynchronously: false})&lt;/code&gt; to not invoke new macro task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581486c9bdaa42d9745149011abbcef5b3d346e8" translate="yes" xml:space="preserve">
          <source>And in the earlier versions of &lt;code&gt;Angular&lt;/code&gt;, the following files were imported or added in your html file:</source>
          <target state="translated">А в более ранних версиях &lt;code&gt;Angular&lt;/code&gt; следующие файлы были импортированы или добавлены в ваш HTML-файл:</target>
        </trans-unit>
        <trans-unit id="b2274e10984bdcfe61fe3f96ba22a2a4c56b464e" translate="yes" xml:space="preserve">
          <source>And in the same file, add it to the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;declarations&lt;/code&gt; array:</source>
          <target state="translated">И в том же файле добавьте его в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;declarations&lt;/code&gt; @ NgModule :</target>
        </trans-unit>
        <trans-unit id="514df4d7b03eb7b4bff57e5cc4c1f60e85c21481" translate="yes" xml:space="preserve">
          <source>And later the value can be read from the router through &lt;code&gt;router.getCurrentNavigation&lt;/code&gt;. For example, to capture the &lt;code&gt;tracingId&lt;/code&gt; above during the &lt;code&gt;&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">И позже значение может быть прочитано с маршрутизатора через &lt;code&gt;router.getCurrentNavigation&lt;/code&gt; . Например, чтобы захватить &lt;code&gt;tracingId&lt;/code&gt; выше во время события &lt;code&gt;&lt;a href=&quot;navigationstart&quot;&gt;NavigationStart&lt;/a&gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ba55a85734b9b1212d4da61228070f47cd0a644b" translate="yes" xml:space="preserve">
          <source>And since you are routing to &lt;code&gt;PhoneListComponent&lt;/code&gt; and &lt;code&gt;PhoneDetailComponent&lt;/code&gt; directly rather than using a route template with a &lt;code&gt;&amp;lt;phone-list&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;phone-detail&amp;gt;&lt;/code&gt; tag, you can do away with their Angular selectors as well.</source>
          <target state="translated">И так как вы напрямую направляетесь к &lt;code&gt;PhoneListComponent&lt;/code&gt; и &lt;code&gt;PhoneDetailComponent&lt;/code&gt; , а не используете шаблон маршрута с &lt;code&gt;&amp;lt;phone-list&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;phone-detail&amp;gt;&lt;/code&gt; , вы также можете покончить с их угловыми селекторами.</target>
        </trans-unit>
        <trans-unit id="661c680937dcc4b25a3517246569dc41b5dcad75" translate="yes" xml:space="preserve">
          <source>And that is all you need to do to get the full benefit of AOT for hybrid Angular apps.</source>
          <target state="translated">И это все,что вам нужно сделать,чтобы получить все преимущества AOT для гибридных угловых приложений.</target>
        </trans-unit>
        <trans-unit id="fe495daae12d4210a639f103ea132191cdb68bc6" translate="yes" xml:space="preserve">
          <source>And that's all you need do to get the full benefit of AOT for Angular apps!</source>
          <target state="translated">И это все,что вам нужно сделать,чтобы получить все преимущества приложений AOT for Angular!</target>
        </trans-unit>
        <trans-unit id="4d279d81a0c6f6d0a1bd9ed9c92b0938afbbfc7a" translate="yes" xml:space="preserve">
          <source>And that's all you need to use AOT while upgrading your app!</source>
          <target state="translated">И это все,что вам нужно,чтобы использовать AOT во время обновления вашего приложения!</target>
        </trans-unit>
        <trans-unit id="f94852fb7b378d191158016d057691422128d0e7" translate="yes" xml:space="preserve">
          <source>And the second is the phone links spec:</source>
          <target state="translated">А второй-спецификация телефонной связи:</target>
        </trans-unit>
        <trans-unit id="a104acccd6d3a8c8cdd1533ec92d99aac644c44f" translate="yes" xml:space="preserve">
          <source>And you can also &lt;a href=&quot;pipes#parameterizing-a-pipe&quot;&gt;apply parameters&lt;/a&gt; to a pipe:</source>
          <target state="translated">И вы также можете &lt;a href=&quot;pipes#parameterizing-a-pipe&quot;&gt;применить параметры&lt;/a&gt; к трубе:</target>
        </trans-unit>
        <trans-unit id="1928f95c598b9e69462fcb512625cf8e28923044" translate="yes" xml:space="preserve">
          <source>Android</source>
          <target state="translated">Android</target>
        </trans-unit>
        <trans-unit id="8e09000e5c2a6bef346596ec2e0dec0fbf7495a6" translate="yes" xml:space="preserve">
          <source>Angular</source>
          <target state="translated">Angular</target>
        </trans-unit>
        <trans-unit id="9ce4e3444001628938f2114d22cede0cbf3a7345" translate="yes" xml:space="preserve">
          <source>Angular &lt;code&gt;NgModule&lt;/code&gt; names</source>
          <target state="translated">Угловые имена &lt;code&gt;NgModule&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1f6360f096ca639bc12a094822b3c9d70dfbe98f" translate="yes" xml:space="preserve">
          <source>Angular &lt;code&gt;TestBed&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006832a598bcc0cfd1bccafa8c1be8086583b93a" translate="yes" xml:space="preserve">
          <source>Angular &lt;em&gt;NgModules&lt;/em&gt; differ from and complement JavaScript (ES2015) modules. An NgModule declares a compilation context for a set of components that is dedicated to an application domain, a workflow, or a closely related set of capabilities. An NgModule can associate its components with related code, such as services, to form functional units.</source>
          <target state="translated">Угловые &lt;em&gt;модули NgModule&lt;/em&gt; отличаются от модулей JavaScript (ES2015) и дополняют их. NgModule объявляет контекст компиляции для набора компонентов, который выделен для домена приложения, рабочего процесса или тесно связанного набора возможностей. Модуль NgModule может связывать свои компоненты со связанным кодом, таким как сервисы, для формирования функциональных блоков.</target>
        </trans-unit>
        <trans-unit id="3a90be85a404ed076f232eda66f6c97b3763ffdd" translate="yes" xml:space="preserve">
          <source>Angular &lt;em&gt;TestBed&lt;/em&gt;</source>
          <target state="translated">Угловой &lt;em&gt;TestBed&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="53cd3baaa80c39be7dbd5ce81eccbf14c1556192" translate="yes" xml:space="preserve">
          <source>Angular &lt;strong&gt;pipes&lt;/strong&gt; provide formatting and transformation for data in the template, similar to AngularJS &lt;strong&gt;filters&lt;/strong&gt;. Many of the built-in filters in AngularJS have corresponding pipes in Angular. For more information on pipes, see &lt;a href=&quot;pipes&quot;&gt;Pipes&lt;/a&gt;.</source>
          <target state="translated">Угловые &lt;strong&gt;каналы&lt;/strong&gt; обеспечивают форматирование и преобразование данных в шаблоне, аналогично &lt;strong&gt;фильтрам&lt;/strong&gt; AngularJS . Многие из встроенных фильтров в AngularJS имеют соответствующие каналы в Angular. Для получения дополнительной информации о трубах см. &lt;a href=&quot;pipes&quot;&gt;Трубы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4edf38643031effae8215b553b7b9f34ca0029f" translate="yes" xml:space="preserve">
          <source>Angular CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da97b715125a7200320cdfe21476ab138911186" translate="yes" xml:space="preserve">
          <source>Angular CLI Builders</source>
          <target state="translated">Угловые строители КЛИ</target>
        </trans-unit>
        <trans-unit id="3653bc26169ea2a82f0e32bcc7ee3413e62dae01" translate="yes" xml:space="preserve">
          <source>Angular CLI builders</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb2c93eefe07b05ec8b83738295b287544a8994" translate="yes" xml:space="preserve">
          <source>Angular Components Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b62b52e382c94a5e31cfe2e45350c0ad57bfde2" translate="yes" xml:space="preserve">
          <source>Angular DI has a &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;hierarchical injection system&lt;/a&gt;, which means that nested injectors can create their own service instances. Angular regularly creates nested injectors. Whenever Angular creates a new instance of a component that has &lt;code&gt;providers&lt;/code&gt; specified in &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt;, it also creates a new &lt;em&gt;child injector&lt;/em&gt; for that instance. Similarly, when a new NgModule is lazy-loaded at run time, Angular can create an injector for it with its own providers.</source>
          <target state="translated">Angular DI имеет &lt;a href=&quot;hierarchical-dependency-injection&quot;&gt;иерархическую систему инъекций&lt;/a&gt; , что означает, что вложенные инжекторы могут создавать свои собственные экземпляры сервисов. Angular регулярно создает вложенные инжекторы. Всякий раз, когда Angular создает новый экземпляр компонента, у которого есть &lt;code&gt;providers&lt;/code&gt; указанные в &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; , он также создает новый &lt;em&gt;дочерний инжектор&lt;/em&gt; для этого экземпляра. Точно так же, когда новый NgModule загружается во время выполнения, Ленивый может создать инжектор для него со своими собственными поставщиками.</target>
        </trans-unit>
        <trans-unit id="b6f10f0e075446afd6bd0316044e6433708768b2" translate="yes" xml:space="preserve">
          <source>Angular Documentation</source>
          <target state="translated">Угловая документация</target>
        </trans-unit>
        <trans-unit id="f800173505ee0bcc1b11e1ddf36ce8a030dd7494" translate="yes" xml:space="preserve">
          <source>Angular Documentation Style Guide</source>
          <target state="translated">Руководство по стилю угловой документации</target>
        </trans-unit>
        <trans-unit id="4656edbf91cfa36158075026931a11032cead650" translate="yes" xml:space="preserve">
          <source>Angular Elements Overview</source>
          <target state="translated">Обзор угловых элементов</target>
        </trans-unit>
        <trans-unit id="a712d3ddcf5a40d1f3dbf3886b04c348fc777701" translate="yes" xml:space="preserve">
          <source>Angular Ivy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e07038b6aad22461ee7bae9dc2b45c7a7c2e2daf" translate="yes" xml:space="preserve">
          <source>Angular JSONP requests return an &lt;code&gt;Observable&lt;/code&gt;. Follow the pattern for subscribing to observables and use the RxJS &lt;code&gt;map&lt;/code&gt; operator to transform the response before using the &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;async pipe&lt;/a&gt; to manage the results.</source>
          <target state="translated">Угловые JSONP-запросы возвращают &lt;code&gt;Observable&lt;/code&gt; . Следуйте шаблону для подписки на наблюдаемые и используйте оператор &lt;code&gt;map&lt;/code&gt; RxJS для преобразования ответа перед использованием &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;асинхронного канала&lt;/a&gt; для управления результатами.</target>
        </trans-unit>
        <trans-unit id="cc9d2d14b4723cc3db1775007d3a69846afb3014" translate="yes" xml:space="preserve">
          <source>Angular Labs</source>
          <target state="translated">Лаборатории угловой диагностики</target>
        </trans-unit>
        <trans-unit id="9e7a56e64dea1098d28d55765096fc618a9b8502" translate="yes" xml:space="preserve">
          <source>Angular Labs is an initiative to cultivate new features and iterate on them quickly. Angular Labs provides a safe place for exploration and experimentation by the Angular team.</source>
          <target state="translated">Angular Labs-это инициатива по культивированию новых функций и быстрому проведению итераций на них.Лаборатории Angular Labs-это безопасное место для исследований и экспериментов,проводимых командой Angular.</target>
        </trans-unit>
        <trans-unit id="b00d2c229068abc17cff954895b39cdc3bf5ff0d" translate="yes" xml:space="preserve">
          <source>Angular Labs projects are not ready for production use, and no commitment is made to bring them to production. The policies and practices that are described in this document do not apply to Angular Labs projects.</source>
          <target state="translated">Проекты Angular Labs не готовы к использованию в производстве,и никаких обязательств по их внедрению в производство принято не было.Политика и практика,описанные в данном документе,не применимы к проектам Angular Labs.</target>
        </trans-unit>
        <trans-unit id="14af2b4bd0445fb663d36a7aa76d50d4caa6816b" translate="yes" xml:space="preserve">
          <source>Angular Language Service</source>
          <target state="translated">Служба английского языка</target>
        </trans-unit>
        <trans-unit id="72a9af2d40cd0cddac1ab7c8148463ece8b5ffc7" translate="yes" xml:space="preserve">
          <source>Angular Language Service in your editor</source>
          <target state="translated">Служба английского языка в вашем редакторе</target>
        </trans-unit>
        <trans-unit id="b73e3a2a2136a6a52f2f163943dedb823749ad44" translate="yes" xml:space="preserve">
          <source>Angular Language Service is currently available as an extension for &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt;, &lt;a href=&quot;https://www.jetbrains.com/webstorm&quot;&gt;WebStorm&lt;/a&gt;, and &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;.</source>
          <target state="translated">Angular Language Service в настоящее время доступна как расширение для &lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;кода Visual Studio&lt;/a&gt; , &lt;a href=&quot;https://www.jetbrains.com/webstorm&quot;&gt;WebStorm&lt;/a&gt; и &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="23326d8b3d91491eb282a0110a38cbdd0d630fcc" translate="yes" xml:space="preserve">
          <source>Angular Material, for example, supplies generation schematics for the UI components that it defines. The following command uses one of these schematics to render an Angular Material &lt;code&gt;&amp;lt;mat-table&amp;gt;&lt;/code&gt; that is pre-configured with a datasource for sorting and pagination.</source>
          <target state="translated">Например, Angular Material предоставляет схемы генерации для компонентов пользовательского интерфейса, которые он определяет. Следующая команда использует одну из этих схем для визуализации углового материала &lt;code&gt;&amp;lt;mat-table&amp;gt;&lt;/code&gt; , который предварительно настроен с источником данных для сортировки и разбивки на страницы.</target>
        </trans-unit>
        <trans-unit id="eb970b461e5095261dfad388a7452d357e39a442" translate="yes" xml:space="preserve">
          <source>Angular Push Notifications</source>
          <target state="translated">Уведомления об угловых толчках</target>
        </trans-unit>
        <trans-unit id="5abfa4de29cb28a07c1f78cb93d892d7047d5f4b" translate="yes" xml:space="preserve">
          <source>Angular Roadmap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc237f83efa1a2b5e00294a0bdae42196f8db9d6" translate="yes" xml:space="preserve">
          <source>Angular UI components</source>
          <target state="translated">Угловые компоненты пользовательского интерфейса</target>
        </trans-unit>
        <trans-unit id="ace4d235cf67a63f6410e00d7c53d4995b98a87e" translate="yes" xml:space="preserve">
          <source>Angular Universal can generate a static version of your app that is easily searchable, linkable, and navigable without JavaScript. Universal also makes a site preview available since each URL returns a fully rendered page.</source>
          <target state="translated">Angular Universal может генерировать статическую версию вашего приложения,которая легко доступна для поиска,компоновки и навигации без JavaScript.Universal также делает доступным предварительный просмотр сайта,так как каждый URL возвращает полностью отрисованную страницу.</target>
        </trans-unit>
        <trans-unit id="03a5c1283a3b0775a44e17725d52243197c5b04f" translate="yes" xml:space="preserve">
          <source>Angular Versioning and Releases</source>
          <target state="translated">Угловое версионирование и выпуски</target>
        </trans-unit>
        <trans-unit id="a8e46db497a411dfa77cebcd5f020de2e1dd9c9a" translate="yes" xml:space="preserve">
          <source>Angular Workspace Configuration</source>
          <target state="translated">Угловая конфигурация рабочего пространства</target>
        </trans-unit>
        <trans-unit id="cec48440aa352f69975cc33a6148da27d5bd34ec" translate="yes" xml:space="preserve">
          <source>Angular adds &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; to the application root injector, unless the NgModule is lazy-loaded. For a lazy-loaded NgModule, Angular creates a &lt;em&gt;child injector&lt;/em&gt; and adds the module's providers to the child injector.</source>
          <target state="translated">Angular добавляет &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#providers&quot;&gt;NgModule.providers&lt;/a&gt;&lt;/code&gt; в корневой инжектор приложения, если только NgModule не загружен с отложенным доступом. Для лениво загруженного модуля NgModule Angular создает &lt;em&gt;дочерний инжектор&lt;/em&gt; и добавляет поставщиков модуля в дочерний инжектор.</target>
        </trans-unit>
        <trans-unit id="8e142da275e31e83a34423dee09ae7d117ad91d6" translate="yes" xml:space="preserve">
          <source>Angular adds a decorator to the component class to provide any required metadata. The &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator declares that the class is a component and provides metadata about that component such as its selector (or tag) and its template.</source>
          <target state="translated">Angular добавляет декоратор к классу компонента для предоставления любых необходимых метаданных. &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; декоратор заявляет , что класс является компонентом и обеспечивает метаданные о том , что компонент , таких как его селектор (или метки) и его шаблон.</target>
        </trans-unit>
        <trans-unit id="aca3ec94d9d835e1ed7052f9071ac32c46856347" translate="yes" xml:space="preserve">
          <source>Angular adds a directive to the injector of the element to which it is applied. The test for the default color uses the injector of the second &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; to get its &lt;code&gt;HighlightDirective&lt;/code&gt; instance and its &lt;code&gt;defaultColor&lt;/code&gt;.</source>
          <target state="translated">Angular добавляет директиву к инжектору элемента, к которому она применяется. Тест для цвета по умолчанию использует инжектор второго &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; , чтобы получить его экземпляр &lt;code&gt;HighlightDirective&lt;/code&gt; и его &lt;code&gt;defaultColor&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="da8913da0b293e00f59a47b8577bbaab64befa70" translate="yes" xml:space="preserve">
          <source>Angular adds certain components to &lt;em&gt;entry components&lt;/em&gt; automatically. Components listed in &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; are added automatically. Components referenced in router configuration are added automatically. These two mechanisms account for almost all entry components.</source>
          <target state="translated">Angular добавляет определенные компоненты к &lt;em&gt;компонентам ввода&lt;/em&gt; автоматически. Компоненты, перечисленные в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; , добавляются автоматически. Компоненты, указанные в конфигурации маршрутизатора, добавляются автоматически. Эти два механизма составляют почти все входные компоненты.</target>
        </trans-unit>
        <trans-unit id="f50aee85f7427b0f3d13af1fcaba2844470cacc5" translate="yes" xml:space="preserve">
          <source>Angular already contains locale data for &lt;code&gt;en-US&lt;/code&gt;. The Angular CLI automatically includes the locale data and sets the &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; value when you use the &lt;code&gt;--localize&lt;/code&gt; option with &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8180ba453d2cdcbd2ab6f26a1150063377e78bc1" translate="yes" xml:space="preserve">
          <source>Angular also extracts alternate &lt;code&gt;select&lt;/code&gt; ICU expressions as separate translation units. The following shows a &lt;code&gt;select&lt;/code&gt; ICU expression in the component template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfaa4d4afc1fe6d25c5ea40750798df1ebd8735" translate="yes" xml:space="preserve">
          <source>Angular also has &lt;strong&gt;class binding&lt;/strong&gt;, which is a good way to add or remove a single class, as shown in the third example.</source>
          <target state="translated">Angular также имеет &lt;strong&gt;привязку классов&lt;/strong&gt; , которая является хорошим способом добавить или удалить один класс, как показано в третьем примере.</target>
        </trans-unit>
        <trans-unit id="aab5930151c105e1c5d03b6b3f8697b3dc85e9e7" translate="yes" xml:space="preserve">
          <source>Angular also has &lt;strong&gt;style binding&lt;/strong&gt;, which is good way to set a single style. This is shown in the second example.</source>
          <target state="translated">Angular также имеет &lt;strong&gt;привязку стилей&lt;/strong&gt; , что является хорошим способом установки единого стиля. Это показано во втором примере.</target>
        </trans-unit>
        <trans-unit id="010abb47fc3adc05722e4ae6eda90d0b3da5b301" translate="yes" xml:space="preserve">
          <source>Angular also has a &lt;code&gt;&lt;a href=&quot;../api/common/percentpipe&quot;&gt;percent&lt;/a&gt;&lt;/code&gt; pipe, which formats a number as a local percentage as shown in the third example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d0b768fde4742dc1976b77eaf1b2e28afafb0a" translate="yes" xml:space="preserve">
          <source>Angular also has a &lt;code&gt;percent&lt;/code&gt; pipe, which formats a number as a local percentage as shown in the third example.</source>
          <target state="translated">Angular также имеет канал &lt;code&gt;percent&lt;/code&gt; , который форматирует число как локальный процент, как показано в третьем примере.</target>
        </trans-unit>
        <trans-unit id="e7acf3cac93b6dc1dff702f72a776e3bad75bb0b" translate="yes" xml:space="preserve">
          <source>Angular also has an extensive &lt;a href=&quot;https://angular.io/resources&quot;&gt;network of 3rd-party tools and libraries&lt;/a&gt;.</source>
          <target state="translated">Angular также имеет обширную &lt;a href=&quot;https://angular.io/resources&quot;&gt;сеть сторонних инструментов и библиотек&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="461978cf1e142163ebf7b8be2cfa6ba767095496" translate="yes" xml:space="preserve">
          <source>Angular also has an extensive &lt;a href=&quot;https://angular.io/start/resources&quot;&gt;network of 3rd-party tools and libraries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f6f4c8cab83c598f5f92135c20c5a81d3804e3" translate="yes" xml:space="preserve">
          <source>Angular also supports workspaces with &lt;a href=&quot;file-structure#multiple-projects&quot;&gt;multiple projects&lt;/a&gt;. This type of development environment is suitable for advanced users who are developing &lt;a href=&quot;glossary#library&quot;&gt;shareable libraries&lt;/a&gt;, and for enterprises that use a &quot;monorepo&quot; development style, with a single repository and global configuration for all Angular projects.</source>
          <target state="translated">Angular также поддерживает рабочие пространства с &lt;a href=&quot;file-structure#multiple-projects&quot;&gt;несколькими проектами&lt;/a&gt; . Этот тип среды разработки подходит для опытных пользователей, которые разрабатывают &lt;a href=&quot;glossary#library&quot;&gt;совместно используемые библиотеки&lt;/a&gt; , и для предприятий, которые используют стиль разработки &amp;laquo;monorepo&amp;raquo; с единым хранилищем и глобальной конфигурацией для всех проектов Angular.</target>
        </trans-unit>
        <trans-unit id="18ccac82f42afc30dc13eb8f7f4a5b6af31380eb" translate="yes" xml:space="preserve">
          <source>Angular and i18n</source>
          <target state="translated">Угловой и i18n</target>
        </trans-unit>
        <trans-unit id="6dd49b5a09165a329e3b3706c72d3ba95738b3ba" translate="yes" xml:space="preserve">
          <source>Angular animations are based on CSS web transition functionality, so anything that can be styled or transformed in CSS can be animated the same way in Angular. Angular animations allow you to:</source>
          <target state="translated">Угловая анимация основана на функциональности CSS веб-перехода,поэтому все,что может быть стилизовано или преобразовано в CSS,может быть анимировано таким же образом в Angular.Угловая анимация позволяет:</target>
        </trans-unit>
        <trans-unit id="1a46f7dce153dad41d3155a72294e1932c658d00" translate="yes" xml:space="preserve">
          <source>Angular app-design fundamentals, as described in &lt;a href=&quot;architecture&quot;&gt;Angular Concepts&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd34f6fdaef4e5ba180dda435f076837cce8336" translate="yes" xml:space="preserve">
          <source>Angular app-design fundamentals, as described in &lt;a href=&quot;architecture&quot;&gt;Angular Concepts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2b46cf1fafda0f8f1b1015605c3b0e0c977cd6" translate="yes" xml:space="preserve">
          <source>Angular applications are styled with standard CSS. That means you can apply everything you know about CSS stylesheets, selectors, rules, and media queries directly to Angular applications.</source>
          <target state="translated">Угловые приложения выполнены в стиле стандартных CSS.Это означает,что вы можете применять все,что знаете о таблицах стилей CSS,селекторах,правилах и запросах средств массовой информации непосредственно к угловым приложениям.</target>
        </trans-unit>
        <trans-unit id="14d869c3fb5c7a4d91b5a670f800823baa6232f8" translate="yes" xml:space="preserve">
          <source>Angular applications must follow the same security principles as regular web applications, and must be audited as such. Angular-specific APIs that should be audited in a security review, such as the &lt;a href=&quot;security#bypass-security-apis&quot;&gt;&lt;em&gt;bypassSecurityTrust&lt;/em&gt;&lt;/a&gt; methods, are marked in the documentation as security sensitive.</source>
          <target state="translated">Ангулярные приложения должны следовать тем же принципам безопасности, что и обычные веб-приложения, и должны проверяться как таковые. Специфичные для &lt;a href=&quot;security#bypass-security-apis&quot;&gt;&lt;em&gt;углов&lt;/em&gt;&lt;/a&gt; API, которые должны проверяться в обзоре безопасности, такие как методы &lt;em&gt;bypassSecurityTrust&lt;/em&gt; , помечены в документации как чувствительные к безопасности.</target>
        </trans-unit>
        <trans-unit id="a1bf3aeaee18f4e10d8c47a1a0151f85f3df9106" translate="yes" xml:space="preserve">
          <source>Angular applications, and specifically applications that relied on the JIT compiler, used to require a polyfill for the &lt;a href=&quot;https://github.com/rbuckton/reflect-metadata&quot;&gt;reflect-metadata&lt;/a&gt; APIs.</source>
          <target state="translated">Угловые приложения, в частности, приложения, основанные на JIT-компиляторе, раньше требовали многозаполнения для API &lt;a href=&quot;https://github.com/rbuckton/reflect-metadata&quot;&gt;отражающих метаданных&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91733de9ca0b6019e9d774051ac122f55526d61d" translate="yes" xml:space="preserve">
          <source>Angular applications, as single-page applications, are in a prime position to benefit from the advantages of service workers. Starting with version 5.0.0, Angular ships with a service worker implementation. Angular developers can take advantage of this service worker and benefit from the increased reliability and performance it provides, without needing to code against low-level APIs.</source>
          <target state="translated">Угловые приложения,как одностраничные,находятся в лучшем положении,чтобы воспользоваться преимуществами работников сервисной службы.Начиная с версии 5.0.0,Угловые корабли с реализацией работника сервисной службы.Разработчики Angular могут воспользоваться преимуществами этого работника сервиса и получить выгоду от повышенной надежности и производительности,не прибегая к кодированию с низкоуровневыми API.</target>
        </trans-unit>
        <trans-unit id="30f0ca07ec9a65e367f6da8100c80d678801905c" translate="yes" xml:space="preserve">
          <source>Angular applies interceptors in the order that you provide them. If you provide interceptors &lt;em&gt;A&lt;/em&gt;, then &lt;em&gt;B&lt;/em&gt;, then &lt;em&gt;C&lt;/em&gt;, requests flow in &lt;em&gt;A-&amp;gt;B-&amp;gt;C&lt;/em&gt; and responses flow out &lt;em&gt;C-&amp;gt;B-&amp;gt;A&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6de042c4c8b613bc14b1004499391dfb5f5947" translate="yes" xml:space="preserve">
          <source>Angular applies interceptors in the order that you provide them. If you provide interceptors &lt;em&gt;A&lt;/em&gt;, then &lt;em&gt;B&lt;/em&gt;, then &lt;em&gt;C&lt;/em&gt;, requests will flow in &lt;em&gt;A-&amp;gt;B-&amp;gt;C&lt;/em&gt; and responses will flow out &lt;em&gt;C-&amp;gt;B-&amp;gt;A&lt;/em&gt;.</source>
          <target state="translated">Angular применяет перехватчики в том порядке, в котором вы их предоставляете. Если обеспечить перехватчики , а затем &lt;em&gt;B&lt;/em&gt; , то &lt;em&gt;C&lt;/em&gt; , запросы будут течь в &lt;em&gt;А-&amp;gt; В-&amp;gt; С&lt;/em&gt; и ответы будут вытекать из &lt;em&gt;С-&amp;gt; В-&amp;gt; а&lt;/em&gt; .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d48a23ccd7bfb25f976351b26c70f523a8ecb5d3" translate="yes" xml:space="preserve">
          <source>Angular applies the class &lt;code&gt;special&lt;/code&gt; to the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element so that you can use &lt;code&gt;special&lt;/code&gt; to apply CSS styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926bf2f3242ed68256b3bd4a48a61bdbc87faa0e" translate="yes" xml:space="preserve">
          <source>Angular apps are modular and Angular has its own modularity system called &lt;em&gt;NgModules&lt;/em&gt;. NgModules are containers for a cohesive block of code dedicated to an application domain, a workflow, or a closely related set of capabilities. They can contain components, service providers, and other code files whose scope is defined by the containing NgModule. They can import functionality that is exported from other NgModules, and export selected functionality for use by other NgModules.</source>
          <target state="translated">Приложения Angular являются модульными, и Angular имеет собственную систему модульности, которая называется &lt;em&gt;NgModules&lt;/em&gt; . NgModules - это контейнеры для связного блока кода, предназначенного для домена приложения, рабочего процесса или тесно связанного набора возможностей. Они могут содержать компоненты, поставщиков услуг и другие файлы кода, область действия которых определяется содержащим NgModule. Они могут импортировать функциональные возможности, экспортируемые из других NgModules, и экспортировать выбранные функциональные возможности для использования другими NgModules.</target>
        </trans-unit>
        <trans-unit id="25fa7e10b2ea8373e96b925201550beca498120d" translate="yes" xml:space="preserve">
          <source>Angular apps are perfect candidates for serving with a simple static HTML server. You don't need a server-side engine to dynamically compose application pages because Angular does that on the client-side.</source>
          <target state="translated">Угловые приложения-идеальные кандидаты на обслуживание с простым статическим HTML-сервером.Вам не нужен серверный движок для динамической компоновки страниц приложений,потому что Angular делает это на стороне клиента.</target>
        </trans-unit>
        <trans-unit id="89a4897f290e40a2133713a97fbe6e813fdda23d" translate="yes" xml:space="preserve">
          <source>Angular asks the injector for the service associated with &lt;code&gt;LoggerService&lt;/code&gt; and assigns the returned value to the &lt;code&gt;logger&lt;/code&gt; parameter.</source>
          <target state="translated">Angular запрашивает инжектор для службы, связанной с &lt;code&gt;LoggerService&lt;/code&gt; , и присваивает возвращаемое значение параметру &lt;code&gt;logger&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="467553e1fe6dc736a362530881af11583c4c3cac" translate="yes" xml:space="preserve">
          <source>Angular assigns a template variable a value based on where you declare the variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34736d096c8d01abb937a1a803b97d49650c45e4" translate="yes" xml:space="preserve">
          <source>Angular automatically adds components in the module's &lt;code&gt;bootstrap&lt;/code&gt; and route definitions into the &lt;code&gt;entryComponents&lt;/code&gt; list.</source>
          <target state="translated">Угловые автоматически добавляют компоненты этого модуля &lt;code&gt;bootstrap&lt;/code&gt; и маршрутизации определений в &lt;code&gt;entryComponents&lt;/code&gt; список.</target>
        </trans-unit>
        <trans-unit id="f64e43a20cf90e560e0797b938ab839d7501e2c4" translate="yes" xml:space="preserve">
          <source>Angular automatically adds components in the module's bootstrap and route definitions into the &lt;code&gt;entryComponents&lt;/code&gt; list. Use this option to add components that are bootstrapped using one of the imperative techniques, such as &lt;code&gt;ViewContainerRef.createComponent()&lt;/code&gt;.</source>
          <target state="translated">Angular автоматически добавляет компоненты в &lt;code&gt;entryComponents&lt;/code&gt; модуля и определения маршрутов в список entryComponents . Используйте этот параметр, чтобы добавить компоненты, которые загружаются с помощью одного из обязательных методов, таких как &lt;code&gt;ViewContainerRef.createComponent()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0629ce337235f8f877e6fa641ca67b726d78f938" translate="yes" xml:space="preserve">
          <source>Angular automatically checks host property bindings during change detection. If a binding changes, Angular updates the directive's host element.</source>
          <target state="translated">Угловой автоматически проверяет привязки свойств хоста при обнаружении изменений.При изменении привязки Angular обновляет элемент хоста директивы.</target>
        </trans-unit>
        <trans-unit id="8b9a86a14f14da58711979c6e06ad0d7a208e6d2" translate="yes" xml:space="preserve">
          <source>Angular automatically expands the shorthand syntax as it compiles the template. The context for each embedded view is logically merged to the current component context according to its lexical position.</source>
          <target state="translated">Angular автоматически расширяет синтаксис сокращений по мере компиляции шаблона.Контекст для каждого встроенного представления логически сливается с текущим контекстом компонента в соответствии с его лексическим положением.</target>
        </trans-unit>
        <trans-unit id="93f51725a20586ce3e33f655c1e7ce3a5377f16e" translate="yes" xml:space="preserve">
          <source>Angular automatically mirrors many control properties onto the form control element as CSS classes. You can use these classes to style form control elements according to the state of the form. The following classes are currently supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b49eb10d70820437d8d869bc39bde44099684f" translate="yes" xml:space="preserve">
          <source>Angular automatically pulls the value of the &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;myHero&lt;/code&gt; properties from the component and inserts those values into the browser. Angular updates the display when these properties change.</source>
          <target state="translated">Angular автоматически извлекает значение свойства &lt;code&gt;title&lt;/code&gt; и &lt;code&gt;myHero&lt;/code&gt; из компонента и вставляет эти значения в браузер. Angular обновляет отображение при изменении этих свойств.</target>
        </trans-unit>
        <trans-unit id="ff00d645a7fcd89b83ee39d6fc1b51274985e3e6" translate="yes" xml:space="preserve">
          <source>Angular automatically updates input properties during change detection. The &lt;code&gt;inputs&lt;/code&gt; property defines a set of &lt;code&gt;directiveProperty&lt;/code&gt; to &lt;code&gt;bindingProperty&lt;/code&gt; configuration:</source>
          <target state="translated">Angular автоматически обновляет входные свойства при обнаружении изменений. Свойство &lt;code&gt;inputs&lt;/code&gt; определяет набор &lt;code&gt;directiveProperty&lt;/code&gt; для конфигурации &lt;code&gt;bindingProperty&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="2fdcfb49d5c09fbaa84f9aee2d20c4bb5eaf5efe" translate="yes" xml:space="preserve">
          <source>Angular by default uses &lt;code&gt;en-US&lt;/code&gt; (English in the United States) as your app's source locale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb8d9e96c7ac6343272dadc9bead965bdb5f2ef" translate="yes" xml:space="preserve">
          <source>Angular calls &lt;code&gt;ngOnInit()&lt;/code&gt; shortly after creating a component.</source>
          <target state="translated">Angular вызывает &lt;code&gt;ngOnInit()&lt;/code&gt; вскоре после создания компонента.</target>
        </trans-unit>
        <trans-unit id="799636d3f55ab95abfe31d9616161e11148256ec" translate="yes" xml:space="preserve">
          <source>Angular calls both &lt;em&gt;AfterContent&lt;/em&gt; hooks before calling either of the &lt;em&gt;AfterView&lt;/em&gt; hooks. Angular completes composition of the projected content &lt;em&gt;before&lt;/em&gt; finishing the composition of this component's view. There is a small window between the &lt;code&gt;AfterContent...&lt;/code&gt; and &lt;code&gt;AfterView...&lt;/code&gt; hooks that allows you to modify the host view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0761730ce747644c7286543b08d9331ae7b0e5b5" translate="yes" xml:space="preserve">
          <source>Angular calls hook methods for &lt;em&gt;directives&lt;/em&gt; as well as components.</source>
          <target state="translated">Angular вызывает методы перехвата как для &lt;em&gt;директив,&lt;/em&gt; так и для компонентов.</target>
        </trans-unit>
        <trans-unit id="700fb4f4fabe764d32bfd76c4bdde2ed1a283939" translate="yes" xml:space="preserve">
          <source>Angular calls its &lt;code&gt;ngOnChanges()&lt;/code&gt; method whenever it detects changes to &lt;strong&gt;&lt;em&gt;input properties&lt;/em&gt;&lt;/strong&gt; of the component (or directive). This example monitors the &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; hook.</source>
          <target state="translated">Angular вызывает свой &lt;code&gt;ngOnChanges()&lt;/code&gt; всякий раз, когда обнаруживает изменения во &lt;strong&gt;&lt;em&gt;входных свойствах&lt;/em&gt;&lt;/strong&gt; компонента (или директивы). В этом примере отслеживается хук &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4118fdcd8c7c3292cb71b321cb427d4c834148fd" translate="yes" xml:space="preserve">
          <source>Angular calls the &lt;code&gt;ngOnChanges()&lt;/code&gt; method of a component or directive whenever it detects changes to the &lt;strong&gt;&lt;em&gt;input properties&lt;/em&gt;&lt;/strong&gt;. The &lt;em&gt;onChanges&lt;/em&gt; example demonstrates this by monitoring the &lt;code&gt;&lt;a href=&quot;../api/core/onchanges&quot;&gt;OnChanges&lt;/a&gt;()&lt;/code&gt; hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fba1c4e305809dca3c5497ed6c4e8bdddcee9d5" translate="yes" xml:space="preserve">
          <source>Angular calls these hook methods in the following order:</source>
          <target state="translated">Угловой вызывает эти методы крюка в следующем порядке:</target>
        </trans-unit>
        <trans-unit id="2eb6be30b85620d64c1287fc12627576cab0e3cb" translate="yes" xml:space="preserve">
          <source>Angular can launch with multiple bootstrap components, each with its own location in the host web page.</source>
          <target state="translated">Угловой может запускаться с несколькими загрузочными компонентами,каждый из которых имеет свое местоположение на главной веб-странице.</target>
        </trans-unit>
        <trans-unit id="a8d9d853fd628beed82fbc871f08b75361246094" translate="yes" xml:space="preserve">
          <source>Angular can't know at compile time what kind of HTML element the &lt;code&gt;nativeElement&lt;/code&gt; is or if it even is an HTML element. The app might be running on a &lt;em&gt;non-browser platform&lt;/em&gt;, such as the server or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;Web Worker&lt;/a&gt;, where the element may have a diminished API or not exist at all.</source>
          <target state="translated">Angular не может знать во время компиляции, что это за HTML-элемент &lt;code&gt;nativeElement&lt;/code&gt; или даже он является HTML-элементом. Приложение может работать на &lt;em&gt;не браузерной платформе&lt;/em&gt; , такой как сервер или &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API&quot;&gt;веб-работник&lt;/a&gt; , где элемент может иметь уменьшенный API или вообще не существовать.</target>
        </trans-unit>
        <trans-unit id="832d4b42c678434cf266550b2ed8c8f21564c3ee" translate="yes" xml:space="preserve">
          <source>Angular coding style guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d17ffea363e96f44fadf63bb3a1bdbe014532f" translate="yes" xml:space="preserve">
          <source>Angular comes with a stock of pipes such as &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;UpperCasePipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/lowercasepipe&quot;&gt;LowerCasePipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/currencypipe&quot;&gt;CurrencyPipe&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/percentpipe&quot;&gt;PercentPipe&lt;/a&gt;&lt;/code&gt;. They are all available for use in any template.</source>
          <target state="translated">Angular поставляется с &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; каналов, таких как DatePipe , &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;UpperCasePipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/lowercasepipe&quot;&gt;LowerCasePipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/currencypipe&quot;&gt;CurrencyPipe&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/percentpipe&quot;&gt;PercentPipe&lt;/a&gt;&lt;/code&gt; . Все они доступны для использования в любом шаблоне.</target>
        </trans-unit>
        <trans-unit id="0a907878ebd06df52b7177c708b1d8e885c2837c" translate="yes" xml:space="preserve">
          <source>Angular comes with its own API for loading components dynamically.</source>
          <target state="translated">Angular поставляется с собственным API для динамической загрузки компонентов.</target>
        </trans-unit>
        <trans-unit id="dd56aedc09d6c5dc3108daa71ce3e03750969451" translate="yes" xml:space="preserve">
          <source>Angular compatibility compiler. If you build your app using &lt;a href=&quot;glossary#ivy&quot;&gt;Ivy&lt;/a&gt;, but it depends on libraries that have not been compiled with Ivy, the CLI uses &lt;code&gt;ngcc&lt;/code&gt; to automatically update the dependent libraries to use Ivy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2363ce386377b1af5430cd7665d83300366b428" translate="yes" xml:space="preserve">
          <source>Angular compiler options</source>
          <target state="translated">Опции углового компилятора</target>
        </trans-unit>
        <trans-unit id="15a73b4d8e7403ebf3810f68763eaa4ff736a997" translate="yes" xml:space="preserve">
          <source>Angular components</source>
          <target state="translated">Угловые компоненты</target>
        </trans-unit>
        <trans-unit id="ffb4bdd5d65587e2e6c9c3c9d1f3cb6da8838095" translate="yes" xml:space="preserve">
          <source>Angular components always execute inside Angular framework codebase regardless of where they are instantiated.</source>
          <target state="translated">Угловые компоненты всегда выполняются внутри кодовой базы Angular framework,независимо от того,где они инстанциированы.</target>
        </trans-unit>
        <trans-unit id="233d6374ce6c4c863b26cd0f6a1152e33095938e" translate="yes" xml:space="preserve">
          <source>Angular components always execute inside the Angular framework codebase regardless of where they are instantiated.</source>
          <target state="translated">Угловые компоненты всегда выполняются внутри кодовой базы Angular framework,независимо от того,где они инстанциированы.</target>
        </trans-unit>
        <trans-unit id="a938ce5b6c5838ce8346e5bb8644d6b61ec091d8" translate="yes" xml:space="preserve">
          <source>Angular components are a subset of directives, always associated with a template. Unlike other directives, only one component can be instantiated for a given element in a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4225f862d6288eb7075b556d3706e253ca5d1d9" translate="yes" xml:space="preserve">
          <source>Angular components are a subset of directives, always associated with a template. Unlike other directives, only one component can be instantiated per an element in a template.</source>
          <target state="translated">Угловые компоненты являются подмножеством директив,всегда связанных с шаблоном.В отличие от других директив,только один компонент может быть инстанцирован на элемент в шаблоне.</target>
        </trans-unit>
        <trans-unit id="e4d73c4846ec246a55f1aa13c811b021c01194e2" translate="yes" xml:space="preserve">
          <source>Angular components that support content projection make use of an &lt;code&gt;&amp;lt;ng-content&amp;gt;&lt;/code&gt; tag within them. Here's an example of such a component:</source>
          <target state="translated">Угловые компоненты, поддерживающие проекцию контента, используют внутри них тег &lt;code&gt;&amp;lt;ng-content&amp;gt;&lt;/code&gt; . Вот пример такого компонента:</target>
        </trans-unit>
        <trans-unit id="060321b0fff1405ad06cb58d9ee155a149fcc9fa" translate="yes" xml:space="preserve">
          <source>Angular concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1071c499d51beceec87025fac82a393ee1e49214" translate="yes" xml:space="preserve">
          <source>Angular consumed the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; content during its actual rendering and replaced the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; with a diagnostic comment.</source>
          <target state="translated">Angular использовал содержимое &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; во время его фактического рендеринга и заменил &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; диагностическим комментарием.</target>
        </trans-unit>
        <trans-unit id="8636812be488a9e06f44b489bdc2a9078adde645" translate="yes" xml:space="preserve">
          <source>Angular creates &lt;code&gt;ElementInjector&lt;/code&gt;s implicitly for each DOM element.</source>
          <target state="translated">Angular создает &lt;code&gt;ElementInjector&lt;/code&gt; s неявно для каждого элемента DOM.</target>
        </trans-unit>
        <trans-unit id="c0741d3945dd49502e54a223724b94ed7a5fa8fc" translate="yes" xml:space="preserve">
          <source>Angular creates a lazy loaded module with its own injector, a child of the root injector. &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; causes Angular to look for a &lt;code&gt;GreetingModule&lt;/code&gt; in the parent injector, which this time is the root injector. Of course it finds the instance imported by the root &lt;code&gt;AppModule&lt;/code&gt;. Now &lt;code&gt;parentModule&lt;/code&gt; exists and the constructor throws the error.</source>
          <target state="translated">Angular создает ленивый загруженный модуль со своим собственным инжектором, потомком корневого инжектора. &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; заставляет Angular искать &lt;code&gt;GreetingModule&lt;/code&gt; в родительском инжекторе, который на этот раз является корневым инжектором. Конечно, он находит экземпляр, импортированный корневым &lt;code&gt;AppModule&lt;/code&gt; . Теперь &lt;code&gt;parentModule&lt;/code&gt; существует, и конструктор выдает ошибку.</target>
        </trans-unit>
        <trans-unit id="977c8f330d7f7406517c33d255bec85d1010c0fb" translate="yes" xml:space="preserve">
          <source>Angular creates and renders components along with their children, checks when their data-bound properties change, and destroys them before removing them from the DOM.</source>
          <target state="translated">Angular создает и отображает компоненты вместе со своими детьми,проверяет изменение их свойств,связанных с данными,и уничтожает их,прежде чем удалить с флэш-накопителя.</target>
        </trans-unit>
        <trans-unit id="ba24eb58c283a7912305a525ff29bc67536b0f26" translate="yes" xml:space="preserve">
          <source>Angular creates the component with its &lt;em&gt;own&lt;/em&gt; injector, which is a &lt;em&gt;child&lt;/em&gt; of the fixture injector. It registers the component's providers (the &lt;code&gt;HeroDetailService&lt;/code&gt; in this case) with the child injector.</source>
          <target state="translated">Angular создает компонент со своим &lt;em&gt;собственным&lt;/em&gt; инжектором, который является &lt;em&gt;дочерним&lt;/em&gt; по отношению к инжектору приспособления. Он регистрирует поставщиков компонента ( в данном случае &lt;code&gt;HeroDetailService&lt;/code&gt; ) с дочерним инжектором.</target>
        </trans-unit>
        <trans-unit id="8cd6666fc9fd18813b4f61de2cc4a4167a9bcabc" translate="yes" xml:space="preserve">
          <source>Angular creates, updates, and destroys components as the user moves through the application. Your app can take action at each moment in this lifecycle through optional &lt;a href=&quot;lifecycle-hooks&quot;&gt;lifecycle hooks&lt;/a&gt;, like &lt;code&gt;ngOnInit()&lt;/code&gt;.</source>
          <target state="translated">Angular создает, обновляет и уничтожает компоненты при перемещении пользователя по приложению. Ваше приложение может действовать в каждый момент этого жизненного цикла с помощью дополнительных &lt;a href=&quot;lifecycle-hooks&quot;&gt;хуков жизненного цикла&lt;/a&gt; , таких как &lt;code&gt;ngOnInit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1491a873fca02f484086bb4c25c113973485dbc4" translate="yes" xml:space="preserve">
          <source>Angular defines an &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; class to wrap render-specific native UI elements. In most cases, this allows you to use Angular templates and data binding to access DOM elements without reference to the native element.</source>
          <target state="translated">Angular определяет класс &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; для переноса специфичных для визуализации элементов пользовательского интерфейса. В большинстве случаев это позволяет использовать шаблоны Angular и привязку данных для доступа к элементам DOM без ссылки на собственный элемент.</target>
        </trans-unit>
        <trans-unit id="29b75e3aa5bf733082f6f2be9dc6166f8724c4b5" translate="yes" xml:space="preserve">
          <source>Angular defines decorators that attach metadata to classes or properties so that it knows what those classes or properties mean and how they should work.</source>
          <target state="translated">Угловой определяет декораторы,которые прикрепляют метаданные к классам или свойствам,чтобы он знал,что означают эти классы или свойства и как они должны работать.</target>
        </trans-unit>
        <trans-unit id="54a4705b9139dd29bd0480b9f3c8657f03607bed" translate="yes" xml:space="preserve">
          <source>Angular defines default builders for use with specific CLI commands, or with the general &lt;code&gt;ng run&lt;/code&gt; command. The JSON schemas that the define the options and defaults for each of these default builders are collected in the &lt;a href=&quot;https://github.com/angular/angular-cli/blob/8.0.x/packages/angular/cli/lib/config/schema.json&quot;&gt;&lt;code&gt;@angular-devkit/build-angular&lt;/code&gt;&lt;/a&gt; package. The schemas configure options for the following builders.</source>
          <target state="translated">Angular определяет компоновщики по умолчанию для использования с конкретными командами CLI или с общей командой &lt;code&gt;ng run&lt;/code&gt; . Схемы JSON, которые определяют параметры и значения по умолчанию для каждого из этих сборщиков по умолчанию, собраны в пакете &lt;a href=&quot;https://github.com/angular/angular-cli/blob/8.0.x/packages/angular/cli/lib/config/schema.json&quot;&gt; &lt;code&gt;@angular-devkit/build-angular&lt;/code&gt; &lt;/a&gt; . Схемы настраивают параметры для следующих сборщиков.</target>
        </trans-unit>
        <trans-unit id="dee1921a916c378e7946c3b9eeea976785c29693" translate="yes" xml:space="preserve">
          <source>Angular defines the following security contexts:</source>
          <target state="translated">Угловой определяет следующие контексты безопасности:</target>
        </trans-unit>
        <trans-unit id="6fb8bcc74fbecb42b212d7bf6efe735e1d1e63cd" translate="yes" xml:space="preserve">
          <source>Angular defines various pipes, such as the &lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt; pipe and &lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt; pipe; for a complete list, see the &lt;a href=&quot;../api?type=pipe&quot;&gt;Pipes API list&lt;/a&gt;. You can also define new pipes.</source>
          <target state="translated">Angular определяет различные каналы, такие как &lt;a href=&quot;../api/common/datepipe&quot;&gt;дата&lt;/a&gt; и &lt;a href=&quot;../api/common/currencypipe&quot;&gt;валюта&lt;/a&gt; ; полный список см. в &lt;a href=&quot;../api?type=pipe&quot;&gt;списке Pipes API&lt;/a&gt; . Вы также можете определить новые трубы.</target>
        </trans-unit>
        <trans-unit id="d17ca00c0eee29556940c4f3d3c141a911271225" translate="yes" xml:space="preserve">
          <source>Angular defines various pipes, such as the &lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt; pipe and &lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt; pipe; for a complete list, see the &lt;a href=&quot;api?type=pipe&quot;&gt;Pipes API list&lt;/a&gt;. You can also define new pipes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fd385bfb0f2bc723f93bd55ac70bf1b8515f00" translate="yes" xml:space="preserve">
          <source>Angular dependency injection is easiest when the provider token is a class that is also the type of the returned dependency object, or service.</source>
          <target state="translated">Введение угловой зависимости проще всего,когда токен провайдера является классом,который также является типом возвращаемого объекта или услуги зависимости.</target>
        </trans-unit>
        <trans-unit id="354f00bb969990f37d0cfc82991b44682a87aec0" translate="yes" xml:space="preserve">
          <source>Angular detects each change and immediately runs the pipe. This is fine for primitive input values. However, if you change something &lt;em&gt;inside&lt;/em&gt; a composite object (such as the month of a date, an element of an array, or an object property), you need to understand how change detection works, and how to use an &lt;code&gt;impure&lt;/code&gt; pipe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fdc7ee4e969732e2733a769bd9625a839effc81" translate="yes" xml:space="preserve">
          <source>Angular developers may encounter a &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt; &lt;i&gt;cross-origin resource sharing&lt;/i&gt;&lt;/a&gt; error when making a service request (typically a data service request) to a server other than the application's own host server. Browsers forbid such requests unless the server permits them explicitly.</source>
          <target state="translated">Разработчики Angular могут столкнуться с ошибкой &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;&lt;i&gt;совместного использования ресурсов между источниками&lt;/i&gt;&lt;/a&gt; при отправке запроса на обслуживание (обычно запрос на обслуживание данных) на сервер, отличный от собственного хост-сервера приложения. Браузеры запрещают такие запросы, если сервер не разрешает их явно. &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="33ead61c5ae99389962924106e86b6fa486483dc" translate="yes" xml:space="preserve">
          <source>Angular did. Angular automatically creates and attaches an &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive to the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Угловой сделал. Angular автоматически создает и присоединяет директиву &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; к тегу &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0c8cd873ef07f78a6133e0a8205b20af3eb32885" translate="yes" xml:space="preserve">
          <source>Angular distinguishes components from services to increase modularity and reusability. By separating a component's view-related functionality from other kinds of processing, you can make your component classes lean and efficient.</source>
          <target state="translated">Угловой отличает компоненты от услуг для повышения модульности и возможности повторного использования.Благодаря разделению функциональности,связанной с представлением компонента,от других видов обработки,вы можете сделать свои классы компонентов экономичными и эффективными.</target>
        </trans-unit>
        <trans-unit id="4ef98a05d3c9d89272386206620e0b855fdc66c0" translate="yes" xml:space="preserve">
          <source>Angular doc generation copies these image folders to the &lt;em&gt;runtime&lt;/em&gt; location, &lt;code&gt;generated/images&lt;/code&gt;. Set the image &lt;code&gt;src&lt;/code&gt; attribute to begin in &lt;em&gt;that&lt;/em&gt; directory.</source>
          <target state="translated">Генерация угловых документов копирует эти папки с изображениями в папку &lt;em&gt;времени исполнения&lt;/em&gt; , &lt;code&gt;generated/images&lt;/code&gt; . Установите атрибут image &lt;code&gt;src&lt;/code&gt; , чтобы он начинался в &lt;em&gt;этом&lt;/em&gt; каталоге.</target>
        </trans-unit>
        <trans-unit id="4527482607342ce8ca88ecd6e7dda8e4473c14f4" translate="yes" xml:space="preserve">
          <source>Angular documentation style guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9731c83bf305f628189c25e13177875fa54b80aa" translate="yes" xml:space="preserve">
          <source>Angular does not allow HTML with &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tags, neither with &lt;a href=&quot;interpolation&quot;&gt;interpolation&lt;/a&gt; nor property binding, which prevents the JavaScript from running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d4d08bb1ab2fe726e25cd17ea946e354b440dc" translate="yes" xml:space="preserve">
          <source>Angular does something similar with the &lt;code&gt;&lt;a href=&quot;../api/common/document&quot;&gt;DOCUMENT&lt;/a&gt;&lt;/code&gt; token so you can inject the browser's &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; object (or an abstraction of it, depending upon the platform in which the application runs).</source>
          <target state="translated">Angular делает нечто похожее с токеном &lt;code&gt;&lt;a href=&quot;../api/common/document&quot;&gt;DOCUMENT&lt;/a&gt;&lt;/code&gt; , чтобы вы могли внедрить объект &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; браузера (или его абстракцию, в зависимости от платформы, на которой работает приложение).</target>
        </trans-unit>
        <trans-unit id="c44939aad5d12f8f29f0ad08371766a5ea5b53c8" translate="yes" xml:space="preserve">
          <source>Angular does something similar with the &lt;code&gt;&lt;a href=&quot;../api/common/document&quot;&gt;DOCUMENT&lt;/a&gt;&lt;/code&gt; token so you can inject the browser's &lt;code&gt;document&lt;/code&gt; object (or an abstraction of it, depending upon the platform in which the application runs).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316fdcfddbfe253f5be7d7577a1028ffa824c548" translate="yes" xml:space="preserve">
          <source>Angular doesn't &lt;em&gt;enforce&lt;/em&gt; these principles. Angular does help you &lt;em&gt;follow&lt;/em&gt; these principles by making it easy to factor your application logic into services and make those services available to components through &lt;em&gt;dependency injection&lt;/em&gt;.</source>
          <target state="translated">Angular не &lt;em&gt;применяет&lt;/em&gt; эти принципы. Angular помогает вам &lt;em&gt;следовать&lt;/em&gt; этим принципам, упрощая разделение логики вашего приложения на сервисы и делая эти сервисы доступными для компонентов посредством &lt;em&gt;внедрения зависимостей&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="bec27d0e4374bf5d0fe0b39083d667524fda6667" translate="yes" xml:space="preserve">
          <source>Angular doesn't have a &lt;code&gt;FilterPipe&lt;/code&gt; or an &lt;code&gt;OrderByPipe&lt;/code&gt; for reasons explained in the &lt;a href=&quot;pipes#no-filter-pipe&quot;&gt;Appendix&lt;/a&gt; of this page.</source>
          <target state="translated">У Angular нет &lt;code&gt;FilterPipe&lt;/code&gt; или &lt;code&gt;OrderByPipe&lt;/code&gt; по причинам, объясненным в &lt;a href=&quot;pipes#no-filter-pipe&quot;&gt;Приложении&lt;/a&gt; на этой странице.</target>
        </trans-unit>
        <trans-unit id="d7de62023255791a40ee52811b94f5c474b98e55" translate="yes" xml:space="preserve">
          <source>Angular doesn't have a bootstrap directive. To launch the app in code, explicitly bootstrap the application's root module (&lt;code&gt;AppModule&lt;/code&gt;) in &lt;code&gt;main.ts&lt;/code&gt; and the application's root component (&lt;code&gt;AppComponent&lt;/code&gt;) in &lt;code&gt;app.module.ts&lt;/code&gt;.</source>
          <target state="translated">У Angular нет директивы для начальной загрузки. Чтобы запустить приложение в коде, явно &lt;code&gt;AppModule&lt;/code&gt; корневой модуль приложения ( AppModule ) в &lt;code&gt;main.ts&lt;/code&gt; и корневой компонент приложения ( &lt;code&gt;AppComponent&lt;/code&gt; ) в &lt;code&gt;app.module.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1db4be0ad95a78f2180c038b6339b94ffad67719" translate="yes" xml:space="preserve">
          <source>Angular doesn't know that you set the input element's &lt;code&gt;value&lt;/code&gt; property. It won't read that property until you raise the element's &lt;code&gt;input&lt;/code&gt; event by calling &lt;code&gt;&lt;a href=&quot;testing&quot;&gt;dispatchEvent()&lt;/a&gt;&lt;/code&gt;. &lt;em&gt;Then&lt;/em&gt; you call &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular не знает, что вы установили свойство &lt;code&gt;value&lt;/code&gt; элемента input . Он не будет читать это свойство, пока вы не &lt;code&gt;input&lt;/code&gt; событие ввода элемента, вызвав &lt;code&gt;&lt;a href=&quot;testing&quot;&gt;dispatchEvent()&lt;/a&gt;&lt;/code&gt; . &lt;em&gt;Затем&lt;/em&gt; вы вызываете &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b47387f69f445968d061e38730acd7cac89dc62e" translate="yes" xml:space="preserve">
          <source>Angular doesn't know that you set the input element's &lt;code&gt;value&lt;/code&gt; property. It won't read that property until you raise the element's &lt;code&gt;input&lt;/code&gt; event by calling &lt;code&gt;dispatchEvent()&lt;/code&gt;. &lt;em&gt;Then&lt;/em&gt; you call &lt;code&gt;detectChanges()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd520f6af29e767755a3104595b3766e46582132" translate="yes" xml:space="preserve">
          <source>Angular doesn't like NgModules with circular references, so don't let Module 'A' import Module 'B', which imports Module 'A'.</source>
          <target state="translated">Угловой не любит NgModules с круговыми ссылками,поэтому не позволяйте Модулю 'A' импортировать Модуль 'B',который импортирует Модуль 'A'.</target>
        </trans-unit>
        <trans-unit id="0fe275456a97ff34d2bc7a9ec6f6a087e43077a0" translate="yes" xml:space="preserve">
          <source>Angular doesn't provide pipes for filtering or sorting lists. Developers familiar with AngularJS know these as &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;orderBy&lt;/code&gt;. There are no equivalents in Angular.</source>
          <target state="translated">Angular не предоставляет каналы для фильтрации или сортировки списков. Разработчики, знакомые с AngularJS, знают это как &lt;code&gt;filter&lt;/code&gt; и &lt;code&gt;orderBy&lt;/code&gt; . В Angular нет эквивалентов.</target>
        </trans-unit>
        <trans-unit id="d035376ad03249c3d06ea41a32cd0585ba3807fd" translate="yes" xml:space="preserve">
          <source>Angular duplicates the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; for each item in the list, setting the &lt;code&gt;hero&lt;/code&gt; variable to the item (the hero) in the current iteration. Angular uses that variable as the context for the interpolation in the double curly braces.</source>
          <target state="translated">Angular дублирует &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; для каждого элемента в списке, устанавливая переменную &lt;code&gt;hero&lt;/code&gt; как элемент (герой) в текущей итерации. Angular использует эту переменную в качестве контекста для интерполяции в двойных фигурных скобках.</target>
        </trans-unit>
        <trans-unit id="85015daf970f460cc4cdb8249ea3dcc38c78f993" translate="yes" xml:space="preserve">
          <source>Angular element</source>
          <target state="translated">угловой элемент</target>
        </trans-unit>
        <trans-unit id="196a77ae5d8842832ab963740bce5e17b220f324" translate="yes" xml:space="preserve">
          <source>Angular elements overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9d62dd0c487b775ce03f3a8c3d97cf94a169d1" translate="yes" xml:space="preserve">
          <source>Angular erases the middle &quot;Hip!&quot;, leaving the cheer a bit less enthusiastic.</source>
          <target state="translated">Угловой стирает среднюю &quot;Гип!&quot;,оставляя за весельем немного меньше энтузиазма.</target>
        </trans-unit>
        <trans-unit id="9de65d4e4807d361a824604d00a11e49f70b5d15" translate="yes" xml:space="preserve">
          <source>Angular evaluates all expressions in double curly braces, converts the expression results to strings, and links them with neighboring literal strings. Finally, it assigns this composite interpolated result to an &lt;strong&gt;element or directive property&lt;/strong&gt;.</source>
          <target state="translated">Angular оценивает все выражения в двойных фигурных скобках, преобразует результаты выражения в строки и связывает их с соседними литеральными строками. Наконец, он присваивает этот составной интерполированный результат &lt;strong&gt;элементу или свойству директивы&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="46b3eae0baafae45c7e6c0a56aa7f909f9c5b753" translate="yes" xml:space="preserve">
          <source>Angular event binding syntax consists of a &lt;strong&gt;target event&lt;/strong&gt; name within parentheses on the left of an equal sign, and a quoted template statement on the right. The following event binding listens for the button's click events, calling the component's &lt;code&gt;onSave()&lt;/code&gt; method whenever a click occurs:</source>
          <target state="translated">Синтаксис привязки угловых событий состоит из &lt;strong&gt;целевого&lt;/strong&gt; имени &lt;strong&gt;события&lt;/strong&gt; в круглых скобках слева от знака равенства и цитируемой инструкции шаблона справа. Следующая привязка событий прослушивает события нажатия кнопки, вызывая метод &lt;code&gt;onSave()&lt;/code&gt; компонента при каждом нажатии:</target>
        </trans-unit>
        <trans-unit id="9a1e5ca49dc26e677715c17ed169b11bf4be97c1" translate="yes" xml:space="preserve">
          <source>Angular executes a &lt;em&gt;pure pipe&lt;/em&gt; only when it detects a &lt;em&gt;pure change&lt;/em&gt; to the input value. A pure change is either a change to a primitive input value (&lt;code&gt;String&lt;/code&gt;, &lt;code&gt;Number&lt;/code&gt;, &lt;code&gt;Boolean&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;) or a changed object reference (&lt;code&gt;Date&lt;/code&gt;, &lt;code&gt;Array&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Object&lt;/code&gt;).</source>
          <target state="translated">Angular выполняет &lt;em&gt;чистый канал&lt;/em&gt; только тогда, когда обнаруживает &lt;em&gt;чистое изменение&lt;/em&gt; входного значения. Чистое изменение - это либо изменение примитивного входного значения ( &lt;code&gt;String&lt;/code&gt; , &lt;code&gt;Number&lt;/code&gt; , &lt;code&gt;Boolean&lt;/code&gt; , &lt;code&gt;Symbol&lt;/code&gt; ), либо изменение ссылки на объект ( &lt;code&gt;Date&lt;/code&gt; , &lt;code&gt;Array&lt;/code&gt; , &lt;code&gt;Function&lt;/code&gt; , &lt;code&gt;Object&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="10e61b854f3aa7e97f224d066c41aff35eeab1f5" translate="yes" xml:space="preserve">
          <source>Angular executes an &lt;em&gt;impure pipe&lt;/em&gt; during every component change detection cycle. An impure pipe is called often, as often as every keystroke or mouse-move.</source>
          <target state="translated">Angular выполняет &lt;em&gt;нечистую трубу&lt;/em&gt; во время каждого цикла обнаружения изменений компонентов. Нечистый канал вызывается часто, так же часто, как каждое нажатие клавиши или движение мыши.</target>
        </trans-unit>
        <trans-unit id="30048831bd39a80f3d9aad084b8380f724c8d4fb" translate="yes" xml:space="preserve">
          <source>Angular executes hook methods in the following sequence. You can use them to perform the following kinds of operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f08b38aea522e78394f75ae5fb4ddda9056304" translate="yes" xml:space="preserve">
          <source>Angular executes template expressions after every change detection cycle. Change detection cycles are triggered by many asynchronous activities such as promise resolutions, HTTP results, timer events, key presses and mouse moves.</source>
          <target state="translated">Angular выполняет шаблонные выражения после каждого цикла обнаружения изменений.Циклы обнаружения изменений вызываются многими асинхронными действиями,такими как разрешение обещаний,результаты HTTP,события таймера,нажатия клавиш и перемещения мыши.</target>
        </trans-unit>
        <trans-unit id="93fd7debae3edda32d9bdc394dafa95f04ee8ce9" translate="yes" xml:space="preserve">
          <source>Angular follows the Unicode LDML convention that uses stable identifiers (Unicode locale identifiers) based on the norm &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP47&lt;/a&gt;. It is very important that you follow this convention when you define your locale, because the Angular i18n tools use this locale id to find the correct corresponding locale data.</source>
          <target state="translated">Angular следует соглашению Unicode LDML, которое использует стабильные идентификаторы (идентификаторы локали Unicode) на основе нормы &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP47&lt;/a&gt; . Очень важно следовать этому соглашению при определении вашей локали, потому что инструменты Angular i18n используют этот идентификатор локали, чтобы найти правильные данные соответствующей локали.</target>
        </trans-unit>
        <trans-unit id="e5403b18984f04aca1cbbd4e8aad53057e69dc66" translate="yes" xml:space="preserve">
          <source>Angular forms allow you to:</source>
          <target state="translated">Угловые формы позволяют:</target>
        </trans-unit>
        <trans-unit id="e1a9dce4e9c4b6bdfc09512c4aaf5cc2e6bb0b2e" translate="yes" xml:space="preserve">
          <source>Angular forms don't require a style library</source>
          <target state="translated">Угловые формы не требуют библиотеки стилей.</target>
        </trans-unit>
        <trans-unit id="a53bf8fe33eabf51e7d2da4584dccc79ed01e757" translate="yes" xml:space="preserve">
          <source>Angular functions for animating multiple elements start with &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; to find inner elements, for example gathering all images within a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;. The remaining functions, &lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt;, &lt;a href=&quot;../api/animations/group&quot;&gt;&lt;code&gt;group()&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt;, apply cascades or allow you to control how multiple animation steps are applied.</source>
          <target state="translated">Угловые функции для анимации нескольких элементов начинаются с &lt;code&gt;&lt;a href=&quot;../api/animations/query&quot;&gt;query&lt;/a&gt;()&lt;/code&gt; для поиска внутренних элементов, например, собирая все изображения в &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; . Остальные функции, &lt;code&gt;&lt;a href=&quot;../api/animations/stagger&quot;&gt;stagger&lt;/a&gt;()&lt;/code&gt; , &lt;a href=&quot;../api/animations/group&quot;&gt; &lt;code&gt;group()&lt;/code&gt; &lt;/a&gt; и &lt;code&gt;&lt;a href=&quot;../api/animations/sequence&quot;&gt;sequence&lt;/a&gt;()&lt;/code&gt; , применяют каскады или позволяют вам контролировать применение нескольких шагов анимации.</target>
        </trans-unit>
        <trans-unit id="347ddc68bb0465a1bdad6eaa3b2963e0159918e2" translate="yes" xml:space="preserve">
          <source>Angular fundamentals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd9d0319f292ad5b74842fe2d764295ebf9d611" translate="yes" xml:space="preserve">
          <source>Angular generates a class factory in a separate module and that factory &lt;a href=&quot;aot-compiler#exported-symbols&quot;&gt;can only access exported classes&lt;/a&gt;. To correct this error, export the referenced class.</source>
          <target state="translated">Angular создает фабрику классов в отдельном модуле, и эта фабрика &lt;a href=&quot;aot-compiler#exported-symbols&quot;&gt;может получить доступ только к экспортированным классам&lt;/a&gt; . Чтобы исправить эту ошибку, экспортируйте указанный класс.</target>
        </trans-unit>
        <trans-unit id="952768c15a2572a986f6ae3389d91e52e5d8c2ee" translate="yes" xml:space="preserve">
          <source>Angular generates a class factory in a separate module and that factory &lt;a href=&quot;aot-compiler#exported-symbols&quot;&gt;can only access exported functions&lt;/a&gt;. To correct this error, export the function.</source>
          <target state="translated">Angular создает фабрику классов в отдельном модуле, и эта фабрика &lt;a href=&quot;aot-compiler#exported-symbols&quot;&gt;может получить доступ только к экспортированным функциям&lt;/a&gt; . Чтобы исправить эту ошибку, экспортируйте функцию.</target>
        </trans-unit>
        <trans-unit id="a776357d683de5262cf58f9728286d0531d34b15" translate="yes" xml:space="preserve">
          <source>Angular generation &lt;a href=&quot;glossary#schematic&quot;&gt;schematics&lt;/a&gt; are instructions for modifying a project by adding files or modifying existing files. Individual schematics for the default Angular CLI &lt;code&gt;ng generate&lt;/code&gt; sub-commands are collected in the package &lt;code&gt;@angular&lt;/code&gt;. Specify the schematic name for a subcommand in the format &lt;code&gt;schematic-package:schematic-name&lt;/code&gt;; for example, the schematic for generating a component is &lt;code&gt;@angular:component&lt;/code&gt;.</source>
          <target state="translated">Угловые поколения &lt;a href=&quot;glossary#schematic&quot;&gt;схемы&lt;/a&gt; приведены инструкции по модификации проекта путем добавления файлов или изменения существующих файлов. Отдельные схемы для &lt;code&gt;@angular&lt;/code&gt; Angular CLI и &lt;code&gt;ng generate&lt;/code&gt; по умолчанию собраны в пакете @angular . Укажите имя схемы для подкоманды в формате &lt;code&gt;schematic-package:schematic-name&lt;/code&gt; ; например, схема для генерации компонента является &lt;code&gt;@angular:component&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="089b7f9bea4b756f67f9eed4c52f2969b5e785ba" translate="yes" xml:space="preserve">
          <source>Angular has a hierarchical injection system. There can be injectors at multiple levels, from the root injector created by the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; down through the component tree.</source>
          <target state="translated">Angular имеет иерархическую систему впрыска. Инжекторы могут быть на нескольких уровнях, от корневого инжектора, созданного &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; , до дерева компонентов.</target>
        </trans-unit>
        <trans-unit id="8203852c3d2c9dbdc69314b56a03f0403dac7220" translate="yes" xml:space="preserve">
          <source>Angular has an &lt;a href=&quot;router&quot;&gt;all-new router&lt;/a&gt;.</source>
          <target state="translated">Angular имеет совершенно &lt;a href=&quot;router&quot;&gt;новый маршрутизатор&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0aa5ff740e38d6d18edbfc10a1644f100e11e1f4" translate="yes" xml:space="preserve">
          <source>Angular has been creating new instances of the real &lt;code&gt;HeroDetailService&lt;/code&gt; all along!</source>
          <target state="translated">Angular все время создавал новые экземпляры настоящего &lt;code&gt;HeroDetailService&lt;/code&gt; !</target>
        </trans-unit>
        <trans-unit id="a5090fe3d42da3f7912eb530ce278090a19f01ff" translate="yes" xml:space="preserve">
          <source>Angular has built-in support to help prevent two common HTTP vulnerabilities, cross-site request forgery (CSRF or XSRF) and cross-site script inclusion (XSSI). Both of these must be mitigated primarily on the server side, but Angular provides helpers to make integration on the client side easier.</source>
          <target state="translated">Angular имеет встроенную поддержку для предотвращения двух распространенных HTTP-уязвимостей,подделки межсайтовых запросов (CSRF или XSRF)и включения межсайтовых скриптов (XSSI).Обе эти уязвимости должны быть устранены в первую очередь на стороне сервера,но Angular предоставляет помощников,чтобы сделать интеграцию на стороне клиента проще.</target>
        </trans-unit>
        <trans-unit id="75f9cada0487eab03f3583131e1b6541f4ca7704" translate="yes" xml:space="preserve">
          <source>Angular has its own vocabulary. Most Angular terms are common English words or computing terms that have a specific meaning within the Angular system.</source>
          <target state="translated">У Angular есть свой собственный словарь.Большинство угловых терминов являются общеупотребительными английскими словами или компьютерными терминами,которые имеют особое значение в английской системе угловых.</target>
        </trans-unit>
        <trans-unit id="36cef403a50f03b999516ba0de6de9a10a58c8db" translate="yes" xml:space="preserve">
          <source>Angular has more pre-defined directives that either alter the layout structure (for example, &lt;a href=&quot;built-in-directives#ngSwitch&quot;&gt;ngSwitch&lt;/a&gt;) or modify aspects of DOM elements and components (for example, &lt;a href=&quot;built-in-directives#ngStyle&quot;&gt;ngStyle&lt;/a&gt; and &lt;a href=&quot;built-in-directives#ngClass&quot;&gt;ngClass&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020323b35fdea984dabd628de596cd425d7e51fa" translate="yes" xml:space="preserve">
          <source>Angular has more pre-defined directives that either alter the layout structure (for example, &lt;a href=&quot;template-syntax#ngSwitch&quot;&gt;ngSwitch&lt;/a&gt;) or modify aspects of DOM elements and components (for example, &lt;a href=&quot;template-syntax#ngStyle&quot;&gt;ngStyle&lt;/a&gt; and &lt;a href=&quot;template-syntax#ngClass&quot;&gt;ngClass&lt;/a&gt;).</source>
          <target state="translated">Angular имеет больше предопределенных директив, которые либо изменяют структуру макета (например, &lt;a href=&quot;template-syntax#ngSwitch&quot;&gt;ngSwitch&lt;/a&gt; ), либо изменяют аспекты элементов и компонентов DOM (например, &lt;a href=&quot;template-syntax#ngStyle&quot;&gt;ngStyle&lt;/a&gt; и &lt;a href=&quot;template-syntax#ngClass&quot;&gt;ngClass&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1686cbfe82438a65326efb7fbfc9ed594c24a6e5" translate="yes" xml:space="preserve">
          <source>Angular has true template input variables that are explicitly defined using the &lt;code&gt;let&lt;/code&gt; keyword.</source>
          <target state="translated">Angular имеет истинные входные переменные шаблона, которые явно определены с помощью ключевого слова &lt;code&gt;let&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9aa8ff3ec993f9613874918fdca308390a782abe" translate="yes" xml:space="preserve">
          <source>Angular ignores changes within (composite) objects. It won't call a pure pipe if you change an input month, add to an input array, or update an input object property.</source>
          <target state="translated">Угловой игнорирует изменения внутри (составных)объектов.Он не вызовет чистую трубу,если вы измените месяц ввода,добавите в массив ввода или обновите свойство объекта ввода.</target>
        </trans-unit>
        <trans-unit id="b9ea659473cf06cf26e6026f2da7a0eb79db0ddc" translate="yes" xml:space="preserve">
          <source>Angular instead inspects directive and component classes and calls the hook methods &lt;em&gt;if they are defined&lt;/em&gt;. Angular finds and calls methods like &lt;code&gt;ngOnInit()&lt;/code&gt;, with or without the interfaces.</source>
          <target state="translated">Вместо этого Angular проверяет классы директив и компонентов и вызывает методы ловушек, &lt;em&gt;если они определены&lt;/em&gt; . Angular находит и вызывает такие методы, как &lt;code&gt;ngOnInit()&lt;/code&gt; , с интерфейсами или без них.</target>
        </trans-unit>
        <trans-unit id="9d2787f184c1925b33fab871a39bcac0b55b64cf" translate="yes" xml:space="preserve">
          <source>Angular invokes the &lt;code&gt;transform&lt;/code&gt; method with the value of a binding as the first argument, and any parameters as the second argument in list form, and returns the transformed value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b42b26f4e53b4e9e433f908be1ae23996faf473" translate="yes" xml:space="preserve">
          <source>Angular is a collection of many packages, sub-projects, and tools. To prevent accidental use of private APIs&amp;mdash;and so that you can clearly understand what is covered by the practices described here&amp;mdash;we document what is and is not considered our public API surface. For details, see &lt;a href=&quot;https://github.com/angular/angular/blob/master/docs/PUBLIC_API.md&quot;&gt;Supported Public API Surface of Angular&lt;/a&gt;.</source>
          <target state="translated">Angular - это набор многих пакетов, подпроектов и инструментов. Чтобы предотвратить случайное использование частных API - и чтобы вы могли четко понимать, что подпадает под действия, описанные здесь, - мы документируем, что является и не считается нашей общедоступной поверхностью API. Для получения дополнительной информации см. &lt;a href=&quot;https://github.com/angular/angular/blob/master/docs/PUBLIC_API.md&quot;&gt;Поддерживаемый открытый API-интерфейс Surface of Angular&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cedb8ef1bd5824f0f32e164656ec8ed996c2415d" translate="yes" xml:space="preserve">
          <source>Angular is a platform and framework for building client applications in HTML and TypeScript. Angular is written in TypeScript. It implements core and optional functionality as a set of TypeScript libraries that you import into your apps.</source>
          <target state="translated">Angular-платформа и фреймворк для построения клиентских приложений в HTML и TypeScript.Angular написан на языке TypeScript.Реализует основную и дополнительную функциональность в виде набора библиотек TypeScript,которые вы импортируете в свои приложения.</target>
        </trans-unit>
        <trans-unit id="c09e1dc78236e7af0800454292bf644c4910bcee" translate="yes" xml:space="preserve">
          <source>Angular is a platform and framework for building single-page client applications using HTML and TypeScript. Angular is written in TypeScript. It implements core and optional functionality as a set of TypeScript libraries that you import into your apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="944adaf5cf94f6c56a0403bf343031231a5680bd" translate="yes" xml:space="preserve">
          <source>Angular is a reimagined version of the best parts of AngularJS. In that sense, its goals are the same as the AngularJS Style Guide's: To preserve the good parts of AngularJS, and to avoid the bad parts. There's a lot more to Angular than just that of course, but this does mean that &lt;em&gt;following the style guide helps make your AngularJS app more closely aligned with Angular&lt;/em&gt;.</source>
          <target state="translated">Angular - это обновленная версия лучших частей AngularJS. В этом смысле его цели такие же, как и в Руководстве по стилю AngularJS: сохранить хорошие части AngularJS и избежать плохих частей. Конечно, в Angular есть гораздо больше, чем просто, но это означает, что &lt;em&gt;следование руководству по стилю помогает более точно выровнять ваше приложение AngularJS с Angular&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="e88edc1d9d2323834676f35f85d122a43a5b00b3" translate="yes" xml:space="preserve">
          <source>Angular is an application design framework and development platform for creating efficient and sophisticated single-page apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbe94ed1821482a4bf72519359a4832dfb721ff" translate="yes" xml:space="preserve">
          <source>Angular is bootstrapped first; AngularJS is bootstrapped second. AngularJS always owns the root component of the application.</source>
          <target state="translated">Angular-это загрузка первой,AngularJS-это загрузка второй.AngularJS всегда владеет корневым компонентом приложения.</target>
        </trans-unit>
        <trans-unit id="67c408d51f3d9541622ae37dc07fd998e2b6d4a6" translate="yes" xml:space="preserve">
          <source>Angular is built on the latest standards of the web platform. Targeting such a wide range of browsers is challenging because they do not support all features of modern browsers. You compensate by loading polyfill scripts (&quot;polyfills&quot;) for the browsers that you must support. The &lt;a href=&quot;browser-support#polyfill-libs&quot;&gt;table below&lt;/a&gt; identifies most of the polyfills you might need.</source>
          <target state="translated">Angular построен по последним стандартам веб-платформы. Ориентация на такой широкий спектр браузеров является сложной задачей, поскольку они не поддерживают все функции современных браузеров. Вы компенсируете загрузку сценариев polyfill (&amp;laquo;polyfills&amp;raquo;) для браузеров, которые вы должны поддерживать. В &lt;a href=&quot;browser-support#polyfill-libs&quot;&gt;приведенной ниже таблице&lt;/a&gt; указаны большинство полифилов, которые могут вам понадобиться.</target>
        </trans-unit>
        <trans-unit id="e7c5a8227c920abc2ab831e8b743010e5cec1f51" translate="yes" xml:space="preserve">
          <source>Angular isn't showing and hiding the message. It is adding and removing the paragraph element from the DOM. That improves performance, especially in larger projects when conditionally including or excluding big chunks of HTML with many data bindings.</source>
          <target state="translated">Угловой не показывает и не скрывает сообщения.Это добавление и удаление элемента абзаца из DOM.Это улучшает производительность,особенно в больших проектах при условном включении или исключении больших кусков HTML с множеством привязок данных.</target>
        </trans-unit>
        <trans-unit id="bfddc46758f816dd29441664cdec5b402661cdef" translate="yes" xml:space="preserve">
          <source>Angular knows that the &lt;code&gt;defaultColor&lt;/code&gt; binding belongs to the &lt;code&gt;HighlightDirective&lt;/code&gt; because you made it &lt;em&gt;public&lt;/em&gt; with the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Angular знает, что привязка &lt;code&gt;defaultColor&lt;/code&gt; принадлежит &lt;code&gt;HighlightDirective&lt;/code&gt; , потому что вы сделали ее &lt;em&gt;общедоступной&lt;/em&gt; с помощью декоратора &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6520112c4953366a0de588a54b18493a41a7c8f8" translate="yes" xml:space="preserve">
          <source>Angular libraries</source>
          <target state="translated">Угловые библиотеки</target>
        </trans-unit>
        <trans-unit id="3f426e8d596d5b3588e555663b8f3b96dfed3e9f" translate="yes" xml:space="preserve">
          <source>Angular libraries are NgModules, such as &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt;. Many third-party libraries are available as NgModules such as &lt;a href=&quot;https://material.angular.io/&quot;&gt;Material Design&lt;/a&gt;, &lt;a href=&quot;http://ionicframework.com/&quot;&gt;Ionic&lt;/a&gt;, and &lt;a href=&quot;https://github.com/angular/angularfire2&quot;&gt;AngularFire2&lt;/a&gt;.</source>
          <target state="translated">Угловыми библиотеками являются NgModules, такие как &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/router/routermodule&quot;&gt;RouterModule&lt;/a&gt;&lt;/code&gt; . Многие сторонние библиотеки доступны как NgModules, такие как &lt;a href=&quot;https://material.angular.io/&quot;&gt;Material Design&lt;/a&gt; , &lt;a href=&quot;http://ionicframework.com/&quot;&gt;Ionic&lt;/a&gt; и &lt;a href=&quot;https://github.com/angular/angularfire2&quot;&gt;AngularFire2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dad4b4472bc88f1f5698b422a998c38c20704e3c" translate="yes" xml:space="preserve">
          <source>Angular libraries have this option to ensure that all Angular &lt;code&gt;.metadata.json&lt;/code&gt; files are clean and it is a best practice to do the same when building your own libraries.</source>
          <target state="translated">Angular библиотеки имеют эту опцию, чтобы гарантировать, что все файлы Angular &lt;code&gt;.metadata.json&lt;/code&gt; являются чистыми, и рекомендуется делать то же самое при создании ваших собственных библиотек.</target>
        </trans-unit>
        <trans-unit id="be3f78b53fc2c577daabc8bc52b4aa660d4e9dae" translate="yes" xml:space="preserve">
          <source>Angular libraries should list all &lt;code&gt;@angular/*&lt;/code&gt; dependencies as peer dependencies. This ensures that when modules ask for Angular, they all get the exact same module. If a library lists &lt;code&gt;@angular/core&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;../api/core/resolvedreflectivefactory#dependencies&quot;&gt;dependencies&lt;/a&gt;&lt;/code&gt; instead of &lt;code&gt;peerDependencies&lt;/code&gt;, it might get a different Angular module instead, which would cause your application to break.</source>
          <target state="translated">Библиотеки Angular должны перечислять все зависимости &lt;code&gt;@angular/*&lt;/code&gt; качестве одноранговых зависимостей. Это гарантирует, что когда модули запрашивают Angular, все они получают один и тот же модуль. Если библиотека перечисляет &lt;code&gt;@angular/core&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/core/resolvedreflectivefactory#dependencies&quot;&gt;dependencies&lt;/a&gt;&lt;/code&gt; вместо &lt;code&gt;peerDependencies&lt;/code&gt; , она может вместо этого получить другой модуль Angular, что приведет к сбою приложения.</target>
        </trans-unit>
        <trans-unit id="440b921c958820163daec667135fde70d6e18758" translate="yes" xml:space="preserve">
          <source>Angular libraries should list all &lt;code&gt;@angular/*&lt;/code&gt; dependencies as peer dependencies. This ensures that when modules ask for Angular, they all get the exact same module. If a library lists &lt;code&gt;@angular/core&lt;/code&gt; in &lt;code&gt;dependencies&lt;/code&gt; instead of &lt;code&gt;peerDependencies&lt;/code&gt;, it might get a different Angular module instead, which would cause your application to break.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d44f7fda091b59312a3e7e208e6d0e349017ad" translate="yes" xml:space="preserve">
          <source>Angular libraries use Ivy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25634352050885006a3b6152b0eb2a9010080c0" translate="yes" xml:space="preserve">
          <source>Angular loads a component declaratively when using the component's selector to locate the element in the template. Angular then creates the HTML representation of the component and inserts it into the DOM at the selected element. These aren't entry components.</source>
          <target state="translated">Угловая загрузка компонента декларативно при использовании селектора компонента для размещения элемента в шаблоне.Затем Angular создает HTML представление компонента и вставляет его в DOM на выбранном элементе.Это не вводимые компоненты.</target>
        </trans-unit>
        <trans-unit id="995f2b8032fa111ae2d621211fc7064ea0317af9" translate="yes" xml:space="preserve">
          <source>Angular loads a root &lt;code&gt;AppComponent&lt;/code&gt; dynamically because it's listed by type in &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular загружает корневой &lt;code&gt;AppComponent&lt;/code&gt; динамически, потому что он указан по типу в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule#bootstrap&quot;&gt;NgModule.bootstrap&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08a4bd02cf20c2f65095b4e5963e1bb2afe416d9" translate="yes" xml:space="preserve">
          <source>Angular loads as a collection of JavaScript modules. You can think of them as library modules. Each Angular library name begins with the &lt;code&gt;@angular&lt;/code&gt; prefix. Install them with the node package manager &lt;code&gt;npm&lt;/code&gt; and import parts of them with JavaScript &lt;code&gt;import&lt;/code&gt; statements.</source>
          <target state="translated">Угловые нагрузки как набор модулей JavaScript. Вы можете думать о них как о библиотечных модулях. Каждое имя библиотеки Angular начинается с префикса &lt;code&gt;@angular&lt;/code&gt; . Установите их с помощью менеджера пакетов узлов &lt;code&gt;npm&lt;/code&gt; и импортируйте их части с помощью операторов &lt;code&gt;import&lt;/code&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="34efda63681d11b2077d5df610262c0a6c29b126" translate="yes" xml:space="preserve">
          <source>Angular looks for changes to data-bound values in a &lt;a href=&quot;glossary#change-detection&quot;&gt;change detection&lt;/a&gt; process that runs after every DOM event: every keystroke, mouse move, timer tick, and server response. The following example, which doesn't use a pipe, demonstrates how Angular uses its default change detection strategy to monitor and update its display of every hero in the &lt;code&gt;heroes&lt;/code&gt; array. The example tabs show the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853e166961741611ece2f458d671b607ed487c72" translate="yes" xml:space="preserve">
          <source>Angular looks for changes to data-bound values through a &lt;em&gt;change detection&lt;/em&gt; process that runs after every DOM event: every keystroke, mouse move, timer tick, and server response. This could be expensive. Angular strives to lower the cost whenever possible and appropriate.</source>
          <target state="translated">Angular ищет изменения в привязанных к данным значениях с помощью процесса &lt;em&gt;обнаружения изменений,&lt;/em&gt; который запускается после каждого события DOM: каждое нажатие клавиши, движение мыши, отметка таймера и ответ сервера. Это может быть дорого. Angular стремится снизить стоимость, когда это возможно и уместно.</target>
        </trans-unit>
        <trans-unit id="698612677c72d7d99a71306fe64680c45b867fa2" translate="yes" xml:space="preserve">
          <source>Angular makes no use of the &lt;code&gt;container&lt;/code&gt;, &lt;code&gt;form-group&lt;/code&gt;, &lt;code&gt;form-control&lt;/code&gt;, and &lt;code&gt;btn&lt;/code&gt; classes or the styles of any external library. Angular apps can use any CSS library or none at all.</source>
          <target state="translated">Угловые делает никакого использования &lt;code&gt;container&lt;/code&gt; , &lt;code&gt;form-group&lt;/code&gt; , &lt;code&gt;form-control&lt;/code&gt; и &lt;code&gt;btn&lt;/code&gt; классами или стили любой внешней библиотеки. Angular приложения могут использовать любую библиотеку CSS или вообще не использовать ее.</target>
        </trans-unit>
        <trans-unit id="d8d1474460cc15db876a17834bf926386371bf34" translate="yes" xml:space="preserve">
          <source>Angular makes the process easy by handling many of the repetitive, boilerplate tasks you'd otherwise wrestle with yourself.</source>
          <target state="translated">Угловой делает процесс легким,справляясь со многими повторяющимися,шаблонными задачами,с которыми вы в противном случае боролись бы сами.</target>
        </trans-unit>
        <trans-unit id="733393efef5ce43977efcba35cca922753ae83e7" translate="yes" xml:space="preserve">
          <source>Angular makes use of observables as an interface to handle a variety of common asynchronous operations. For example:</source>
          <target state="translated">Угловой использует наблюдаемые объекты в качестве интерфейса для обработки различных распространенных асинхронных операций.Например:</target>
        </trans-unit>
        <trans-unit id="c952b87a2d4235b4fa18e60db17580ca8f99e1d9" translate="yes" xml:space="preserve">
          <source>Angular modularity</source>
          <target state="translated">Угловая модульность</target>
        </trans-unit>
        <trans-unit id="f60bec56de0d46a0d6f36063b2d445f9aa6ecf52" translate="yes" xml:space="preserve">
          <source>Angular modules</source>
          <target state="translated">Угловые модули</target>
        </trans-unit>
        <trans-unit id="5d2b463cfcddb80a14ef8505352142925769b3e0" translate="yes" xml:space="preserve">
          <source>Angular needs to know how the pieces of your application fit together and what other files and libraries the app requires. This information is called &lt;em&gt;metadata&lt;/em&gt;.</source>
          <target state="translated">Angular должен знать, как части вашего приложения сочетаются друг с другом и какие другие файлы и библиотеки требуются приложению. Эта информация называется &lt;em&gt;метаданными&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c8907e4049cbb49a2de258115f28db0236a6b67a" translate="yes" xml:space="preserve">
          <source>Angular offers &lt;strong&gt;lifecycle hooks&lt;/strong&gt; that provide visibility into these key life moments and the ability to act when they occur.</source>
          <target state="translated">Angular предлагает &lt;strong&gt;крюки жизненного цикла,&lt;/strong&gt; которые обеспечивают видимость этих ключевых моментов жизни и возможность действовать, когда они происходят.</target>
        </trans-unit>
        <trans-unit id="d76e449c5b5a82a11aa58826c48ff9172d4b34e4" translate="yes" xml:space="preserve">
          <source>Angular offers a special &lt;em&gt;two-way data binding&lt;/em&gt; syntax for this purpose, &lt;code&gt;[()]&lt;/code&gt;. The &lt;code&gt;[()]&lt;/code&gt; syntax combines the brackets of property binding, &lt;code&gt;[]&lt;/code&gt;, with the parentheses of event binding, &lt;code&gt;()&lt;/code&gt;.</source>
          <target state="translated">Для этой цели Angular предлагает специальный &lt;em&gt;двусторонний&lt;/em&gt; синтаксис &lt;em&gt;привязки данных&lt;/em&gt; , &lt;code&gt;[()]&lt;/code&gt; . &lt;code&gt;[()]&lt;/code&gt; Синтаксис сочетает в скобки собственности связывания, &lt;code&gt;[]&lt;/code&gt; , с скобках события связывания, &lt;code&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0b96c491c78ad4254c4a00563220ea3cb04a021b" translate="yes" xml:space="preserve">
          <source>Angular offers many more capabilities, and you now have a foundation that empowers you to build an application and explore those other capabilities:</source>
          <target state="translated">Angular предлагает гораздо больше возможностей,и теперь у вас есть основа,которая дает вам возможность создавать приложения и исследовать эти другие возможности:</target>
        </trans-unit>
        <trans-unit id="b54553b1cb0eae873f191d62095e66d3e101c047" translate="yes" xml:space="preserve">
          <source>Angular offers two kinds of built-in directives: &lt;a href=&quot;attribute-directives&quot;&gt;&lt;em&gt;attribute&lt;/em&gt; directives&lt;/a&gt; and &lt;a href=&quot;structural-directives&quot;&gt;&lt;em&gt;structural&lt;/em&gt; directives&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc451db75214bb8f5bb03f627de0240f5b091b0" translate="yes" xml:space="preserve">
          <source>Angular offers two kinds of built-in directives: attribute directives and structural directives. This segment reviews some of the most common built-in directives, classified as either &lt;a href=&quot;template-syntax#attribute-directives&quot;&gt;&lt;em&gt;attribute&lt;/em&gt; directives&lt;/a&gt; or &lt;a href=&quot;template-syntax#structural-directives&quot;&gt;&lt;em&gt;structural&lt;/em&gt; directives&lt;/a&gt; and has its own &lt;span name=&quot;built-in-directives&quot;&gt;built-in directives example&lt;/span&gt;.</source>
          <target state="translated">Angular предлагает два вида встроенных директив: директивы атрибутов и структурные директивы. В этом сегменте рассматриваются некоторые из наиболее распространенных встроенных директив, классифицируемых как &lt;a href=&quot;template-syntax#attribute-directives&quot;&gt;директивы &lt;/a&gt;&lt;em&gt;атрибутов&lt;/em&gt; или &lt;a href=&quot;template-syntax#structural-directives&quot;&gt;&lt;em&gt;структурные&lt;/em&gt; директивы,&lt;/a&gt; и имеется собственный &lt;span name=&quot;built-in-directives&quot;&gt;пример встроенных директив&lt;/span&gt; .</target>
        </trans-unit>
        <trans-unit id="f6ecdff766f22fe112f392e3b5f72cdc4a54fa55" translate="yes" xml:space="preserve">
          <source>Angular offers two ways to compile your application:</source>
          <target state="translated">Angular предлагает два способа компиляции вашего приложения:</target>
        </trans-unit>
        <trans-unit id="46473abcb3dc6366d18741a180865bfdefc2a988" translate="yes" xml:space="preserve">
          <source>Angular only allows directives to apply on CSS selectors that do not cross element boundaries.</source>
          <target state="translated">Angular позволяет применять директивы только к селекторам CSS,которые не пересекают границы элементов.</target>
        </trans-unit>
        <trans-unit id="ab4a735a9f53cef22a8e09069eaf331c806e03b7" translate="yes" xml:space="preserve">
          <source>Angular only binds to &lt;em&gt;public&lt;/em&gt; component properties.</source>
          <target state="translated">Angular привязывает только к свойствам &lt;em&gt;общедоступных&lt;/em&gt; компонентов.</target>
        </trans-unit>
        <trans-unit id="0796c5a0e37f43354cb8a990d1da6f63a399b35c" translate="yes" xml:space="preserve">
          <source>Angular only calls the hook when the value of the input property changes. The value of the &lt;code&gt;hero&lt;/code&gt; property is the &lt;em&gt;reference to the hero object&lt;/em&gt;. Angular doesn't care that the hero's own &lt;code&gt;name&lt;/code&gt; property changed. The hero object &lt;em&gt;reference&lt;/em&gt; didn't change so, from Angular's perspective, there is no change to report!</source>
          <target state="translated">Angular вызывает ловушку только при изменении значения свойства input. Значением свойства &lt;code&gt;hero&lt;/code&gt; является &lt;em&gt;ссылка на объект героя&lt;/em&gt; . Angular не заботится о том, что собственное &lt;code&gt;name&lt;/code&gt; героя изменилось. &lt;em&gt;Ссылка на&lt;/em&gt; объект героя не изменилась, поэтому, с точки зрения Angular, в отчете нет изменений!</target>
        </trans-unit>
        <trans-unit id="73365649ff96710832ccaf130004428d6aa4b134" translate="yes" xml:space="preserve">
          <source>Angular only matches selectors and pipe names for classes that are declared by this module or exported by a module that this module imports.</source>
          <target state="translated">Угловой только соответствует селекторам и названиям труб для классов,которые объявлены этим модулем или экспортированы модулем,который этот модуль импортирует.</target>
        </trans-unit>
        <trans-unit id="8f7a44453028015a36d7371b079e0572cb894294" translate="yes" xml:space="preserve">
          <source>Angular packages</source>
          <target state="translated">Угловые пакеты</target>
        </trans-unit>
        <trans-unit id="6b8abf66079d4d2aea96a3f990cecede4a31001d" translate="yes" xml:space="preserve">
          <source>Angular picks a simpler, faster change detection algorithm when you use a pipe.</source>
          <target state="translated">Угловой пикирует более простой и быстрый алгоритм обнаружения изменений при использовании трубы.</target>
        </trans-unit>
        <trans-unit id="ef398c20fe5cffcede85fd0486274f77bc4fc926" translate="yes" xml:space="preserve">
          <source>Angular pipes can help you with internationalization: the &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/currencypipe&quot;&gt;CurrencyPipe&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/percentpipe&quot;&gt;PercentPipe&lt;/a&gt;&lt;/code&gt; use locale data to format data based on the &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Угловые трубы могут помочь вам с интернационализацией: &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/currencypipe&quot;&gt;CurrencyPipe&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;DecimalPipe&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/percentpipe&quot;&gt;PercentPipe&lt;/a&gt;&lt;/code&gt; используют данные локали для форматирования данных на основе &lt;code&gt;&lt;a href=&quot;../api/core/locale_id&quot;&gt;LOCALE_ID&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="356e1f5698485995ec39cd81b77ba95feef0a58a" translate="yes" xml:space="preserve">
          <source>Angular pipes let you declare display-value transformations in your template HTML. A class with the &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; decorator defines a function that transforms input values to output values for display in a view.</source>
          <target state="translated">Угловые каналы позволяют объявлять преобразования отображаемого значения в шаблоне HTML. Класс с декоратором &lt;code&gt;@&lt;a href=&quot;../api/core/pipe&quot;&gt;Pipe&lt;/a&gt;&lt;/code&gt; определяет функцию, которая преобразует входные значения в выходные значения для отображения в представлении.</target>
        </trans-unit>
        <trans-unit id="4a45524e5e1533679255725c285e1a9a90ce6d59" translate="yes" xml:space="preserve">
          <source>Angular previously has supported an integration with the &lt;a href=&quot;https://google.github.io/tracing-framework/&quot;&gt;Web Tracing Framework (WTF)&lt;/a&gt; for performance testing of Angular applications. This integration has not been maintained and defunct. As a result, the integration was deprecated in Angular version 8 and due to no evidence of any existing usage removed in version 9.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991be4c3543e8e594fad4f932af19f57bb79c179" translate="yes" xml:space="preserve">
          <source>Angular previously has supported an integration with the Web Tracing Framework (WTF) for performance testing of Angular applications. This integration has not been maintained and likely does not work for the majority of Angular applications today. As a result, we are deprecating the integration in Angular version 8.</source>
          <target state="translated">Angular ранее поддерживала интеграцию с Web Tracing Framework (WTF)для тестирования производительности приложений Angular.Эта интеграция не поддерживалась и,скорее всего,не работает сегодня для большинства приложений Angular.В результате,мы снижаем уровень интеграции в Angular версии 8.</target>
        </trans-unit>
        <trans-unit id="98ad75656ac46547061cbdeae1e7061decebb700" translate="yes" xml:space="preserve">
          <source>Angular previously supported a view encapsulation mode &lt;code&gt;ViewEncapsulaion.Native&lt;/code&gt; that was based on the v0 Shadow DOM Draft APIs. These APIs have been superceeded by the final Shadow DOM APIs, which are enabled via &lt;code&gt;&lt;a href=&quot;../api/core/viewencapsulation#ShadowDom&quot;&gt;ViewEncapsulation.ShadowDom&lt;/a&gt;&lt;/code&gt;. For background information about this change, see &lt;a href=&quot;https://developers.google.com/web/updates/2019/07/web-components-time-to-upgrade&quot;&gt;Web Components update: more time to upgrade to v1 APIs&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab7532910f8e47c865be64a0bfffac882f25041" translate="yes" xml:space="preserve">
          <source>Angular processes &lt;em&gt;all&lt;/em&gt; data bindings once for each JavaScript event cycle, from the root of the application component tree through all child components.</source>
          <target state="translated">Angular обрабатывает &lt;em&gt;все&lt;/em&gt; привязки данных один раз для каждого цикла событий JavaScript, начиная с корня дерева компонентов приложения и заканчивая всеми дочерними компонентами.</target>
        </trans-unit>
        <trans-unit id="4bfe0e1a65f34be08732e68dc2f47387fc26057f" translate="yes" xml:space="preserve">
          <source>Angular provides a built-in module loader that supports SystemJS to load modules asynchronously. If you were using another bundling tool, such as Webpack, you would use the Webpack mechanism for asynchronously loading modules.</source>
          <target state="translated">Угловой обеспечивает встроенный загрузчик модулей,который поддерживает SystemJS для асинхронной загрузки модулей.Если бы вы использовали другой инструмент комплектации,такой как Webpack,вы бы использовали механизм Webpack для асинхронной загрузки модулей.</target>
        </trans-unit>
        <trans-unit id="c71dd9205f0bd6822569474cf04a436f39b8d809" translate="yes" xml:space="preserve">
          <source>Angular provides a framework for single-page apps, where most of the logic and data resides on the client. Most apps still need to access a server using the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; to access and save data. For some platforms and applications, you might also want to use the PWA (Progressive Web App) model to improve the user experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ab5724f97b042d8e6c3e60e5d984f689e157a5" translate="yes" xml:space="preserve">
          <source>Angular provides a number of built-in injection-token constants that you can use to customize the behavior of various systems.</source>
          <target state="translated">Angular предоставляет ряд встроенных констант инъекции-токена,которые можно использовать для настройки поведения различных систем.</target>
        </trans-unit>
        <trans-unit id="b3c5e069bb7f86fbf8b8fc59544cf9cae9badc49" translate="yes" xml:space="preserve">
          <source>Angular provides a set of schematics for use with the CLI. See the &lt;a href=&quot;cli&quot;&gt;Angular CLI command reference&lt;/a&gt;. The &lt;a href=&quot;cli/add&quot;&gt;&lt;code&gt;ng add&lt;/code&gt;&lt;/a&gt; command runs schematics as part of adding a library to your project. The &lt;a href=&quot;cli/generate&quot;&gt;&lt;code&gt;ng generate&lt;/code&gt;&lt;/a&gt; command runs schematics to create apps, libraries, and Angular code constructs.</source>
          <target state="translated">Angular предоставляет набор схем для использования с CLI. См. &lt;a href=&quot;cli&quot;&gt;Справочник&lt;/a&gt; по Angular CLI . Команда &lt;a href=&quot;cli/add&quot;&gt; &lt;code&gt;ng add&lt;/code&gt; &lt;/a&gt; запускает схемы как часть добавления библиотеки в ваш проект. Команда &lt;a href=&quot;cli/generate&quot;&gt; &lt;code&gt;ng generate&lt;/code&gt; &lt;/a&gt; запускает схемы для создания приложений, библиотек и конструкций кода Angular.</target>
        </trans-unit>
        <trans-unit id="542775cd7da8f6f4765aa0bb672705ccbe83ec20" translate="yes" xml:space="preserve">
          <source>Angular provides advanced capabilities for mobile apps, animation, internationalization, server-side rendering, and more.</source>
          <target state="translated">Angular предоставляет расширенные возможности для мобильных приложений,анимации,интернационализации,серверного рендеринга и многого другого.</target>
        </trans-unit>
        <trans-unit id="3de379101dcba483b91ed5758dac0e3158b96650" translate="yes" xml:space="preserve">
          <source>Angular provides an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; class that is used when publishing values from a component through the &lt;a href=&quot;inputs-outputs#output&quot;&gt;&lt;code&gt;@Output()&lt;/code&gt; decorator&lt;/a&gt;. &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; extends &lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;RxJS &lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt;, adding an &lt;code&gt;emit()&lt;/code&gt; method so it can send arbitrary values. When you call &lt;code&gt;emit()&lt;/code&gt;, it passes the emitted value to the &lt;code&gt;next()&lt;/code&gt; method of any subscribed observer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1639fcd16106284432fd62af8a0553b09d8af2" translate="yes" xml:space="preserve">
          <source>Angular provides an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; class that is used when publishing values from a component through the &lt;a href=&quot;template-syntax#how-to-use-output&quot;&gt;&lt;code&gt;@Output()&lt;/code&gt; decorator&lt;/a&gt;. &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; extends &lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;RxJS &lt;code&gt;Subject&lt;/code&gt;&lt;/a&gt;, adding an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter#emit&quot;&gt;emit()&lt;/a&gt;&lt;/code&gt; method so it can send arbitrary values. When you call &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter#emit&quot;&gt;emit()&lt;/a&gt;&lt;/code&gt;, it passes the emitted value to the &lt;code&gt;next()&lt;/code&gt; method of any subscribed observer.</source>
          <target state="translated">Angular предоставляет класс &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; , который используется при публикации значений из компонента через &lt;a href=&quot;template-syntax#how-to-use-output&quot;&gt;декоратор &lt;/a&gt; &lt;code&gt;@Output()&lt;/code&gt; . &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; расширяет &lt;a href=&quot;https://rxjs.dev/api/index/class/Subject&quot;&gt;RxJS &lt;code&gt;Subject&lt;/code&gt; &lt;/a&gt; , добавление &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter#emit&quot;&gt;emit()&lt;/a&gt;&lt;/code&gt; метод , поэтому он может отправить произвольные значения. Когда вы вызываете &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter#emit&quot;&gt;emit()&lt;/a&gt;&lt;/code&gt; , он передает переданное значение методу &lt;code&gt;next()&lt;/code&gt; любого подписанного наблюдателя.</target>
        </trans-unit>
        <trans-unit id="dd1128121ec9058a99f03a8e0d5165e2fca8f13c" translate="yes" xml:space="preserve">
          <source>Angular provides built-in pipes for typical data transformations, including transformations for internationalization (i18n), which use locale information to format data. The following are commonly used built-in pipes for data formatting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee46a639825d9725e9da43cb62b0f60f904e60a" translate="yes" xml:space="preserve">
          <source>Angular provides many kinds of data-binding. Binding types can be grouped into three categories distinguished by the direction of data flow:</source>
          <target state="translated">Угловой обеспечивает множество видов привязки данных.Типы привязки могут быть сгруппированы в три категории,отличающиеся направлением потока данных:</target>
        </trans-unit>
        <trans-unit id="eb6bbbf3a5e95ea73ec84dc48e2d08bd47f217b5" translate="yes" xml:space="preserve">
          <source>Angular provides some builders that are used by the CLI for commands such as &lt;code&gt;ng build&lt;/code&gt;, &lt;code&gt;ng test&lt;/code&gt;, and &lt;code&gt;ng lint&lt;/code&gt;. Default target configurations for these and other built-in CLI builders can be found (and customized) in the &quot;architect&quot; section of the &lt;a href=&quot;workspace-config&quot;&gt;workspace configuration file&lt;/a&gt;, &lt;code&gt;angular.json&lt;/code&gt;. You can also extend and customize Angular by creating your own builders, which you can run using the &lt;a href=&quot;cli/run&quot;&gt;&lt;code&gt;ng run&lt;/code&gt; CLI command&lt;/a&gt;.</source>
          <target state="translated">Angular предоставляет некоторые компоновщики, которые используются CLI для таких команд, как &lt;code&gt;ng build&lt;/code&gt; , &lt;code&gt;ng test&lt;/code&gt; и &lt;code&gt;ng lint&lt;/code&gt; . По умолчанию целевой конфигурации для этих и других встроенных CLI строители могут быть найдены (и индивидуальные) в разделе &amp;laquo;архитектор&amp;raquo; в &lt;a href=&quot;workspace-config&quot;&gt;файле конфигурации рабочего пространства&lt;/a&gt; , &lt;code&gt;angular.json&lt;/code&gt; . Вы также можете расширить и настроить Angular, создав собственные компоновщики, которые можно запустить с помощью команды &lt;a href=&quot;cli/run&quot;&gt;CLI &lt;/a&gt; &lt;code&gt;ng run&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54e1fe50f3cab60a422c1f61c16b90ad321a060b" translate="yes" xml:space="preserve">
          <source>Angular provides some injectable abstractions over these objects, such as &lt;a href=&quot;../api/common/location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../api/common/document&quot;&gt;&lt;code&gt;DOCUMENT&lt;/code&gt;&lt;/a&gt;; it may substitute adequately for these APIs. If Angular doesn't provide it, it's possible to write new abstractions that delegate to the browser APIs while in the browser and to an alternative implementation while on the server (aka shimming).</source>
          <target state="translated">Angular предоставляет некоторые инъекционные абстракции над этими объектами, такие как &lt;a href=&quot;../api/common/location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; или &lt;a href=&quot;../api/common/document&quot;&gt; &lt;code&gt;DOCUMENT&lt;/code&gt; &lt;/a&gt; ; он может адекватно заменить эти API. Если Angular не предоставляет этого, можно написать новые абстракции, которые делегируют API-интерфейсам браузера в браузере и альтернативной реализации на сервере (иначе говоря, шимминг).</target>
        </trans-unit>
        <trans-unit id="0d8f440b029f6084e216f022e4aad088e8ed5e77" translate="yes" xml:space="preserve">
          <source>Angular provides the &lt;code&gt;&lt;a href=&quot;../api/elements/createcustomelement&quot;&gt;createCustomElement&lt;/a&gt;()&lt;/code&gt; function for converting an Angular component, together with its dependencies, to a custom element. The function collects the component's observable properties, along with the Angular functionality the browser needs to create and destroy instances, and to detect and respond to changes.</source>
          <target state="translated">Angular предоставляет &lt;code&gt;&lt;a href=&quot;../api/elements/createcustomelement&quot;&gt;createCustomElement&lt;/a&gt;()&lt;/code&gt; для преобразования компонента Angular вместе с его зависимостями в пользовательский элемент. Функция собирает наблюдаемые свойства компонента, а также функциональность Angular, которую браузер должен создавать и уничтожать экземпляры, а также обнаруживать и реагировать на изменения.</target>
        </trans-unit>
        <trans-unit id="75ebcd58fdf52db86f77be2b9791ff7cb86491f4" translate="yes" xml:space="preserve">
          <source>Angular provides the following built-in data transformation &lt;a href=&quot;glossary#pipe&quot;&gt;pipes&lt;/a&gt; that use the &lt;a href=&quot;../api/core/locale_id&quot;&gt;&lt;code&gt;LOCALE_ID&lt;/code&gt;&lt;/a&gt; token to format data according to the locale's rules:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e1cd4051db96810a5d5e1dbab2055cb8d90a11" translate="yes" xml:space="preserve">
          <source>Angular provides two different approaches to handling user input through forms: reactive and template-driven. Both capture user input events from the view, validate the user input, create a form model and data model to update, and provide a way to track changes.</source>
          <target state="translated">Угловой обеспечивает два различных подхода к обработке пользовательского ввода с помощью форм:реактивный и шаблонный.Оба подхода позволяют фиксировать события пользовательского ввода из представления,проверять пользовательский ввод,создавать модель формы и модель данных для обновления,а также предоставляют возможность отслеживать изменения.</target>
        </trans-unit>
        <trans-unit id="37e085544dc51dc2350db34c85e0ac7c2f1de728" translate="yes" xml:space="preserve">
          <source>Angular receives a large number of feature requests, both from inside Google and from the broader open-source community. At the same time, our list of projects contains plenty of maintenance tasks, code refactorings, potential performance improvements, and so on. We bring together representatives from developer relations, product management, and engineering to prioritize this list. As new projects come into the queue, we regularly position them based on relative priority to other projects. As work gets done, projects will move up in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4023aa2209d987433d511efd5c6272087b321931" translate="yes" xml:space="preserve">
          <source>Angular recognizes the directive's role in the validation process because the directive registers itself with the &lt;code&gt;&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; provider, a provider with an extensible collection of validators.</source>
          <target state="translated">Angular распознает роль директивы в процессе проверки, потому что директива регистрируется у поставщика &lt;code&gt;&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; , поставщика с расширяемой коллекцией валидаторов.</target>
        </trans-unit>
        <trans-unit id="879357b8bc87f50bec4b8b9fdc77c6180285e7e6" translate="yes" xml:space="preserve">
          <source>Angular recognizes the directive's role in the validation process because the directive registers itself with the &lt;code&gt;&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; provider, as shown in the following example. &lt;code&gt;&lt;a href=&quot;../api/forms/ng_validators&quot;&gt;NG_VALIDATORS&lt;/a&gt;&lt;/code&gt; is a predefined provider with an extensible collection of validators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378a56a09a2bc8c55214ba40b10672b984ed51c4" translate="yes" xml:space="preserve">
          <source>Angular recognizes the value as unsafe and automatically sanitizes it, which removes the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag but keeps safe content such as the &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">Angular распознает значение как небезопасное и автоматически очищает его, что удаляет &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; но сохраняет безопасный контент, такой как элемент &lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a124b894fc0aadcd5a3d3d6b85932c692b5117df" translate="yes" xml:space="preserve">
          <source>Angular registers all startup module providers with the application root injector. The services that root injector providers create have application scope, which means they are available to the entire application.</source>
          <target state="translated">Угловая регистрация всех провайдеров модулей запуска с помощью корневого инжектора приложения.Сервисы,которые создаются поставщиками корневых инжекторов,имеют область применения,что означает,что они доступны для всего приложения.</target>
        </trans-unit>
        <trans-unit id="925daa517f76b33161b91ea28daef5e4bea3e10e" translate="yes" xml:space="preserve">
          <source>Angular registers its own providers with every injector, for services that Angular defines. You can register your own providers for services that your app needs.</source>
          <target state="translated">Angular регистрирует своих провайдеров с каждым инжектором,для услуг,которые определяет Angular.Вы можете зарегистрировать своих провайдеров для услуг,которые нужны вашему приложению.</target>
        </trans-unit>
        <trans-unit id="63df769c252c01cddc5b9fc4a5c36530656fab5b" translate="yes" xml:space="preserve">
          <source>Angular registers these providers with the NgModule's injector. If it is the NgModule used for bootstrapping then it is the root injector.</source>
          <target state="translated">Угловой регистрирует этих провайдеров с инжектором NgModule.Если это NgModule,используемый для загрузки,то это корневой инжектор.</target>
        </trans-unit>
        <trans-unit id="94f603c4b0f5b4c970534ab64ea69e7b16cf94f8" translate="yes" xml:space="preserve">
          <source>Angular relies on the &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; abstraction to work safely across &lt;em&gt;all supported platforms&lt;/em&gt;. Instead of creating an HTML element tree, Angular creates a &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; tree that wraps the &lt;em&gt;native elements&lt;/em&gt; for the runtime platform. The &lt;code&gt;nativeElement&lt;/code&gt; property unwraps the &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; and returns the platform-specific element object.</source>
          <target state="translated">Angular полагается на абстракцию &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; для безопасной работы на &lt;em&gt;всех поддерживаемых платформах&lt;/em&gt; . Вместо того чтобы создавать дерево элементов HTML, Angular создает дерево &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; , которое оборачивает &lt;em&gt;собственные элементы&lt;/em&gt; для платформы времени выполнения. Свойство &lt;code&gt;nativeElement&lt;/code&gt; разворачивает &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; и возвращает объектно-ориентированный объектный объект.</target>
        </trans-unit>
        <trans-unit id="6599d35b316da91d120de3a4ffc0e370ef3d5559" translate="yes" xml:space="preserve">
          <source>Angular relies on zone.js to run Angular's change detection processes when native JavaScript operations raise events. Zone.js is an implementation of a &lt;a href=&quot;https://gist.github.com/mhevery/63fdcdf7c65886051d55&quot;&gt;specification&lt;/a&gt; currently before the &lt;a href=&quot;http://www.ecma-international.org/memento/TC39.htm&quot;&gt;TC39&lt;/a&gt; committee that determines standards for the JavaScript language.</source>
          <target state="translated">Angular использует zone.js для запуска процессов обнаружения изменений Angular, когда собственные операции JavaScript вызывают события. Zone.js является реализацией &lt;a href=&quot;https://gist.github.com/mhevery/63fdcdf7c65886051d55&quot;&gt;спецификации, которая в&lt;/a&gt; настоящее время находится на &lt;a href=&quot;http://www.ecma-international.org/memento/TC39.htm&quot;&gt;рассмотрении&lt;/a&gt; комитета TC39, который определяет стандарты для языка JavaScript.</target>
        </trans-unit>
        <trans-unit id="f56aade6b82e2c3943e565652c5c962cb68a983c" translate="yes" xml:space="preserve">
          <source>Angular relies on zone.js to run Angular's change detection processes when native JavaScript operations raise events. Zone.js is an implementation of a &lt;a href=&quot;https://gist.github.com/mhevery/63fdcdf7c65886051d55&quot;&gt;specification&lt;/a&gt; currently before the &lt;a href=&quot;https://www.ecma-international.org/memento/tc39.htm&quot;&gt;TC39&lt;/a&gt; committee that determines standards for the JavaScript language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400c95b463a974784a617426bfeda0f26de33b43" translate="yes" xml:space="preserve">
          <source>Angular requires &lt;code&gt;Node.js&lt;/code&gt; version 10.9.0 or later.</source>
          <target state="translated">Angular требует &lt;code&gt;Node.js&lt;/code&gt; версии 10.9.0 или новее.</target>
        </trans-unit>
        <trans-unit id="180d82d0fbc33b0db02ba4e56262d98745427882" translate="yes" xml:space="preserve">
          <source>Angular requires a &lt;a href=&quot;https://nodejs.org/about/releases&quot;&gt;current, active LTS, or maintenance LTS&lt;/a&gt; version of Node.js.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77c29c47b48c888b5c8e2dc0ff189a4e742ddaee" translate="yes" xml:space="preserve">
          <source>Angular retrieves the changed text by following the path &lt;code&gt;$event.target.value&lt;/code&gt; and updates the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef32477f038457ec76edcd6fb2cb0f29b6948d9" translate="yes" xml:space="preserve">
          <source>Angular sanitizes untrusted values for HTML, styles, and URLs; sanitizing resource URLs isn't possible because they contain arbitrary code. In development mode, Angular prints a console warning when it has to change a value during sanitization.</source>
          <target state="translated">Угловая дезинфекция недоверенных значений для HTML,стилей и URL;дезинфекция URL ресурсов невозможна,так как они содержат произвольный код.В режиме разработки,Angular выводит консольное предупреждение,когда необходимо изменить значение во время дезинфекции.</target>
        </trans-unit>
        <trans-unit id="95d6c94f88761a819224e7f7ef31c0e016974ef3" translate="yes" xml:space="preserve">
          <source>Angular service worker introduction</source>
          <target state="translated">Введение работника сервисной службы под углом</target>
        </trans-unit>
        <trans-unit id="ece6de84f6157a2281fd204f372508b6e8936e9e" translate="yes" xml:space="preserve">
          <source>Angular sets the &lt;code&gt;appUnless&lt;/code&gt; property whenever the value of the condition changes. Because the &lt;code&gt;appUnless&lt;/code&gt; property does work, it needs a setter.</source>
          <target state="translated">Angular устанавливает свойство &lt;code&gt;appUnless&lt;/code&gt; всякий раз, когда изменяется значение условия. Поскольку свойство &lt;code&gt;appUnless&lt;/code&gt; работает, ему нужен установщик.</target>
        </trans-unit>
        <trans-unit id="b48433aa9a27d0daa63f87a6c53ae76ff80c318e" translate="yes" xml:space="preserve">
          <source>Angular sets the constructor's &lt;code&gt;el&lt;/code&gt; parameter to the injected &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt;. (An &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; is a wrapper around a DOM element, whose &lt;code&gt;nativeElement&lt;/code&gt; property exposes the DOM element for the directive to manipulate.)</source>
          <target state="translated">Angular устанавливает для параметра &lt;code&gt;el&lt;/code&gt; конструктора значение вставленного &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; . ( &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; - это оболочка вокруг элемента DOM, свойство &lt;code&gt;nativeElement&lt;/code&gt; которого предоставляет элемент DOM для манипулирования директивой.)</target>
        </trans-unit>
        <trans-unit id="0897472d9acb678fe4ea07d3a7bc055bd1af6070" translate="yes" xml:space="preserve">
          <source>Angular ships as a collection of JavaScript modules (also called libraries). Each Angular library name begins with the &lt;code&gt;@angular&lt;/code&gt; prefix. Install Angular libraries with the &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;npm package manager&lt;/a&gt; and import parts of them with JavaScript &lt;code&gt;import&lt;/code&gt; declarations.</source>
          <target state="translated">Angular поставляется как коллекция модулей JavaScript (также называемых библиотеками). Каждое имя библиотеки Angular начинается с префикса &lt;code&gt;@angular&lt;/code&gt; . Установите Angular библиотеки с &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;менеджером пакетов npm&lt;/a&gt; и импортируйте их части с помощью объявлений &lt;code&gt;import&lt;/code&gt; JavaScript .</target>
        </trans-unit>
        <trans-unit id="c2ed54e54eda3c09a0744999f1f67eb581505b10" translate="yes" xml:space="preserve">
          <source>Angular simplifies the following aspects of internationalization:</source>
          <target state="translated">Угловой упрощает следующие аспекты интернационализации:</target>
        </trans-unit>
        <trans-unit id="0b4571fc697e46d0f07cb794315e2abe97a50faa" translate="yes" xml:space="preserve">
          <source>Angular strives to balance innovation and stability. Sometimes, APIs and features become obsolete and need to be removed or replaced so that Angular can stay current with new best practices, changing dependencies, or changes in the (web) platform itself.</source>
          <target state="translated">Угловой стремится уравновешивать инновации и стабильность.Иногда API и функции устаревают и нуждаются в удалении или замене,чтобы Angular мог оставаться в курсе новых передовых практик,изменения зависимостей или изменений в самой (веб)платформе.</target>
        </trans-unit>
        <trans-unit id="5b3dd1bbaa7482ecb455dc8c4b78b8e67ed96278" translate="yes" xml:space="preserve">
          <source>Angular supplies a number of built-in directives that begin with the &lt;code&gt;ng&lt;/code&gt; prefix. You can also create new directives to implement your own functionality. You associate a &lt;em&gt;selector&lt;/em&gt; (an HTML tag such as &lt;code&gt;&amp;lt;my-directive&amp;gt;&lt;/code&gt;) with a custom directive, thereby extending the &lt;a href=&quot;template-syntax&quot;&gt;template syntax&lt;/a&gt; that you can use in your apps.</source>
          <target state="translated">Angular предоставляет ряд встроенных директив, которые начинаются с префикса &lt;code&gt;ng&lt;/code&gt; . Вы также можете создавать новые директивы для реализации своих собственных функций. Вы связываете &lt;em&gt;селектор&lt;/em&gt; (тег HTML, такой как &lt;code&gt;&amp;lt;my-directive&amp;gt;&lt;/code&gt; ) с пользовательской директивой, тем самым расширяя &lt;a href=&quot;template-syntax&quot;&gt;синтаксис шаблона,&lt;/a&gt; который вы можете использовать в своих приложениях.</target>
        </trans-unit>
        <trans-unit id="2bd39507a08adc6ad5177ae79d86f8ce148fdf68" translate="yes" xml:space="preserve">
          <source>Angular supports &lt;em&gt;two-way data binding&lt;/em&gt;, a mechanism for coordinating the parts of a template with the parts of a component. Add binding markup to the template HTML to tell Angular how to connect both sides.</source>
          <target state="translated">Angular поддерживает &lt;em&gt;двустороннюю привязку данных&lt;/em&gt; , механизм для координации частей шаблона с частями компонента. Добавьте разметку привязки в шаблон HTML, чтобы сообщить Angular, как соединить обе стороны.</target>
        </trans-unit>
        <trans-unit id="7ea371269e61139c2a9831641c5589131284de96" translate="yes" xml:space="preserve">
          <source>Angular supports most recent browsers. This includes the following specific versions:</source>
          <target state="translated">Угловой поддерживает большинство современных браузеров.Это включает в себя следующие специфические версии:</target>
        </trans-unit>
        <trans-unit id="007574459f34a1d4f369b68122eeaa0b0e8c282f" translate="yes" xml:space="preserve">
          <source>Angular supports two design approaches for interactive forms. You can build forms by writing templates using Angular &lt;a href=&quot;glossary#template&quot;&gt;template syntax and directives&lt;/a&gt; with the form-specific directives and techniques described in this tutorial, or you can use a reactive (or model-driven) approach to build forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e04243c1697b41d29fbfba8b823298c738e03c" translate="yes" xml:space="preserve">
          <source>Angular templates are &lt;em&gt;dynamic&lt;/em&gt;. When Angular renders them, it transforms the DOM according to the instructions given by &lt;em&gt;directives&lt;/em&gt;. A directive is a class with a &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; decorator.</source>
          <target state="translated">Угловые шаблоны являются &lt;em&gt;динамическими&lt;/em&gt; . Когда Angular отображает их, он преобразует DOM в соответствии с инструкциями, данными &lt;em&gt;директивами&lt;/em&gt; . Директива - это класс с декоратором &lt;code&gt;@&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75360540a862cda10bfe5d3cc9e4e3d8b9249e08" translate="yes" xml:space="preserve">
          <source>Angular throws a cyclic dependency error if you omit the &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Angular выдает ошибку циклической зависимости, если вы опустите декоратор &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dffe45e60da8df6adcbb8bd717d7b920a8f70a40" translate="yes" xml:space="preserve">
          <source>Angular throws an error if the hook updates the component's data-bound &lt;code&gt;comment&lt;/code&gt; property immediately (try it!). The &lt;code&gt;LoggerService.tick_then()&lt;/code&gt; postpones the log update for one turn of the browser's JavaScript cycle and that's just long enough.</source>
          <target state="translated">Angular выдает ошибку, если ловушка немедленно обновляет привязанное к данным свойство &lt;code&gt;comment&lt;/code&gt; компонента (попробуйте!). &lt;code&gt;LoggerService.tick_then()&lt;/code&gt; откладывает обновление журнала для одного оборота JavaScript цикла браузера и это только достаточно долго.</target>
        </trans-unit>
        <trans-unit id="e332f37242cc9fcbbae5b381770424eb2cc4ab0e" translate="yes" xml:space="preserve">
          <source>Angular throws an error if you haven't also decorated the property with &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt;. When the property is marked as optional, Angular sets &lt;code&gt;loggerService&lt;/code&gt; to null and the rest of the component adapts.</source>
          <target state="translated">Angular выдает ошибку, если вы не украсили свойство &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; . Когда свойство помечено как необязательное, Angular устанавливает для &lt;code&gt;loggerService&lt;/code&gt; значение null, а остальная часть компонента адаптируется.</target>
        </trans-unit>
        <trans-unit id="5e4db9368e884831e9e20c6790dc42c39f7b1964" translate="yes" xml:space="preserve">
          <source>Angular transforms the &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; in similar fashion from asterisk (*) syntax to &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;&lt;em&gt;element&lt;/em&gt;.</source>
          <target state="translated">Angular аналогичным образом преобразует &lt;code&gt;*&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; из синтаксиса звездочки (*) в &lt;em&gt;элемент &lt;/em&gt; &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e67e3de40fe95a8c00d4dd1bff2697445d28684b" translate="yes" xml:space="preserve">
          <source>Angular translates this instruction into an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; around the host element, then uses this template repeatedly to create a new set of elements and bindings for each &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; in the list. For more information about microsyntax, see the &lt;a href=&quot;structural-directives#microsyntax&quot;&gt;Structural Directives&lt;/a&gt; guide.</source>
          <target state="translated">Angular переводит эту инструкцию в &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; вокруг элемента host, а затем многократно использует этот шаблон для создания нового набора элементов и привязок для каждого &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; в списке. Для получения дополнительной информации о микросинтаксисе см. Руководство по &lt;a href=&quot;structural-directives#microsyntax&quot;&gt;структурным директивам&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c282c74d23f70527b9a9a2fdef131f850048669" translate="yes" xml:space="preserve">
          <source>Angular translates this instruction into an &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; around the host element, then uses this template repeatedly to create a new set of elements and bindings for each &lt;code&gt;item&lt;/code&gt; in the list. For more information about microsyntax, see the &lt;a href=&quot;structural-directives#microsyntax&quot;&gt;Structural Directives&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f421782afe50f58ad1ed9fbccc815096a4e227d" translate="yes" xml:space="preserve">
          <source>Angular treats a nested expression in the same manner as an alternate expression, extracting it into two translation units. The first contains the text outside of the nested expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6acd0291e45c98173358bf8fc914f274d361be6" translate="yes" xml:space="preserve">
          <source>Angular updates the bindings (and therefore the screen) only if the app does something in response to asynchronous events, such as keystrokes. This example code binds the &lt;code&gt;keyup&lt;/code&gt; event to the number 0, the shortest template statement possible. While the statement does nothing useful, it satisfies Angular's requirement so that Angular will update the screen.</source>
          <target state="translated">Angular обновляет привязки (и, следовательно, экран), только если приложение что-то делает в ответ на асинхронные события, такие как нажатия клавиш. Этот пример кода связывает событие &lt;code&gt;keyup&lt;/code&gt; с номером 0, кратчайшим из возможных шаблонных операторов. Несмотря на то, что оператор не делает ничего полезного, он удовлетворяет требованию Angular, так что Angular обновит экран.</target>
        </trans-unit>
        <trans-unit id="ab5ccc966eff22cc30bc6d91001c94c57cd1dec3" translate="yes" xml:space="preserve">
          <source>Angular updates the display every time the user adds a hero. If the user clicks the &lt;strong&gt;Reset&lt;/strong&gt; button, Angular replaces &lt;code&gt;heroes&lt;/code&gt; with a new array of the original heroes and updates the display. If you add the ability to remove or change a hero, Angular would detect those changes and update the display as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550b4fe7f3f5d9e42a538e1d35676d32309e777c" translate="yes" xml:space="preserve">
          <source>Angular used to rely on the browser to provide number, date, and currency formatting using browser i18n APIs. This practice meant that most apps needed to use a polyfill, users were seeing inconsistent results across browsers, and common formats (such as the currency pipe) didn&amp;rsquo;t match developer expectations out of the box.</source>
          <target state="translated">Angular использовал браузер для предоставления чисел, даты и форматирования валюты с помощью API браузера i18n. Эта практика означала, что большинству приложений нужно было использовать полизаполнение, пользователи видели противоречивые результаты в разных браузерах, а распространенные форматы (например, валютная труба) не соответствовали ожиданиям разработчиков.</target>
        </trans-unit>
        <trans-unit id="d6fa9d5a8d38e3d4d26da6cf34336adf1c339739" translate="yes" xml:space="preserve">
          <source>Angular used to sanitize &lt;code&gt;[&lt;a href=&quot;../api/animations/style&quot;&gt;style&lt;/a&gt;]&lt;/code&gt; and &lt;code&gt;[style.prop]&lt;/code&gt; bindings to prevent malicious code from being inserted through &lt;code&gt;javascript:&lt;/code&gt; expressions in CSS &lt;code&gt;url()&lt;/code&gt; entries. However, most modern browsers no longer support the usage of these expressions, so sanitization was only maintained for the sake of IE 6 and 7. Given that Angular does not support either IE 6 or 7 and sanitization has a performance cost, we will no longer sanitize style bindings as of version 10 of Angular.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34417d3060d2e52591c5133c737a9fc73577780" translate="yes" xml:space="preserve">
          <source>Angular uses a third-party library called &lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;Reactive Extensions (RxJS)&lt;/a&gt;.</source>
          <target state="translated">Angular использует стороннюю библиотеку под названием &lt;a href=&quot;http://reactivex.io/rxjs/&quot;&gt;Reactive Extensions (RxJS)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="238cd9c643f7186f47327fa3f20d86506d261bf2" translate="yes" xml:space="preserve">
          <source>Angular uses capitalization conventions to distinguish the names of various types, as described in the &lt;a href=&quot;styleguide#02-01&quot;&gt;naming guidelines section&lt;/a&gt; of the Style Guide. Here's a summary of the case types:</source>
          <target state="translated">Angular использует соглашения об использовании заглавных букв для различения имен различных типов, как описано в разделе &amp;laquo; &lt;a href=&quot;styleguide#02-01&quot;&gt;Рекомендации&lt;/a&gt; по именованию&amp;raquo; в Руководстве по стилю. Вот краткое изложение типов дел:</target>
        </trans-unit>
        <trans-unit id="b23d17cee636d84970f89a7ad98f26ce7fdce1aa" translate="yes" xml:space="preserve">
          <source>Angular uses object identity to select option. It's possible for the identities of items to change while the data does not. This can happen, for example, if the items are produced from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the second response will produce objects with different identities.</source>
          <target state="translated">Угловой использует идентификацию объекта для выбора опции.При этом идентичность элементов может меняться,а данные-нет.Это может произойти,например,если элементы произведены из RPC на сервере,и RPC запущен повторно.Даже если данные не изменились,второй ответ выдаст объекты с разными идентификаторами.</target>
        </trans-unit>
        <trans-unit id="afa3e2aab5eb44abf792978d1175dab7157473c8" translate="yes" xml:space="preserve">
          <source>Angular uses object identity to track insertions and deletions within the iterator and reproduce those changes in the DOM. This has important implications for animations and any stateful controls that are present, such as &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements that accept user input. Inserted rows can be animated in, deleted rows can be animated out, and unchanged rows retain any unsaved state such as user input. For more on animations, see &lt;a href=&quot;../../guide/transition-and-triggers&quot;&gt;Transitions and Triggers&lt;/a&gt;.</source>
          <target state="translated">Angular использует идентификатор объекта для отслеживания вставок и удалений внутри итератора и воспроизведения этих изменений в DOM. Это имеет важные последствия для анимации и любых присутствующих элементов управления с состоянием, таких как элементы &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , которые принимают пользовательский ввод. Вставленные строки можно анимировать, удаленные строки можно анимировать, а неизмененные строки сохраняют любое несохраненное состояние, такое как пользовательский ввод. Для получения дополнительной информации об анимациях см. &lt;a href=&quot;../../guide/transition-and-triggers&quot;&gt;Переходы и триггеры&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1cb885a8c762330f16faa7918e600c17bab6fcad" translate="yes" xml:space="preserve">
          <source>Angular uses property binding; there is no built-in &lt;em&gt;href&lt;/em&gt; directive. Place the element's &lt;code&gt;href&lt;/code&gt; property in square brackets and set it to a quoted template expression.</source>
          <target state="translated">Angular использует привязку свойств; нет встроенной директивы &lt;em&gt;href&lt;/em&gt; . Поместите свойство &lt;code&gt;href&lt;/code&gt; элемента в квадратные скобки и установите его в выражение шаблона в кавычках.</target>
        </trans-unit>
        <trans-unit id="72ad9c35cd585d33a4b440a583ddfd37683769b7" translate="yes" xml:space="preserve">
          <source>Angular uses property binding; there is no built-in &lt;em&gt;show&lt;/em&gt; directive. For hiding and showing elements, bind to the HTML &lt;code&gt;hidden&lt;/code&gt; property.</source>
          <target state="translated">Angular использует привязку свойств; нет встроенной директивы &lt;em&gt;show&lt;/em&gt; . Чтобы скрыть и показать элементы, свяжите со &lt;code&gt;hidden&lt;/code&gt; свойством HTML .</target>
        </trans-unit>
        <trans-unit id="0b8039827d9181117e8916b7566b190665ccc87d" translate="yes" xml:space="preserve">
          <source>Angular uses property binding; there is no built-in &lt;em&gt;src&lt;/em&gt; directive. Place the &lt;code&gt;src&lt;/code&gt; property in square brackets and set it to a quoted template expression.</source>
          <target state="translated">Angular использует привязку свойств; нет встроенной директивы &lt;em&gt;src&lt;/em&gt; . Поместите свойство &lt;code&gt;src&lt;/code&gt; в квадратные скобки и установите его в выражение шаблона в кавычках.</target>
        </trans-unit>
        <trans-unit id="51bb56d88f545ecd21c8b3295d3ae0c08827925b" translate="yes" xml:space="preserve">
          <source>Angular uses this strategy by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9686cbe9cdd1e05634250b025f2d23aea2544f0" translate="yes" xml:space="preserve">
          <source>Angular version 9 maintains the behavior of the &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; flag, and introduces a third &quot;strict mode&quot;. Strict mode is a superset of full mode, and is accessed by setting the &lt;code&gt;strictTemplates&lt;/code&gt; flag to true. This flag supersedes the &lt;code&gt;fullTemplateTypeCheck&lt;/code&gt; flag. In strict mode, Angular version 9 adds checks that go beyond the version 8 type-checker. Note that strict mode is only available if using Ivy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc76e6d5243f1e5063ab51dd2791ed0cb2ccde1" translate="yes" xml:space="preserve">
          <source>Angular version numbers have three parts: &lt;code&gt;major.minor.patch&lt;/code&gt;. For example, version 7.2.11 indicates major version 7, minor version 2, and patch level 11.</source>
          <target state="translated">Угловые номера версий &lt;code&gt;major.minor.patch&lt;/code&gt; трех частей: major.minor.patch . Например, версия 7.2.11 обозначает основную версию 7, второстепенную версию 2 и уровень исправления 11.</target>
        </trans-unit>
        <trans-unit id="e66d745516cc0cbdc5a199f2171badeb163e055a" translate="yes" xml:space="preserve">
          <source>Angular version numbers indicate the level of changes that are introduced by the release. This use of &lt;a href=&quot;https://semver.org/&quot;&gt;semantic versioning&lt;/a&gt; helps you understand the potential impact of updating to a new version.</source>
          <target state="translated">Угловые номера версий указывают на уровень изменений, внесенных в выпуске. Такое использование &lt;a href=&quot;https://semver.org/&quot;&gt;семантического контроля версий&lt;/a&gt; помогает понять потенциальное влияние обновления на новую версию.</target>
        </trans-unit>
        <trans-unit id="6667c0e19d01e9c6b4ce15412ca271371a87af6e" translate="yes" xml:space="preserve">
          <source>Angular versioning</source>
          <target state="translated">угловое версионирование</target>
        </trans-unit>
        <trans-unit id="481459b7a7a53cb010c10084e6cbefbbce0d18d7" translate="yes" xml:space="preserve">
          <source>Angular versioning and releases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae599289dc507efb8c0a1716c60673504ba85f7d" translate="yes" xml:space="preserve">
          <source>Angular versions ^4.0.0 and ^5.0.0 are no longer under support.</source>
          <target state="translated">Угловые версии ^4.0.0 и ^5.0.0 больше не поддерживаются.</target>
        </trans-unit>
        <trans-unit id="7354076fee398ac2174e62901aad04648bfc7170" translate="yes" xml:space="preserve">
          <source>Angular versions ^4.0.0, ^5.0.0, ^6.0.0 and ^7.0.0 are no longer under support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f7eb6ab6bf508573fe3789219842611216a65fe" translate="yes" xml:space="preserve">
          <source>Angular will automatically include locale data if you configure the locale using the &lt;code&gt;--localize&lt;/code&gt; option with &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt; CLI command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d1eaafbfdbdadd395ad40f8c2e94be887f2a15" translate="yes" xml:space="preserve">
          <source>Angular workspace configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dcd5af91abd8b4ee5691549f133ec7e54a19b3" translate="yes" xml:space="preserve">
          <source>Angular&amp;rsquo;s &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; returns observables from HTTP method calls. For instance, &lt;code&gt;http.get(&amp;lsquo;/api&amp;rsquo;)&lt;/code&gt; returns an observable. This provides several advantages over promise-based HTTP APIs:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; Angular возвращает наблюдаемые из вызовов метода HTTP. Например, &lt;code&gt;http.get(&amp;lsquo;/api&amp;rsquo;)&lt;/code&gt; возвращает наблюдаемое. Это обеспечивает несколько преимуществ перед основанными на обещаниях HTTP API:</target>
        </trans-unit>
        <trans-unit id="39d9244a49d87a2a7a6aedec6ed8bfecbe27e003" translate="yes" xml:space="preserve">
          <source>Angular&amp;rsquo;s cross-site scripting security model</source>
          <target state="translated">Модель безопасности межсайтовых скриптов Angular</target>
        </trans-unit>
        <trans-unit id="361440e87ccdb1fecd73d942a162a4cb298411a7" translate="yes" xml:space="preserve">
          <source>Angular's &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/compiler-cli/src/metadata/schema.ts&quot;&gt;schema.ts&lt;/a&gt; describes the JSON format as a collection of TypeScript interfaces.</source>
          <target state="translated">Angular &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/compiler-cli/src/metadata/schema.ts&quot;&gt;schema.ts&lt;/a&gt; описывает формат JSON как набор интерфейсов TypeScript.</target>
        </trans-unit>
        <trans-unit id="8b0004daae3fceeb6dd522584dd3f1c3e15008d4" translate="yes" xml:space="preserve">
          <source>Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; has built-in support for the client-side half of this technique. Read about it more in the &lt;a href=&quot;http&quot;&gt;HttpClient guide&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; от Angular имеет встроенную поддержку клиентской части этого метода. Подробнее об этом &lt;a href=&quot;http&quot;&gt;читайте в руководстве HttpClient&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc370eef79da781852b848b1734c368b87b68ffa" translate="yes" xml:space="preserve">
          <source>Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; has built-in support for the client-side half of this technique. Read about it more in the &lt;a href=&quot;http#security-xsrf-protection&quot;&gt;HttpClient guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb50cce578f3a5a5a7abdb4dd6da589ba21a121" translate="yes" xml:space="preserve">
          <source>Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; library recognizes this convention and automatically strips the string &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt; from all responses before further parsing.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; библиотека Angular распознает это соглашение и автоматически удаляет строку &lt;code&gt;&quot;)]}',\n&quot;&lt;/code&gt; из всех ответов перед дальнейшим анализом.</target>
        </trans-unit>
        <trans-unit id="14617516211b35ab06a4b2a6b666a840eb5b82fd" translate="yes" xml:space="preserve">
          <source>Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; registers the providers needed to use a single instance of the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service throughout your app. The &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service is what you inject into your services to fetch data and interact with external APIs and resources.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; от Angular регистрирует поставщиков, необходимых для использования единственного экземпляра службы &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; в вашем приложении. Служба &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; - это то, что вы вводите в свои службы для извлечения данных и взаимодействия с внешними API и ресурсами.</target>
        </trans-unit>
        <trans-unit id="f464c195e5c33d89fa74ab8b0d73354d62ba9d69" translate="yes" xml:space="preserve">
          <source>Angular's &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; registers the providers your app needs to use a single instance of the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service throughout your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec334ceb63562c7ef49674b3cead9e9d4cba4020" translate="yes" xml:space="preserve">
          <source>Angular's &lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; service provides convenient methods for generating controls. As with the other services you've used, you need to import and inject the service before you can use it:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../api/forms/formbuilder&quot;&gt;FormBuilder&lt;/a&gt;&lt;/code&gt; от Angular предоставляет удобные методы для генерации элементов управления. Как и в случае с другими услугами, которые вы использовали, вам необходимо импортировать и внедрить службу, прежде чем вы сможете ее использовать</target>
        </trans-unit>
        <trans-unit id="cf774047e36d0ca6ef5a720dc672fae05bb9fc52" translate="yes" xml:space="preserve">
          <source>Angular's &lt;code&gt;keyframe()&lt;/code&gt; function is similar to keyframes in CSS. Keyframes allow several style changes within a single timing segment. For example, our button, instead of fading, could change color several times over a single 2-second timespan.</source>
          <target state="translated">Функция &lt;code&gt;keyframe()&lt;/code&gt; Angular похожа на ключевые кадры в CSS. Ключевые кадры позволяют несколько изменений стиля в пределах одного временного сегмента. Например, наша кнопка вместо того, чтобы исчезать, может менять цвет несколько раз за один 2-секундный промежуток времени.</target>
        </trans-unit>
        <trans-unit id="9919eee2a51b81bfdf76bbbffe272989ae666ca0" translate="yes" xml:space="preserve">
          <source>Angular's &lt;code&gt;keyframe()&lt;/code&gt; function is similar to keyframes in CSS. Keyframes allow several style changes within a single timing segment. For example, the button, instead of fading, could change color several times over a single 2-second timespan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35707b1741a5656cd81137fd131c1cecf9c96f83" translate="yes" xml:space="preserve">
          <source>Angular's HTTP testing library is designed for a pattern of testing in which the app executes code and makes requests first. The test then expects that certain requests have or have not been made, performs assertions against those requests, and finally provides responses by &quot;flushing&quot; each expected request.</source>
          <target state="translated">Библиотека HTTP-тестирования Angular предназначена для шаблона тестирования,в котором приложение сначала выполняет код и делает запросы.Тест затем ожидает,что определенные запросы были или не были сделаны,выполняет утверждения против этих запросов,и,наконец,предоставляет ответы путем &quot;промывки&quot; каждого ожидаемого запроса.</target>
        </trans-unit>
        <trans-unit id="44f361bf81db534631a0013ce3d42b1478068b98" translate="yes" xml:space="preserve">
          <source>Angular's animation support builds on top of web animations, so you can animate any property that the browser considers animatable. This includes positions, sizes, transforms, colors, borders, and more. The W3C maintains a list of animatable properties on its &lt;a href=&quot;https://www.w3.org/TR/css-transitions-1/&quot;&gt;CSS Transitions&lt;/a&gt; page.</source>
          <target state="translated">Поддержка анимации в Angular основана на веб-анимации, поэтому вы можете анимировать любое свойство, которое браузер считает анимируемым. Это включает в себя позиции, размеры, преобразования, цвета, границы и многое другое. W3C поддерживает список анимируемых свойств на своей странице &lt;a href=&quot;https://www.w3.org/TR/css-transitions-1/&quot;&gt;CSS Transitions&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1bc2a1c230dc36047042d454f2cb3150e707c25" translate="yes" xml:space="preserve">
          <source>Angular's animation system is built on CSS functionality, which means you can animate any property that the browser considers animatable. This includes positions, sizes, transforms, colors, borders, and more. The W3C maintains a list of animatable properties on its &lt;a href=&quot;https://www.w3.org/TR/css-transitions-1/&quot;&gt;CSS Transitions&lt;/a&gt; page.</source>
          <target state="translated">Система анимации Angular построена на функциональности CSS, что означает, что вы можете анимировать любое свойство, которое браузер считает анимируемым. Это включает в себя позиции, размеры, преобразования, цвета, границы и многое другое. W3C поддерживает список анимируемых свойств на своей странице &lt;a href=&quot;https://www.w3.org/TR/css-transitions-1/&quot;&gt;CSS Transitions&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c259b63cddb04acf22e950acc14653da9d32a74e" translate="yes" xml:space="preserve">
          <source>Angular's animations library makes it easy to define and apply animation effects such as page and list transitions. For more information, see the &lt;a href=&quot;animations&quot;&gt;Animations guide&lt;/a&gt;.</source>
          <target state="translated">Библиотека анимаций Angular позволяет легко определять и применять эффекты анимации, такие как переходы страниц и списков. Для получения дополнительной информации см. &lt;a href=&quot;animations&quot;&gt;Руководство&lt;/a&gt; по анимации .</target>
        </trans-unit>
        <trans-unit id="1ae8350364c17bca7b7f63ffe70ee1b69a60cc69" translate="yes" xml:space="preserve">
          <source>Angular's continuous integration process runs unit tests of the framework on all of these browsers for every pull request, using &lt;a href=&quot;https://saucelabs.com/&quot;&gt;SauceLabs&lt;/a&gt; and &lt;a href=&quot;https://www.browserstack.com&quot;&gt;Browserstack&lt;/a&gt;.</source>
          <target state="translated">Процесс непрерывной интеграции угловой в запускает юнит тесты рамок на всех эти браузеры для каждого запроса тянуть, используя &lt;a href=&quot;https://saucelabs.com/&quot;&gt;SauceLabs&lt;/a&gt; и &lt;a href=&quot;https://www.browserstack.com&quot;&gt;Browserstack&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cf8707d44d9ba4cc582ed7d651d0ee4d537dd6ef" translate="yes" xml:space="preserve">
          <source>Angular's resolution behavior can be modified with &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt;, &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt;. Import each of them from &lt;code&gt;@angular/core&lt;/code&gt; and use each in the component class constructor when you inject your service.</source>
          <target state="translated">Поведение разрешения Angular можно изменить с помощью &lt;code&gt;@&lt;a href=&quot;../api/core/optional&quot;&gt;Optional&lt;/a&gt;()&lt;/code&gt; , &lt;code&gt;@&lt;a href=&quot;../api/core/self&quot;&gt;Self&lt;/a&gt;()&lt;/code&gt; , &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/host&quot;&gt;Host&lt;/a&gt;()&lt;/code&gt; . Импортируйте каждый из них из &lt;code&gt;@angular/core&lt;/code&gt; и используйте каждый в конструкторе классов компонентов при внедрении службы.</target>
        </trans-unit>
        <trans-unit id="1786feb384dc29da2b7d0b362b7546fe85676b4f" translate="yes" xml:space="preserve">
          <source>Angular's service worker is designed to optimize the end user experience of using an application over a slow or unreliable network connection, while also minimizing the risks of serving outdated content.</source>
          <target state="translated">Сервисный работник компании Angular предназначен для оптимизации работы конечного пользователя с приложением при медленном или ненадежном сетевом подключении,а также для минимизации рисков обслуживания устаревшего контента.</target>
        </trans-unit>
        <trans-unit id="504cd5fa4c7a2dccac0652568a0bf7e92fa161e4" translate="yes" xml:space="preserve">
          <source>Angular's template compiler. It understands templates and can convert them to code that makes the application run and render. Typically you don&amp;rsquo;t interact with the compiler directly; rather, you use it indirectly via &lt;code&gt;platform-browser-dynamic&lt;/code&gt; when JIT compiling in the browser. For more information, see the &lt;a href=&quot;aot-compiler&quot;&gt;Ahead-of-time Compilation guide&lt;/a&gt;.</source>
          <target state="translated">Шаблонный компилятор Angular. Он понимает шаблоны и может преобразовывать их в код, который заставляет приложение работать и отображать. Обычно вы не взаимодействуете с компилятором напрямую; скорее, вы используете его косвенно через &lt;code&gt;platform-browser-dynamic&lt;/code&gt; при компиляции JIT в браузере. Для получения дополнительной информации см. &lt;a href=&quot;aot-compiler&quot;&gt;Руководство по&lt;/a&gt; предварительной оценке .</target>
        </trans-unit>
        <trans-unit id="ff40c7b19b49d4d5e133e555bcb91882845c5f9c" translate="yes" xml:space="preserve">
          <source>Angular's template syntax extends HTML and JavaScript. This section introduces template syntax by enhancing the &quot;Products&quot; area.</source>
          <target state="translated">Синтаксис шаблона Angular расширяет HTML и JavaScript.В этом разделе представлен синтаксис шаблонов за счет расширения области &quot;Продукты&quot;.</target>
        </trans-unit>
        <trans-unit id="3ff1791e829c37910787b485c2e7587138023981" translate="yes" xml:space="preserve">
          <source>Angular's two-way binding syntax is a combination of square brackets and parentheses, &lt;code&gt;[()]&lt;/code&gt;. The &lt;code&gt;[()]&lt;/code&gt; syntax combines the brackets of property binding, &lt;code&gt;[]&lt;/code&gt;, with the parentheses of event binding, &lt;code&gt;()&lt;/code&gt;, as follows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ddc03baf11e86bab9597295ea44e229f6cb702e" translate="yes" xml:space="preserve">
          <source>Angular's unidirectional data flow rule forbids updates to the view &lt;em&gt;after&lt;/em&gt; it has been composed. Both of these hooks fire &lt;em&gt;after&lt;/em&gt; the component's view has been composed.</source>
          <target state="translated">Правило однонаправленного потока данных Angular запрещает обновление представления &lt;em&gt;после&lt;/em&gt; его составления. Оба эти крючка срабатывают &lt;em&gt;после&lt;/em&gt; того, как вид компонента был составлен.</target>
        </trans-unit>
        <trans-unit id="574d58aea3098c9ffb9984b160cf4eb2c3fecec7" translate="yes" xml:space="preserve">
          <source>Angular, the Angular CLI, and Angular applications depend on &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;npm packages&lt;/a&gt; for many features and functions. To download and install npm packages, you need an npm package manager. This guide uses the &lt;a href=&quot;https://docs.npmjs.com/cli/install&quot;&gt;npm client&lt;/a&gt; command line interface, which is installed with &lt;code&gt;Node.js&lt;/code&gt; by default. To check that you have the npm client installed, run &lt;code&gt;npm -v&lt;/code&gt; in a terminal window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5adb3a8bc2d1144d715b4e241c8b97e75acec4c" translate="yes" xml:space="preserve">
          <source>Angular, the Angular CLI, and Angular apps depend on features and functionality provided by libraries that are available as &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;npm packages&lt;/a&gt;. To download and install npm packages, you must have an npm package manager.</source>
          <target state="translated">Приложения Angular, Angular CLI и Angular зависят от функций и возможностей, предоставляемых библиотеками, которые доступны в виде &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;пакетов npm&lt;/a&gt; . Для загрузки и установки пакетов npm у вас должен быть менеджер пакетов npm.</target>
        </trans-unit>
        <trans-unit id="2a3de4a9dc7c9f3bd23b0b53226033777b1c013b" translate="yes" xml:space="preserve">
          <source>AngularJS</source>
          <target state="translated">AngularJS</target>
        </trans-unit>
        <trans-unit id="6e35a378aa54bd494ebc719b125fbf5b36ab4fb7" translate="yes" xml:space="preserve">
          <source>AngularJS 1.5 introduces the &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/angular.Module#component&quot;&gt;component API&lt;/a&gt; that makes it easier to define component directives like these. It is a good idea to use this API for component directives for several reasons:</source>
          <target state="translated">AngularJS 1.5 представляет &lt;a href=&quot;https://docs.angularjs.org/api/ng/type/angular.Module#component&quot;&gt;API компонента,&lt;/a&gt; который облегчает определение директив компонента, подобных этим. Рекомендуется использовать этот API для директив компонентов по нескольким причинам:</target>
        </trans-unit>
        <trans-unit id="be95540cbaad0a5ea6f38f0fb89f4c1fe637785c" translate="yes" xml:space="preserve">
          <source>AngularJS apps are great. Always consider the business case before moving to Angular. An important part of that case is the time and effort to get there. This guide describes the built-in tools for efficiently migrating AngularJS projects over to the Angular platform, a piece at a time.</source>
          <target state="translated">Приложения AngularJS великолепны.Всегда рассматривайте бизнес-планы,прежде чем переходить на Angular.Важной частью этого дела является время и усилия,чтобы добраться туда.Данное руководство описывает встроенные инструменты для эффективной миграции проектов AngularJS на платформу Angular,по кусочку за раз.</target>
        </trans-unit>
        <trans-unit id="ad3374e34ac229a514bcb825e7c41831585eac3c" translate="yes" xml:space="preserve">
          <source>AngularJS developers know this technique as &lt;em&gt;transclusion&lt;/em&gt;.</source>
          <target state="translated">Разработчики AngularJS знают эту технику как &lt;em&gt;включение&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="2b756697e8af3cfff41be5b54a86bcc40435ed5a" translate="yes" xml:space="preserve">
          <source>AngularJS directives always execute inside AngularJS framework codebase regardless of where they are instantiated.</source>
          <target state="translated">Директивы AngularJS всегда выполняются внутри кодовой базы фреймворка AngularJS,независимо от того,где они инстанциированы.</target>
        </trans-unit>
        <trans-unit id="5883a4552c1e380fb9e76fe1a405dd956e2e041a" translate="yes" xml:space="preserve">
          <source>AngularJS directives always execute inside the AngularJS framework codebase regardless of where they are instantiated.</source>
          <target state="translated">Директивы AngularJS всегда выполняются внутри кодовой базы фреймворка AngularJS,независимо от того,где они инстанцированы.</target>
        </trans-unit>
        <trans-unit id="a2361ecb57211e492282d07e7e196e2d57b74a2f" translate="yes" xml:space="preserve">
          <source>AngularJS event-based directives do not exist in Angular. Rather, define one-way binding from the template view to the component using &lt;strong&gt;event binding&lt;/strong&gt;.</source>
          <target state="translated">AngularJS основанные на событиях директивы не существуют в Angular. Вместо этого определите одностороннюю привязку из представления шаблона к компоненту, используя &lt;strong&gt;привязку событий&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7ba2194b47c5f56823c853e12f0552deafc5b008" translate="yes" xml:space="preserve">
          <source>AngularJS expects controllers to be constructor functions. That's exactly what ES2015/TypeScript classes are under the hood, so that means you can just plug in a class as a component controller and AngularJS will happily use it.</source>
          <target state="translated">AngularJS ожидает,что контроллеры будут конструкторскими функциями.Это именно то,что ES2015/TypeScript классы находятся под капотом,так что это означает,что вы можете просто подключить класс в качестве контроллера компонентов и AngularJS с удовольствием будет его использовать.</target>
        </trans-unit>
        <trans-unit id="112a877bf72d4bfc8bf612a04c77986c603a5169" translate="yes" xml:space="preserve">
          <source>AngularJS has code in each controller that looks up an appropriate Angular module and registers the controller with that module.</source>
          <target state="translated">AngularJS имеет код в каждом контроллере,который ищет соответствующий модуль Angular и регистрирует контроллер с этим модулем.</target>
        </trans-unit>
        <trans-unit id="e7245580254db776b68e6171f5b629c700d61b34" translate="yes" xml:space="preserve">
          <source>AngularJS is always bootstrapped first and owns the bottom most view.</source>
          <target state="translated">AngularJS всегда загружается первым и имеет самый нижний вид.</target>
        </trans-unit>
        <trans-unit id="2aef830187741c51c79d0fdd323c04bb9f1d5a18" translate="yes" xml:space="preserve">
          <source>AngularJS is currently loaded by a script tag in &lt;code&gt;index.html&lt;/code&gt;, which means that the whole app has access to it as a global and uses the same instance of the &lt;code&gt;angular&lt;/code&gt; variable. If you used &lt;code&gt;import * as angular from 'angular'&lt;/code&gt; instead, you'd also have to load every file in the AngularJS app to use ES2015 modules in order to ensure AngularJS was being loaded correctly.</source>
          <target state="translated">AngularJS в настоящее время загружается тегом script в &lt;code&gt;index.html&lt;/code&gt; , что означает, что все приложение имеет к нему глобальный доступ и использует один и тот же экземпляр &lt;code&gt;angular&lt;/code&gt; переменной. Если вместо этого вы использовали &lt;code&gt;import * as angular from 'angular'&lt;/code&gt; , вам также пришлось бы загружать каждый файл в приложении AngularJS, чтобы использовать модули ES2015, чтобы обеспечить правильную загрузку AngularJS.</target>
        </trans-unit>
        <trans-unit id="398510dbda26c2a8fe4e08585f1a59953ba02faf" translate="yes" xml:space="preserve">
          <source>AngularJS provides more than seventy built-in directives for templates. Many of them aren't needed in Angular because of its more capable and expressive binding system. The following are some of the key AngularJS built-in directives and their equivalents in Angular.</source>
          <target state="translated">AngularJS предоставляет более семидесяти встроенных директив для шаблонов.Многие из них не нужны в Angular из-за его более мощной и выразительной системы связывания.Ниже приведены некоторые из ключевых встроенных директив AngularJS и их эквиваленты в Angular.</target>
        </trans-unit>
        <trans-unit id="3adbc04c8f21c0c77451b7e8d0376cba32bd94e5" translate="yes" xml:space="preserve">
          <source>AngularJS to Angular Concepts: Quick Reference</source>
          <target state="translated">УгловыеJS к угловым концепциям:Краткая ссылка</target>
        </trans-unit>
        <trans-unit id="a79d7666f12753eb1593d8d55349080a460f08f1" translate="yes" xml:space="preserve">
          <source>AngularJS to Angular concepts: Quick reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e9e741df0a590eafd026f54096b7bc961874d9" translate="yes" xml:space="preserve">
          <source>AngularJS, uses a &lt;code&gt;link&lt;/code&gt; tag in the head section of the &lt;code&gt;index.html&lt;/code&gt; file to define the styles for the application.</source>
          <target state="translated">AngularJS, использует тег &lt;code&gt;link&lt;/code&gt; в разделе head файла &lt;code&gt;index.html&lt;/code&gt; , чтобы определить стили для приложения.</target>
        </trans-unit>
        <trans-unit id="4cee08c4b7c72405159cc26c7780b76851e3a3fd" translate="yes" xml:space="preserve">
          <source>AngularJSUrlCodec</source>
          <target state="translated">AngularJSUrlCodec</target>
        </trans-unit>
        <trans-unit id="beb2fb26a90715a16ad2b713f52643af07bc8e11" translate="yes" xml:space="preserve">
          <source>Animatable properties and units</source>
          <target state="translated">Анимационные свойства и единицы измерения</target>
        </trans-unit>
        <trans-unit id="0769c5775aae589f50623888b4c64c6191ca75c0" translate="yes" xml:space="preserve">
          <source>Animate HTML elements as they are inserted and removed from the DOM, including responsive real-time filtering.</source>
          <target state="translated">Живые элементы HTML по мере их вставки и удаления с флэш-диска,включая фильтрацию в реальном времени.</target>
        </trans-unit>
        <trans-unit id="618592a1a0b18cf010c11404c857093fca94afc4" translate="yes" xml:space="preserve">
          <source>Animate HTML elements in complex sequences and choreographies.</source>
          <target state="translated">Анимировать элементы HTML в сложных последовательностях и хореографиях.</target>
        </trans-unit>
        <trans-unit id="22f5b7d24e1ffc8c67c552e6bdc267d15ad51cc1" translate="yes" xml:space="preserve">
          <source>Animate each element on screen for 0.5 seconds using a custom-defined easing curve, simultaneously fading it in and un-transforming it.</source>
          <target state="translated">Анимируйте каждый элемент на экране в течение 0,5 секунд,используя заданную пользователем кривую ослабления,одновременно затухая ее и не преобразуя.</target>
        </trans-unit>
        <trans-unit id="bbd45932cc4b4e9e342cbb31ef89450062658db7" translate="yes" xml:space="preserve">
          <source>Animate multiple elements using query() and stagger() functions</source>
          <target state="translated">Анимировать несколько элементов с помощью функций query()и stagger()</target>
        </trans-unit>
        <trans-unit id="1df44453e1f5986603739440ade7f2955dce87e3" translate="yes" xml:space="preserve">
          <source>Animate parent and child elements.</source>
          <target state="translated">Живые родительские и детские элементы.</target>
        </trans-unit>
        <trans-unit id="1231f267f34e53a86804d9ed850d53253508e336" translate="yes" xml:space="preserve">
          <source>AnimateChildOptions</source>
          <target state="translated">AnimateChildOptions</target>
        </trans-unit>
        <trans-unit id="d7cf5bc56891490654005df5eefb910d609dce34" translate="yes" xml:space="preserve">
          <source>AnimateTimings</source>
          <target state="translated">AnimateTimings</target>
        </trans-unit>
        <trans-unit id="d913287670141916915aa8af33ee5f086ec77a65" translate="yes" xml:space="preserve">
          <source>Animates in the element over 300 milliseconds. During the animation, the element assumes its default width and opacity.</source>
          <target state="translated">Аниматирует в стихии более 300 миллисекунд.Во время анимации элемент предполагает свою ширину и непрозрачность по умолчанию.</target>
        </trans-unit>
        <trans-unit id="820b9c7157225f0d4bfc03fe34474f3177ca57d5" translate="yes" xml:space="preserve">
          <source>Animating a simple transition</source>
          <target state="translated">Анимация простого перехода</target>
        </trans-unit>
        <trans-unit id="1acb2e94dc3017b424ec642021dbc908a4c12566" translate="yes" xml:space="preserve">
          <source>Animating entering and leaving a view</source>
          <target state="translated">Анимация входа и выхода вида</target>
        </trans-unit>
        <trans-unit id="7886cadc604f670181386ae5ea9a46ff00865c33" translate="yes" xml:space="preserve">
          <source>Animating to the final state</source>
          <target state="translated">Анимация до финального состояния</target>
        </trans-unit>
        <trans-unit id="aff1288fe6cdc9b27c1923584d50a269fdc280dc" translate="yes" xml:space="preserve">
          <source>Animation callbacks</source>
          <target state="translated">Обратные вызовы анимации</target>
        </trans-unit>
        <trans-unit id="42515a4b18b3e75a9a05c13c308ead18b0c1cf76" translate="yes" xml:space="preserve">
          <source>Animation definition</source>
          <target state="translated">Определение анимации</target>
        </trans-unit>
        <trans-unit id="dbcb7927796307d3da6f12d7006d5bd2f5657cd1" translate="yes" xml:space="preserve">
          <source>Animation definitions are linked to components through the &lt;code&gt;&lt;a href=&quot;core/component#animations&quot;&gt;animations&lt;/a&gt;&lt;/code&gt; property in the &lt;code&gt;@&lt;a href=&quot;core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; metadata, typically in the component file of the HTML element to be animated. The &lt;code&gt;&lt;a href=&quot;animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; function encapsulates a named animation, with all other function calls nested within. Use the trigger name to bind the named animation to a specific triggering element in the HTML template.</source>
          <target state="translated">Определения анимации связаны с компонентами через свойство &lt;code&gt;&lt;a href=&quot;core/component#animations&quot;&gt;animations&lt;/a&gt;&lt;/code&gt; в метаданных &lt;code&gt;@&lt;a href=&quot;core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; , обычно в файле компонента HTML-элемента, который нужно анимировать. Функция &lt;code&gt;&lt;a href=&quot;animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; инкапсулирует именованную анимацию, а все остальные вызовы функций вложены в нее. Используйте имя триггера, чтобы связать именованную анимацию с конкретным элементом триггера в шаблоне HTML.</target>
        </trans-unit>
        <trans-unit id="310caf407085ad7f23432a3af12093d2c5b45918" translate="yes" xml:space="preserve">
          <source>Animation metadata: duration, delay, and easing</source>
          <target state="translated">Метаданные анимации:продолжительность,задержка и облегчение</target>
        </trans-unit>
        <trans-unit id="070dc1a18e384d7b8c26273653b21f0661b190a1" translate="yes" xml:space="preserve">
          <source>Animation provides the illusion of motion: HTML elements change styling over time. Well-designed animations can make your application more fun and easier to use, but they aren't just cosmetic. Animations can improve your app and user experience in a number of ways:</source>
          <target state="translated">Анимация создает иллюзию движения:HTML-элементы со временем меняют стилистику.Хорошо продуманная анимация может сделать ваше приложение более веселым и простым в использовании,но они не просто косметические.Анимация может улучшить ваше приложение и пользовательский опыт несколькими способами:</target>
        </trans-unit>
        <trans-unit id="c0c7db30f689dea02b345d4feb19f80be591a5b4" translate="yes" xml:space="preserve">
          <source>Animation sequence summary</source>
          <target state="translated">Резюме последовательности анимации</target>
        </trans-unit>
        <trans-unit id="a2f413b428d01e3d852c9e02cf22d9856f4c9161" translate="yes" xml:space="preserve">
          <source>Animation state and styles</source>
          <target state="translated">Состояние и стили анимации</target>
        </trans-unit>
        <trans-unit id="4c76d2cc2e089a0e490b689a8cc8e9feb5728375" translate="yes" xml:space="preserve">
          <source>Animation trigger bindings convert all values to strings, and then match the previous and current values against any linked transitions. Booleans can be specified as &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Привязки триггеров анимации преобразуют все значения в строки, а затем сопоставляют предыдущие и текущие значения с любыми связанными переходами. Логические значения могут быть указаны как &lt;code&gt;1&lt;/code&gt; или &lt;code&gt;true&lt;/code&gt; и &lt;code&gt;0&lt;/code&gt; или &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ab4cf7592d8d437f90159cdf1869e12aa12d56dc" translate="yes" xml:space="preserve">
          <source>AnimationAnimateChildMetadata</source>
          <target state="translated">AnimationAnimateChildMetadata</target>
        </trans-unit>
        <trans-unit id="a8199a8fd1152906437f37e892432a0117740e62" translate="yes" xml:space="preserve">
          <source>AnimationAnimateMetadata</source>
          <target state="translated">AnimationAnimateMetadata</target>
        </trans-unit>
        <trans-unit id="7666f03f557808da2899925571c1dc35a2eac29b" translate="yes" xml:space="preserve">
          <source>AnimationAnimateRefMetadata</source>
          <target state="translated">AnimationAnimateRefMetadata</target>
        </trans-unit>
        <trans-unit id="a6c33451ee1ed3313b74b3e177d7107746a4a7b7" translate="yes" xml:space="preserve">
          <source>AnimationBuilder</source>
          <target state="translated">AnimationBuilder</target>
        </trans-unit>
        <trans-unit id="b6988ea2371fbf582630d88819c0e3f3c9bffeed" translate="yes" xml:space="preserve">
          <source>AnimationDriver</source>
          <target state="translated">AnimationDriver</target>
        </trans-unit>
        <trans-unit id="b68b862342361922d8aeebe8914e3813b3a82ea4" translate="yes" xml:space="preserve">
          <source>AnimationEvent</source>
          <target state="translated">AnimationEvent</target>
        </trans-unit>
        <trans-unit id="b8bfdf6ac4276ec091b33b31fa025b59d8ae6d7d" translate="yes" xml:space="preserve">
          <source>AnimationFactory</source>
          <target state="translated">AnimationFactory</target>
        </trans-unit>
        <trans-unit id="a3a7882964c227f42de2f45e1e825e6e7dbaf958" translate="yes" xml:space="preserve">
          <source>AnimationGroupMetadata</source>
          <target state="translated">AnimationGroupMetadata</target>
        </trans-unit>
        <trans-unit id="3e9f8514aa4837ac7a9591838d80d05da6ea30b5" translate="yes" xml:space="preserve">
          <source>AnimationKeyframesSequenceMetadata</source>
          <target state="translated">AnimationKeyframesSequenceMetadata</target>
        </trans-unit>
        <trans-unit id="6fb97195c310cce7c5f508b709bcb87dd08d499f" translate="yes" xml:space="preserve">
          <source>AnimationMetadata</source>
          <target state="translated">AnimationMetadata</target>
        </trans-unit>
        <trans-unit id="53f1eba48611407f4a1975724592be1e71afd91a" translate="yes" xml:space="preserve">
          <source>AnimationMetadataType</source>
          <target state="translated">AnimationMetadataType</target>
        </trans-unit>
        <trans-unit id="fb0b93cca54964c4444fc172d338b01d02dd2b94" translate="yes" xml:space="preserve">
          <source>AnimationOptions</source>
          <target state="translated">AnimationOptions</target>
        </trans-unit>
        <trans-unit id="209f8c7f66e9bd69a25c35a1868b922ae003930a" translate="yes" xml:space="preserve">
          <source>AnimationPlayer</source>
          <target state="translated">AnimationPlayer</target>
        </trans-unit>
        <trans-unit id="6fb8a7cdef7876dff2df1190c171576bf5a725ed" translate="yes" xml:space="preserve">
          <source>AnimationQueryMetadata</source>
          <target state="translated">AnimationQueryMetadata</target>
        </trans-unit>
        <trans-unit id="78889e2ae13c736ba48dc387ac4d3316766916b3" translate="yes" xml:space="preserve">
          <source>AnimationQueryOptions</source>
          <target state="translated">AnimationQueryOptions</target>
        </trans-unit>
        <trans-unit id="2c5530db9d40f1553b25c85091789d55b95b926e" translate="yes" xml:space="preserve">
          <source>AnimationReferenceMetadata</source>
          <target state="translated">AnimationReferenceMetadata</target>
        </trans-unit>
        <trans-unit id="c65c6a5a21639ea491959e7e81065101b6d31f48" translate="yes" xml:space="preserve">
          <source>AnimationSequenceMetadata</source>
          <target state="translated">AnimationSequenceMetadata</target>
        </trans-unit>
        <trans-unit id="f9a31525fd95249ef37b0b3be3b81f19770b6d77" translate="yes" xml:space="preserve">
          <source>AnimationStaggerMetadata</source>
          <target state="translated">AnimationStaggerMetadata</target>
        </trans-unit>
        <trans-unit id="d5c9e1c8b8703497373c017c5a25ac585f71dca2" translate="yes" xml:space="preserve">
          <source>AnimationStateMetadata</source>
          <target state="translated">AnimationStateMetadata</target>
        </trans-unit>
        <trans-unit id="9f838574e71a14ec4034fc9c668e17daeaa733e1" translate="yes" xml:space="preserve">
          <source>AnimationStyleMetadata</source>
          <target state="translated">AnimationStyleMetadata</target>
        </trans-unit>
        <trans-unit id="2bfef012b3c0bb7a9c8988f6ac24a5853564b567" translate="yes" xml:space="preserve">
          <source>AnimationTransitionMetadata</source>
          <target state="translated">AnimationTransitionMetadata</target>
        </trans-unit>
        <trans-unit id="c9a79289360f62c0f790d371279f9ed9ef6dffec" translate="yes" xml:space="preserve">
          <source>AnimationTriggerMetadata</source>
          <target state="translated">AnimationTriggerMetadata</target>
        </trans-unit>
        <trans-unit id="c77dcdedc0f40e8dac08a08c8bef7255abb90e75" translate="yes" xml:space="preserve">
          <source>Animations</source>
          <target state="translated">Animations</target>
        </trans-unit>
        <trans-unit id="0f54eb841ec3b22a39fd482ff66e7904acc8641b" translate="yes" xml:space="preserve">
          <source>Animations API summary</source>
          <target state="translated">Резюме API анимации</target>
        </trans-unit>
        <trans-unit id="52512eb45e2b30a744e5257c969ca3111e25423f" translate="yes" xml:space="preserve">
          <source>Animations are defined in the metadata of the component that controls the HTML element to be animated. Put the code that defines your animations under the &lt;code&gt;animations:&lt;/code&gt; property within the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; decorator.</source>
          <target state="translated">Анимации определяются в метаданных компонента, который управляет элементом HTML для анимации. Поместите код, который определяет ваши анимации, в свойство &lt;code&gt;animations:&lt;/code&gt; в декораторе &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="06c3f02ce6046751e8afb6c9448801d6483e310e" translate="yes" xml:space="preserve">
          <source>Animations can be defined directly inside your components. For this example we are defining the animations in a separate file, which allows us to re-use the animations.</source>
          <target state="translated">Анимации могут быть определены непосредственно внутри Ваших компонентов.Для этого примера мы определяем анимации в отдельном файле,что позволяет нам повторно использовать анимации.</target>
        </trans-unit>
        <trans-unit id="2d23b44688014855fdd9501d6bbd3e413501debb" translate="yes" xml:space="preserve">
          <source>Animations transitions and triggers</source>
          <target state="translated">Анимационные переходы и триггеры</target>
        </trans-unit>
        <trans-unit id="c3caa79244ee020e6b1824a6e588366f508b747d" translate="yes" xml:space="preserve">
          <source>Anno Domini</source>
          <target state="translated">Анно Домини</target>
        </trans-unit>
        <trans-unit id="53096344fdb247ca5b187e37878713fdf03e1195" translate="yes" xml:space="preserve">
          <source>Another TypeScript feature you can make use of is &lt;em&gt;classes&lt;/em&gt;. In particular, you can turn component controllers into classes. That way they'll be a step closer to becoming Angular component classes, which will make life easier once you upgrade.</source>
          <target state="translated">Еще одна особенность TypeScript, которую вы можете использовать - это &lt;em&gt;классы&lt;/em&gt; . В частности, вы можете превратить контроллеры компонентов в классы. Таким образом, они станут на шаг ближе к тому, чтобы стать классами компонентов Angular, что облегчит жизнь после обновления.</target>
        </trans-unit>
        <trans-unit id="56b080272940939ced695e0e8fccf51d1f089b8b" translate="yes" xml:space="preserve">
          <source>Another advantage of &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; is that you can use it to guard against null. Show/hide is best suited for very simple use cases, so when you need a guard, opt instead for &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;. Angular will throw an error if a nested expression tries to access a property of &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Еще одним преимуществом &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; является то, что вы можете использовать его для защиты от нуля. Показать / скрыть лучше всего подходит для очень простых случаев использования, поэтому, когда вам нужна охрана, выберите вместо &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; . Angular выдаст ошибку, если вложенное выражение попытается получить доступ к свойству &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6fcce88157a90349b33951e206a2c653b84c62ec" translate="yes" xml:space="preserve">
          <source>Another class, &lt;code&gt;EvenBetterLogger&lt;/code&gt;, might display the user name in the log message. This logger gets the user from an injected &lt;code&gt;UserService&lt;/code&gt; instance.</source>
          <target state="translated">Другой класс, &lt;code&gt;EvenBetterLogger&lt;/code&gt; , может отображать имя пользователя в сообщении журнала. Этот регистратор получает пользователя из &lt;code&gt;UserService&lt;/code&gt; экземпляра UserService .</target>
        </trans-unit>
        <trans-unit id="81038be782361cd7a156e96f6d6e6dae45bb260d" translate="yes" xml:space="preserve">
          <source>Another common use case for attribute binding is with the &lt;code&gt;colspan&lt;/code&gt; attribute in tables. Binding to the &lt;code&gt;colspan&lt;/code&gt; attribute helps you keep your tables programmatically dynamic. Depending on the amount of data that your application populates a table with, the number of columns that a row spans could change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2181ba65b8c1858b15868800a96303556d7912aa" translate="yes" xml:space="preserve">
          <source>Another domain</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2815d2c42633ed5d5b751d955945df92e687f95c" translate="yes" xml:space="preserve">
          <source>Another domain (for routing)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c927043925bf388c4a50fabc1ec3f662f2dd811" translate="yes" xml:space="preserve">
          <source>Another domain, AppModule</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1638d3363efdfbe5466eef1db2d2342c31fe3e" translate="yes" xml:space="preserve">
          <source>Another example</source>
          <target state="translated">Другой пример</target>
        </trans-unit>
        <trans-unit id="0ed013f9e94cdc0d63ce5a44b4f989895c245c7d" translate="yes" xml:space="preserve">
          <source>Another example is disabling a button when the component says that it &lt;code&gt;isUnchanged&lt;/code&gt;:</source>
          <target state="translated">Другой пример - отключение кнопки, когда компонент сообщает, что она не &lt;code&gt;isUnchanged&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3c964816bf2def0a4255f7c53c2ee3c595ece4c7" translate="yes" xml:space="preserve">
          <source>Another example shows the component class with a provider for &lt;code&gt;FlowerService&lt;/code&gt;. In this case, the injector looks no further than the current &lt;code&gt;ElementInjector&lt;/code&gt; because it finds the &lt;code&gt;FlowerService&lt;/code&gt; and returns the yellow flower 🌼.</source>
          <target state="translated">Другой пример показывает класс компонента с поставщиком для &lt;code&gt;FlowerService&lt;/code&gt; . В этом случае инжектор выглядит не дальше текущего &lt;code&gt;ElementInjector&lt;/code&gt; , потому что он находит &lt;code&gt;FlowerService&lt;/code&gt; и возвращает желтый цветок 🌼.</target>
        </trans-unit>
        <trans-unit id="f02c387e6e60b792589c26b7e606d305ef9df377" translate="yes" xml:space="preserve">
          <source>Another is setting a property of a directive:</source>
          <target state="translated">Другое-это установка свойства директивы:</target>
        </trans-unit>
        <trans-unit id="602cc167054f68080e0cc0803ee3cbf5add9046c" translate="yes" xml:space="preserve">
          <source>Another key difference between &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; is that the latter requires you to instantiate both the AngularJS and Angular modules up-front. This means that you have to pay the cost of instantiating the Angular part of the app, even if you don't use any Angular assets until later. &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; is again less aggressive. It will only instantiate the Angular part when it is required for the first time; that is, as soon as it needs to create a downgraded component.</source>
          <target state="translated">Другое ключевое отличие между &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; заключается в том, что последний требует от вас инициализации обоих модулей AngularJS и Angular. Это означает, что вы должны заплатить за создание экземпляра Angular-части приложения, даже если вы не используете какие-либо ресурсы Angular позже. &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; снова менее агрессивен. Он будет создавать экземпляр Angular только тогда, когда это требуется в первый раз; то есть, как только ему нужно создать пониженный компонент.</target>
        </trans-unit>
        <trans-unit id="1fc73f82cc15907fd525993478d793760025df4c" translate="yes" xml:space="preserve">
          <source>Another platform factory to modify. Allows you to compose factories to build up configurations that might be required by different libraries or parts of the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81aea9981f12bfceefc57291e2e46e0a448fc33b" translate="yes" xml:space="preserve">
          <source>Another problem: some HTML elements require all immediate children to be of a specific type. For example, the &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; element requires &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; children. You can't wrap the &lt;em&gt;options&lt;/em&gt; in a conditional &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; or a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Другая проблема: некоторые элементы HTML требуют, чтобы все непосредственные потомки были определенного типа. Например, элементу &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; требуются дочерние элементы &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; . Вы не можете заключить &lt;em&gt;опции&lt;/em&gt; в условные &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5500271b188473b9589122039f8e0d10390b1818" translate="yes" xml:space="preserve">
          <source>Another reason to re-provide a service at another level is to substitute a &lt;em&gt;more specialized&lt;/em&gt; implementation of that service, deeper in the component tree.</source>
          <target state="translated">Еще одна причина для повторного предоставления услуги на другом уровне - это замена &lt;em&gt;более специализированной&lt;/em&gt; реализации этой службы, более глубокой в ​​дереве компонентов.</target>
        </trans-unit>
        <trans-unit id="5452461849c5467ea0a5cfad43f0fcf8652c8206" translate="yes" xml:space="preserve">
          <source>Another service is needed to supply a specific set of questions from which to build an individual form. For this exercise you will create the &lt;code&gt;QuestionService&lt;/code&gt; to supply this array of questions from the hard-coded sample data. In a real-world app, the service might fetch data from a backend system. The key point, however, is that you control the hero job-application questions entirely through the objects returned from &lt;code&gt;QuestionService&lt;/code&gt;. To maintain the questionnaire as requirements change, you only need to add, update, and remove objects from the &lt;code&gt;questions&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4edcd9ca213bdd8b52b2310e46e71e39a3e13ee" translate="yes" xml:space="preserve">
          <source>Another simple way to deploy your Angular app is to use &lt;a href=&quot;https://help.github.com/articles/what-is-github-pages/&quot;&gt;GitHub Pages&lt;/a&gt;.</source>
          <target state="translated">Другой простой способ развернуть ваше приложение Angular - использовать &lt;a href=&quot;https://help.github.com/articles/what-is-github-pages/&quot;&gt;GitHub Pages&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a0232ed081a1f2af117924de181bf23193259db" translate="yes" xml:space="preserve">
          <source>Another solution to choosing a provider token for non-class dependencies is to define and use an &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; object. The following example shows how to define such a token.</source>
          <target state="translated">Другое решение для выбора токена поставщика для не классовых зависимостей - определить и использовать объект &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; . В следующем примере показано, как определить такой токен.</target>
        </trans-unit>
        <trans-unit id="e18a7fa42b657d430a040fcb6744c6085d9b4ae0" translate="yes" xml:space="preserve">
          <source>Another thing you can do is start adding &lt;em&gt;type safety&lt;/em&gt; to your code. This has actually partially already happened because of the AngularJS typings you installed. TypeScript are checking that you are calling AngularJS APIs correctly when you do things like register components to Angular modules.</source>
          <target state="translated">Еще одна вещь, которую вы можете сделать, это начать добавлять &lt;em&gt;безопасность типов&lt;/em&gt; в ваш код. Это на самом деле частично уже произошло из-за установленных вами набросков AngularJS. TypeScript проверяет, правильно ли вы вызываете API AngularJS, когда вы делаете такие вещи, как регистрация компонентов в модулях Angular.</target>
        </trans-unit>
        <trans-unit id="c3810aa894a3348cc470b2185cd6df4bf822a9c5" translate="yes" xml:space="preserve">
          <source>Another way to limit provider scope is by adding the service you want to limit to the component&amp;rsquo;s &lt;code&gt;providers&lt;/code&gt; array. Component providers and NgModule providers are independent of each other. This method is helpful for when you want to eagerly load a module that needs a service all to itself. Providing a service in the component limits the service only to that component (other components in the same module can&amp;rsquo;t access it.)</source>
          <target state="translated">Другой способ ограничить область действия провайдера - добавить службу, которую вы хотите ограничить, в массив &lt;code&gt;providers&lt;/code&gt; компонента . Поставщики компонентов и поставщики NgModule не зависят друг от друга. Этот метод полезен для тех случаев, когда вы хотите загружать модуль, которому нужен только сервис. Предоставление сервиса в компоненте ограничивает сервис только этим компонентом (другие компоненты в том же модуле не могут получить к нему доступ).</target>
        </trans-unit>
        <trans-unit id="251ae41000e8afa24184650218abb2c7d40f51c8" translate="yes" xml:space="preserve">
          <source>Another way to limit provider scope is by adding the service you want to limit to the component&amp;rsquo;s &lt;code&gt;providers&lt;/code&gt; array. Component providers and NgModule providers are independent of each other. This method is helpful when you want to eagerly load a module that needs a service all to itself. Providing a service in the component limits the service only to that component and its descendants. Other components in the same module can&amp;rsquo;t access it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3ac8b45123b40210a3b3867ac927476f2704e1" translate="yes" xml:space="preserve">
          <source>Any app developer can use these and other libraries that have been published as npm packages by the Angular team or by third parties. See &lt;a href=&quot;using-libraries&quot;&gt;Using Published Libraries&lt;/a&gt;.</source>
          <target state="translated">Любой разработчик приложения может использовать эти и другие библиотеки, которые были опубликованы в виде пакетов npm командой Angular или третьими лицами. См. &lt;a href=&quot;using-libraries&quot;&gt;Использование опубликованных библиотек&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34c22c53a0508cf256d35202481e3c5e94595954" translate="yes" xml:space="preserve">
          <source>Any application still relying on the &lt;code&gt;esm5&lt;/code&gt; and &lt;code&gt;fesm5&lt;/code&gt; as the input to its build system will need to ensure that the build pipeline is capable of accepting JavaScript code conforming to ECMAScript 2015 (ES2015) language specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e225c8709529016fb0fe3d9aaeca9255591cfb" translate="yes" xml:space="preserve">
          <source>Any changes to the public API surface will be done using the versioning, support, and depreciation policies describe above.</source>
          <target state="translated">Любые изменения в общедоступной поверхности API будут осуществляться с помощью описанных выше политик версионирования,поддержки и амортизации.</target>
        </trans-unit>
        <trans-unit id="4252573f476e0bf8d0ee4fd8ca2af51dda805825" translate="yes" xml:space="preserve">
          <source>Any class with the &lt;code&gt;@&lt;a href=&quot;component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;@&lt;a href=&quot;directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; decorator</source>
          <target state="translated">Любой класс с декоратором &lt;code&gt;@&lt;a href=&quot;component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;@&lt;a href=&quot;directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="faa5c260ff9b2e13ba3a7e065117c51a53243e3b" translate="yes" xml:space="preserve">
          <source>Any component created within a lazy loaded module&amp;rsquo;s context, such as by router navigation, gets the local instance of the service, not the instance in the root application injector. Components in external modules continue to receive the instance created for the application root.</source>
          <target state="translated">Любой компонент, созданный в контексте лениво загруженного модуля, такого как навигация маршрутизатора, получает локальный экземпляр службы, а не экземпляр в инжекторе корневого приложения. Компоненты во внешних модулях продолжают получать экземпляр, созданный для корня приложения.</target>
        </trans-unit>
        <trans-unit id="06a75db5d4bcefd57aafb04659c4d9594738124e" translate="yes" xml:space="preserve">
          <source>Any error returned on the &lt;code&gt;Observable&lt;/code&gt; response stream will be wrapped in an &lt;code&gt;&lt;a href=&quot;httperrorresponse&quot;&gt;HttpErrorResponse&lt;/a&gt;&lt;/code&gt; to provide additional context about the state of the HTTP layer when the error occurred. The error property will contain either a wrapped Error object or the error response returned from the server.</source>
          <target state="translated">Любая ошибка, возвращаемая в &lt;code&gt;Observable&lt;/code&gt; потоке ответов, будет помещена в &lt;code&gt;&lt;a href=&quot;httperrorresponse&quot;&gt;HttpErrorResponse&lt;/a&gt;&lt;/code&gt; , чтобы предоставить дополнительный контекст о состоянии уровня HTTP, когда произошла ошибка. Свойство error будет содержать либо обернутый объект Error, либо ответ об ошибке, возвращенный с сервера.</target>
        </trans-unit>
        <trans-unit id="9b490d3957cd57eaa58b9061b9b93abf6f8fceda" translate="yes" xml:space="preserve">
          <source>Any future tasks or microtasks scheduled from within this function will continue executing from outside of the Angular zone.</source>
          <target state="translated">Любые будущие задачи или микрозадачи,запланированные в рамках этой функции,будут продолжать выполняться из-за пределов Угловой зоны.</target>
        </trans-unit>
        <trans-unit id="858f110f5dd01bf7e8dc4320e306d0feb61a7a50" translate="yes" xml:space="preserve">
          <source>Any future tasks or microtasks scheduled from within this function will continue executing from within the Angular zone.</source>
          <target state="translated">Любые будущие задачи или микрозадачи,запланированные в рамках этой функции,будут продолжать выполняться изнутри Угловой зоны.</target>
        </trans-unit>
        <trans-unit id="93532a30b014f85c589d7c068d4130fc1fccc7b1" translate="yes" xml:space="preserve">
          <source>Any observables that the components subscribe to internally should be cleaned up and disposed of during the lifecycle of those components.</source>
          <target state="translated">Любые наблюдаемые компоненты,на которые подписаны внутренние компоненты,должны быть очищены и утилизированы в течение жизненного цикла этих компонентов.</target>
        </trans-unit>
        <trans-unit id="1ac78989853c9b050e2eda23ff2928dfb610d9c3" translate="yes" xml:space="preserve">
          <source>Any provider defined in the child component tree of the current component (e.g. &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;(SomeService) someService: SomeService&lt;/code&gt;)</source>
          <target state="translated">Любой поставщик, определенный в дереве дочерних компонентов текущего компонента (например, &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;(SomeService) someService: SomeService&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="df5462a835da0acf093fceb883fd8b853fd7d033" translate="yes" xml:space="preserve">
          <source>Any provider defined through a string token (e.g. &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;('someToken') someTokenVal: any&lt;/code&gt;)</source>
          <target state="translated">Любой провайдер, определенный с помощью строкового токена (например, &lt;code&gt;@&lt;a href=&quot;viewchild&quot;&gt;ViewChild&lt;/a&gt;('someToken') someTokenVal: any&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9b53bf1c187ff8e5d85d8461d6cbd8075538730c" translate="yes" xml:space="preserve">
          <source>Any subscribers to the &lt;code&gt;valueChanges&lt;/code&gt; observable receive the new value.</source>
          <target state="translated">Любые подписчики на наблюдаемые значения &lt;code&gt;valueChanges&lt;/code&gt; получают новое значение.</target>
        </trans-unit>
        <trans-unit id="63ef43a80069c779b3ee5167397831492df1e816" translate="yes" xml:space="preserve">
          <source>Anything that uses a regular expression is worth testing thoroughly. Use simple Jasmine to explore the expected cases and the edge cases.</source>
          <target state="translated">Все,что использует регулярное выражение,стоит тщательно проверить.Используйте простой Жасмин,чтобы изучить ожидаемые случаи и края случаев.</target>
        </trans-unit>
        <trans-unit id="88cda930404408fa5b6b5bb5ea64822d75f409c3" translate="yes" xml:space="preserve">
          <source>Anything under &lt;code&gt;assets&lt;/code&gt;.</source>
          <target state="translated">Что-нибудь под &lt;code&gt;assets&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93cd385e58bd290f15ae342c6fdf3fea9806d612" translate="yes" xml:space="preserve">
          <source>AoT metadata errors</source>
          <target state="translated">Ошибки метаданных AoT</target>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="0d6c7d4967052bf08ff030cdd321d82fc75c2851" translate="yes" xml:space="preserve">
          <source>Apart from &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;, you can use the rest of the &lt;code&gt;&lt;a href=&quot;../static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; helpers as usual to build a hybrid application. Note that the Angular pieces (e.g. downgraded services) will not be available until the downgraded module has been bootstrapped, i.e. by instantiating a downgraded component.</source>
          <target state="translated">Помимо &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; , вы можете использовать остальных помощников &lt;code&gt;&lt;a href=&quot;../static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; как обычно, для создания гибридного приложения. Обратите внимание, что угловые части (например, пониженные сервисы) не будут доступны до тех пор, пока пониженный модуль не будет загружен, то есть путем создания экземпляра пониженного уровня.</target>
        </trans-unit>
        <trans-unit id="57807d7e38eb807484ab254a0fac6301d23c9944" translate="yes" xml:space="preserve">
          <source>App &lt;code&gt;root module&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;root module&lt;/code&gt; приложения</target>
        </trans-unit>
        <trans-unit id="5aa3cc756775d4afef149117b0695738c8d5e450" translate="yes" xml:space="preserve">
          <source>App Shell</source>
          <target state="translated">Shell App</target>
        </trans-unit>
        <trans-unit id="7b4fd1b17b918b41d314d1e08cfa7e5547f2b386" translate="yes" xml:space="preserve">
          <source>App shell</source>
          <target state="translated">App оболочка</target>
        </trans-unit>
        <trans-unit id="f44820b851018adfc0c40223a29fecd82923e3f3" translate="yes" xml:space="preserve">
          <source>App shell is a way to render a portion of your application via a route at build time. It can improve the user experience by quickly launching a static rendered page (a skeleton common to all pages) while the browser downloads the full client version and switches to it automatically after the code loads.</source>
          <target state="translated">Оболочка приложения-это способ отрисовки части вашего приложения по маршруту во время сборки.Она может улучшить пользовательский опыт,быстро запуская статическую отрисованную страницу (скелет,общий для всех страниц),в то время как браузер загружает полную клиентскую версию и автоматически переключается на нее после загрузки кода.</target>
        </trans-unit>
        <trans-unit id="95c4786d84aa1c9b22007dc04178f6b25983cd88" translate="yes" xml:space="preserve">
          <source>App shell is a way to render a portion of your application via a route at build time. This gives users a meaningful first paint of your application that appears quickly because the browser can render static HTML and CSS without the need to initialize JavaScript.</source>
          <target state="translated">Оболочка приложения-это способ отрисовки части вашего приложения по маршруту во время сборки.Это дает пользователям возможность осмысленного первого рисования вашего приложения,которое появляется быстро,потому что браузер может рендерить статический HTML и CSS без необходимости инициализации JavaScript.</target>
        </trans-unit>
        <trans-unit id="63d67384492343e219bf6928f05ecac25471ffd5" translate="yes" xml:space="preserve">
          <source>App tabs</source>
          <target state="translated">Вкладки App</target>
        </trans-unit>
        <trans-unit id="540143c662eb90de02a65e482599c49fa15df426" translate="yes" xml:space="preserve">
          <source>App versions</source>
          <target state="translated">Версии App</target>
        </trans-unit>
        <trans-unit id="75913f9fcc32232a451e534954939bf6b759d88c" translate="yes" xml:space="preserve">
          <source>AppModule</source>
          <target state="translated">AppModule</target>
        </trans-unit>
        <trans-unit id="3bc3e2080ed9e689cda76f06895f83510ab7fc40" translate="yes" xml:space="preserve">
          <source>Append &lt;code&gt;/heroes&lt;/code&gt; to the URL in the browser address bar. You should see the familiar heroes master/detail view.</source>
          <target state="translated">Добавить &lt;code&gt;/heroes&lt;/code&gt; к URL в адресной строке браузера. Вы должны увидеть знакомых героев мастер / подробный вид.</target>
        </trans-unit>
        <trans-unit id="73973cfd168d40bb8277e2f6044ecdb605409c4e" translate="yes" xml:space="preserve">
          <source>Appendices</source>
          <target state="translated">Appendices</target>
        </trans-unit>
        <trans-unit id="f3f60044b06335eb6c4230e3c39f5e0218445878" translate="yes" xml:space="preserve">
          <source>Appendix</source>
          <target state="translated">Appendix</target>
        </trans-unit>
        <trans-unit id="261d623be7e2a959a5a15cb6df845be318cf00fe" translate="yes" xml:space="preserve">
          <source>Appendix: &lt;code&gt;LocationStrategy&lt;/code&gt; and browser URL styles</source>
          <target state="translated">Приложение: &lt;code&gt;LocationStrategy&lt;/code&gt; и стили браузера URL</target>
        </trans-unit>
        <trans-unit id="01e09299c9c5043bbe3cce453e5e966ce28cdece" translate="yes" xml:space="preserve">
          <source>Appendix: Develop locally with IE</source>
          <target state="translated">Приложение:Развитие на местном уровне с IE</target>
        </trans-unit>
        <trans-unit id="2399a201033dbd00d9af405e9941b75deec4a79f" translate="yes" xml:space="preserve">
          <source>Appendix: No &lt;code&gt;FilterPipe&lt;/code&gt; or &lt;code&gt;OrderByPipe&lt;/code&gt;</source>
          <target state="translated">Приложение: нет &lt;code&gt;FilterPipe&lt;/code&gt; или &lt;code&gt;OrderByPipe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29b3b122df7e77e777ce5cfcd64d2161ed3b1c44" translate="yes" xml:space="preserve">
          <source>Appendix: Test using &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()/&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">Приложение: тестирование с использованием &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()/&lt;a href=&quot;../api/core/testing/async&quot;&gt;async&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b005c7c5c5f6b1e73b6ef1e3f05d714b908ab33" translate="yes" xml:space="preserve">
          <source>Appendix: Test using &lt;code&gt;&lt;a href=&quot;../api/core/testing/fakeasync&quot;&gt;fakeAsync&lt;/a&gt;()/&lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;waitForAsync&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42746499949a4a6af72f7d65e860d0f5ca0c6702" translate="yes" xml:space="preserve">
          <source>Appendix: Upgrading PhoneCat Tests</source>
          <target state="translated">Приложение:Модернизация тестов PhoneCat</target>
        </trans-unit>
        <trans-unit id="bf96aa3c3ab705a8143ebfc310d65c579728b4f9" translate="yes" xml:space="preserve">
          <source>Appendix: Why add &lt;code&gt;@Input&lt;/code&gt;?</source>
          <target state="translated">Приложение: зачем добавлять &lt;code&gt;@Input&lt;/code&gt; ?</target>
        </trans-unit>
        <trans-unit id="15354e68bf45ee9bc58f7687ae8aefa5f4126715" translate="yes" xml:space="preserve">
          <source>Appendix: link parameters array</source>
          <target state="translated">Приложение:массив ссылочных параметров</target>
        </trans-unit>
        <trans-unit id="0c3eb7cc790639955b7256cc7f14b387fadfdb01" translate="yes" xml:space="preserve">
          <source>Appends URL segments to the current URL tree to create a new URL tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10d6a6e5b58825f456a1c60aceb9233acfe1a06" translate="yes" xml:space="preserve">
          <source>Appends a child to a given parent node in the host element DOM.</source>
          <target state="translated">Применяет дочерний элемент к данному родительскому узлу в элементе DOM хоста.</target>
        </trans-unit>
        <trans-unit id="72435c978d47a75814bd8d62487eb4a1c5cb31ca" translate="yes" xml:space="preserve">
          <source>Appends a new value to existing values for a parameter.</source>
          <target state="translated">Добавляет новое значение к существующим значениям параметра.</target>
        </trans-unit>
        <trans-unit id="c07e8121475f29caa6a36b6ae4d27742e3366d83" translate="yes" xml:space="preserve">
          <source>Appends a new value to the existing set of values for a header and returns them in a clone of the original instance.</source>
          <target state="translated">Добавляет новое значение к существующему набору значений для заголовка и возвращает их в клоне исходного экземпляра.</target>
        </trans-unit>
        <trans-unit id="b1fb92ce49bfdc66b691a4febcac0bbe43b53838" translate="yes" xml:space="preserve">
          <source>Application architecture</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea5b66a6bf60adea7d20d7175746bf7940fdf1c" translate="yes" xml:space="preserve">
          <source>Application components often need to share information. You can often use loosely coupled techniques for sharing information, such as data binding and service sharing, but sometimes it makes sense for one component to have a direct reference to another component. You need a direct reference, for instance, to access values or call methods on that component.</source>
          <target state="translated">Компоненты приложений часто нуждаются в обмене информацией.Часто для обмена информацией можно использовать слабо связанные методы,такие как привязка данных и совместное использование служб,но иногда имеет смысл,чтобы один компонент имел прямую ссылку на другой компонент.Нужна прямая ссылка,например,для доступа к значениям или вызова методов на этом компоненте.</target>
        </trans-unit>
        <trans-unit id="f12a2c662c36b27f3825a6d97ac01c1d7cd35295" translate="yes" xml:space="preserve">
          <source>Application configuration files</source>
          <target state="translated">Файлы конфигурации приложений</target>
        </trans-unit>
        <trans-unit id="cfc388605134e26efe5e73bd8340a05bc5c0fa1b" translate="yes" xml:space="preserve">
          <source>Application developers can use the &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; to &lt;code&gt;add&lt;/code&gt; a published library for use with an application in the same &lt;a href=&quot;glossary#workspace&quot;&gt;workspace&lt;/a&gt;.</source>
          <target state="translated">Разработчики приложений могут использовать &lt;a href=&quot;glossary#cli&quot;&gt;Angular CLI&lt;/a&gt; для &lt;code&gt;add&lt;/code&gt; опубликованной библиотеки для использования с приложением в той же &lt;a href=&quot;glossary#workspace&quot;&gt;рабочей области&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a33d5f89e5c84fccd922ef838522228abdaae944" translate="yes" xml:space="preserve">
          <source>Application integration specs can test the interactions of multiple parts spread across folders and modules. They don't really belong to any part in particular, so they don't have a natural home next to any one file.</source>
          <target state="translated">Спецификации интеграции приложений могут проверить взаимодействие нескольких частей,распределенных по папкам и модулям.На самом деле они не принадлежат ни одной из частей,поэтому у них нет естественного дома рядом с одним файлом.</target>
        </trans-unit>
        <trans-unit id="6703104cd9653acb1e2ab46ed23c7db66b5070c2" translate="yes" xml:space="preserve">
          <source>Application internationalization is a many-faceted area of development, focused on making applications available and user-friendly to a worldwide audience. This page describes Angular's internationalization (i18n) tools, which can help you make your app available in multiple languages.</source>
          <target state="translated">Интернационализация приложений-это многогранная область разработки,ориентированная на то,чтобы сделать приложения доступными и удобными для пользователей во всем мире.На этой странице описаны инструменты интернационализации Angular (i18n),которые помогут вам сделать ваше приложение доступным на нескольких языках.</target>
        </trans-unit>
        <trans-unit id="e39567047450a98becc249aa176cdaef7b8b173f" translate="yes" xml:space="preserve">
          <source>Application project files</source>
          <target state="translated">Файлы проекта приложения</target>
        </trans-unit>
        <trans-unit id="8e4ad605d8891f443ed5a723fd540aecfca8c921" translate="yes" xml:space="preserve">
          <source>Application source files</source>
          <target state="translated">Исходные файлы приложения</target>
        </trans-unit>
        <trans-unit id="c57c792b55f79d5a6454ef57144a28767e266988" translate="yes" xml:space="preserve">
          <source>Application structure and NgModules</source>
          <target state="translated">Структура применения и NgМодули</target>
        </trans-unit>
        <trans-unit id="0d128f2c09ef2323b0706b60301684346dd9280f" translate="yes" xml:space="preserve">
          <source>Application-specific &lt;a href=&quot;https://karma-runner.github.io/2.0/config/configuration-file.html&quot;&gt;Karma&lt;/a&gt; configuration.</source>
          <target state="translated">Конфигурация &lt;a href=&quot;https://karma-runner.github.io/2.0/config/configuration-file.html&quot;&gt;кармы&lt;/a&gt; для конкретного приложения .</target>
        </trans-unit>
        <trans-unit id="852183ace80b773b249836fdf431f837dea2630d" translate="yes" xml:space="preserve">
          <source>Application-specific &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; configuration.</source>
          <target state="translated">Конфигурация &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt; для конкретного приложения .</target>
        </trans-unit>
        <trans-unit id="91f8372b527502933df6ad01e48251bd30a40415" translate="yes" xml:space="preserve">
          <source>Application-specific &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration, including TypeScript and Angular template compiler options. See &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript Configuration&lt;/a&gt; and &lt;a href=&quot;angular-compiler-options&quot;&gt;Angular Compiler Options&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4066e5ad49d67457e01b647961a4e8b547f7af40" translate="yes" xml:space="preserve">
          <source>Application-specific &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration, including TypeScript and Angular template compiler options. See &lt;a href=&quot;typescript-configuration&quot;&gt;TypeScript Configuration&lt;/a&gt;.</source>
          <target state="translated">Конфигурация &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; для конкретного приложения , включая параметры компилятора шаблонов TypeScript и Angular. См. &lt;a href=&quot;typescript-configuration&quot;&gt;Конфигурация TypeScript&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99dc2d0240c5a1385595b3dd59d6c536156041c4" translate="yes" xml:space="preserve">
          <source>ApplicationInitStatus</source>
          <target state="translated">ApplicationInitStatus</target>
        </trans-unit>
        <trans-unit id="b39dbb54c7c825fcef1a44e2124b1bb2b58086c8" translate="yes" xml:space="preserve">
          <source>ApplicationModule</source>
          <target state="translated">ApplicationModule</target>
        </trans-unit>
        <trans-unit id="399fe43d84dcab4d8f86ce2f9647859550a7904b" translate="yes" xml:space="preserve">
          <source>ApplicationRef</source>
          <target state="translated">ApplicationRef</target>
        </trans-unit>
        <trans-unit id="2ab362ac17e1086087cf71af4e5f979258df1d92" translate="yes" xml:space="preserve">
          <source>Applications often request JSON data from a server. In the &lt;code&gt;ConfigService&lt;/code&gt; example, the app needs a configuration file on the server, &lt;code&gt;config.json&lt;/code&gt;, that specifies resource URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a196327a18feb01ef9db58391bd17fb22de7eda2" translate="yes" xml:space="preserve">
          <source>Applications often request JSON data from the server. For example, the app might need a configuration file on the server, &lt;code&gt;config.json&lt;/code&gt;, that specifies resource URLs.</source>
          <target state="translated">Приложения часто запрашивают данные JSON с сервера. Например, приложению может потребоваться файл конфигурации на сервере &lt;code&gt;config.json&lt;/code&gt; , в котором указаны URL-адреса ресурсов.</target>
        </trans-unit>
        <trans-unit id="f0629fc80e38645caefd8ff8a582d44f1f864f7a" translate="yes" xml:space="preserve">
          <source>Applications often restrict access to a feature area based on who the user is. You could permit access only to authenticated users or to users with a specific role. You might block or limit access until the user's account is activated.</source>
          <target state="translated">Приложения часто ограничивают доступ к функциональной области в зависимости от того,кто пользователь.Вы можете разрешить доступ только аутентифицированным пользователям или пользователям с определенной ролью.Вы можете блокировать или ограничивать доступ до тех пор,пока учетная запись пользователя не будет активирована.</target>
        </trans-unit>
        <trans-unit id="38ff861aa4a446344adef0afc1e488d02130c3f4" translate="yes" xml:space="preserve">
          <source>Applications should use the &lt;code&gt;&lt;a href=&quot;../router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; services to interact with application route state.</source>
          <target state="translated">Приложения должны использовать &lt;code&gt;&lt;a href=&quot;../router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; или службы определения &lt;code&gt;&lt;a href=&quot;location&quot;&gt;Location&lt;/a&gt;&lt;/code&gt; для взаимодействия с состоянием маршрута приложения.</target>
        </trans-unit>
        <trans-unit id="db68ba2d12235e40251d82b803326c61a95f231a" translate="yes" xml:space="preserve">
          <source>Applies an array of commands to the current URL tree and creates a new URL tree.</source>
          <target state="translated">Применяет массив команд к текущему URL-дереву и создает новое URL-дерево.</target>
        </trans-unit>
        <trans-unit id="73e49fcb5b988ce38774338e29d9e9c9583cfff5" translate="yes" xml:space="preserve">
          <source>Applies the changes when needed.</source>
          <target state="translated">Применяет изменения,когда это необходимо.</target>
        </trans-unit>
        <trans-unit id="fc45517f9cdde05557806db0dfe4a757bd3c77fc" translate="yes" xml:space="preserve">
          <source>Apply specific build options for just one locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8b40621714f724e48fb235040b7320d47f4c4a" translate="yes" xml:space="preserve">
          <source>Apply that logic to navigation within the crisis center for which the parent path is &lt;code&gt;/crisis-center&lt;/code&gt;.</source>
          <target state="translated">Примените эту логику к навигации внутри кризисного центра, для которого родительский путь &lt;code&gt;/crisis-center&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0d0e2a91303b222bcb13c0011660cfd943c66dc1" translate="yes" xml:space="preserve">
          <source>Apply the &lt;a href=&quot;https://wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;&lt;i&gt;single responsibility principle&lt;/i&gt; (SRP)&lt;/a&gt; to all components, services, and other symbols. This helps make the app cleaner, easier to read and maintain, and more testable.</source>
          <target state="translated">Применять &lt;a href=&quot;https://wikipedia.org/wiki/Single_responsibility_principle&quot;&gt;&lt;i&gt;принцип единой ответственности&lt;/i&gt; (SRP)&lt;/a&gt; ко всем компонентам, услугам и другим символам. Это помогает сделать приложение более чистым, легким для чтения и обслуживания и более тестируемым.</target>
        </trans-unit>
        <trans-unit id="70fadc1252a55edfa904aa436966e9eecc7d3821" translate="yes" xml:space="preserve">
          <source>Apply the attribute directive</source>
          <target state="translated">Применить директиву атрибута</target>
        </trans-unit>
        <trans-unit id="81d85d7da74461d1b53ba77a7b92cf43a5bb3128" translate="yes" xml:space="preserve">
          <source>Apply the decorator to the directive class.</source>
          <target state="translated">Применить декоратор к классу директив.</target>
        </trans-unit>
        <trans-unit id="45a85d2d0edb8623c0d82d2eb0a9a6cc99f9a2bb" translate="yes" xml:space="preserve">
          <source>Applying routable animations based on the page.</source>
          <target state="translated">Применение маршрутной анимации на основе страницы.</target>
        </trans-unit>
        <trans-unit id="c804b003ae54f7640d1e2bbcc163cd9e623fb3dc" translate="yes" xml:space="preserve">
          <source>Applying the &lt;code&gt;::ng-deep&lt;/code&gt; pseudo-class to any CSS rule completely disables view-encapsulation for that rule. Any style with &lt;code&gt;::ng-deep&lt;/code&gt; applied becomes a global style. In order to scope the specified style to the current component and all its descendants, be sure to include the &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; selector before &lt;code&gt;::ng-deep&lt;/code&gt;. If the &lt;code&gt;::ng-deep&lt;/code&gt; combinator is used without the &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; pseudo-class selector, the style can bleed into other components.</source>
          <target state="translated">Применение псевдокласса &lt;code&gt;::ng-deep&lt;/code&gt; к любому правилу CSS полностью отключает инкапсуляцию вида для этого правила. Любой стиль с применением &lt;code&gt;::ng-deep&lt;/code&gt; становится глобальным стилем. Чтобы охватить указанный стиль текущим компонентом и всеми его потомками, обязательно &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; селектор : host перед &lt;code&gt;::ng-deep&lt;/code&gt; . Если комбинатор &lt;code&gt;::ng-deep&lt;/code&gt; используется без селектора псевдокласса &lt;code&gt;:&lt;a href=&quot;../api/core/directive#host&quot;&gt;host&lt;/a&gt;&lt;/code&gt; , стиль может сливаться с другими компонентами.</target>
        </trans-unit>
        <trans-unit id="1ea007e76a7fe27744692b393421324935c1977d" translate="yes" xml:space="preserve">
          <source>Applying the &lt;code&gt;::ng-deep&lt;/code&gt; pseudo-class to any CSS rule completely disables view-encapsulation for that rule. Any style with &lt;code&gt;::ng-deep&lt;/code&gt; applied becomes a global style. In order to scope the specified style to the current component and all its descendants, be sure to include the &lt;code&gt;:host&lt;/code&gt; selector before &lt;code&gt;::ng-deep&lt;/code&gt;. If the &lt;code&gt;::ng-deep&lt;/code&gt; combinator is used without the &lt;code&gt;:host&lt;/code&gt; pseudo-class selector, the style can bleed into other components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="971660e3eff74f1e73a9bc8202a365f6b3daf22d" translate="yes" xml:space="preserve">
          <source>Apps can use the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; to make &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; requests across domains when a server doesn't support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS protocol&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5626fa7bcd970831b49f0ca8814b78f9ec4931b4" translate="yes" xml:space="preserve">
          <source>Apps can use the the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; to make &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; requests across domains when the server doesn't support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;CORS protocol&lt;/a&gt;.</source>
          <target state="translated">Приложения могут использовать &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; для выполнения запросов &lt;a href=&quot;https://en.wikipedia.org/wiki/JSONP&quot;&gt;JSONP&lt;/a&gt; между доменами, когда сервер не поддерживает &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;протокол CORS&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e1bbeca79619dc168ee72be62c4c17e14e649d8" translate="yes" xml:space="preserve">
          <source>Apps do not typically need to create their own animation players, but if you do need to, follow these steps:</source>
          <target state="translated">Как правило,приложениям не нужно создавать собственных игроков анимации,но если вам это нужно,выполните следующие шаги:</target>
        </trans-unit>
        <trans-unit id="8a2f874c6db468662ffb58a8875448a198ac499b" translate="yes" xml:space="preserve">
          <source>Apps often POST data to a server. They POST when submitting a form. In the following example, the &lt;code&gt;HeroesService&lt;/code&gt; posts when adding a hero to the database.</source>
          <target state="translated">Приложения часто отправляют данные на сервер. Они отправляют при отправке формы. В следующем примере &lt;code&gt;HeroesService&lt;/code&gt; сообщения о добавлении героя в базу данных.</target>
        </trans-unit>
        <trans-unit id="30b7a831fd8ffb7da2ad0a9cf451a0c40ac3345a" translate="yes" xml:space="preserve">
          <source>Apps often define configuration objects with lots of small facts, like the title of the application or the address of a web API endpoint. These configuration objects aren't always instances of a class. They can be object literals, as shown in the following example.</source>
          <target state="translated">Приложения часто определяют объекты конфигурации с большим количеством мелких фактов,таких как название приложения или адрес конечной точки веб-интерфейса API.Эти объекты конфигурации не всегда являются экземплярами класса.Они могут быть объектными литералами,как показано в следующем примере.</target>
        </trans-unit>
        <trans-unit id="31f6ac215467451080a5eed53c7386613db6c2d4" translate="yes" xml:space="preserve">
          <source>Apps often send data to a server with a POST request when submitting a form. In the following example, the &lt;code&gt;HeroesService&lt;/code&gt; makes an HTTP POST request when adding a hero to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382db7830add4fb204b6af3f246c22df74c9e4e7" translate="yes" xml:space="preserve">
          <source>Apps often use an interceptor to set default headers on outgoing requests.</source>
          <target state="translated">Приложения часто используют перехватчик для установки заголовков по умолчанию для исходящих запросов.</target>
        </trans-unit>
        <trans-unit id="6ac8c049d51dfba584e44ce33593cd0fd0498c0b" translate="yes" xml:space="preserve">
          <source>Apps pass a &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array to &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in order to configure the app-wide &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service with routes. &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; returns a &lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;. You add that result to the &lt;code&gt;imports&lt;/code&gt; list of the root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e361112818e4768cac11b5e923f0fa29d5292891" translate="yes" xml:space="preserve">
          <source>Apps pass a &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; object to &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; in order to configure the app-wide &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service with routes. &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; returns a &lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt;. You add that result to the &lt;code&gt;imports&lt;/code&gt; list of the root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">Приложения передают объект &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; для настройки службы &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; всего приложения с маршрутами. &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; возвращает &lt;a href=&quot;../api/core/modulewithproviders&quot;&gt;ModuleWithProviders&lt;/a&gt; . Вы добавляете этот результат в список &lt;code&gt;imports&lt;/code&gt; корневого &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc390285ebab82a2a8d69e9aa75a08e70733597e" translate="yes" xml:space="preserve">
          <source>Apr 18, 2019</source>
          <target state="translated">18 апреля 2019 года</target>
        </trans-unit>
        <trans-unit id="89df6f0f2f5be74f2452247a90bf7057dde93046" translate="yes" xml:space="preserve">
          <source>Apr 18, 2020</source>
          <target state="translated">18 апреля 2020 года</target>
        </trans-unit>
        <trans-unit id="1571960f64dc1bbd85c8afae57c18c2fe87dc77c" translate="yes" xml:space="preserve">
          <source>April 15, 1988</source>
          <target state="translated">15 апреля 1988 года</target>
        </trans-unit>
        <trans-unit id="16639cf778dca6a11a26844b092710e566557dbc" translate="yes" xml:space="preserve">
          <source>Architect</source>
          <target state="translated">Architect</target>
        </trans-unit>
        <trans-unit id="2e99cf09904565828c48434629a7dae4ca7ab60a" translate="yes" xml:space="preserve">
          <source>Architect expects builders to run once (by default) and return. This behavior is not entirely compatible with a builder that watches for changes (like Webpack, for example). Architect can support watch mode, but there are some things to look out for.</source>
          <target state="translated">Архитектор ожидает,что сборщики будут запущены один раз (по умолчанию)и вернутся.Такое поведение не совсем совместимо с конструктором,который следит за изменениями (например,Webpack).Архитектор может поддерживать режим наблюдения,но есть некоторые вещи,на которые следует обратить внимание.</target>
        </trans-unit>
        <trans-unit id="cb12b45f1feccd3ae9df35525912508afafb94e0" translate="yes" xml:space="preserve">
          <source>Architect is the tool that the CLI uses to perform complex tasks such as compilation, according to provided configurations. The CLI commands run Architect targets such as &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt;, and &lt;code&gt;lint&lt;/code&gt;. Each named target has a default configuration, specified by an &quot;options&quot; object, and an optional set of named alternate configurations in the &quot;configurations&quot; object.</source>
          <target state="translated">Архитектор - это инструмент, который CLI использует для выполнения сложных задач, таких как компиляция, в соответствии с предоставленными конфигурациями. Команды CLI запускают цели Architect, такие как &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;serve&lt;/code&gt; , &lt;code&gt;test&lt;/code&gt; и &lt;code&gt;lint&lt;/code&gt; . Каждая именованная цель имеет конфигурацию по умолчанию, указанную объектом &amp;laquo;options&amp;raquo;, и необязательный набор именованных альтернативных конфигураций в объекте &amp;laquo;configurations&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="87e9ee57ab4d3251e3425b9e1edd8474dc28d887" translate="yes" xml:space="preserve">
          <source>Architect is the tool that the CLI uses to perform complex tasks, such as compilation and test running. Architect is a shell that runs a specified &lt;a href=&quot;glossary#builder&quot;&gt;builder&lt;/a&gt; to perform a given task, according to a &lt;a href=&quot;glossary#target&quot;&gt;target&lt;/a&gt; configuration. You can define and configure new builders and targets to extend the CLI. See &lt;a href=&quot;cli-builder&quot;&gt;Angular CLI Builders&lt;/a&gt;.</source>
          <target state="translated">Архитектор - это инструмент, который CLI использует для выполнения сложных задач, таких как компиляция и запуск теста. Архитектор - это оболочка, которая запускает указанный &lt;a href=&quot;glossary#builder&quot;&gt;компоновщик&lt;/a&gt; для выполнения заданной задачи в соответствии с &lt;a href=&quot;glossary#target&quot;&gt;целевой&lt;/a&gt; конфигурацией. Вы можете определить и настроить новые компоновщики и цели для расширения CLI. Смотрите &lt;a href=&quot;cli-builder&quot;&gt;Angular CLI Builders&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68a0175db55fe6829a7c4fdd2c0b28db697a3b08" translate="yes" xml:space="preserve">
          <source>Architect resolves input options for a given target by taking the default options object, then overwriting values from the configuration used (if any), then further overwriting values from the overrides object passed to &lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt;. For the Angular CLI, the overrides object is built from command line arguments.</source>
          <target state="translated">Архитектор разрешает параметры ввода для данной цели, беря объект параметров по умолчанию, затем перезаписывая значения из использованной конфигурации (если есть), а затем перезаписывая значения из объекта переопределения, передаваемого в &lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt; . Для Angular CLI объект переопределения создается из аргументов командной строки.</target>
        </trans-unit>
        <trans-unit id="650e1a2c31f381d1ef315d6ecb1f9821f346be20" translate="yes" xml:space="preserve">
          <source>Architect runs builders asynchronously. To invoke a builder, you schedule a task to be run when all configuration resolution is complete.</source>
          <target state="translated">Архитектор запускает строителей асинхронно.Для вызова сборщика вы назначаете задачу,которая будет запущена после завершения всех настроек.</target>
        </trans-unit>
        <trans-unit id="b8187a8b2aa9dac023d1b4014ab0ac3ced813c4c" translate="yes" xml:space="preserve">
          <source>Architect validates the resulting options values against the schema of the builder. If inputs are valid, Architect creates the context and executes the builder.</source>
          <target state="translated">Архитектор проверяет результирующие значения опций на схеме строителя.Если входные данные действительны,архитектор создает контекст и запускает сборщик.</target>
        </trans-unit>
        <trans-unit id="a8051a2dd19694f0d3cd62e35d681d609ea33a34" translate="yes" xml:space="preserve">
          <source>Architectural reasons may lead you to restrict access to a service to the application domain where it belongs. For example, the guide sample includes a &lt;code&gt;VillainsListComponent&lt;/code&gt; that displays a list of villains. It gets those villains from a &lt;code&gt;VillainsService&lt;/code&gt;.</source>
          <target state="translated">Архитектурные причины могут привести к тому, что вы ограничите доступ к сервису доменом приложения, к которому он принадлежит. Например, пример руководства включает в себя &lt;code&gt;VillainsListComponent&lt;/code&gt; , который отображает список злодеев. Он получает этих злодеев из &lt;code&gt;VillainsService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="77cbe978decf7e18ac53e8ff64911f09e83509bc" translate="yes" xml:space="preserve">
          <source>Architecture Overview</source>
          <target state="translated">Обзор архитектуры</target>
        </trans-unit>
        <trans-unit id="f01976881a77559b65df5022645150a74a52ede0" translate="yes" xml:space="preserve">
          <source>Architecture overview</source>
          <target state="translated">Обзор архитектуры</target>
        </trans-unit>
        <trans-unit id="2745debaa64a20eedb49d9f14a0b807c87aa2d2a" translate="yes" xml:space="preserve">
          <source>Area</source>
          <target state="translated">Area</target>
        </trans-unit>
        <trans-unit id="ce5e5792e97fe5c7861d6ae9b29cf5a25cc0e70a" translate="yes" xml:space="preserve">
          <source>Argument</source>
          <target state="translated">Argument</target>
        </trans-unit>
        <trans-unit id="6001476930bb93c3e465d55fc3340756fadc4aa9" translate="yes" xml:space="preserve">
          <source>Argument and option names can be given in either &lt;a href=&quot;guide/glossary#case-types&quot;&gt;camelCase or dash-case&lt;/a&gt;. &lt;code&gt;--myOptionName&lt;/code&gt; is equivalent to &lt;code&gt;--my-option-name&lt;/code&gt;.</source>
          <target state="translated">Имена аргументов и опций могут быть заданы либо в &lt;a href=&quot;guide/glossary#case-types&quot;&gt;camelCase, либо в dash-case&lt;/a&gt; . &lt;code&gt;--myOptionName&lt;/code&gt; эквивалентно &lt;code&gt;--my-option-name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="c2f3a054448adb7997b5c36e72f9be845a0b4d34" translate="yes" xml:space="preserve">
          <source>Arguments (dependencies) to the &lt;code&gt;factory&lt;/code&gt; function.</source>
          <target state="translated">Аргументы (зависимости) к &lt;code&gt;factory&lt;/code&gt; функции.</target>
        </trans-unit>
        <trans-unit id="6b9d43f8a1c9ac290af8a299e9d3af0066551611" translate="yes" xml:space="preserve">
          <source>Arrange to use product data from an external file.</source>
          <target state="translated">Упорядочить использование данных о продукте из внешнего файла.</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="a2c4769fd815d0f8646a06e09c4545f8498d2d6d" translate="yes" xml:space="preserve">
          <source>Array index</source>
          <target state="translated">Массивный индекс</target>
        </trans-unit>
        <trans-unit id="6f34d9dcb007316860a77e1a43c21a988e0aec6d" translate="yes" xml:space="preserve">
          <source>Array of latest values for the controls</source>
          <target state="translated">Массив последних значений для элементов управления</target>
        </trans-unit>
        <trans-unit id="73e2cda4b11ea7d0351e69232f425f934d2b347b" translate="yes" xml:space="preserve">
          <source>Array of values for the controls</source>
          <target state="translated">Массив значений для элементов управления</target>
        </trans-unit>
        <trans-unit id="b4549d1caf74aaf959dfe06fbea3422a27392589" translate="yes" xml:space="preserve">
          <source>As &lt;a href=&quot;toh-pt2&quot;&gt;before&lt;/a&gt;, whenever a user clicks on a hero name, the hero detail appears below the hero list. Now the &lt;code&gt;HeroDetailComponent&lt;/code&gt; is presenting those details instead of the &lt;code&gt;HeroesComponent&lt;/code&gt;.</source>
          <target state="translated">Как и &lt;a href=&quot;toh-pt2&quot;&gt;раньше&lt;/a&gt; , всякий раз, когда пользователь нажимает на имя героя, подробности героя появляются под списком героев. Теперь &lt;code&gt;HeroDetailComponent&lt;/code&gt; представляет эти детали вместо &lt;code&gt;HeroesComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="135905d4765136f425c8108ca9e5fc0ab1204814" translate="yes" xml:space="preserve">
          <source>As Angular traverses the &lt;a href=&quot;glossary#view-hierarchy&quot;&gt;view hierarchy&lt;/a&gt; during change detection, it needs to be sure that a change in a child does not attempt to cause a change in its own parent. Such a change would not be rendered properly, because of how &lt;a href=&quot;glossary#unidirectional-data-flow&quot;&gt;unidirectional data flow&lt;/a&gt; works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c842fa8a1c751fb5dc02dea9b6a6f064a4ffc78" translate="yes" xml:space="preserve">
          <source>As a best practice, use only properties and methods that return values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3d80f7d4b233899494dbf2775945a44d2a0b43" translate="yes" xml:space="preserve">
          <source>As a general rule, a fix is considered for an LTS version if it resolves one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8320fed1ae9fa1073ff9c98aaa4a06e5e4044fa3" translate="yes" xml:space="preserve">
          <source>As a general rule, import modules with providers &lt;em&gt;exactly once&lt;/em&gt;, preferably in the application's &lt;em&gt;root module&lt;/em&gt;. That's also usually the best place to configure, wrap, and override them.</source>
          <target state="translated">Как правило, импортируйте модули с поставщиками &lt;em&gt;ровно один раз&lt;/em&gt; , предпочтительно в &lt;em&gt;корневой модуль приложения&lt;/em&gt; . Обычно это также лучшее место для их настройки, переноса и переопределения.</target>
        </trans-unit>
        <trans-unit id="deffe223d373efbae49c2b4d79dc103d2e7fb62c" translate="yes" xml:space="preserve">
          <source>As a host page for the &quot;Crisis Center&quot; feature, generate a &lt;code&gt;CrisisCenterHome&lt;/code&gt; component in the &lt;code&gt;crisis-center&lt;/code&gt; folder.</source>
          <target state="translated">В качестве главной страницы для функции &amp;laquo;Кризисный центр&amp;raquo; &lt;code&gt;CrisisCenterHome&lt;/code&gt; компонент CrisisCenterHome в папке &lt;code&gt;crisis-center&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6741a935b466ce3ba8568d14e44c986be6ba23e2" translate="yes" xml:space="preserve">
          <source>As a library author, you can take several measures to provide an optimal experience for your users. First, enabling &lt;code&gt;strictNullChecks&lt;/code&gt; and including &lt;code&gt;null&lt;/code&gt; in an input's type, as appropriate, communicates to your consumers whether they can provide a nullable value or not. Additionally, it is possible to provide type hints that are specific to the template type checker. See &lt;a href=&quot;structural-directives#directive-type-checks&quot;&gt;Improving template type checking for custom directives&lt;/a&gt;, and &lt;a href=&quot;template-typecheck#input-setter-coercion&quot;&gt;Input setter coercion&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0367e00c5bf2f26492dcf63c921938c118e9f471" translate="yes" xml:space="preserve">
          <source>As a library developer, you can create your own collections of custom schematics to integrate your library with the Angular CLI.</source>
          <target state="translated">Как разработчик библиотеки,вы можете создавать свои собственные коллекции пользовательских схем для интеграции вашей библиотеки с Угловым CLI.</target>
        </trans-unit>
        <trans-unit id="dae413a6ba6d2275c4b29345c399c39ff53553d6" translate="yes" xml:space="preserve">
          <source>As a plain number, in milliseconds: &lt;code&gt;100&lt;/code&gt;</source>
          <target state="translated">Как простое число, в миллисекундах: &lt;code&gt;100&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d6c917d0ac550880e60ac6263e147c30d2fadd4" translate="yes" xml:space="preserve">
          <source>As a publisher, you create an &lt;code&gt;Observable&lt;/code&gt; instance that defines a &lt;em&gt;subscriber&lt;/em&gt; function. This is the function that is executed when a consumer calls the &lt;code&gt;subscribe()&lt;/code&gt; method. The subscriber function defines how to obtain or generate values or messages to be published.</source>
          <target state="translated">Как издатель вы создаете экземпляр &lt;code&gt;Observable&lt;/code&gt; , который определяет функцию &lt;em&gt;подписчика&lt;/em&gt; . Это функция, которая выполняется, когда потребитель вызывает метод &lt;code&gt;subscribe()&lt;/code&gt; . Функция подписчика определяет, как получать или генерировать значения или сообщения для публикации.</target>
        </trans-unit>
        <trans-unit id="c55a0bd388216011207cfeb979c311669ad519c8" translate="yes" xml:space="preserve">
          <source>As a result, Angular isn't able to access the value and returns an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe3037ee9472bbe2a08e74181eb628e70a574ad" translate="yes" xml:space="preserve">
          <source>As a result, any text marked with &lt;code&gt;site header&lt;/code&gt; as the &lt;em&gt;meaning&lt;/em&gt; is translated exactly the same way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99b1d12288f5a74a23db49ac392deada3c9214a" translate="yes" xml:space="preserve">
          <source>As a result, templates that previously compiled under View Engine can fail type checking under Ivy. This can happen because Ivy's stricter checking catches genuine errors, or because application code is not typed correctly, or because the application uses libraries in which typings are inaccurate or not specific enough.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90863afd93efc1b713bee9807c95ef1c370a7606" translate="yes" xml:space="preserve">
          <source>As a service &lt;em&gt;tester&lt;/em&gt;, you must at least think about the first level of service dependencies but you &lt;em&gt;can&lt;/em&gt; let Angular DI do the service creation and deal with constructor argument order when you use the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; testing utility to provide and create services.</source>
          <target state="translated">Как &lt;em&gt;тестер&lt;/em&gt; сервисов , вы должны хотя бы подумать о первом уровне зависимостей сервисов, но вы &lt;em&gt;можете&lt;/em&gt; позволить Angular DI создавать сервисы и работать с порядком аргументов конструктора, когда вы используете &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; тестирования TestBed для предоставления и создания сервисов.</target>
        </trans-unit>
        <trans-unit id="616385f40de73bc1604f409e096ab6453c995cb2" translate="yes" xml:space="preserve">
          <source>As a side-effect, &lt;code&gt;SelectivePreloadingStrategyService&lt;/code&gt; logs the &lt;code&gt;path&lt;/code&gt; of a selected route in its public &lt;code&gt;preloadedModules&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7ecaa28f2dff4ab449f30fd1ccc45445c8a41d" translate="yes" xml:space="preserve">
          <source>As a two-way binding: &lt;code&gt;&amp;lt;my-component [(myValue)]=&quot;anExpression&quot;&amp;gt;&lt;/code&gt;. Since most AngularJS two-way bindings actually only need a one-way binding in practice, &lt;code&gt;&amp;lt;my-component [myValue]=&quot;anExpression&quot;&amp;gt;&lt;/code&gt; is often enough.</source>
          <target state="translated">Как двусторонняя привязка: &lt;code&gt;&amp;lt;my-component [(myValue)]=&quot;anExpression&quot;&amp;gt;&lt;/code&gt; . Поскольку на практике для большинства двусторонних привязок AngularJS требуется только односторонняя привязка, &lt;code&gt;&amp;lt;my-component [myValue]=&quot;anExpression&quot;&amp;gt;&lt;/code&gt; часто достаточно.</target>
        </trans-unit>
        <trans-unit id="6a5046b79e09cacb258f1a59b23f0229cab23310" translate="yes" xml:space="preserve">
          <source>As a workaround for this problem, Angular supports checking a wider, more permissive type for &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; than is declared for the input field itself. Enable this by adding a static property with the &lt;code&gt;ngAcceptInputType_&lt;/code&gt; prefix to the component class:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70711c31150ebda36f5058c7ef67fc2dc552d337" translate="yes" xml:space="preserve">
          <source>As above, the target is the button's click event.</source>
          <target state="translated">Как и выше,целью является событие нажатия кнопки.</target>
        </trans-unit>
        <trans-unit id="a2fa8220cfc617a4e487c2e9bd8726e63796dd6d" translate="yes" xml:space="preserve">
          <source>As an example, let&amp;rsquo;s create a builder that executes a shell command. To create a builder, use the &lt;code&gt;createBuilder()&lt;/code&gt; CLI Builder function, and return a &lt;code&gt;BuilderOutput&lt;/code&gt; object.</source>
          <target state="translated">В качестве примера давайте создадим конструктор, который выполняет команду оболочки. Чтобы создать построитель, используйте &lt;code&gt;createBuilder()&lt;/code&gt; CLI Builder createBuilder () и &lt;code&gt;BuilderOutput&lt;/code&gt; объект BuilderOutput .</target>
        </trans-unit>
        <trans-unit id="6d7ae9f459bc0881d55f11ec081e180bb57aec8d" translate="yes" xml:space="preserve">
          <source>As an example, let's create a builder that executes a shell command. To create a builder, use the &lt;code&gt;createBuilder()&lt;/code&gt; CLI Builder function, and return a &lt;code&gt;Promise&amp;lt;BuilderOutput&amp;gt;&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1693faa6c4defc1d4a4ffd82c7efdcbe67d91f3" translate="yes" xml:space="preserve">
          <source>As applications grow in functionality, they also grow in size. The CLI allows you to set size thresholds in your configuration to ensure that parts of your application stay within size boundaries that you define.</source>
          <target state="translated">По мере роста функциональности приложений они также увеличиваются в размерах.CLI позволяет вам устанавливать пороговые значения размера в вашей конфигурации,чтобы гарантировать,что части вашего приложения останутся в пределах заданного вами размера.</target>
        </trans-unit>
        <trans-unit id="426d689742e365afbaea750636ace81f4c7d3a54" translate="yes" xml:space="preserve">
          <source>As described above, in reactive forms each form element in the view is directly linked to a form model (&lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance). Updates from the view to the model and from the model to the view are synchronous and aren't dependent on the UI rendered. The diagrams below use the same favorite color example to demonstrate how data flows when an input field's value is changed from the view and then from the model.</source>
          <target state="translated">Как описано выше, в реактивных формах каждый элемент формы в представлении напрямую связан с моделью формы ( экземпляр &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; ). Обновления из представления в модель и из модели в представление являются синхронными и не зависят от отображаемого пользовательского интерфейса. На приведенных ниже диаграммах используется тот же пример избранного цвета, чтобы продемонстрировать, как данные передаются при изменении значения поля ввода из представления, а затем из модели.</target>
        </trans-unit>
        <trans-unit id="880f9c880127736c203edc896434eeab319390fd" translate="yes" xml:space="preserve">
          <source>As discussed earlier, component CSS styles are encapsulated into the component's view and don't affect the rest of the application.</source>
          <target state="translated">Как обсуждалось ранее,стили CSS компонентов инкапсулированы в вид компонента и не влияют на остальную часть приложения.</target>
        </trans-unit>
        <trans-unit id="5b0f7dd7e0658c043afd1da5639cb6335884c9a5" translate="yes" xml:space="preserve">
          <source>As explained in &lt;a href=&quot;testing#compile-components&quot;&gt;&lt;em&gt;Calling compileComponents()&lt;/em&gt;&lt;/a&gt; above, these tests could be run in a non-CLI environment where Angular would have to compile them in the browser.</source>
          <target state="translated">Как объяснено в &lt;a href=&quot;testing#compile-components&quot;&gt;&lt;em&gt;Вызове compileComponents ()&lt;/em&gt;&lt;/a&gt; выше, эти тесты могут выполняться в среде без CLI, где Angular должен будет скомпилировать их в браузере.</target>
        </trans-unit>
        <trans-unit id="20a3fc12c0b57f9f4fde41ae63301b30c12c4ab4" translate="yes" xml:space="preserve">
          <source>As explained in &lt;a href=&quot;testing-components-scenarios#compile-components&quot;&gt;&lt;em&gt;Calling compileComponents()&lt;/em&gt;&lt;/a&gt; above, these tests could be run in a non-CLI environment where Angular would have to compile them in the browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d75fcadb38a027a00ab11f48886637114c88fe" translate="yes" xml:space="preserve">
          <source>As for any external dependency, you must mock the HTTP backend so your tests can simulate interaction with a remote server. The &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;/testing&lt;/code&gt; library makes it straightforward to set up such mocking.</source>
          <target state="translated">Как и для любой внешней зависимости, вы должны смоделировать бэкэнд HTTP, чтобы ваши тесты могли имитировать взаимодействие с удаленным сервером. Библиотека &lt;code&gt;@angular/common/&lt;a href=&quot;../api/common/http&quot;&gt;http&lt;/a&gt;/testing&lt;/code&gt; упрощает настройку подобного макета.</target>
        </trans-unit>
        <trans-unit id="58c8b5c36d35cc82268e080bce5657fe17ae5ed0" translate="yes" xml:space="preserve">
          <source>As for any of the HTTP methods that return an observable, the caller, &lt;code&gt;HeroesComponent.update()&lt;/code&gt;&lt;a href=&quot;http#always-subscribe&quot;&gt;must &lt;code&gt;subscribe()&lt;/code&gt;&lt;/a&gt; to the observable returned from the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient#put&quot;&gt;HttpClient.put()&lt;/a&gt;&lt;/code&gt; in order to initiate the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0535610d785a6f15d9d14a76e023b8b818afd751" translate="yes" xml:space="preserve">
          <source>As mentioned before, one of the key differences between &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; has to do with change detection and how it is propagated between the two frameworks.</source>
          <target state="translated">Как упоминалось ранее, одно из ключевых различий между &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; связано с обнаружением изменений и тем, как они распространяются между двумя платформами.</target>
        </trans-unit>
        <trans-unit id="53b618af56c304e8ae9ebf8b1422dcc8b530788c" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; needs to know how to instantiate the Angular module. It needs a recipe. You define that recipe by providing a factory function that can create an instance of the Angular module. &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; accepts two types of factory functions:</source>
          <target state="translated">Как упоминалось ранее, &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; должен знать, как создать экземпляр модуля Angular. Нужен рецепт. Вы определяете этот рецепт, предоставляя заводскую функцию, которая может создавать экземпляр модуля Angular. &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; принимает два типа заводских функций:</target>
        </trans-unit>
        <trans-unit id="6075532c0eead9c5665dc3a24b06aa65dfa58aa5" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;dependency-injection-providers#interface-not-valid-token&quot;&gt;DI Providers&lt;/a&gt;, an interface is not a valid DI token because it is a TypeScript artifact that doesn't exist at run time. Use this abstract class interface to get the strong typing of an interface, and also use it as a provider token in the way you would a normal class.</source>
          <target state="translated">Как упоминалось в &lt;a href=&quot;dependency-injection-providers#interface-not-valid-token&quot;&gt;поставщиках DI&lt;/a&gt; , интерфейс не является допустимым токеном DI, поскольку это артефакт TypeScript, который не существует во время выполнения. Используйте этот интерфейс абстрактного класса, чтобы получить строгую типизацию интерфейса, а также используйте его в качестве токена поставщика, как в обычном классе.</target>
        </trans-unit>
        <trans-unit id="33d0f422fdd64842f16a4d3168edce86723cf79d" translate="yes" xml:space="preserve">
          <source>As minimal as this is, you decide to add a test to confirm that component actually displays the right content where you think it should.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd46491ceb36e17c510a8c461798cf44a0906cd6" translate="yes" xml:space="preserve">
          <source>As of Angular v8, the CLI primarily consumes the &lt;code&gt;fesm2015&lt;/code&gt; variant of the code distributed via &lt;code&gt;@angular/*&lt;/code&gt; npm packages. This renders the &lt;code&gt;esm5&lt;/code&gt; and &lt;code&gt;fesm5&lt;/code&gt; distributions obsolete and unnecessary, adding bloat to the package size and slowing down npm installations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b355748c485647b9309423108913382295cddbcc" translate="yes" xml:space="preserve">
          <source>As of Angular version 8, all &lt;code&gt;platform-webworker&lt;/code&gt; APIs are deprecated. This includes both packages: &lt;code&gt;@angular/platform-webworker&lt;/code&gt; and &lt;code&gt;@angular/platform-webworker-dynamic&lt;/code&gt;.</source>
          <target state="translated">Начиная с версии Angular 8 все API &lt;code&gt;platform-webworker&lt;/code&gt; интерфейсы платформы и веб-разработчика устарели. Это включает в себя оба пакета: &lt;code&gt;@angular/platform-webworker&lt;/code&gt; и &lt;code&gt;@angular/platform-webworker-dynamic&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7a5efb4af0cce4e2df85ce6e18e4d43895419baa" translate="yes" xml:space="preserve">
          <source>As of Angular version 8, lazy loading code can be accomplished simply by using the dynamic import syntax &lt;code&gt;import('...')&lt;/code&gt;. In your application, you create a new service that uses dynamic imports to lazy load AngularJS.</source>
          <target state="translated">Начиная с версии 8 Angular, отложенная загрузка кода может быть выполнена просто с помощью динамического импорта синтаксиса &lt;code&gt;import('...')&lt;/code&gt; . В вашем приложении вы создаете новый сервис, который использует динамический импорт для отложенной загрузки AngularJS.</target>
        </trans-unit>
        <trans-unit id="f2b967a3b46ad610174c160fc5ddca36a5857336" translate="yes" xml:space="preserve">
          <source>As of Angular version 9, you can provide a new instance of a service with each lazy loaded module. The following code adds this functionality to &lt;code&gt;UserService&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ee2759213bc4f0ebf30b6a7a48dab5168a4a75" translate="yes" xml:space="preserve">
          <source>As of Typescript 2.0, you can enforce &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html&quot;&gt;strict null checking&lt;/a&gt; with the &lt;code&gt;--strictNullChecks&lt;/code&gt; flag. TypeScript then ensures that no variable is unintentionally &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5d8ac3e628f548a6202a37c401e9210549cc5a" translate="yes" xml:space="preserve">
          <source>As of Typescript 2.0, you can enforce &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html&quot;&gt;strict null checking&lt;/a&gt; with the &lt;code&gt;--strictNullChecks&lt;/code&gt; flag. TypeScript then ensures that no variable is unintentionally null or undefined.</source>
          <target state="translated">Начиная с Typescript 2.0, вы можете применять &lt;a href=&quot;http://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-0.html&quot;&gt;строгую проверку нуля&lt;/a&gt; с &lt;code&gt;--strictNullChecks&lt;/code&gt; флага --strictNullChecks . Затем TypeScript гарантирует, что никакая переменная не будет непреднамеренно нулевой или неопределенной.</target>
        </trans-unit>
        <trans-unit id="d061698b8c3e7c9261daa566883ca6fd0824feb8" translate="yes" xml:space="preserve">
          <source>As part of the v11 release, we introduced an opt-in preview of webpack 5 in the Angular CLI. To ensure stability, we&amp;rsquo;ll continue iterating on the implementation to enable build speed and bundle size improvements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c04205c526a4908855b8b9cd7699a33503a185d" translate="yes" xml:space="preserve">
          <source>As service &lt;em&gt;consumer&lt;/em&gt;, you don't worry about any of this. You don't worry about the order of constructor arguments or how they're created.</source>
          <target state="translated">Как &lt;em&gt;потребитель&lt;/em&gt; услуг , вы не беспокоитесь об этом. Вы не беспокоитесь о порядке аргументов конструктора или о том, как они создаются.</target>
        </trans-unit>
        <trans-unit id="09675c24345fed803a2cf94990f46e1bde9b0591" translate="yes" xml:space="preserve">
          <source>As shown in the previous section, you can use the impure &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; to accept an observable as input and subscribe to the input automatically. You can also create an impure pipe to make and cache an HTTP request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d046d3787fe0555ffbe29692f926aa83f46f12d8" translate="yes" xml:space="preserve">
          <source>As soon as you import the &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;, this directive becomes active by default on all &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tags. You don't need to add a special selector.</source>
          <target state="translated">Как только вы импортируете &lt;code&gt;&lt;a href=&quot;formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; , эта директива становится активной по умолчанию для всех тегов &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; . Вам не нужно добавлять специальный селектор.</target>
        </trans-unit>
        <trans-unit id="1c2a6c1dd7997586cb51494b2cd0194944234721" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;NgFor&lt;/code&gt; directive loops through the list, it sets and resets properties of its own &lt;em&gt;context&lt;/em&gt; object. These properties can include, but aren't limited to, &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt;, and a special property named &lt;code&gt;$implicit&lt;/code&gt;.</source>
          <target state="translated">Когда директива &lt;code&gt;NgFor&lt;/code&gt; проходит по списку, она устанавливает и сбрасывает свойства своего собственного объекта &lt;em&gt;контекста&lt;/em&gt; . Эти свойства могут включать, но не ограничиваются, &lt;code&gt;index&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; и специальное свойство с именем &lt;code&gt;$implicit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7b7f4dc0aa08937d1e4f42bb1268cea1478924f" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;NgFor&lt;/code&gt; directive loops through the list, it sets and resets properties of its own &lt;em&gt;context&lt;/em&gt; object. These properties can include, but aren't limited to, &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;odd&lt;/code&gt;, and a special property named &lt;code&gt;$implicit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb72e80f48988fd1b9af9fabfe152ff02575aa3d" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;isStable&lt;/code&gt; Observable runs outside the zone, the &lt;code&gt;value&lt;/code&gt; field will be updated properly, but the template will not be refreshed!</source>
          <target state="translated">Поскольку &lt;code&gt;isStable&lt;/code&gt; Observable работает за пределами зоны, поле &lt;code&gt;value&lt;/code&gt; будет обновлено должным образом, но шаблон не будет обновлен!</target>
        </trans-unit>
        <trans-unit id="b2ba4060e4e4afd4ec60303640effc6e19da00de" translate="yes" xml:space="preserve">
          <source>As the app grows, this rule becomes even more important. &lt;a href=&quot;styleguide#toc&quot;&gt;Back to top&lt;/a&gt;</source>
          <target state="translated">По мере роста приложения это правило становится еще более важным. &lt;a href=&quot;styleguide#toc&quot;&gt;Вернуться к началу&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9fd7ba003f3292144c561737946a97b69bfe0de5" translate="yes" xml:space="preserve">
          <source>As the application logic updates component data, values that are bound to DOM properties in the view can change. The change detector is responsible for updating the view to reflect the current data model. Similarly, the user can interact with the UI, causing events that change the state of the data model. These events can trigger change detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b41c56b3b8492075b0d6fee4f3faaeb4fc7ed3" translate="yes" xml:space="preserve">
          <source>As the diagram shows, use inputs and outputs together in the same manner as using them separately. Here, the child selector is &lt;code&gt;&amp;lt;app-input-output&amp;gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;deleteRequest&lt;/code&gt; being &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; properties in the child component class. The property &lt;code&gt;currentItem&lt;/code&gt; and the method &lt;code&gt;crossOffItem()&lt;/code&gt; are both in the parent component class.</source>
          <target state="translated">Как показано на схеме, используйте входы и выходы вместе так же, как и их использование отдельно. Здесь селектор ребенка &lt;code&gt;&amp;lt;app-input-output&amp;gt;&lt;/code&gt; с &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;deleteRequest&lt;/code&gt; существами &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; свойства в классе компонентов ребенка. Свойство &lt;code&gt;currentItem&lt;/code&gt; и метод &lt;code&gt;crossOffItem()&lt;/code&gt; находятся в классе родительского компонента.</target>
        </trans-unit>
        <trans-unit id="576de19f7cd986ea910a0781414027d767fdf59f" translate="yes" xml:space="preserve">
          <source>As the message says, the &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; element does not have a &lt;code&gt;colspan&lt;/code&gt; property. This is true because &lt;code&gt;colspan&lt;/code&gt; is an attribute&amp;mdash;&lt;code&gt;colSpan&lt;/code&gt;, with a capital &lt;code&gt;S&lt;/code&gt;, is the corresponding property. Interpolation and property binding can set only &lt;em&gt;properties&lt;/em&gt;, not attributes.</source>
          <target state="translated">Как говорится в сообщении, элемент &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; не имеет свойства &lt;code&gt;colspan&lt;/code&gt; . Это верно, потому что &lt;code&gt;colspan&lt;/code&gt; является атрибутом, а &lt;code&gt;colSpan&lt;/code&gt; с заглавной буквой &lt;code&gt;S&lt;/code&gt; является соответствующим свойством. Интерполяция и привязка свойств могут устанавливать только &lt;em&gt;свойства&lt;/em&gt; , а не атрибуты.</target>
        </trans-unit>
        <trans-unit id="44bacbc3e7fdb0b748fcb62abf55c43e15ce9165" translate="yes" xml:space="preserve">
          <source>As the user types in the search box, an input event binding calls the component's &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; method with the new search box value.</source>
          <target state="translated">Когда пользователь вводит в поле поиска, привязка входного события вызывает метод &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; компонента с новым значением поля поиска.</target>
        </trans-unit>
        <trans-unit id="ec9c4d6216d77cc7b2875d1877e97fc0a3a9215c" translate="yes" xml:space="preserve">
          <source>As the user types in the search box, an input event binding calls the component's &lt;code&gt;search()&lt;/code&gt; method with the new search box value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9055245f3b1e80adc8f94fdba52f5ad34bb44d2d" translate="yes" xml:space="preserve">
          <source>As the validation begins, the &lt;code&gt;UniqueAlterEgoValidator&lt;/code&gt; delegates to the &lt;code&gt;HeroesService&lt;/code&gt;&lt;code&gt;isAlterEgoTaken()&lt;/code&gt; method with the current control value. At this point the control is marked as &lt;code&gt;pending&lt;/code&gt; and remains in this state until the observable chain returned from the &lt;code&gt;validate()&lt;/code&gt; method completes.</source>
          <target state="translated">Когда проверка начинается, &lt;code&gt;UniqueAlterEgoValidator&lt;/code&gt; делегирует &lt;code&gt;HeroesService&lt;/code&gt; &lt;code&gt;isAlterEgoTaken()&lt;/code&gt; текущее значение элемента управления. В этот момент элемент управления помечается как &lt;code&gt;pending&lt;/code&gt; и остается в этом состоянии до тех пор, пока не завершится наблюдаемая цепочка, возвращенная методом &lt;code&gt;validate()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9155140d162aff11a01a9aaf192b5c36f36d8504" translate="yes" xml:space="preserve">
          <source>As these kinds of parameters don't fit easily in a URL path, you can use optional parameters for conveying arbitrarily complex information during navigation. Optional parameters aren't involved in pattern matching and afford flexibility of expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012a24a970804ecbbe43bf6ba131c69195b1c31f" translate="yes" xml:space="preserve">
          <source>As these validators are all sync validators, you pass them in as the second argument.</source>
          <target state="translated">Поскольку все эти валидаторы синхронизированы,вы передаете их в качестве второго аргумента.</target>
        </trans-unit>
        <trans-unit id="0f45027f55358700d46117f934776e60e6b2ad7a" translate="yes" xml:space="preserve">
          <source>As users enter form data, you'll capture their changes and update an instance of a model. You can't lay out the form until you know what the model looks like.</source>
          <target state="translated">По мере того,как пользователи вводят данные формы,вы фиксируете их изменения и обновляете экземпляр модели.Вы не можете выложить форму,пока не узнаете,как выглядит модель.</target>
        </trans-unit>
        <trans-unit id="1b00d72f3724db2eb2f17c415c8acad26e63056a" translate="yes" xml:space="preserve">
          <source>As usual, you write a constructor that asks Angular to inject services that the component requires and reference them as private variables.</source>
          <target state="translated">Как обычно,вы пишете конструктор,который запрашивает Угловые для инъекций услуги,которые требуются компоненту,и называет их частными переменными.</target>
        </trans-unit>
        <trans-unit id="2a5fa238e4e05c9102523cdc407b74b4b0c63df8" translate="yes" xml:space="preserve">
          <source>As with components, you can add as many directive property bindings as you need by stringing them along in the template. The developer should be able to write the following template HTML to both bind to the &lt;code&gt;AppComponent.color&lt;/code&gt; and fall back to &quot;violet&quot; as the default color.</source>
          <target state="translated">Как и в случае с компонентами, вы можете добавить столько привязок свойств директив, сколько вам нужно, выстроив их в шаблоне. Разработчик должен иметь возможность написать следующий шаблон HTML для привязки к &lt;code&gt;AppComponent.color&lt;/code&gt; и возврата к &amp;laquo;фиолетовому&amp;raquo; в качестве цвета по умолчанию.</target>
        </trans-unit>
        <trans-unit id="30b5e960013eb063b20be7ecc6ff05c14a6c57f8" translate="yes" xml:space="preserve">
          <source>As with expressions, avoid writing complex template statements. A method call or simple property assignment should be the norm.</source>
          <target state="translated">Как и в случае с выражениями,избегайте написания сложных шаблонных выражений.Вызов метода или простое присвоение свойств должно быть нормой.</target>
        </trans-unit>
        <trans-unit id="07c4c64d5513511be2cb127c82fcb01ee8b7e55a" translate="yes" xml:space="preserve">
          <source>As with expressions, statements can refer only to what's in the statement context such as an event handling method of the component instance.</source>
          <target state="translated">Как и в случае с выражениями,операторы могут ссылаться только на то,что находится в контексте оператора,например,на метод обработки событий экземпляра компонента.</target>
        </trans-unit>
        <trans-unit id="bb901be354860557451c002789bc0c1663e2f0b6" translate="yes" xml:space="preserve">
          <source>As with other directives, you apply a structural directive to a &lt;em&gt;host element&lt;/em&gt;. The directive then does whatever it's supposed to do with that host element and its descendants.</source>
          <target state="translated">Как и в случае с другими директивами, вы применяете структурную директиву к &lt;em&gt;элементу хоста&lt;/em&gt; . Затем директива делает все, что должна, с этим элементом хоста и его потомками.</target>
        </trans-unit>
        <trans-unit id="1d5b6417cba4ef881daf50c6a534671a6568bcbd" translate="yes" xml:space="preserve">
          <source>As with other structural directives, the &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; can be desugared into the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; element form.</source>
          <target state="translated">Как и в случае с другими структурными директивами, &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; могут быть перенесены в форму элемента &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf9ee189724da5d4f748ccae4de0e3edcce56bb7" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;HeroesModule&lt;/code&gt;, you must add the &lt;code&gt;CrisisCenterModule&lt;/code&gt; to the &lt;code&gt;imports&lt;/code&gt; array of the &lt;code&gt;AppModule&lt;/code&gt;&lt;em&gt;before&lt;/em&gt; the &lt;code&gt;AppRoutingModule&lt;/code&gt;:</source>
          <target state="translated">Как с &lt;code&gt;HeroesModule&lt;/code&gt; , вы должны добавить &lt;code&gt;CrisisCenterModule&lt;/code&gt; в &lt;code&gt;imports&lt;/code&gt; массив &lt;code&gt;AppModule&lt;/code&gt; &lt;em&gt;до&lt;/em&gt; в &lt;code&gt;AppRoutingModule&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="6d5ad368cf59cb55a48ed7f1273bd908182ba7f4" translate="yes" xml:space="preserve">
          <source>As with the previous &lt;code&gt;expectOne()&lt;/code&gt;, the test fails if 0 or 2+ requests satisfy this predicate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ce201841a7ab6826908ab4e2e8a1bf231d9b18c" translate="yes" xml:space="preserve">
          <source>As with the previous &lt;code&gt;expectOne()&lt;/code&gt;, the test will fail if 0 or 2+ requests satisfy this predicate.</source>
          <target state="translated">Как и в случае с предыдущей &lt;code&gt;expectOne()&lt;/code&gt; , проверка не будет выполнена, если этому предикату соответствуют 0 или 2+ запроса.</target>
        </trans-unit>
        <trans-unit id="78b22aea998f810381c17b06fb2333a37588a173" translate="yes" xml:space="preserve">
          <source>As you add and delete characters, you can see them appear and disappear from the data model. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0a709258428a25296d9a2a6bba7576693ff220" translate="yes" xml:space="preserve">
          <source>As you can see here, the &lt;code&gt;parentItem&lt;/code&gt; in &lt;code&gt;AppComponent&lt;/code&gt; is a string, which the &lt;code&gt;ItemDetailComponent&lt;/code&gt; expects:</source>
          <target state="translated">Как вы можете видеть здесь, &lt;code&gt;parentItem&lt;/code&gt; в &lt;code&gt;AppComponent&lt;/code&gt; является строкой, которую ожидает &lt;code&gt;ItemDetailComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="b8ce8f85bb4b5482efa912931cf27e2ce382563a" translate="yes" xml:space="preserve">
          <source>As you can see, the &lt;code&gt;UniqueAlterEgoValidator&lt;/code&gt; class implements the &lt;code&gt;&lt;a href=&quot;../api/forms/asyncvalidator&quot;&gt;AsyncValidator&lt;/a&gt;&lt;/code&gt; interface. In the constructor, we inject the &lt;code&gt;HeroesService&lt;/code&gt; that has the following interface:</source>
          <target state="translated">Как видите, класс &lt;code&gt;UniqueAlterEgoValidator&lt;/code&gt; реализует интерфейс &lt;code&gt;&lt;a href=&quot;../api/forms/asyncvalidator&quot;&gt;AsyncValidator&lt;/a&gt;&lt;/code&gt; . В конструкторе мы &lt;code&gt;HeroesService&lt;/code&gt; который имеет следующий интерфейс:</target>
        </trans-unit>
        <trans-unit id="f958b9634ee0ca82f703565029116255553f7d8f" translate="yes" xml:space="preserve">
          <source>As you can see, the response object has a &lt;code&gt;body&lt;/code&gt; property of the correct type.</source>
          <target state="translated">Как видите, объект ответа имеет свойство &lt;code&gt;body&lt;/code&gt; правильного типа.</target>
        </trans-unit>
        <trans-unit id="30b1da4a374a4b82201be5944135fd88e7c2eeb0" translate="yes" xml:space="preserve">
          <source>As you click the button, the displayed date alternates between &quot;&lt;strong&gt;&lt;samp&gt;04/15/1988&lt;/samp&gt;&lt;/strong&gt;&quot; and &quot;&lt;strong&gt;&lt;samp&gt;Friday, April 15, 1988&lt;/samp&gt;&lt;/strong&gt;&quot;.</source>
          <target state="translated">Когда вы нажимаете кнопку, отображаемая дата чередуется между &quot;&lt;strong&gt;&lt;samp&gt;04/15/1988&lt;/samp&gt;&lt;/strong&gt;&quot; и &quot;&lt;strong&gt;&lt;samp&gt;Пятница, 15 апреля 1988 г.&lt;/samp&gt;&lt;/strong&gt;&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="ab33e4cc94b129cb31d7c97d8407c2606a472c70" translate="yes" xml:space="preserve">
          <source>As you create new interceptors, add them to the &lt;code&gt;httpInterceptorProviders&lt;/code&gt; array and you won't have to revisit the &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;httpInterceptorProviders&lt;/code&gt; новые перехватчики, добавьте их в массив httpInterceptorProviders, и вам не придется повторно &lt;code&gt;AppModule&lt;/code&gt; в AppModule .</target>
        </trans-unit>
        <trans-unit id="b35cd950e3abf3c41b9d1fee6bfbba54cf41fa95" translate="yes" xml:space="preserve">
          <source>As you may recall, &lt;code&gt;AdDirective&lt;/code&gt; injects &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; into its constructor. This is how the directive accesses the element that you want to use to host the dynamic component.</source>
          <target state="translated">Как вы помните, &lt;code&gt;AdDirective&lt;/code&gt; внедряет &lt;code&gt;&lt;a href=&quot;../api/core/viewcontainerref&quot;&gt;ViewContainerRef&lt;/a&gt;&lt;/code&gt; в свой конструктор. Вот как директива обращается к элементу, который вы хотите использовать для размещения динамического компонента.</target>
        </trans-unit>
        <trans-unit id="66db9819ffe3ed53a6e4700b9705018402a68de2" translate="yes" xml:space="preserve">
          <source>As you might have guessed, you don't need to change anything in the way you bootstrap your existing AngularJS app. Unlike &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt;&amp;mdash;which requires some extra steps&amp;mdash; &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; is able to take care of bootstrapping the Angular module, as long as you provide the recipe.</source>
          <target state="translated">Как вы уже догадались, вам не нужно ничего менять при загрузке существующего приложения AngularJS. В отличие от &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; , который требует дополнительных действий, &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; может позаботиться о начальной загрузке модуля Angular, если вы предоставите рецепт.</target>
        </trans-unit>
        <trans-unit id="b0d2196193897c3d628ff542df1f728e1990a4fd" translate="yes" xml:space="preserve">
          <source>As you near the end of the development process, serving the contents of your output folder from a local web server can give you a better idea of how your application will behave when it is deployed to a remote server. You will need two terminals to get the live-reload experience.</source>
          <target state="translated">По мере того,как вы приближаетесь к концу процесса разработки,обслуживание содержимого вашей выходной папки с локального веб-сервера может дать вам лучшее представление о том,как ваше приложение будет себя вести,когда оно будет развернуто на удаленном сервере.Вам понадобятся два терминала,чтобы получить опыт работы в реальном времени.</target>
        </trans-unit>
        <trans-unit id="4e0151055d71dd61f258f216803c7ce77b59e409" translate="yes" xml:space="preserve">
          <source>As you work with this form, you will learn how to include validation logic, how to customize the presentation with standard CSS, and how to handle error conditions to ensure valid input. If the user deletes the hero name, for example, the form becomes invalid. The app detects the changed status, and displays a validation error in an attention-grabbing style. In addition, the &lt;strong&gt;Submit&lt;/strong&gt; button is disabled, and the &quot;required&quot; bar to the left of the input control changes from green to red.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf5b93ed1e9a45e9ec8c8bf0566005ffc514ad0" translate="yes" xml:space="preserve">
          <source>As you'll be navigating to the &lt;em&gt;Admin Dashboard&lt;/em&gt; route after logging in, you'll update it to handle the query parameters and fragment.</source>
          <target state="translated">Когда вы &lt;em&gt;войдете в&lt;/em&gt; маршрут &lt;em&gt;панели администратора&lt;/em&gt; после входа в систему, вы обновите его для обработки параметров и фрагмента запроса.</target>
        </trans-unit>
        <trans-unit id="f0b43016a337094572c49d0ebcd7d6f06663336c" translate="yes" xml:space="preserve">
          <source>As you've learned, a component in an outlet persists until you navigate away to a new component. Secondary outlets are no different in this regard.</source>
          <target state="translated">Как вы узнали,компонент в розетке сохраняется до тех пор,пока вы не перейдете к новому компоненту.Вторичные розетки ничем не отличаются в этом отношении.</target>
        </trans-unit>
        <trans-unit id="e1b726055d199d23cbbaf0bbb7c90f5393684b71" translate="yes" xml:space="preserve">
          <source>As you've seen, multiple components can leverage the same service. Later in this tutorial, the shipping component will use the cart service to retrieve shipping data via HTTP from the &lt;code&gt;shipping.json&lt;/code&gt; file. Here you'll define the &lt;code&gt;get()&lt;/code&gt; method that will be used.</source>
          <target state="translated">Как вы уже видели, несколько компонентов могут использовать один и тот же сервис. Далее в этом руководстве компонент доставки будет использовать службу корзины для получения данных доставки по HTTP из файла &lt;code&gt;shipping.json&lt;/code&gt; . Здесь вы определите метод &lt;code&gt;get()&lt;/code&gt; который будет использоваться.</target>
        </trans-unit>
        <trans-unit id="c81caf6ffe3d326f41b1efc1332f0197102bbbe8" translate="yes" xml:space="preserve">
          <source>As you've worked through the milestones, the application has naturally gotten larger. As you continue to build out feature areas, the overall application size will continue to grow. At some point you'll reach a tipping point where the application takes a long time to load.</source>
          <target state="translated">По мере того,как вы проработали все этапы,приложение,естественно,становилось больше.По мере того,как вы продолжаете создавать функциональные области,общий размер приложения будет продолжать расти.В какой-то момент вы достигнете критической точки,когда приложение занимает много времени для загрузки.</target>
        </trans-unit>
        <trans-unit id="2fe40b33592723c9ffed418ea5b179b50d789586" translate="yes" xml:space="preserve">
          <source>As you've worked through the milestones, the application has naturally gotten larger. At some point you'll reach a point where the application takes a long time to load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3171c48f50cadb18be953d56f6aadf2c1470f7e" translate="yes" xml:space="preserve">
          <source>As your app grows, you can organize code relevant for a specific feature. This helps apply clear boundaries for features. With feature modules, you can keep code related to a specific functionality or feature separate from other code. Delineating areas of your app helps with collaboration between developers and teams, separating directives, and managing the size of the root module.</source>
          <target state="translated">По мере роста вашего приложения,вы можете организовать код,относящийся к определенной функции.Это помогает применять четкие границы для функций.С помощью функциональных модулей вы можете хранить код,относящийся к определенной функции или функции,отдельно от другого кода.Разделение областей приложения помогает в сотрудничестве между разработчиками и командами,разделении директив и управлении размером корневого модуля.</target>
        </trans-unit>
        <trans-unit id="2eed7ce85e255e9ab9ff2d8f035497961189f71e" translate="yes" xml:space="preserve">
          <source>As your application grows more complex, you may want to create routes that are relative to a component other than your root component. These types of nested routes are called child routes. This means you're adding a second &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; to your app, because it is in addition to the &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; in &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3222db2ced161973e02584ac4049af0ec6632b" translate="yes" xml:space="preserve">
          <source>Asking the service worker to activate the latest version of the app for the current tab.</source>
          <target state="translated">Попросить работника службы активировать последнюю версию приложения для текущей вкладки.</target>
        </trans-unit>
        <trans-unit id="fbc52ac881315f0b01fcb3898c6bbefb4ca717ed" translate="yes" xml:space="preserve">
          <source>Asking the service worker to check the server for new updates.</source>
          <target state="translated">Попросить работника службы проверить сервер на наличие новых обновлений.</target>
        </trans-unit>
        <trans-unit id="5b45b5ea2e28d732a01d25a9ef132499d3d14bc3" translate="yes" xml:space="preserve">
          <source>Assert expectations on its public state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269d80f2e6ae0d9c46cde478b4e5500f9c28b64f" translate="yes" xml:space="preserve">
          <source>Assert that the component &lt;code&gt;favoriteColor&lt;/code&gt; property value matches the value from the input.</source>
          <target state="translated">Утвердите, что значение свойства компонента &lt;code&gt;favoriteColor&lt;/code&gt; совпадает со значением из входных данных.</target>
        </trans-unit>
        <trans-unit id="3add2d771e4f408357de38d3cf1e4671e71d6e99" translate="yes" xml:space="preserve">
          <source>Assert that the component's &lt;code&gt;favoriteColorControl&lt;/code&gt; value matches the value from the input.</source>
          <target state="translated">Подтвердите, что значение компонента &lt;code&gt;favoriteColorControl&lt;/code&gt; соответствует значению из входных данных.</target>
        </trans-unit>
        <trans-unit id="60d381f9c278556bf5f707455aa4e181db801691" translate="yes" xml:space="preserve">
          <source>Assert that the input value matches the value of the &lt;code&gt;favoriteColor&lt;/code&gt; property in the component instance.</source>
          <target state="translated">Утвердите, что входное значение совпадает со значением свойства &lt;code&gt;favoriteColor&lt;/code&gt; в экземпляре компонента.</target>
        </trans-unit>
        <trans-unit id="2cac1bd12dceb2fce01f7d2c39980b6f3eb123f1" translate="yes" xml:space="preserve">
          <source>Assert that the new value set on the control matches the value in the input.</source>
          <target state="translated">Убедитесь,что новое значение,установленное на регуляторе,совпадает со значением на входе.</target>
        </trans-unit>
        <trans-unit id="102dbd8a0d9de9bd9ed34eaa50b57bc20f17597a" translate="yes" xml:space="preserve">
          <source>Assert the correct type of the expression bound to the &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; input within the template.</source>
          <target state="translated">Утвердите правильный тип выражения, связанного с вводом &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; в шаблоне.</target>
        </trans-unit>
        <trans-unit id="34ae054cee78e0c6e83c3e3cd694a67e5d64d9d1" translate="yes" xml:space="preserve">
          <source>Asserts the correct type of the context for the template that &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; will render.</source>
          <target state="translated">Утверждает правильный тип контекста для шаблона, который будет отображать &lt;code&gt;&lt;a href=&quot;ngforof&quot;&gt;NgForOf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="471940a95e6ccb6eae6400e44be1438188978b50" translate="yes" xml:space="preserve">
          <source>Asserts the correct type of the context for the template that &lt;code&gt;&lt;a href=&quot;ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; will render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64db28c14c3f75eaf3fe6ba74774a54e6cbb89bd" translate="yes" xml:space="preserve">
          <source>Asset groups follow the Typescript interface shown here:</source>
          <target state="translated">Группы активов следуют интерфейсу Typescript,показанному здесь:</target>
        </trans-unit>
        <trans-unit id="d6c9dfdc694085b6f0d02ea7e1e4fd3d4df7e99c" translate="yes" xml:space="preserve">
          <source>Assets configuration</source>
          <target state="translated">Конфигурация активов</target>
        </trans-unit>
        <trans-unit id="e6a6bbc5e96926eeccb08d147396e13b4a2aa489" translate="yes" xml:space="preserve">
          <source>Assignments (&lt;code&gt;=&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;, &lt;code&gt;-=&lt;/code&gt;, &lt;code&gt;...&lt;/code&gt;)</source>
          <target state="translated">Назначения ( &lt;code&gt;=&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; , &lt;code&gt;-=&lt;/code&gt; , &lt;code&gt;...&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7a1a70a899ae4731ff189ca13512ffc94c946adb" translate="yes" xml:space="preserve">
          <source>Assigns this bus to the given zone. Any callbacks attached to channels where runInZone was set to true on initialization will be executed in the given zone.</source>
          <target state="translated">Назначает этот автобус данной зоне.Любые вызовы,прикрепленные к каналам,где при инициализации runInZone было установлено true,будут выполняться в данной зоне.</target>
        </trans-unit>
        <trans-unit id="d242cadc4aa1e98583aee808bc5bd94b0df50df6" translate="yes" xml:space="preserve">
          <source>Assigns this sink to the given zone. Any channels which are initialized with runInZone set to true will wait for the given zone to exit before sending messages.</source>
          <target state="translated">Назначает эту раковину данной зоне.Любые каналы,инициализированные с помощью команды runInZone,установленной в true,будут ждать выхода из данной зоны перед отправкой сообщений.</target>
        </trans-unit>
        <trans-unit id="8f94f199baf1d5d8266597ec2112eb1be1c1fb69" translate="yes" xml:space="preserve">
          <source>Assigns this source to the given zone. Any channels which are initialized with runInZone set to true will emit events that will be executed within the given zone.</source>
          <target state="translated">Назначает этот источник данной зоне.Любые каналы,инициализированные с помощью команды runInZone,установленной в true,будут испускать события,которые будут выполняться в данной зоне.</target>
        </trans-unit>
        <trans-unit id="49fcc4238bbf2b339cfcfa762b3396453c32af91" translate="yes" xml:space="preserve">
          <source>Associate the &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; model and view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274e2293c4a3f531e996553089413c2aeb58f8c2" translate="yes" xml:space="preserve">
          <source>Associates a named animation state with a set of CSS styles. See &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Связывает названное состояние анимации с набором стилей CSS. Смотрите &lt;code&gt;&lt;a href=&quot;../common/upgrade/%24locationshim#state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c606a19977855e292dd7286f4f48996ac6f7432" translate="yes" xml:space="preserve">
          <source>Associates a named animation state with a set of CSS styles. See &lt;code&gt;&lt;a href=&quot;state&quot;&gt;state&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae49ef1cd7752015463f129314f634187b62c7a" translate="yes" xml:space="preserve">
          <source>Associates an animation with an entry trigger that can be attached to an element. See &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">Связывает анимацию с триггером входа, который можно прикрепить к элементу. Смотрите &lt;code&gt;&lt;a href=&quot;trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4784eaa8aeb7a762e1180e053368ca4e65b375b2" translate="yes" xml:space="preserve">
          <source>Assume the user is logged into the application at &lt;code&gt;example-bank.com&lt;/code&gt;. The user opens an email and clicks a link to &lt;code&gt;evil.com&lt;/code&gt;, which opens in a new tab.</source>
          <target state="translated">Предположим, что пользователь вошел в приложение на &lt;code&gt;example-bank.com&lt;/code&gt; . Пользователь открывает электронное письмо и щелкает ссылку на &lt;code&gt;evil.com&lt;/code&gt; , которая открывается в новой вкладке.</target>
        </trans-unit>
        <trans-unit id="e46bf719d36c903e3f4ff538c57fdd22e7050c74" translate="yes" xml:space="preserve">
          <source>Assume you have a library project &lt;code&gt;my-lib&lt;/code&gt; in your Angular workspace. To tell the library how to build the schematics, add a &lt;code&gt;tsconfig.schematics.json&lt;/code&gt; file next to the generated &lt;code&gt;tsconfig.lib.json&lt;/code&gt; file that configures the library build.</source>
          <target state="translated">Предположим, у вас есть библиотека проекта &lt;code&gt;my-lib&lt;/code&gt; в вашем рабочем пространстве Angular. Чтобы сообщить библиотеке, как создавать схемы, добавьте файл &lt;code&gt;tsconfig.schematics.json&lt;/code&gt; рядом с сгенерированным файлом &lt;code&gt;tsconfig.lib.json&lt;/code&gt; , который конфигурирует сборку библиотеки.</target>
        </trans-unit>
        <trans-unit id="75818174243243561c9a25a5467849a1c2d2c022" translate="yes" xml:space="preserve">
          <source>Assuming &lt;code&gt;dateObj&lt;/code&gt; is (year: 2010, month: 9, day: 3, hour: 12 PM, minute: 05, second: 08) in the &lt;em&gt;local&lt;/em&gt; time and locale is 'en-US':</source>
          <target state="translated">Предполагается, что &lt;code&gt;dateObj&lt;/code&gt; ( местное время : год: 2010, месяц: 9, день: 3, час: 12 вечера, минута: 05, секунда: 08) по &lt;em&gt;местному&lt;/em&gt; времени, а локаль - &amp;laquo;en-US&amp;raquo;:</target>
        </trans-unit>
        <trans-unit id="5873ba4b7149a08e105140ef51ae2d0ffcc5d42b" translate="yes" xml:space="preserve">
          <source>Assuming that the CLI &lt;code&gt;ng serve&lt;/code&gt; command is still running, the browser should refresh and display both the application title and the hero name.</source>
          <target state="translated">Предполагая, что команда CLI &lt;code&gt;ng serve&lt;/code&gt; все еще выполняется, браузер должен обновить и отобразить как название приложения, так и имя героя.</target>
        </trans-unit>
        <trans-unit id="94f5418a94f3eedc92108d6697fb720a530c5a6c" translate="yes" xml:space="preserve">
          <source>Assuming you already have an app that you created with the &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt;, create a feature module using the CLI by entering the following command in the root project directory. Replace &lt;code&gt;CustomerDashboard&lt;/code&gt; with the name of your module. You can omit the &quot;Module&quot; suffix from the name because the CLI appends it:</source>
          <target state="translated">Предполагая, что у вас уже есть приложение, которое вы создали с помощью &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; , создайте функциональный модуль с помощью CLI, введя следующую команду в корневом каталоге проекта. Замените &lt;code&gt;CustomerDashboard&lt;/code&gt; на имя вашего модуля. Вы можете опустить суффикс &amp;laquo;Module&amp;raquo; в имени, потому что CLI добавляет его:</target>
        </trans-unit>
        <trans-unit id="8b593995c88f61a609044a01e37e8e4ccc22e065" translate="yes" xml:space="preserve">
          <source>Assumptions</source>
          <target state="translated">Assumptions</target>
        </trans-unit>
        <trans-unit id="850c312e6795e144c4801560d1a8a36931550927" translate="yes" xml:space="preserve">
          <source>Async Validation</source>
          <target state="translated">Асинхронная проверка</target>
        </trans-unit>
        <trans-unit id="3d8523026285ca381ac26c6046011d703dc76210" translate="yes" xml:space="preserve">
          <source>Async observable helpers</source>
          <target state="translated">Асинхронные наблюдаемые помощники</target>
        </trans-unit>
        <trans-unit id="a2115adcf8a7abd68847a06a2ca483273231f7b5" translate="yes" xml:space="preserve">
          <source>Async observables</source>
          <target state="translated">Async наблюдаемые</target>
        </trans-unit>
        <trans-unit id="66faa9aa7a8da44bac968eb4f9651b0395d1e769" translate="yes" xml:space="preserve">
          <source>Async pipe</source>
          <target state="translated">труба Async</target>
        </trans-unit>
        <trans-unit id="465bdb8533ebb255eef127b77064a4450ccdad5a" translate="yes" xml:space="preserve">
          <source>Async test with &lt;em&gt;async()&lt;/em&gt;</source>
          <target state="translated">Асинхронный тест с &lt;em&gt;асинхронным ()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d3dfebbe72d4e3d6b50b5f6205bf253eb9e510d1" translate="yes" xml:space="preserve">
          <source>Async test with &lt;em&gt;fakeAsync()&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Асинхронный&lt;/em&gt; тест с &lt;em&gt;fakeAsync ()&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="60055bf8c9508ed73c9e2d6fc18babce7a1caa3d" translate="yes" xml:space="preserve">
          <source>Async test with &lt;em&gt;waitForAsync()&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a2a031d9a78f06359a7d5ceed4a4220e47722c" translate="yes" xml:space="preserve">
          <source>Async validator function composed of all the async validators registered with this directive.</source>
          <target state="translated">Функция валидатора Async состоит из всех асинхронных валидаторов,зарегистрированных этой директивой.</target>
        </trans-unit>
        <trans-unit id="08889716a00afbaa4f75748cfc88dc19b867511d" translate="yes" xml:space="preserve">
          <source>AsyncPipe</source>
          <target state="translated">AsyncPipe</target>
        </trans-unit>
        <trans-unit id="d3db89bff8169aadf0002b749871c33ae8202bab" translate="yes" xml:space="preserve">
          <source>AsyncValidator</source>
          <target state="translated">AsyncValidator</target>
        </trans-unit>
        <trans-unit id="ffde100172e9b0262a458c11ee4575fc6b847d60" translate="yes" xml:space="preserve">
          <source>AsyncValidatorFn</source>
          <target state="translated">AsyncValidatorFn</target>
        </trans-unit>
        <trans-unit id="3d7fac7964f752248f02c5aa61c85fd417dcfbcf" translate="yes" xml:space="preserve">
          <source>Asynchronous</source>
          <target state="translated">Asynchronous</target>
        </trans-unit>
        <trans-unit id="37a310b45a04c0a244854134bbf202646220195b" translate="yes" xml:space="preserve">
          <source>Asynchronous validation happens after the synchronous validation, and is performed only if the synchronous validation is successful. This check allows forms to avoid potentially expensive async validation processes (such as an HTTP request) if the more basic validation methods have already found invalid input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998ed05f053e1853c01b49907d986bbc10b73e44" translate="yes" xml:space="preserve">
          <source>Asynchronous validator function composed of all the asynchronous validators registered with this directive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575694c2cb16e00e61ffa3cd7d69fb6ab26b8495" translate="yes" xml:space="preserve">
          <source>Asynchronous validators implement the &lt;code&gt;&lt;a href=&quot;../api/forms/asyncvalidatorfn&quot;&gt;AsyncValidatorFn&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/asyncvalidator&quot;&gt;AsyncValidator&lt;/a&gt;&lt;/code&gt; interfaces. These are very similar to their synchronous counterparts, with the following differences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3eeded95df5b44a415fcb5e4ef49bdffbb7e6a1" translate="yes" xml:space="preserve">
          <source>At a high level, NgModules are a way to organize Angular apps and they accomplish this through the metadata in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator. The metadata falls into three categories:</source>
          <target state="translated">На высоком уровне NgModules - это способ организации приложений Angular, и они &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; этого с помощью метаданных в декораторе @ NgModule . Метаданные делятся на три категории:</target>
        </trans-unit>
        <trans-unit id="242134a4310d9dba08222aef54e2257cacc08268" translate="yes" xml:space="preserve">
          <source>At its simplest, a service worker is a script that runs in the web browser and manages caching for an application.</source>
          <target state="translated">В самом простом варианте,работник службы-это скрипт,который запускается в веб-браузере и управляет кэшированием для приложения.</target>
        </trans-unit>
        <trans-unit id="8e510f3f50eecae75e2f194727aa6e0658b6fbe6" translate="yes" xml:space="preserve">
          <source>At its simplest, a service worker is a script that runs in the web browser and manages caching for an application. Service workers function as a network proxy. They intercept all outgoing HTTP requests made by the application and can choose how to respond to them.</source>
          <target state="translated">В самом простом варианте,работник службы-это скрипт,который запускается в веб-браузере и управляет кэшированием для приложения.Обслуживающий персонал функционирует как сетевой прокси-сервер.Они перехватывают все исходящие HTTP-запросы,сделанные приложением,и могут выбирать,как на них реагировать.</target>
        </trans-unit>
        <trans-unit id="02c3f16fdd9df9a64633ff91d643eaf302e53ae5" translate="yes" xml:space="preserve">
          <source>At runtime, the input will be set to the empty string, which is not a &lt;code&gt;boolean&lt;/code&gt; value. Angular component libraries that deal with this problem often &quot;coerce&quot; the value into the right type in the setter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fb1d2b6dd484c68fa3057e82590ac4a166dcd3" translate="yes" xml:space="preserve">
          <source>At some later point, the app requests the lazy bundle, &lt;code&gt;lazy-chunk.&amp;lt;lazy-hash-1&amp;gt;.js&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae1b7e929dfc6e1600a1a1671f28d169e95e10a" translate="yes" xml:space="preserve">
          <source>At the bottom of the template, add an HTML form to capture user information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a86dc5ece1ac9e833952415de9250d745d527c3" translate="yes" xml:space="preserve">
          <source>At the bottom of the template, add an empty HTML form to capture user information.</source>
          <target state="translated">В нижней части шаблона добавьте пустую HTML-форму для захвата пользовательской информации.</target>
        </trans-unit>
        <trans-unit id="0a72f978f7bf5ae9b84f741e034c4300f3de1323" translate="yes" xml:space="preserve">
          <source>At the end of &lt;a href=&quot;https://angular.io/start/start&quot;&gt;Your First App&lt;/a&gt;, the online store application has a basic product catalog. The app doesn't have any variable states or navigation. There is one URL, and that URL always displays the &quot;My Store&quot; page with a list of products and their descriptions.</source>
          <target state="translated">В конце &lt;a href=&quot;https://angular.io/start/start&quot;&gt;вашего первого приложения&lt;/a&gt; , приложение интернет-магазина имеет базовый каталог продуктов. Приложение не имеет переменных состояний или навигации. Существует один URL, и этот URL всегда отображает страницу &amp;laquo;Мой магазин&amp;raquo; со списком продуктов и их описаниями.</target>
        </trans-unit>
        <trans-unit id="51ce5900aad4e680b18674d74b2c9f48486d18e2" translate="yes" xml:space="preserve">
          <source>At the end of &lt;a href=&quot;https://angular.io/start/start&quot;&gt;part 1&lt;/a&gt;, the online store application has a basic product catalog. The app doesn't have any variable states or navigation. There is one URL, and that URL always displays the &quot;My Store&quot; page with a list of products and their descriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a019d3473bd7c74189945ba7fdf2d2de78293b" translate="yes" xml:space="preserve">
          <source>At the end of &lt;a href=&quot;https://angular.io/start/start/data&quot;&gt;Managing Data&lt;/a&gt;, the online store application has a product catalog and a shopping cart.</source>
          <target state="translated">В конце &lt;a href=&quot;https://angular.io/start/start/data&quot;&gt;раздела&lt;/a&gt; &amp;laquo; Управление данными &amp;raquo; приложение интернет-магазина имеет каталог товаров и корзину покупок.</target>
        </trans-unit>
        <trans-unit id="d55658fc25831b063983ee22a2f5946a2c03370f" translate="yes" xml:space="preserve">
          <source>At the end of &lt;a href=&quot;https://angular.io/start/start/routing&quot;&gt;Routing&lt;/a&gt;, the online store application has a product catalog with two views: a product list and product details. Users can click on a product name from the list to see details in a new view, with a distinct URL (route).</source>
          <target state="translated">В конце &lt;a href=&quot;https://angular.io/start/start/routing&quot;&gt;Routing&lt;/a&gt; приложение интернет-магазина имеет каталог товаров с двумя представлениями: список товаров и сведения о товаре. Пользователи могут щелкнуть название продукта в списке, чтобы просмотреть подробности в новом представлении с отдельным URL-адресом (маршрут).</target>
        </trans-unit>
        <trans-unit id="9fd575c0566b76e5d3207e1cb47b414cc567e6ea" translate="yes" xml:space="preserve">
          <source>At the end of &lt;a href=&quot;https://angular.io/start/start/start-data&quot;&gt;Managing Data&lt;/a&gt;, the online store application has a product catalog and a shopping cart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf3ff007dbc67f83d50f7b5e29d38404d81b3c3" translate="yes" xml:space="preserve">
          <source>At the end of &lt;a href=&quot;https://angular.io/start/start/start-routing&quot;&gt;In-app Navigation&lt;/a&gt;, the online store application has a product catalog with two views: a product list and product details. Users can click on a product name from the list to see details in a new view, with a distinct URL, or route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2383077a65ab0c0336fa3575224c0a072cec68" translate="yes" xml:space="preserve">
          <source>At the end of the hero detail template, add a save button with a &lt;code&gt;click&lt;/code&gt; event binding that invokes a new component method named &lt;code&gt;save()&lt;/code&gt;.</source>
          <target state="translated">В конце подробного шаблона героя добавьте кнопку сохранения с привязкой события &lt;code&gt;click&lt;/code&gt; которая вызывает новый метод компонента с именем &lt;code&gt;save()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4a77379b17f9d43f8aa4ce2a08643a4ee08cf070" translate="yes" xml:space="preserve">
          <source>At the end, tests can verify that the app has made no unexpected requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04e2e3448d97cf88b4c8cf92be8647a5d5df0f65" translate="yes" xml:space="preserve">
          <source>At the end, tests may verify that the app has made no unexpected requests.</source>
          <target state="translated">В конце тесты могут проверить,что приложение не делало неожиданных запросов.</target>
        </trans-unit>
        <trans-unit id="0cb6df513db3bf3228849da6550d8a1fbd416ea9" translate="yes" xml:space="preserve">
          <source>At the moment you're interested in seeing how guards work so the first version does nothing useful. It simply logs to console and &lt;code&gt;returns&lt;/code&gt; true immediately, allowing navigation to proceed:</source>
          <target state="translated">На данный момент вам интересно посмотреть, как работают охранники, поэтому первая версия ничего не дает Он просто входит в консоль и немедленно &lt;code&gt;returns&lt;/code&gt; true, позволяя продолжить навигацию:</target>
        </trans-unit>
        <trans-unit id="9ab7474646e972990366803a61deec9eef2838ea" translate="yes" xml:space="preserve">
          <source>At the moment, &lt;em&gt;any&lt;/em&gt; user can navigate &lt;em&gt;anywhere&lt;/em&gt; in the application &lt;em&gt;anytime&lt;/em&gt;. That's not always the right thing to do.</source>
          <target state="translated">На данный момент &lt;em&gt;любой&lt;/em&gt; пользователь может перемещаться в &lt;em&gt;любом месте&lt;/em&gt; приложения в &lt;em&gt;любое время&lt;/em&gt; . Это не всегда правильно.</target>
        </trans-unit>
        <trans-unit id="0298961e0cfbc7c30a7134ed224539d2fc943e7c" translate="yes" xml:space="preserve">
          <source>At the moment, any user can navigate anywhere in the application anytime, but sometimes you need to control access to different parts of your app for various reasons. Some of which may include the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a90472fb52fd14133af6b5ed45a846d07c7f8d7" translate="yes" xml:space="preserve">
          <source>At the moment, the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; retrieves the selected crisis. If the crisis is not found, it navigates back to the crisis list view.</source>
          <target state="translated">В данный момент &lt;code&gt;CrisisDetailComponent&lt;/code&gt; извлекает выбранный кризис. Если кризис не обнаружен, он возвращается к представлению списка кризисов.</target>
        </trans-unit>
        <trans-unit id="43e554d2ee4258d9a49f0d60c344262753f16233" translate="yes" xml:space="preserve">
          <source>At the moment, the &lt;code&gt;CrisisDetailComponent&lt;/code&gt; retrieves the selected crisis. If the crisis is not found, the router navigates back to the crisis list view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060de0fabf75a3678ad4f86fea6ae7d325cd7a4c" translate="yes" xml:space="preserve">
          <source>At the moment, the &lt;code&gt;HeroesComponent&lt;/code&gt; displays both the list of heroes and the selected hero's details.</source>
          <target state="translated">На данный момент, &lt;code&gt;HeroesComponent&lt;/code&gt; отображает как список героев, так и данные выбранного героя.</target>
        </trans-unit>
        <trans-unit id="82fe33a58877ad32663a5e6978a18d91edefa44b" translate="yes" xml:space="preserve">
          <source>At the moment, the binding is to an array of strings. In real applications, most bindings are to more specialized objects.</source>
          <target state="translated">На данный момент привязка производится к массиву строк.В реальных приложениях большинство привязок осуществляется к более специализированным объектам.</target>
        </trans-unit>
        <trans-unit id="bbc8860a6469db18738b3c14f8fcb5e7a919ea3c" translate="yes" xml:space="preserve">
          <source>At the moment, the default color&amp;mdash;the color that prevails until the user picks a highlight color&amp;mdash;is hard-coded as &quot;red&quot;. Let the template developer set the default color.</source>
          <target state="translated">На данный момент цвет по умолчанию - цвет, преобладающий до тех пор, пока пользователь не выберет цвет выделения, - жестко закодирован как &amp;laquo;красный&amp;raquo;. Позвольте разработчику шаблона установить цвет по умолчанию.</target>
        </trans-unit>
        <trans-unit id="3b5f7eb081d98212ad7a07dd8a9a528a0bc15a1a" translate="yes" xml:space="preserve">
          <source>At the root level of the &lt;code&gt;schematics/&lt;/code&gt; folder, create a &lt;code&gt;collection.json&lt;/code&gt; file.</source>
          <target state="translated">На корневом уровне &lt;code&gt;schematics/&lt;/code&gt; folder создайте файл &lt;code&gt;collection.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dde421309dba3de54f0b4271bbd276260c091cc" translate="yes" xml:space="preserve">
          <source>At the top are the import statements. The next section is where you configure the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; by stating what components and directives belong to it (&lt;code&gt;declarations&lt;/code&gt;) as well as which other modules it uses (&lt;code&gt;imports&lt;/code&gt;). For more information on the structure of an &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;, be sure to read &lt;a href=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/a&gt;.</source>
          <target state="translated">Вверху находятся операторы импорта. В следующем разделе вы конфигурируете &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; @ NgModule , указывая, какие компоненты и директивы принадлежат ему ( &lt;code&gt;declarations&lt;/code&gt; ), а также какие другие модули он использует ( &lt;code&gt;imports&lt;/code&gt; ). Для получения дополнительной информации о структуре &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , обязательно прочитайте &lt;a href=&quot;bootstrapping&quot;&gt;Bootstrapping&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="883786d3cc76dbd1ed79ce5408eeff3078f7cc41" translate="yes" xml:space="preserve">
          <source>At the top level of &lt;code&gt;angular.json&lt;/code&gt;, a few properties configure the workspace, and a &lt;code&gt;projects&lt;/code&gt; section contains the remaining per-project configuration options. CLI defaults set at the workspace level can be overridden by defaults set at the project level, and defaults set at the project level can be overridden on the command line.</source>
          <target state="translated">На верхнем уровне &lt;code&gt;angular.json&lt;/code&gt; несколько свойств настраивают рабочее пространство, а раздел &lt;code&gt;projects&lt;/code&gt; содержит оставшиеся параметры конфигурации для каждого проекта. Значения по умолчанию для CLI, установленные на уровне рабочей области, могут быть переопределены значениями по умолчанию, установленными на уровне проекта, а значения по умолчанию, установленные на уровне проекта, могут быть переопределены в командной строке.</target>
        </trans-unit>
        <trans-unit id="0434ec7f407a6a347e8b9b391b94f54a3a508b6b" translate="yes" xml:space="preserve">
          <source>At the top level, paths that begin with &lt;code&gt;/&lt;/code&gt; refer to the root of the application. But child routes &lt;em&gt;extend&lt;/em&gt; the path of the parent route. With each step down the route tree, you add a slash followed by the route path, unless the path is &lt;em&gt;empty&lt;/em&gt;.</source>
          <target state="translated">На верхнем уровне пути, начинающиеся с &lt;code&gt;/&lt;/code&gt; ссылаются на корень приложения. Но дочерние маршруты &lt;em&gt;расширяют&lt;/em&gt; путь родительского маршрута. С каждым шагом вниз по дереву маршрута вы добавляете косую черту, за которой следует путь маршрута, если только путь не &lt;em&gt;пуст&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="0ca36d7923bc24c8310134d3ad6ad7fd24b95c13" translate="yes" xml:space="preserve">
          <source>At the top level, paths that begin with &lt;code&gt;/&lt;/code&gt; refer to the root of the application. But child routes extend the path of the parent route. With each step down the route tree, you add a slash followed by the route path, unless the path is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f1f417baccaeeb34023ad1f4a392c36910fe7d" translate="yes" xml:space="preserve">
          <source>At the top of the file, add the following import statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3945a27c64e5bd8255624f2566551f7cf697583" translate="yes" xml:space="preserve">
          <source>At this point, Visual Studio is ready. It&amp;rsquo;s a good idea to close Visual Studio and restart it to make sure everything is clean.</source>
          <target state="translated">На данный момент Visual Studio готова. Рекомендуется закрыть Visual Studio и перезапустить его, чтобы убедиться, что все чисто.</target>
        </trans-unit>
        <trans-unit id="57bf3ff8bf6006519207c4fc0ce314056ecd80b1" translate="yes" xml:space="preserve">
          <source>At this point, all application routes are in place.</source>
          <target state="translated">На данный момент все прикладные маршруты на месте.</target>
        </trans-unit>
        <trans-unit id="d94328cb8894f9ca14552461df3b4d75737edab8" translate="yes" xml:space="preserve">
          <source>At this point, users can put items in the cart by clicking &quot;Buy&quot;, but they can't yet see their cart.</source>
          <target state="translated">В этот момент пользователи могут положить элементы в корзину,нажав кнопку &quot;Купить&quot;,но они еще не могут увидеть свою корзину.</target>
        </trans-unit>
        <trans-unit id="8bd123a0eac56e2896e3fe55bff44567829141a2" translate="yes" xml:space="preserve">
          <source>At this point, you can switch the two components to use the new service instead of the old one. While you &lt;code&gt;$inject&lt;/code&gt; it as the downgraded &lt;code&gt;phone&lt;/code&gt; factory, it's really an instance of the &lt;code&gt;Phone&lt;/code&gt; class and you annotate its type accordingly:</source>
          <target state="translated">На этом этапе вы можете переключить два компонента, чтобы использовать новый сервис вместо старого. Хотя вы &lt;code&gt;$inject&lt;/code&gt; как устаревшую фабрику &lt;code&gt;phone&lt;/code&gt; , это действительно экземпляр класса &lt;code&gt;Phone&lt;/code&gt; , и вы соответственно комментируете его тип:</target>
        </trans-unit>
        <trans-unit id="57733aea6c15b3f06327309b16c1e0c4da909346" translate="yes" xml:space="preserve">
          <source>At this point, you have a basic application that uses Angular's routing feature to change what components the user can see based on the URL address. You have extended these features to include a redirect, as well as a wildcard route to display a custom 404 page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec1691c150b8de77b5a17dca474a04f2c0bb6ff" translate="yes" xml:space="preserve">
          <source>At this point, you have defined two routes for your application. However, your application still has both the &lt;code&gt;crisis-list&lt;/code&gt; and &lt;code&gt;heroes-list&lt;/code&gt; components hard-coded in your &lt;code&gt;app.component.html&lt;/code&gt; template. For your routes to work, you need to update your template to dynamically load a component based on the URL path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a28f831b9d378b2f9f53fe3f306868566a3b98" translate="yes" xml:space="preserve">
          <source>At this point, you've replaced all AngularJS application components with their Angular counterparts, even though you're still serving them from the AngularJS router.</source>
          <target state="translated">На данный момент вы заменили все компоненты приложения AngularJS на их угловые аналоги,даже если вы все еще обслуживаете их из маршрутизатора AngularJS.</target>
        </trans-unit>
        <trans-unit id="881d0e72fd3eb18bc7f9bce749c2a557083835f3" translate="yes" xml:space="preserve">
          <source>Attaches a view so that it will be dirty checked. The view will be automatically detached when it is destroyed. This will throw if the view is already attached to a ViewContainer.</source>
          <target state="translated">Прикрепляет вид,чтобы он был грязным.Вид будет автоматически отсоединяться при его уничтожении.Это будет бросаться,если вид уже прикреплен к ViewContainer.</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="b2a054d9997fa913c6ff1d1261a85f354b37c1d2" translate="yes" xml:space="preserve">
          <source>Attribute (the exception)</source>
          <target state="translated">Атрибут (исключение)</target>
        </trans-unit>
        <trans-unit id="7706e49eec94755bbb4164b09d500329ccb21352" translate="yes" xml:space="preserve">
          <source>Attribute Directive Testing</source>
          <target state="translated">Тестирование директивы по атрибутам</target>
        </trans-unit>
        <trans-unit id="55c1659b17ee19bef5fd528a73b2941e917a57a8" translate="yes" xml:space="preserve">
          <source>Attribute Directives</source>
          <target state="translated">Атрибутировать Директивы</target>
        </trans-unit>
        <trans-unit id="c334bb508016d6901c14a951eec64345dab38157" translate="yes" xml:space="preserve">
          <source>Attribute binding</source>
          <target state="translated">Связывание атрибутов</target>
        </trans-unit>
        <trans-unit id="688c7d0ab88d8b7d6e839cac9ec8e4a8393f65d2" translate="yes" xml:space="preserve">
          <source>Attribute binding in Angular helps you set values for attributes directly. With attribute binding, you can improve accessibility, style your application dynamically, and manage multiple CSS classes or styles simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ab6806b510c7b11c4ab616151d71b7f958362f" translate="yes" xml:space="preserve">
          <source>Attribute binding syntax resembles &lt;a href=&quot;property-binding&quot;&gt;property binding&lt;/a&gt;, but instead of an element property between brackets, you precede the name of the attribute with the prefix &lt;code&gt;attr&lt;/code&gt;, followed by a dot. Then, you set the attribute value with an expression that resolves to a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b950dd914b91e0fb66d15ece878e4a67694934" translate="yes" xml:space="preserve">
          <source>Attribute binding syntax resembles property binding, but instead of an element property between brackets, start with the prefix &lt;code&gt;attr&lt;/code&gt;, followed by a dot (&lt;code&gt;.&lt;/code&gt;), and the name of the attribute. You then set the attribute value, using an expression that resolves to a string, or remove the attribute when the expression resolves to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Синтаксис привязки атрибута напоминает привязку свойства, но вместо свойства элемента в скобках начинайте с префикса &lt;code&gt;attr&lt;/code&gt; , за которым следует точка ( &lt;code&gt;.&lt;/code&gt; ) И имя атрибута. Затем вы устанавливаете значение атрибута, используя выражение, которое разрешается в строку, или удаляете атрибут, когда выражение разрешается в &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="279ab89039ba64c6b0da183f3b7147bf2cea8ccf" translate="yes" xml:space="preserve">
          <source>Attribute directives</source>
          <target state="translated">Атрибутивные директивы</target>
        </trans-unit>
        <trans-unit id="5d12ef2a9da048d322efb7149e52d65f30b28dfa" translate="yes" xml:space="preserve">
          <source>Attribute directives listen to and modify the behavior of other HTML elements, attributes, properties, and components. You usually apply them to elements as if they were HTML attributes, hence the name.</source>
          <target state="translated">Атрибутивные директивы прослушивают и изменяют поведение других HTML элементов,атрибутов,свойств и компонентов.Обычно вы применяете их к элементам,как если бы это были HTML атрибуты,отсюда и название.</target>
        </trans-unit>
        <trans-unit id="20513020a514d725b1470eb9d9c5e82080471bcc" translate="yes" xml:space="preserve">
          <source>Attribute directives&amp;mdash;change the appearance or behavior of an element, component, or another directive.</source>
          <target state="translated">Директивы атрибутов - изменяют внешний вид или поведение элемента, компонента или другой директивы.</target>
        </trans-unit>
        <trans-unit id="8ea298a1d48c262be17e654c22323e471414de8a" translate="yes" xml:space="preserve">
          <source>Attribute, class, and style bindings</source>
          <target state="translated">Крепления для атрибутов,классов и стилей</target>
        </trans-unit>
        <trans-unit id="1b88cfba520774bf5bca05743d6b49bf17294180" translate="yes" xml:space="preserve">
          <source>Attribute: &lt;code&gt;&amp;lt;comp name=&quot;World&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Атрибут: &lt;code&gt;&amp;lt;comp name=&quot;World&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ba9f41e65786ab28a5cc7739fa9524275b749e4a" translate="yes" xml:space="preserve">
          <source>Auditing Angular applications</source>
          <target state="translated">Аудит Угловые приложения</target>
        </trans-unit>
        <trans-unit id="2d71759f1ce5e34ba7c6cb30dce5f95b0d00e1df" translate="yes" xml:space="preserve">
          <source>Aug 06, 2020</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fea604e02e90409b49b69fe833ca2813b27ee65" translate="yes" xml:space="preserve">
          <source>Aug 06, 2021</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf0bb467a9afb82ce8505717567f73467a792d6" translate="yes" xml:space="preserve">
          <source>Augmenting native elements</source>
          <target state="translated">Дополняющие родные элементы</target>
        </trans-unit>
        <trans-unit id="a16633a9eb6827787eb85e86d22dfda752672360" translate="yes" xml:space="preserve">
          <source>Authenticate with &lt;code&gt;AuthGuard&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e15602646e8c5a159e78f8d9953cf08b4cdadb" translate="yes" xml:space="preserve">
          <source>Authentication/authorization</source>
          <target state="translated">Authentication/authorization</target>
        </trans-unit>
        <trans-unit id="0efd1e55177485c760611f1570d33e1b5e47d03a" translate="yes" xml:space="preserve">
          <source>Authoring Schematics</source>
          <target state="translated">Авторская схема</target>
        </trans-unit>
        <trans-unit id="fe7fe41ba1e2091f0bf1b06a8e056db0a0210d00" translate="yes" xml:space="preserve">
          <source>Authoring schematics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b94f5df6479e29b25d986076b0ee811c9a3f18" translate="yes" xml:space="preserve">
          <source>Auto-styling can be used to define a state that depends on layout or other environmental factors.</source>
          <target state="translated">Автостайлинг может быть использован для определения состояния,которое зависит от компоновки или других факторов окружающей среды.</target>
        </trans-unit>
        <trans-unit id="a4696360f61ce7b39a54fa976acbcf3c37e4dd61" translate="yes" xml:space="preserve">
          <source>Autocompletion</source>
          <target state="translated">Autocompletion</target>
        </trans-unit>
        <trans-unit id="a8576cba49fa626f39a56bc18330709f71819814" translate="yes" xml:space="preserve">
          <source>Autocompletion can speed up your development time by providing you with contextual possibilities and hints as you type. This example shows autocomplete in an interpolation. As you type it out, you can hit tab to complete.</source>
          <target state="translated">Автозавершение может ускорить время разработки,предоставляя вам контекстные возможности и подсказки по мере того,как вы набираете текст.В этом примере автозавершение показано в интерполяции.По мере того,как вы набираете текст,вы можете нажать на вкладку завершения.</target>
        </trans-unit>
        <trans-unit id="2cc042e9fe579c82af6f851ae39215cc25b9ea23" translate="yes" xml:space="preserve">
          <source>Automatic change detection</source>
          <target state="translated">Автоматическое определение изменений</target>
        </trans-unit>
        <trans-unit id="6eba8d49fe5d13d1fca5b019f42b110fe985ad30" translate="yes" xml:space="preserve">
          <source>Automatic deployment with the CLI</source>
          <target state="translated">Автоматическое развертывание с помощью CLI</target>
        </trans-unit>
        <trans-unit id="8645d08355f818059391b51cb42d575086fb447b" translate="yes" xml:space="preserve">
          <source>Automatic property calculation with wildcards</source>
          <target state="translated">Автоматический расчет свойств с помощью спецсимволов</target>
        </trans-unit>
        <trans-unit id="ba24e92f551ffc6d70286e830ff60471df994992" translate="yes" xml:space="preserve">
          <source>Available and activated updates</source>
          <target state="translated">Доступные и активированные обновления</target>
        </trans-unit>
        <trans-unit id="6b9113ae3a57f7a0dceaa44494d0a520cabe3576" translate="yes" xml:space="preserve">
          <source>Avoid aliasing &lt;code&gt;inputs&lt;/code&gt; and &lt;code&gt;outputs&lt;/code&gt;</source>
          <target state="translated">Избегайте совмещения &lt;code&gt;inputs&lt;/code&gt; и &lt;code&gt;outputs&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35d10846ee5de515ce9531aa71d75239dda439f0" translate="yes" xml:space="preserve">
          <source>Avoid referring to enums with complicated initializers or computed properties.</source>
          <target state="translated">Избегайте ссылок на перечисления со сложными инициализаторами или вычисленными свойствами.</target>
        </trans-unit>
        <trans-unit id="a4763469397ba3b0cc9e116ced71e140704d303a" translate="yes" xml:space="preserve">
          <source>Avoid side effects</source>
          <target state="translated">Избегайте побочных эффектов</target>
        </trans-unit>
        <trans-unit id="8d9ef20f693ba88acc4b2ad8c040f990e01cea96" translate="yes" xml:space="preserve">
          <source>Avoid this error by sticking to the compiler's &lt;a href=&quot;aot-compiler#expression-syntax&quot;&gt;restricted expression syntax&lt;/a&gt; when writing Angular metadata and be wary of new or unusual TypeScript features.</source>
          <target state="translated">Чтобы избежать этой ошибки, придерживайтесь &lt;a href=&quot;aot-compiler#expression-syntax&quot;&gt;синтаксиса ограниченного выражения&lt;/a&gt; компилятора при записи метаданных Angular и опасайтесь новых или необычных возможностей TypeScript.</target>
        </trans-unit>
        <trans-unit id="6f85b2bfcbb0fa2f75065b9806f3edc8026fee56" translate="yes" xml:space="preserve">
          <source>Azure</source>
          <target state="translated">Azure</target>
        </trans-unit>
        <trans-unit id="5f5f6d9b2535d125e7ae46352acf0bb3d116f1ee" translate="yes" xml:space="preserve">
          <source>B, BB &amp;amp; BBB</source>
          <target state="translated">B, BB &amp;amp; BBB</target>
        </trans-unit>
        <trans-unit id="4c55e5e5fc2235cc8c201e69a345f7fab3fb46fa" translate="yes" xml:space="preserve">
          <source>BBBB</source>
          <target state="translated">BBBB</target>
        </trans-unit>
        <trans-unit id="4601044687c40f1a23385d338d02f9fc7f5d512d" translate="yes" xml:space="preserve">
          <source>BBBBB</source>
          <target state="translated">BBBBB</target>
        </trans-unit>
        <trans-unit id="ebdcf0a202669a291a7d498007aa30cf730e825d" translate="yes" xml:space="preserve">
          <source>BEFORE_APP_SERIALIZED</source>
          <target state="translated">BEFORE_APP_SERIALIZED</target>
        </trans-unit>
        <trans-unit id="75b1c4c9960810fdc4641aa8201594f9d464b4ce" translate="yes" xml:space="preserve">
          <source>BY default, the value is randomly generated and assigned to the application by Angular. To provide a custom ID value, use a DI provider  to configure the root &lt;a href=&quot;injector&quot;&gt;&lt;code&gt;Injector&lt;/code&gt;&lt;/a&gt; that uses this token.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cb09bf3a8782ed3fdbd196ecf0ac3ab8e92b47b" translate="yes" xml:space="preserve">
          <source>Back in the &quot;Heroes&quot; workflow, the app accepts every change to a hero immediately without hesitation or validation.</source>
          <target state="translated">Вернувшись в рабочий процесс &quot;Герои&quot;,приложение принимает каждое изменение героя немедленно,без колебаний и валидации.</target>
        </trans-unit>
        <trans-unit id="3ebd1dea933ed2810c5164716b5f9c9a32c50825" translate="yes" xml:space="preserve">
          <source>Back in the &quot;Heroes&quot; workflow, the app accepts every change to a hero immediately without validation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e754f85ea186e7a88cea5b09eb25dfdcf33a1ed" translate="yes" xml:space="preserve">
          <source>Back in the &lt;code&gt;AppComponent&lt;/code&gt;, import the &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; token from the &lt;code&gt;@angular/router&lt;/code&gt; package and the &lt;code&gt;slideInAnimation&lt;/code&gt; from &lt;code&gt;'./animations.ts&lt;/code&gt;.</source>
          <target state="translated">Вернувшись в &lt;code&gt;AppComponent&lt;/code&gt; , импортируйте токен &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; из пакета &lt;code&gt;@angular/router&lt;/code&gt; и &lt;code&gt;slideInAnimation&lt;/code&gt; из &lt;code&gt;'./animations.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d9c883a905731bc3ab1e5b1797dcc17a576c4565" translate="yes" xml:space="preserve">
          <source>Back to top</source>
          <target state="translated">Вернуться к началу</target>
        </trans-unit>
        <trans-unit id="38d71168a65ccaba07740a310c00c10c1cf04c0f" translate="yes" xml:space="preserve">
          <source>Background processing using web workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4290a336cc02b12946c3c89719cd2e7d3a69574" translate="yes" xml:space="preserve">
          <source>Backward compatibility with CSS grid</source>
          <target state="translated">Обратная совместимость с CSS-сетью</target>
        </trans-unit>
        <trans-unit id="f080bd1737639dbd750a023ba99fa346cf943a9f" translate="yes" xml:space="preserve">
          <source>Backward compatibility with Lighthouse</source>
          <target state="translated">Обратная совместимость с маяком</target>
        </trans-unit>
        <trans-unit id="3578397cf875eb735f9e4ec895bfefcd6ea0e18c" translate="yes" xml:space="preserve">
          <source>Base URL for protractor to connect to.</source>
          <target state="translated">Базовый URL для подключения транспортера.</target>
        </trans-unit>
        <trans-unit id="69488c399a2c06d8cc98c0a654ba1be00ce481f8" translate="yes" xml:space="preserve">
          <source>Base class for Angular Views, provides change detection functionality. A change-detection tree collects all views that are to be checked for changes. Use the methods to add and remove views from the tree, initiate change-detection, and explicitly mark views as &lt;em&gt;dirty&lt;/em&gt;, meaning that they have changed and need to be rerendered.</source>
          <target state="translated">Базовый класс для Angular Views, обеспечивает функциональность обнаружения изменений. Дерево обнаружения изменений собирает все представления, которые должны быть проверены на наличие изменений. Используйте методы, чтобы добавлять и удалять представления из дерева, инициировать обнаружение изменений и явно помечать представления как &lt;em&gt;грязные&lt;/em&gt; , что означает, что они изменились и требуют повторного отображения.</target>
        </trans-unit>
        <trans-unit id="dc5f559c4c1d7d90f2ea8b32a7e1b1c62788bfb3" translate="yes" xml:space="preserve">
          <source>Base class for a factory that can create a component dynamically. Instantiate a factory for a given type of component with &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;resolveComponentFactory()&lt;/a&gt;&lt;/code&gt;. Use the resulting &lt;code&gt;ComponentFactory.create()&lt;/code&gt; method to create a component of that type.</source>
          <target state="translated">Базовый класс для фабрики, которая может динамически создавать компонент. Создайте фабрику для компонента данного типа с помощью &lt;code&gt;&lt;a href=&quot;componentfactory&quot;&gt;resolveComponentFactory()&lt;/a&gt;&lt;/code&gt; . Используйте полученный метод &lt;code&gt;ComponentFactory.create()&lt;/code&gt; для создания компонента этого типа.</target>
        </trans-unit>
        <trans-unit id="873cd738027a52aee557333ae0d35f162d826794" translate="yes" xml:space="preserve">
          <source>Base class for a factory that can create a component dynamically. Instantiate a factory for a given type of component with &lt;code&gt;&lt;a href=&quot;core&quot;&gt;resolveComponentFactory()&lt;/a&gt;&lt;/code&gt;. Use the resulting &lt;code&gt;ComponentFactory.create()&lt;/code&gt; method to create a component of that type.</source>
          <target state="translated">Базовый класс для фабрики, которая может динамически создавать компонент. Создайте фабрику для компонента данного типа с помощью &lt;code&gt;&lt;a href=&quot;core&quot;&gt;resolveComponentFactory()&lt;/a&gt;&lt;/code&gt; . Используйте полученный метод &lt;code&gt;ComponentFactory.create()&lt;/code&gt; для создания компонента этого типа.</target>
        </trans-unit>
        <trans-unit id="3dfe758a4a0fb105b1876786c681bb3f3bbe104e" translate="yes" xml:space="preserve">
          <source>Base class for a factory that can create a component dynamically. Instantiate a factory for a given type of component with &lt;code&gt;resolveComponentFactory()&lt;/code&gt;. Use the resulting &lt;code&gt;ComponentFactory.create()&lt;/code&gt; method to create a component of that type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b6cf30fccd592a4f7ad01aa440cf8322efc7d5" translate="yes" xml:space="preserve">
          <source>Base class for both &lt;code&gt;&lt;a href=&quot;http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http/httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Базовый класс для &lt;code&gt;&lt;a href=&quot;http/httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;http/httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b72bab4ba60f36cf05e4cf503864db197ec58d1a" translate="yes" xml:space="preserve">
          <source>Base class for both &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Базовый класс для &lt;code&gt;&lt;a href=&quot;httpresponse&quot;&gt;HttpResponse&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;httpheaderresponse&quot;&gt;HttpHeaderResponse&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d87cd5ed68b6935afddd679162562d7c105b48bf" translate="yes" xml:space="preserve">
          <source>Base class for control directives.</source>
          <target state="translated">Базовый класс для директив управления.</target>
        </trans-unit>
        <trans-unit id="7c8bf5beced837666a3fcfff47faf58811883c9f" translate="yes" xml:space="preserve">
          <source>Base class for query metadata.</source>
          <target state="translated">Базовый класс для метаданных запросов.</target>
        </trans-unit>
        <trans-unit id="635e9ee2a4c721f49b71cfa0e21b4e6c42eeb839" translate="yes" xml:space="preserve">
          <source>Base class that provides change detection functionality. A change-detection tree collects all views that are to be checked for changes. Use the methods to add and remove views from the tree, initiate change-detection, and explicitly mark views as &lt;em&gt;dirty&lt;/em&gt;, meaning that they have changed and need to be re-rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3542392d51807f46bde8565dbb42d8fcc3c899" translate="yes" xml:space="preserve">
          <source>Base for animation data structures.</source>
          <target state="translated">База для структур анимационных данных.</target>
        </trans-unit>
        <trans-unit id="332796bde2e92bb79ea8d8b003db847231db277a" translate="yes" xml:space="preserve">
          <source>Base for events the router goes through, as opposed to events tied to a specific route. Fired one time for any given navigation.</source>
          <target state="translated">База для событий,через которые проходит маршрутизатор,в отличие от событий,привязанных к конкретному маршруту.Уволено один раз для любой данной навигации.</target>
        </trans-unit>
        <trans-unit id="dc0e3cb0c30a7fd999cfb13abd9ca5e0359899bd" translate="yes" xml:space="preserve">
          <source>Base interface for progress events.</source>
          <target state="translated">Базовый интерфейс для событий прогресса.</target>
        </trans-unit>
        <trans-unit id="19c642b2c76cffbbba7c48b8234e3965239d1723" translate="yes" xml:space="preserve">
          <source>Base url for the application being built.</source>
          <target state="translated">Базовая урла для создаваемого приложения.</target>
        </trans-unit>
        <trans-unit id="c15b8155598bbd0eb4ddda108efeed6d3faaa586" translate="yes" xml:space="preserve">
          <source>Base your decision on your comfort level. Use a flatter structure until there is an obvious value to creating a new folder.</source>
          <target state="translated">Основывайте свое решение на уровне комфорта.Используйте более плоскую структуру до тех пор,пока не появится очевидное значение для создания новой папки.</target>
        </trans-unit>
        <trans-unit id="3076d2f98148e70924e7e811bb728bbdd8a7383a" translate="yes" xml:space="preserve">
          <source>BaseRouteReuseStrategy</source>
          <target state="translated">BaseRouteReuseStrategy</target>
        </trans-unit>
        <trans-unit id="457c8d9bebfca77b21842bdcc7ca17bb844fb9ac" translate="yes" xml:space="preserve">
          <source>Based on the &lt;code&gt;--target&lt;/code&gt;, TypeScript adds &lt;em&gt;additional&lt;/em&gt; ambient declarations like &lt;code&gt;Promise&lt;/code&gt; if the target is &lt;code&gt;es6&lt;/code&gt;.</source>
          <target state="translated">На основе &lt;code&gt;--target&lt;/code&gt; TypeScript добавляет &lt;em&gt;дополнительные&lt;/em&gt; окружающие объявления, такие как &lt;code&gt;Promise&lt;/code&gt; , если целью является &lt;code&gt;es6&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dac6b24f78471a132bc9a7ec7774530351b54fb0" translate="yes" xml:space="preserve">
          <source>Basic Example</source>
          <target state="translated">Основной пример</target>
        </trans-unit>
        <trans-unit id="04e8ea10d9114654af829cd500f25ab6581dd803" translate="yes" xml:space="preserve">
          <source>Basic deployment to a remote server</source>
          <target state="translated">Базовое развертывание на удаленном сервере</target>
        </trans-unit>
        <trans-unit id="063ab1d912949e267d46aeb8da49267a312d5fc8" translate="yes" xml:space="preserve">
          <source>Basic knowledge of &lt;a href=&quot;reactive-forms&quot;&gt;reactive forms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700ed102a28fe8fc4eddc583c6a8a0bbe5b01d1d" translate="yes" xml:space="preserve">
          <source>Basic mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653ae9d4bc08db3838f9c6c61951682ba7657958" translate="yes" xml:space="preserve">
          <source>Basic usage and terms</source>
          <target state="translated">Основные правила и термины</target>
        </trans-unit>
        <trans-unit id="189ceeabec801d69e58e27b3296832fd339cfd5c" translate="yes" xml:space="preserve">
          <source>Basic workflow</source>
          <target state="translated">Базовый документооборот</target>
        </trans-unit>
        <trans-unit id="a35274a9de216b3996a2a6b71246c15e2bcf3d04" translate="yes" xml:space="preserve">
          <source>Basics of components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc01111eade2759f3e275f9731fae544b98ca2d8" translate="yes" xml:space="preserve">
          <source>Basics of either &lt;a href=&quot;forms&quot;&gt;Template-driven Forms&lt;/a&gt; or &lt;a href=&quot;reactive-forms&quot;&gt;Reactive Forms&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61b0285152a2eae841cd8ebb75ab77a99b10a1d" translate="yes" xml:space="preserve">
          <source>Basics of templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4815228259a0751e18e68db23b416c479a8fcde2" translate="yes" xml:space="preserve">
          <source>Basics of testing components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21db9140fd5c55af9b7daf2fcc86cdbecd519ae0" translate="yes" xml:space="preserve">
          <source>Basics of two-way binding</source>
          <target state="translated">Основы двусторонней связи</target>
        </trans-unit>
        <trans-unit id="1276e18d03ecc54657c7ab3b6a5e107e8237506b" translate="yes" xml:space="preserve">
          <source>Basics wrap up</source>
          <target state="translated">Основы закругляются</target>
        </trans-unit>
        <trans-unit id="10297ac57954a12cf832e6d7cca38640fa142a64" translate="yes" xml:space="preserve">
          <source>Bazel builder and schematics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd52192ef4a4a502c98dddd59b2a553be18b512" translate="yes" xml:space="preserve">
          <source>Bazel builder and schematics were introduced in Angular Labs to let users try out Bazel without having to manage Bazel version and BUILD files. This feature has been deprecated. For more information, please refer to the &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/bazel/src/schematics/README.md&quot;&gt;migration doc&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b910aa222ba05ed1cabb9a85eecf07e8960306d" translate="yes" xml:space="preserve">
          <source>Be explicit and implement the &lt;code&gt;&lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; interface with a type of &lt;code&gt;Crisis&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="381c08b859c05a623a77795b6faef27c11b8be2b" translate="yes" xml:space="preserve">
          <source>Be explicit. Implement the &lt;code&gt;&lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; interface with a type of &lt;code&gt;Crisis&lt;/code&gt;.</source>
          <target state="translated">Будь явным Реализовать &lt;code&gt;&lt;a href=&quot;../api/router/resolve&quot;&gt;Resolve&lt;/a&gt;&lt;/code&gt; интерфейс с типом &lt;code&gt;Crisis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1bf79b7186da202dc35b6c9fdce5e4c57c7d1a68" translate="yes" xml:space="preserve">
          <source>Be sure to check that the context exists and throw the appropriate error.</source>
          <target state="translated">Убедитесь,что контекст существует,и выбросьте соответствующую ошибку.</target>
        </trans-unit>
        <trans-unit id="795a90d1a8ee5cbdff797b42bb7461a0906585d9" translate="yes" xml:space="preserve">
          <source>Be sure to create module components as children of this module's top component.</source>
          <target state="translated">Обязательно создайте компоненты модуля в качестве дочерних элементов верхнего компонента этого модуля.</target>
        </trans-unit>
        <trans-unit id="e61c47ca4bb6fa8b383f353cab783005cfd6efe8" translate="yes" xml:space="preserve">
          <source>Be sure to define custom IDs that are unique. If you use the same ID for two different text elements, the extraction tool extracts only the first one, and Angular uses its translation in place of both original text elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d5bf806d7d027af1dddb36dc70adddb33b479b7" translate="yes" xml:space="preserve">
          <source>Be sure to define custom ids that are unique. If you use the same id for two different text messages, only the first one is extracted, and its translation is used in place of both original text messages.</source>
          <target state="translated">Обязательно определите уникальные пользовательские идентификаторы.Если вы используете один и тот же идентификатор для двух разных текстовых сообщений,то извлекается только первое,а его перевод используется вместо обоих оригинальных текстовых сообщений.</target>
        </trans-unit>
        <trans-unit id="d49c7d22f7883e13f3cefcd14247137e8f69ed59" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;&amp;lt;lib-header&amp;gt;&lt;/code&gt; is optional, the element can appear in the template in its minimal form, &lt;code&gt;&amp;lt;lib-card&amp;gt;&amp;lt;/lib-card&amp;gt;&lt;/code&gt;. In this case, &lt;code&gt;&amp;lt;lib-header&amp;gt;&lt;/code&gt; is not used and you would expect it to be tree-shaken, but that is not what happens. This is because &lt;code&gt;LibCardComponent&lt;/code&gt; actually contains two references to the &lt;code&gt;LibHeaderComponent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb44eeb12ea39170bc603c6fb44cf6110a2d9a2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;HeroDetailComponent&lt;/code&gt; is an Angular component, you must also add it to the &lt;code&gt;declarations&lt;/code&gt; in the &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">Поскольку &lt;code&gt;HeroDetailComponent&lt;/code&gt; является угловым компонентом, вы также должны добавить его в &lt;code&gt;declarations&lt;/code&gt; в &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a71b98122cf3ec666c4be311886fe1a144f93c35" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;compileComponents&lt;/code&gt; is asynchronous, it uses the &lt;a href=&quot;../api/core/testing/waitforasync&quot;&gt;&lt;code&gt;waitForAsync&lt;/code&gt;&lt;/a&gt; utility function imported from &lt;code&gt;@angular/core/testing&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71459b0877ea037c4247f79f200b0627331cfde5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;ng serve&lt;/code&gt; does not work with service workers, you must use a separate HTTP server to test your project locally. You can use any HTTP server. The example below uses the &lt;a href=&quot;https://www.npmjs.com/package/http-server&quot;&gt;http-server&lt;/a&gt; package from npm. To reduce the possibility of conflicts and avoid serving stale content, test on a dedicated port and disable caching.</source>
          <target state="translated">Поскольку &lt;code&gt;ng serve&lt;/code&gt; не работает с сервисными работниками, вы должны использовать отдельный HTTP-сервер для локального тестирования вашего проекта. Вы можете использовать любой HTTP-сервер. В приведенном ниже примере используется пакет &lt;a href=&quot;https://www.npmjs.com/package/http-server&quot;&gt;http-сервера&lt;/a&gt; от npm. Чтобы уменьшить вероятность конфликтов и избежать обслуживания устаревшего контента, протестируйте выделенный порт и отключите кэширование.</target>
        </trans-unit>
        <trans-unit id="342f36e72319b97e67057da06eb0202d32290ccf" translate="yes" xml:space="preserve">
          <source>Because Angular applications are mostly written in TypeScript, you will typically know when a variable is an observable. Although the Angular framework does not enforce a naming convention for observables, you will often see observables named with a trailing &amp;ldquo;$&amp;rdquo; sign.</source>
          <target state="translated">Поскольку приложения Angular в основном написаны на TypeScript, вы обычно будете знать, когда переменная является наблюдаемой. Хотя среда Angular не предписывает соглашение об именовании для наблюдаемых, вы часто будете видеть наблюдаемые, названные со знаком &amp;laquo;$&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="80706cd8d34e9df3aebbbfc71eb5c40862507ed2" translate="yes" xml:space="preserve">
          <source>Because Bazel constructs a graph out of your targets, you can find lots of useful information.</source>
          <target state="translated">Поскольку Bazel строит график из ваших целей,вы можете найти много полезной информации.</target>
        </trans-unit>
        <trans-unit id="3244368a86d6561aba583792cc03eff7eff140ec" translate="yes" xml:space="preserve">
          <source>Because a Universal app doesn't execute in the browser, some of the browser APIs and capabilities may be missing on the server.</source>
          <target state="translated">Поскольку универсальное приложение не работает в браузере,некоторые API и возможности браузера могут отсутствовать на сервере.</target>
        </trans-unit>
        <trans-unit id="1f4be1daa693b107a5635c119a5bcab95b440545" translate="yes" xml:space="preserve">
          <source>Because directives and pipes appear in component templates, the Angular compiler incorporates them into compiled component code too.</source>
          <target state="translated">Поскольку директивы и каналы появляются в шаблонах компонентов,компилятор Angular тоже включает их в скомпилированный код компонента.</target>
        </trans-unit>
        <trans-unit id="f73de75658f57ce63ea356bf33e3b7801f62fafb" translate="yes" xml:space="preserve">
          <source>Because each service method returns a different kind of &lt;code&gt;Observable&lt;/code&gt; result, &lt;code&gt;&lt;a href=&quot;../api/core/errorhandler#handleError&quot;&gt;handleError()&lt;/a&gt;&lt;/code&gt; takes a type parameter so it can return the safe value as the type that the app expects.</source>
          <target state="translated">Поскольку каждый метод службы возвращает различный вид &lt;code&gt;Observable&lt;/code&gt; результата, &lt;code&gt;&lt;a href=&quot;../api/core/errorhandler#handleError&quot;&gt;handleError()&lt;/a&gt;&lt;/code&gt; принимает параметр типа, чтобы он мог возвращать безопасное значение в качестве типа , ожидаемого приложением.</target>
        </trans-unit>
        <trans-unit id="6ccabadf6eacc3ed0298a9f1066397f953b77131" translate="yes" xml:space="preserve">
          <source>Because each service method returns a different kind of &lt;code&gt;Observable&lt;/code&gt; result, &lt;code&gt;handleError()&lt;/code&gt; takes a type parameter so it can return the safe value as the type that the app expects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46939d4d0ba537e542bde8f87ab09af4cea60a09" translate="yes" xml:space="preserve">
          <source>Because interceptors are (optional) dependencies of the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; service, you must provide them in the same injector (or a parent of the injector) that provides &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;. Interceptors provided &lt;em&gt;after&lt;/em&gt; DI creates the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; are ignored.</source>
          <target state="translated">Поскольку перехватчики являются (необязательными) зависимостями службы &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , вы должны предоставить их в том же инжекторе (или в родительском &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; инжектора), который предоставляет HttpClient . Перехватчики, предоставляемые &lt;em&gt;после того, как&lt;/em&gt; DI создает &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , игнорируются.</target>
        </trans-unit>
        <trans-unit id="ebedc3d0a5c7a3fec99ebbc8e460b97a0d2a4cf2" translate="yes" xml:space="preserve">
          <source>Because interceptors can process the request and response &lt;em&gt;together&lt;/em&gt;, they can do things like time and log an entire HTTP operation.</source>
          <target state="translated">Поскольку перехватчики могут обрабатывать запрос и ответ &lt;em&gt;вместе&lt;/em&gt; , они могут делать что-то вроде времени и регистрировать всю HTTP-операцию.</target>
        </trans-unit>
        <trans-unit id="e2d71f3190ead35022f872f1cc8b0026fc4180ab" translate="yes" xml:space="preserve">
          <source>Because interceptors can process the request and response &lt;em&gt;together&lt;/em&gt;, they can perform tasks such as timing and logging an entire HTTP operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9990b0c02c63922de8ac7eb597a4dbd80a3bf1" translate="yes" xml:space="preserve">
          <source>Because many app components need the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt;, the developer created a &lt;code&gt;SharedModule&lt;/code&gt; to combine these and other frequently requested parts.</source>
          <target state="translated">Поскольку многие компоненты приложения нуждаются в &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/titlecasepipe&quot;&gt;TitleCasePipe&lt;/a&gt;&lt;/code&gt; , разработчик создал &lt;code&gt;SharedModule&lt;/code&gt; для объединения этих и других часто запрашиваемых частей.</target>
        </trans-unit>
        <trans-unit id="7309f02327abcb02906eb27e1961d1e11ff57034" translate="yes" xml:space="preserve">
          <source>Because much AngularJS code is in JavaScript, JavaScript code is shown in the AngularJS column. The Angular code is shown using TypeScript.</source>
          <target state="translated">Поскольку большая часть кода AngularJS находится на JavaScript,код на JavaScript показан в столбце AngularJS.Код AngularJS показан с помощью TypeScript.</target>
        </trans-unit>
        <trans-unit id="b19a9e8492a1eac84038f4635a1cd76785f5684a" translate="yes" xml:space="preserve">
          <source>Because no native HTML element follows the &lt;code&gt;x&lt;/code&gt; value and &lt;code&gt;xChange&lt;/code&gt; event pattern, two-way binding with form elements requires &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt;. For more information on how to use two-way binding in forms, see Angular &lt;a href=&quot;built-in-directives#ngModel&quot;&gt;NgModel&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f63ecad480eaacde83f906bac0c6143c6ea2184e" translate="yes" xml:space="preserve">
          <source>Because observables produce values asynchronously, try/catch will not effectively catch errors. Instead, you handle errors by specifying an &lt;code&gt;error&lt;/code&gt; callback on the observer. Producing an error also causes the observable to clean up subscriptions and stop producing values. An observable can either produce values (calling the &lt;code&gt;next&lt;/code&gt; callback), or it can complete, calling either the &lt;code&gt;complete&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt; callback.</source>
          <target state="translated">Поскольку наблюдаемые производят значения асинхронно, try / catch не будет эффективно отлавливать ошибки. Вместо этого вы обрабатываете ошибки, указывая обратный вызов &lt;code&gt;error&lt;/code&gt; для наблюдателя. Создание ошибки также приводит к тому, что наблюдаемое очищает подписки и прекращает создавать значения. Наблюдаемая может либо создавать значения (вызывая &lt;code&gt;next&lt;/code&gt; обратный вызов), либо может завершаться, вызывая &lt;code&gt;complete&lt;/code&gt; или &lt;code&gt;error&lt;/code&gt; обратный вызов.</target>
        </trans-unit>
        <trans-unit id="7b1058fd96afe9d690d0969b15ba453bf7c67528" translate="yes" xml:space="preserve">
          <source>Because of these advantages, observables are used extensively within Angular, and are recommended for app development as well.</source>
          <target state="translated">Благодаря этим преимуществам,обсерватории широко используются в рамках Angular,а также рекомендуются для разработки приложений.</target>
        </trans-unit>
        <trans-unit id="a3b6660bf41bb567678e15b0038461e5765da5cb" translate="yes" xml:space="preserve">
          <source>Because of these many obstacles, you should test DOM interaction with unit testing techniques as much as possible.</source>
          <target state="translated">Из-за этого множества препятствий необходимо как можно больше тестировать взаимодействие DOM с методиками модульного тестирования.</target>
        </trans-unit>
        <trans-unit id="772276ca842c13128ca4d0e6c6d501e1f891a5e6" translate="yes" xml:space="preserve">
          <source>Because template-driven forms are in their own module, you need to add the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; to the array of &lt;code&gt;imports&lt;/code&gt; for the application module before you can use forms.</source>
          <target state="translated">Поскольку управляемые шаблоном формы находятся в их собственном модуле, вам необходимо добавить &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; в массив &lt;code&gt;imports&lt;/code&gt; для модуля приложения, прежде чем вы сможете использовать формы.</target>
        </trans-unit>
        <trans-unit id="f75c667b11d2d8cfaed8c93263c0b980c8478dec" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;testing#dashboard-hero-component&quot;&gt;template&lt;/a&gt; passes the hero name through the Angular &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;UpperCasePipe&lt;/a&gt;&lt;/code&gt;, the test must match the element value with the upper-cased name.</source>
          <target state="translated">Поскольку &lt;a href=&quot;testing#dashboard-hero-component&quot;&gt;шаблон&lt;/a&gt; передает имя героя через Angular &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;UpperCasePipe&lt;/a&gt;&lt;/code&gt; , тест должен сопоставить значение элемента с именем в верхнем регистре.</target>
        </trans-unit>
        <trans-unit id="6f5db9bdd91a54612d57188e6c89f939ca3ea573" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;testing-components-scenarios#dashboard-hero-component&quot;&gt;template&lt;/a&gt; passes the hero name through the Angular &lt;code&gt;&lt;a href=&quot;../api/common/uppercasepipe&quot;&gt;UpperCasePipe&lt;/a&gt;&lt;/code&gt;, the test must match the element value with the upper-cased name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fffab32755aa9a95819efcad47313434ea4ee47" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;HeroesModule&lt;/code&gt; now provides the &lt;code&gt;HeroListComponent&lt;/code&gt;, remove it from the &lt;code&gt;AppModule&lt;/code&gt;'s &lt;code&gt;declarations&lt;/code&gt; array. Now that you have a separate &lt;code&gt;HeroesModule&lt;/code&gt;, you can evolve the hero feature with more components and different routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb19305312e2b1bf07f79171f6856a936e20b002" translate="yes" xml:space="preserve">
          <source>Because the component template uses two-way data binding for the &lt;code&gt;favoriteColor&lt;/code&gt; property, the &lt;code&gt;favoriteColor&lt;/code&gt; property in the component is updated to the value emitted by the &lt;code&gt;ngModelChange&lt;/code&gt; event (&lt;em&gt;Blue&lt;/em&gt;).</source>
          <target state="translated">Поскольку компонент шаблона использует двустороннюю привязку данных для &lt;code&gt;favoriteColor&lt;/code&gt; собственности, &lt;code&gt;favoriteColor&lt;/code&gt; свойство в компоненте обновляется до значения , испускаемого &lt;code&gt;ngModelChange&lt;/code&gt; события ( &lt;em&gt;голубой&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="3559bd87675d83ca7d84212b131b57dd2128c250" translate="yes" xml:space="preserve">
          <source>Because the custom id is the same, both of the elements in the resulting translation contain the same text, &lt;code&gt;Bonjour&lt;/code&gt;:</source>
          <target state="translated">Поскольку пользовательский идентификатор одинаков, оба элемента в результирующем переводе содержат один и тот же текст, &lt;code&gt;Bonjour&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ac60673f94b3d3376ab5d403b236e2c865d35a46" translate="yes" xml:space="preserve">
          <source>Because the new module is meant to be lazy-loaded, the command does NOT add a reference for the new feature module to the root application's module file, &lt;code&gt;app.module.ts&lt;/code&gt;. Instead, it adds the declared route, &lt;code&gt;customer-list&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array declared in the module provided as the &lt;code&gt;--module&lt;/code&gt; option.</source>
          <target state="translated">Поскольку новый модуль предназначен для отложенной загрузки, команда НЕ добавляет ссылку для нового функционального модуля в файл модуля корневого приложения &lt;code&gt;app.module.ts&lt;/code&gt; . Вместо этого он добавляет объявленный маршрут, &lt;code&gt;customer-list&lt;/code&gt; в массив &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; объявленный в модуле, указанном как опция &lt;code&gt;--module&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7da6c9a81975e26c4d0dd69691dee4a8dec5786" translate="yes" xml:space="preserve">
          <source>Because the new module is meant to be lazy-loaded, the command does NOT add a reference to the new feature module in the application's root module file, &lt;code&gt;app.module.ts&lt;/code&gt;. Instead, it adds the declared route, &lt;code&gt;customers&lt;/code&gt; to the &lt;code&gt;routes&lt;/code&gt; array declared in the module provided as the &lt;code&gt;--module&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f72bc222c5187cbceca225395ab2edb41eb5670" translate="yes" xml:space="preserve">
          <source>Because the sample tests for this guide are designed to run only in a browser, a &lt;code&gt;nativeElement&lt;/code&gt; in these tests is always an &lt;code&gt;HTMLElement&lt;/code&gt; whose familiar methods and properties you can explore within a test.</source>
          <target state="translated">Поскольку примеры тестов для этого руководства предназначены для запуска только в браузере, &lt;code&gt;nativeElement&lt;/code&gt; в этих тестах всегда является &lt;code&gt;HTMLElement&lt;/code&gt; , знакомые методы и свойства которого вы можете изучить в рамках теста.</target>
        </trans-unit>
        <trans-unit id="011af8b0f357ff673113afd8db33d1ac6ff8678e" translate="yes" xml:space="preserve">
          <source>Because the service method returns an &lt;code&gt;Observable&lt;/code&gt; of configuration data, the component &lt;em&gt;subscribes&lt;/em&gt; to the method's return value. The subscription callback performs minimal post-processing. It copies the data fields into the component's &lt;code&gt;config&lt;/code&gt; object, which is data-bound in the component template for display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba2132d051625545e383f4b78d7ded919141bef" translate="yes" xml:space="preserve">
          <source>Because the service method returns an &lt;code&gt;Observable&lt;/code&gt; of configuration data, the component &lt;strong&gt;subscribes&lt;/strong&gt; to the method's return value. The subscription callback copies the data fields into the component's &lt;code&gt;&lt;a href=&quot;../api/router/router#config&quot;&gt;config&lt;/a&gt;&lt;/code&gt; object, which is data-bound in the component template for display.</source>
          <target state="translated">Поскольку метод службы возвращает &lt;code&gt;Observable&lt;/code&gt; данных конфигурации, компонент &lt;strong&gt;подписывается&lt;/strong&gt; на возвращаемое значение метода. Обратный вызов подписки копирует поля данных в объект &lt;code&gt;&lt;a href=&quot;../api/router/router#config&quot;&gt;config&lt;/a&gt;&lt;/code&gt; компонента , который привязан к данным в шаблоне компонента для отображения.</target>
        </trans-unit>
        <trans-unit id="8460f3c5a0030447eadc8c95b36ae1865a187e73" translate="yes" xml:space="preserve">
          <source>Because the spy result returns synchronously, the &lt;code&gt;getQuote()&lt;/code&gt; method updates the message on screen immediately &lt;em&gt;after&lt;/em&gt; the first change detection cycle during which Angular calls &lt;code&gt;ngOnInit&lt;/code&gt;.</source>
          <target state="translated">Поскольку результат шпиона возвращается синхронно, метод &lt;code&gt;getQuote()&lt;/code&gt; обновляет сообщение на экране сразу &lt;em&gt;после&lt;/em&gt; первого цикла обнаружения изменений, во время которого Angular вызывает &lt;code&gt;ngOnInit&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e716f7ac284970330d5ea0ebf9a16fdfedd60bbd" translate="yes" xml:space="preserve">
          <source>Because the value of the property &lt;code&gt;isUnchanged&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;AppComponent&lt;/code&gt;, Angular disables the button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3ebebb2c33ca11b4aadf44642620433d674fef" translate="yes" xml:space="preserve">
          <source>Because we use routing, we can easily recognize the three types of requests and handle them differently.</source>
          <target state="translated">Поскольку мы используем маршрутизацию,мы можем легко распознать три типа запросов и обрабатывать их по-разному.</target>
        </trans-unit>
        <trans-unit id="7c1e35fdf2c95e740d747fb6e8d2cb1e5ce349b8" translate="yes" xml:space="preserve">
          <source>Before a view is displayed, Angular evaluates the directives and resolves the binding syntax in the template to modify the HTML elements and the DOM, according to your program data and logic. Angular supports &lt;em&gt;two-way data binding&lt;/em&gt;, meaning that changes in the DOM, such as user choices, are also reflected in your program data.</source>
          <target state="translated">Перед отображением представления Angular оценивает директивы и разрешает синтаксис привязки в шаблоне для изменения элементов HTML и DOM в соответствии с данными и логикой вашей программы. Angular поддерживает &lt;em&gt;двустороннее связывание данных&lt;/em&gt; , что означает, что изменения в DOM, такие как выбор пользователя, также отражаются в данных вашей программы.</target>
        </trans-unit>
        <trans-unit id="3f3310ad85328d69644a5539eaa58ef7a2519e78" translate="yes" xml:space="preserve">
          <source>Before creating a route, you should be familiar with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9612053115f04a1c2064165c3d23081783892532" translate="yes" xml:space="preserve">
          <source>Before disabling Ivy, check out the debugging recommendations in the &lt;a href=&quot;ivy-compatibility#debugging&quot;&gt;Ivy Compatibility Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a2690d6d4ee87e844d5b45b79d0937210c67e9" translate="yes" xml:space="preserve">
          <source>Before discussing how you can use &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; to create hybrid apps, there are things that you can do to ease the upgrade process even before you begin upgrading. Because the steps are the same regardless of how you upgrade, refer to the &lt;a href=&quot;upgrade#preparation&quot;&gt;Preparation&lt;/a&gt; section of &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt;.</source>
          <target state="translated">Перед обсуждением того, как вы можете использовать &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; для создания гибридных приложений, есть несколько вещей, которые вы можете сделать, чтобы упростить процесс обновления даже до того, как вы начнете обновление. Поскольку шаги одинаковы независимо от того, как вы обновляетесь, обратитесь к разделу &amp;laquo; &lt;a href=&quot;upgrade#preparation&quot;&gt;Подготовка&lt;/a&gt; к &lt;a href=&quot;upgrade&quot;&gt;обновлению с AngularJS&amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2bd6921a15a4cc4213b02c123a7b7fdf88397ce4" translate="yes" xml:space="preserve">
          <source>Before doing that, understand the difference between pure and impure, starting with a pure pipe.</source>
          <target state="translated">Прежде чем это сделать,поймите разницу между чистым и нечистым,начиная с чистой трубы.</target>
        </trans-unit>
        <trans-unit id="fc24538f225bd74078ff36203b3ade5aa341dca1" translate="yes" xml:space="preserve">
          <source>Before doing this tutorial, you should have a basic understanding to the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938bfb0cc4fb4eee22c10427c31d0ba174568291" translate="yes" xml:space="preserve">
          <source>Before fully deploying your application, you can test the process, build configuration, and deployed behavior by using one of these interim techniques.</source>
          <target state="translated">Прежде чем полностью развернуть приложение,вы можете протестировать процесс,построить конфигурацию и установить поведение с помощью одной из этих промежуточных методик.</target>
        </trans-unit>
        <trans-unit id="b79cd0b493b0831cb177440164f7335b569a885f" translate="yes" xml:space="preserve">
          <source>Before going further into reactive forms, you should have a basic understanding of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba9d1e7e32986f6b3010a0a9c710cb5b1f8bf77" translate="yes" xml:space="preserve">
          <source>Before going further into template-driven forms, you should have a basic understanding of the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39ea417f7b18f1f328e8e078cd323d7e7c780e6b" translate="yes" xml:space="preserve">
          <source>Before going into the source structure, the next section shows how to fill out the HTML &lt;em&gt;template&lt;/em&gt; for the product list, using the provided sample data. This should give you an idea how easy it is to modify and update the page dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc7b12fb67f6014a2a594cc0af99c3d142d39db" translate="yes" xml:space="preserve">
          <source>Before learning template syntax, you should be familiar with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ee43513c9f4b63eb3ac4252e5589a69d05feb0" translate="yes" xml:space="preserve">
          <source>Before publishing a library to NPM, build it using the &lt;code&gt;--prod&lt;/code&gt; flag which will use the older compiler and runtime known as View Engine instead of Ivy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d610fad0d4a841b5b934aeb1045f3ad689f743a" translate="yes" xml:space="preserve">
          <source>Before reading about form validation, you should have a basic understanding of the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ade65586fac3f6c67ae72205b4dfe90fd2d49b" translate="yes" xml:space="preserve">
          <source>Before updating the &lt;code&gt;app-routing.module.ts&lt;/code&gt;, you'll need to consider an important rule. Currently, our empty path route redirects to &lt;code&gt;/heroes&lt;/code&gt;, which redirects to &lt;code&gt;/superheroes&lt;/code&gt;. This &lt;em&gt;won't&lt;/em&gt; work and is by design as the &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; handles redirects once at each level of routing configuration. This prevents chaining of redirects, which can lead to endless redirect loops.</source>
          <target state="translated">Перед обновлением &lt;code&gt;app-routing.module.ts&lt;/code&gt; вам необходимо учитывать важное правило. В настоящее время наш пустой путь перенаправляет на &lt;code&gt;/heroes&lt;/code&gt; , который перенаправляет на &lt;code&gt;/superheroes&lt;/code&gt; . Это &lt;em&gt;не&lt;/em&gt; сработает, так как &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; обрабатывает перенаправления один раз на каждом уровне конфигурации маршрутизации. Это предотвращает цепочку перенаправлений, что может привести к бесконечным циклам перенаправления.</target>
        </trans-unit>
        <trans-unit id="2adebd0eb41e8f1c544074f8aa1193608616af7e" translate="yes" xml:space="preserve">
          <source>Before using the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive in a two-way data binding, you must import the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; and add it to the NgModule's &lt;code&gt;imports&lt;/code&gt; list. Learn more about the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;forms#ngModel&quot;&gt;Forms&lt;/a&gt;.</source>
          <target state="translated">Перед использованием директивы &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; в двусторонней привязке данных вы должны импортировать &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; и добавить его в список &lt;code&gt;imports&lt;/code&gt; NgModule . Узнайте больше о &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; в &lt;a href=&quot;forms#ngModel&quot;&gt;Forms&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50199f21b3e8912b7bc32276a7bc2c2750704da6" translate="yes" xml:space="preserve">
          <source>Before working with lifecycle hooks, you should have a basic understanding of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c082dce0b08f61c3e4a5f8021cefd8d4ab1289e7" translate="yes" xml:space="preserve">
          <source>Before working with the &lt;code&gt;HTTPClientModule&lt;/code&gt;, you should have a basic understanding of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfeb39e482f633aad50966874d14d00ba4e281e9" translate="yes" xml:space="preserve">
          <source>Before writing tests for your Angular app, you should have a basic understanding of the following concepts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974b03fe0fa1d7a6ed31bea40eba5437fd1ccda1" translate="yes" xml:space="preserve">
          <source>Before you begin, make sure your development environment includes &lt;code&gt;Node.js&amp;reg;&lt;/code&gt; and an npm package manager.</source>
          <target state="translated">Прежде чем начать, убедитесь, что ваша среда разработки включает &lt;code&gt;Node.js&amp;reg;&lt;/code&gt; и менеджер пакетов npm.</target>
        </trans-unit>
        <trans-unit id="919d29e47188004264e245ab74f85d9fecbc4581" translate="yes" xml:space="preserve">
          <source>Before you can add components you have to define an anchor point to tell Angular where to insert components.</source>
          <target state="translated">Перед тем,как добавлять компоненты,необходимо определить точку привязки,чтобы определить,куда вставлять компоненты под углом.</target>
        </trans-unit>
        <trans-unit id="d407fa25385c1b1dc197a82d6a0637678cc33a4a" translate="yes" xml:space="preserve">
          <source>Before you can use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, you need to import the Angular &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;. Most apps do so in the root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41aa0ac3fdb9b01b90db0924c5bc2b5cb4b0c80e" translate="yes" xml:space="preserve">
          <source>Before you can use Angular's HTTP client, you must configure your app to use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7480739e4d2bfb1b2c1291af6d204a69a044469" translate="yes" xml:space="preserve">
          <source>Before you can use Angular's HTTP client, you must set up your app to use &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Прежде чем вы сможете использовать HTTP-клиент Angular, вы должны настроить приложение на использование &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="72fa1b5683e2296972d6d0e97ba335789c635353" translate="yes" xml:space="preserve">
          <source>Before you can use the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, you need to import the Angular &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt;. Most apps do so in the root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">Прежде чем вы сможете использовать &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , вам необходимо импортировать Angular &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;HttpClientModule&lt;/a&gt;&lt;/code&gt; . Большинство приложений делают это в корневом &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="842beb51ca9c5417a27f472386d0e0d52dcc074f" translate="yes" xml:space="preserve">
          <source>Before:</source>
          <target state="translated">Before:</target>
        </trans-unit>
        <trans-unit id="ce372ed4595d7ee7562947bc03d901bf1fa43b3a" translate="yes" xml:space="preserve">
          <source>Begin a main section heading with the markdown &lt;code&gt;##&lt;/code&gt; characters. Alternatively, you can write the equivalent &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; HTML tag.</source>
          <target state="translated">Начните заголовок основного раздела с символов &lt;code&gt;##&lt;/code&gt; уценки . Кроме того, вы можете написать эквивалентный &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; HTML.</target>
        </trans-unit>
        <trans-unit id="77b54c71ffe46696eb1cabec8c578b7430387d98" translate="yes" xml:space="preserve">
          <source>Begin a secondary heading with the markdown &lt;code&gt;###&lt;/code&gt; characters. Alternatively, you can write the equivalent &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; HTML tag.</source>
          <target state="translated">Начните вторичный заголовок с уценки &lt;code&gt;###&lt;/code&gt; символов. Кроме того, вы можете написать эквивалентный &lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt; HTML.</target>
        </trans-unit>
        <trans-unit id="68ffa95f663f190607f3c471b59d100f255b0429" translate="yes" xml:space="preserve">
          <source>Begin by adding &lt;code&gt;&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; to the list of imported symbols.</source>
          <target state="translated">Начните с добавления &lt;code&gt;&lt;a href=&quot;../api/core/hostlistener&quot;&gt;HostListener&lt;/a&gt;&lt;/code&gt; в список импортируемых символов.</target>
        </trans-unit>
        <trans-unit id="8d5d9a6ea323fdd57d9e1215bac5a83bb80d88b5" translate="yes" xml:space="preserve">
          <source>Begin by adding &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; to the list of symbols imported from &lt;code&gt;@angular/core&lt;/code&gt;.</source>
          <target state="translated">Начните с добавления &lt;code&gt;&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; в список символов, импортированных из &lt;code&gt;@angular/core&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c07371f1cc4e4d389c0f8860f26b0137449c4516" translate="yes" xml:space="preserve">
          <source>Begin by imitating the heroes feature:</source>
          <target state="translated">Начните с подражания героям:</target>
        </trans-unit>
        <trans-unit id="eee54c68da088a30ccd7f437a9e53e1b0bb1026c" translate="yes" xml:space="preserve">
          <source>Begin by installing TypeScript to the project.</source>
          <target state="translated">Начните с установки TypeScript в проект.</target>
        </trans-unit>
        <trans-unit id="c985c7dda4282902d2451041dfd2a01b559349f8" translate="yes" xml:space="preserve">
          <source>Begin by putting re-usable, preparatory code in a &lt;em&gt;setup&lt;/em&gt; function instead of &lt;code&gt;beforeEach()&lt;/code&gt;.</source>
          <target state="translated">Начните с помещения повторно используемого подготовительного кода в функцию &lt;em&gt;установки&lt;/em&gt; вместо &lt;code&gt;beforeEach()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed8e17d942d58d6ace8c56724dbb3f4cb3ceab40" translate="yes" xml:space="preserve">
          <source>Begin with a basic version of the app that navigates between two empty views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc6969f62da20a6afb1f322ebadb8b41abaac3c" translate="yes" xml:space="preserve">
          <source>Begin with a simple version of the app that navigates between two empty views.</source>
          <target state="translated">Начните с простой версии приложения,которое перемещается между двумя пустыми видами.</target>
        </trans-unit>
        <trans-unit id="d6548854aa27000232e1d1aba5f49a3acb40b7ae" translate="yes" xml:space="preserve">
          <source>Begin with the first form of data binding&amp;mdash;interpolation&amp;mdash;to see how much richer template HTML can be.</source>
          <target state="translated">Начните с первой формы привязки данных - интерполяции - чтобы увидеть, насколько богатым может быть шаблон HTML.</target>
        </trans-unit>
        <trans-unit id="592d6d7c575706de86d4d071fdf75790be29837c" translate="yes" xml:space="preserve">
          <source>Beginning with Angular 6.0, the preferred way to create a singleton service is to set &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;root&lt;/code&gt; on the service's &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator. This tells Angular to provide the service in the application root.</source>
          <target state="translated">Начиная с угловыми 6.0, предпочтительным способом создания службы одноплодной, чтобы установить &lt;code&gt;&lt;a href=&quot;../api/core/injectable#providedIn&quot;&gt;providedIn&lt;/a&gt;&lt;/code&gt; в &lt;code&gt;root&lt;/code&gt; на обслуживание это &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; декоратора. Это говорит Angular о предоставлении сервиса в корне приложения.</target>
        </trans-unit>
        <trans-unit id="d0385b0bf87c6f88582259958a9f27bfb7f3be7f" translate="yes" xml:space="preserve">
          <source>Beginning with Angular 6.0, the preferred way to create a singleton service is to set &lt;code&gt;providedIn&lt;/code&gt; to &lt;code&gt;root&lt;/code&gt; on the service's &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator. This tells Angular to provide the service in the application root.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b66259b5d10f5e4dfd17260980e9448c27c8990" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Angular creates a new control for each input element, provided you have set up a &lt;code&gt;name&lt;/code&gt; attribute and two-way binding for each input.</source>
          <target state="translated">За кулисами Angular создает новый элемент управления для каждого элемента ввода при условии, что вы установили атрибут &lt;code&gt;name&lt;/code&gt; и двустороннюю привязку для каждого элемента ввода.</target>
        </trans-unit>
        <trans-unit id="f1577aef7d5c90af9c045dcc7b86cbeeacf9fc65" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Angular sets the &lt;code&gt;logger&lt;/code&gt; parameter to the full service registered under the &lt;code&gt;LoggingService&lt;/code&gt; token, which happens to be the &lt;code&gt;DateLoggerService&lt;/code&gt; instance that was &lt;a href=&quot;dependency-injection-in-action#useclass&quot;&gt;provided above&lt;/a&gt;.</source>
          <target state="translated">За кулисами Angular устанавливает для параметра &lt;code&gt;logger&lt;/code&gt; полную службу, зарегистрированную под токеном &lt;code&gt;LoggingService&lt;/code&gt; , который является экземпляром &lt;code&gt;DateLoggerService&lt;/code&gt; , который был &lt;a href=&quot;dependency-injection-in-action#useclass&quot;&gt;предоставлен выше&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e82af82e7e882e82e6f17fc0109858d570cb6fa5" translate="yes" xml:space="preserve">
          <source>Behind the scenes, each component sets up its own injector with zero, one, or more providers defined for that component itself.</source>
          <target state="translated">За сценами каждый компонент устанавливает свой собственный инжектор с нулем,одним или несколькими провайдерами,определенными для этого компонента.</target>
        </trans-unit>
        <trans-unit id="f1b2830245d3e2ff98c8e67a5f1a960600c64153" translate="yes" xml:space="preserve">
          <source>Behind this behavior is the router's &lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt; guard. The guard gives you a chance to clean-up or ask the user's permission before navigating away from the current view.</source>
          <target state="translated">За этим поведением стоит &lt;code&gt;&lt;a href=&quot;../api/router/candeactivate&quot;&gt;CanDeactivate&lt;/a&gt;&lt;/code&gt; маршрутизатора . Охранник дает вам возможность очистить или спросить разрешения пользователя, прежде чем уйти от текущего вида.</target>
        </trans-unit>
        <trans-unit id="3a5f33c6e631fd4b9b6828f4a98022745cdde1db" translate="yes" xml:space="preserve">
          <source>Below is the &quot;Little Tour of Heroes&quot; component.</source>
          <target state="translated">Ниже представлен компонент &quot;Маленький тур героев&quot;.</target>
        </trans-unit>
        <trans-unit id="a6d54f04eb5f64dea38939b332ee485453c0ed14" translate="yes" xml:space="preserve">
          <source>Below is the content of our example &lt;code&gt;select&lt;/code&gt; ICU expression in the component template:</source>
          <target state="translated">Ниже приведено содержание нашего примера &lt;code&gt;select&lt;/code&gt; выражения ICU в шаблоне компонента:</target>
        </trans-unit>
        <trans-unit id="4e0f6ab73f39d0ec2a1809d528963c447a13f3b6" translate="yes" xml:space="preserve">
          <source>Below it add an HTML unordered list (&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;)</source>
          <target state="translated">Ниже добавьте неупорядоченный список HTML ( &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b84a1be2c29811cc7905b853f73dea56408133ea" translate="yes" xml:space="preserve">
          <source>Below the &lt;code&gt;clearCart()&lt;/code&gt; method, define a new &lt;code&gt;getShippingPrices()&lt;/code&gt; method that uses the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;#get()&lt;/code&gt; method to retrieve the shipping data (types and prices).</source>
          <target state="translated">Ниже &lt;code&gt;clearCart()&lt;/code&gt; определите новый &lt;code&gt;getShippingPrices()&lt;/code&gt; который использует метод &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;#get()&lt;/code&gt; для получения данных о доставке (типы и цены).</target>
        </trans-unit>
        <trans-unit id="c876a01df6b2f0af560f30fe53ac86ce42ab2d2c" translate="yes" xml:space="preserve">
          <source>Below the &lt;code&gt;clearCart()&lt;/code&gt; method, define a new &lt;code&gt;getShippingPrices()&lt;/code&gt; method that uses the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;&lt;code&gt;get()&lt;/code&gt; method to retrieve the shipping data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4134985fe5ce5666849835575205259905697417" translate="yes" xml:space="preserve">
          <source>Benefits of a routing module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc0379f41ff0ba0e46288baf9de039b96b071ca" translate="yes" xml:space="preserve">
          <source>Besides their different API, there are two important internal differences between &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; that affect the behavior of hybrid applications:</source>
          <target state="translated">Помимо их различного API, есть два важных внутренних различия между &lt;code&gt;&lt;a href=&quot;downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; , которые влияют на поведение гибридных приложений:</target>
        </trans-unit>
        <trans-unit id="1aebe50f6c72461f39b5c56140bf2bf0b673fa65" translate="yes" xml:space="preserve">
          <source>Besides using the CLI on the command line, you can also manipulate files directly in the app's source folder and configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9faf878af4c349c49c9509b240e538390447757b" translate="yes" xml:space="preserve">
          <source>Besides using the CLI on the command line, you can also use an interactive development environment like &lt;a href=&quot;https://angularconsole.com/&quot;&gt;Angular Console&lt;/a&gt;, or manipulate files directly in the app's source folder and configuration files.</source>
          <target state="translated">Помимо использования CLI в командной строке, вы также можете использовать интерактивную среду разработки, такую ​​как &lt;a href=&quot;https://angularconsole.com/&quot;&gt;Angular Console&lt;/a&gt; , или манипулировать файлами непосредственно в исходной папке приложения и файлах конфигурации.</target>
        </trans-unit>
        <trans-unit id="eb8de9ce8757ee3c542141ac80ff3b33dc04edff" translate="yes" xml:space="preserve">
          <source>Best practices</source>
          <target state="translated">Передовые методы</target>
        </trans-unit>
        <trans-unit id="9ff1983a50453d1cae8d9a5eebf8b44e9ceb723c" translate="yes" xml:space="preserve">
          <source>Better developer ergonomics with strict typing for &lt;code&gt;@angular/forms&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ef826d9fb859d576a0907d18d1a66926bd8669" translate="yes" xml:space="preserve">
          <source>Beyond that, you may interleave the two frameworks. You always cross the boundary between the two frameworks by one of two ways:</source>
          <target state="translated">Кроме того,вы можете чередовать эти два каркаса.Вы всегда пересекаете границу между двумя фреймворками одним из двух способов:</target>
        </trans-unit>
        <trans-unit id="16d85a9f9536bdb143337018c722df8b0f3c81b3" translate="yes" xml:space="preserve">
          <source>Bind component methods to user events, like keystrokes and clicks.</source>
          <target state="translated">Привязывайте методы компонентов к пользовательским событиям,таким как нажатия клавиш и кликов.</target>
        </trans-unit>
        <trans-unit id="5e9e55d218847019581b70053a614ddd2a5a9018" translate="yes" xml:space="preserve">
          <source>Bind data properties to each form control using the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; two-way data-binding syntax.</source>
          <target state="translated">Свяжите свойства данных с каждым &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; управления формы, используя двусторонний синтаксис привязки данных ngModel .</target>
        </trans-unit>
        <trans-unit id="e0ff0b03776800840d9030209136719fe8494575" translate="yes" xml:space="preserve">
          <source>Bind form controls to data properties using the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; directive and two-way data-binding syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33154f63694b74d4827c50175132e4f395023e05" translate="yes" xml:space="preserve">
          <source>Bind input controls to data properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1cd87627492a075b5e1b02e1f2c3ff5fdc07ba" translate="yes" xml:space="preserve">
          <source>Bind the &lt;code&gt;HeroesComponent.selectedHero&lt;/code&gt; to the element's &lt;code&gt;hero&lt;/code&gt; property like this.</source>
          <target state="translated">Свяжите &lt;code&gt;HeroesComponent.selectedHero&lt;/code&gt; со свойством &lt;code&gt;hero&lt;/code&gt; элемента следующим образом.</target>
        </trans-unit>
        <trans-unit id="cb518f94f4f55866c328e383a2856fb5473ed9a4" translate="yes" xml:space="preserve">
          <source>Bind the button's click event to a hero-creation method, &lt;code&gt;newHero()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1a38a295ddc34a08b0e541437a179ec69851e1" translate="yes" xml:space="preserve">
          <source>Bind the form's &lt;a href=&quot;../api/forms/ngform#properties&quot;&gt;&lt;code&gt;ngSubmit&lt;/code&gt;&lt;/a&gt; event property to the hero-form component's &lt;code&gt;onSubmit()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2792d4ffa16115ba7c001505491305b2d5c88f6" translate="yes" xml:space="preserve">
          <source>Bind to a second property</source>
          <target state="translated">Привязать к второй собственности</target>
        </trans-unit>
        <trans-unit id="697a78adb0268f346f175f0419a81cb28cea06a1" translate="yes" xml:space="preserve">
          <source>Bind to an &lt;code&gt;@Input&lt;/code&gt; alias</source>
          <target state="translated">Привязать к псевдониму &lt;code&gt;@Input&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5662c554f6ba4f36018195821022c704fa19317c" translate="yes" xml:space="preserve">
          <source>Bind to the &lt;code&gt;MessageService&lt;/code&gt;</source>
          <target state="translated">Привязать к &lt;code&gt;MessageService&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9af2bb479915615a2ff7e67d9debd7fe3d47d969" translate="yes" xml:space="preserve">
          <source>Bind to the &lt;code&gt;click&lt;/code&gt; event</source>
          <target state="translated">Привязать к &lt;code&gt;click&lt;/code&gt; событию</target>
        </trans-unit>
        <trans-unit id="21c9dd5766d21c48bc079c417359f429b538c0e9" translate="yes" xml:space="preserve">
          <source>Bind to the &lt;code&gt;hidden&lt;/code&gt; property</source>
          <target state="translated">Привязать к &lt;code&gt;hidden&lt;/code&gt; собственности</target>
        </trans-unit>
        <trans-unit id="f2a12bb43f4f20a3308c6e7f43110abc164b3cbe" translate="yes" xml:space="preserve">
          <source>Bind to the &lt;code&gt;href&lt;/code&gt; property</source>
          <target state="translated">Привязать к свойству &lt;code&gt;href&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c50c22644a97886a75576f3ad55786f5139b6a3f" translate="yes" xml:space="preserve">
          <source>Bind to the &lt;code&gt;src&lt;/code&gt; property</source>
          <target state="translated">Привязать к свойству &lt;code&gt;src&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b5950f11f19abbc55748a4b766158ae890c0276e" translate="yes" xml:space="preserve">
          <source>Bind values between components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47592223c16cb8585ef509e09353d7b2abfd8d49" translate="yes" xml:space="preserve">
          <source>Binding ARIA attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d134d09d5f4e94212c7d30c73cde26bde681995" translate="yes" xml:space="preserve">
          <source>Binding Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c74318c4ebf86394efdd83afd59fbdcebcf11b6" translate="yes" xml:space="preserve">
          <source>Binding definition</source>
          <target state="translated">Связывающее определение</target>
        </trans-unit>
        <trans-unit id="5839396aa9317f9099934df61297930a2f609f5a" translate="yes" xml:space="preserve">
          <source>Binding expressions in the template that refer to properties of &lt;code&gt;selectedHero&lt;/code&gt;&amp;mdash;expressions like &lt;code&gt;{{selectedHero.name}}&lt;/code&gt;&amp;mdash;&lt;em&gt;must fail&lt;/em&gt; because there is no selected hero.</source>
          <target state="translated">Привязка выражений в шаблоне, которые ссылаются на свойства &lt;code&gt;selectedHero&lt;/code&gt; - выражения вроде &lt;code&gt;{{selectedHero.name}}&lt;/code&gt; - &lt;em&gt;должна завершиться ошибкой&lt;/em&gt; потому что нет выбранного героя.</target>
        </trans-unit>
        <trans-unit id="1893c99928000b73c034f5d13d20f170b63a568e" translate="yes" xml:space="preserve">
          <source>Binding happens when Angular performs &lt;strong&gt;change detection&lt;/strong&gt;.</source>
          <target state="translated">Связывание происходит, когда Angular выполняет &lt;strong&gt;обнаружение изменений&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7bd59c5a7fe5f05639190e405278fb2261e77836" translate="yes" xml:space="preserve">
          <source>Binding syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f17435a7231c370dd9b277051fa279efb03be5c" translate="yes" xml:space="preserve">
          <source>Binding syntax: an overview</source>
          <target state="translated">Синтаксис связующего звена:обзор</target>
        </trans-unit>
        <trans-unit id="d5647a339d9f5d3f491fea7dce9161e510086700" translate="yes" xml:space="preserve">
          <source>Binding targets</source>
          <target state="translated">Связывающие цели</target>
        </trans-unit>
        <trans-unit id="a982e338e15a591ad314d19385a8465d3771cb08" translate="yes" xml:space="preserve">
          <source>Binding to &lt;code&gt;colspan&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1cd0d1adc0c5198881b5fa4d0d0d93ed50065f6" translate="yes" xml:space="preserve">
          <source>Binding to &lt;code&gt;innerText&lt;/code&gt; in &lt;code&gt;platform-server&lt;/code&gt;</source>
          <target state="translated">Привязка к &lt;code&gt;innerText&lt;/code&gt; в &lt;code&gt;platform-server&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2e5336d4d941fc97797cbe0832ef02f3f640bb9" translate="yes" xml:space="preserve">
          <source>Binding to a property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9cfb8a8abcf1aa0ba62678633b4cd778b8d7a0" translate="yes" xml:space="preserve">
          <source>Binding to a single CSS &lt;code&gt;class&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b65098a59c5ee8b6c9dabf70ba5b3148fe25310" translate="yes" xml:space="preserve">
          <source>Binding to a single style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bde9dd651e82f521b541fdc41775c9aa970888" translate="yes" xml:space="preserve">
          <source>Binding to an &lt;code&gt;@Input&lt;/code&gt; property</source>
          <target state="translated">Привязка к &lt;code&gt;@Input&lt;/code&gt; свойству</target>
        </trans-unit>
        <trans-unit id="3f2e69830b8c0be6838669447ee2c213786fcbf8" translate="yes" xml:space="preserve">
          <source>Binding to an attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb97ee066e6802a64304ae39dded8ff71691fa30" translate="yes" xml:space="preserve">
          <source>Binding to events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf6b7d4e34b730bb276803588b70b02e34630e3" translate="yes" xml:space="preserve">
          <source>Binding to multiple CSS classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa96d5fd278e78320d12bff2da7f173c23bea10" translate="yes" xml:space="preserve">
          <source>Binding to multiple styles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49966c759fad1cab8449cbae782ea4be4768a782" translate="yes" xml:space="preserve">
          <source>Binding to the &lt;code&gt;class&lt;/code&gt; attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2903fdce986b4bc5dc0928e7c935dc3e839d92fa" translate="yes" xml:space="preserve">
          <source>Binding to the style attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1008f5e8313e01e8a35aaef1612e93ffb2fdf201" translate="yes" xml:space="preserve">
          <source>Binding to user input events</source>
          <target state="translated">Привязка к событиям пользовательского ввода</target>
        </trans-unit>
        <trans-unit id="a0900669bf69957ea18b3c6bc31b0c068974fb65" translate="yes" xml:space="preserve">
          <source>Binding types and targets</source>
          <target state="translated">Связывающие типы и цели</target>
        </trans-unit>
        <trans-unit id="3d8a515e1c9d4c4474858b033088bbcd501cde60" translate="yes" xml:space="preserve">
          <source>Binding types other than interpolation have a &lt;strong&gt;target name&lt;/strong&gt; to the left of the equal sign, either surrounded by punctuation, &lt;code&gt;[]&lt;/code&gt; or &lt;code&gt;()&lt;/code&gt;, or preceded by a prefix: &lt;code&gt;bind-&lt;/code&gt;, &lt;code&gt;on-&lt;/code&gt;, &lt;code&gt;bindon-&lt;/code&gt;.</source>
          <target state="translated">Типы привязки, отличные от интерполяции, имеют &lt;strong&gt;целевое имя&lt;/strong&gt; слева от знака равенства, либо окруженные пунктуацией, &lt;code&gt;[]&lt;/code&gt; или &lt;code&gt;()&lt;/code&gt; , либо с префиксом: &lt;code&gt;bind-&lt;/code&gt; , &lt;code&gt;on-&lt;/code&gt; , &lt;code&gt;bindon-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9489430053bbe362e29d4adc605c0ee490984678" translate="yes" xml:space="preserve">
          <source>Bindings/interpolation</source>
          <target state="translated">Bindings/interpolation</target>
        </trans-unit>
        <trans-unit id="c5508d22bc8524cbfc21537e7df0e0da3d89023d" translate="yes" xml:space="preserve">
          <source>Bindings:</source>
          <target state="translated">Bindings:</target>
        </trans-unit>
        <trans-unit id="6fdec0a2d226423ce21951dc8d539e2b83505cca" translate="yes" xml:space="preserve">
          <source>Binds a host element property (here, the CSS class &lt;code&gt;valid&lt;/code&gt;) to a directive/component property (&lt;code&gt;isValid&lt;/code&gt;).</source>
          <target state="translated">Связывает свойство элемента хоста (здесь класс CSS &lt;code&gt;valid&lt;/code&gt; ) со свойством директивы / компонента ( &lt;code&gt;isValid&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="2a03f296a2db9a927b9dbda94190effddfbe9a35" translate="yes" xml:space="preserve">
          <source>Binds a property to an interpolated string, for example, &quot;Hello Seabiscuit&quot;. Equivalent to: &lt;code&gt;&amp;lt;div [title]=&quot;'Hello ' + ponyName&quot;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">Связывает свойство с интерполированной строкой, например, &amp;laquo;Hello Seabiscuit&amp;raquo;. Эквивалентно: &lt;code&gt;&amp;lt;div [title]=&quot;'Hello ' + ponyName&quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d7ccc5ce4a07981d8fbbdb0cd830cbe571385e3" translate="yes" xml:space="preserve">
          <source>Binds an existing &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to a DOM element.</source>
          <target state="translated">Связывает существующую &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="9ccd1d736a8432535c2d3c15a12d59d85c60d529" translate="yes" xml:space="preserve">
          <source>Binds an existing &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; to a DOM element.</source>
          <target state="translated">Связывает существующую &lt;code&gt;&lt;a href=&quot;forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; с элементом DOM.</target>
        </trans-unit>
        <trans-unit id="16fe924da3cac78aab1564f33684600fc3e54d31" translate="yes" xml:space="preserve">
          <source>Binds attribute &lt;code&gt;role&lt;/code&gt; to the result of expression &lt;code&gt;myAriaRole&lt;/code&gt;.</source>
          <target state="translated">Привязывает &lt;code&gt;role&lt;/code&gt; атрибута к результату выражения &lt;code&gt;myAriaRole&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f54affac6186ad384ce54918e8587b01c740b31d" translate="yes" xml:space="preserve">
          <source>Binds property &lt;code&gt;value&lt;/code&gt; to the result of expression &lt;code&gt;firstName&lt;/code&gt;.</source>
          <target state="translated">Привязывает &lt;code&gt;value&lt;/code&gt; свойства к результату выражения &lt;code&gt;firstName&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f28cdf8e45d544332ba50c27586202007f4d2bd8" translate="yes" xml:space="preserve">
          <source>Binds style property &lt;code&gt;width&lt;/code&gt; to the result of expression &lt;code&gt;mySize&lt;/code&gt; in pixels. Units are optional.</source>
          <target state="translated">&lt;code&gt;mySize&lt;/code&gt; &lt;code&gt;width&lt;/code&gt; свойства стиля к результату выражения mySize в пикселях. Единицы не являются обязательными.</target>
        </trans-unit>
        <trans-unit id="17a444202922e95677dbac286aa416c23efd0983" translate="yes" xml:space="preserve">
          <source>Binds text content to an interpolated string, for example, &quot;Hello Seabiscuit&quot;.</source>
          <target state="translated">Привязывает текстовое содержимое к интерполированной строке,например,&quot;Hello Seabiscuit&quot;.</target>
        </trans-unit>
        <trans-unit id="8a53a7d5df799e913a7ec437d4dd501a26095ee7" translate="yes" xml:space="preserve">
          <source>Binds the first result of the component content query (&lt;code&gt;myPredicate&lt;/code&gt;) to a property (&lt;code&gt;myChildComponent&lt;/code&gt;) of the class.</source>
          <target state="translated">Привязывает первый результат запроса контента компонента ( &lt;code&gt;myPredicate&lt;/code&gt; ) к свойству ( &lt;code&gt;myChildComponent&lt;/code&gt; ) класса.</target>
        </trans-unit>
        <trans-unit id="d462ed51c89027f3d448e6304b58618b5f4dc0bb" translate="yes" xml:space="preserve">
          <source>Binds the first result of the component view query (&lt;code&gt;myPredicate&lt;/code&gt;) to a property (&lt;code&gt;myChildComponent&lt;/code&gt;) of the class. Not available for directives.</source>
          <target state="translated">Привязывает первый результат запроса представления компонента ( &lt;code&gt;myPredicate&lt;/code&gt; ) к свойству ( &lt;code&gt;myChildComponent&lt;/code&gt; ) класса. Недоступно для директив.</target>
        </trans-unit>
        <trans-unit id="0e092be7e1c05ee4dd0e489bb77875249aed43ca" translate="yes" xml:space="preserve">
          <source>Binds the presence of CSS classes on the element to the truthiness of the associated map values. The right-hand expression should return {class-name: true/false} map.</source>
          <target state="translated">Привязывает наличие классов CSS на элементе к правдивости соответствующих значений карты.Выражение правой руки должно возвращать {class-name:true/false}карту.</target>
        </trans-unit>
        <trans-unit id="671bb5d878441fb7fa959c57f931fb9e81582167" translate="yes" xml:space="preserve">
          <source>Binds the presence of the CSS class &lt;code&gt;extra-sparkle&lt;/code&gt; on the element to the truthiness of the expression &lt;code&gt;isDelightful&lt;/code&gt;.</source>
          <target state="translated">Привязывает наличие &lt;code&gt;extra-sparkle&lt;/code&gt; элемента в классе CSS к элементу с правдивостью выражения &lt;code&gt;isDelightful&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a75de65e1c312de631f318f4e7d379f7e3b0db7e" translate="yes" xml:space="preserve">
          <source>Binds the results of the component content query (&lt;code&gt;myPredicate&lt;/code&gt;) to a property (&lt;code&gt;myChildComponents&lt;/code&gt;) of the class.</source>
          <target state="translated">Привязывает результаты запроса содержимого компонента ( &lt;code&gt;myPredicate&lt;/code&gt; ) к свойству ( &lt;code&gt;myChildComponents&lt;/code&gt; ) класса.</target>
        </trans-unit>
        <trans-unit id="2153c3e38b198c59245e2713a80794aac2809840" translate="yes" xml:space="preserve">
          <source>Binds the results of the component view query (&lt;code&gt;myPredicate&lt;/code&gt;) to a property (&lt;code&gt;myChildComponents&lt;/code&gt;) of the class. Not available for directives.</source>
          <target state="translated">Связывает результаты запроса представления компонента ( &lt;code&gt;myPredicate&lt;/code&gt; ) со свойством ( &lt;code&gt;myChildComponents&lt;/code&gt; ) класса. Недоступно для директив.</target>
        </trans-unit>
        <trans-unit id="c24315eb20cc1f5a565ec08f29abab31c0925f1a" translate="yes" xml:space="preserve">
          <source>Blob</source>
          <target state="translated">Blob</target>
        </trans-unit>
        <trans-unit id="226ebb87480ef673fc8c86d3504690e25d113738" translate="yes" xml:space="preserve">
          <source>Bodies are not enforced to be immutable, as they can include a reference to any user-defined data type. However, interceptors should take care to preserve idempotence by treating them as such.</source>
          <target state="translated">Тела не принуждаются к неизменности,поскольку они могут включать ссылку на любой определяемый пользователем тип данных.Однако перехватчики должны заботиться о сохранении идолопоклонства,рассматривая их как таковые.</target>
        </trans-unit>
        <trans-unit id="4a7fdd8c17425252332ea0e89a35722b72d83135" translate="yes" xml:space="preserve">
          <source>Books</source>
          <target state="translated">Books</target>
        </trans-unit>
        <trans-unit id="af107074fdc94049367385cfa9e21226f2eb6a09" translate="yes" xml:space="preserve">
          <source>Boolean (marked deprecated in v5): &lt;code&gt;true&lt;/code&gt; for symbol and false for &lt;code&gt;code&lt;/code&gt;.</source>
          <target state="translated">Логическое (помечено как устаревшее в v5): &lt;code&gt;true&lt;/code&gt; для символа и false для &lt;code&gt;code&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b4ee3c164f30fd674db7923067c5585c6016a895" translate="yes" xml:space="preserve">
          <source>Boolean and enumerated options</source>
          <target state="translated">логические и перечисленные варианты</target>
        </trans-unit>
        <trans-unit id="ee3701cfb07b487ff0074c548b7c853abc094675" translate="yes" xml:space="preserve">
          <source>Boolean options have two forms: &lt;code&gt;--thisOption&lt;/code&gt; sets the flag, &lt;code&gt;--noThisOption&lt;/code&gt; clears it. If neither option is supplied, the flag remains in its default state, as listed in the reference documentation.</source>
          <target state="translated">Булевы параметры имеют две формы: &lt;code&gt;--thisOption&lt;/code&gt; устанавливает флаг, &lt;code&gt;--noThisOption&lt;/code&gt; очищает его. Если ни одна из опций не указана, флаг остается в своем состоянии по умолчанию, как указано в справочной документации.</target>
        </trans-unit>
        <trans-unit id="43aac281118e73bd2de105009d38e4c096ce545e" translate="yes" xml:space="preserve">
          <source>Boolean value matching</source>
          <target state="translated">булевское сопоставление значений</target>
        </trans-unit>
        <trans-unit id="22cb4db816b227d666bef5f940023e6d431b8292" translate="yes" xml:space="preserve">
          <source>Boolean values in transitions</source>
          <target state="translated">булевы значения в переходах</target>
        </trans-unit>
        <trans-unit id="89ec4ec2bf400e823f3ca49d0cb938b0fedd7bab" translate="yes" xml:space="preserve">
          <source>Bootstrap</source>
          <target state="translated">Bootstrap</target>
        </trans-unit>
        <trans-unit id="984a1c95ee8f803062739b46151930f8fcc64cc3" translate="yes" xml:space="preserve">
          <source>Bootstrap The runtime instance of this class contains a &lt;a href=&quot;upgrademodule#bootstrap&quot;&gt;`bootstrap()`&lt;/a&gt; method, which you use to bootstrap the top level AngularJS module onto an element in the DOM for the hybrid upgrade app.</source>
          <target state="translated">Bootstrap Экземпляр среды выполнения этого класса содержит метод &lt;a href=&quot;upgrademodule#bootstrap&quot;&gt;`bootstrap ()`&lt;/a&gt; , который используется для начальной загрузки модуля AngularJS верхнего уровня на элемент в DOM для гибридного приложения обновления.</target>
        </trans-unit>
        <trans-unit id="b2bfe58675219a1dbbfc6b3475d2142be8257202" translate="yes" xml:space="preserve">
          <source>Bootstrap a hybrid AngularJS / Angular application.</source>
          <target state="translated">Bootstrap гибрид AngularJS/Угловое приложение.</target>
        </trans-unit>
        <trans-unit id="51ee9ae036bd74ef9a86c64b16240b06c2a27ba8" translate="yes" xml:space="preserve">
          <source>Bootstrap a new component at the root level of the application.</source>
          <target state="translated">Запишите новый компонент на корневом уровне приложения.</target>
        </trans-unit>
        <trans-unit id="e4a6b7f980306983d4418b9e062151bb02f12137" translate="yes" xml:space="preserve">
          <source>Bootstrap an AngularJS application from this NgModule</source>
          <target state="translated">Bootstrap приложение AngularJS из этого NgModule</target>
        </trans-unit>
        <trans-unit id="c43ac6907ee5f49cf786f03c5183c92913a7be9f" translate="yes" xml:space="preserve">
          <source>Bootstrap process</source>
          <target state="translated">Bootstrap-процесс</target>
        </trans-unit>
        <trans-unit id="f816445d2cdd3ec11a7f0bc29a3553b746ba7f58" translate="yes" xml:space="preserve">
          <source>Bootstrap the &lt;code&gt;AppModule&lt;/code&gt; in &lt;code&gt;main.ts&lt;/code&gt;.</source>
          <target state="translated">Грузиться &lt;code&gt;AppModule&lt;/code&gt; в &lt;code&gt;main.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8e9582bb8e53711c79f2e9de1050077a16c41c3" translate="yes" xml:space="preserve">
          <source>Bootstrap the app with those providers.</source>
          <target state="translated">Привяжите приложение к этим провайдерам.</target>
        </trans-unit>
        <trans-unit id="09273e0b3502cd35874b01a3ba91c106f87a667f" translate="yes" xml:space="preserve">
          <source>Bootstrapping</source>
          <target state="translated">Bootstrapping</target>
        </trans-unit>
        <trans-unit id="5a7db5fc491694b2f101ec433ecf1bf5688abf3d" translate="yes" xml:space="preserve">
          <source>Bootstrapping a hybrid PhoneCat</source>
          <target state="translated">Сапоги гибридной кошки PhoneCat</target>
        </trans-unit>
        <trans-unit id="9aa9a98e544eb5606246801d9bd2a8d5e0833195" translate="yes" xml:space="preserve">
          <source>Bootstrapping hybrid applications</source>
          <target state="translated">Гибридные приложения Bootstrapping</target>
        </trans-unit>
        <trans-unit id="09c0fece45f5112a211482199d5921f05490b2bf" translate="yes" xml:space="preserve">
          <source>Bootstrapping of a hybrid Angular application which contains both of the frameworks coexisting in a single application.</source>
          <target state="translated">Bootstrapping гибридного приложения Angular,которое содержит оба фреймворка,сосуществующих в одном приложении.</target>
        </trans-unit>
        <trans-unit id="0ca02e3c0ffaf3a6883168e9851d5db6a98acc44" translate="yes" xml:space="preserve">
          <source>Bootstrapping with &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;</source>
          <target state="translated">Начальная загрузка с &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be52c694b99b80c209e0ec9f6005df403bbc8030" translate="yes" xml:space="preserve">
          <source>Bootstraps the app, using the root component from the specified &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Загружает приложение, используя корневой компонент из указанного &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc574769bfd4b0921435e1d96eebd017fb7655ce" translate="yes" xml:space="preserve">
          <source>Bootstraps the worker ui.</source>
          <target state="translated">Ступеньки для рабочего ui.</target>
        </trans-unit>
        <trans-unit id="843c4cada239f4bc2cc6160b3122b53d22b9e4aa" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;ng build&lt;/code&gt; and &lt;code&gt;ng serve&lt;/code&gt; clear the output folder before they build the project, but only the &lt;code&gt;ng build&lt;/code&gt; command writes the generated build artifacts to the output folder.</source>
          <target state="translated">И &lt;code&gt;ng build&lt;/code&gt; , и &lt;code&gt;ng serve&lt;/code&gt; очистки выходной папки перед сборкой проекта, но только команда &lt;code&gt;ng build&lt;/code&gt; записывает сгенерированные артефакты сборки в выходную папку.</target>
        </trans-unit>
        <trans-unit id="9ea4794ef24c179c732e4dbb95359c533623f529" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;npm&lt;/code&gt; and &lt;code&gt;yarn&lt;/code&gt; install the packages that are identified in a &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt;&lt;code&gt;package.json&lt;/code&gt;&lt;/a&gt; file.</source>
          <target state="translated">И &lt;code&gt;npm&lt;/code&gt; , и &lt;code&gt;yarn&lt;/code&gt; устанавливают пакеты, указанные в файле &lt;a href=&quot;https://docs.npmjs.com/files/package.json&quot;&gt; &lt;code&gt;package.json&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efd9072be34ddd4cd3ac6531f4cdfce31589a567" translate="yes" xml:space="preserve">
          <source>Both AngularJS and Angular have their own concept of modules to help organize an app into cohesive blocks of functionality.</source>
          <target state="translated">Как AngularJS,так и Angular имеют свою собственную концепцию модулей,помогающих организовать приложение в связные блоки функциональности.</target>
        </trans-unit>
        <trans-unit id="f8b1d87ddf1e625974551a1a9492af7f227f733c" translate="yes" xml:space="preserve">
          <source>Both AngularJS and Angular have their own concept of modules to help organize an application into cohesive blocks of functionality.</source>
          <target state="translated">Как AngularJS,так и Angular имеют свою собственную концепцию модулей,помогающих организовать приложение в связные блоки функциональности.</target>
        </trans-unit>
        <trans-unit id="d564c53c4c40f094481604ce9c087637f753034c" translate="yes" xml:space="preserve">
          <source>Both buttons navigate back to the crisis list after save or cancel.</source>
          <target state="translated">Обе кнопки после сохранения или отмены перейдут обратно в кризисный список.</target>
        </trans-unit>
        <trans-unit id="64ed4a76603ad54f5413c0e8debcdd97dd1aa9b1" translate="yes" xml:space="preserve">
          <source>Both components and services are simply classes, with &lt;em&gt;decorators&lt;/em&gt; that mark their type and provide metadata that tells Angular how to use them.</source>
          <target state="translated">И компоненты, и сервисы - это просто классы с &lt;em&gt;декораторами,&lt;/em&gt; которые отмечают их тип и предоставляют метаданные, которые сообщают Angular, как их использовать.</target>
        </trans-unit>
        <trans-unit id="5c09c3f8cf9bbef0b8dcd1109994c96416fac328" translate="yes" xml:space="preserve">
          <source>Both elements now use the same translation (&lt;code&gt;Bonjour&lt;/code&gt;) because they were defined with the same custom ID:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0a9be87024bfe0406f2632088e389834c9a494" translate="yes" xml:space="preserve">
          <source>Both reactive and template-driven forms are built on the following base classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f690c03e061a7fd137c00dd8ab89db4c52afd0e5" translate="yes" xml:space="preserve">
          <source>Both reactive and template-driven forms share underlying building blocks.</source>
          <target state="translated">Как реактивные формы,так и формы,основанные на шаблонах,имеют общие конструктивные элементы.</target>
        </trans-unit>
        <trans-unit id="979fd0ef5434b1b36edceaf3d9bc579f6c5937ab" translate="yes" xml:space="preserve">
          <source>Both reactive and template-driven forms track value changes between the form input elements that users interact with and the form data in your component model. The two approaches share underlying building blocks, but differ in how you create and manage the common form-control instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c547c7a0a78e9d790dbe284eb7240f0e366c99c3" translate="yes" xml:space="preserve">
          <source>Both states are temporary; they are saved only for the lifetime of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope&quot;&gt;ServiceWorker instance&lt;/a&gt;. The browser sometimes terminates an idle service worker to conserve memory and processor power, and creates a new service worker instance in response to network events. The new instance starts in the &lt;code&gt;NORMAL&lt;/code&gt; mode, regardless of the state of the previous instance.</source>
          <target state="translated">Оба состояния являются временными; они сохраняются только на время существования &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerGlobalScope&quot;&gt;экземпляра ServiceWorker&lt;/a&gt; . Браузер иногда отключает неработающего сервисного работника для экономии памяти и мощности процессора и создает новый экземпляр сервисного работника в ответ на сетевые события. Новый экземпляр запускается в режиме &lt;code&gt;NORMAL&lt;/code&gt; независимо от состояния предыдущего экземпляра.</target>
        </trans-unit>
        <trans-unit id="2d33f13edcd4c6f3ed84da53d2a75dfa7b13538d" translate="yes" xml:space="preserve">
          <source>Both successful and unsuccessful responses can be delivered via &lt;code&gt;&lt;a href=&quot;../../../core/testing/flush&quot;&gt;flush&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">Как успешные, так и неудачные ответы могут быть доставлены через &lt;code&gt;&lt;a href=&quot;../../../core/testing/flush&quot;&gt;flush&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cb0fb25a4a028a2cda7733bb08d025271905f029" translate="yes" xml:space="preserve">
          <source>Both the &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;()&lt;/code&gt; hooks fire after the component's view has been composed. If you modify the code so that the hook updates the component's data-bound &lt;code&gt;comment&lt;/code&gt; property immediately, you can see that Angular throws an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a724638caaef22868a74a59cb2138ec4f02873" translate="yes" xml:space="preserve">
          <source>Break circularities with a forward class reference (&lt;code&gt;forwardRef&lt;/code&gt;)</source>
          <target state="translated">Разорвать круглости с помощью прямой ссылки на класс ( &lt;code&gt;forwardRef&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="19e2cd28b09ef3682ded6d1478601de1d625cc30" translate="yes" xml:space="preserve">
          <source>Break the circularity with &lt;code&gt;&lt;a href=&quot;../api/core/forwardref&quot;&gt;forwardRef&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Разорвать круглость с &lt;code&gt;&lt;a href=&quot;../api/core/forwardref&quot;&gt;forwardRef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54a2cf5e634dbba0be2bf8a55f79252f5c790bdb" translate="yes" xml:space="preserve">
          <source>Browser</source>
          <target state="translated">Browser</target>
        </trans-unit>
        <trans-unit id="caa7ae8131b0e358dca91885f3b90f7468dff074" translate="yes" xml:space="preserve">
          <source>Browser support</source>
          <target state="translated">Поддержка браузера</target>
        </trans-unit>
        <trans-unit id="2d988f6baee731e13c5ed58b15e6403c0f5d437c" translate="yes" xml:space="preserve">
          <source>Browser support for custom elements</source>
          <target state="translated">Поддержка браузером пользовательских элементов</target>
        </trans-unit>
        <trans-unit id="3e5c46f54fdcf3e89274890de50e1bbd5f0cdb1b" translate="yes" xml:space="preserve">
          <source>BrowserAnimationsModule</source>
          <target state="translated">BrowserAnimationsModule</target>
        </trans-unit>
        <trans-unit id="1b19571f37782c3b7a2529d132b7eeafffb9c8b7" translate="yes" xml:space="preserve">
          <source>BrowserDynamicTestingModule</source>
          <target state="translated">BrowserDynamicTestingModule</target>
        </trans-unit>
        <trans-unit id="489e469aaed844504ea81ebeeb21f713325a5454" translate="yes" xml:space="preserve">
          <source>BrowserModule</source>
          <target state="translated">BrowserModule</target>
        </trans-unit>
        <trans-unit id="39e941a302cc8d62cbd7fd0aa04f1f300f6db868" translate="yes" xml:space="preserve">
          <source>BrowserTestingModule</source>
          <target state="translated">BrowserTestingModule</target>
        </trans-unit>
        <trans-unit id="1170851384c0cf693a98b5cd9a90dfd12e351c34" translate="yes" xml:space="preserve">
          <source>BrowserTransferStateModule</source>
          <target state="translated">BrowserTransferStateModule</target>
        </trans-unit>
        <trans-unit id="b53e7dea10c2c28052bb71dd93c9ae381907b043" translate="yes" xml:space="preserve">
          <source>Browsers (Desktop &amp;amp; Mobile)</source>
          <target state="translated">Браузеры (настольные и мобильные)</target>
        </trans-unit>
        <trans-unit id="7472f880b5ebe7a2522b3da766321267d335a017" translate="yes" xml:space="preserve">
          <source>Browsers can't execute TypeScript directly. Typescript must be &quot;transpiled&quot; into JavaScript using the &lt;em&gt;tsc&lt;/em&gt; compiler, which requires some configuration.</source>
          <target state="translated">Браузеры не могут выполнять TypeScript напрямую. Typescript должен быть &amp;laquo;перенесен&amp;raquo; в JavaScript с &lt;em&gt;помощью&lt;/em&gt; компилятора &lt;em&gt;tsc&lt;/em&gt; , что требует некоторой настройки.</target>
        </trans-unit>
        <trans-unit id="7331906d686c4ec9c7fb5e96c8a75a52e6649767" translate="yes" xml:space="preserve">
          <source>Browsers list The &lt;code&gt;browserslist&lt;/code&gt; configuration file is included in your application &lt;a href=&quot;file-structure#application-configuration-files&quot;&gt;project structure&lt;/a&gt; and provides the minimum browsers your application supports. See the &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;Browserslist spec&lt;/a&gt; for complete configuration options.</source>
          <target state="translated">Список &lt;code&gt;browserslist&lt;/code&gt; Файл конфигурации списка браузеров включен в &lt;a href=&quot;file-structure#application-configuration-files&quot;&gt;структуру проекта&lt;/a&gt; приложения и предоставляет минимальное количество браузеров, поддерживаемых вашим приложением. Посмотрите &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;спецификацию Browserslist&lt;/a&gt; для полных опций конфигурации.</target>
        </trans-unit>
        <trans-unit id="5fd48f06506544e724e31bc1d27319aa4940aeb2" translate="yes" xml:space="preserve">
          <source>Browsers such as Chrome provide developer tools for interacting with service workers. Such tools can be powerful when used properly, but there are a few things to keep in mind.</source>
          <target state="translated">Браузеры,такие как Chrome,предоставляют инструменты разработчика для взаимодействия с сервисными работниками.Такие инструменты могут быть мощными при правильном использовании,но есть несколько вещей,о которых следует помнить.</target>
        </trans-unit>
        <trans-unit id="7ac1c219ed9db5609130bf09817b19913aa7f75c" translate="yes" xml:space="preserve">
          <source>Browserslist</source>
          <target state="translated">Browserslist</target>
        </trans-unit>
        <trans-unit id="5f4763bbd263cd5434b3654e03112db678b6b161" translate="yes" xml:space="preserve">
          <source>Build Result</source>
          <target state="translated">Результат строительства</target>
        </trans-unit>
        <trans-unit id="c674564300cade5252a5db51fce3d3eeff1e91ac" translate="yes" xml:space="preserve">
          <source>Build a simple attribute directive</source>
          <target state="translated">Построить простую директиву атрибута</target>
        </trans-unit>
        <trans-unit id="63a1d3442e3d58ff2cfb7be5462ee9514f437b01" translate="yes" xml:space="preserve">
          <source>Build a template-driven form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ab8e1d24bf4b36f9398025bfb1689b7314ddb9" translate="yes" xml:space="preserve">
          <source>Build an Angular form with a component and template.</source>
          <target state="translated">Постройте Угловую форму с компонентом и шаблоном.</target>
        </trans-unit>
        <trans-unit id="0b16ed964ca1d0b9633697442124487216e8c15a" translate="yes" xml:space="preserve">
          <source>Build and launch the app with debugger by clicking the &lt;strong&gt;Run&lt;/strong&gt; button or by pressing &lt;code&gt;F5&lt;/code&gt;.</source>
          <target state="translated">Создайте и запустите приложение с помощью отладчика, нажав кнопку &amp;laquo; &lt;strong&gt;Выполнить&amp;raquo;&lt;/strong&gt; или нажав клавишу &lt;code&gt;F5&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a841e5989fc4a3f8e040bebb8d4e89ce53e2ea2d" translate="yes" xml:space="preserve">
          <source>Build and run the server again:</source>
          <target state="translated">Постройте и запустите сервер снова:</target>
        </trans-unit>
        <trans-unit id="d6e1e6845b1c24e4e46ae9e1811d147c1fd4b03b" translate="yes" xml:space="preserve">
          <source>Build artifacts (JS and CSS bundles).</source>
          <target state="translated">Строить артефакты (JS и CSS пучки).</target>
        </trans-unit>
        <trans-unit id="fe668d7b9bd1bdd039e15e4e4878232c9f14cf75" translate="yes" xml:space="preserve">
          <source>Build for multiple locales</source>
          <target state="translated">Построить для нескольких локалей</target>
        </trans-unit>
        <trans-unit id="7d8144a3c59905f4260f61d31b9b788252b947a5" translate="yes" xml:space="preserve">
          <source>Build from the command line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ecff7853ffb7bfb041edba485c0757a60f0fd6c" translate="yes" xml:space="preserve">
          <source>Build result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d71d005605b731983e1212cab3067f5e36bf4a" translate="yes" xml:space="preserve">
          <source>Build target</source>
          <target state="translated">Построить цель</target>
        </trans-unit>
        <trans-unit id="b97a5bae4bb0dc9aea2ba383a4c9d6b011be2aa7" translate="yes" xml:space="preserve">
          <source>Build the basic form.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ebaaba151b4fa323c7853acaedf81d4316c1d03" translate="yes" xml:space="preserve">
          <source>Build the form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3634fbe639279233d0d5ba2b0a7a9a5c30747b" translate="yes" xml:space="preserve">
          <source>Build the library. You cannot use a library before it is built.</source>
          <target state="translated">Постройте библиотеку.Вы не можете использовать библиотеку до того,как она будет построена.</target>
        </trans-unit>
        <trans-unit id="10f95352487e622a50d6a09f351680b2e04970de" translate="yes" xml:space="preserve">
          <source>Build using Ahead of Time compilation.</source>
          <target state="translated">Сборка с использованием компиляции Ahead of Time.</target>
        </trans-unit>
        <trans-unit id="12147b38fd3c8e49fbaaf0d27106cec8cf6bf7a1" translate="yes" xml:space="preserve">
          <source>Build your app for production &lt;em&gt;including the source maps&lt;/em&gt;</source>
          <target state="translated">Создайте свое приложение для производства, &lt;em&gt;включая исходные карты&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4e1f7908a8fa15b11aa7a8fec3020d998a1cb595" translate="yes" xml:space="preserve">
          <source>Build your library and schematics</source>
          <target state="translated">Создайте свою библиотеку и схемы</target>
        </trans-unit>
        <trans-unit id="3a8f2b080985e84ff16f5bd0acaede8ad59a5039" translate="yes" xml:space="preserve">
          <source>Build your project using Github project name, with the Angular CLI command &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt; and the options shown here:</source>
          <target state="translated">Создайте свой проект, используя имя проекта Github, с помощью команды Angular CLI &lt;a href=&quot;cli/build&quot;&gt; &lt;code&gt;ng build&lt;/code&gt; &lt;/a&gt; и параметров, показанных здесь:</target>
        </trans-unit>
        <trans-unit id="338940014efbeb76bf00b87e6fd1a0b5d3d0dc9f" translate="yes" xml:space="preserve">
          <source>Builder input</source>
          <target state="translated">Вход строителя</target>
        </trans-unit>
        <trans-unit id="7ef7408461360b6d8e74a044b183f8de6fc8be2e" translate="yes" xml:space="preserve">
          <source>Builder project structure</source>
          <target state="translated">Структура проекта застройщика</target>
        </trans-unit>
        <trans-unit id="7cec90732540af8e27f18d76711bdd709e2926f7" translate="yes" xml:space="preserve">
          <source>Builders can be synchronous or asynchronous, execute once or watch for external events, and can schedule other builders or targets.</source>
          <target state="translated">Строители могут быть синхронными или асинхронными,выполнять один раз или наблюдать за внешними событиями,а также могут планировать работу других строителей или целей.</target>
        </trans-unit>
        <trans-unit id="5a596c9d2eb919381175f356f2ed5bae199a81aa" translate="yes" xml:space="preserve">
          <source>Builders definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fc44ef66b534b8d05ed7f18b305da65952fa0a1" translate="yes" xml:space="preserve">
          <source>Builders have option defaults specified in the &lt;code&gt;angular.json&lt;/code&gt; configuration file, which can be overwritten by an alternate configuration for the target, and further overwritten by command line flags.</source>
          <target state="translated">У &lt;code&gt;angular.json&lt;/code&gt; есть значения параметров по умолчанию, указанные в файле конфигурации angular.json , которые могут быть перезаписаны альтернативной конфигурацией для цели и дополнительно перезаписаны флагами командной строки.</target>
        </trans-unit>
        <trans-unit id="3c40455fd1dd802b3a381a69ec531aea076ff8b2" translate="yes" xml:space="preserve">
          <source>Building a template-driven form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dd970b85d3d73006d2f7e6aba2ff655bbf3277" translate="yes" xml:space="preserve">
          <source>Building accessible web experience often involves setting &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/semantics-aria&quot;&gt;ARIA attributes&lt;/a&gt; to provide semantic meaning where it might otherwise be missing. Use &lt;a href=&quot;attribute-binding&quot;&gt;attribute binding&lt;/a&gt; template syntax to control the values of accessibility-related attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58423fd7c3d8a2b3b0288c434ca19a63c03fddd4" translate="yes" xml:space="preserve">
          <source>Building accessible web experience often involves setting &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/semantics-aria&quot;&gt;ARIA attributes&lt;/a&gt; to provide semantic meaning where it might otherwise be missing. Use &lt;a href=&quot;template-syntax#attribute-binding&quot;&gt;attribute binding&lt;/a&gt; template syntax to control the values of accessibility-related attributes.</source>
          <target state="translated">Создание доступного веб-интерфейса часто включает в себя настройку &lt;a href=&quot;https://developers.google.com/web/fundamentals/accessibility/semantics-aria&quot;&gt;атрибутов ARIA&lt;/a&gt; для обеспечения семантического значения там, где оно могло бы отсутствовать. Используйте синтаксис шаблона &lt;a href=&quot;template-syntax#attribute-binding&quot;&gt;привязки атрибута&lt;/a&gt; для управления значениями атрибутов, связанных с доступностью.</target>
        </trans-unit>
        <trans-unit id="ffb0d65cff95173c9727f4ed3f1046730b30b49a" translate="yes" xml:space="preserve">
          <source>Building and rebuilding your library</source>
          <target state="translated">Строительство и перестройка вашей библиотеки</target>
        </trans-unit>
        <trans-unit id="f7125bd3b210a7172b096873cf19164849e1f6b3" translate="yes" xml:space="preserve">
          <source>Building and serving Angular apps</source>
          <target state="translated">Строительство и обслуживание Угловые приложения</target>
        </trans-unit>
        <trans-unit id="38044acdb5b1bf0f8b98c5b7c6e09d68e6dbf057" translate="yes" xml:space="preserve">
          <source>Building and serving from disk</source>
          <target state="translated">Сборка и подача с диска</target>
        </trans-unit>
        <trans-unit id="5f44ed433a18b75e46be9d13f403d1b209869c46" translate="yes" xml:space="preserve">
          <source>Building and serving the app for a given locale, using the translated text.</source>
          <target state="translated">Создание и обслуживание приложения для данной местности,используя переведенный текст.</target>
        </trans-unit>
        <trans-unit id="a441046d59751ffd55f2c40318e3e1ef1eb52dca" translate="yes" xml:space="preserve">
          <source>Building dynamic forms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d7cef5094185320d88e754c57130b67a38a3c8" translate="yes" xml:space="preserve">
          <source>Building handcrafted forms can be costly and time-consuming, especially if you need a great number of them, they're similar to each other, and they change frequently to meet rapidly changing business and regulatory requirements.</source>
          <target state="translated">Строительство форм ручной работы может быть дорогостоящим и трудоемким,особенно если вам нужно большое их количество,они похожи друг на друга и часто меняются в соответствии с быстро меняющимися бизнес и нормативными требованиями.</target>
        </trans-unit>
        <trans-unit id="99b633b8b55f4a4a0e4b874bf81f4324ac607609" translate="yes" xml:space="preserve">
          <source>Building locally</source>
          <target state="translated">Здание на месте</target>
        </trans-unit>
        <trans-unit id="ea19476edd9c5bc2591da244c58924cd2d0448a0" translate="yes" xml:space="preserve">
          <source>Building with Bazel</source>
          <target state="translated">Здание с Бейзелом</target>
        </trans-unit>
        <trans-unit id="592a2f2da2ad52e24a8c5d5555474faed5b11d88" translate="yes" xml:space="preserve">
          <source>Building your schematics</source>
          <target state="translated">Построение ваших схем</target>
        </trans-unit>
        <trans-unit id="74dbfc5fed244390666be30faae5de6b93204f0d" translate="yes" xml:space="preserve">
          <source>Builds a class that encapsulates the functionality of the provided component and uses the configuration information to provide more context to the class. Takes the component factory's inputs and outputs to convert them to the proper custom element API and add hooks to input changes.</source>
          <target state="translated">Собирает класс,который инкапсулирует функциональность предоставляемого компонента и использует конфигурационную информацию для обеспечения большего контекста для класса.Принимает входы и выходы компонента на заводе-изготовителе для преобразования их в соответствующий API пользовательского элемента и добавления крючков для изменения входных данных.</target>
        </trans-unit>
        <trans-unit id="232819cbe5519dee306aa0895ba18910a5ec7859" translate="yes" xml:space="preserve">
          <source>Builds a factory for producing a defined animation.</source>
          <target state="translated">Строит фабрику по производству определенной анимации.</target>
        </trans-unit>
        <trans-unit id="29a6ebd47094fe74b2826b82789b68332b6c3967" translate="yes" xml:space="preserve">
          <source>Builds and serves an Angular app, then runs end-to-end tests using Protractor.</source>
          <target state="translated">Строит и обслуживает приложение &quot;Угол&quot;,затем выполняет сквозные тесты с помощью Protractor.</target>
        </trans-unit>
        <trans-unit id="e2a7d33be0b02d6a586a825825ca723c6f2b203a" translate="yes" xml:space="preserve">
          <source>Builds and serves your app, rebuilding on file changes.</source>
          <target state="translated">Собирает и обслуживает ваше приложение,перестраивая его на изменения файлов.</target>
        </trans-unit>
        <trans-unit id="3699f6d3ab9939f61e3dfd80b624361cc8f93a32" translate="yes" xml:space="preserve">
          <source>Built-in &lt;code&gt;structural&lt;/code&gt; directives</source>
          <target state="translated">Встроенные &lt;code&gt;structural&lt;/code&gt; директивы</target>
        </trans-unit>
        <trans-unit id="788c41440c17fec4a3ceedf2627edc4891b3e70f" translate="yes" xml:space="preserve">
          <source>Built-in attribute directives</source>
          <target state="translated">Встроенные директивы атрибутов</target>
        </trans-unit>
        <trans-unit id="34fc1e1b84850bf75a3a8ab79f67893426bb2dbb" translate="yes" xml:space="preserve">
          <source>Built-in directives</source>
          <target state="translated">Встроенные директивы</target>
        </trans-unit>
        <trans-unit id="f1881fdacac2d002db723126c9b7e1fc54324ce1" translate="yes" xml:space="preserve">
          <source>Built-in directives use only public APIs; that is, they do not have special access to any private APIs that other directives can't access.</source>
          <target state="translated">Встроенные директивы используют только публичные API,то есть не имеют специального доступа ни к каким частным API,к которым другие директивы не могут получить доступ.</target>
        </trans-unit>
        <trans-unit id="14c8e0c882b739a0956ce99a903aa60c7db8e7b0" translate="yes" xml:space="preserve">
          <source>Built-in pipes</source>
          <target state="translated">Встроенные трубы</target>
        </trans-unit>
        <trans-unit id="f846a8ef31181b4f0e27e3db37268decf8f99a23" translate="yes" xml:space="preserve">
          <source>Built-in template functions</source>
          <target state="translated">Встроенные функции шаблонов</target>
        </trans-unit>
        <trans-unit id="04b04243ac876d4efb6192834885a2963c11c58b" translate="yes" xml:space="preserve">
          <source>Built-in validator functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853adbe6a9c9185cf38b20fec800da9b6c47bf4a" translate="yes" xml:space="preserve">
          <source>Built-in validators</source>
          <target state="translated">Встроенные валидаторы</target>
        </trans-unit>
        <trans-unit id="23270ff48782c619fd08871d4873b8a228d6bad4" translate="yes" xml:space="preserve">
          <source>Bundling: concatenates your many application and library files into a few bundles.</source>
          <target state="translated">Пакетирование:соединяет ваши много архивов приложения и библиотеки в несколько пучков.</target>
        </trans-unit>
        <trans-unit id="b77c50fe85e215a333530a2770df5fc00971a9a0" translate="yes" xml:space="preserve">
          <source>But a component is more than just its class. A component interacts with the DOM and with other components. The &lt;em&gt;class-only&lt;/em&gt; tests can tell you about class behavior. They cannot tell you if the component is going to render properly, respond to user input and gestures, or integrate with its parent and child components.</source>
          <target state="translated">Но компонент - это больше, чем просто его класс. Компонент взаимодействует с DOM и другими компонентами. В &lt;em&gt;классе только&lt;/em&gt; тесты могут рассказать о поведении класса. Они не могут сказать вам, будет ли компонент правильно отображаться, реагировать на пользовательский ввод и жесты или интегрироваться со своими родительскими и дочерними компонентами.</target>
        </trans-unit>
        <trans-unit id="dd16c28b37bfac9fd975ec035f73fbe88687604a" translate="yes" xml:space="preserve">
          <source>But a component or directive shouldn't blindly trust &lt;em&gt;other&lt;/em&gt; components and directives. The properties of a component or directive are hidden from binding by default. They are &lt;em&gt;private&lt;/em&gt; from an Angular binding perspective. When adorned with the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator, the property becomes &lt;em&gt;public&lt;/em&gt; from an Angular binding perspective. Only then can it be bound by some other component or directive.</source>
          <target state="translated">Но компонент или директива не должны слепо доверять &lt;em&gt;другим&lt;/em&gt; компонентам и директивам. Свойства компонента или директивы по умолчанию скрыты от привязки. Они являются &lt;em&gt;частными&lt;/em&gt; с точки зрения угловой привязки. При украшении декоратором &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; свойство становится &lt;em&gt;открытым&lt;/em&gt; с точки зрения угловой привязки. Только тогда он может быть связан каким-либо другим компонентом или директивой.</target>
        </trans-unit>
        <trans-unit id="4c3ff50267ef1b91995b1701f72f05cd08be99af" translate="yes" xml:space="preserve">
          <source>But always implement a &lt;em&gt;pure pipe&lt;/em&gt; with a &lt;em&gt;pure function&lt;/em&gt;. Otherwise, you'll see many console errors regarding expressions that changed after they were checked.</source>
          <target state="translated">Но всегда реализуйте &lt;em&gt;чистую трубу&lt;/em&gt; с &lt;em&gt;чистой функцией&lt;/em&gt; . В противном случае вы увидите много консольных ошибок, касающихся выражений, которые изменились после их проверки.</target>
        </trans-unit>
        <trans-unit id="1dad324eea1e02746dc15d325e015070ea526f47" translate="yes" xml:space="preserve">
          <source>But an interceptor can change this to an &lt;em&gt;observable&lt;/em&gt; that emits more than once.</source>
          <target state="translated">Но перехватчик может изменить это на &lt;em&gt;наблюдаемое,&lt;/em&gt; которое излучает более одного раза.</target>
        </trans-unit>
        <trans-unit id="80bd50bba245c58f59752096de59db1d05418d3c" translate="yes" xml:space="preserve">
          <source>But clicking a link in an email, entering it in the browser address bar, or merely refreshing the browser while on the hero detail page &amp;mdash; all of these actions are handled by the browser itself, &lt;em&gt;outside&lt;/em&gt; the running application. The browser makes a direct request to the server for that URL, bypassing the router.</source>
          <target state="translated">Но если щелкнуть ссылку в электронном письме, ввести ее в адресную строку браузера или просто обновить браузер, находясь на странице сведений о герое, - все эти действия выполняются самим браузером &lt;em&gt;за пределами&lt;/em&gt; запущенного приложения. Браузер делает прямой запрос к серверу для этого URL, минуя маршрутизатор.</target>
        </trans-unit>
        <trans-unit id="fa03a76338d6f6af61aea8774405dc940313388b" translate="yes" xml:space="preserve">
          <source>But first, make a few changes to the &lt;code&gt;AppRoutingModule&lt;/code&gt;.</source>
          <target state="translated">Но сначала внесите несколько изменений в &lt;code&gt;AppRoutingModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c27f7b3e935b9fc74c79376898a71d98935aa436" translate="yes" xml:space="preserve">
          <source>But in the absence of a compelling reason to keep them around, your preference should be to remove DOM elements that the user can't see and recover the unused resources with a structural directive like &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; .</source>
          <target state="translated">Но в отсутствие веской причины держать их рядом, вы должны удалить элементы DOM, которые пользователь не может видеть, и восстановить неиспользуемые ресурсы с помощью структурной директивы, такой как &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;NgIf&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3edb9da96e057d100aa5383d0834fa22e414c6e1" translate="yes" xml:space="preserve">
          <source>But interceptors that examine and modify the response from &lt;code&gt;next.handle()&lt;/code&gt; will see all of these events. Your interceptor should return &lt;em&gt;every event untouched&lt;/em&gt; unless it has a &lt;em&gt;compelling reason to do otherwise&lt;/em&gt;.</source>
          <target state="translated">Но перехватчики, которые проверяют и модифицируют ответ от &lt;code&gt;next.handle()&lt;/code&gt; , увидят все эти события. Ваш перехватчик должен возвращать &lt;em&gt;каждое событие нетронутым,&lt;/em&gt; если у него нет &lt;em&gt;веских причин поступить иначе&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="a36ff3370e272264824942a257a5f735eab10803" translate="yes" xml:space="preserve">
          <source>But on the shared or production server, you might serve the app from a subfolder. For example, when the URL to load the app is something like &lt;code&gt;http://www.mysite.com/my/app/&lt;/code&gt;, the subfolder is &lt;code&gt;my/app/&lt;/code&gt; and you should add &lt;code&gt;&amp;lt;base href=&quot;/my/app/&quot;&amp;gt;&lt;/code&gt; to the server version of the &lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="translated">Но на общем или производственном сервере вы можете обслуживать приложение из подпапки. Например, когда URL-адрес для загрузки приложения выглядит примерно так: &lt;code&gt;http://www.mysite.com/my/app/&lt;/code&gt; , подпапкой является &lt;code&gt;my/app/&lt;/code&gt; и вы должны добавить &lt;code&gt;&amp;lt;base href=&quot;/my/app/&quot;&amp;gt;&lt;/code&gt; на серверную версию &lt;code&gt;index.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3b97cebd5bc435fb7714257eba2ba270e61f5214" translate="yes" xml:space="preserve">
          <source>But the compiler won't throw an error when it encounters &lt;code&gt;&amp;lt;app-banner&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;app-welcome&amp;gt;&lt;/code&gt;, or &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt;. It simply renders them as empty tags and the browser ignores them.</source>
          <target state="translated">Но компилятор не выдаст ошибку, когда встретит &lt;code&gt;&amp;lt;app-banner&amp;gt;&lt;/code&gt; , &lt;code&gt;&amp;lt;app-welcome&amp;gt;&lt;/code&gt; или &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; . Он просто отображает их как пустые теги, а браузер игнорирует их.</target>
        </trans-unit>
        <trans-unit id="a6e1ffc936f0d832154812aedbbbdd45670ea6cb" translate="yes" xml:space="preserve">
          <source>But the router is still loading the &lt;code&gt;AdminModule&lt;/code&gt; even if the user can't visit any of its components. Ideally, you'd only load the &lt;code&gt;AdminModule&lt;/code&gt; if the user is logged in.</source>
          <target state="translated">Но маршрутизатор все еще загружает &lt;code&gt;AdminModule&lt;/code&gt; , даже если пользователь не может посетить ни один из его компонентов. В идеале вы должны загружать &lt;code&gt;AdminModule&lt;/code&gt; ,только если пользователь вошел в систему.</target>
        </trans-unit>
        <trans-unit id="5cf7129241a1e1a5c0fa7cf971437230767eaf7b" translate="yes" xml:space="preserve">
          <source>But the test's asynchronous nature is revealed by the call to &lt;code&gt;fixture.whenStable()&lt;/code&gt;, which breaks the linear flow of control.</source>
          <target state="translated">Но асинхронный характер теста раскрывается вызовом &lt;code&gt;fixture.whenStable()&lt;/code&gt; , который нарушает линейный поток управления.</target>
        </trans-unit>
        <trans-unit id="8cea244f43f2793e842872ae957b0a1f13e42a42" translate="yes" xml:space="preserve">
          <source>But there's plenty of template complexity even in this simple form.</source>
          <target state="translated">Но даже в таком простом виде сложность шаблона достаточно велика.</target>
        </trans-unit>
        <trans-unit id="7b11b3e52dfeccee3a7be0007f3d3766d07568c9" translate="yes" xml:space="preserve">
          <source>But when using them from AngularJS templates, you must use kebab-case:</source>
          <target state="translated">Но при использовании их из шаблонов AngularJS необходимо использовать кебаб-кейс:</target>
        </trans-unit>
        <trans-unit id="943e02425418f80a99a67821520af9a48faca8cd" translate="yes" xml:space="preserve">
          <source>But you can also start adding &lt;em&gt;type annotations&lt;/em&gt; to get even more out of TypeScript's type system. For instance, you can annotate the checkmark filter so that it explicitly expects booleans as arguments. This makes it clearer what the filter is supposed to do.</source>
          <target state="translated">Но вы также можете начать добавлять &lt;em&gt;аннотации типов,&lt;/em&gt; чтобы получить еще больше от системы типов TypeScript. Например, вы можете аннотировать фильтр галочек, чтобы он явно ожидал логические значения в качестве аргументов. Это делает более понятным, что фильтр должен делать.</target>
        </trans-unit>
        <trans-unit id="cfadbd7a577133041a60f331a0e2ad6af20f3f8b" translate="yes" xml:space="preserve">
          <source>By</source>
          <target state="translated">By</target>
        </trans-unit>
        <trans-unit id="9979e502bac7109b83a440b9de42340f258ddfa0" translate="yes" xml:space="preserve">
          <source>By adding &lt;code&gt;&amp;lt;live-example&amp;gt;&lt;/code&gt; to the page you generate links that run sample code in the Stackblitz live coding environment and download that code to the reader's file system.</source>
          <target state="translated">Добавляя &lt;code&gt;&amp;lt;live-example&amp;gt;&lt;/code&gt; на страницу, вы генерируете ссылки, которые запускают пример кода в среде реального программирования Stackblitz и загружают этот код в файловую систему читателя.</target>
        </trans-unit>
        <trans-unit id="2cf4fb2c70012c8404bf6ea7e18e7ae9d001da1c" translate="yes" xml:space="preserve">
          <source>By clicking a hero in the dashboard.</source>
          <target state="translated">Щелкнув по герою на приборной панели.</target>
        </trans-unit>
        <trans-unit id="06c882c348dd5f75caf8d98a0cc0eb826d015cff" translate="yes" xml:space="preserve">
          <source>By clicking a hero in the heroes list.</source>
          <target state="translated">Нажав на героя в списке героев.</target>
        </trans-unit>
        <trans-unit id="0ea68802c089f45528d4b35900b0fde6854239f2" translate="yes" xml:space="preserve">
          <source>By clicking the browser's back button, you can go back to the hero list or dashboard view, depending upon which sent you to the detail view.</source>
          <target state="translated">Нажав на кнопку &quot;Назад&quot; браузера,вы можете вернуться к списку героев или просмотру панели инструментов,в зависимости от того,какой из них отправил вас в детальный просмотр.</target>
        </trans-unit>
        <trans-unit id="0a5dc8091fb2b001718c9b188eeb628b36637423" translate="yes" xml:space="preserve">
          <source>By compiling your application using the &lt;code&gt;ngc&lt;/code&gt; command-line tool, you can bootstrap directly to a module factory, so you don't need to include the Angular compiler in your JavaScript bundle.</source>
          <target state="translated">&lt;code&gt;ngc&lt;/code&gt; ваше приложение с помощью инструмента командной строки ngc , вы можете загрузить непосредственно на фабрику модулей, поэтому вам не нужно включать компилятор Angular в ваш пакет JavaScript.</target>
        </trans-unit>
        <trans-unit id="e83663bb4eeda0ed5495f37b7c40ecac703dc7a4" translate="yes" xml:space="preserve">
          <source>By contrast, Angular registers &lt;code&gt;AppComponent&lt;/code&gt; providers with the &lt;code&gt;AppComponent&lt;/code&gt;'s own injector. &lt;code&gt;AppComponent&lt;/code&gt; services are available only to that component and its component tree. They have component scope.</source>
          <target state="translated">Напротив, угловые регистры &lt;code&gt;AppComponent&lt;/code&gt; поставщиков с &lt;code&gt;AppComponent&lt;/code&gt; собственного инжектором &amp;laquo;s. &lt;code&gt;AppComponent&lt;/code&gt; доступны только для этого компонента и его дерева компонентов. У них есть компонентный охват.</target>
        </trans-unit>
        <trans-unit id="d00a813e7486c3605092212dc4aceb4cad4fd7d3" translate="yes" xml:space="preserve">
          <source>By convention, HTML attributes use lowercase names (&lt;code&gt;tabindex&lt;/code&gt;), while properties use camelCase names (&lt;code&gt;tabIndex&lt;/code&gt;).</source>
          <target state="translated">По соглашению атрибуты HTML используют строчные имена ( &lt;code&gt;tabindex&lt;/code&gt; ), а свойства используют имена camelCase ( &lt;code&gt;tabIndex&lt;/code&gt; ).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
