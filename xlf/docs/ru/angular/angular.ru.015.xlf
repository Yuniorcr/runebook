<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="angular">
    <body>
      <group id="angular">
        <trans-unit id="4006d9f76259ae6ae1f4c464ef8b78f5b688ad0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent()&lt;/code&gt; method and &lt;code&gt;page&lt;/code&gt; object are discussed &lt;a href=&quot;testing#page-object&quot;&gt;below&lt;/a&gt;. Rely on your intuition for now.</source>
          <target state="translated">Метод &lt;code&gt;createComponent()&lt;/code&gt; и объект &lt;code&gt;page&lt;/code&gt; обсуждаются &lt;a href=&quot;testing#page-object&quot;&gt;ниже&lt;/a&gt; . Положитесь на свою интуицию сейчас.</target>
        </trans-unit>
        <trans-unit id="a9dd3f8d9f8f7a9580839b288759263cfcc01a2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent()&lt;/code&gt; method and &lt;code&gt;page&lt;/code&gt; object are discussed &lt;a href=&quot;testing-components-scenarios#page-object&quot;&gt;below&lt;/a&gt;. Rely on your intuition for now.</source>
          <target state="translated">&lt;code&gt;createComponent()&lt;/code&gt; способ и &lt;code&gt;page&lt;/code&gt; объекта обсуждаются &lt;a href=&quot;testing-components-scenarios#page-object&quot;&gt;ниже&lt;/a&gt; . Положитесь пока на свою интуицию.</target>
        </trans-unit>
        <trans-unit id="b363def9875eaa582eef102592cc8749afc6d529" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent()&lt;/code&gt; method returns a reference to the loaded component. Use that reference to interact with the component by assigning to its properties or calling its methods.</source>
          <target state="translated">Метод &lt;code&gt;createComponent()&lt;/code&gt; возвращает ссылку на загруженный компонент. Используйте эту ссылку для взаимодействия с компонентом, присваивая его свойствам или вызывая его методы.</target>
        </trans-unit>
        <trans-unit id="0d775df738d1de015bdf917a81aa50042a361697" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent&lt;/code&gt; method freezes the current &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; definition, closing it to further configuration.</source>
          <target state="translated">Метод &lt;code&gt;createComponent&lt;/code&gt; замораживает текущее определение &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; , закрывая его для дальнейшей настройки.</target>
        </trans-unit>
        <trans-unit id="5d195d38d38338ae7356507d931b85063101d18d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;createComponent&lt;/code&gt; returns a &lt;code&gt;fixture&lt;/code&gt; that holds an instance of &lt;code&gt;TestHostComponent&lt;/code&gt; instead of an instance of &lt;code&gt;DashboardHeroComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;createComponent&lt;/code&gt; возвращает &lt;code&gt;fixture&lt;/code&gt; , который содержит экземпляр &lt;code&gt;TestHostComponent&lt;/code&gt; вместо экземпляра &lt;code&gt;DashboardHeroComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="724d4e7980b9cc8f42fd4da24b893eb1f7771cf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crisis-center&lt;/code&gt; is the primary navigation.</source>
          <target state="translated">&lt;code&gt;crisis-center&lt;/code&gt; является основной навигацией.</target>
        </trans-unit>
        <trans-unit id="6c08b7e28040bad66e3cd9cc5a5c1eafee51fbb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;customer&lt;/code&gt; in &lt;code&gt;{{customer.name}}&lt;/code&gt; refers to the template input variable, not the component's property.</source>
          <target state="translated">&lt;code&gt;customer&lt;/code&gt; в &lt;code&gt;{{customer.name}}&lt;/code&gt; относится к входному переменному шаблону, а не свойство компоненты.</target>
        </trans-unit>
        <trans-unit id="d3c1c8f085a3ae4340ee13840114b0a83f024f90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;customers.module.ts&lt;/code&gt; file imports the &lt;code&gt;CustomersRoutingModule&lt;/code&gt; and &lt;code&gt;CustomerListComponent&lt;/code&gt; so the &lt;code&gt;CustomersModule&lt;/code&gt; class can have access to them. &lt;code&gt;CustomersRoutingModule&lt;/code&gt; is then listed in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; array giving &lt;code&gt;CustomersModule&lt;/code&gt; access to its own routing module, and &lt;code&gt;CustomerListComponent&lt;/code&gt; is in the &lt;code&gt;declarations&lt;/code&gt; array, which means &lt;code&gt;CustomerListComponent&lt;/code&gt; belongs to the &lt;code&gt;CustomersModule&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;customers.module.ts&lt;/code&gt; импорта Файловые &lt;code&gt;CustomersRoutingModule&lt;/code&gt; и &lt;code&gt;CustomerListComponent&lt;/code&gt; поэтому в &lt;code&gt;CustomersModule&lt;/code&gt; класс может иметь доступ к ним. &lt;code&gt;CustomersRoutingModule&lt;/code&gt; затем перечисляется в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;imports&lt;/code&gt; @ NgModule, предоставляя &lt;code&gt;CustomersModule&lt;/code&gt; доступ к его собственному модулю маршрутизации, а &lt;code&gt;CustomerListComponent&lt;/code&gt; находится в массиве &lt;code&gt;declarations&lt;/code&gt; , что означает, что &lt;code&gt;CustomerListComponent&lt;/code&gt; принадлежит к &lt;code&gt;CustomersModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ac07d1e69202f687dd4e677c94494bb2c0c90b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;customers.module.ts&lt;/code&gt; file imports the &lt;code&gt;customers-routing.module.ts&lt;/code&gt; and &lt;code&gt;customers.component.ts&lt;/code&gt; files. &lt;code&gt;CustomersRoutingModule&lt;/code&gt; is listed in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt;&lt;code&gt;imports&lt;/code&gt; array giving &lt;code&gt;CustomersModule&lt;/code&gt; access to its own routing module. &lt;code&gt;CustomersComponent&lt;/code&gt; is in the &lt;code&gt;declarations&lt;/code&gt; array, which means &lt;code&gt;CustomersComponent&lt;/code&gt; belongs to the &lt;code&gt;CustomersModule&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;customers.module.ts&lt;/code&gt; файл импортирует &lt;code&gt;customers-routing.module.ts&lt;/code&gt; и &lt;code&gt;customers.component.ts&lt;/code&gt; файлы. &lt;code&gt;CustomersRoutingModule&lt;/code&gt; указан в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; &lt;code&gt;imports&lt;/code&gt; @ NgModule, предоставляя &lt;code&gt;CustomersModule&lt;/code&gt; доступ к его собственному модулю маршрутизации. &lt;code&gt;CustomersComponent&lt;/code&gt; находится в массиве &lt;code&gt;declarations&lt;/code&gt; , что означает, что &lt;code&gt;CustomersComponent&lt;/code&gt; принадлежит к &lt;code&gt;CustomersModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="85908fc05ba4e0d59e6d3f80626a6af08be35d30" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dasherize()&lt;/code&gt; method takes a value and returns the value in dashed and lowercase. For example, if the provided name is MyService, it is returned as &lt;code&gt;my-service&lt;/code&gt;.</source>
          <target state="translated">Метод &lt;code&gt;dasherize()&lt;/code&gt; принимает значение и возвращает значение в пунктирном и нижнем регистре. Например, если предоставленное имя MyService, оно возвращается как &lt;code&gt;my-service&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="645a858498cc5626c10189f70058570baacd1ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dasherize()&lt;/code&gt; method takes a value and returns the value in dashed and lowercase. For example, if the provided name is MyService, it is returned as `my-service.</source>
          <target state="translated">Метод &lt;code&gt;dasherize()&lt;/code&gt; принимает значение и возвращает значение в виде пунктира и строчных букв. Например, если указано имя MyService, оно возвращается как `my-service.</target>
        </trans-unit>
        <trans-unit id="2578f37bc08230276e861ae1e496bef96c2f365b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; property in the third route is a place to store arbitrary data associated with this specific route. The data property is accessible within each activated route. Use it to store items such as page titles, breadcrumb text, and other read-only, &lt;em&gt;static&lt;/em&gt; data. You'll use the &lt;a href=&quot;router#resolve-guard&quot;&gt;resolve guard&lt;/a&gt; to retrieve &lt;em&gt;dynamic&lt;/em&gt; data later in the guide.</source>
          <target state="translated">Свойство &lt;code&gt;data&lt;/code&gt; в третьем маршруте - это место для хранения произвольных данных, связанных с этим конкретным маршрутом. Свойство data доступно в пределах каждого активированного маршрута. Используйте его для хранения таких элементов, как заголовки страниц, текстовые элементы и другие &lt;em&gt;статические&lt;/em&gt; данные, доступные только для чтения . Вы будете использовать &lt;a href=&quot;router#resolve-guard&quot;&gt;охрану разрешения&lt;/a&gt; для получения &lt;em&gt;динамических&lt;/em&gt; данных позже в руководстве.</target>
        </trans-unit>
        <trans-unit id="7751ce26f934e17be84e4933be395e69ebb23726" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; property in the third route is a place to store arbitrary data associated with this specific route. The data property is accessible within each activated route. Use it to store items such as page titles, breadcrumb text, and other read-only, static data. You can use the &lt;a href=&quot;router-tutorial-toh#resolve-guard&quot;&gt;resolve guard&lt;/a&gt; to retrieve dynamic data.</source>
          <target state="translated">Свойство &lt;code&gt;data&lt;/code&gt; в третьем маршруте - это место для хранения произвольных данных, связанных с этим конкретным маршрутом. Свойство данных доступно для каждого активированного маршрута. Используйте его для хранения таких элементов, как заголовки страниц, текст хлебных крошек и другие статические данные, доступные только для чтения. Вы можете использовать &lt;a href=&quot;router-tutorial-toh#resolve-guard&quot;&gt;защиту разрешения&lt;/a&gt; для извлечения динамических данных.</target>
        </trans-unit>
        <trans-unit id="65767c242168e99f723573518f3a589193abb497" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;debugElement&lt;/code&gt; provides insight into the component and its DOM element during test and debugging. It's a critical property for testers. The most interesting members are covered &lt;a href=&quot;testing-utility-apis#debug-element-details&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;debugElement&lt;/code&gt; дает представление о компоненте и его DOM элемента во время испытания и отладки. Это критически важное свойство для тестировщиков. Наиболее интересные элементы покрыты &lt;a href=&quot;testing-utility-apis#debug-element-details&quot;&gt;ниже&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c737a6aac1590206b0b78cf4359b02b93b41ba9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;declarations&lt;/code&gt; array</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; массива</target>
        </trans-unit>
        <trans-unit id="3dae09fc9d875a94a277a77461db0b3eae499758" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;declarations&lt;/code&gt; array is available for you to add declarables, which are components, directives, and pipes that belong exclusively to this particular module. To add a component, enter the following command at the command line where &lt;code&gt;customer-dashboard&lt;/code&gt; is the directory where the CLI generated the feature module and &lt;code&gt;CustomerDashboard&lt;/code&gt; is the name of the component:</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; массив доступен для добавления declarables, которые являются компонентами, директива и трубы , которые принадлежат исключительно к этому конкретному модулю. Чтобы добавить компонент, введите в командной строке следующую команду, где &lt;code&gt;customer-dashboard&lt;/code&gt; - это каталог, в котором CLI сгенерировал функциональный модуль, а &lt;code&gt;CustomerDashboard&lt;/code&gt; - это имя компонента:</target>
        </trans-unit>
        <trans-unit id="035eb065e12f1f699a0e3d8a30a7dd92f49d8d70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;declarations&lt;/code&gt; array only takes declarables. Declarables are components, &lt;a href=&quot;attribute-directives&quot;&gt;directives&lt;/a&gt; and &lt;a href=&quot;pipes&quot;&gt;pipes&lt;/a&gt;. All of a module's declarables must be in the &lt;code&gt;declarations&lt;/code&gt; array. Declarables must belong to exactly one module. The compiler emits an error if you try to declare the same class in more than one module.</source>
          <target state="translated">&lt;code&gt;declarations&lt;/code&gt; массив занимает declarables. Декларации - это компоненты, &lt;a href=&quot;attribute-directives&quot;&gt;директивы&lt;/a&gt; и &lt;a href=&quot;pipes&quot;&gt;трубы&lt;/a&gt; . Все объявления модуля должны быть в массиве &lt;code&gt;declarations&lt;/code&gt; . Декларации должны принадлежать ровно одному модулю. Компилятор выдает ошибку, если вы пытаетесь объявить один и тот же класс более чем в одном модуле.</target>
        </trans-unit>
        <trans-unit id="edf83e5ef4374c63627032e619ad9b5c095e9652" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;decorators&lt;/code&gt; value leaves the decorators in place, which makes compilation faster. TypeScript emits calls to the&lt;code&gt;__decorate&lt;/code&gt; helper. Use &lt;code&gt;--emitDecoratorMetadata&lt;/code&gt; for runtime reflection (but note that the resulting code will not properly tree-shake.</source>
          <target state="translated">Значение &lt;code&gt;decorators&lt;/code&gt; оставляет декораторы на месте, что ускоряет компиляцию. TypeScript &lt;code&gt;__decorate&lt;/code&gt; помощнику __decorate . Используйте &lt;code&gt;--emitDecoratorMetadata&lt;/code&gt; для отражения во время выполнения (но учтите, что результирующий код не будет должным образом трясти дерево.</target>
        </trans-unit>
        <trans-unit id="01aa5cdc650ed29b4ba348390d4546cde0f24a6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defer()&lt;/code&gt; operator transforms the &lt;code&gt;Promise.resolve()&lt;/code&gt; into a new observable that, like &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt;, emits once and completes. Subscribers are unsubscribed after they receive the data value.</source>
          <target state="translated">В &lt;code&gt;defer()&lt;/code&gt; оператор переводит &lt;code&gt;Promise.resolve()&lt;/code&gt; в новом наблюдаемый , что, как &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , испускает один раз и завершается. Подписчики отписываются после получения значения данных.</target>
        </trans-unit>
        <trans-unit id="b6d005b9a06ea9d2e794c6c980f3f87a8cc44bd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dependencies&lt;/code&gt; section of &lt;code&gt;package.json&lt;/code&gt; contains:</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; секция &lt;code&gt;package.json&lt;/code&gt; содержит:</target>
        </trans-unit>
        <trans-unit id="712ff847f10b4b8a94016b2e9683b9c6d170e28a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deps&lt;/code&gt; property is an array of &lt;a href=&quot;dependency-injection#token&quot;&gt;provider tokens&lt;/a&gt;. The &lt;code&gt;Logger&lt;/code&gt; and &lt;code&gt;UserService&lt;/code&gt; classes serve as tokens for their own class providers. The injector resolves these tokens and injects the corresponding services into the matching factory function parameters.</source>
          <target state="translated">Свойство &lt;code&gt;deps&lt;/code&gt; является массивом &lt;a href=&quot;dependency-injection#token&quot;&gt;токенов провайдера&lt;/a&gt; . В &lt;code&gt;Logger&lt;/code&gt; и &lt;code&gt;UserService&lt;/code&gt; классов служат в качестве маркеров для своих поставщиков класса. Инжектор разрешает эти токены и внедряет соответствующие сервисы в соответствующие параметры фабричной функции.</target>
        </trans-unit>
        <trans-unit id="771ad00c4e2fa763112e7ab1a82d70d93cb37923" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disabled&lt;/code&gt; attribute is another example. A button's &lt;code&gt;disabled&lt;/code&gt;&lt;em&gt;property&lt;/em&gt; is &lt;code&gt;false&lt;/code&gt; by default so the button is enabled.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; атрибут является еще одним примером. А кнопки &lt;code&gt;disabled&lt;/code&gt; &lt;em&gt;свойство&lt;/em&gt; является &lt;code&gt;false&lt;/code&gt; по умолчанию , так что кнопка включена.</target>
        </trans-unit>
        <trans-unit id="319dab980acd9cc31116c4df7df65b73ea4cb710" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;doSomething()&lt;/code&gt; method updates the screen when the hero name exceeds 10 characters.</source>
          <target state="translated">Метод &lt;code&gt;doSomething()&lt;/code&gt; обновляет экран, когда имя героя превышает 10 символов.</target>
        </trans-unit>
        <trans-unit id="ada4f6d62fe998707490f2e8a9423a8a23e6338d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elementRef&lt;/code&gt; and &lt;code&gt;injector&lt;/code&gt; parameters should be acquired from Angular by dependency injection into the base class constructor.</source>
          <target state="translated">Параметры &lt;code&gt;elementRef&lt;/code&gt; и &lt;code&gt;injector&lt;/code&gt; должны быть получены из Angular путем внедрения зависимости в конструктор базового класса.</target>
        </trans-unit>
        <trans-unit id="5c2abe112226118d74fa90b194a790196531b297" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entryComponents&lt;/code&gt; array</source>
          <target state="translated">&lt;code&gt;entryComponents&lt;/code&gt; массив</target>
        </trans-unit>
        <trans-unit id="a95d3d386e882c2cf11c01588e861360252d86bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;error&lt;/code&gt; notification sends a JavaScript Error or exception.</source>
          <target state="translated">&lt;code&gt;error&lt;/code&gt; уведомление отправляет ошибку JavaScript или исключение.</target>
        </trans-unit>
        <trans-unit id="c73b31fb5622fd1bf583c68f96ca67211366a350" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;evil.com&lt;/code&gt; page immediately sends a malicious request to &lt;code&gt;example-bank.com&lt;/code&gt;. Perhaps it's a request to transfer money from the user's account to the attacker's account. The browser automatically sends the &lt;code&gt;example-bank.com&lt;/code&gt; cookies (including the authentication cookie) with this request.</source>
          <target state="translated">Страница &lt;code&gt;evil.com&lt;/code&gt; немедленно отправляет вредоносный запрос на &lt;code&gt;example-bank.com&lt;/code&gt; . Возможно, это запрос на перевод денег со счета пользователя на счет злоумышленника. Браузер автоматически отправляет файлы cookie &lt;code&gt;example-bank.com&lt;/code&gt; (включая файлы cookie для аутентификации) вместе с этим запросом.</target>
        </trans-unit>
        <trans-unit id="dc8d5771d4ef456e7c432a7423b24d0f444af107" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exponential-strength.pipe.ts&lt;/code&gt; component defines a custom pipe named &lt;code&gt;exponentialStrength&lt;/code&gt; with the &lt;code&gt;transform&lt;/code&gt; method that performs the transformation. It defines an argument to the &lt;code&gt;transform&lt;/code&gt; method (&lt;code&gt;exponent&lt;/code&gt;) for a parameter passed to the pipe.</source>
          <target state="translated">Компонент &lt;code&gt;exponential-strength.pipe.ts&lt;/code&gt; Strength.pipe.ts определяет настраиваемый канал с именем &lt;code&gt;exponentialStrength&lt;/code&gt; с методом &lt;code&gt;transform&lt;/code&gt; который выполняет преобразование. Он определяет аргумент метода &lt;code&gt;transform&lt;/code&gt; ( &lt;code&gt;exponent&lt;/code&gt; ) для параметра, передаваемого конвейеру.</target>
        </trans-unit>
        <trans-unit id="8f050e1cfebaa99a71c0c009a884526cb28ee238" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exponentialStrength&lt;/code&gt; pipe executes every time the user changes the &quot;normal power&quot; value or the &quot;boost factor&quot;, as shown in Figure 3.</source>
          <target state="translated">Канал &lt;code&gt;exponentialStrength&lt;/code&gt; выполняется каждый раз, когда пользователь изменяет значение &amp;laquo;нормальной мощности&amp;raquo; или &amp;laquo;коэффициент усиления&amp;raquo;, как показано на рисунке 3.</target>
        </trans-unit>
        <trans-unit id="21ecfa2595cc1f5b325b2c21cfbff7962334a60c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;exports&lt;/code&gt; options make the declared directives and pipes available for import by other NgModules.</source>
          <target state="translated">Параметры &lt;code&gt;exports&lt;/code&gt; делают заявленные директивы и каналы доступными для импорта другими модулями NgModules.</target>
        </trans-unit>
        <trans-unit id="4c7e18bb45ba4b5fd41913cd19bf2cb5879bd3d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extract-i18n&lt;/code&gt; command can read and write files in three translation formats:</source>
          <target state="translated">Команда &lt;code&gt;extract-i18n&lt;/code&gt; может читать и записывать файлы в трех форматах перевода:</target>
        </trans-unit>
        <trans-unit id="ba5be89352c9b3d4545a07684018a85c193a9e6b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extract-i18n&lt;/code&gt; command creates a source language file named &lt;code&gt;messages.xlf&lt;/code&gt; in your project's root directory using the &lt;a href=&quot;https://en.wikipedia.org/wiki/XLIFF&quot;&gt;XML Localization Interchange File Format (XLIFF, version 1.2)&lt;/a&gt;.</source>
          <target state="translated">Команда &lt;code&gt;extract-i18n&lt;/code&gt; создает файл исходного языка с именем &lt;code&gt;messages.xlf&lt;/code&gt; в корневом каталоге вашего проекта, используя &lt;a href=&quot;https://en.wikipedia.org/wiki/XLIFF&quot;&gt;формат файла обмена локализацией XML (XLIFF, версия 1.2)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="924a0bda0e58b6d45eeda97233361e4d92152b9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;factory&lt;/code&gt; function returns the &lt;code&gt;localStorage&lt;/code&gt; property that is attached to the browser window object. The &lt;code&gt;&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; decorator is a constructor parameter used to specify a custom provider of a dependency. This custom provider can now be overridden during testing with a mock API of &lt;code&gt;localStorage&lt;/code&gt; instead of interacting with real browser APIs.</source>
          <target state="translated">Функция &lt;code&gt;factory&lt;/code&gt; возвращает свойство &lt;code&gt;localStorage&lt;/code&gt; , прикрепленное к объекту окна браузера. &lt;code&gt;&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; декоратор является параметр конструктора используется для определения пользовательского поставщика зависимости. Этот настраиваемый поставщик теперь можно переопределить во время тестирования с помощью фиктивного API &lt;code&gt;localStorage&lt;/code&gt; вместо взаимодействия с настоящими API-интерфейсами браузера.</target>
        </trans-unit>
        <trans-unit id="a9be60669d284e5d6102bee94f0946b335ed3c86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;factory&lt;/code&gt; function returns the &lt;code&gt;localStorage&lt;/code&gt; property that is attached to the browser window object. The &lt;code&gt;&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; decorator is a constructor parameter used to specify a custom provider of a dependency. This custom provider can now be overridden during testing with a mock API of &lt;code&gt;localStorage&lt;/code&gt; instead of interactive with real browser APIs.</source>
          <target state="translated">Функция &lt;code&gt;factory&lt;/code&gt; возвращает свойство &lt;code&gt;localStorage&lt;/code&gt; , которое прикреплено к объекту окна браузера. &lt;code&gt;&lt;a href=&quot;../api/core/inject&quot;&gt;Inject&lt;/a&gt;&lt;/code&gt; декоратор является параметр конструктора используется для определения пользовательского поставщика зависимости. Этот пользовательский поставщик теперь может быть переопределен во время тестирования с фиктивным API &lt;code&gt;localStorage&lt;/code&gt; вместо интерактивного с реальными API браузеров.</target>
        </trans-unit>
        <trans-unit id="b00430e5bbaeadf8241fc073201ea7ecc5ca41b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;factory&lt;/code&gt; property points to the generated entry function. In this example, you invoke the &lt;code&gt;hello-world&lt;/code&gt; schematic by calling the &lt;code&gt;helloWorld()&lt;/code&gt; factory function.</source>
          <target state="translated">Свойство &lt;code&gt;factory&lt;/code&gt; указывает на сгенерированную функцию входа. В этом примере вы вызываете схему &lt;code&gt;hello-world&lt;/code&gt; , вызывая фабричную функцию &lt;code&gt;helloWorld()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe36d75cc550ebe730a33a6d287578930b3b9f33" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;favoriteColor&lt;/code&gt; value is updated in the component.</source>
          <target state="translated">Значение &lt;code&gt;favoriteColor&lt;/code&gt; обновляется в компоненте.</target>
        </trans-unit>
        <trans-unit id="127d59be8640df24f5583305129ef01af0da1a63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fetch&lt;/code&gt; and &lt;code&gt;fetch-json&lt;/code&gt; pipes display the heroes as shown in Figure 5.</source>
          <target state="translated">В начнут &lt;code&gt;fetch&lt;/code&gt; и &lt;code&gt;fetch-json&lt;/code&gt; трубы отображения героев , как показано на рисунке 5.</target>
        </trans-unit>
        <trans-unit id="7108ed3bcfda58185316e0339599c6526b1f2408" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fetch&lt;/code&gt; pipe (&lt;code&gt;fetch-json.pipe.ts&lt;/code&gt;).</source>
          <target state="translated">Канал &lt;code&gt;fetch&lt;/code&gt; ( &lt;code&gt;fetch-json.pipe.ts&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="4a29f62b66251be3080836e417909a06fdd5cb52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fixture.whenStable()&lt;/code&gt; returns a promise that resolves when the JavaScript engine's task queue becomes empty. In this example, the task queue becomes empty when the observable emits the first quote.</source>
          <target state="translated">&lt;code&gt;fixture.whenStable()&lt;/code&gt; возвращает обещание , которое решает , когда очередь задачи двигателя в JavaScript становится пустой. В этом примере очередь задач становится пустой, когда наблюдаемое испускает первую кавычку.</target>
        </trans-unit>
        <trans-unit id="881baa9041fdc7ad68bbc1a717633ee715f6da9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forChild()&lt;/code&gt; method creates an &lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; that contains all the directives and the given routes, but does not include the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service.</source>
          <target state="translated">Метод &lt;code&gt;forChild()&lt;/code&gt; создает &lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; который содержит все директивы и заданные маршруты, но не включает службу &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6eefc0aaa0380bddfa4cf81ec05c3559e3ac941" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forRoot()&lt;/code&gt; configuration method takes an &lt;code&gt;InMemoryDataService&lt;/code&gt; class that primes the in-memory database.</source>
          <target state="translated">&lt;code&gt;forRoot()&lt;/code&gt; метод конфигурации принимает &lt;code&gt;InMemoryDataService&lt;/code&gt; класса, простые числа в базе данных в оперативной памяти.</target>
        </trans-unit>
        <trans-unit id="127fea156d178f36549610f61f489eddc6685d9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forRoot()&lt;/code&gt; method creates an &lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; that contains all the directives, the given routes, and the &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; service itself.</source>
          <target state="translated">Метод &lt;code&gt;forRoot()&lt;/code&gt; создает &lt;code&gt;&lt;a href=&quot;../core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; , содержащий все директивы, заданные маршруты и саму службу &lt;code&gt;&lt;a href=&quot;router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55ac1b05d812482b7507362d51a4ec1a2580d80d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forRoot()&lt;/code&gt; method takes care of the &lt;em&gt;global&lt;/em&gt; injector configuration for the Router. The &lt;code&gt;forChild()&lt;/code&gt; method has no injector configuration. It uses directives such as &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt;. For more information, see the &lt;a href=&quot;singleton-services#forRoot&quot;&gt;&lt;code&gt;forRoot()&lt;/code&gt; pattern&lt;/a&gt; section of the &lt;a href=&quot;singleton-services&quot;&gt;Singleton Services&lt;/a&gt; guide.</source>
          <target state="translated">Метод &lt;code&gt;forRoot()&lt;/code&gt; заботится о &lt;em&gt;глобальной&lt;/em&gt; конфигурации инжектора для маршрутизатора. У &lt;code&gt;forChild()&lt;/code&gt; нет конфигурации инжектора. Он использует такие директивы, как &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; . Для получения дополнительной информации см &lt;a href=&quot;singleton-services#forRoot&quot;&gt; &lt;code&gt;forRoot()&lt;/code&gt; шаблон&lt;/a&gt; раздел &lt;a href=&quot;singleton-services&quot;&gt;Singleton Услуги&lt;/a&gt; гида.</target>
        </trans-unit>
        <trans-unit id="e68a2010e1bbb32a0b1a5eab0b289f3ed8d55958" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forRoot()&lt;/code&gt; pattern</source>
          <target state="translated">&lt;code&gt;forRoot()&lt;/code&gt; модели</target>
        </trans-unit>
        <trans-unit id="04c1a805b485019f2266bc642ca4eb018b5b6c5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forRoot()&lt;/code&gt; static method is a convention that makes it easy for developers to configure services and providers that are intended to be singletons. A good example of &lt;code&gt;forRoot()&lt;/code&gt; is the &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;forRoot()&lt;/code&gt; статический метод является соглашением , что делает его легким для разработчиков , чтобы настроить услуги и поставщик, которые предназначены , чтобы быть одиночками. Хорошим примером &lt;code&gt;forRoot()&lt;/code&gt; является метод &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forRoot&quot;&gt;RouterModule.forRoot()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dba3238be00f6a9329dd14c8cde743d8af35af2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forbiddenNameValidator&lt;/code&gt; factory returns the configured validator function. That function takes an Angular control object and returns &lt;em&gt;either&lt;/em&gt; null if the control value is valid &lt;em&gt;or&lt;/em&gt; a validation error object. The validation error object typically has a property whose name is the validation key, &lt;code&gt;'forbiddenName'&lt;/code&gt;, and whose value is an arbitrary dictionary of values that you could insert into an error message, &lt;code&gt;{name}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;forbiddenNameValidator&lt;/code&gt; завод возвращает сконфигурированный функцию валидатор. Эта функция принимает объект управления Angular и возвращает &lt;em&gt;либо&lt;/em&gt; ноль, если значение элемента управления является допустимым, &lt;em&gt;либо&lt;/em&gt; объект ошибки проверки. У объекта ошибки проверки обычно есть свойство, именем которого является ключ проверки, &lt;code&gt;'forbiddenName'&lt;/code&gt; , а значением является произвольный словарь значений, который можно вставить в сообщение об ошибке &lt;code&gt;{name}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6c47dfe0b4a9d194d93da6a53e2c28c4b4a6638" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;freshness&lt;/code&gt; strategy usually results in more requests sent to the server, which can increase response latency. It is recommended that you use the default performance strategy whenever possible.</source>
          <target state="translated">&lt;code&gt;freshness&lt;/code&gt; стратегия обычно приводит к большему количеству запросов , отправляемых на сервер, который может увеличить время ожидания ответа. По возможности рекомендуется использовать стратегию производительности по умолчанию.</target>
        </trans-unit>
        <trans-unit id="85f621324bd7bc992e815895a148f44c50582aa1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;get()&lt;/code&gt; method takes two arguments; the endpoint URL from which to fetch, and an &lt;em&gt;options&lt;/em&gt; object that you can use to configure the request.</source>
          <target state="translated">Метод &lt;code&gt;get()&lt;/code&gt; принимает два аргумента; URL-адрес конечной точки, из которого выполняется выборка, и объект &lt;em&gt;параметров&lt;/em&gt; , который можно использовать для настройки запроса.</target>
        </trans-unit>
        <trans-unit id="fd14df01685172b159816db8b4cc83eb319f6817" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getEventMessage&lt;/code&gt; method interprets each type of &lt;code&gt;&lt;a href=&quot;../api/common/http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; in the event stream.</source>
          <target state="translated">Метод &lt;code&gt;getEventMessage&lt;/code&gt; интерпретирует каждый тип &lt;code&gt;&lt;a href=&quot;../api/common/http/httpevent&quot;&gt;HttpEvent&lt;/a&gt;&lt;/code&gt; в потоке событий.</target>
        </trans-unit>
        <trans-unit id="0720e6119153b338ac8f3687fa78b44bc47f650b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getItems()&lt;/code&gt; method collects the items users add to the cart and returns each item with its associated quantity.</source>
          <target state="translated">Метод &lt;code&gt;getItems()&lt;/code&gt; собирает элементы, которые пользователи добавляют в корзину, и возвращает каждый элемент с соответствующим количеством.</target>
        </trans-unit>
        <trans-unit id="a5b92c25379c77bec5a559ce651e63e02dcdcc9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;goToItems()&lt;/code&gt; method interprets the destination URI as relative to the activated route and navigates to the &lt;code&gt;items&lt;/code&gt; route.</source>
          <target state="translated">Метод &lt;code&gt;goToItems()&lt;/code&gt; интерпретирует целевой URI как относящийся к активированному маршруту и ​​переходит к маршруту &lt;code&gt;items&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b27c3ddf198371aface3067fae60b5f34b13c19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hero-birthday2.component.ts&lt;/code&gt; component binds the pipe's format parameter to the component's &lt;code&gt;format&lt;/code&gt; property in the &lt;code&gt;template&lt;/code&gt; section, and adds a button for a click event bound to the component's &lt;code&gt;toggleFormat()&lt;/code&gt; method.</source>
          <target state="translated">Компонент &lt;code&gt;hero-birthday2.component.ts&lt;/code&gt; связывает параметр формата канала со свойством &lt;code&gt;format&lt;/code&gt; компонента в разделе &lt;code&gt;template&lt;/code&gt; и добавляет кнопку для события щелчка, привязанную к &lt;code&gt;toggleFormat()&lt;/code&gt; компонента .</target>
        </trans-unit>
        <trans-unit id="5467834f536bb386d92822c337a7b0060f16f33e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hero-birthday2.component.ts&lt;/code&gt; component's &lt;code&gt;toggleFormat()&lt;/code&gt; method toggles the component's &lt;code&gt;format&lt;/code&gt; property between a short form (&lt;code&gt;'shortDate'&lt;/code&gt;) and a longer form (&lt;code&gt;'fullDate'&lt;/code&gt;).</source>
          <target state="translated">Метод &lt;code&gt;toggleFormat()&lt;/code&gt; компонента &lt;code&gt;hero-birthday2.component.ts&lt;/code&gt; переключает свойство &lt;code&gt;format&lt;/code&gt; компонента между краткой формой ( &lt;code&gt;'shortDate'&lt;/code&gt; ) и более длинной формой ( &lt;code&gt;'fullDate'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="3a70ca7b9c1c4fe66b0b5e312918acfa718fb720" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hero&lt;/code&gt; property &lt;a href=&quot;../guide/inputs-outputs&quot;&gt;must be an &lt;em&gt;Input&lt;/em&gt; property&lt;/a&gt;, annotated with the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator, because the &lt;em&gt;external&lt;/em&gt;&lt;code&gt;HeroesComponent&lt;/code&gt;&lt;a href=&quot;toh-pt3#heroes-component-template&quot;&gt;will bind to it&lt;/a&gt; like this.</source>
          <target state="translated">&lt;code&gt;hero&lt;/code&gt; собственность &lt;a href=&quot;../guide/inputs-outputs&quot;&gt;должна являться &lt;em&gt;входным&lt;/em&gt; свойством&lt;/a&gt; , аннотированного с &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; декоратором, потому что &lt;em&gt;внешний &lt;/em&gt; &lt;code&gt;HeroesComponent&lt;/code&gt; &lt;a href=&quot;toh-pt3#heroes-component-template&quot;&gt;будет связываться с ним&lt;/a&gt; , как это.</target>
        </trans-unit>
        <trans-unit id="39d503fba2d2e3b6c4480f750303d3e8aed59ed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hero&lt;/code&gt; property &lt;a href=&quot;../guide/template-syntax#inputs-outputs&quot;&gt;must be an &lt;em&gt;Input&lt;/em&gt; property&lt;/a&gt;, annotated with the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; decorator, because the &lt;em&gt;external&lt;/em&gt;&lt;code&gt;HeroesComponent&lt;/code&gt;&lt;a href=&quot;toh-pt3#heroes-component-template&quot;&gt;will bind to it&lt;/a&gt; like this.</source>
          <target state="translated">&lt;code&gt;hero&lt;/code&gt; собственность &lt;a href=&quot;../guide/template-syntax#inputs-outputs&quot;&gt;должна являться &lt;em&gt;входным&lt;/em&gt; свойством&lt;/a&gt; , аннотированного с &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; декоратором, потому что &lt;em&gt;внешний &lt;/em&gt; &lt;code&gt;HeroesComponent&lt;/code&gt; &lt;a href=&quot;toh-pt3#heroes-component-template&quot;&gt;будет связываться с ним&lt;/a&gt; , как это.</target>
        </trans-unit>
        <trans-unit id="a2edb9a418b0554b3bfc9b77ca9cc6ab8f255079" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;heroDe&lt;/code&gt; in the previous test is a &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; that represents the hero &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;heroDe&lt;/code&gt; в предыдущем тесте является &lt;code&gt;&lt;a href=&quot;../api/core/debugelement&quot;&gt;DebugElement&lt;/a&gt;&lt;/code&gt; , который представляет герой &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe76834c11e23bdf25e69d2b4d46892575be8ced" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;heroForm&lt;/code&gt; template variable is now a reference to the &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; directive instance that governs the form as a whole.</source>
          <target state="translated">&lt;code&gt;heroForm&lt;/code&gt; переменная шаблона теперь ссылка на &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;NgForm&lt;/a&gt;&lt;/code&gt; директивы , например, регулирующей форму в целом.</target>
        </trans-unit>
        <trans-unit id="6362acf07cbe2fa34576d50dba32d4d4e546c13b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;home&lt;/code&gt; and &lt;code&gt;about&lt;/code&gt; paths are associated with the &lt;code&gt;HomeComponent&lt;/code&gt; and &lt;code&gt;AboutComponent&lt;/code&gt; views. The route configuration tells the Angular router to instantiate the &lt;code&gt;HomeComponent&lt;/code&gt; and &lt;code&gt;AboutComponent&lt;/code&gt; views when the navigation matches the corresponding path.</source>
          <target state="translated">&lt;code&gt;home&lt;/code&gt; и &lt;code&gt;about&lt;/code&gt; путях связаны с &lt;code&gt;HomeComponent&lt;/code&gt; и &lt;code&gt;AboutComponent&lt;/code&gt; видом. Конфигурация маршрута говорит Угловое маршрутизатор для конкретизации &lt;code&gt;HomeComponent&lt;/code&gt; и &lt;code&gt;AboutComponent&lt;/code&gt; просмотров , когда навигация соответствует соответствующему пути.</target>
        </trans-unit>
        <trans-unit id="2a02f37aa3baaa14054711339393bc3aef4719e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; value appears in the URL as (&lt;code&gt;;id=15;foo=foo&lt;/code&gt;), not in the URL path. The path for the &quot;Heroes&quot; route doesn't have an &lt;code&gt;:id&lt;/code&gt; token.</source>
          <target state="translated">Значение &lt;code&gt;id&lt;/code&gt; появляется в URL как ( &lt;code&gt;;id=15;foo=foo&lt;/code&gt; ), а не в пути URL. Путь для маршрута &amp;laquo;Герои&amp;raquo; не имеет токена &lt;code&gt;:id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2a37db1eb13b9ead8103b3a67181318ca13dfa1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id=&quot;introductionHeader&quot;&quot;&lt;/code&gt; is a &lt;a href=&quot;i18n#custom-id&quot;&gt;custom ID&lt;/a&gt;, but without the &lt;code&gt;@@&lt;/code&gt; prefix required in the source HTML.</source>
          <target state="translated">&lt;code&gt;id=&quot;introductionHeader&quot;&quot;&lt;/code&gt; является &lt;a href=&quot;i18n#custom-id&quot;&gt;пользовательским идентификатором&lt;/a&gt; , но без &lt;code&gt;@@&lt;/code&gt; префикса требуется в исходном HTML.</target>
        </trans-unit>
        <trans-unit id="bcbab5f11479981553cbc81516e984d3e5ea7327" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;identity&lt;/code&gt; validator implements the &lt;code&gt;&lt;a href=&quot;../api/forms/validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; interface. It takes an Angular control object as an argument and returns either null if the form is valid, or &lt;code&gt;&lt;a href=&quot;../api/forms/validationerrors&quot;&gt;ValidationErrors&lt;/a&gt;&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;identity&lt;/code&gt; валидатор реализует &lt;code&gt;&lt;a href=&quot;../api/forms/validatorfn&quot;&gt;ValidatorFn&lt;/a&gt;&lt;/code&gt; интерфейс. Он принимает в качестве аргумента объект управления Angular и возвращает либо null, если форма действительна, либо &lt;code&gt;&lt;a href=&quot;../api/forms/validationerrors&quot;&gt;ValidationErrors&lt;/a&gt;&lt;/code&gt; в противном случае.</target>
        </trans-unit>
        <trans-unit id="7232545d328800c53fff51138f5955f3e7f74341" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;import&lt;/code&gt; statement specifies an additional &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; symbol from the Angular &lt;code&gt;core&lt;/code&gt; library:</source>
          <target state="translated">Оператор &lt;code&gt;import&lt;/code&gt; указывает дополнительный символ &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;core&lt;/code&gt; библиотеки Angular :</target>
        </trans-unit>
        <trans-unit id="049525d2c4f861b9a942bcdfc68610b177c1bcb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;imports&lt;/code&gt; array</source>
          <target state="translated">&lt;code&gt;imports&lt;/code&gt; массив</target>
        </trans-unit>
        <trans-unit id="8c1be88d9d2352c6c3fbf36e60352a74ee41e8c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in-memory-data.service.ts&lt;/code&gt; file replaces &lt;code&gt;mock-heroes.ts&lt;/code&gt;, which is now safe to delete.</source>
          <target state="translated">&lt;code&gt;in-memory-data.service.ts&lt;/code&gt; файл заменяет &lt;code&gt;mock-heroes.ts&lt;/code&gt; , который теперь можно безопасно удалить.</target>
        </trans-unit>
        <trans-unit id="5948673b687ff09a4cbca50cc357fac757e1e338" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;in-memory-data.service.ts&lt;/code&gt; file will take over the function of &lt;code&gt;mock-heroes.ts&lt;/code&gt;. However, don't delete &lt;code&gt;mock-heroes.ts&lt;/code&gt; yet, as you still need it for a few more steps of this tutorial.</source>
          <target state="translated">&lt;code&gt;in-memory-data.service.ts&lt;/code&gt; файл будет взять на себя функцию &lt;code&gt;mock-heroes.ts&lt;/code&gt; . Однако пока не удаляйте &lt;code&gt;mock-heroes.ts&lt;/code&gt; , так как он вам понадобится еще для нескольких шагов этого руководства.</target>
        </trans-unit>
        <trans-unit id="1ddf450cc5e1c65a6c7b59f655887b0662ef9011" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index.html&lt;/code&gt; file is also modified during the build process to include script tags that enable differential loading. See the sample output below from the &lt;code&gt;index.html&lt;/code&gt; file produced during a build using &lt;code&gt;ng build&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; файл также изменяется в процессе сборки , чтобы включить тег сценария , которые позволяют дифференциальную нагрузку. Посмотрите пример выходных данных ниже из файла &lt;code&gt;index.html&lt;/code&gt; , созданного во время сборки с использованием &lt;code&gt;ng build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dfcc0a77d947eb184ba0eb6295bbbba9aa94afdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index.html&lt;/code&gt; will likely have script tags loading AngularJS files, so the &lt;code&gt;index.html&lt;/code&gt; for AOT must also load those files. An easy way to copy them is by adding each to the &lt;code&gt;copy-dist-files.js&lt;/code&gt; file.</source>
          <target state="translated">В &lt;code&gt;index.html&lt;/code&gt; , вероятно, будут теги скрипта, загружающие файлы AngularJS, поэтому &lt;code&gt;index.html&lt;/code&gt; для AOT также должен загружать эти файлы. Простой способ скопировать их - добавить каждый в файл &lt;code&gt;copy-dist-files.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="779016803ead9dfec62b8680c130c4c7b844144b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;index&lt;/code&gt; property of the &lt;code&gt;NgFor&lt;/code&gt; directive context returns the zero-based index of the item in each iteration. You can capture the &lt;code&gt;index&lt;/code&gt; in a template input variable and use it in the template.</source>
          <target state="translated">&lt;code&gt;index&lt;/code&gt; свойство &lt;code&gt;NgFor&lt;/code&gt; директивы контекста возвращает отсчитываемый от нуля индекс элемента в каждой итерации. Вы можете захватить &lt;code&gt;index&lt;/code&gt; во входной переменной шаблона и использовать его в шаблоне.</target>
        </trans-unit>
        <trans-unit id="e680efed95e08393f7d53fb276d913ac1224a8da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inject&lt;/code&gt; function is often adequate for this purpose. But &lt;code&gt;inject&lt;/code&gt; throws an error if it can't provide the service.</source>
          <target state="translated">Функция &lt;code&gt;inject&lt;/code&gt; часто подходит для этой цели. Но &lt;code&gt;inject&lt;/code&gt; выдает ошибку, если не может предоставить услугу.</target>
        </trans-unit>
        <trans-unit id="a871438d8f60cdf53bf645d03648573c77c8c396" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;installMode&lt;/code&gt; determines how these resources are initially cached. The &lt;code&gt;installMode&lt;/code&gt; can be either of two values:</source>
          <target state="translated">&lt;code&gt;installMode&lt;/code&gt; определяет , каким образом эти ресурсы первоначально кэшируются. &lt;code&gt;installMode&lt;/code&gt; может быть одно из двух значений:</target>
        </trans-unit>
        <trans-unit id="7adafbc3d7e9fcd1852e26be325cfdf1980b4479" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;intercept&lt;/code&gt; method transforms a request into an &lt;code&gt;Observable&lt;/code&gt; that eventually returns the HTTP response. In this sense, each interceptor is fully capable of handling the request entirely by itself.</source>
          <target state="translated">Метод &lt;code&gt;intercept&lt;/code&gt; преобразует запрос в &lt;code&gt;Observable&lt;/code&gt; , который в конечном итоге возвращает HTTP-ответ. В этом смысле каждый перехватчик полностью способен обрабатывать запрос самостоятельно.</target>
        </trans-unit>
        <trans-unit id="2108a2ee63b2069a96b62e4fd1f9a5f2332d2859" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isAlterEgoTaken()&lt;/code&gt; method dispatches an HTTP request that checks if the alter ego is available, and returns &lt;code&gt;Observable&amp;lt;boolean&amp;gt;&lt;/code&gt; as the result. The &lt;code&gt;validate()&lt;/code&gt; method pipes the response through the &lt;code&gt;map&lt;/code&gt; operator and transforms it into a validation result.</source>
          <target state="translated">Метод &lt;code&gt;isAlterEgoTaken()&lt;/code&gt; отправляет HTTP-запрос, который проверяет, доступно ли альтер-эго, и в качестве результата возвращает &lt;code&gt;Observable&amp;lt;boolean&amp;gt;&lt;/code&gt; . Метод &lt;code&gt;validate()&lt;/code&gt; передает ответ через оператор &lt;code&gt;map&lt;/code&gt; и преобразует его в результат проверки.</target>
        </trans-unit>
        <trans-unit id="a15d1612279f7ffcaff9708155f1d1d8a675e7b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isAlterEgoTaken()&lt;/code&gt; method dispatches an HTTP request that checks if the alter ego is available, and returns &lt;code&gt;Observable&amp;lt;boolean&amp;gt;&lt;/code&gt; as the result. We pipe the response through the &lt;code&gt;map&lt;/code&gt; operator and transform it into a validation result. As always, we return &lt;code&gt;null&lt;/code&gt; if the form is valid, and &lt;code&gt;&lt;a href=&quot;../api/forms/validationerrors&quot;&gt;ValidationErrors&lt;/a&gt;&lt;/code&gt; if it is not. We make sure to handle any potential errors with the &lt;code&gt;catchError&lt;/code&gt; operator.</source>
          <target state="translated">Метод &lt;code&gt;isAlterEgoTaken()&lt;/code&gt; отправляет HTTP-запрос, который проверяет, доступно ли альтернативное эго, и возвращает &lt;code&gt;Observable&amp;lt;boolean&amp;gt;&lt;/code&gt; в качестве результата. Мы передаем ответ через оператор &lt;code&gt;map&lt;/code&gt; и преобразуем его в результат проверки. Как всегда, мы возвращаем &lt;code&gt;null&lt;/code&gt; если форма верна, и &lt;code&gt;&lt;a href=&quot;../api/forms/validationerrors&quot;&gt;ValidationErrors&lt;/a&gt;&lt;/code&gt; , если это не так. Мы обязательно обрабатываем любые потенциальные ошибки с &lt;code&gt;catchError&lt;/code&gt; оператора catchError .</target>
        </trans-unit>
        <trans-unit id="987a0d43d85abf3ebd433e3c46293440300bbf70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isCachable()&lt;/code&gt; function determines if the request is cachable. In this sample, only GET requests to the npm package search api are cachable.</source>
          <target state="translated">Функция &lt;code&gt;isCachable()&lt;/code&gt; определяет, является ли запрос кэшируемым. В этом примере кэшируются только запросы GET к API поиска пакетов npm.</target>
        </trans-unit>
        <trans-unit id="74b06e437c6efb01a3288a4392197d8254eac202" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isCacheable()&lt;/code&gt; function determines if the request is cacheable. In this sample, only GET requests to the npm package search api are cacheable.</source>
          <target state="translated">Функция &lt;code&gt;isCacheable()&lt;/code&gt; определяет, является ли запрос кешируемым. В этом примере кэшируются только запросы GET к api поиска пакетов npm.</target>
        </trans-unit>
        <trans-unit id="81986ed4ffe8be92868d359a52c73e46a0bba3bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;karma.conf.js&lt;/code&gt; file is a partial Karma configuration file. The CLI constructs the full runtime configuration in memory, based on application structure specified in the &lt;code&gt;angular.json&lt;/code&gt; file, supplemented by &lt;code&gt;karma.conf.js&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;karma.conf.js&lt;/code&gt; файл представляет собой частичный файл конфигурации Karma. CLI &lt;code&gt;angular.json&lt;/code&gt; полную конфигурацию среды выполнения в памяти на основе структуры приложения, указанной в файле angular.json , дополненной &lt;code&gt;karma.conf.js&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5ea13e13bd51c93a963c4708123611462bd790e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;keyup&lt;/code&gt; event binding sends every keystroke to the component's &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;keyup&lt;/code&gt; событие связывания посылает каждое нажатие клавиши на компонента &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; метод.</target>
        </trans-unit>
        <trans-unit id="4d5d3ef5c47ecc1bce3f9257d6bf5a046e88f610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let-i&lt;/code&gt; and &lt;code&gt;let-odd&lt;/code&gt; variables were defined as &lt;code&gt;let i=index&lt;/code&gt; and &lt;code&gt;let &lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;=&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt;. Angular sets them to the current value of the context's &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;let-i&lt;/code&gt; и &lt;code&gt;let-odd&lt;/code&gt; переменные были определены как &lt;code&gt;let i=index&lt;/code&gt; и &lt;code&gt;let &lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;=&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; . Angular устанавливает для них текущее значение &lt;code&gt;index&lt;/code&gt; контекста и &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; свойства.</target>
        </trans-unit>
        <trans-unit id="3ca5558e21840bcf4b3b38fc07d6a40c146f008d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let-i&lt;/code&gt; and &lt;code&gt;let-odd&lt;/code&gt; variables were defined as &lt;code&gt;let i=index&lt;/code&gt; and &lt;code&gt;let odd=odd&lt;/code&gt;. Angular sets them to the current value of the context's &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;odd&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;let-i&lt;/code&gt; и &lt;code&gt;let-odd&lt;/code&gt; переменные были определены как &lt;code&gt;let i=index&lt;/code&gt; и &lt;code&gt;let odd=odd&lt;/code&gt; . Angular устанавливает для них текущее значение &lt;code&gt;index&lt;/code&gt; контекста и &lt;code&gt;odd&lt;/code&gt; свойств.</target>
        </trans-unit>
        <trans-unit id="d45ed2edc5561795b4fe88a5fd6a363a90124505" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let&lt;/code&gt; keyword before &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; creates a template input variable called &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive iterates over the &lt;code&gt;items&lt;/code&gt; array returned by the parent component's &lt;code&gt;items&lt;/code&gt; property and sets &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; to the current item from the array during each iteration.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; ключевое слово , прежде чем &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; создает переменный входной шаблон под названием &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; . В &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; директивы итерации по &lt;code&gt;items&lt;/code&gt; массива , возвращенного родительского компонент &lt;code&gt;items&lt;/code&gt; имущества и наборы &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; на текущий элемент из массива во время каждой итерации.</target>
        </trans-unit>
        <trans-unit id="ba4f5f1907debf2c5dcfc0006affb24e12d5c62d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let&lt;/code&gt; keyword before &lt;code&gt;item&lt;/code&gt; creates a template input variable called &lt;code&gt;item&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; directive iterates over the &lt;code&gt;items&lt;/code&gt; array returned by the parent component's &lt;code&gt;items&lt;/code&gt; property and sets &lt;code&gt;item&lt;/code&gt; to the current item from the array during each iteration.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; ключевое слово , прежде чем &lt;code&gt;item&lt;/code&gt; создает переменный входной шаблон под названием &lt;code&gt;item&lt;/code&gt; . В &lt;code&gt;&lt;a href=&quot;../api/common/ngforof&quot;&gt;ngFor&lt;/a&gt;&lt;/code&gt; директивы итерации по &lt;code&gt;items&lt;/code&gt; массива , возвращенного родительского компонент &lt;code&gt;items&lt;/code&gt; имущества и наборы &lt;code&gt;item&lt;/code&gt; на текущий элемент из массива во время каждой итерации.</target>
        </trans-unit>
        <trans-unit id="67312891b24b8f98f7077e6a626334bbd888baf9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let&lt;/code&gt; keyword declares a &lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;&lt;em&gt;template input variable&lt;/em&gt;&lt;/a&gt; that you reference within the template. The input variables in this example are &lt;code&gt;hero&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt;. The parser translates &lt;code&gt;let hero&lt;/code&gt;, &lt;code&gt;let i&lt;/code&gt;, and &lt;code&gt;let &lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; into variables named &lt;code&gt;let-hero&lt;/code&gt;, &lt;code&gt;let-i&lt;/code&gt;, and &lt;code&gt;let-odd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; ключевое слово объявляет &lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;&lt;em&gt;переменную входной шаблон&lt;/em&gt;&lt;/a&gt; , который вы ссылаетесь в шаблоне. Входными переменными в этом примере являются &lt;code&gt;hero&lt;/code&gt; , &lt;code&gt;i&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; . Парсер переводит &lt;code&gt;let hero&lt;/code&gt; , &lt;code&gt;let i&lt;/code&gt; и &lt;code&gt;let &lt;a href=&quot;../api/common/ngforofcontext#odd&quot;&gt;odd&lt;/a&gt;&lt;/code&gt; в переменные с именами &lt;code&gt;let-hero&lt;/code&gt; , &lt;code&gt;let-i&lt;/code&gt; и &lt;code&gt;let-odd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="634a292f8119dbc280342cc788d0714781558b4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;let&lt;/code&gt; keyword declares a &lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;&lt;em&gt;template input variable&lt;/em&gt;&lt;/a&gt; that you reference within the template. The input variables in this example are &lt;code&gt;hero&lt;/code&gt;, &lt;code&gt;i&lt;/code&gt;, and &lt;code&gt;odd&lt;/code&gt;. The parser translates &lt;code&gt;let hero&lt;/code&gt;, &lt;code&gt;let i&lt;/code&gt;, and &lt;code&gt;let odd&lt;/code&gt; into variables named &lt;code&gt;let-hero&lt;/code&gt;, &lt;code&gt;let-i&lt;/code&gt;, and &lt;code&gt;let-odd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;let&lt;/code&gt; ключевое слово объявляет &lt;a href=&quot;structural-directives#template-input-variable&quot;&gt;&lt;em&gt;переменную входной шаблон&lt;/em&gt;&lt;/a&gt; , который вы ссылаетесь в шаблоне. Входными переменными в этом примере являются &lt;code&gt;hero&lt;/code&gt; , &lt;code&gt;i&lt;/code&gt; и &lt;code&gt;odd&lt;/code&gt; . Парсер переводит &lt;code&gt;let hero&lt;/code&gt; , &lt;code&gt;let i&lt;/code&gt; и &lt;code&gt;let odd&lt;/code&gt; в переменные &lt;code&gt;let-hero&lt;/code&gt; , &lt;code&gt;let-i&lt;/code&gt; и &lt;code&gt;let-odd&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f257babd3730c1022992c731831065e7e6e340b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadComponent()&lt;/code&gt; method chooses an ad using some math.</source>
          <target state="translated">Метод &lt;code&gt;loadComponent()&lt;/code&gt; выбирает объявление, используя некоторую математику.</target>
        </trans-unit>
        <trans-unit id="d58598b12b02d1cfd9ce52912a2c6426fcdcb59b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadComponent()&lt;/code&gt; method is doing a lot of the heavy lifting here. Take it step by step. First, it picks an ad.</source>
          <target state="translated">Метод &lt;code&gt;loadComponent()&lt;/code&gt; делает здесь большую работу. Сделай это шаг за шагом. Во-первых, он выбирает рекламу.</target>
        </trans-unit>
        <trans-unit id="657da6bcc28ab42d092f42096554f848147cd763" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;messageService&lt;/code&gt; property &lt;strong&gt;must be public&lt;/strong&gt; because you're going to bind to it in the template.</source>
          <target state="translated">&lt;code&gt;messageService&lt;/code&gt; свойство &lt;strong&gt;должно быть публичным&lt;/strong&gt; , потому что вы собираетесь связывать с ним в шаблоне.</target>
        </trans-unit>
        <trans-unit id="b39bef99ed6eb1d31b77310df12a7ce7fa0909da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;move&lt;/code&gt; method moves the provided source files to their destination when the schematic is applied.</source>
          <target state="translated">Метод &lt;code&gt;move&lt;/code&gt; перемещает предоставленные исходные файлы к месту назначения при применении схемы.</target>
        </trans-unit>
        <trans-unit id="a555fd300f9beee4ec986089765c4c4f9d39addf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; is provided as a property from your factory function. It is the same &lt;code&gt;name&lt;/code&gt; you defined in the schema.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; предоставляется как свойство от вашей функции фабрики. Это то же &lt;code&gt;name&lt;/code&gt; вы определили в схеме.</target>
        </trans-unit>
        <trans-unit id="8c15bebd1c9694615338dc82048275afeb2594dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; parameter should be the name of the AngularJS directive.</source>
          <target state="translated">Параметр &lt;code&gt;name&lt;/code&gt; должен быть именем директивы AngularJS.</target>
        </trans-unit>
        <trans-unit id="9c4f8ad580b2ff5b5d69b95f0508568f8aa6cdb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property is &lt;code&gt;Sally&lt;/code&gt;.</source>
          <target state="translated">Свойство &lt;code&gt;name&lt;/code&gt; - &lt;code&gt;Sally&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2858b8b17d6d9343e890b1e117c236f2f647306e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; notification sends a value such as a number, a string, or an object.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; уведомление посылает значение , такие как число, строка или объект.</target>
        </trans-unit>
        <trans-unit id="e81819a9cfe4af19f5636eb47d2ae1d60abe59cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; объект</target>
        </trans-unit>
        <trans-unit id="b44a1960d514a7a09b106ab46609d67cafa3ba79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next&lt;/code&gt; object represents the next interceptor in the chain of interceptors. The final &lt;code&gt;next&lt;/code&gt; in the chain is the &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; backend handler that sends the request to the server and receives the server's response.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; объект представляет собой следующий перехватчик в цепи перехватчики. Последним &lt;code&gt;next&lt;/code&gt; в цепочке является обработчик &lt;code&gt;&lt;a href=&quot;../api/common/http/httpclient&quot;&gt;HttpClient&lt;/a&gt;&lt;/code&gt; , который отправляет запрос на сервер и получает ответ от сервера.</target>
        </trans-unit>
        <trans-unit id="ef365b122d4f3b65df123f4627705808d9b58632" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; command can be used to update your workspace's library dependencies. If you supply no options or use the help option, the command examines your workspace and suggests libraries to update.</source>
          <target state="translated">Команда &lt;code&gt;ng &lt;a href=&quot;../api/forms/ngmodel#update&quot;&gt;update&lt;/a&gt;&lt;/code&gt; может быть использована для обновления зависимостей библиотеки вашего рабочего пространства. Если вы не предоставите никаких опций или используете опцию справки, команда проверит ваше рабочее пространство и предложит обновить библиотеки.</target>
        </trans-unit>
        <trans-unit id="661eb26df65f06b9bd2b124b6434e53befc743b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng add&lt;/code&gt; command uses a package manager such as &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; or &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt; to install the library package, and invokes schematics that are included in the package to other scaffolding within the project code, such as adding import statements, fonts, themes, and so on.</source>
          <target state="translated">Команда &lt;code&gt;ng add&lt;/code&gt; использует диспетчер пакетов, такой как &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;npm&lt;/a&gt; или &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn,&lt;/a&gt; для установки пакета библиотеки и вызывает схемы, включенные в пакет, для других каркасов в коде проекта, таких как добавление операторов импорта, шрифтов, тем и т. Д.</target>
        </trans-unit>
        <trans-unit id="402924763f2c69b9a547faff6eeb2122f32401e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng add&lt;/code&gt; command uses the npm package manager or &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt; to install the library package, and invokes schematics that are included in the package to other scaffolding within the project code, such as adding import statements, fonts, themes, and so on.</source>
          <target state="translated">Команда &lt;code&gt;ng add&lt;/code&gt; использует менеджер пакетов npm или &lt;a href=&quot;https://yarnpkg.com/&quot;&gt;yarn&lt;/a&gt; для установки пакета библиотеки и вызывает схемы, включенные в пакет, для других скаффолдингов в коде проекта, таких как добавление операторов импорта, шрифтов, тем и т. Д.</target>
        </trans-unit>
        <trans-unit id="d7bb80a2b7541f339e003710c97fc562d5c771d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng build&lt;/code&gt; command with the &lt;code&gt;--prod&lt;/code&gt; meta-flag (&lt;code&gt;ng build --prod&lt;/code&gt;) compiles with AOT by default.</source>
          <target state="translated">&lt;code&gt;ng build&lt;/code&gt; команды с &lt;code&gt;--prod&lt;/code&gt; мета-флаг ( &lt;code&gt;ng build --prod&lt;/code&gt; ) компилирует с AOT по умолчанию.</target>
        </trans-unit>
        <trans-unit id="151524c159dafe7685065a9676b66852e12e4f54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng extract-i18n&lt;/code&gt; command (with no options) generates a source language file named &lt;code&gt;messages.xlf&lt;/code&gt; in the project &lt;code&gt;src&lt;/code&gt; folder. Create &lt;em&gt;translation&lt;/em&gt; files for each language by copying the source language file. To avoid confusion with multiple translations, you should organize the language translation files by locale in a dedicated &lt;code&gt;locale&lt;/code&gt; folder under &lt;code&gt;src/&lt;/code&gt;. Use a filename extension that matches the associated locale, such as &lt;code&gt;messages.fr.xlf&lt;/code&gt;.</source>
          <target state="translated">Команда &lt;code&gt;ng extract-i18n&lt;/code&gt; (без параметров) создает файл исходного языка с именем &lt;code&gt;messages.xlf&lt;/code&gt; в папке проекта &lt;code&gt;src&lt;/code&gt; . Создайте файлы &lt;em&gt;перевода&lt;/em&gt; для каждого языка, скопировав файл исходного языка. Чтобы избежать путаницы с несколькими переводами, вам следует организовать файлы языковых переводов по локали в специальной папке &lt;code&gt;locale&lt;/code&gt; в &lt;code&gt;src/&lt;/code&gt; . Используйте расширение имени файла, которое соответствует соответствующему языку, например &lt;code&gt;messages.fr.xlf&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2198a23cdfaca74ee5cad793b7e3cc90c0218b2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng generate&lt;/code&gt; command creates the &lt;code&gt;projects/my-lib&lt;/code&gt; folder in your workspace, which contains a component and a service inside an NgModule.</source>
          <target state="translated">Команда &lt;code&gt;ng generate&lt;/code&gt; создает папку &lt;code&gt;projects/my-lib&lt;/code&gt; в вашей рабочей области, которая содержит компонент и службу внутри NgModule.</target>
        </trans-unit>
        <trans-unit id="915b5365ccaeb02cfaf1faa3905f771f9e676ca8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng new&lt;/code&gt; command prompts you for information about features to include in the initial app project. Accept the defaults by pressing the Enter or Return key.</source>
          <target state="translated">Команда &lt;code&gt;ng new&lt;/code&gt; запрашивает информацию о функциях, которые необходимо включить в первоначальный проект приложения. Примите значения по умолчанию, нажав клавишу ввода или возврата.</target>
        </trans-unit>
        <trans-unit id="47140589baf6417447acb195c1530707c4399071" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng new&lt;/code&gt; command prompts you for information about features to include in the initial app. Accept the defaults by pressing the Enter or Return key.</source>
          <target state="translated">Команда &lt;code&gt;ng new&lt;/code&gt; запрашивает информацию о функциях, которые необходимо включить в первоначальное приложение. Примите значения по умолчанию, нажав клавишу ввода или возврата.</target>
        </trans-unit>
        <trans-unit id="d53cb4d3de04d121569ef7fced8acc26fcb00968" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng serve&lt;/code&gt; command builds the app, starts the development server, watches the source files, and rebuilds the app as you make changes to those files.</source>
          <target state="translated">Команда &lt;code&gt;ng serve&lt;/code&gt; создает приложение, запускает сервер разработки, просматривает исходные файлы и перестраивает приложение по мере внесения изменений в эти файлы.</target>
        </trans-unit>
        <trans-unit id="decf48f9f57ece2b4916fc311b2c476376d5e095" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng serve&lt;/code&gt; command launches the server, watches your files, and rebuilds the app as you make changes to those files.</source>
          <target state="translated">Команда &lt;code&gt;ng serve&lt;/code&gt; запускает сервер, просматривает ваши файлы и перестраивает приложение, когда вы вносите изменения в эти файлы.</target>
        </trans-unit>
        <trans-unit id="6cc6ec4618d0114656fc6e332ab1860f96ca810e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng test&lt;/code&gt; command builds the app in &lt;em&gt;watch mode&lt;/em&gt;, and launches the &lt;a href=&quot;https://karma-runner.github.io&quot;&gt;Karma test runner&lt;/a&gt;.</source>
          <target state="translated">Команда &lt;code&gt;ng test&lt;/code&gt; создает приложение в &lt;em&gt;режиме наблюдения&lt;/em&gt; и запускает &lt;a href=&quot;https://karma-runner.github.io&quot;&gt;тестер Karma&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7dd4f9439ed1af7e0523f545b94e486b40d9a486" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng update&lt;/code&gt; command can be used to update your workspace's library dependencies. If you supply no options or use the help option, the command examines your workspace and suggests libraries to update.</source>
          <target state="translated">&lt;code&gt;ng update&lt;/code&gt; команда может быть использована для обновления библиотечных зависимостей вашего рабочего пространства. Если вы не укажете параметры или воспользуетесь справкой, команда проверит ваше рабочее пространство и предложит библиотеки для обновления.</target>
        </trans-unit>
        <trans-unit id="c7b6107217efb4567dcc9df7baefcf1ae3bd71db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng xi18n&lt;/code&gt; command generates a translation source file named &lt;code&gt;messages.xlf&lt;/code&gt; in the project &lt;code&gt;src&lt;/code&gt; folder. The next step is to translate the display strings in this source file into language-specific translation files. The example in this guide creates a French translation file.</source>
          <target state="translated">Команда &lt;code&gt;ng xi18n&lt;/code&gt; создает исходный файл перевода с именем &lt;code&gt;messages.xlf&lt;/code&gt; в папке проекта &lt;code&gt;src&lt;/code&gt; . Следующим шагом является перевод отображаемых строк в этом исходном файле в файлы перевода для конкретного языка. Пример в этом руководстве создает файл французского перевода.</target>
        </trans-unit>
        <trans-unit id="94f0959cbc129968dc58b82a0ff7ada846d3170b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng-href&lt;/code&gt; directive allows AngularJS to preprocess the &lt;code&gt;href&lt;/code&gt; property so that it can replace the binding expression with the appropriate URL before the browser fetches from that URL.</source>
          <target state="translated">&lt;code&gt;ng-href&lt;/code&gt; директива позволяет AngularJS для предобработки &lt;code&gt;href&lt;/code&gt; собственности , так что он может заменить выражение привязки с соответствующими URL перед браузером извлечений из этого URL.</target>
        </trans-unit>
        <trans-unit id="7bd2c70c6651fab453eaa2bf35d388700b4f79b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng-src&lt;/code&gt; directive allows AngularJS to preprocess the &lt;code&gt;src&lt;/code&gt; property so that it can replace the binding expression with the appropriate URL before the browser fetches from that URL.</source>
          <target state="translated">&lt;code&gt;ng-src&lt;/code&gt; директива позволяет AngularJS для предобработки &lt;code&gt;src&lt;/code&gt; свойства , так что он может заменить выражение привязки с соответствующими URL перед браузером извлечений из этого URL.</target>
        </trans-unit>
        <trans-unit id="857809768abb4476e5a1dc05028c8b640e255a37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng-valid&lt;/code&gt;/&lt;code&gt;ng-invalid&lt;/code&gt; pair is particularly interesting, because you want to send a strong visual signal when the values are invalid. You also want to mark required fields.</source>
          <target state="translated">&lt;code&gt;ng-valid&lt;/code&gt; / &lt;code&gt;ng-invalid&lt;/code&gt; пара особенно интересно, потому что вы хотите , чтобы послать сильный визуальный сигнал , когда значения являются недействительными. Вы также хотите отметить обязательные поля.</target>
        </trans-unit>
        <trans-unit id="3138ac0ec252ffe200dfb5a828a82de4ac40f99c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ng-valid&lt;/code&gt;/&lt;code&gt;ng-invalid&lt;/code&gt; pair is the most interesting, because you want to send a strong visual signal when the values are invalid. You also want to mark required fields. To create such visual feedback, add definitions for the &lt;code&gt;ng-*&lt;/code&gt; CSS classes.</source>
          <target state="translated">&lt;code&gt;ng-valid&lt;/code&gt; / &lt;code&gt;ng-invalid&lt;/code&gt; пара является наиболее интересной, потому что вы хотите , чтобы послать сильный визуальный сигнал , когда значения являются недействительными. Вы также хотите отметить обязательные поля. Чтобы создать такую ​​визуальную обратную связь, добавьте определения для классов CSS &lt;code&gt;ng-*&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="84ce1e908b621b2c0b80729e1bdda280c58ec149" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngAfterViewInit()&lt;/code&gt; lifecycle hook is an important wrinkle. The timer component isn't available until &lt;em&gt;after&lt;/em&gt; Angular displays the parent view. So it displays &lt;code&gt;0&lt;/code&gt; seconds initially.</source>
          <target state="translated">&lt;code&gt;ngAfterViewInit()&lt;/code&gt; Жизненный цикл крюк является важными морщинами. Компонент таймера не доступен , пока &lt;em&gt;после&lt;/em&gt; угловых дисплеев родительского вида. Таким образом, изначально он отображает &lt;code&gt;0&lt;/code&gt; секунд.</target>
        </trans-unit>
        <trans-unit id="9ed41a4355ac7ba51dd443b347ab879e887f8572" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngExpressEngine()&lt;/code&gt; function is a wrapper around Universal's &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; function which turns a client's requests into server-rendered HTML pages. It accepts an object with the following properties:</source>
          <target state="translated">Функция &lt;code&gt;ngExpressEngine()&lt;/code&gt; - это оболочка для универсальной функции &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodule&quot;&gt;renderModule&lt;/a&gt;()&lt;/code&gt; которая превращает запросы клиента в HTML-страницы, отображаемые на сервере. Он принимает объект со следующими свойствами:</target>
        </trans-unit>
        <trans-unit id="55184b9fb03b4d4f4740d8b6e58fea5b03d407bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngExpressEngine()&lt;/code&gt; function is a wrapper around Universal's &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; function which turns a client's requests into server-rendered HTML pages.</source>
          <target state="translated">&lt;code&gt;ngExpressEngine()&lt;/code&gt; функция является оберткой Универсэла &lt;code&gt;&lt;a href=&quot;../api/platform-server/rendermodulefactory&quot;&gt;renderModuleFactory&lt;/a&gt;()&lt;/code&gt; функция , которая превращает запросы клиента в сервер рендеренной HTML - страниц.</target>
        </trans-unit>
        <trans-unit id="cea0266c75765dd1f7f192925449a11f3e7685c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngExpressEngine()&lt;/code&gt; function returns a &lt;code&gt;Promise&lt;/code&gt; callback that resolves to the rendered page. It's up to the engine to decide what to do with that page. This engine's &lt;code&gt;Promise&lt;/code&gt; callback returns the rendered page to the web server, which then forwards it to the client in the HTTP response.</source>
          <target state="translated">Функция &lt;code&gt;ngExpressEngine()&lt;/code&gt; возвращает обратный вызов &lt;code&gt;Promise&lt;/code&gt; , который преобразуется в отображаемую страницу. Двигатель сам решает, что делать с этой страницей. Обратный вызов &lt;code&gt;Promise&lt;/code&gt; этого движка возвращает отображаемую страницу на веб-сервер, который затем перенаправляет ее клиенту в ответе HTTP.</target>
        </trans-unit>
        <trans-unit id="e39bac5f0d896fc7bb83309ae7c71f4c31525445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngOnChanges()&lt;/code&gt; method is your first opportunity to access those properties. Angular calls &lt;code&gt;ngOnChanges()&lt;/code&gt; before &lt;code&gt;ngOnInit()&lt;/code&gt; and many times after that. It only calls &lt;code&gt;ngOnInit()&lt;/code&gt; once.</source>
          <target state="translated">Метод &lt;code&gt;ngOnChanges()&lt;/code&gt; - это ваша первая возможность получить доступ к этим свойствам. Angular вызывает &lt;code&gt;ngOnChanges()&lt;/code&gt; до &lt;code&gt;ngOnInit()&lt;/code&gt; и много раз после этого. Он только вызывает &lt;code&gt;ngOnInit()&lt;/code&gt; один раз.</target>
        </trans-unit>
        <trans-unit id="c3e892008e822e750da9095703e147a840b86ca5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngOnChanges()&lt;/code&gt; method is your first opportunity to access those properties. Angular calls &lt;code&gt;ngOnChanges()&lt;/code&gt; before &lt;code&gt;ngOnInit()&lt;/code&gt;, but also many times after that. It only calls &lt;code&gt;ngOnInit()&lt;/code&gt; once.</source>
          <target state="translated">Метод &lt;code&gt;ngOnChanges()&lt;/code&gt; - это ваша первая возможность получить доступ к этим свойствам. Angular вызывает &lt;code&gt;ngOnChanges()&lt;/code&gt; перед &lt;code&gt;ngOnInit()&lt;/code&gt; , но также много раз после этого. Он вызывает &lt;code&gt;ngOnInit()&lt;/code&gt; только один раз.</target>
        </trans-unit>
        <trans-unit id="8e25bbb9011f26f819a7cc6069e3c5f18a8997a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngOnChanges()&lt;/code&gt; method queues an async task to set the value for the internal &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Метод &lt;code&gt;ngOnChanges()&lt;/code&gt; очередь асинхронную задачу, чтобы установить значение для внутреннего экземпляра &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6dbdf349a71f02e0e98a02bd939c4d3eec1858b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngOnChanges()&lt;/code&gt; method takes an object that maps each changed property name to a &lt;a href=&quot;../api/core/simplechange&quot;&gt;SimpleChange&lt;/a&gt; object holding the current and previous property values. This hook iterates over the changed properties and logs them.</source>
          <target state="translated">Метод &lt;code&gt;ngOnChanges()&lt;/code&gt; принимает объект, который отображает каждое измененное имя свойства в объект &lt;a href=&quot;../api/core/simplechange&quot;&gt;SimpleChange,&lt;/a&gt; содержащий текущие и предыдущие значения свойств. Этот хук перебирает измененные свойства и регистрирует их.</target>
        </trans-unit>
        <trans-unit id="a0b31050175bd4d7ae74733eff74e7b30f570426" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngOnDestroy()&lt;/code&gt; method is also the time to notify another part of the application that the component is going away.</source>
          <target state="translated">Метод &lt;code&gt;ngOnDestroy()&lt;/code&gt; также позволяет уведомить другую часть приложения о прекращении работы компонента.</target>
        </trans-unit>
        <trans-unit id="efc6439222087df75fe7510b5276e62ea8e22f67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngOnInit()&lt;/code&gt; and &lt;code&gt;ngOnDestroy()&lt;/code&gt; methods have more vital roles to play in real applications.</source>
          <target state="translated">В &lt;code&gt;ngOnInit()&lt;/code&gt; и &lt;code&gt;ngOnDestroy()&lt;/code&gt; методы имеют более играть важную роль в реальных приложениях.</target>
        </trans-unit>
        <trans-unit id="bc9511230c44a04ab98b667e3d7957d7db190375" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngOnInit()&lt;/code&gt; is a &lt;a href=&quot;../guide/lifecycle-hooks#oninit&quot;&gt;lifecycle hook&lt;/a&gt;. Angular calls &lt;code&gt;ngOnInit()&lt;/code&gt; shortly after creating a component. It's a good place to put initialization logic.</source>
          <target state="translated">&lt;code&gt;ngOnInit()&lt;/code&gt; является &lt;a href=&quot;../guide/lifecycle-hooks#oninit&quot;&gt;жизненным циклом крюка&lt;/a&gt; . Angular вызывает &lt;code&gt;ngOnInit()&lt;/code&gt; вскоре после создания компонента. Это хорошее место для размещения логики инициализации.</target>
        </trans-unit>
        <trans-unit id="981284d8fe4aa73e64020d62ee523dc61af1e4c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngOnInit()&lt;/code&gt; lifecycle hook calls &lt;code&gt;getHeroes()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ngOnInit()&lt;/code&gt; жизненный цикл крючок вызывает &lt;code&gt;getHeroes()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6587607630a415e74bae14f92d2441487296dc7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngTemplateContextGuard&lt;/code&gt; static property declares the type of the template context.</source>
          <target state="translated">&lt;code&gt;ngTemplateContextGuard&lt;/code&gt; статическое свойство описывающее тип контекста шаблона.</target>
        </trans-unit>
        <trans-unit id="4d1333fb866dfc201e0e5e6735bb9286b5f00a7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ngsw-config.json&lt;/code&gt; configuration file specifies which files and data URLs the Angular service worker should cache and how it should update the cached files and data. The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; processes the configuration file during &lt;code&gt;ng build --prod&lt;/code&gt;. Manually, you can process it with the &lt;code&gt;ngsw-config&lt;/code&gt; tool (where &lt;code&gt;&amp;lt;project-name&amp;gt;&lt;/code&gt; is the name of the project being built):</source>
          <target state="translated">В &lt;code&gt;ngsw-config.json&lt;/code&gt; конфигурационный файл определяет , какие файлы и данные URL - Угловая рабочий сервис должен кэшировать и как он должен обновить кэшированные файлы и данные. &lt;a href=&quot;cli&quot;&gt;Угловая CLI&lt;/a&gt; обрабатывает файл конфигурации во время &lt;code&gt;ng build --prod&lt;/code&gt; . Вручную вы можете обработать его с &lt;code&gt;ngsw-config&lt;/code&gt; инструмента ngsw-config (где &lt;code&gt;&amp;lt;project-name&amp;gt;&lt;/code&gt; - имя создаваемого проекта):</target>
        </trans-unit>
        <trans-unit id="f3ce7551e4c509b11e24776b5f665ec3c2322ff6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;observe&lt;/code&gt; value determines the return type, according to what you are interested in observing.</source>
          <target state="translated">Значение &lt;code&gt;observe&lt;/code&gt; определяет тип возвращаемого значения в зависимости от того, что вы заинтересованы в наблюдении.</target>
        </trans-unit>
        <trans-unit id="18b77fe3b5bee95f73d1fc1877c137e7a931d878" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onSubmit()&lt;/code&gt; method in the &lt;code&gt;ProfileEditor&lt;/code&gt; component captures the current value of &lt;code&gt;profileForm&lt;/code&gt;. Use &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; to keep the form encapsulated and to provide the form value outside the component. The following example uses &lt;code&gt;console.warn&lt;/code&gt; to log a message to the browser console.</source>
          <target state="translated">Метод &lt;code&gt;onSubmit()&lt;/code&gt; в компоненте &lt;code&gt;ProfileEditor&lt;/code&gt; фиксирует текущее значение &lt;code&gt;profileForm&lt;/code&gt; . Используйте &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; , чтобы сохранить форму в форме и предоставить значение формы вне компонента. В следующем примере используется &lt;code&gt;console.warn&lt;/code&gt; для записи сообщения в консоль браузера.</target>
        </trans-unit>
        <trans-unit id="ddbbb7fe03501b2cd0af133be1faf50d5e969adf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optimization&lt;/code&gt; and &lt;code&gt;sourceMap&lt;/code&gt; browser builder options can be either a Boolean or an Object for more fine-grained configuration. In this section we will explain how to fine tune these options.</source>
          <target state="translated">Параметры &lt;code&gt;optimization&lt;/code&gt; и &lt;code&gt;sourceMap&lt;/code&gt; браузера sourceMap могут быть либо логическими, либо объектами для более детальной настройки. В этом разделе мы объясним, как настроить эти параметры.</target>
        </trans-unit>
        <trans-unit id="43a7d99c46c52d5a3ee1b0e0e32dce7d1e549f63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optimization&lt;/code&gt; and &lt;code&gt;sourceMap&lt;/code&gt; command options are simple Boolean flags. You can supply an object as a configuration value for either of these to provide more detailed instruction.</source>
          <target state="translated">В &lt;code&gt;optimization&lt;/code&gt; и &lt;code&gt;sourceMap&lt;/code&gt; параметры командной простые булевы флаги. Вы можете предоставить объект в качестве значения конфигурации для любого из них, чтобы предоставить более подробные инструкции.</target>
        </trans-unit>
        <trans-unit id="06d19a4a4d049d946458a3b228278d9b59f8eeb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;optimization&lt;/code&gt; option applies to scripts, styles and fonts. You can supply a value such as the following to apply optimization to one or the other:</source>
          <target state="translated">Опция &lt;code&gt;optimization&lt;/code&gt; применяется к скриптам, стилям и шрифтам. Вы можете указать значение, например следующее, чтобы применить оптимизацию к одному или другому:</target>
        </trans-unit>
        <trans-unit id="68652e30cdd6035a39eaf435363a84fbca02e905" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options.path&lt;/code&gt; determines where the schematic template files are moved to once the schematic is applied.</source>
          <target state="translated">Параметр &lt;code&gt;options.path&lt;/code&gt; определяет, куда перемещаются файлы шаблона схемы после применения схемы.</target>
        </trans-unit>
        <trans-unit id="ed45fc4fb586f918cbf123cc6aaa8ac13b46fa2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outDir&lt;/code&gt; maps to the library's output folder. By default, this is the &lt;code&gt;dist/my-lib&lt;/code&gt; folder at the root of your workspace.</source>
          <target state="translated">&lt;code&gt;outDir&lt;/code&gt; карты в папку вывода библиотеки. По умолчанию это папка &lt;code&gt;dist/my-lib&lt;/code&gt; в корне вашего рабочего пространства.</target>
        </trans-unit>
        <trans-unit id="5736e34f4ac101b818064275d103c11a91f96223" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputs&lt;/code&gt; property defines a set of &lt;code&gt;directiveProperty&lt;/code&gt; to &lt;code&gt;bindingProperty&lt;/code&gt; configuration:</source>
          <target state="translated">&lt;code&gt;outputs&lt;/code&gt; свойство определяет набор &lt;code&gt;directiveProperty&lt;/code&gt; к &lt;code&gt;bindingProperty&lt;/code&gt; конфигурации:</target>
        </trans-unit>
        <trans-unit id="b99b37eb83ce95780d266653fe93326c72cd1e1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;p span&lt;/code&gt; style, intended for use elsewhere, was inadvertently applied here.</source>
          <target state="translated">Стиль &lt;code&gt;p span&lt;/code&gt; , предназначенный для использования в других местах, был непреднамеренно применен здесь.</target>
        </trans-unit>
        <trans-unit id="e3c80bfbed5536effebdc8bdda5d90d25e98e9b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;package.json&lt;/code&gt; for a new Angular workspace installs the &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt; package, which polyfills missing features for several popular browser.</source>
          <target state="translated">В &lt;code&gt;package.json&lt;/code&gt; для нового рабочего пространства Angular устанавливается пакет &lt;a href=&quot;https://github.com/zloirock/core-js&quot;&gt;core-js&lt;/a&gt; , который заполняет недостающие функции для нескольких популярных браузеров.</target>
        </trans-unit>
        <trans-unit id="cc416378bdfc224793314f87016f1f4a90bf5826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;package.json&lt;/code&gt; is organized into two groups of packages:</source>
          <target state="translated">Пакет &lt;code&gt;package.json&lt;/code&gt; состоит из двух групп пакетов:</target>
        </trans-unit>
        <trans-unit id="60d300e5b06b4652df36c13692d39407023ed327" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;paramMap&lt;/code&gt; is a dictionary of route parameter values extracted from the URL. The &lt;code&gt;&quot;id&quot;&lt;/code&gt; key returns the &lt;code&gt;id&lt;/code&gt; of the hero to fetch.</source>
          <target state="translated">&lt;code&gt;paramMap&lt;/code&gt; представляет собой словарь значений параметров маршрута , извлеченных из URL. &lt;code&gt;&quot;id&quot;&lt;/code&gt; ключ возвращает &lt;code&gt;id&lt;/code&gt; героя , чтобы принести.</target>
        </trans-unit>
        <trans-unit id="313f8e71b2fb55a766d7a1e9c76622430cf5aaac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;paramMap&lt;/code&gt; processing is a bit tricky. When the map changes, you &lt;code&gt;get()&lt;/code&gt; the &lt;code&gt;id&lt;/code&gt; parameter from the changed parameters.</source>
          <target state="translated">&lt;code&gt;paramMap&lt;/code&gt; обработка немного сложнее. Когда изменения карты, вы &lt;code&gt;get()&lt;/code&gt; с &lt;code&gt;id&lt;/code&gt; параметр из измененных параметров.</target>
        </trans-unit>
        <trans-unit id="14ce2d0b2c2b8d442f75a2419ce9d4c897bbebc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parentItem&lt;/code&gt; in &lt;code&gt;AppComponent&lt;/code&gt; is a string, which means that the expression, &lt;code&gt;parentItem&lt;/code&gt; within &lt;code&gt;[childItem]=&quot;parentItem&quot;&lt;/code&gt;, evaluates to a string.</source>
          <target state="translated">&lt;code&gt;parentItem&lt;/code&gt; в &lt;code&gt;AppComponent&lt;/code&gt; является строка, которая означает , что выражение, &lt;code&gt;parentItem&lt;/code&gt; в пределах &lt;code&gt;[childItem]=&quot;parentItem&quot;&lt;/code&gt; , вычисляется в виде строки.</target>
        </trans-unit>
        <trans-unit id="83acc7ba56c6203cb3caa1c7d75835b469828f37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;component&lt;/code&gt; properties should be familiar. There's a new property, &lt;code&gt;outlet&lt;/code&gt;, set to &lt;code&gt;'popup'&lt;/code&gt;. This route now targets the popup outlet and the &lt;code&gt;ComposeMessageComponent&lt;/code&gt; will display there.</source>
          <target state="translated">В &lt;code&gt;path&lt;/code&gt; и &lt;code&gt;component&lt;/code&gt; свойства должны быть знакомы. Есть новое свойство, &lt;code&gt;outlet&lt;/code&gt; , установленный на &lt;code&gt;'popup'&lt;/code&gt; . Этот маршрут теперь предназначен для всплывающего выхода, и &lt;code&gt;ComposeMessageComponent&lt;/code&gt; будет отображаться там.</target>
        </trans-unit>
        <trans-unit id="1547fce0daf2ce9593510cb48ca8ac8ab2ef2d5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; here is set to an empty string because the path in &lt;code&gt;AppRoutingModule&lt;/code&gt; is already set to &lt;code&gt;customers&lt;/code&gt;, so this route in the &lt;code&gt;CustomersRoutingModule&lt;/code&gt;, is already within the &lt;code&gt;customers&lt;/code&gt; context. Every route in this routing module is a child route.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; здесь установлен в пустую строку , потому что путь в &lt;code&gt;AppRoutingModule&lt;/code&gt; уже установлен на &lt;code&gt;customers&lt;/code&gt; , так что этот маршрут в &lt;code&gt;CustomersRoutingModule&lt;/code&gt; , уже в &lt;code&gt;customers&lt;/code&gt; контекста. Каждый маршрут в этом модуле маршрутизации является дочерним.</target>
        </trans-unit>
        <trans-unit id="30a8ecd4a8783bad25fd9c461e2beeda627c4a13" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; option in the schematic's schema is substituted by default with the current working directory. If the &lt;code&gt;path&lt;/code&gt; is not defined, use the &lt;code&gt;sourceRoot&lt;/code&gt; from the project configuration along with the &lt;code&gt;projectType&lt;/code&gt;.</source>
          <target state="translated">Параметр &lt;code&gt;path&lt;/code&gt; в схеме схемы по умолчанию заменяется текущим рабочим каталогом. Если &lt;code&gt;path&lt;/code&gt; не определен, используйте &lt;code&gt;sourceRoot&lt;/code&gt; из конфигурации проекта вместе с &lt;code&gt;projectType&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62481be786da43da1d0f9f8e1f68dbc62d533af9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pathRewrite&lt;/code&gt; proxy configuration option lets you rewrite the URL path at run time. For example, you can specify the following &lt;code&gt;pathRewrite&lt;/code&gt; value to the proxy configuration to remove &quot;api&quot; from the end of a path.</source>
          <target state="translated">&lt;code&gt;pathRewrite&lt;/code&gt; вариант конфигурации прокси позволяет переписать URL путь во время выполнения. Например, вы можете указать следующее значение &lt;code&gt;pathRewrite&lt;/code&gt; для конфигурации прокси, чтобы удалить &amp;laquo;api&amp;raquo; в конце пути.</target>
        </trans-unit>
        <trans-unit id="1785d4a3a5bede37ebbe1b406daf1b64048c32dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pipe()&lt;/code&gt; function is also a method on the RxJS &lt;code&gt;Observable&lt;/code&gt;, so you use this shorter form to define the same operation:</source>
          <target state="translated">Функция &lt;code&gt;pipe()&lt;/code&gt; также является методом в RxJS &lt;code&gt;Observable&lt;/code&gt; , поэтому вы используете эту более короткую форму для определения той же операции:</target>
        </trans-unit>
        <trans-unit id="d7e7c8187c4be0da91d7134cd8b83260a33409a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;postbuild&lt;/code&gt; script copies the schematic files after the &lt;code&gt;build&lt;/code&gt; script completes.</source>
          <target state="translated">Сценарий &lt;code&gt;postbuild&lt;/code&gt; копирует файлы схемы после завершения сценария &lt;code&gt;build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83f85d6ad4060b053a8ab58108f8c7af7c260fb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;postinstall&lt;/code&gt; script will run on every installation of &lt;code&gt;node_modules&lt;/code&gt;, including those performed by &lt;code&gt;ng update&lt;/code&gt; and &lt;code&gt;ng add&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;postinstall&lt;/code&gt; скрипт будет выполняться на каждую установке &lt;code&gt;node_modules&lt;/code&gt; , в том числе в исполнении &lt;code&gt;ng update&lt;/code&gt; и &lt;code&gt;ng add&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d9a176b63dc85b5e46e29f971649dca0d030c2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;power-booster.component.ts&lt;/code&gt; component demonstrates how to use the pipe, specifying a value (&lt;code&gt;2&lt;/code&gt;) and the exponent parameter (&lt;code&gt;10&lt;/code&gt;). Figure 2 shows the output.</source>
          <target state="translated">Компонент &lt;code&gt;power-booster.component.ts&lt;/code&gt; демонстрирует, как использовать канал, указывая значение ( &lt;code&gt;2&lt;/code&gt; ) и параметр экспоненты ( &lt;code&gt;10&lt;/code&gt; ). На рисунке 2 показан результат.</target>
        </trans-unit>
        <trans-unit id="40f54f6369cce6d94790b617c953d163b4600e42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provide&lt;/code&gt; property holds the &lt;a href=&quot;dependency-injection#token&quot;&gt;token&lt;/a&gt; that serves as the key for both locating a dependency value and configuring the injector.</source>
          <target state="translated">Свойство &lt;code&gt;provide&lt;/code&gt; содержит &lt;a href=&quot;dependency-injection#token&quot;&gt;токен,&lt;/a&gt; который служит ключом как для определения значения зависимости, так и для настройки инжектора.</target>
        </trans-unit>
        <trans-unit id="a6a8cd1e8964b491959fc9628f591fbf11bb2fd0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;providers&lt;/code&gt; array</source>
          <target state="translated">&lt;code&gt;providers&lt;/code&gt; массива</target>
        </trans-unit>
        <trans-unit id="eb886a89d7d45147e0470f5ef761dd6a685b7e73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;providers&lt;/code&gt; array shows how you might use the different provider-definition keys; &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;useClass&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;providers&lt;/code&gt; показывает массив , как вы можете использовать различные ключи провайдера определения; &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;useClass&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/existingsansprovider#useExisting&quot;&gt;useExisting&lt;/a&gt;&lt;/code&gt; или &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d98bd1406a5dd084ef8572318787a9a5c06f284d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;providers&lt;/code&gt; array shows how you might use the different provider-definition keys; &lt;code&gt;useValue&lt;/code&gt;, &lt;code&gt;useClass&lt;/code&gt;, &lt;code&gt;useExisting&lt;/code&gt;, or &lt;code&gt;useFactory&lt;/code&gt;.</source>
          <target state="translated">В &lt;code&gt;providers&lt;/code&gt; показывает массив , как вы можете использовать различные ключи провайдера определения; &lt;code&gt;useValue&lt;/code&gt; , &lt;code&gt;useClass&lt;/code&gt; , &lt;code&gt;useExisting&lt;/code&gt; или &lt;code&gt;useFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="378b927aad6f36c10f879731b976a6e0020b6868" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;providers&lt;/code&gt; options configure the NgModule's injector to provide localization dependencies to members.</source>
          <target state="translated">В &lt;code&gt;providers&lt;/code&gt; параметры настройки инжектора NgModule для обеспечения зависимостей локализации членов.</target>
        </trans-unit>
        <trans-unit id="a2194540daca9db4bdf4841e3d15d29a4b883bcf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queryParamsHandling&lt;/code&gt; feature also provides a &lt;code&gt;merge&lt;/code&gt; option, which preserves and combines the current query parameters with any provided query parameters when navigating.</source>
          <target state="translated">Функция &lt;code&gt;queryParamsHandling&lt;/code&gt; также предоставляет параметр &lt;code&gt;merge&lt;/code&gt; , который сохраняет и объединяет текущие параметры запроса с любыми предоставленными параметрами запроса при навигации.</target>
        </trans-unit>
        <trans-unit id="7a915b7bcf4b039c4d484c3a91457d8dafdb5258" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queryParamsHandling&lt;/code&gt; feature also provides a &lt;code&gt;merge&lt;/code&gt; option, which will preserve and combine the current query parameters with any provided query parameters when navigating.</source>
          <target state="translated">Функция &lt;code&gt;queryParamsHandling&lt;/code&gt; также предоставляет опцию &lt;code&gt;merge&lt;/code&gt; , которая сохраняет и объединяет текущие параметры запроса с любыми предоставленными параметрами запроса при навигации.</target>
        </trans-unit>
        <trans-unit id="4110d1ad5861201ed643c3622878a03e4b882b2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readonly&lt;/code&gt; assignment guard can't prevent deep updates and, in particular, it can't prevent you from modifying a property of a request body object.</source>
          <target state="translated">&lt;code&gt;readonly&lt;/code&gt; охранник назначения не может предотвратить глубокие обновления и, в частности, он не может помешать вам модифицировать свойство объекта запроса тела.</target>
        </trans-unit>
        <trans-unit id="4552a998362626aab9347940b3a60b9130370b8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready&lt;/code&gt; callback function is invoked inside the Angular zone, therefore it does not require a call to &lt;code&gt;$apply()&lt;/code&gt;.</source>
          <target state="translated">Функция обратного вызова &lt;code&gt;ready&lt;/code&gt; вызывается внутри угловой зоны, поэтому для нее не требуется вызов &lt;code&gt;$apply()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b9b29f091624bf252b25bbd274d2afa6a162bf2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;region&lt;/code&gt; value, &lt;code&gt;&quot;class&quot;&lt;/code&gt;, is the name of the &lt;code&gt;#docregion&lt;/code&gt; in the source file. Confirm that by looking at &lt;code&gt;content/examples/docs-style-guide/src/app/app.module.ts&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;region&lt;/code&gt; значения, &lt;code&gt;&quot;class&quot;&lt;/code&gt; , это имя &lt;code&gt;#docregion&lt;/code&gt; в исходном файле. Подтвердите это, посмотрев &lt;code&gt;content/examples/docs-style-guide/src/app/app.module.ts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da87e99d42c13b635059d2acd261bddbab7185a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;required&lt;/code&gt; attribute is still present. While it's not necessary for validation purposes, you may want to keep it in your template for CSS styling or accessibility reasons.</source>
          <target state="translated">&lt;code&gt;required&lt;/code&gt; атрибут по - прежнему присутствует. Хотя это и не нужно для целей проверки, вы можете захотеть сохранить его в своем шаблоне по стилю CSS или по причинам доступности</target>
        </trans-unit>
        <trans-unit id="39107654150053cf81cb764fb0b18adc5eabcb3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;responseType&lt;/code&gt; value determines how a successful response body is parsed.</source>
          <target state="translated">Значение &lt;code&gt;responseType&lt;/code&gt; определяет, как анализируется тело успешного ответа.</target>
        </trans-unit>
        <trans-unit id="a430ac49ac8d8d424bc937de23c156f47d8f9114" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rootDir&lt;/code&gt; specifies that your &lt;code&gt;schematics/&lt;/code&gt; folder contains the input files to be compiled.</source>
          <target state="translated">В &lt;code&gt;rootDir&lt;/code&gt; указывает , что ваш &lt;code&gt;schematics/&lt;/code&gt; папка содержит входные файлы для компиляции.</target>
        </trans-unit>
        <trans-unit id="b0360411d35f5172538620aa73c42c2a60819e07" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route.snapshot&lt;/code&gt; is a static image of the route information shortly after the component was created.</source>
          <target state="translated">&lt;code&gt;route.snapshot&lt;/code&gt; статическое изображение информации о маршруте вскоре после того, как компонент был создан.</target>
        </trans-unit>
        <trans-unit id="98c2a703b9341731e25cca1e1ac8295d6ba802c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route.snapshot&lt;/code&gt; provides the initial value of the route parameter map. You can access the parameters directly without subscribing or adding observable operators. It's much simpler to write and read:</source>
          <target state="translated">&lt;code&gt;route.snapshot&lt;/code&gt; обеспечивает начальное значение параметра карты маршрута. Вы можете получить доступ к параметрам напрямую, не подписываясь и не добавляя наблюдаемые операторы. Гораздо проще писать и читать:</target>
        </trans-unit>
        <trans-unit id="8953d9203d44b502aeb08833c884cd6a43672586" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schematics&lt;/code&gt; object describes the named schematics that are part of this collection.</source>
          <target state="translated">Объект &lt;code&gt;schematics&lt;/code&gt; описывает именованные схемы, которые являются частью этой коллекции.</target>
        </trans-unit>
        <trans-unit id="19be2e2a404eeed259e2935213f5db1066e7e258" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schematics&lt;/code&gt; property lists named schematics that belong to this collection. Each schematic has a plain-text description, and points to the generated entry function in the main file.</source>
          <target state="translated">Свойство &lt;code&gt;schematics&lt;/code&gt; содержит список именованных схем, принадлежащих этой коллекции. Каждая схема имеет текстовое описание и указывает на сгенерированную функцию ввода в основном файле.</target>
        </trans-unit>
        <trans-unit id="94130bec33e1eb60cd02513d2b2f41b947b417a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scope.$apply()&lt;/code&gt; is how AngularJS detects changes and updates data bindings. After every event that occurs, &lt;code&gt;scope.$apply()&lt;/code&gt; gets called. This is done either automatically by the framework, or manually by you.</source>
          <target state="translated">Область &lt;code&gt;scope.$apply()&lt;/code&gt; - это то, как AngularJS обнаруживает изменения и обновляет привязки данных. После каждого события вызывается &lt;code&gt;scope.$apply()&lt;/code&gt; . Это делается либо автоматически фреймворком, либо вручную вами.</target>
        </trans-unit>
        <trans-unit id="3c8fe632791fdc7a518369563a44ed949ab9ffe7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;searchTerms&lt;/code&gt; RxJS subject</source>
          <target state="translated">The &lt;code&gt;searchTerms&lt;/code&gt; RxJS тема</target>
        </trans-unit>
        <trans-unit id="8c1b03055bc764bd760bdc91ac7b76ad9b62de32" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;searchTerms&lt;/code&gt; property is an RxJS &lt;code&gt;Subject&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;searchTerms&lt;/code&gt; свойство является RxJS &lt;code&gt;Subject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4280fbbc633dd4cab834f13d28eb3c3882a952a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;searchText$&lt;/code&gt; is the sequence of search-box values coming from the user. It's defined as an RxJS &lt;code&gt;Subject&lt;/code&gt;, which means it is a multicasting &lt;code&gt;Observable&lt;/code&gt; that can also emit values for itself by calling &lt;code&gt;next(value)&lt;/code&gt;, as happens in the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;searchText$&lt;/code&gt; является последовательностью значений поиска ящика , поступающих от пользователя. Это определяется как RxJS &lt;code&gt;Subject&lt;/code&gt; , который означает , что это многоадресный &lt;code&gt;Observable&lt;/code&gt; , который также может излучать значения для себя, вызвав &lt;code&gt;next(value)&lt;/code&gt; , как это происходит в &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; методе.</target>
        </trans-unit>
        <trans-unit id="6916edc889efd59e821e9e69f594ee4b8ec65909" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;searchText$&lt;/code&gt; is the sequence of search-box values coming from the user. It's defined as an RxJS &lt;code&gt;Subject&lt;/code&gt;, which means it is a multicasting &lt;code&gt;Observable&lt;/code&gt; that can also emit values for itself by calling &lt;code&gt;next(value)&lt;/code&gt;, as happens in the &lt;code&gt;search()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;searchText$&lt;/code&gt; является последовательностью значений поиска ящика , поступающих от пользователя. Он определен как RxJS &lt;code&gt;Subject&lt;/code&gt; , что означает, что это объект &lt;code&gt;Observable&lt;/code&gt; с многоадресной рассылкой , который также может генерировать значения для себя, вызывая &lt;code&gt;next(value)&lt;/code&gt; , как это происходит в методе &lt;code&gt;search()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76ad0c5b8da43c7b6de6250e8195a93c15204d6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;select&lt;/code&gt; clause, similar to the &lt;code&gt;plural&lt;/code&gt; clause, marks choices for alternate text based on your defined string values. For example, the following clause in the component template binds to the component's &lt;code&gt;gender&lt;/code&gt; property, which outputs one of the following string values: &quot;male&quot;, &quot;female&quot; or &quot;other&quot;. The clause maps those values to the appropriate translations:</source>
          <target state="translated">Предложение &lt;code&gt;select&lt;/code&gt; , аналогичное предложению &lt;code&gt;plural&lt;/code&gt; , отмечает варианты выбора для альтернативного текста на основе заданных вами строковых значений. Например, следующее предложение в шаблоне компонента привязывается к свойству &lt;code&gt;gender&lt;/code&gt; компонента , которое выводит одно из следующих строковых значений: &amp;laquo;мужской&amp;raquo;, &amp;laquo;женский&amp;raquo; или &amp;laquo;другой&amp;raquo;. Предложение сопоставляет эти значения с соответствующими переводами:</target>
        </trans-unit>
        <trans-unit id="f1ef4e3c3557c47427af418f305913be1f3a5488" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selector&lt;/code&gt; attribute is a CSS selector that defines where on the page the component should go. In AngularJS you do matching based on component names, but in Angular you have these explicit selectors. This one will match elements with the name &lt;code&gt;phone-list&lt;/code&gt;, just like the AngularJS version did.</source>
          <target state="translated">&lt;code&gt;selector&lt;/code&gt; атрибута является селектор CSS , который определяет , где на странице компонент должен идти. В AngularJS вы делаете сопоставление на основе имен компонентов, но в Angular у вас есть эти явные селекторы. Этот будет сопоставлять элементы с именем &lt;code&gt;phone-list&lt;/code&gt; , так же как и версия AngularJS.</target>
        </trans-unit>
        <trans-unit id="11d9b9f6d8cdb36365862fee5c7e6c716ebb3596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selector&lt;/code&gt; identifies the component. The selector is the name you give the Angular component when it is rendered as an HTML element on the page. By convention, Angular component selectors begin with the prefix &lt;code&gt;app-&lt;/code&gt;, followed by the component name.</source>
          <target state="translated">&lt;code&gt;selector&lt;/code&gt; идентифицирует компонент. Селектор - это имя, которое вы даете компоненту Angular, когда он отображается в виде HTML-элемента на странице. По соглашению, угловые селекторы компонентов начинаются с префикса &lt;code&gt;app-&lt;/code&gt; , за которым следует имя компонента.</target>
        </trans-unit>
        <trans-unit id="263b313ccd333a2262c31082a98e1e63586d8640" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sendRequest&lt;/code&gt; function creates a &lt;a href=&quot;http#immutability&quot;&gt;request clone&lt;/a&gt; without headers because the npm api forbids them.</source>
          <target state="translated">Функция &lt;code&gt;sendRequest&lt;/code&gt; создает &lt;a href=&quot;http#immutability&quot;&gt;клон запроса&lt;/a&gt; без заголовков, потому что API npm запрещает их.</target>
        </trans-unit>
        <trans-unit id="98e3960b4dadf77856e4c0c4890e9f3074235a7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setup()&lt;/code&gt; function returns an object literal with the variables, such as &lt;code&gt;masterService&lt;/code&gt;, that a test might reference. You don't define &lt;em&gt;semi-global&lt;/em&gt; variables (e.g., &lt;code&gt;let masterService: MasterService&lt;/code&gt;) in the body of the &lt;code&gt;describe()&lt;/code&gt;.</source>
          <target state="translated">Функция &lt;code&gt;setup()&lt;/code&gt; возвращает литерал объекта с переменными, такими как &lt;code&gt;masterService&lt;/code&gt; , на которые может ссылаться тест. Вы не определяете &lt;em&gt;полуглобальные&lt;/em&gt; переменные (например, &lt;code&gt;let masterService: MasterService&lt;/code&gt; ) в теле &lt;code&gt;describe()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7e7f39203bb8b9c13e311f0f854788f391b2276e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sizerComponent&lt;/code&gt; template has two buttons that each bind the click event to the &lt;code&gt;inc()&lt;/code&gt; and &lt;code&gt;dec()&lt;/code&gt; methods. When the user clicks one of the buttons, the &lt;code&gt;sizerComponent&lt;/code&gt; calls the corresponding method. Both methods, &lt;code&gt;inc()&lt;/code&gt; and &lt;code&gt;dec()&lt;/code&gt;, call the &lt;code&gt;resize()&lt;/code&gt; method with a &lt;code&gt;+1&lt;/code&gt; or &lt;code&gt;-1&lt;/code&gt;, which in turn raises the &lt;code&gt;sizeChange&lt;/code&gt; event with the new size value.</source>
          <target state="translated">В шаблоне &lt;code&gt;sizerComponent&lt;/code&gt; есть две кнопки, каждая из которых связывает событие щелчка с методами &lt;code&gt;inc()&lt;/code&gt; и &lt;code&gt;dec()&lt;/code&gt; . Когда пользователь нажимает одну из кнопок, &lt;code&gt;sizerComponent&lt;/code&gt; вызывает соответствующий метод. Оба метода, &lt;code&gt;inc()&lt;/code&gt; и &lt;code&gt;dec()&lt;/code&gt; , вызывают метод &lt;code&gt;resize()&lt;/code&gt; с &lt;code&gt;+1&lt;/code&gt; или &lt;code&gt;-1&lt;/code&gt; , который, в свою очередь, вызывает событие &lt;code&gt;sizeChange&lt;/code&gt; с новым значением размера.</target>
        </trans-unit>
        <trans-unit id="6e385289300fdc537b82f3617d6eaaaf051383e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source-map-explorer&lt;/code&gt; analyzes the source map generated with the bundle and draws a map of all dependencies, showing exactly which classes are included in the bundle.</source>
          <target state="translated">&lt;code&gt;source-map-explorer&lt;/code&gt; анализирует карты источников , производимую с расслоением и рисует карту всех зависимостей, показывая , какие именно классы включены в комплект поставки.</target>
        </trans-unit>
        <trans-unit id="ccf897a30f41d2173f77117dd5c06f669759c5a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sourceMap&lt;/code&gt; option applies for both scripts and styles. You can also choose to output hidden source maps, or resolve vendor package source maps:</source>
          <target state="translated">Параметр &lt;code&gt;sourceMap&lt;/code&gt; применяется как для скриптов, так и для стилей. Вы также можете выбрать вывод скрытых исходных карт или разрешить исходные карты пакетов поставщика:</target>
        </trans-unit>
        <trans-unit id="9fb8a6726597db869ba6708ca7b5b6a4986d3a3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src/app/app.module.ts&lt;/code&gt; file has a good example of a nested region.</source>
          <target state="translated">&lt;code&gt;src/app/app.module.ts&lt;/code&gt; файл имеет хороший пример вложенной области.</target>
        </trans-unit>
        <trans-unit id="202bb3ece99aa9f958aaeb45fbc17d65040b889f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src/main.ts&lt;/code&gt; is a simple example of a file with a single &lt;em&gt;#docregion&lt;/em&gt; at the top of the file.</source>
          <target state="translated">В &lt;code&gt;src/main.ts&lt;/code&gt; простой пример файла с одним &lt;em&gt;#docregion&lt;/em&gt; в верхней части файла.</target>
        </trans-unit>
        <trans-unit id="c4ebea686b86ed2e39ae542821868ac054705e37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src/ngsw-config.json&lt;/code&gt; configuration file specifies which files and data URLs the Angular service worker should cache and how it should update the cached files and data. The &lt;a href=&quot;cli&quot;&gt;Angular CLI&lt;/a&gt; processes the configuration file during &lt;code&gt;ng build --prod&lt;/code&gt;. Manually, you can process it with the &lt;code&gt;ngsw-config&lt;/code&gt; tool:</source>
          <target state="translated">В &lt;code&gt;src/ngsw-config.json&lt;/code&gt; конфигурационный файл определяет , какие файлы и данные URL - Угловая рабочий сервис должен кэшировать и как он должен обновить кэшированные файлы и данные. &lt;a href=&quot;cli&quot;&gt;Угловая CLI&lt;/a&gt; обрабатывает файл конфигурации во время &lt;code&gt;ng build --prod&lt;/code&gt; . Вручную вы можете обработать его с &lt;code&gt;ngsw-config&lt;/code&gt; инструмента ngsw-config :</target>
        </trans-unit>
        <trans-unit id="d1edd2e05f84370637e39aec6246e210e01c09b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;styles&lt;/code&gt; property takes an array of strings that contain the CSS rule declarations.</source>
          <target state="translated">Свойство &lt;code&gt;styles&lt;/code&gt; принимает массив строк, содержащих объявления правил CSS.</target>
        </trans-unit>
        <trans-unit id="77201400a17a80e45079ecd99dd04f439106322c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;submit&lt;/code&gt; event is emitted by the &lt;code&gt;form&lt;/code&gt; tag using the native DOM event. You trigger the event by clicking a button with &lt;code&gt;submit&lt;/code&gt; type. This allows the user to press the &lt;strong&gt;Enter&lt;/strong&gt; key to submit the completed form.</source>
          <target state="translated">&lt;code&gt;submit&lt;/code&gt; событие испускается &lt;code&gt;form&lt;/code&gt; тега , используя родное событие DOM. Вы запускаете событие, нажимая кнопку с типом &lt;code&gt;submit&lt;/code&gt; . Это позволяет пользователю нажать клавишу &lt;strong&gt;Enter,&lt;/strong&gt; чтобы отправить заполненную форму.</target>
        </trans-unit>
        <trans-unit id="251e43a05f33d8e9cc990fef4b501d01abd583d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribe()&lt;/code&gt; method takes a JavaScript object (called an &lt;a href=&quot;glossary#observer&quot;&gt;observer&lt;/a&gt;) with up to three callbacks, one for each type of notification that an observable can deliver:</source>
          <target state="translated">Метод &lt;code&gt;subscribe()&lt;/code&gt; принимает объект JavaScript (называемый &lt;a href=&quot;glossary#observer&quot;&gt;наблюдателем&lt;/a&gt; ) с тремя обратными вызовами, по одному для каждого типа уведомления, которое может доставить наблюдаемая:</target>
        </trans-unit>
        <trans-unit id="5a5783ba2b920d9635fe9461bd4e46971ccf2eb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribe()&lt;/code&gt; method takes a success (&lt;code&gt;next&lt;/code&gt;) and fail (&lt;code&gt;error&lt;/code&gt;) callback. Make sure you provide &lt;em&gt;both&lt;/em&gt; callbacks so that you capture errors. Neglecting to do so produces an asynchronous uncaught observable error that the test runner will likely attribute to a completely different test.</source>
          <target state="translated">Метод &lt;code&gt;subscribe()&lt;/code&gt; принимает обратный вызов success ( &lt;code&gt;next&lt;/code&gt; ) и fail ( &lt;code&gt;error&lt;/code&gt; ). Удостоверьтесь, что вы предоставляете &lt;em&gt;оба&lt;/em&gt; обратных вызова, чтобы перехватывать ошибки Пренебрежение к этому приводит к асинхронной неперехваченной наблюдаемой ошибке, которую исполнитель теста, скорее всего, приписывает совершенно другому тесту.</target>
        </trans-unit>
        <trans-unit id="8791607c61c0f05713a0307ef28d52145a479306" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switchMap()&lt;/code&gt; operator has three important characteristics.</source>
          <target state="translated">Оператор &lt;code&gt;switchMap()&lt;/code&gt; имеет три важных характеристики.</target>
        </trans-unit>
        <trans-unit id="86121707cc28f8a72bb7aa24c90f97195ae22d31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switchMap()&lt;/code&gt; operator takes a function argument that returns an &lt;code&gt;Observable&lt;/code&gt;. In the example, &lt;code&gt;PackageSearchService.search&lt;/code&gt; returns an &lt;code&gt;Observable&lt;/code&gt;, as other data service methods do. If a previous search request is still in-flight (as when the network connection is poor), the operator cancels that request and sends a new one.</source>
          <target state="translated">Оператор &lt;code&gt;switchMap()&lt;/code&gt; принимает аргумент функции, который возвращает &lt;code&gt;Observable&lt;/code&gt; . В этом примере &lt;code&gt;PackageSearchService.search&lt;/code&gt; возвращает &lt;code&gt;Observable&lt;/code&gt; , как и другие методы службы данных. Если предыдущий поисковый запрос все еще находится в работе (например, при плохом сетевом соединении), оператор отменяет этот запрос и отправляет новый.</target>
        </trans-unit>
        <trans-unit id="35e89baf59c798f66de4b3a1d896130098da7dea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switchMap&lt;/code&gt; operator also cancels previous in-flight requests. If the user re-navigates to this route with a new &lt;code&gt;id&lt;/code&gt; while the &lt;code&gt;HeroService&lt;/code&gt; is still retrieving the old &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;switchMap&lt;/code&gt; discards that old request and returns the hero for the new &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Оператор &lt;code&gt;switchMap&lt;/code&gt; также отменяет предыдущие запросы в полете. Если пользователь переходит на этот маршрут с новым &lt;code&gt;id&lt;/code&gt; когда &lt;code&gt;HeroService&lt;/code&gt; все еще получает старый &lt;code&gt;id&lt;/code&gt; , &lt;code&gt;switchMap&lt;/code&gt; отбрасывает этот старый запрос и возвращает героя для нового &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7be7153b64c1432ee8505e6e1853e08c4af23b1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;switchMap&lt;/code&gt; operator does two things. It flattens the &lt;code&gt;Observable&amp;lt;Hero&amp;gt;&lt;/code&gt; that &lt;code&gt;HeroService&lt;/code&gt; returns and cancels previous pending requests. If the user re-navigates to this route with a new &lt;code&gt;id&lt;/code&gt; while the &lt;code&gt;HeroService&lt;/code&gt; is still retrieving the old &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;switchMap&lt;/code&gt; discards that old request and returns the hero for the new &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Оператор &lt;code&gt;switchMap&lt;/code&gt; выполняет две функции. Он выравнивает &lt;code&gt;Observable&amp;lt;Hero&amp;gt;&lt;/code&gt; который возвращает &lt;code&gt;HeroService&lt;/code&gt; , и отменяет предыдущие ожидающие запросы. Если пользователь повторно переходит к этому маршруту с новым &lt;code&gt;id&lt;/code&gt; то время как &lt;code&gt;HeroService&lt;/code&gt; все еще получает старый &lt;code&gt;id&lt;/code&gt; , &lt;code&gt;switchMap&lt;/code&gt; отклоняет этот старый запрос и возвращает героя для нового &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9f92ffc98bcb36aa1c882663131002f05e065a2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;templateUrl&lt;/code&gt; property points to a separate file for the template HTML.</source>
          <target state="translated">Свойство &lt;code&gt;templateUrl&lt;/code&gt; указывает на отдельный файл для шаблона HTML.</target>
        </trans-unit>
        <trans-unit id="e7b301cb1df5e9071174c9086184fff5dcc8819a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thresholds&lt;/code&gt; property causes the tool to enforce a minimum of 80% code coverage when the unit tests are run in the project.</source>
          <target state="translated">Свойство &lt;code&gt;thresholds&lt;/code&gt; заставляет инструмент применять минимум 80% покрытия кода при запуске модульных тестов в проекте.</target>
        </trans-unit>
        <trans-unit id="f998cca1a6cbbd1bfbc79167fe0b64cfb77fb4ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timings&lt;/code&gt; parameter takes a string defined in three parts.</source>
          <target state="translated">Параметр &lt;code&gt;timings&lt;/code&gt; принимает строку, определенную в трех частях.</target>
        </trans-unit>
        <trans-unit id="83fc825d674ac468c5e028de026f937ce6df1287" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transform&lt;/code&gt; method is essential to a pipe. The &lt;code&gt;&lt;a href=&quot;../api/core/pipetransform&quot;&gt;PipeTransform&lt;/a&gt;&lt;/code&gt;&lt;em&gt;interface&lt;/em&gt; defines that method and guides both tooling and the compiler. Technically, it's optional; Angular looks for and executes the &lt;code&gt;transform&lt;/code&gt; method regardless.</source>
          <target state="translated">Метод &lt;code&gt;transform&lt;/code&gt; имеет важное значение для трубы. В &lt;code&gt;&lt;a href=&quot;../api/core/pipetransform&quot;&gt;PipeTransform&lt;/a&gt;&lt;/code&gt; &lt;em&gt; интерфейс&lt;/em&gt; определяет , что способ и направляющей как инструмент и компилятор. Технически это необязательно; Angular ищет и выполняет метод &lt;code&gt;transform&lt;/code&gt; независимо.</target>
        </trans-unit>
        <trans-unit id="970c3e531a96b857b5407a5716c7ae81e934f401" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tsconfig.json&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;tsconfig.json&lt;/code&gt; выглядит следующим образом :</target>
        </trans-unit>
        <trans-unit id="1497abe2d60e017e56bc96d27cab2a044a44f729" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url()&lt;/code&gt; method reads source files from your filesystem, relative to the schematic.</source>
          <target state="translated">Метод &lt;code&gt;url()&lt;/code&gt; считывает исходные файлы из вашей файловой системы относительно схемы.</target>
        </trans-unit>
        <trans-unit id="0bc1706a02388342ae67afeb45237c3d7508da61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useClass&lt;/code&gt; provider key lets you create and return a new instance of the specified class.</source>
          <target state="translated">&lt;code&gt;useClass&lt;/code&gt; ключ поставщика позволяет создать и вернуть новый экземпляр указанного класса.</target>
        </trans-unit>
        <trans-unit id="5681ccda9b1d2143ce5b503657b19dfe1f04e77f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useExisting&lt;/code&gt; provider key lets you map one token to another. In effect, the first token is an &lt;em&gt;alias&lt;/em&gt; for the service associated with the second token, creating two ways to access the same service object.</source>
          <target state="translated">&lt;code&gt;useExisting&lt;/code&gt; ключ поставщика позволяет отобразить один маркер на другой. Фактически, первый токен является &lt;em&gt;псевдонимом&lt;/em&gt; для службы, связанной со вторым токеном, создавая два способа доступа к одному и тому же объекту службы.</target>
        </trans-unit>
        <trans-unit id="44beea326133a07d582e720ef9523e833171f6ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useFactory&lt;/code&gt; field tells Angular that the provider is a factory function whose implementation is &lt;code&gt;heroServiceFactory&lt;/code&gt;.</source>
          <target state="translated">Поле &lt;code&gt;useFactory&lt;/code&gt; сообщает Angular, что поставщик является фабричной функцией, реализация которой - &lt;code&gt;heroServiceFactory&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0315670d1b1ee3186b18e2d0b131bffe28309147" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useFactory&lt;/code&gt; provider key lets you create a dependency object by calling a factory function, as in the following example.</source>
          <target state="translated">&lt;code&gt;useFactory&lt;/code&gt; ключ поставщик позволяет создать объект зависимостей путем вызова функции фабрики, как показано в следующем примере.</target>
        </trans-unit>
        <trans-unit id="cd5ad9a619c838440e376c0440e8b7fcf44e692e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useHash&lt;/code&gt; property defaults to &lt;code&gt;false&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgradeconfig#hashPrefix&quot;&gt;hashPrefix&lt;/a&gt;&lt;/code&gt; defaults to an empty &lt;code&gt;string&lt;/code&gt;. Pass the configuration object to override the defaults.</source>
          <target state="translated">Свойство &lt;code&gt;useHash&lt;/code&gt; по умолчанию имеет значение &lt;code&gt;false&lt;/code&gt; , а &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/locationupgradeconfig#hashPrefix&quot;&gt;hashPrefix&lt;/a&gt;&lt;/code&gt; по умолчанию - пустую &lt;code&gt;string&lt;/code&gt; . Передайте объект конфигурации, чтобы переопределить значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="8309209875bd091e2230b33046bfd662f9462513" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useHash&lt;/code&gt; property defaults to &lt;code&gt;false&lt;/code&gt;, and the &lt;code&gt;hashPrefix&lt;/code&gt; defaults to an empty &lt;code&gt;string&lt;/code&gt;. Pass the configuration object to override the defaults.</source>
          <target state="translated">Для свойства &lt;code&gt;useHash&lt;/code&gt; по умолчанию установлено значение &lt;code&gt;false&lt;/code&gt; , а для &lt;code&gt;hashPrefix&lt;/code&gt; умолчанию используется пустая &lt;code&gt;string&lt;/code&gt; . Передайте объект конфигурации, чтобы переопределить значения по умолчанию.</target>
        </trans-unit>
        <trans-unit id="5f73f12a1042cc5a37d5219d0bdd859b38d3d738" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useValue&lt;/code&gt; key lets you associate a fixed value with a DI token. Use this technique to provide &lt;em&gt;runtime configuration constants&lt;/em&gt; such as website base addresses and feature flags. You can also use a value provider in a unit test to provide mock data in place of a production data service.</source>
          <target state="translated">&lt;code&gt;useValue&lt;/code&gt; ключ позволяет связать фиксированное значение с маркером DI. Используйте этот метод для предоставления &lt;em&gt;констант конфигурации времени выполнения,&lt;/em&gt; таких как базовые адреса веб-сайтов и флаги функций. Вы также можете использовать поставщик значений в модульном тесте, чтобы предоставить фиктивные данные вместо службы производственных данных.</target>
        </trans-unit>
        <trans-unit id="1ac27e4b9fb2cce116f77c1cedfc5db8b028a144" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validate()&lt;/code&gt; functions must return a Promise or an observable,</source>
          <target state="translated">Функции &lt;code&gt;validate()&lt;/code&gt; должны возвращать обещание или наблюдаемое,</target>
        </trans-unit>
        <trans-unit id="6d232eaaf4baaffc4ab4f10a822fa23f92ba3c9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;withRefresh&lt;/code&gt; option is explained &lt;a href=&quot;http#cache-refresh&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">Параметр &lt;code&gt;withRefresh&lt;/code&gt; поясняется &lt;a href=&quot;http#cache-refresh&quot;&gt;ниже&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a9827f2927350bd733138c7d14854c368b34cb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;workspace projects&lt;/code&gt; object contains all the project-specific configuration information.</source>
          <target state="translated">Объект &lt;code&gt;workspace projects&lt;/code&gt; содержит всю информацию о конфигурации конкретного проекта.</target>
        </trans-unit>
        <trans-unit id="db4393ab4ed83533b6fd3b84f5541ee8b1e21f61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x-prompt&lt;/code&gt; field syntax supports a long form for cases where you require additional customization and control over the prompt. In this form, the &lt;code&gt;x-prompt&lt;/code&gt; field value is a JSON object with subfields that customize the behavior of the prompt.</source>
          <target state="translated">&lt;code&gt;x-prompt&lt;/code&gt; синтаксис поля поддерживает длинную форму для случаев , где требуется дополнительная настройка и контроля над проворным. В этой форме значение поля &lt;code&gt;x-prompt&lt;/code&gt; представляет собой объект JSON с подполями, которые настраивают поведение приглашения.</target>
        </trans-unit>
        <trans-unit id="3d90bb925c813a0b9d2c883e18e2532b96b08fd3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{hero.name}}&lt;/code&gt;&lt;a href=&quot;displaying-data#interpolation&quot;&gt;&lt;em&gt;interpolation&lt;/em&gt;&lt;/a&gt; displays the component's &lt;code&gt;hero.name&lt;/code&gt; property value within the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">В &lt;code&gt;{{hero.name}}&lt;/code&gt; &lt;a href=&quot;displaying-data#interpolation&quot;&gt;&lt;em&gt;интерполяции&lt;/em&gt;&lt;/a&gt; отображает компонент в &lt;code&gt;hero.name&lt;/code&gt; значение свойства в пределах &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; элемента.</target>
        </trans-unit>
        <trans-unit id="90d7daa71e62572b6bccfbeb192b5e244292312c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{hero.name}}&lt;/code&gt;&lt;a href=&quot;interpolation&quot;&gt;&lt;em&gt;interpolation&lt;/em&gt;&lt;/a&gt; displays the component's &lt;code&gt;hero.name&lt;/code&gt; property value within the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element.</source>
          <target state="translated">В &lt;code&gt;{{hero.name}}&lt;/code&gt; &lt;a href=&quot;interpolation&quot;&gt;&lt;em&gt;интерполяции&lt;/em&gt;&lt;/a&gt; отображает компонент в &lt;code&gt;hero.name&lt;/code&gt; значение свойства в пределах &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; элемента.</target>
        </trans-unit>
        <trans-unit id="600a6011a885e1574b4cf2f04310a223dfb82932" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;#docregion&lt;/em&gt; comment begins a code snippet region. Every line of code &lt;em&gt;after&lt;/em&gt; that comment belongs in the region &lt;em&gt;until&lt;/em&gt; the code fragment processor encounters the end of the file or a closing &lt;em&gt;#enddocregion&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;#Docregion&lt;/em&gt; комментарий начинается область фрагмента кода. Каждая строка кода &lt;em&gt;после&lt;/em&gt; этого комментария принадлежит области, &lt;em&gt;пока&lt;/em&gt; процессор фрагмента кода не &lt;em&gt;достигнет&lt;/em&gt; конца файла или закрывающего &lt;em&gt;#enddocregion&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="09ad083d54cf158dabf6073214d23611fea930ee" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;#docregion&lt;/em&gt; is the most important kind of code snippet markup.</source>
          <target state="translated">&lt;em&gt;#Docregion&lt;/em&gt; самый важный вид фрагмента кода разметки.</target>
        </trans-unit>
        <trans-unit id="c02d5e0186f7578d49fc4f8de24aab78e198fd8c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;#docregion&lt;/em&gt; with no name is the &lt;em&gt;default region&lt;/em&gt;. Do &lt;em&gt;not&lt;/em&gt; set the &lt;code&gt;region&lt;/code&gt; attribute when referring to the default &lt;em&gt;#docregion&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;#Docregion&lt;/em&gt; без имени является &lt;em&gt;областью по умолчанию&lt;/em&gt; . Вы &lt;em&gt;не&lt;/em&gt; установите &lt;code&gt;region&lt;/code&gt; атрибута при упоминании по умолчанию &lt;em&gt;#docregion&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="551fb2af6ce44839250b3c60015b1a1f9e111031" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;&amp;lt;base href&amp;gt;&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;&amp;lt;База HREF&amp;gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="59a4dbde46d9770b16233eaf16d19d577b5cf162" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;AfterContent&lt;/em&gt; hooks concern &lt;code&gt;&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt;, the child components that Angular projected into the component.</source>
          <target state="translated">&lt;em&gt;AfterContent&lt;/em&gt; крючки касается &lt;code&gt;&lt;a href=&quot;../api/core/contentchildren&quot;&gt;ContentChildren&lt;/a&gt;&lt;/code&gt; , дочерних компонентов, Угловые проецируемой в компонент.</target>
        </trans-unit>
        <trans-unit id="f0d2a411403b9c6d4f6d980b63bb02aa5a96e5e8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;AfterContent&lt;/em&gt; sample explores the &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentinit&quot;&gt;AfterContentInit&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentchecked&quot;&gt;AfterContentChecked&lt;/a&gt;()&lt;/code&gt; hooks that Angular calls &lt;em&gt;after&lt;/em&gt; Angular projects external content into the component.</source>
          <target state="translated">&lt;em&gt;AfterContent&lt;/em&gt; Образец исследует &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentinit&quot;&gt;AfterContentInit&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/aftercontentchecked&quot;&gt;AfterContentChecked&lt;/a&gt;()&lt;/code&gt; крючки , что угловые вызовы &lt;em&gt;после&lt;/em&gt; угловых проектов внешнего содержимого в компонент.</target>
        </trans-unit>
        <trans-unit id="fe6a5ec79638be9e0a3986c4c022d9e46840c657" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;AfterView&lt;/em&gt; hooks concern &lt;code&gt;&lt;a href=&quot;../api/core/viewchildren&quot;&gt;ViewChildren&lt;/a&gt;&lt;/code&gt;, the child components whose element tags appear &lt;em&gt;within&lt;/em&gt; the component's template.</source>
          <target state="translated">&lt;em&gt;AfterView&lt;/em&gt; крючки касается &lt;code&gt;&lt;a href=&quot;../api/core/viewchildren&quot;&gt;ViewChildren&lt;/a&gt;&lt;/code&gt; , дочерних компонентов, элемента тегов появляется &lt;em&gt;в&lt;/em&gt; шаблоне компоненты.</target>
        </trans-unit>
        <trans-unit id="3dfed87bca66b44e4a6482e1ba65840ed36b5bf4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;AfterView&lt;/em&gt; sample explores the &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;()&lt;/code&gt; hooks that Angular calls &lt;em&gt;after&lt;/em&gt; it creates a component's child views.</source>
          <target state="translated">&lt;em&gt;AfterView&lt;/em&gt; образец исследует &lt;code&gt;&lt;a href=&quot;../api/core/afterviewinit&quot;&gt;AfterViewInit&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/core/afterviewchecked&quot;&gt;AfterViewChecked&lt;/a&gt;()&lt;/code&gt; перехватывает , что угловые вызовы &lt;em&gt;после&lt;/em&gt; того, как он создает дочерние представления в качестве компонента.</target>
        </trans-unit>
        <trans-unit id="a02b3def534749278a0fa19f46335219b7a2c87a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Back&lt;/em&gt; and &lt;em&gt;Save&lt;/em&gt; buttons on the Details page don't work.</source>
          <target state="translated">На &lt;em&gt;Назад&lt;/em&gt; и &lt;em&gt;Сохранить&lt;/em&gt; кнопки на странице Детали не работают.</target>
        </trans-unit>
        <trans-unit id="26812ee9d2705615518cee0d2be8d4b1f022ddbf" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;ComponentFixture&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;ComponentFixture&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="17fe33d0dae8927c14c9294e1b5e47dcd88f9bc8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;DoCheck&lt;/em&gt; sample extends the &lt;em&gt;OnChanges&lt;/em&gt; sample with the following &lt;code&gt;ngDoCheck()&lt;/code&gt; hook:</source>
          <target state="translated">&lt;em&gt;DoCheck&lt;/em&gt; образец расширяет &lt;em&gt;OnChanges&lt;/em&gt; образец со следующим &lt;code&gt;ngDoCheck()&lt;/code&gt; крючок:</target>
        </trans-unit>
        <trans-unit id="66f7b097f518f662624a2fe89fa23bde67722c64" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Hero Employment Agency&lt;/em&gt; uses this form to maintain personal information about heroes. Every hero needs a job. It's the company mission to match the right hero with the right crisis.</source>
          <target state="translated">Агентство по &lt;em&gt;трудоустройству героев&lt;/em&gt; использует эту форму для хранения личной информации о героях. Каждому герою нужна работа. Это миссия компании - найти правильного героя и правильный кризис.</target>
        </trans-unit>
        <trans-unit id="d3402fb21166e9ae4d2d51d781786ab5a98ca52d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;History&lt;/em&gt; log demonstrates that messages travel in both directions between the parent &lt;code&gt;MissionControlComponent&lt;/code&gt; and the &lt;code&gt;AstronautComponent&lt;/code&gt; children, facilitated by the service:</source>
          <target state="translated">Журнал &lt;em&gt;истории&lt;/em&gt; показывает, что сообщения перемещаются в обоих направлениях между родительским &lt;code&gt;MissionControlComponent&lt;/code&gt; и дочерними элементами &lt;code&gt;AstronautComponent&lt;/code&gt; , чему способствует служба:</target>
        </trans-unit>
        <trans-unit id="2b32c125ecd1669f448ec3bf41c296c4bafe6250" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Name&lt;/em&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; control has the HTML5 &lt;code&gt;required&lt;/code&gt; attribute; the &lt;em&gt;Alter Ego&lt;/em&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; control does not because &lt;code&gt;alterEgo&lt;/code&gt; is optional.</source>
          <target state="translated">Элемент управления &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;em&gt;Name&lt;/em&gt; имеет &lt;code&gt;required&lt;/code&gt; атрибут HTML5 ; &lt;em&gt;Alter Ego &lt;/em&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; управления не потому , что &lt;code&gt;alterEgo&lt;/code&gt; является необязательным.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e2265d664f6eff573fc5ee3934aa756169219d40" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;NgModel&lt;/em&gt; directive doesn't just track state; it updates the control with special Angular CSS classes that reflect the state. You can leverage those class names to change the appearance of the control.</source>
          <target state="translated">&lt;em&gt;NgModel&lt;/em&gt; директива не только отслеживать состояние; он обновляет элемент управления специальными классами Angular CSS, которые отражают состояние. Вы можете использовать эти имена классов, чтобы изменить внешний вид элемента управления.</target>
        </trans-unit>
        <trans-unit id="bbea351a6ffcf13594aaadf605f66f73429d2df2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Parent Finder&lt;/em&gt; sample is full of circular class references that are impossible to break.</source>
          <target state="translated">&lt;em&gt;Родитель Finder&lt;/em&gt; образец полон ссылок кругового класса, которые невозможно сломать.</target>
        </trans-unit>
        <trans-unit id="6c4600462959ddfa37d5891549dbb884fbecfd73" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Reset&lt;/em&gt; button clears the &lt;code&gt;heroes&lt;/code&gt; list. Angular removes all hero &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; elements from the DOM and destroys their spy directives at the same time. The spy's &lt;code&gt;ngOnDestroy()&lt;/code&gt; method reports its last moments.</source>
          <target state="translated">Кнопка &amp;laquo; &lt;em&gt;Сброс&amp;raquo;&lt;/em&gt; очищает список &lt;code&gt;heroes&lt;/code&gt; . Angular удаляет все элементы &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; героя из DOM и одновременно уничтожает их шпионские директивы. Метод шпиона &lt;code&gt;ngOnDestroy()&lt;/code&gt; сообщает о последних моментах.</target>
        </trans-unit>
        <trans-unit id="c1a352f4be8028751775aca111e668c0a33502ea" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Routing Module&lt;/em&gt;&lt;em&gt;replaces&lt;/em&gt; the routing configuration in the root or feature module. &lt;em&gt;Either&lt;/em&gt; configure routes in the Routing Module &lt;em&gt;or&lt;/em&gt; within the module itself but not in both.</source>
          <target state="translated">&lt;em&gt;Модуль маршрутизации &lt;/em&gt;&lt;em&gt;заменяет&lt;/em&gt; конфигурацию маршрутизации в корневом или особенность модуля. &lt;em&gt;Настройте&lt;/em&gt; маршруты &lt;em&gt;либо&lt;/em&gt; в модуле маршрутизации, &lt;em&gt;либо&lt;/em&gt; в самом модуле, но не в обоих.</target>
        </trans-unit>
        <trans-unit id="0c5f8f5d1924de13765832553932eb057250f18c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Save&lt;/em&gt; button is disabled until the form is in a valid state. When the form is valid, you can click &lt;em&gt;Save&lt;/em&gt; and the app renders the current form values as JSON. This proves that any user input is bound back to the data model. Saving and retrieving the data is an exercise for another time.</source>
          <target state="translated">Кнопка &lt;em&gt;Сохранить&lt;/em&gt; отключена, пока форма не будет в действительном состоянии. Когда форма верна, вы можете нажать &lt;em&gt;Сохранить,&lt;/em&gt; и приложение отображает текущие значения формы в формате JSON. Это доказывает, что любой пользовательский ввод связан с моделью данных. Сохранение и извлечение данных - упражнение для другого времени.</target>
        </trans-unit>
        <trans-unit id="7a30cd1086fc126cdbda17264a63b67bfd463386" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;Tour of Heroes&lt;/em&gt; app that you build helps a staffing agency manage its stable of heroes. The app has many of the features you'd expect to find in any data-driven application. The finished app acquires and displays a list of heroes, edits a selected hero's detail, and navigates among different views of heroic data.</source>
          <target state="translated">Приложение &quot; &lt;em&gt;Тур героев&quot;&lt;/em&gt; , которое вы создаете, помогает кадровому агентству управлять своей конюшней героев. В приложении есть многие функции, которые вы ожидаете найти в любом приложении, управляемом данными. Готовое приложение получает и отображает список героев, редактирует детали выбранного героя и перемещается между различными представлениями героических данных.</target>
        </trans-unit>
        <trans-unit id="cece2edbaa93c78578f1816377db1a1619b69bba" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;attribute selector&lt;/em&gt; pattern explains the name of this kind of directive.</source>
          <target state="translated">&lt;em&gt;Селектор атрибута&lt;/em&gt; модель объясняет название этого вида директивы.</target>
        </trans-unit>
        <trans-unit id="1b48144f080e3a52ebd72bed691562e0a4b05ef3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cache-then-refresh&lt;/em&gt; option is triggered by the presence of a &lt;strong&gt;custom &lt;code&gt;x-refresh&lt;/code&gt; header&lt;/strong&gt;.</source>
          <target state="translated">Параметр &lt;em&gt;cache-then-refresh&lt;/em&gt; активируется наличием &lt;strong&gt;настраиваемого заголовка &lt;code&gt;x-refresh&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="cd03c6a4b57c507c800b037668226501ef677043" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;cache-then-refresh&lt;/em&gt; option is triggered by the presence of a custom &lt;code&gt;x-refresh&lt;/code&gt; header.</source>
          <target state="translated">Параметр &lt;em&gt;cache-then-refresh&lt;/em&gt; запускается при наличии настраиваемого заголовка &lt;code&gt;x-refresh&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="68bffbc638ce2bcff5ac27e43af13ce79019ebe1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;class&lt;/em&gt; is similar to the &lt;code&gt;HeroesComponent&lt;/code&gt; class.</source>
          <target state="translated">&lt;em&gt;Класс&lt;/em&gt; похож на &lt;code&gt;HeroesComponent&lt;/code&gt; класса.</target>
        </trans-unit>
        <trans-unit id="3b23511daee49c68fc0bd77c760d5aeb2fbfce17" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;consumer&lt;/em&gt; of an injected service doesn't need to know how to create that service. It's the job of the DI framework to create and cache dependencies. The consumer just needs to let the DI framework know which dependencies it needs.</source>
          <target state="translated">&lt;em&gt;Потребителю&lt;/em&gt; впрыснутых служб не нужно знать , как создать эту услугу. Задача инфраструктуры DI - создавать и кэшировать зависимости. Потребителю просто нужно сообщить структуре DI, какие зависимости ему нужны.</target>
        </trans-unit>
        <trans-unit id="68169d61d2e3c28071db2b807cf1b4e1b903706c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;expression context&lt;/em&gt; is typically the &lt;em&gt;component&lt;/em&gt; instance. In the following snippets, the &lt;code&gt;recommended&lt;/code&gt; within double curly braces and the &lt;code&gt;itemImageUrl2&lt;/code&gt; in quotes refer to properties of the &lt;code&gt;AppComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Контекст выражения&lt;/em&gt; обычно является &lt;em&gt;компонентом&lt;/em&gt; экземпляра. В следующих фрагментах &lt;code&gt;recommended&lt;/code&gt; в двойных фигурных скобках и &lt;code&gt;itemImageUrl2&lt;/code&gt; в кавычках относятся к свойствам &lt;code&gt;AppComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="547e485937ee9a8482d6c575e3337f47c2760a8f" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;fixture&lt;/em&gt; methods cause Angular to perform certain tasks on the component tree. Call these method to trigger Angular behavior in response to simulated user action.</source>
          <target state="translated">В &lt;em&gt;арматуре&lt;/em&gt; методов вызывают угловой для выполнения определенных задач на дереве компонентов. Вызовите этот метод, чтобы вызвать угловое поведение в ответ на смоделированное действие пользователя.</target>
        </trans-unit>
        <trans-unit id="281c18d861de6375f500f8737ccbe1fc960a8a5e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;injector&lt;/em&gt; is the main mechanism. Angular creates an application-wide injector for you during the bootstrap process, and additional injectors as needed. You don't have to create injectors.</source>
          <target state="translated">&lt;em&gt;Инжектор&lt;/em&gt; является основным механизмом. Angular создает инжектор для всего приложения для вас во время процесса начальной загрузки и дополнительные инжекторы по мере необходимости. Вам не нужно создавать инжекторы.</target>
        </trans-unit>
        <trans-unit id="6c1ab60ab4f1d67de0ddd4e00da564b8cd65741d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;link parameters array&lt;/em&gt; contains an object with a single &lt;code&gt;outlets&lt;/code&gt; property whose value is another object keyed by one (or more) outlet names. In this case there is only the &quot;popup&quot; outlet property and its value is another &lt;em&gt;link parameters array&lt;/em&gt; that specifies the &lt;code&gt;compose&lt;/code&gt; route.</source>
          <target state="translated">&lt;em&gt;Массив параметров линии св зи&lt;/em&gt; содержит объект с одной &lt;code&gt;outlets&lt;/code&gt; собственности, значение которого является еще одним объектом ключа с помощью одного (или более) названий выходных. В этом случае есть только свойство выхода &amp;laquo;всплывающее&amp;raquo;, а его значением является другой &lt;em&gt;массив параметров ссылки,&lt;/em&gt; который определяет маршрут &lt;code&gt;compose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f8f3c3b5c5041d24c8b8360e46b01aea381f4f8" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;local variable&lt;/em&gt; approach is simple and easy. But it is limited because the parent-child wiring must be done entirely within the parent template. The parent component &lt;em&gt;itself&lt;/em&gt; has no access to the child.</source>
          <target state="translated">&lt;em&gt;Локальная переменная&lt;/em&gt; подход является простой и легкой. Но это ограничено, потому что соединение родитель-потомок должно быть сделано полностью в родительском шаблоне. Сам родительский компонент &lt;em&gt;не&lt;/em&gt; имеет доступа к дочернему.</target>
        </trans-unit>
        <trans-unit id="70d69092db75bbbde8d71173eb3a75beeb8e0869" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;next&lt;/em&gt; object</source>
          <target state="translated">&lt;em&gt;Следующий&lt;/em&gt; объект</target>
        </trans-unit>
        <trans-unit id="680dc53f22865b98fcfe8ea1b8820ef44fdd9a8d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;observe&lt;/em&gt; option specifies how much of the response to return.</source>
          <target state="translated">Параметр &lt;em&gt;наблюдения&lt;/em&gt; указывает, какую часть ответа нужно вернуть.</target>
        </trans-unit>
        <trans-unit id="d7c4875e7d9495788d2aae3a67d641c0812d162a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;overrideComponent&lt;/em&gt; method</source>
          <target state="translated">&lt;em&gt;OverrideComponent&lt;/em&gt; метод</target>
        </trans-unit>
        <trans-unit id="ff0fbcfe3ea4fa514b574eaf8f3d059f8b33db8a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;path&lt;/em&gt; of the route to the destination component.</source>
          <target state="translated">&lt;em&gt;Путь&lt;/em&gt; маршрута к компоненту назначения.</target>
        </trans-unit>
        <trans-unit id="630fa707e54c08a528f955e5bb95d477c9ced61b" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;plural&lt;/em&gt; and &lt;em&gt;select&lt;/em&gt; ICU expressions are extracted separately, so they require special attention when preparing for translation.</source>
          <target state="translated">В &lt;em&gt;множественном числе&lt;/em&gt; и &lt;em&gt;выберите&lt;/em&gt; выражения ICU извлекаются отдельно, поэтому они требуют особого внимания при подготовке к переводу.</target>
        </trans-unit>
        <trans-unit id="b1863b3c0fe60749f25419b06a221dd2df30c597" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;responseType&lt;/em&gt; option specifies the format in which to return data.</source>
          <target state="translated">Параметр &lt;em&gt;responseType&lt;/em&gt; указывает формат, в котором должны возвращаться данные.</target>
        </trans-unit>
        <trans-unit id="7ec1d5444e649cbb29fb26c5ebedf34c9f05198a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;statement context&lt;/em&gt; is typically the component instance. The &lt;em&gt;deleteHero&lt;/em&gt; in &lt;code&gt;(click)=&quot;deleteHero()&quot;&lt;/code&gt; is a method of the data-bound component.</source>
          <target state="translated">&lt;em&gt;Контекста заявления&lt;/em&gt; , как правило , экземпляр компонента. &lt;em&gt;DeleteHero&lt;/em&gt; в &lt;code&gt;(click)=&quot;deleteHero()&quot;&lt;/code&gt; представляет собой метод компонента с привязкой к данным.</target>
        </trans-unit>
        <trans-unit id="8e1155de8d03b6d218f6065cbb5b9d44effee80c" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;stub component&lt;/em&gt; approach has another advantage. While the stubs in &lt;em&gt;this&lt;/em&gt; example were empty, you could give them stripped-down templates and classes if your tests need to interact with them in some way.</source>
          <target state="translated">&lt;em&gt;Окурка компонент&lt;/em&gt; подход имеет еще одно преимущество. Хотя заглушки в &lt;em&gt;этом&lt;/em&gt; примере были пусты, вы могли бы предоставить им урезанные шаблоны и классы, если ваши тесты должны каким-либо образом взаимодействовать с ними.</target>
        </trans-unit>
        <trans-unit id="91f269fce15860a4bd882bdab5721a6f6a5432e6" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;target&lt;/em&gt; of a binding is the property or event inside the binding punctuation: &lt;code&gt;[]&lt;/code&gt;, &lt;code&gt;()&lt;/code&gt; or &lt;code&gt;[()]&lt;/code&gt;.</source>
          <target state="translated">&lt;em&gt;Мишень&lt;/em&gt; из привязки является свойством или события внутри связывания пунктуации: &lt;code&gt;[]&lt;/code&gt; , &lt;code&gt;()&lt;/code&gt; или &lt;code&gt;[()]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ccdd54cecc0f13f83a35d6d76b84a2c2d17459f4" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tax-return-to-edit&lt;/em&gt; arrives via the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; property, which is implemented with getters and setters. The setter initializes the component's own instance of the &lt;code&gt;HeroTaxReturnService&lt;/code&gt; with the incoming return. The getter always returns what that service says is the current state of the hero. The component also asks the service to save and restore this tax return.</source>
          <target state="translated">&lt;em&gt;Налог возврат в редактирование&lt;/em&gt; прибывает через &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; имущества, реализованные с добытчиками и сеттерами. Сеттер инициализирует собственный экземпляр компонента &lt;code&gt;HeroTaxReturnService&lt;/code&gt; с входящим возвратом. Получатель всегда возвращает то, что говорит этот сервис, о текущем состоянии героя. Компонент также просит сервис сохранить и восстановить эту налоговую декларацию.</target>
        </trans-unit>
        <trans-unit id="9e36ec033ef8853bb7773e0524c7bcf886af13b5" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;template&lt;/em&gt; presents a grid of hero name links.</source>
          <target state="translated">&lt;em&gt;Шаблон&lt;/em&gt; представляет собой сетку имя героя ссылки.</target>
        </trans-unit>
        <trans-unit id="636d367710cec9d2d29ffff2f2fd03967c9e996d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;tick()&lt;/em&gt; function</source>
          <target state="translated">&lt;em&gt;Клеща ()&lt;/em&gt; функция</target>
        </trans-unit>
        <trans-unit id="b73b5928bad05d3f6f07eeb7ee4604ca9d2c626e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Alter Ego&lt;/strong&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; control element does not because &lt;code&gt;alterEgo&lt;/code&gt; is optional.</source>
          <target state="translated">Элемент управления &lt;strong&gt;Alter Ego &lt;/strong&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; этого не делает, потому что &lt;code&gt;alterEgo&lt;/code&gt; является необязательным.</target>
        </trans-unit>
        <trans-unit id="8d3bb42799c52e0ebb6f8e858f4a96af7a8b97fc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Hero Power&lt;/strong&gt; select box is also required, but it doesn't need this kind of error handling because the selection box already constrains the selection to valid values.</source>
          <target state="translated">Поле выбора &amp;laquo; &lt;strong&gt;Сила героя&amp;raquo;&lt;/strong&gt; также требуется, но оно не требует такой обработки ошибок, потому что поле выбора уже ограничивает выбор допустимыми значениями.</target>
        </trans-unit>
        <trans-unit id="4cbd7a46bb1ee20b0c8f13141e85002a327111af" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Main Concepts&lt;/strong&gt; section located in the table of contents contains several topics that explain how to connect the application data in your &lt;a href=&quot;glossary#component&quot;&gt;components&lt;/a&gt; to your page-display &lt;a href=&quot;glossary#template&quot;&gt;templates&lt;/a&gt;, to create a complete interactive application.</source>
          <target state="translated">Раздел &amp;laquo; &lt;strong&gt;Основные понятия&lt;/strong&gt; &amp;raquo;, расположенный в оглавлении, содержит несколько тем, в которых объясняется, как связать данные приложения в ваших &lt;a href=&quot;glossary#component&quot;&gt;компонентах&lt;/a&gt; с &lt;a href=&quot;glossary#template&quot;&gt;шаблонами&lt;/a&gt; отображения страниц для создания полного интерактивного приложения.</target>
        </trans-unit>
        <trans-unit id="7175187c085f67353fe16a56cd79779c6b4d91da" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Name&lt;/strong&gt; input box is required and clearing it turns the bar red. That indicates that something is wrong, but the user doesn't know what is wrong or what to do about it. You can provide a helpful message by checking for and responding to the control's state.</source>
          <target state="translated">Поле ввода &lt;strong&gt;имени&lt;/strong&gt; является обязательным, и если его очистить, полоса станет красной. Это указывает на то, что что-то не так, но пользователь не знает, что не так и что с этим делать. Вы можете предоставить полезное сообщение, проверив состояние элемента управления и ответив на него.</target>
        </trans-unit>
        <trans-unit id="cdbf6656d06da974b0c76f21411092c5e5610d43" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Name&lt;/strong&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; control element has the HTML5 &lt;code&gt;required&lt;/code&gt; attribute.</source>
          <target state="translated">Элемент управления &lt;strong&gt;Name &lt;/strong&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; имеет &lt;code&gt;required&lt;/code&gt; атрибут HTML5 .</target>
        </trans-unit>
        <trans-unit id="38fe5f3ec6af8a496ebd01cf5cb597e571669f94" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;QuickStart seed&lt;/strong&gt; provides a basic QuickStart playground application and other files necessary for local development. Consequently, there are many files in the project folder on your machine, most of which you can &lt;a href=&quot;file-structure&quot;&gt;learn about later&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;Семена QuickStart&lt;/strong&gt; обеспечивает базовое приложение QuickStart площадки и другие файлы , необходимое для местного развития. Следовательно, в папке проекта на вашем компьютере есть много файлов, о большинстве из которых вы можете &lt;a href=&quot;file-structure&quot;&gt;узнать позже&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb3aa4e6ae7ad082bbd31bada71f42f06ba8bb67" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Routing Module&lt;/strong&gt; has several characteristics:</source>
          <target state="translated">&lt;strong&gt;Модуль маршрутизации&lt;/strong&gt; имеет несколько характеристик:</target>
        </trans-unit>
        <trans-unit id="849d1c8e18bd79ab64d5f8f2f782ae35aec1f5e0" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Submit&lt;/strong&gt; button has some classes on it for styling. At this point, the form layout is all plain HTML5, with no bindings or directives.</source>
          <target state="translated">На кнопке &amp;laquo; &lt;strong&gt;Отправить&amp;raquo;&lt;/strong&gt; есть несколько классов для стилизации. На данный момент макет формы представляет собой простой HTML5, без привязок или директив.</target>
        </trans-unit>
        <trans-unit id="8431cda422e11c057566eff6e247db10156e3002" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Submit&lt;/strong&gt; button is disabled because &lt;code&gt;profileForm&lt;/code&gt; is invalid due to the required &lt;code&gt;firstName&lt;/code&gt; form control. After you fill out the &lt;code&gt;firstName&lt;/code&gt; input, the form becomes valid and the &lt;strong&gt;Submit&lt;/strong&gt; button is enabled.</source>
          <target state="translated">Кнопка &amp;laquo; &lt;strong&gt;Отправить&amp;raquo;&lt;/strong&gt; отключена, потому что &lt;code&gt;profileForm&lt;/code&gt; недействителен из-за необходимого &lt;code&gt;firstName&lt;/code&gt; управления формы firstName . После заполнения ввода &lt;code&gt;firstName&lt;/code&gt; форма становится действительной и кнопка &amp;laquo; &lt;strong&gt;Отправить&amp;raquo;&lt;/strong&gt; активна.</target>
        </trans-unit>
        <trans-unit id="5fef189672083b94d3b83bc834df0b31d7afc9bf" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;empty path&lt;/strong&gt; in the fourth route represents the default path for the application, the place to go when the path in the URL is empty, as it typically is at the start. This default route redirects to the route for the &lt;code&gt;/heroes&lt;/code&gt; URL and, therefore, will display the &lt;code&gt;HeroesListComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;Пустой путь&lt;/strong&gt; в четвертом маршруте представляет собой путь по умолчанию для приложения, место , чтобы пойти , когда путь в URL пуст, как правило , находится в самом начале. Этот маршрут по умолчанию перенаправляет на маршрут для URL &lt;code&gt;/heroes&lt;/code&gt; и, следовательно, отображает &lt;code&gt;HeroesListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a7f6d0dd6a950a502cb905ddc90e2fe09d4e93d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;target of a data-binding&lt;/strong&gt; is something in the DOM. Depending on the binding type, the target can be a property (element, component, or directive), an event (element, component, or directive), or sometimes an attribute name. The following table summarizes the targets for the different binding types.</source>
          <target state="translated">&lt;strong&gt;Мишень связывания данных&lt;/strong&gt; является то , что в DOM. В зависимости от типа привязки, целью может быть свойство (элемент, компонент или директива), событие (элемент, компонент или директива) или иногда имя атрибута. В следующей таблице приведены цели для разных типов привязки.</target>
        </trans-unit>
        <trans-unit id="8a78166f7358622c21dbee58ca508e7e826a4e7b" translate="yes" xml:space="preserve">
          <source>The AOT collector does not support the arrow function, &lt;code&gt;() =&amp;gt; new Server()&lt;/code&gt;, in a metadata expression. It generates an error node in place of the function. When the compiler later interprets this node, it reports an error that invites you to turn the arrow function into an &lt;em&gt;exported function&lt;/em&gt;.</source>
          <target state="translated">Сборщик AOT не поддерживает функцию стрелки &lt;code&gt;() =&amp;gt; new Server()&lt;/code&gt; в выражении метаданных. Он генерирует узел ошибки вместо функции. Когда компилятор позже интерпретирует этот узел, он сообщает об ошибке, которая предлагает вам превратить функцию стрелки в &lt;em&gt;экспортированную функцию&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4ec06e91967a3490f909670fcf275c0084d8ae3a" translate="yes" xml:space="preserve">
          <source>The AOT collector only understands a subset of JavaScript. Define metadata objects with the following limited syntax:</source>
          <target state="translated">Коллектор AOT понимает только подмножество JavaScript.Определите объекты метаданных со следующим ограниченным синтаксисом:</target>
        </trans-unit>
        <trans-unit id="3309ff63faf07832967b0387fa813ffae5dc2636" translate="yes" xml:space="preserve">
          <source>The AOT compiler does not support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function&quot;&gt;function expressions&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow functions&lt;/a&gt;, also called &lt;em&gt;lambda&lt;/em&gt; functions.</source>
          <target state="translated">Компилятор AOT не поддерживает &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/function&quot;&gt;выражения функций&lt;/a&gt; и &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;функции стрелок&lt;/a&gt; , также называемые &lt;em&gt;лямбда-&lt;/em&gt; функциями.</target>
        </trans-unit>
        <trans-unit id="57076a87d98a096e595ee9049523e81bc3fea517" translate="yes" xml:space="preserve">
          <source>The AOT compiler does not support tagged template expressions; avoid them in metadata expressions.</source>
          <target state="translated">Компилятор AOT не поддерживает выражения шаблонов с метками;избегайте их в выражениях метаданных.</target>
        </trans-unit>
        <trans-unit id="17ec447b5468a57a4699fa18102b133cb26f2424" translate="yes" xml:space="preserve">
          <source>The Ahead-of-Time (AOT) compiler</source>
          <target state="translated">Компилятор Ahead-of-Time (AOT).</target>
        </trans-unit>
        <trans-unit id="0f58944803c6d64ef57d8af160113fc77e4a3dba" translate="yes" xml:space="preserve">
          <source>The Angular &lt;a href=&quot;../api/router/routermodule&quot;&gt;&lt;code&gt;RouterModule&lt;/code&gt;&lt;/a&gt; exports two macro static methods, &lt;code&gt;forRoot&lt;/code&gt; and &lt;code&gt;forChild&lt;/code&gt;, to help declare root and child routes. Review the &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/router/src/router_module.ts#L139&quot;&gt;source code&lt;/a&gt; for these methods to see how macros can simplify configuration of complex &lt;a href=&quot;ngmodules&quot;&gt;NgModules&lt;/a&gt;.</source>
          <target state="translated">Angular &lt;a href=&quot;../api/router/routermodule&quot;&gt; &lt;code&gt;RouterModule&lt;/code&gt; &lt;/a&gt; экспортирует два макростатических метода &lt;code&gt;forRoot&lt;/code&gt; и &lt;code&gt;forChild&lt;/code&gt; , чтобы помочь объявить корневые и дочерние маршруты. Просмотрите &lt;a href=&quot;https://github.com/angular/angular/blob/master/packages/router/src/router_module.ts#L139&quot;&gt;исходный код&lt;/a&gt; этих методов, чтобы увидеть, как макросы могут упростить настройку сложных &lt;a href=&quot;ngmodules&quot;&gt;модулей NgModules&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47e66a7447f54311fa8c78fef83d2b71c3f6c662" translate="yes" xml:space="preserve">
          <source>The Angular &lt;a href=&quot;../guide/attribute-binding#class-binding&quot;&gt;class binding&lt;/a&gt; makes it easy to add and remove a CSS class conditionally. Just add &lt;code&gt;[class.some-css-class]=&quot;some-condition&quot;&lt;/code&gt; to the element you want to style.</source>
          <target state="translated">&lt;a href=&quot;../guide/attribute-binding#class-binding&quot;&gt;Привязка класса&lt;/a&gt; Angular упрощает добавление и удаление класса CSS по условию. Просто добавьте &lt;code&gt;[class.some-css-class]=&quot;some-condition&quot;&lt;/code&gt; к элементу, который хотите стилизовать .</target>
        </trans-unit>
        <trans-unit id="f3fb711c3b5e5fe0d0ccfb358c3cf8ff1a218dcc" translate="yes" xml:space="preserve">
          <source>The Angular &lt;a href=&quot;../guide/template-syntax#class-binding&quot;&gt;class binding&lt;/a&gt; makes it easy to add and remove a CSS class conditionally. Just add &lt;code&gt;[class.some-css-class]=&quot;some-condition&quot;&lt;/code&gt; to the element you want to style.</source>
          <target state="translated">&lt;a href=&quot;../guide/template-syntax#class-binding&quot;&gt;Привязка к классу&lt;/a&gt; Angular позволяет легко добавлять и удалять класс CSS. Просто добавьте &lt;code&gt;[class.some-css-class]=&quot;some-condition&quot;&lt;/code&gt; к элементу, который вы хотите стилизовать .</target>
        </trans-unit>
        <trans-unit id="b7237af6c841a21a08e75ad225a0026b3080167a" translate="yes" xml:space="preserve">
          <source>The Angular &lt;a href=&quot;glossary#aot&quot;&gt;ahead-of-time (AOT) compiler&lt;/a&gt; converts your Angular HTML and TypeScript code into efficient JavaScript code during the build phase &lt;em&gt;before&lt;/em&gt; the browser downloads and runs that code. Compiling your application during the build process provides a faster rendering in the browser.</source>
          <target state="translated">&lt;a href=&quot;glossary#aot&quot;&gt;Компилятор&lt;/a&gt; Angular с опережением времени (AOT) преобразует ваш код Angular HTML и TypeScript в эффективный код JavaScript на этапе сборки &lt;em&gt;до&lt;/em&gt; того, как браузер загрузит и запустит этот код. Компиляция вашего приложения в процессе сборки обеспечивает более быструю визуализацию в браузере.</target>
        </trans-unit>
        <trans-unit id="7bd53a5dd11dba31d91be2abd7e3256203b19030" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; is a grouping element that doesn't interfere with styles or layout because Angular &lt;em&gt;doesn't put it in the DOM&lt;/em&gt;.</source>
          <target state="translated">Angular &lt;code&gt;&amp;lt;ng-container&amp;gt;&lt;/code&gt; - это группирующий элемент, который не мешает стилям или макету, поскольку Angular &lt;em&gt;не помещает его в DOM&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="43bb5eb6f6a28633f87170e07fbe299b89367463" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; is an interesting example of an impure pipe. The &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; accepts a &lt;code&gt;Promise&lt;/code&gt; or &lt;code&gt;Observable&lt;/code&gt; as input and subscribes to the input automatically, eventually returning the emitted values.</source>
          <target state="translated">Угловая &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; - интересный пример нечистой трубы. &lt;code&gt;&lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt;&lt;/code&gt; принимает &lt;code&gt;Promise&lt;/code&gt; или &lt;code&gt;Observable&lt;/code&gt; в качестве входных данных и при подписке на вход автоматически, в конечном счете , возвращая излучаемое значение.</target>
        </trans-unit>
        <trans-unit id="044b107dfed7b9441c1745738d1ce4219937db11" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt;&lt;/code&gt; pipe is similar although some of the parameters have changed.</source>
          <target state="translated">Канал &lt;code&gt;&lt;a href=&quot;../api/common/currencypipe&quot;&gt;currency&lt;/a&gt;&lt;/code&gt; Angular похож, хотя некоторые параметры изменились.</target>
        </trans-unit>
        <trans-unit id="19b4e117f4e15eeed3be79f6eaca89eed51b2798" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; pipe is similar.</source>
          <target state="translated">Канал &lt;code&gt;&lt;a href=&quot;../api/common/datepipe&quot;&gt;date&lt;/a&gt;&lt;/code&gt; Angular похож.</target>
        </trans-unit>
        <trans-unit id="3cd4a1df1710a1e282cc8be9a6f7e030631d0b5f" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; pipe is similar. It provides more functionality when defining the decimal places, as shown in the second example above.</source>
          <target state="translated">Канал углового &lt;code&gt;&lt;a href=&quot;../api/common/decimalpipe&quot;&gt;number&lt;/a&gt;&lt;/code&gt; аналогичен. Он обеспечивает больше функциональных возможностей при определении десятичных знаков, как показано во втором примере выше.</target>
        </trans-unit>
        <trans-unit id="7470cb8ba9aa4391c200e394d5eb3fd0ffc1a6a6" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt; pipe does the same thing.</source>
          <target state="translated">Угловая труба &lt;code&gt;&lt;a href=&quot;../api/common/jsonpipe&quot;&gt;json&lt;/a&gt;&lt;/code&gt; делает то же самое.</target>
        </trans-unit>
        <trans-unit id="bfc3526882f1ce975b1c02e954b284474cb59122" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/common/lowercasepipe&quot;&gt;lowercase&lt;/a&gt;&lt;/code&gt; pipe does the same thing.</source>
          <target state="translated">Угловая &lt;code&gt;&lt;a href=&quot;../api/common/lowercasepipe&quot;&gt;lowercase&lt;/a&gt;&lt;/code&gt; труба делает то же самое.</target>
        </trans-unit>
        <trans-unit id="810425749aeb3185f4b3f49e48b3f7db25fa3041" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; directive inserts or removes an element based on a &lt;em&gt;truthy/falsy&lt;/em&gt; condition. To see it in action, add the following paragraph at the bottom of the template:</source>
          <target state="translated">Директива Angular &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; вставляет или удаляет элемент, основанный на &lt;em&gt;условии истинности / ложности&lt;/em&gt; . Чтобы увидеть его в действии, добавьте следующий абзац внизу шаблона:</target>
        </trans-unit>
        <trans-unit id="bd5e639cdef0d9e6854735f421c2b0e44dd5b4a1" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/core/forwardref&quot;&gt;forwardRef&lt;/a&gt;()&lt;/code&gt; function creates an &lt;em&gt;indirect&lt;/em&gt; reference that Angular can resolve later.</source>
          <target state="translated">Функция Angular &lt;code&gt;&lt;a href=&quot;../api/core/forwardref&quot;&gt;forwardRef&lt;/a&gt;()&lt;/code&gt; создает &lt;em&gt;косвенную&lt;/em&gt; ссылку, которую Angular может разрешить позже.</target>
        </trans-unit>
        <trans-unit id="2497b896b7688ae48300df106650c098f5fdf738" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; facilitates this kind of testing as you'll see in the sections below. But in many cases, &lt;em&gt;testing the component class alone&lt;/em&gt;, without DOM involvement, can validate much of the component's behavior in an easier, more obvious way.</source>
          <target state="translated">Angular &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; облегчает этот вид тестирования, как вы увидите в следующих разделах. Но во многих случаях &lt;em&gt;тестирование одного только компонента класса&lt;/em&gt; без участия DOM может проверить большую часть поведения компонента более простым и очевидным способом.</target>
        </trans-unit>
        <trans-unit id="875d83e7c9770ccfa8b1c529613a326325c96e1c" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/platform-browser/by&quot;&gt;By&lt;/a&gt;&lt;/code&gt; class has three static methods for common predicates:</source>
          <target state="translated">Класс Angular &lt;code&gt;&lt;a href=&quot;../api/platform-browser/by&quot;&gt;By&lt;/a&gt;&lt;/code&gt; имеет три статических метода для общих предикатов:</target>
        </trans-unit>
        <trans-unit id="b679eb06adca30297563f49ac88eb9e497fa9839" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; (&quot;the router&quot;) borrows from this model. It can interpret a browser URL as an instruction to navigate to a client-generated view. It can pass optional parameters along to the supporting view component that help it decide what specific content to present. You can bind the router to links on a page and it will navigate to the appropriate application view when the user clicks a link. You can navigate imperatively when the user clicks a button, selects from a drop box, or in response to some other stimulus from any source. And the router logs activity in the browser's history journal so the back and forward buttons work as well.</source>
          <target state="translated">Угловой &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; (&amp;laquo;маршрутизатор&amp;raquo;) заимствует из этой модели. Он может интерпретировать URL браузера как инструкцию для перехода к сгенерированному клиентом представлению. Он может передавать необязательные параметры вспомогательному компоненту представления, который помогает ему решить, какой конкретный контент представить. Вы можете привязать маршрутизатор к ссылкам на странице, и он перейдет к соответствующему представлению приложения, когда пользователь щелкает ссылку. Вы можете перемещаться по необходимости, когда пользователь нажимает кнопку, выбирает из выпадающего списка или в ответ на какой-либо другой стимул из любого источника. Маршрутизатор регистрирует активность в журнале истории браузера, поэтому кнопки &amp;laquo;назад&amp;raquo; и &amp;laquo;вперед&amp;raquo; также работают.</target>
        </trans-unit>
        <trans-unit id="bcb493c9e74833377850a9bc3a6c20403b7af18a" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; NgModule provides a service that lets you define a navigation path among the different application states and view hierarchies in your app. It is modeled on the familiar browser navigation conventions:</source>
          <target state="translated">Angular &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; NgModule предоставляет сервис, который позволяет вам определять путь навигации среди различных состояний приложения и просматривать иерархии в вашем приложении. Он смоделирован по привычным правилам навигации браузера:</target>
        </trans-unit>
        <trans-unit id="8b57ea74f53af589a0245e763366fd711bffc4ac" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;DebugElement.triggerEventHandler&lt;/code&gt; can raise &lt;em&gt;any data-bound event&lt;/em&gt; by its &lt;em&gt;event name&lt;/em&gt;. The second parameter is the event object passed to the handler.</source>
          <target state="translated">Angular &lt;code&gt;DebugElement.triggerEventHandler&lt;/code&gt; может вызывать &lt;em&gt;любое событие, связанное с данными,&lt;/em&gt; по его &lt;em&gt;имени&lt;/em&gt; . Второй параметр - это объект события, переданный в обработчик.</target>
        </trans-unit>
        <trans-unit id="c3c8061180e2eb26c680deaa8488f18159bfd307" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;bootstrapModule&lt;/code&gt; method has a second &lt;code&gt;compilerOptions&lt;/code&gt; parameter that can influence the behavior of the compiler. You can use it to specify the translation providers:</source>
          <target state="translated">У метода Angular &lt;code&gt;bootstrapModule&lt;/code&gt; есть второй параметр &lt;code&gt;compilerOptions&lt;/code&gt; , который может влиять на поведение компилятора. Вы можете использовать его для указания поставщиков перевода:</target>
        </trans-unit>
        <trans-unit id="bfa5f562ee24d3208771a463b736deb75b60079b" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;currency&lt;/code&gt; pipe is similar although some of the parameters have changed.</source>
          <target state="translated">Угловая &lt;code&gt;currency&lt;/code&gt; труба похожа, хотя некоторые параметры изменились.</target>
        </trans-unit>
        <trans-unit id="f62bb3c73f061003b3faf3aae067e7b55b5dafca" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;date&lt;/code&gt; pipe is similar.</source>
          <target state="translated">Угловая &lt;code&gt;date&lt;/code&gt; труба похожа.</target>
        </trans-unit>
        <trans-unit id="fcbe8e4317f36d2d4a4d3ef4bd8ffd65770ba540" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;i18n&lt;/code&gt; attribute marks translatable content. Place it on every element tag whose fixed text is to be translated.</source>
          <target state="translated">Атрибут Angular &lt;code&gt;i18n&lt;/code&gt; отмечает переводимый контент. Поместите его в каждый тег элемента, чей фиксированный текст должен быть переведен.</target>
        </trans-unit>
        <trans-unit id="cdf01d2b5b0c515f0663f00d093f35293facf213" translate="yes" xml:space="preserve">
          <source>The Angular &lt;code&gt;number&lt;/code&gt; pipe is similar. It provides more functionality when defining the decimal places, as shown in the second example above.</source>
          <target state="translated">Угловой &lt;code&gt;number&lt;/code&gt; трубы аналогичен. Это обеспечивает больше функциональности при определении десятичных разрядов, как показано во втором примере выше.</target>
        </trans-unit>
        <trans-unit id="b99b3f86ef5c932dea53e89dd94423d13289d8bf" translate="yes" xml:space="preserve">
          <source>The Angular &lt;em&gt;NgSwitch&lt;/em&gt; is actually a set of cooperating directives: &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular &lt;em&gt;NgSwitch&lt;/em&gt; - это фактически набор взаимодействующих директив: &lt;code&gt;&lt;a href=&quot;../api/common/ngswitch&quot;&gt;NgSwitch&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;NgSwitchCase&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;NgSwitchDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="04175ded62d1fec12553cfb8f3f2c9d97972748f" translate="yes" xml:space="preserve">
          <source>The Angular &lt;em&gt;fixture&lt;/em&gt; provides the component's element directly through the &lt;code&gt;fixture.nativeElement&lt;/code&gt;.</source>
          <target state="translated">Угловое &lt;em&gt;крепление&lt;/em&gt; обеспечивает элемент компоненты непосредственно через &lt;code&gt;fixture.nativeElement&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="75a9f1c400fe3d6b4e3401b6477de45dccf239a7" translate="yes" xml:space="preserve">
          <source>The Angular &lt;strong&gt;&lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt; enables navigation from one &lt;a href=&quot;glossary#view&quot;&gt;view&lt;/a&gt; to the next as users perform application tasks.</source>
          <target state="translated">Угловой &lt;strong&gt; &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; &lt;/strong&gt; позволяет переходить от одного &lt;a href=&quot;glossary#view&quot;&gt;вида&lt;/a&gt; к другому, когда пользователи выполняют задачи приложения.</target>
        </trans-unit>
        <trans-unit id="8e0346e973842ce7bf0908428389410a777108b7" translate="yes" xml:space="preserve">
          <source>The Angular AOT compiler extracts &lt;strong&gt;metadata&lt;/strong&gt; to interpret the parts of the application that Angular is supposed to manage. You can specify the metadata explicitly in &lt;strong&gt;decorators&lt;/strong&gt; such as &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt;, or implicitly in the constructor declarations of the decorated classes. The metadata tells Angular how to construct instances of your application classes and interact with them at runtime.</source>
          <target state="translated">Компилятор Angular AOT извлекает &lt;strong&gt;метаданные&lt;/strong&gt; для интерпретации частей приложения, которыми должен управлять Angular. Вы можете явно указать метаданные в &lt;strong&gt;декораторах,&lt;/strong&gt; таких как &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; , или неявно в объявлениях конструктора декорированных классов. Метаданные сообщают Angular, как создавать экземпляры классов вашего приложения и взаимодействовать с ними во время выполнения.</target>
        </trans-unit>
        <trans-unit id="4b8a66ad73b412d255791431bd34d06ff172ffb0" translate="yes" xml:space="preserve">
          <source>The Angular Ahead-of-Time (AOT) compiler converts your Angular HTML and TypeScript code into efficient JavaScript code during the build phase &lt;em&gt;before&lt;/em&gt; the browser downloads and runs that code. Compiling your application during the build process provides a faster rendering in the browser.</source>
          <target state="translated">Компилятор Angular Ahead-of-Time (AOT) преобразует ваш код Angular HTML и TypeScript в эффективный код JavaScript на этапе сборки, &lt;em&gt;прежде&lt;/em&gt; чем браузер загрузит и выполнит этот код. Компиляция приложения во время процесса сборки обеспечивает более быструю визуализацию в браузере.</target>
        </trans-unit>
        <trans-unit id="a03f8200944a32e3f51a4b6988b1c544b8ca6333" translate="yes" xml:space="preserve">
          <source>The Angular CI process runs all end-to-end tests for every Angular PR. Angular re-tests the samples after every new version of a sample and every new version of Angular itself.</source>
          <target state="translated">Процесс Угловой КИ выполняет все сквозные тесты для каждого Углового PR.Угловой КИ повторно тестирует образцы после каждой новой версии образца и каждой новой версии самого Углового PR.</target>
        </trans-unit>
        <trans-unit id="fa5e030af9214f0f4cb5358ab971f2f3bbbe60cc" translate="yes" xml:space="preserve">
          <source>The Angular CLI &lt;code&gt;ng new&lt;/code&gt; command creates a workspace.</source>
          <target state="translated">Команда Angular CLI &lt;code&gt;ng new&lt;/code&gt; создает рабочее пространство.</target>
        </trans-unit>
        <trans-unit id="d07911428eda07c6d1e17ebfc74e10d6d40d3d5f" translate="yes" xml:space="preserve">
          <source>The Angular CLI command &lt;a href=&quot;cli/generate&quot;&gt;&lt;code&gt;ng generate component&lt;/code&gt;&lt;/a&gt; defines an empty &lt;code&gt;styles&lt;/code&gt; array when you create the component with the &lt;code&gt;--inline-style&lt;/code&gt; flag.</source>
          <target state="translated">Команда Angular CLI &lt;a href=&quot;cli/generate&quot;&gt; &lt;code&gt;ng generate component&lt;/code&gt; &lt;/a&gt; определяет пустой массив &lt;code&gt;styles&lt;/code&gt; при создании компонента с &lt;code&gt;--inline-style&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09643dead4d1c78b462efc30f8bde1402d517017" translate="yes" xml:space="preserve">
          <source>The Angular CLI command &lt;code&gt;ng deploy&lt;/code&gt; (introduced in version 8.3.0) executes the &lt;code&gt;deploy&lt;/code&gt;&lt;a href=&quot;cli-builder&quot;&gt;CLI builder&lt;/a&gt; associated with your project. A number of third-party builders implement deployment capabilities to different platforms. You can add any of them to your project by running &lt;code&gt;ng add [package name]&lt;/code&gt;.</source>
          <target state="translated">Команда Angular CLI &lt;code&gt;ng deploy&lt;/code&gt; (представленная в версии 8.3.0) выполняет &lt;a href=&quot;cli-builder&quot;&gt;компоновщик CLI для &lt;/a&gt; &lt;code&gt;deploy&lt;/code&gt; связанный с вашим проектом. Ряд сторонних сборщиков реализуют возможности развертывания на разных платформах. Вы можете добавить любой из них в свой проект, запустив &lt;code&gt;ng add [package name]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3d7512acefcea2947e134ca176993a0a2b9c106" translate="yes" xml:space="preserve">
          <source>The Angular CLI downloads and installs everything you need to test an Angular application with the &lt;a href=&quot;https://jasmine.github.io/&quot;&gt;Jasmine test framework&lt;/a&gt;.</source>
          <target state="translated">Angular CLI загружает и устанавливает все необходимое для тестирования приложения Angular с помощью &lt;a href=&quot;https://jasmine.github.io/&quot;&gt;инфраструктуры тестирования Jasmine&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="268f17b44b8897aaaa4b843da9aee7dae34c98de" translate="yes" xml:space="preserve">
          <source>The Angular CLI generated an &lt;code&gt;AppModule&lt;/code&gt; class in &lt;code&gt;src/app/app.module.ts&lt;/code&gt; when it created the project. This is where you &lt;em&gt;opt-in&lt;/em&gt; to the &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Angular CLI сгенерировал класс &lt;code&gt;AppModule&lt;/code&gt; в &lt;code&gt;src/app/app.module.ts&lt;/code&gt; при создании проекта. Здесь вы &lt;em&gt;выберете в&lt;/em&gt; к &lt;code&gt;&lt;a href=&quot;../api/forms/formsmodule&quot;&gt;FormsModule&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="107493d097ae11fbcb314a2ed3716860a96fec1b" translate="yes" xml:space="preserve">
          <source>The Angular CLI handles differential loading for you as part of the &lt;em&gt;build&lt;/em&gt; process for deployment. The &lt;code&gt;ng build&lt;/code&gt; command produces the necessary bundles used for differential loading, based on your browser support requirements and compilation target.</source>
          <target state="translated">Angular CLI обрабатывает дифференциальную нагрузку для вас как часть процесса &lt;em&gt;сборки&lt;/em&gt; для развертывания. Команда &lt;code&gt;ng build&lt;/code&gt; создает необходимые пакеты, используемые для дифференциальной загрузки, на основе требований поддержки вашего браузера и цели компиляции.</target>
        </trans-unit>
        <trans-unit id="d5e857140d05ef6844404b8615a66b9f4c44b396" translate="yes" xml:space="preserve">
          <source>The Angular CLI includes a server, so that you can build and serve your app locally.</source>
          <target state="translated">Угловой CLI включает в себя сервер,так что вы можете создавать и обслуживать ваше приложение локально.</target>
        </trans-unit>
        <trans-unit id="6cfbfae03eb19b3ecdbf1adb80b15d014200eb71" translate="yes" xml:space="preserve">
          <source>The Angular CLI includes a server, so that you can easily build and serve your app locally.</source>
          <target state="translated">Угловой CLI включает в себя сервер,так что вы можете легко собрать и обслуживать ваше приложение локально.</target>
        </trans-unit>
        <trans-unit id="99240af0e017c305ac2fe38f1420a6c01c217331" translate="yes" xml:space="preserve">
          <source>The Angular CLI installs the necessary Angular &lt;code&gt;npm&lt;/code&gt; packages and other dependencies. This can take a few minutes.</source>
          <target state="translated">Angular CLI устанавливает необходимые пакеты Angular &lt;code&gt;npm&lt;/code&gt; и другие зависимости. Это может занять несколько минут.</target>
        </trans-unit>
        <trans-unit id="44dd54dfc8964065cd90136f8e3b10b3cf1a4390" translate="yes" xml:space="preserve">
          <source>The Angular CLI installs the necessary Angular npm packages and other dependencies. This can take a few minutes.</source>
          <target state="translated">Угловой CLI устанавливает необходимые угловые npm пакеты и другие зависимости.Это может занять несколько минут.</target>
        </trans-unit>
        <trans-unit id="bf80b618388fecbd79473fee682b4084f17bfeb0" translate="yes" xml:space="preserve">
          <source>The Angular CLI is a command-line interface tool that you use to initialize, develop, scaffold, and maintain Angular applications directly from a command shell.</source>
          <target state="translated">Угловой CLI-это инструмент интерфейса командной строки,который вы используете для инициализации,разработки,сопровождения и обслуживания Угловых приложений непосредственно из командной оболочки.</target>
        </trans-unit>
        <trans-unit id="e3450aeb1031f9a687d8114c58a874fc5f5cc28c" translate="yes" xml:space="preserve">
          <source>The Angular CLI is a command-line interface tool that you use to initialize, develop, scaffold, and maintain Angular applications. You can use the tool directly in a command shell, or indirectly through an interactive UI such as &lt;a href=&quot;https://angularconsole.com&quot;&gt;Angular Console&lt;/a&gt;.</source>
          <target state="translated">Angular CLI - это инструмент интерфейса командной строки, который используется для инициализации, разработки, создания и поддержки приложений Angular. Вы можете использовать инструмент непосредственно в командной оболочке или косвенно через интерактивный интерфейс пользователя, такой как &lt;a href=&quot;https://angularconsole.com&quot;&gt;Angular Console&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fae14f5aaf5497739ab1d6d16c0fd5b468b3e46c" translate="yes" xml:space="preserve">
          <source>The Angular CLI outputs warnings if it detects that your browser application depends on CommonJS modules. To disable these warnings, you can add the CommonJS module name to &lt;code&gt;allowedCommonJsDependencies&lt;/code&gt; option in the &lt;code&gt;build&lt;/code&gt; options located in &lt;code&gt;angular.json&lt;/code&gt; file.</source>
          <target state="translated">Angular CLI выводит предупреждения, если обнаруживает, что ваше приложение браузера зависит от модулей CommonJS. Чтобы отключить эти предупреждения, вы можете добавить имя модуля CommonJS в параметр &lt;code&gt;allowedCommonJsDependencies&lt;/code&gt; в параметрах &lt;code&gt;build&lt;/code&gt; , расположенных в файле &lt;code&gt;angular.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5197f50b0a17f7cf0952ce4e36557b69ebf6c2a8" translate="yes" xml:space="preserve">
          <source>The Angular CLI performs this step automatically. The CLI also sets up a &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; array for your routes and configures the &lt;code&gt;imports&lt;/code&gt; and &lt;code&gt;exports&lt;/code&gt; arrays for &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt;.</source>
          <target state="translated">Angular CLI выполняет этот шаг автоматически. CLI также настраивает массив &lt;code&gt;&lt;a href=&quot;../api/router/routes&quot;&gt;Routes&lt;/a&gt;&lt;/code&gt; для ваших маршрутов и настраивает массивы &lt;code&gt;imports&lt;/code&gt; и &lt;code&gt;exports&lt;/code&gt; для &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="755a2a64b5f04e3ccbf78d316586e03c34b19fb0" translate="yes" xml:space="preserve">
          <source>The Angular CLI performs this step for you. However, if you are creating an app manually or working with an existing, non-CLI app, verify that the imports and configuration are correct. The following is the default &lt;code&gt;AppModule&lt;/code&gt; using the CLI with the &lt;code&gt;--routing&lt;/code&gt; flag.</source>
          <target state="translated">Angular CLI выполняет этот шаг за вас. Однако, если вы создаете приложение вручную или работаете с существующим приложением, отличным от интерфейса командной строки, убедитесь, что импорт и конфигурация верны. Ниже приведен &lt;code&gt;AppModule&lt;/code&gt; по умолчанию, использующий интерфейс командной строки с флагом &lt;code&gt;--routing&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="af511e0852aa578eafccf55c3ef084749c706727" translate="yes" xml:space="preserve">
          <source>The Angular CLI tools.</source>
          <target state="translated">Угловые инструменты CLI.</target>
        </trans-unit>
        <trans-unit id="e7315acf64ffba967535cd146e3b147b69209359" translate="yes" xml:space="preserve">
          <source>The Angular CLI uses two configurations for differential loading:</source>
          <target state="translated">Угловой CLI использует две конфигурации для дифференциальной нагрузки:</target>
        </trans-unit>
        <trans-unit id="0b647147cda79b8b71174240ba657c01cc0282ef" translate="yes" xml:space="preserve">
          <source>The Angular Framework, Angular CLI, and components used by Angular applications are packaged as &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;npm packages&lt;/a&gt; and distributed via the &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;npm registry&lt;/a&gt;.</source>
          <target state="translated">Angular Framework, Angular CLI и компоненты, используемые приложениями Angular, упаковываются в &lt;a href=&quot;https://docs.npmjs.com/getting-started/what-is-npm&quot;&gt;пакеты npm&lt;/a&gt; и распространяются через &lt;a href=&quot;https://docs.npmjs.com/&quot;&gt;реестр npm&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac23c8d82634ad1235f0eec2bb7598c143df4b5f" translate="yes" xml:space="preserve">
          <source>The Angular Injector *</source>
          <target state="translated">Угловой инжектор</target>
        </trans-unit>
        <trans-unit id="18be8272f01590e93bfcd42d6f4136d2716d2a98" translate="yes" xml:space="preserve">
          <source>The Angular Language Service can forewarn you of mistakes in your code. In this example, Angular doesn't know what &lt;code&gt;orders&lt;/code&gt; is or where it comes from.</source>
          <target state="translated">Служба Angular Language Service может предупредить вас об ошибках в вашем коде. В этом примере Angular не знает, что это за &lt;code&gt;orders&lt;/code&gt; и откуда они поступают.</target>
        </trans-unit>
        <trans-unit id="6596c329e39ca54d0c7f8e5df88c15b4e19b0aaf" translate="yes" xml:space="preserve">
          <source>The Angular Language Service provides code editors with a way to get completions, errors, hints, and navigation inside Angular templates. It works with external templates in separate HTML files, and also with in-line templates.</source>
          <target state="translated">Служба Angular Language Service предоставляет редакторам кода возможность получать дополнения,ошибки,подсказки и навигацию внутри шаблонов Angular.Она работает с внешними шаблонами в отдельных HTML-файлах,а также с встроенными шаблонами.</target>
        </trans-unit>
        <trans-unit id="3e67a34f16363de23bed96136c061107da748ea8" translate="yes" xml:space="preserve">
          <source>The Angular Router is an optional service that presents a particular component view for a given URL. It is not part of the Angular core and thus is in its own library package, &lt;code&gt;@angular/router&lt;/code&gt;.</source>
          <target state="translated">Маршрутизатор Angular - это дополнительная услуга, которая представляет конкретное представление компонентов для данного URL-адреса. Он не является частью ядра Angular и, следовательно, находится в собственном библиотечном пакете &lt;code&gt;@angular/router&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd1cdcf22210d9763bd0c78281e3611dadc0f91d" translate="yes" xml:space="preserve">
          <source>The Angular Router is an optional service that presents a particular component view for a given URL. It is not part of the Angular core. It is in its own library package, &lt;code&gt;@angular/router&lt;/code&gt;. Import what you need from it as you would from any other Angular package.</source>
          <target state="translated">Angular Router - это дополнительная служба, которая представляет конкретный вид компонента для данного URL. Это не часть углового ядра. Он находится в своем собственном библиотечном пакете, &lt;code&gt;@angular/router&lt;/code&gt; . Импортируйте из него то, что вам нужно, как из любого другого пакета Angular.</target>
        </trans-unit>
        <trans-unit id="9eb08a795c65471995e5535981ebfa362dda2718" translate="yes" xml:space="preserve">
          <source>The Angular Update Guide provides customized update instructions, based on the current and target versions that you specify. It includes basic and advanced update paths, to match the complexity of your applications. It also includes troubleshooting information and any recommended manual changes to help you get the most out of the new release.</source>
          <target state="translated">Руководство по угловому обновлению содержит настраиваемые инструкции по обновлению,основанные на текущих и целевых версиях,которые вы указываете.Оно включает в себя основные и расширенные пути обновления в соответствии со сложностью ваших приложений.Оно также включает в себя информацию по устранению неполадок и любые рекомендуемые изменения вручную,чтобы помочь вам получить максимальную отдачу от новой версии.</target>
        </trans-unit>
        <trans-unit id="b661c9f690153924a7c2703de890f3bc79be1136" translate="yes" xml:space="preserve">
          <source>The Angular ahead-of-time (AOT) compiler converts Angular HTML and TypeScript code into efficient JavaScript code during the build phase, before the browser downloads and runs that code. This is the best compilation mode for production environments, with decreased load time and increased performance compared to &lt;a href=&quot;glossary#jit&quot;&gt;just-in-time (JIT) compilation&lt;/a&gt;.</source>
          <target state="translated">Компилятор Angular заблаговременно (AOT) преобразует код Angular HTML и TypeScript в эффективный код JavaScript на этапе сборки, прежде чем браузер загрузит и запустит этот код. Это лучший режим компиляции для производственных сред с уменьшенным временем загрузки и повышенной производительностью по сравнению с &lt;a href=&quot;glossary#jit&quot;&gt;JIT-компиляцией&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="20c9ec499f8aa2e01b35b329a7f155394dc66c5b" translate="yes" xml:space="preserve">
          <source>The Angular application manages what the user sees and can do, achieving this through the interaction of a component class instance (the &lt;em&gt;component&lt;/em&gt;) and its user-facing template.</source>
          <target state="translated">Приложение Angular управляет тем, что пользователь видит и может делать, достигая этого посредством взаимодействия экземпляра класса компонента ( &lt;em&gt;компонента&lt;/em&gt; ) и его пользовательского шаблона.</target>
        </trans-unit>
        <trans-unit id="60a34b9c53677e6872367240f8da49f2a0c10121" translate="yes" xml:space="preserve">
          <source>The Angular build tools.</source>
          <target state="translated">Инструменты для угловой сборки.</target>
        </trans-unit>
        <trans-unit id="89876cc2d5b7c9baf7d2993913b0abae3dac5cd8" translate="yes" xml:space="preserve">
          <source>The Angular compiler converts the application code you write into highly performant JavaScript code. The &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; metadata plays an important role in guiding the compilation process.</source>
          <target state="translated">Компилятор Angular преобразует код приложения, который вы пишете, в высокопроизводительный код JavaScript. &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; метаданные играют важную роль в руководстве процесса компиляции.</target>
        </trans-unit>
        <trans-unit id="0307d0ec8fe91a6388457b087bee98707153506e" translate="yes" xml:space="preserve">
          <source>The Angular compiler creates the &lt;code&gt;BannerComponentStub&lt;/code&gt; for the &lt;code&gt;&amp;lt;app-banner&amp;gt;&lt;/code&gt; element and applies the &lt;code&gt;RouterLinkStubDirective&lt;/code&gt; to the anchors with the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; attribute, but it ignores the &lt;code&gt;&amp;lt;app-welcome&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">Компилятор Angular создает &lt;code&gt;BannerComponentStub&lt;/code&gt; для элемента &lt;code&gt;&amp;lt;app-banner&amp;gt;&lt;/code&gt; и применяет &lt;code&gt;RouterLinkStubDirective&lt;/code&gt; к &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; атрибутом routerLink , но игнорирует теги &lt;code&gt;&amp;lt;app-welcome&amp;gt;&lt;/code&gt; и &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2099e1bb42f72af03878b03cb23d738d02f0370" translate="yes" xml:space="preserve">
          <source>The Angular compiler extracts the metadata &lt;em&gt;once&lt;/em&gt; and generates a &lt;em&gt;factory&lt;/em&gt; for &lt;code&gt;TypicalComponent&lt;/code&gt;. When it needs to create a &lt;code&gt;TypicalComponent&lt;/code&gt; instance, Angular calls the factory, which produces a new visual element, bound to a new instance of the component class with its injected dependency.</source>
          <target state="translated">Компилятор Angular извлекает метаданные &lt;em&gt;один раз&lt;/em&gt; и генерирует &lt;em&gt;фабрику&lt;/em&gt; для &lt;code&gt;TypicalComponent&lt;/code&gt; . Когда ему нужно создать экземпляр &lt;code&gt;TypicalComponent&lt;/code&gt; , Angular вызывает фабрику, которая создает новый визуальный элемент, связанный с новым экземпляром класса компонента с его внедренной зависимостью.</target>
        </trans-unit>
        <trans-unit id="7f25ae265c05f2ca418855270245f3c2089c6ef1" translate="yes" xml:space="preserve">
          <source>The Angular compiler finds a component or directive in a template when it can match the &lt;em&gt;selector&lt;/em&gt; of that component or directive to some HTML in that template.</source>
          <target state="translated">Компилятор Angular находит компонент или директиву в шаблоне, когда он может сопоставить &lt;em&gt;селектор&lt;/em&gt; этого компонента или директивы с некоторым HTML-кодом в этом шаблоне.</target>
        </trans-unit>
        <trans-unit id="2ec324b0b04115ae909396e8d599ab544a424d3c" translate="yes" xml:space="preserve">
          <source>The Angular compiler reads the template markup, combines it with the corresponding component class code, and emits &lt;em&gt;component factories&lt;/em&gt;.</source>
          <target state="translated">Компилятор Angular считывает разметку шаблона, объединяет ее с соответствующим кодом класса компонента и генерирует &lt;em&gt;фабрики компонентов&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f5ebc9e9914857b1641e25cdad9ec2fbf7a0b1b5" translate="yes" xml:space="preserve">
          <source>The Angular compiler, which is invoked by the Angular CLI's &lt;code&gt;ng build&lt;/code&gt; and &lt;code&gt;ng serve&lt;/code&gt; commands.</source>
          <target state="translated">Компилятор Angular, который вызывается командами Angular CLI &lt;code&gt;ng build&lt;/code&gt; и &lt;code&gt;ng serve&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac9db4e8ab53e00307263bffc47d982c1e256eae" translate="yes" xml:space="preserve">
          <source>The Angular extraction tool (described in &lt;a href=&quot;i18n#ng-xi18n&quot;&gt;Work with translation files&lt;/a&gt; in this guide) generates a translation unit entry for each &lt;code&gt;i18n&lt;/code&gt; attribute in a template. It assigns each translation unit a unique ID based on the &lt;em&gt;meaning&lt;/em&gt; and &lt;em&gt;description&lt;/em&gt;.</source>
          <target state="translated">Инструмент извлечения Angular (описанный в разделе &lt;a href=&quot;i18n#ng-xi18n&quot;&gt;Работа с файлами перевода&lt;/a&gt; в этом руководстве) генерирует запись единицы перевода для каждого атрибута &lt;code&gt;i18n&lt;/code&gt; в шаблоне. Он присваивает каждой единице перевода уникальный идентификатор, основанный на &lt;em&gt;значении&lt;/em&gt; и &lt;em&gt;описании&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cdc01358f63d4bea105e06d264c95e64af6796fa" translate="yes" xml:space="preserve">
          <source>The Angular extraction tool preserves both the meaning and the description in the translation source file to facilitate contextually-specific translations, but only the combination of meaning and text message are used to generate the specific id of a translation. If you have two similar text messages with different meanings, they are extracted separately. If you have two similar text messages with different descriptions (not different meanings), then they are extracted only once.</source>
          <target state="translated">Инструмент углового извлечения сохраняет значение и описание в исходном файле перевода для облегчения контекстно-специфического перевода,но для генерации специфического идентификатора перевода используется только комбинация значения и текстового сообщения.Если у вас есть два одинаковых текстовых сообщения с разными значениями,они извлекаются отдельно.Если у вас два похожих текстовых сообщения с разными описаниями (не разного значения),то они извлекаются только один раз.</target>
        </trans-unit>
        <trans-unit id="56065a39a7119008e9a39c78658ad09336f7d947" translate="yes" xml:space="preserve">
          <source>The Angular extractor generates a file with a translation unit entry for each &lt;code&gt;i18n&lt;/code&gt; attribute in a template. As described previously (in &lt;a href=&quot;i18n#transaction-unit-ids&quot;&gt;How meanings control text extraction and merging&lt;/a&gt;), Angular assigns each translation unit a unique ID such as the following:</source>
          <target state="translated">Экстрактор Angular генерирует файл с записью единицы перевода для каждого атрибута &lt;code&gt;i18n&lt;/code&gt; в шаблоне. Как описано ранее (в &lt;a href=&quot;i18n#transaction-unit-ids&quot;&gt;разделе Как значения управляют извлечением и объединением текста&lt;/a&gt; ), Angular присваивает каждой единице перевода уникальный идентификатор, например следующий:</target>
        </trans-unit>
        <trans-unit id="c7bed172ef3f576a631fea5fc78a1554b8751f9a" translate="yes" xml:space="preserve">
          <source>The Angular form discussed in this page takes advantage of the following framework features to provide support for data modification, validation, and more.</source>
          <target state="translated">Угловая форма,обсуждаемая на этой странице,использует следующие особенности структуры для обеспечения поддержки модификации,валидации и т.п.данных.</target>
        </trans-unit>
        <trans-unit id="9401af39b6d9558ec8f95390db5e947910915008" translate="yes" xml:space="preserve">
          <source>The Angular form discussed in this page takes advantage of the following framework features to provide support for data modification, validation, and more:</source>
          <target state="translated">Угловая форма,обсуждаемая на этой странице,использует следующие особенности структуры для обеспечения поддержки модификации,валидации и т.п.данных:</target>
        </trans-unit>
        <trans-unit id="cfa9faecdc950e49e0de1c849935984c499cc08c" translate="yes" xml:space="preserve">
          <source>The Angular framework itself is loaded as a set of JavaScript modules.</source>
          <target state="translated">Сам фреймворк Angular загружается как набор модулей JavaScript.</target>
        </trans-unit>
        <trans-unit id="b614d48db6c124a58526470dfe61af1ee15a7578" translate="yes" xml:space="preserve">
          <source>The Angular just-in-time (JIT) compiler converts your Angular HTML and TypeScript code into efficient JavaScript code at run time, as part of bootstrapping.</source>
          <target state="translated">Компилятор Angular just-in-time (JIT)преобразует ваш угловой HTML и TypeScript код в эффективный JavaScript код во время выполнения,как часть загрузки.</target>
        </trans-unit>
        <trans-unit id="105f93ad850589d58764ef97e15115bfd2d26310" translate="yes" xml:space="preserve">
          <source>The Angular microsyntax lets you configure a directive in a compact, friendly string. The microsyntax parser translates that string into attributes on the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">Микросинтаксис Angular позволяет вам сконфигурировать директиву в виде удобной компактной строки. Синтаксический анализатор микросинтаксиса преобразует эту строку в атрибуты в &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="9143f5ef451f8d1a9405683f722d57d62564c553" translate="yes" xml:space="preserve">
          <source>The Angular module is not instantiated until the app actually needs it.</source>
          <target state="translated">Угловой модуль не инстанцируется до тех пор,пока приложение действительно в нем не нуждается.</target>
        </trans-unit>
        <trans-unit id="07693af4435d3ea992bcd5d6d76e1a0c64d51494" translate="yes" xml:space="preserve">
          <source>The Angular module will be bootstrapped once (when requested for the first time) and the same reference will be used from that point onwards.</source>
          <target state="translated">Угловой модуль будет загружаться один раз (при первом запросе),и с этого момента будет использоваться та же ссылка.</target>
        </trans-unit>
        <trans-unit id="248192779b7cf444374f15b0f0bd950ae02e3662" translate="yes" xml:space="preserve">
          <source>The Angular non-null assertion operator, &lt;code&gt;!&lt;/code&gt;, serves the same purpose in an Angular template. For example, after you use &lt;a href=&quot;template-syntax#ngIf&quot;&gt;*ngIf&lt;/a&gt; to check that &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; is defined, you can assert that &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; properties are also defined.</source>
          <target state="translated">Оператор углового ненулевого утверждения &lt;code&gt;!&lt;/code&gt; , служит той же цели в угловом шаблоне. Например, после использования &lt;a href=&quot;template-syntax#ngIf&quot;&gt;* ngIf&lt;/a&gt; для проверки того, что &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; определен, вы можете утверждать, что свойства &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; также определены.</target>
        </trans-unit>
        <trans-unit id="f8ea8a72b52be7e9e55271d6843b9cb7e8a6bc13" translate="yes" xml:space="preserve">
          <source>The Angular non-null assertion operator, &lt;code&gt;!&lt;/code&gt;, serves the same purpose in an Angular template. For example, you can assert that &lt;code&gt;item&lt;/code&gt; properties are also defined.</source>
          <target state="translated">Оператор утверждения Angular, отличный от нуля &lt;code&gt;!&lt;/code&gt; , служит той же цели в шаблоне Angular. Например, вы можете утверждать, что свойства &lt;code&gt;item&lt;/code&gt; также определены.</target>
        </trans-unit>
        <trans-unit id="ed5cca36be0033131d61848f431beb9c0a775bfc" translate="yes" xml:space="preserve">
          <source>The Angular platform is the entry point for Angular on a web page. Each page has exactly one platform, and services (such as reflection) which are common to every Angular application running on the page are bound in its scope.</source>
          <target state="translated">Угловая платформа является точкой входа для Угловой на веб-странице.Каждая страница имеет ровно одну платформу,и сервисы (такие как отражение),которые являются общими для каждого приложения Angular,запущенного на странице,привязаны в своей области действия.</target>
        </trans-unit>
        <trans-unit id="655e7b4bd5e668ad1b165b930308d201753125e9" translate="yes" xml:space="preserve">
          <source>The Angular platform is the entry point for Angular on a web page. Each page has exactly one platform. Services (such as reflection) which are common to every Angular application running on the page are bound in its scope. A page's platform is initialized implicitly when a platform is created using a platform factory such as &lt;code&gt;PlatformBrowser&lt;/code&gt;, or explicitly by calling the &lt;code&gt;&lt;a href=&quot;core/createplatform&quot;&gt;createPlatform&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">Платформа Angular - это точка входа для Angular на веб-странице. У каждой страницы ровно одна платформа. Службы (такие как отражение), общие для каждого приложения Angular, запущенного на странице, связаны в его области действия. Платформа страницы инициализируется неявно, когда платформа создается с использованием фабрики платформы, такой как &lt;code&gt;PlatformBrowser&lt;/code&gt; , или явно путем вызова функции &lt;code&gt;&lt;a href=&quot;core/createplatform&quot;&gt;createPlatform&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a946c6be79932ce3cd70c89889bd3ece84c512a" translate="yes" xml:space="preserve">
          <source>The Angular platform is the entry point for Angular on a web page. Each page has exactly one platform. Services (such as reflection) which are common to every Angular application running on the page are bound in its scope. A page's platform is initialized implicitly when a platform is created using a platform factory such as &lt;code&gt;PlatformBrowser&lt;/code&gt;, or explicitly by calling the &lt;code&gt;&lt;a href=&quot;createplatform&quot;&gt;createPlatform&lt;/a&gt;()&lt;/code&gt; function.</source>
          <target state="translated">Платформа Angular - это точка входа для Angular на веб-странице. У каждой страницы ровно одна платформа. Службы (такие как отражение), общие для каждого приложения Angular, запущенного на странице, связаны в его области действия. Платформа страницы инициализируется неявно, когда платформа создается с использованием фабрики платформы, такой как &lt;code&gt;PlatformBrowser&lt;/code&gt; , или явно путем вызова функции &lt;code&gt;&lt;a href=&quot;createplatform&quot;&gt;createPlatform&lt;/a&gt;()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51e83b347ed63e4f22ca0037f663340cff3e1b26" translate="yes" xml:space="preserve">
          <source>The Angular router comes with high-level animation functions that let you animate the transitions between views when a route changes. To produce an animation sequence when switching between routes, you need to define nested animation sequences. Start with the top-level component that hosts the view, and nest additional animations in the components that host the embedded views.</source>
          <target state="translated">Угловой маршрутизатор оснащен функциями анимации высокого уровня,которые позволяют анимировать переходы между видами при изменении маршрута.Для создания анимационной последовательности при переключении между маршрутами необходимо определить вложенные последовательности анимации.Начните с компонента верхнего уровня,на котором размещен вид,и вложите дополнительную анимацию в компоненты,на которых размещены встроенные виды.</target>
        </trans-unit>
        <trans-unit id="d9f0032b42360a33f96c2700f66e29a088d29c3e" translate="yes" xml:space="preserve">
          <source>The Angular router passes route parameters differently. Correct the &lt;code&gt;PhoneDetail&lt;/code&gt; component constructor to expect an injected &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; object. Extract the &lt;code&gt;phoneId&lt;/code&gt; from the &lt;code&gt;ActivatedRoute.snapshot.params&lt;/code&gt; and fetch the phone data as before:</source>
          <target state="translated">Маршрутизатор Angular передает параметры маршрута по-разному. Исправьте &lt;code&gt;PhoneDetail&lt;/code&gt; компонента PhoneDetail, ожидая, что внедренный объект &lt;code&gt;&lt;a href=&quot;../api/router/activatedroute&quot;&gt;ActivatedRoute&lt;/a&gt;&lt;/code&gt; . Извлеките &lt;code&gt;phoneId&lt;/code&gt; из &lt;code&gt;ActivatedRoute.snapshot.params&lt;/code&gt; и извлеките данные телефона, как и прежде:</target>
        </trans-unit>
        <trans-unit id="c8b73d6430f433c7da9f2d92333b1bf0785c4de0" translate="yes" xml:space="preserve">
          <source>The Angular router service solves these problems. Using the router, you can declaratively specify application states, manage state transitions while taking care of the URL, and load bundles on demand.</source>
          <target state="translated">Служба углового маршрутизатора решает эти проблемы.С помощью маршрутизатора можно декларативно указывать состояния приложения,управлять переходами состояний при работе с URL,а также загружать пакеты по требованию.</target>
        </trans-unit>
        <trans-unit id="dab83935ff401e86ed6557ca14b267ff0f454743" translate="yes" xml:space="preserve">
          <source>The Angular safe navigation operator, &lt;code&gt;?&lt;/code&gt;, guards against &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; values in property paths. Here, it protects against a view render failure if &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Угловой безопасный оператор навигации &lt;code&gt;?&lt;/code&gt; защищает от &lt;code&gt;null&lt;/code&gt; и &lt;code&gt;undefined&lt;/code&gt; значений в путях свойств. Здесь он защищает от сбоя рендеринга представления, если &lt;code&gt;&lt;a href=&quot;../api/core/iterablechangerecord#item&quot;&gt;item&lt;/a&gt;&lt;/code&gt; равен &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ddc74c782a2050af4c53d84e52e93568c0f322b" translate="yes" xml:space="preserve">
          <source>The Angular safe navigation operator, &lt;code&gt;?&lt;/code&gt;, guards against &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;undefined&lt;/code&gt; values in property paths. Here, it protects against a view render failure if &lt;code&gt;item&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Угловой безопасный оператор навигации &lt;code&gt;?&lt;/code&gt; , защищает от &lt;code&gt;null&lt;/code&gt; и &lt;code&gt;undefined&lt;/code&gt; значений в путях свойств. Здесь он защищает от сбоя рендеринга представления, если &lt;code&gt;item&lt;/code&gt; имеет значение &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7fbe3e7ab9f2d469c6b7858e6a2fd9557c1f66e1" translate="yes" xml:space="preserve">
          <source>The Angular service worker can use either of two caching strategies for data resources.</source>
          <target state="translated">Работник службы Angular может использовать любую из двух стратегий кэширования для ресурсов данных.</target>
        </trans-unit>
        <trans-unit id="628376db8f0ac4a5e89fdb142bdb959ca43ed0a2" translate="yes" xml:space="preserve">
          <source>The Angular service worker exposes debugging information under the &lt;code&gt;ngsw/&lt;/code&gt; virtual directory. Currently, the single exposed URL is &lt;code&gt;ngsw/&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt;. Here is an example of this debug page's contents:</source>
          <target state="translated">Работник службы Angular предоставляет отладочную информацию в &lt;code&gt;ngsw/&lt;/code&gt; virtual. В настоящее время единственным открытым URL является &lt;code&gt;ngsw/&lt;a href=&quot;../api/animations/state&quot;&gt;state&lt;/a&gt;&lt;/code&gt; . Вот пример содержимого этой страницы отладки:</target>
        </trans-unit>
        <trans-unit id="af4ec1fe2fee6a89e95ee555d45246e775d5740e" translate="yes" xml:space="preserve">
          <source>The Angular service worker is a small script that runs in web browsers. From time to time, the service worker will be updated with bug fixes and feature improvements.</source>
          <target state="translated">Работник службы Angular-это небольшой скрипт,который работает в веб-браузерах.Время от времени,работник сервиса будет обновляться с исправлениями ошибок и улучшениями функций.</target>
        </trans-unit>
        <trans-unit id="d3546f707eceba9f99b7dc3c4e5c9394adc9a4c1" translate="yes" xml:space="preserve">
          <source>The Angular service worker is aware of which versions are in use at any given moment and it cleans up versions when no tab is using them.</source>
          <target state="translated">Работник службы Angular знает,какие версии используются в данный момент,и очищает версии,когда ни одна из закладок не использует их.</target>
        </trans-unit>
        <trans-unit id="f2a5f7d21ae9f877f32d7f98ed2d1d923e4614b3" translate="yes" xml:space="preserve">
          <source>The Angular service worker is downloaded when the app is first opened and when the app is accessed after a period of inactivity. If the service worker has changed, the service worker will be updated in the background.</source>
          <target state="translated">Угловой работник сервиса загружается при первом открытии приложения и при обращении к нему после периода бездействия.Если работник сервиса изменился,то он будет обновляться в фоновом режиме.</target>
        </trans-unit>
        <trans-unit id="a252a8e893b6b6b8b10ee8c9b4f3cd02606c9d40" translate="yes" xml:space="preserve">
          <source>The Angular service worker provides a guarantee: a running app will continue to run the same version of the app. If another instance of the app is opened in a new web browser tab, then the most current version of the app is served. As a result, that new tab can be running a different version of the app than the original tab.</source>
          <target state="translated">Работник службы Angular предоставляет гарантию:запущенное приложение будет продолжать работать в той же версии.Если в новой вкладке веб-браузера открывается другой экземпляр приложения,то обслуживается самая последняя версия приложения.В результате на этой новой вкладке может быть запущена другая версия приложения,отличная от первоначальной.</target>
        </trans-unit>
        <trans-unit id="fe402d3476432010b35039b6b27c73a7e145e854" translate="yes" xml:space="preserve">
          <source>The Angular service worker's behavior follows that design goal:</source>
          <target state="translated">Поведение работника службы &quot;Угловой&quot; следует этой цели разработки:</target>
        </trans-unit>
        <trans-unit id="35fb47a111d3bbf54cae3962bd6417ce1c2ad683" translate="yes" xml:space="preserve">
          <source>The Angular team and many experienced Angular developers strongly recommend moving filtering and sorting logic into the component itself. The component can expose a &lt;code&gt;filteredHeroes&lt;/code&gt; or &lt;code&gt;sortedHeroes&lt;/code&gt; property and take control over when and how often to execute the supporting logic. Any capabilities that you would have put in a pipe and shared across the app can be written in a filtering/sorting service and injected into the component.</source>
          <target state="translated">Команда Angular и многие опытные разработчики Angular настоятельно рекомендуют перенести логику фильтрации и сортировки в сам компонент. Компонент может подвергнуть &lt;code&gt;filteredHeroes&lt;/code&gt; или &lt;code&gt;sortedHeroes&lt;/code&gt; собственность и взять под свой контроль над тем, когда и как часто выполнять вспомогательную логику. Любые возможности, которые вы бы поместили в канал и использовали в приложении, можно записать в службу фильтрации / сортировки и внедрить в компонент.</target>
        </trans-unit>
        <trans-unit id="afddc4c461f42ac8c8b97eba88b298533d0bfa2c" translate="yes" xml:space="preserve">
          <source>The Angular team has worked hard to ensure Ivy is as backwards-compatible with the previous rendering engine (&quot;View Engine&quot;) as possible. However, in rare cases, minor changes were necessary to ensure that the Angular's behavior was predictable and consistent, correcting issues in the View Engine implementation. In order to smooth the transition, we have provided automated migrations wherever possible so your application and library code is migrated automatically by the CLI. That said, some applications will likely need to apply some manual updates.</source>
          <target state="translated">Команда Angular усердно работала над тем,чтобы обеспечить максимально возможную обратную совместимость Ivy с предыдущим движком рендеринга (&quot;View Engine&quot;).Однако,в редких случаях были необходимы незначительные изменения,чтобы гарантировать предсказуемость и последовательность поведения Angular,исправляя проблемы в реализации View Engine.Для того,чтобы сгладить переход,мы предусмотрели автоматические миграции там,где это было возможно,чтобы код вашего приложения и библиотеки мигрировал автоматически через CLI.Тем не менее,некоторые приложения,скорее всего,будут нуждаться в ручных обновлениях.</target>
        </trans-unit>
        <trans-unit id="caca85786341f11cf0a7293e6415cac816f540c6" translate="yes" xml:space="preserve">
          <source>The Angular template expression language employs a subset of JavaScript syntax supplemented with a few special operators for specific scenarios. The next sections cover three of these operators:</source>
          <target state="translated">Язык выражения угловых шаблонов использует подмножество синтаксиса JavaScript,дополненное несколькими специальными операторами для конкретных сценариев.Следующие разделы посвящены трем из этих операторов:</target>
        </trans-unit>
        <trans-unit id="cbe6f2f94a12a95461a34df7f7964259a25e067b" translate="yes" xml:space="preserve">
          <source>The Angular testing utilities include the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt;&lt;/code&gt;, and a handful of functions that control the test environment. The &lt;a href=&quot;testing#testbed-api-summary&quot;&gt;&lt;em&gt;TestBed&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;testing#component-fixture-api-summary&quot;&gt;&lt;em&gt;ComponentFixture&lt;/em&gt;&lt;/a&gt; classes are covered separately.</source>
          <target state="translated">Утилиты Angular для тестирования включают &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt;&lt;/code&gt; и несколько функций, которые контролируют среду тестирования. В &lt;a href=&quot;testing#testbed-api-summary&quot;&gt;&lt;em&gt;Testbed&lt;/em&gt;&lt;/a&gt; и &lt;a href=&quot;testing#component-fixture-api-summary&quot;&gt;&lt;em&gt;ComponentFixture&lt;/em&gt;&lt;/a&gt; классы покрыты отдельно.</target>
        </trans-unit>
        <trans-unit id="0f47a7ce39ae098185a294fd9d6afdc9374f5cc2" translate="yes" xml:space="preserve">
          <source>The Angular testing utilities include the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt;&lt;/code&gt;, and a handful of functions that control the test environment. The &lt;a href=&quot;testing-utility-apis#testbed-api-summary&quot;&gt;&lt;em&gt;TestBed&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;testing-utility-apis#component-fixture-api-summary&quot;&gt;&lt;em&gt;ComponentFixture&lt;/em&gt;&lt;/a&gt; classes are covered separately.</source>
          <target state="translated">Утилиты тестирования Angular включают &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture&quot;&gt;ComponentFixture&lt;/a&gt;&lt;/code&gt; и несколько функций, управляющих тестовой средой. В &lt;a href=&quot;testing-utility-apis#testbed-api-summary&quot;&gt;&lt;em&gt;Testbed&lt;/em&gt;&lt;/a&gt; и &lt;a href=&quot;testing-utility-apis#component-fixture-api-summary&quot;&gt;&lt;em&gt;ComponentFixture&lt;/em&gt;&lt;/a&gt; классы покрыты отдельно.</target>
        </trans-unit>
        <trans-unit id="00e6647d8c4f5f646f29b66e47261762ef67b7c3" translate="yes" xml:space="preserve">
          <source>The Angular workspace where the user has installed your library contains multiple projects (applications and libraries). The user can specify the project on the command line, or allow it to default. In either case, your code needs to identify the specific project to which this schematic is being applied, so that you can retrieve information from the project configuration.</source>
          <target state="translated">Угловая рабочая область,в которой пользователь установил вашу библиотеку,содержит множество проектов (приложений и библиотек).Пользователь может указать проект в командной строке или разрешить его установку по умолчанию.В любом случае,ваш код должен идентифицировать конкретный проект,к которому применяется эта схема,чтобы вы могли получить информацию из конфигурации проекта.</target>
        </trans-unit>
        <trans-unit id="37b60b160b483ff496036f979d0455b028438655" translate="yes" xml:space="preserve">
          <source>The AngularJS &lt;code&gt;$injector&lt;/code&gt; for the upgrade application.</source>
          <target state="translated">&lt;code&gt;$injector&lt;/code&gt; AngularJS $ для приложения обновления.</target>
        </trans-unit>
        <trans-unit id="6d5315ae95f5757a73971de6b5edb7c0835d0995" translate="yes" xml:space="preserve">
          <source>The AngularJS &lt;code&gt;&lt;a href=&quot;upgrademodule#%24injector&quot;&gt;$injector&lt;/a&gt;&lt;/code&gt; for the upgrade application.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;upgrademodule#%24injector&quot;&gt;$injector&lt;/a&gt;&lt;/code&gt; AngularJS $ для приложения обновления.</target>
        </trans-unit>
        <trans-unit id="423653fbea2bc7af48c7bd9f46190694e996131f" translate="yes" xml:space="preserve">
          <source>The AngularJS directive had a &lt;code&gt;checkmark&lt;/code&gt;&lt;em&gt;filter&lt;/em&gt;. Turn that into an Angular &lt;strong&gt;pipe&lt;/strong&gt;.</source>
          <target state="translated">Директива AngularJS имеет &lt;em&gt;фильтр &lt;/em&gt; &lt;code&gt;checkmark&lt;/code&gt; . Преврати это в угловую &lt;strong&gt;трубу&lt;/strong&gt; .&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af1fbf592b50c90c013c4592c8797fd707e0871b" translate="yes" xml:space="preserve">
          <source>The AngularJS injector has an AngularJS router dependency called &lt;code&gt;$routeParams&lt;/code&gt;, which was injected into &lt;code&gt;PhoneDetails&lt;/code&gt; when it was still an AngularJS controller. You intend to inject it into the new &lt;code&gt;PhoneDetailsComponent&lt;/code&gt;.</source>
          <target state="translated">Инжектор AngularJS имеет зависимость от маршрутизатора AngularJS, называемую &lt;code&gt;$routeParams&lt;/code&gt; , которая была &lt;code&gt;PhoneDetails&lt;/code&gt; в PhoneDetails, когда он еще был контроллером AngularJS. Вы намереваетесь &lt;code&gt;PhoneDetailsComponent&lt;/code&gt; его в новый PhoneDetailsComponent .</target>
        </trans-unit>
        <trans-unit id="5d426c6e68e95c3032932fd384898742c4cdf7d7" translate="yes" xml:space="preserve">
          <source>The AoT compiler does not support tagged template expressions; avoid them in metadata expressions.</source>
          <target state="translated">Компилятор AoT не поддерживает шаблонные выражения с метками;избегайте их в выражениях метаданных.</target>
        </trans-unit>
        <trans-unit id="319355695648b782b2ef8282fd1ba6b0fb5992ad" translate="yes" xml:space="preserve">
          <source>The Application Shell</source>
          <target state="translated">Оболочка приложения</target>
        </trans-unit>
        <trans-unit id="07d707d654b9db1b392eb58df6d0436c1594d090" translate="yes" xml:space="preserve">
          <source>The Architect target to run.</source>
          <target state="translated">Цель Архитектора-бежать.</target>
        </trans-unit>
        <trans-unit id="e4be9c76b0e4b71fda293faca97b9a6d8c0bdc15" translate="yes" xml:space="preserve">
          <source>The Architect tool provides a set of builders. The &lt;a href=&quot;cli/new&quot;&gt;&lt;code&gt;ng new&lt;/code&gt; command&lt;/a&gt; provides a set of targets for the initial application project. The &lt;a href=&quot;cli/generate#application&quot;&gt;&lt;code&gt;ng generate application&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cli/generate#library&quot;&gt;&lt;code&gt;ng generate library&lt;/code&gt;&lt;/a&gt; commands provide a set of targets for each new &lt;a href=&quot;glossary#project&quot;&gt;project&lt;/a&gt;. These targets, their options and configurations, can be customized to meet the needs of your project. For example, you may want to add a &quot;staging&quot; or &quot;testing&quot; configuration to a project's &quot;build&quot; target.</source>
          <target state="translated">Инструмент Архитектор предоставляет набор строителей. &lt;a href=&quot;cli/new&quot;&gt; &lt;code&gt;ng new&lt;/code&gt; команда&lt;/a&gt; обеспечивает набор задач для первоначального проекта приложения. &lt;a href=&quot;cli/generate#application&quot;&gt; &lt;code&gt;ng generate application&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;cli/generate#library&quot;&gt; &lt;code&gt;ng generate library&lt;/code&gt; &lt;/a&gt; команды обеспечивают набор задач для каждого нового &lt;a href=&quot;glossary#project&quot;&gt;проекта&lt;/a&gt; . Эти цели, их параметры и конфигурации могут быть настроены в соответствии с потребностями вашего проекта. Например, вы можете добавить &amp;laquo;промежуточную&amp;raquo; или &amp;laquo;тестовую&amp;raquo; конфигурацию к цели &amp;laquo;сборки&amp;raquo; проекта.</target>
        </trans-unit>
        <trans-unit id="98622091c7e082d28fb1d1aee12f2d15a684fd7e" translate="yes" xml:space="preserve">
          <source>The Async pipe saves boilerplate in the component code. The component doesn't have to subscribe to the async data source, extract the resolved values and expose them for binding, and have to unsubscribe when it's destroyed (a potent source of memory leaks).</source>
          <target state="translated">Труба Async сохраняет шаблон в коде компонента.Компонент не должен подписываться на источник асинхронных данных,извлекать разрешенные значения и выставлять их для привязки,а также должен отписываться,когда он уничтожен (мощный источник утечки памяти).</target>
        </trans-unit>
        <trans-unit id="a093f7952b1838c4dd6aeda28ea5e1fc38030960" translate="yes" xml:space="preserve">
          <source>The Basics</source>
          <target state="translated">Основы</target>
        </trans-unit>
        <trans-unit id="d038565a16aac226bd4ac01c0d0edf10f676271a" translate="yes" xml:space="preserve">
          <source>The Boolean expression to evaluate as the condition for showing a template.</source>
          <target state="translated">Булевое выражение для оценки в качестве условия отображения шаблона.</target>
        </trans-unit>
        <trans-unit id="b00950b6c88ca36515aea3fda70a4337ec7e16d4" translate="yes" xml:space="preserve">
          <source>The Browserslist configuration allows you to ignore browsers without ES2015 support. In this case, a single build is produced.</source>
          <target state="translated">Настройка списка браузеров позволяет игнорировать браузеры без поддержки ES2015.В этом случае создается одна сборка.</target>
        </trans-unit>
        <trans-unit id="d7567b31beb9558ff7dba046ce91751f2b441018" translate="yes" xml:space="preserve">
          <source>The Browserslist configuration file is included in your application &lt;a href=&quot;file-structure#application-configuration-files&quot;&gt;project structure&lt;/a&gt; and provides the minimum browsers your application supports. See the &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;Browserslist spec&lt;/a&gt; for complete configuration options.</source>
          <target state="translated">Файл конфигурации Browserslist включен в &lt;a href=&quot;file-structure#application-configuration-files&quot;&gt;структуру проекта&lt;/a&gt; вашего приложения и предоставляет минимальный набор браузеров, поддерживаемых вашим приложением. См. &lt;a href=&quot;https://github.com/browserslist/browserslist&quot;&gt;Спецификацию Browserslist&lt;/a&gt; для получения полной информации о параметрах конфигурации.</target>
        </trans-unit>
        <trans-unit id="a8e793e92efbd3bfda3b03dee3bd1b71b6e869ea" translate="yes" xml:space="preserve">
          <source>The CLI &lt;code&gt;build&lt;/code&gt; command uses a different builder and invokes a different build tool for libraries than it does for applications.</source>
          <target state="translated">Команда &lt;code&gt;build&lt;/code&gt; CLI использует другой компоновщик и вызывает другой инструмент компоновки для библиотек, чем для приложений.</target>
        </trans-unit>
        <trans-unit id="cefa3504277e4ce69bb8bd444d4e3b698be704b2" translate="yes" xml:space="preserve">
          <source>The CLI Builder API includes progress and status reporting tools, which can provide hints for certain functions and interfaces.</source>
          <target state="translated">API CLI Builder включает в себя инструменты отчетности о прогрессе и состоянии,которые могут предоставлять подсказки для определенных функций и интерфейсов.</target>
        </trans-unit>
        <trans-unit id="a227bf9384f47a8e8130c6145e670165e7b6db89" translate="yes" xml:space="preserve">
          <source>The CLI Builder API provides a new way of changing the behavior of the Angular CLI by using builders to execute custom logic.</source>
          <target state="translated">CLI Builder API предоставляет новый способ изменения поведения Углового CLI с помощью конструкторов для выполнения пользовательской логики.</target>
        </trans-unit>
        <trans-unit id="497aad274b240601c7f91912c8f56b2c07944aa0" translate="yes" xml:space="preserve">
          <source>The CLI also adds &lt;code&gt;RouterModule.forChild(routes)&lt;/code&gt; to feature routing modules. This way, Angular knows that the route list is only responsible for providing additional routes and is intended for feature modules. You can use &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; in multiple modules.</source>
          <target state="translated">CLI также добавляет &lt;code&gt;RouterModule.forChild(routes)&lt;/code&gt; к функциональным модулям маршрутизации. Таким образом, Angular знает, что список маршрутов отвечает только за предоставление дополнительных маршрутов и предназначен для функциональных модулей. Вы можете использовать &lt;code&gt;&lt;a href=&quot;../api/router/routermodule#forChild&quot;&gt;forChild()&lt;/a&gt;&lt;/code&gt; в нескольких модулях.</target>
        </trans-unit>
        <trans-unit id="e003e455d02dc123a8ac974ae7c477f9d1f63b09" translate="yes" xml:space="preserve">
          <source>The CLI also adds &lt;code&gt;RouterModule.forChild(routes)&lt;/code&gt; to feature routing modules. This way, Angular knows that the route list is only responsible for providing additional routes and is intended for feature modules. You can use &lt;code&gt;forChild()&lt;/code&gt; in multiple modules.</source>
          <target state="translated">Интерфейс командной строки также добавляет &lt;code&gt;RouterModule.forChild(routes)&lt;/code&gt; к модулям маршрутизации функций. Таким образом, Angular знает, что список маршрутов отвечает только за предоставление дополнительных маршрутов и предназначен для функциональных модулей. Вы можете использовать &lt;code&gt;forChild()&lt;/code&gt; в нескольких модулях.</target>
        </trans-unit>
        <trans-unit id="8fc535c7f2308b068ad4b9779b7f1680bc5ff6a5" translate="yes" xml:space="preserve">
          <source>The CLI automatically added each feature module to the routes map at the application level. Finish this off by adding the default route. In &lt;code&gt;AppRoutingModule&lt;/code&gt;, update the &lt;code&gt;routes&lt;/code&gt; array with the following:</source>
          <target state="translated">CLI автоматически добавляет каждый функциональный модуль в карту маршрутов на уровне приложения. Завершите это, добавив маршрут по умолчанию. В &lt;code&gt;AppRoutingModule&lt;/code&gt; обновите массив &lt;code&gt;routes&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="4d4a19df84ae241a7d6d36271e33ebbc2de83a13" translate="yes" xml:space="preserve">
          <source>The CLI automatically added each feature module to the routes map at the application level. Finish this off by adding the default route. In the &lt;code&gt;app-routing.module.ts&lt;/code&gt; file, update the &lt;code&gt;routes&lt;/code&gt; array with the following:</source>
          <target state="translated">Интерфейс командной строки автоматически добавил каждый функциональный модуль в карту маршрутов на уровне приложения. Завершите это, добавив маршрут по умолчанию. В файле &lt;code&gt;app-routing.module.ts&lt;/code&gt; обновите массив &lt;code&gt;routes&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="40e4396ee6ff6f7efc8d22f8aab7c357291cb2d8" translate="yes" xml:space="preserve">
          <source>The CLI automatically appends &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt;, so if you were to write &lt;code&gt;first-component&lt;/code&gt;, your component would be &lt;code&gt;FirstComponentComponent&lt;/code&gt;.</source>
          <target state="translated">Интерфейс командной строки автоматически добавляет &lt;code&gt;&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; , поэтому, если вы пишете &lt;code&gt;first-component&lt;/code&gt; , вашим компонентом будет &lt;code&gt;FirstComponentComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9e89170bf76b307b4155c5c76bc1a7193e2cfc09" translate="yes" xml:space="preserve">
          <source>The CLI build process runs the pertinent CSS preprocessor.</source>
          <target state="translated">Процесс сборки CLI запускает соответствующий препроцессор CSS.</target>
        </trans-unit>
        <trans-unit id="ec9a848601bcc0ff8bb0d93ca86877e1c801c9a0" translate="yes" xml:space="preserve">
          <source>The CLI can run unit tests and create code coverage reports. Code coverage reports show you any parts of our code base that may not be properly tested by your unit tests.</source>
          <target state="translated">CLI может запускать юнит-тесты и создавать отчеты о покрытии кода.Отчеты о покрытии кода показывают любые части нашей кодовой базы,которые могут быть неправильно протестированы вашими модульными тестами.</target>
        </trans-unit>
        <trans-unit id="09ef963a966d76d23f313b59169f46873874e2f7" translate="yes" xml:space="preserve">
          <source>The CLI can run unit tests and create code coverage reports. Code coverage reports show you any parts of your code base that may not be properly tested by your unit tests.</source>
          <target state="translated">CLI может запускать юнит-тесты и создавать отчеты о покрытии кода.Отчеты о покрытии кода показывают любые части вашей кодовой базы,которые могут быть неправильно протестированы вашими модульными тестами.</target>
        </trans-unit>
        <trans-unit id="cde5e1cc27e1ba5721adcfdbc19a938b7153a4a7" translate="yes" xml:space="preserve">
          <source>The CLI command &lt;code&gt;ng new&lt;/code&gt; creates a &lt;code&gt;package.json&lt;/code&gt; file when it creates the new workspace. This &lt;code&gt;package.json&lt;/code&gt; is used by all projects in the workspace, including the initial app project that is created by the CLI when it creates the workspace.</source>
          <target state="translated">Команда CLI &lt;code&gt;ng new&lt;/code&gt; создает файл &lt;code&gt;package.json&lt;/code&gt; при создании нового рабочего пространства. Этот &lt;code&gt;package.json&lt;/code&gt; используется всеми проектами в рабочей области, включая первоначальный проект приложения, который создается CLI при создании рабочей области.</target>
        </trans-unit>
        <trans-unit id="107cf47d31ef2dc53110f777a2ab23d698cd86c8" translate="yes" xml:space="preserve">
          <source>The CLI creates &lt;code&gt;src/app/highlight.directive.ts&lt;/code&gt;, a corresponding test file &lt;code&gt;src/app/highlight.directive.spec.ts&lt;/code&gt;, and &lt;em&gt;declares&lt;/em&gt; the directive class in the root &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">CLI создает &lt;code&gt;src/app/highlight.directive.ts&lt;/code&gt; , соответствующий тестовый файл &lt;code&gt;src/app/highlight.directive.spec.ts&lt;/code&gt; , и &lt;em&gt;объявляет&lt;/em&gt; класс директивы в корневом &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="43f97c1cdef4a721c1e2980898de65659eac4823" translate="yes" xml:space="preserve">
          <source>The CLI creates a new folder, &lt;code&gt;src/app/heroes/&lt;/code&gt;, and generates the three files of the &lt;code&gt;HeroesComponent&lt;/code&gt; along with a test file.</source>
          <target state="translated">CLI создает новую папку &lt;code&gt;src/app/heroes/&lt;/code&gt; и генерирует три файла &lt;code&gt;HeroesComponent&lt;/code&gt; вместе с тестовым файлом.</target>
        </trans-unit>
        <trans-unit id="562195fe3077662b5420503e57124701828dc0ad" translate="yes" xml:space="preserve">
          <source>The CLI creates a new workspace and a simple Welcome app, ready to run.</source>
          <target state="translated">CLI создает новое рабочее пространство и простое приветственное приложение,готовое к запуску.</target>
        </trans-unit>
        <trans-unit id="c76b8649bdc58625eb3fdf9b951e9796dccced1c" translate="yes" xml:space="preserve">
          <source>The CLI creates an initial test file for you by default when you ask it to generate a new component.</source>
          <target state="translated">По умолчанию CLI создает для вас файл начального теста,когда вы просите его сгенерировать новый компонент.</target>
        </trans-unit>
        <trans-unit id="b481cc4f2e36d975cb69b55ee8a2ea791c24d3e5" translate="yes" xml:space="preserve">
          <source>The CLI creates the component files in the &lt;code&gt;src/app/&lt;a href=&quot;../api/service-worker/swpush#messages&quot;&gt;messages&lt;/a&gt;&lt;/code&gt; folder and declares the &lt;code&gt;MessagesComponent&lt;/code&gt; in &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">CLI создает файлы компонентов в папке &lt;code&gt;src/app/&lt;a href=&quot;../api/service-worker/swpush#messages&quot;&gt;messages&lt;/a&gt;&lt;/code&gt; и объявляет &lt;code&gt;AppModule&lt;/code&gt; &lt;code&gt;MessagesComponent&lt;/code&gt; в AppModule .</target>
        </trans-unit>
        <trans-unit id="f634da899e07e330e3945989266198f9dd7248a3" translate="yes" xml:space="preserve">
          <source>The CLI creates the component files in the &lt;code&gt;src/app/messages&lt;/code&gt; folder and declares the &lt;code&gt;MessagesComponent&lt;/code&gt; in &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">Интерфейс командной строки создает файлы компонентов в папке &lt;code&gt;src/app/messages&lt;/code&gt; и объявляет &lt;code&gt;MessagesComponent&lt;/code&gt; в &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c2fe0f772eeb3a795c33f5730abf4513989e1ce6" translate="yes" xml:space="preserve">
          <source>The CLI does not support running Angular itself in a web worker.</source>
          <target state="translated">CLI не поддерживает запуск самой программы Angular в веб-работнике.</target>
        </trans-unit>
        <trans-unit id="d7552e6edb702636aac502cd8cfd91bc772afa18" translate="yes" xml:space="preserve">
          <source>The CLI generated a test file for the &lt;code&gt;AppComponent&lt;/code&gt; named &lt;code&gt;app.component.spec.ts&lt;/code&gt;.</source>
          <target state="translated">CLI сгенерировал тестовый файл для &lt;code&gt;AppComponent&lt;/code&gt; с именем &lt;code&gt;app.component.spec.ts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c07dc10a94742c4bb5a9957fc3001dbe354c0f3e" translate="yes" xml:space="preserve">
          <source>The CLI generated three metadata properties:</source>
          <target state="translated">CLI сгенерировал три свойства метаданных:</target>
        </trans-unit>
        <trans-unit id="e487350ab467b6173a436d5d4ae9f4ad9e39868c" translate="yes" xml:space="preserve">
          <source>The CLI generates the files for the &lt;code&gt;DashboardComponent&lt;/code&gt; and declares it in &lt;code&gt;AppModule&lt;/code&gt;.</source>
          <target state="translated">CLI генерирует файлы для &lt;code&gt;DashboardComponent&lt;/code&gt; и объявляет его в &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f2fb1c8beb04af8f237714937dc1863d998eb460" translate="yes" xml:space="preserve">
          <source>The CLI generates the three &lt;code&gt;HeroSearchComponent&lt;/code&gt; files and adds the component to the &lt;code&gt;AppModule&lt;/code&gt; declarations.</source>
          <target state="translated">CLI генерирует три файла &lt;code&gt;HeroSearchComponent&lt;/code&gt; и добавляет компонент в объявления &lt;code&gt;AppModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="447927c37568dec9cf9cbd281c45494d91a9a56c" translate="yes" xml:space="preserve">
          <source>The CLI loads and registers the locale data, places each generated version in a locale-specific directory to keep it separate from other locale versions, and puts the directories within the configured &lt;code&gt;outputPath&lt;/code&gt; for the project. For each application variant the &lt;code&gt;lang&lt;/code&gt; attribute of the &lt;code&gt;html&lt;/code&gt; element is set to the locale. The CLI also adjusts the HTML base HREF for each version of the app by adding the locale to the configured &lt;code&gt;baseHref&lt;/code&gt;.</source>
          <target state="translated">Интерфейс командной строки загружает и регистрирует данные языкового стандарта, помещает каждую сгенерированную версию в каталог для конкретного языкового стандарта, чтобы отделить его от других версий языкового стандарта, и помещает каталоги в настроенный &lt;code&gt;outputPath&lt;/code&gt; для проекта. Для каждого варианта приложения атрибут &lt;code&gt;lang&lt;/code&gt; элемента &lt;code&gt;html&lt;/code&gt; устанавливается на локаль. Интерфейс командной строки также настраивает HREF базы HTML для каждой версии приложения, добавляя языковой стандарт к настроенному &lt;code&gt;baseHref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0a865953b65c01bef1508b821a18a24c3ddf118b" translate="yes" xml:space="preserve">
          <source>The CLI project is now set up to use the Angular service worker.</source>
          <target state="translated">Теперь проект CLI настроен на использование работника службы Angular.</target>
        </trans-unit>
        <trans-unit id="a5d9a740a1ce9aabea72ad09bde9b5b2a4edf30b" translate="yes" xml:space="preserve">
          <source>The CLI queries the Browserslist configuration, and checks the &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; to determine if support for legacy browsers is required. The combination of these two configurations determines whether multiple bundles are produced when you create a &lt;em&gt;build&lt;/em&gt;. When you create a development build using &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt; and differential loading is enabled, the output produced is simpler and easier to debug, allowing you to rely less on sourcemaps of compiled code. When you create a production build using &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build --prod&lt;/code&gt;&lt;/a&gt;, the CLI uses the defined configurations above to determine the bundles to build for deployment of your application.</source>
          <target state="translated">CLI запрашивает конфигурацию списка обозревателей и проверяет &lt;code&gt;&lt;a href=&quot;../api/router/routerlinkwithhref#target&quot;&gt;target&lt;/a&gt;&lt;/code&gt; чтобы определить, требуется ли поддержка устаревших браузеров. Сочетание этих двух конфигураций определяет, будут ли созданы несколько пакетов при создании &lt;em&gt;сборки&lt;/em&gt; . Когда вы создаете сборку разработки с использованием &lt;a href=&quot;cli/build&quot;&gt; &lt;code&gt;ng build&lt;/code&gt; &lt;/a&gt; и включена дифференциальная загрузка, полученный вывод становится проще и легче отлаживается, что позволяет вам меньше полагаться на исходные карты скомпилированного кода. Когда вы создаете производственную сборку с помощью &lt;a href=&quot;cli/build&quot;&gt; &lt;code&gt;ng build --prod&lt;/code&gt; &lt;/a&gt; , интерфейс командной строки использует определенные выше конфигурации, чтобы определить пакеты, которые нужно собрать для развертывания вашего приложения.</target>
        </trans-unit>
        <trans-unit id="9ab80ceb4180fea29dd3ed369dd71b4e773daaf8" translate="yes" xml:space="preserve">
          <source>The CLI runs the &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/%40ngtools/webpack&quot;&gt;Angular Ahead-of-Time Webpack Plugin&lt;/a&gt; which automatically recognizes lazy-loaded &lt;code&gt;NgModules&lt;/code&gt; and creates separate bundles for them.</source>
          <target state="translated">CLI запускает &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/%40ngtools/webpack&quot;&gt;плагин Angular Ahead-of-Time Webpack,&lt;/a&gt; который автоматически распознает лениво загруженные &lt;code&gt;NgModules&lt;/code&gt; и создает для них отдельные пакеты.</target>
        </trans-unit>
        <trans-unit id="9f77f83623d98ca08196d70d7b704bf6aab56a56" translate="yes" xml:space="preserve">
          <source>The CLI runs the &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/ngtools/webpack&quot;&gt;Angular Ahead-of-Time Webpack Plugin&lt;/a&gt; which automatically recognizes lazy-loaded &lt;code&gt;NgModules&lt;/code&gt; and creates separate bundles for them.</source>
          <target state="translated">Интерфейс командной строки запускает &lt;code&gt;NgModules&lt;/code&gt; &lt;a href=&quot;https://github.com/angular/angular-cli/tree/master/packages/ngtools/webpack&quot;&gt;Angular Ahead-of-Time Webpack,&lt;/a&gt; который автоматически распознает ленивые модули NgModules и создает для них отдельные пакеты.</target>
        </trans-unit>
        <trans-unit id="5525140bd0a8e5581222783db91519ae612bd0be" translate="yes" xml:space="preserve">
          <source>The CLI takes care of Jasmine and Karma configuration for you.</source>
          <target state="translated">CLI позаботится о конфигурации Жасмин и Карма для вас.</target>
        </trans-unit>
        <trans-unit id="f3acaf66dda92c0d17299abf2258305e56011531" translate="yes" xml:space="preserve">
          <source>The CLI uses &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;Autoprefixer&lt;/a&gt; to ensure compatibility with different browser and browser versions. You may find it necessary to target specific browsers or exclude certain browser versions from your build.</source>
          <target state="translated">CLI использует &lt;a href=&quot;https://github.com/postcss/autoprefixer&quot;&gt;Autoprefixer&lt;/a&gt; для обеспечения совместимости с различными версиями браузера и браузера. Вы можете счесть необходимым нацелиться на определенные браузеры или исключить определенные версии браузеров из вашей сборки.</target>
        </trans-unit>
        <trans-unit id="9a0e6928ac9fe75ef6b546726ef4323cbed6b649" translate="yes" xml:space="preserve">
          <source>The CSS &lt;code&gt;selector&lt;/code&gt; in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; decorator specifies an element named &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt;. That element is a placeholder in the body of your &lt;code&gt;index.html&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;selector&lt;/code&gt; CSS в декораторе &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; указывает элемент с именем &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; . Этот элемент является заполнителем в теле вашего файла &lt;code&gt;index.html&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="740e3c1cdea94a0c07c6e845612438b44c70c7e2" translate="yes" xml:space="preserve">
          <source>The CSS classes are updated as follows, depending on the type of the expression evaluation:</source>
          <target state="translated">Классы CSS обновляются следующим образом,в зависимости от типа оценки выражения:</target>
        </trans-unit>
        <trans-unit id="e54eff89405ec8c10d6f19133fc3bf85e640c99e" translate="yes" xml:space="preserve">
          <source>The CSS selector for this query.</source>
          <target state="translated">Селектор CSS для этого запроса.</target>
        </trans-unit>
        <trans-unit id="6c7f73c45ff8c0130785cd941b19dfcbde5b8c0e" translate="yes" xml:space="preserve">
          <source>The CSS selector that identifies this directive in a template and triggers instantiation of the directive.</source>
          <target state="translated">Селектор CSS,который идентифицирует эту директиву в шаблоне и запускает инстанцирование директивы.</target>
        </trans-unit>
        <trans-unit id="9bfcb014ac0d0ab03137c5b7b21ee99ad5558efe" translate="yes" xml:space="preserve">
          <source>The CSS styles associated with this state.</source>
          <target state="translated">CSS-стили,связанные с этим состоянием.</target>
        </trans-unit>
        <trans-unit id="46f17cd8fea6f967e28bec5eeaa4def431c17955" translate="yes" xml:space="preserve">
          <source>The ChangeDetectorRef for the component</source>
          <target state="translated">ChangeDetectorRef для компонента</target>
        </trans-unit>
        <trans-unit id="ca1d76d56eaeb3857a3b30c857a59305b798ada4" translate="yes" xml:space="preserve">
          <source>The ComponentFactoryResolver to get hold of the ComponentFactories declared in the &lt;code&gt;entryComponents&lt;/code&gt; property of the module.</source>
          <target state="translated">ComponentFactoryResolver для получения &lt;code&gt;entryComponents&lt;/code&gt; к ComponentFactories, объявленным в свойстве entryComponents модуля.</target>
        </trans-unit>
        <trans-unit id="719c39204c291cea2ecbc86a653ba0b9ba5cac48" translate="yes" xml:space="preserve">
          <source>The DI framework lets you supply data to a component from an injectable &lt;em&gt;service&lt;/em&gt; class, defined in its own file. To demonstrate, we'll create an injectable service class that provides a list of heroes, and register that class as a provider of that service.</source>
          <target state="translated">Инфраструктура DI позволяет предоставлять данные компоненту из класса &lt;em&gt;обслуживания&lt;/em&gt; , который можно добавить в отдельный файл. Чтобы продемонстрировать, мы создадим класс службы для инъекций, который предоставляет список героев, и зарегистрируем этот класс в качестве поставщика этой службы.</target>
        </trans-unit>
        <trans-unit id="a6e4d23b100081f1b4bf84813996800b7b7e0b03" translate="yes" xml:space="preserve">
          <source>The DI token for setting the initial config for the platform.</source>
          <target state="translated">DI-токен для установки начальной конфигурации платформы.</target>
        </trans-unit>
        <trans-unit id="9993b1eeb40876035f00bb4ad779bd1d89bff72d" translate="yes" xml:space="preserve">
          <source>The DOM attributes are parsed by the framework that owns the current template. So attributes in AngularJS templates must use kebab-case, while AngularJS templates must use camelCase.</source>
          <target state="translated">Атрибуты DOM анализируются фреймворком,которому принадлежит текущий шаблон.Поэтому атрибуты в шаблонах AngularJS должны использовать клавишный регистр,в то время как шаблоны AngularJS должны использовать верблюжий кейс.</target>
        </trans-unit>
        <trans-unit id="40aba8e91dedb65b6b75ee94b6c800ec39ec06a8" translate="yes" xml:space="preserve">
          <source>The DOM element &lt;code&gt;&amp;lt;a-component&amp;gt;&lt;/code&gt; will remain to be an AngularJS managed element, because it's defined in an AngularJS template. That also means you can apply additional AngularJS directives to it, but &lt;em&gt;not&lt;/em&gt; Angular directives. It is only in the template of the &lt;code&gt;&amp;lt;a-component&amp;gt;&lt;/code&gt; where Angular steps in. This same rule also applies when you use AngularJS component directives from Angular.</source>
          <target state="translated">Элемент DOM &lt;code&gt;&amp;lt;a-component&amp;gt;&lt;/code&gt; останется управляемым элементом AngularJS, поскольку он определен в шаблоне AngularJS. Это также означает, что вы можете применять к нему дополнительные директивы AngularJS, но &lt;em&gt;не&lt;/em&gt; директивы Angular. Это только в шаблоне &lt;code&gt;&amp;lt;a-component&amp;gt;&lt;/code&gt; , куда входит Angular. Это же правило также применяется при использовании директив AngularJS для компонентов из Angular.</target>
        </trans-unit>
        <trans-unit id="ef37725e8017d864dbbc0ce41db1775b05a49609" translate="yes" xml:space="preserve">
          <source>The DOM element to which to attach the animation.</source>
          <target state="translated">Элемент DOM,к которому нужно прикрепить анимацию.</target>
        </trans-unit>
        <trans-unit id="88ce3ced1c7d105ca467fac76be3733534705ffd" translate="yes" xml:space="preserve">
          <source>The DOM element.</source>
          <target state="translated">Элемент DOM.</target>
        </trans-unit>
        <trans-unit id="d5b6648ab37ea69fa6db16f13fe369e9e3c17dd2" translate="yes" xml:space="preserve">
          <source>The DOM event to listen for.</source>
          <target state="translated">Мероприятие DOM для прослушивания.</target>
        </trans-unit>
        <trans-unit id="6928a76a137e5a6aa8b409d1e1866c18fe4c109d" translate="yes" xml:space="preserve">
          <source>The DOM property that is bound to a data property.</source>
          <target state="translated">Свойство DOM,привязанное к свойству данных.</target>
        </trans-unit>
        <trans-unit id="fed37b463aa73566258c88f3425a4af03786431a" translate="yes" xml:space="preserve">
          <source>The DebugElement associated with the root element of this component.</source>
          <target state="translated">DebugElement,связанный с корневым элементом этого компонента.</target>
        </trans-unit>
        <trans-unit id="698531beda7f91ea6b29506a74d0b3e9ca30258a" translate="yes" xml:space="preserve">
          <source>The ElementRef for the element at the root of the component.</source>
          <target state="translated">ElementRef для элемента в корне компонента.</target>
        </trans-unit>
        <trans-unit id="0366d0d0ffb1591153e2e01125018d2c703fc4c6" translate="yes" xml:space="preserve">
          <source>The Filter/Stagger tab in the live example shows a list of heroes with an introductory sequence. The entire list of heroes cascades in, with a slight delay from top to bottom.</source>
          <target state="translated">На вкладке &quot;Фильтр/загрузка&quot; в живом примере показан список героев с вводной последовательностью.Весь список героев каскадируется,с небольшой задержкой сверху вниз.</target>
        </trans-unit>
        <trans-unit id="1ca923870d72f3903f980d65fb8b21ef21dad089" translate="yes" xml:space="preserve">
          <source>The HTML &lt;a href=&quot;router&quot;&gt;&lt;em&gt;&amp;lt;base href=&quot;...&quot;/&amp;gt;&lt;/em&gt;&lt;/a&gt; specifies a base path for resolving relative URLs to assets such as images, scripts, and style sheets. For example, given the &lt;code&gt;&amp;lt;base href=&quot;/my/app/&quot;&amp;gt;&lt;/code&gt;, the browser resolves a URL such as &lt;code&gt;some/place/foo.jpg&lt;/code&gt; into a server request for &lt;code&gt;my/app/some/place/foo.jpg&lt;/code&gt;. During navigation, the Angular router uses the &lt;em&gt;base href&lt;/em&gt; as the base path to component, template, and module files.</source>
          <target state="translated">HTML &lt;a href=&quot;router&quot;&gt;&lt;em&gt;&amp;lt;base href = &quot;...&quot; /&amp;gt;&lt;/em&gt;&lt;/a&gt; указывает базовый путь для разрешения относительных URL-адресов к ресурсам, таким как изображения, сценарии и таблицы стилей. Например, учитывая &lt;code&gt;&amp;lt;base href=&quot;/my/app/&quot;&amp;gt;&lt;/code&gt; , браузер разрешает URL-адрес, такой как &lt;code&gt;some/place/foo.jpg&lt;/code&gt; , в запрос на сервер для &lt;code&gt;my/app/some/place/foo.jpg&lt;/code&gt; . Во время навигации Angular router использует &lt;em&gt;базовый href&lt;/em&gt; в качестве базового пути к файлам компонентов, шаблонов и модулей.</target>
        </trans-unit>
        <trans-unit id="6934597188d99f726b47ffd4352dab662b44d834" translate="yes" xml:space="preserve">
          <source>The HTML &lt;code&gt;base&lt;/code&gt; tag with the &lt;code&gt;href&lt;/code&gt; attribute specifies the base URI, or URL, for relative links. If you set the &lt;code&gt;&quot;localize&quot;&lt;/code&gt; option in &lt;code&gt;angular.json&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; or to an array of locale IDs, the CLI adjusts the base &lt;code&gt;href&lt;/code&gt; for each version of the app by adding the locale to the configured &lt;code&gt;&quot;baseHref&quot;&lt;/code&gt;. You can specify the &lt;code&gt;&quot;baseHref&quot;&lt;/code&gt; for each locale in your workspace configuration file (&lt;code&gt;angular.json&lt;/code&gt;), as shown in the following example, which sets &lt;code&gt;&quot;baseHref&quot;&lt;/code&gt; to an empty string:</source>
          <target state="translated">&lt;code&gt;base&lt;/code&gt; тег HTML с атрибутом &lt;code&gt;href&lt;/code&gt; определяет базовый URI или URL для относительных ссылок. Если вы установите для параметра &lt;code&gt;&quot;localize&quot;&lt;/code&gt; в &lt;code&gt;angular.json&lt;/code&gt; значение &lt;code&gt;true&lt;/code&gt; или массив идентификаторов языковых стандартов, интерфейс командной строки настраивает базовый &lt;code&gt;href&lt;/code&gt; для каждой версии приложения, добавляя языковой стандарт к настроенному &lt;code&gt;&quot;baseHref&quot;&lt;/code&gt; . Вы можете указать &lt;code&gt;&quot;baseHref&quot;&lt;/code&gt; для каждой локали в файле конфигурации вашей рабочей области ( &lt;code&gt;angular.json&lt;/code&gt; ), как показано в следующем примере, который устанавливает для &lt;code&gt;&quot;baseHref&quot;&lt;/code&gt; пустую строку:</target>
        </trans-unit>
        <trans-unit id="3d87779df17c7f23d08f5fc1783cce1d26501ce4" translate="yes" xml:space="preserve">
          <source>The HTML attribute &lt;code&gt;value&lt;/code&gt; specifies the &lt;em&gt;initial&lt;/em&gt; value; the DOM &lt;code&gt;value&lt;/code&gt; property is the &lt;em&gt;current&lt;/em&gt; value.</source>
          <target state="translated">Атрибут HTML &lt;code&gt;value&lt;/code&gt; задает &lt;em&gt;начальное&lt;/em&gt; значение; свойство &lt;code&gt;value&lt;/code&gt; DOM является &lt;em&gt;текущим&lt;/em&gt; значением.</target>
        </trans-unit>
        <trans-unit id="1c559ea997a344c5ea6c1ce9d3e4c628fd9a47c6" translate="yes" xml:space="preserve">
          <source>The HTML element &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and the Angular decorator &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; are different. This documentation is about component communication in Angular as it pertains to &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt;. For more information on the HTML element &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;, see the &lt;a href=&quot;https://www.w3.org/TR/html5/sec-forms.html#the-input-element&quot;&gt;W3C Recommendation&lt;/a&gt;.</source>
          <target state="translated">HTML-элемент &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; и Angular decorator &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; различаются. Эта документация касается связи компонентов в Angular, поскольку она относится к &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; . Для получения дополнительной информации об элементе HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; см. &lt;a href=&quot;https://www.w3.org/TR/html5/sec-forms.html#the-input-element&quot;&gt;Рекомендацию W3C&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a9dc8a4343ef71551d0c82a9eaadfd64de660f2a" translate="yes" xml:space="preserve">
          <source>The HTML element to receive event notifications.</source>
          <target state="translated">HTML-элемент для получения уведомлений о событиях.</target>
        </trans-unit>
        <trans-unit id="d14904cf4a58c3d8c0afeac7bf2f0cdc11c30fbe" translate="yes" xml:space="preserve">
          <source>The HTML for the list of heroes should look like this:</source>
          <target state="translated">HTML для списка героев должен выглядеть так:</target>
        </trans-unit>
        <trans-unit id="f71b50d004800ebb1d4d3080fd26d84a67ac0e78" translate="yes" xml:space="preserve">
          <source>The HTML includes an &lt;em&gt;Edit&lt;/em&gt; button whose click event is bound to an expression that clears the &lt;code&gt;submitted&lt;/code&gt; flag.</source>
          <target state="translated">HTML-код включает кнопку &amp;laquo; &lt;em&gt;Изменить&amp;raquo;&lt;/em&gt; , событие щелчка которой связано с выражением, которое очищает &lt;code&gt;submitted&lt;/code&gt; флаг.</target>
        </trans-unit>
        <trans-unit id="5fd12f6544608fc7b30088b6abc736ac21e18907" translate="yes" xml:space="preserve">
          <source>The HTML selector of the Universal app</source>
          <target state="translated">HTML-селектор Универсального приложения</target>
        </trans-unit>
        <trans-unit id="fd9120ff3800ba174966eda03c783d69e8e4cda4" translate="yes" xml:space="preserve">
          <source>The HTML selector to use for this component.</source>
          <target state="translated">HTML-селектор,используемый для этого компонента.</target>
        </trans-unit>
        <trans-unit id="e7578d99ffd7e1da8e3cea279451c4297b5806ca" translate="yes" xml:space="preserve">
          <source>The HTML selector to use for this directive.</source>
          <target state="translated">Селектор HTML,используемый для этой директивы.</target>
        </trans-unit>
        <trans-unit id="2a36834f34b8455f136644a787a93d8cd1f575d0" translate="yes" xml:space="preserve">
          <source>The HTML template contains a trigger called &lt;code&gt;filterAnimation&lt;/code&gt;.</source>
          <target state="translated">Шаблон HTML содержит триггер с именем &lt;code&gt;filterAnimation&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1aa3f12e11c8cd99f37c0e90b346ffe248ed2a88" translate="yes" xml:space="preserve">
          <source>The HTML template that defines the view.</source>
          <target state="translated">Шаблон HTML,определяющий вид.</target>
        </trans-unit>
        <trans-unit id="fb27ae2c8025973c57454777adc583cc3d95a51c" translate="yes" xml:space="preserve">
          <source>The HTTP client service offers the following major features.</source>
          <target state="translated">Клиентская служба HTTP предлагает следующие основные возможности.</target>
        </trans-unit>
        <trans-unit id="25316bd1e8e7dd9558acd79051ccba3b8b0de428" translate="yes" xml:space="preserve">
          <source>The HTTP method.</source>
          <target state="translated">Метод HTTP.</target>
        </trans-unit>
        <trans-unit id="e004648df3406974846237d4e5339d7a5db71263" translate="yes" xml:space="preserve">
          <source>The HTTP module uses observables to handle AJAX requests and responses.</source>
          <target state="translated">Модуль HTTP использует наблюдаемые данные для обработки AJAX-запросов и ответов.</target>
        </trans-unit>
        <trans-unit id="4063f45ae6db2ac3b918eaf7efd11f13ab6d0885" translate="yes" xml:space="preserve">
          <source>The HTTP options to send with the request.</source>
          <target state="translated">Опции HTTP для отправки вместе с запросом.</target>
        </trans-unit>
        <trans-unit id="f569b6437ab842c7c172d6eaf1d50cb52cb3b0df" translate="yes" xml:space="preserve">
          <source>The Hero Editor</source>
          <target state="translated">Редактор-герой</target>
        </trans-unit>
        <trans-unit id="789e49c75eaf57227f3c68b65a2f12a91300f2e7" translate="yes" xml:space="preserve">
          <source>The ICU clauses adhere to the &lt;a href=&quot;http://userguide.icu-project.org/formatparse/messages&quot;&gt;ICU Message Format&lt;/a&gt; specified in the &lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;CLDR pluralization rules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://cldr.unicode.org/index/cldr-spec/plural-rules&quot;&gt;Пункты&lt;/a&gt; ICU придерживаются &lt;a href=&quot;http://userguide.icu-project.org/formatparse/messages&quot;&gt;формата сообщения ICU,&lt;/a&gt; указанного в правилах множественного числа CLDR .</target>
        </trans-unit>
        <trans-unit id="ad0024a992c3624450ab558546a68e7c18c3fd2c" translate="yes" xml:space="preserve">
          <source>The ID consists of a language identifier, such as &lt;code&gt;en&lt;/code&gt; for English or &lt;code&gt;fr&lt;/code&gt; for French, followed by a dash (&lt;code&gt;-&lt;/code&gt;) and a locale extension, such as &lt;code&gt;US&lt;/code&gt; for the United States or &lt;code&gt;CA&lt;/code&gt; for Canada. For example, &lt;code&gt;en-US&lt;/code&gt; refers to English in the United States, and &lt;code&gt;fr-CA&lt;/code&gt; refers to French in Canada. Angular uses this ID to find the correct corresponding locale data.</source>
          <target state="translated">Идентификатор состоит из идентификатора языка, например &lt;code&gt;en&lt;/code&gt; для английского или &lt;code&gt;fr&lt;/code&gt; для французского, за которым следует тире ( &lt;code&gt;-&lt;/code&gt; ) и расширения локали, например &lt;code&gt;US&lt;/code&gt; для США или &lt;code&gt;CA&lt;/code&gt; для Канады. Например, &lt;code&gt;en-US&lt;/code&gt; относится к английскому языку в США, а &lt;code&gt;fr-CA&lt;/code&gt; - к французскому языку в Канаде. Angular использует этот идентификатор для поиска соответствующих данных локали.</target>
        </trans-unit>
        <trans-unit id="506fcf27093bc174f67c1d402388302182ceec78" translate="yes" xml:space="preserve">
          <source>The ID of the anchor element.</source>
          <target state="translated">Идентификатор якорного элемента.</target>
        </trans-unit>
        <trans-unit id="ac7e7310379be287aa7d416f11a8dd96c9a6d0ee" translate="yes" xml:space="preserve">
          <source>The Idle Task Queue is the queue of all pending tasks that happen in the background in the service worker. If there are any tasks in the queue, they are listed with a description. In this example, the service worker has one such task scheduled, a post-initialization operation involving an update check and cleanup of stale caches.</source>
          <target state="translated">Очередь незавершенных задач-это очередь всех незавершенных задач,которые происходят в фоновом режиме у работника службы.Если в очереди есть какие-либо задачи,то они перечислены с описанием.В данном примере у работника службы запланирована одна такая задача,операция пост-инициализации,включающая в себя проверку обновлений и очистку залежавшихся кэшей.</target>
        </trans-unit>
        <trans-unit id="b00f55586209c5611cf844fe2c21fbd033033eb7" translate="yes" xml:space="preserve">
          <source>The JSON schema that defines a schematic's options supports extensions to allow the declarative definition of prompts and their respective behavior. No additional logic or changes are required to the code of a schematic to support the prompts. The following JSON schema is a complete description of the long-form syntax for the &lt;code&gt;x-prompt&lt;/code&gt; field.</source>
          <target state="translated">Схема JSON, которая определяет параметры схемы, поддерживает расширения, позволяющие декларативное определение приглашений и их соответствующего поведения. Никакой дополнительной логики или изменений в коде схемы для поддержки подсказок не требуется. Следующая схема JSON представляет собой полное описание синтаксиса полной формы для поля &lt;code&gt;x-prompt&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b14e7b839406e6c6e07b41831c981d00cdb2be0" translate="yes" xml:space="preserve">
          <source>The JSON schemas for the default schematics used by the CLI to generate projects and parts of projects are collected in the package &lt;a href=&quot;https://github.com/angular/angular-cli/blob/7.0.x/packages/schematics/angular/application/schema.json&quot;&gt;&lt;code&gt;@schematics/angular&lt;/code&gt;&lt;/a&gt;. The schema describes the options available to the CLI for each of the &lt;code&gt;ng generate&lt;/code&gt; sub-commands, as shown in the &lt;code&gt;--help&lt;/code&gt; output.</source>
          <target state="translated">Схемы JSON для схем по умолчанию, используемых CLI для генерации проектов и частей проектов, собраны в пакете &lt;a href=&quot;https://github.com/angular/angular-cli/blob/7.0.x/packages/schematics/angular/application/schema.json&quot;&gt; &lt;code&gt;@schematics/angular&lt;/code&gt; &lt;/a&gt; . Схема описывает параметры, доступные для CLI для каждой из &lt;code&gt;ng generate&lt;/code&gt; , как показано в выводе &lt;code&gt;--help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39ad755f2d2f00791e1d617d38aca11a845811ee" translate="yes" xml:space="preserve">
          <source>The JSON schemas for the default schematics used by the CLI to generate projects and parts of projects are collected in the package &lt;a href=&quot;https://raw.githubusercontent.com/angular/angular-cli/v7.0.0/packages/schematics/angular/application/schema.json&quot;&gt;&lt;code&gt;@schematics/angular&lt;/code&gt;&lt;/a&gt;. The schema describes the options available to the CLI for each of the &lt;code&gt;ng generate&lt;/code&gt; sub-commands, as shown in the &lt;code&gt;--help&lt;/code&gt; output.</source>
          <target state="translated">Схемы JSON для схем по умолчанию, используемых CLI для генерации проектов и частей проектов, собраны в пакете &lt;a href=&quot;https://raw.githubusercontent.com/angular/angular-cli/v7.0.0/packages/schematics/angular/application/schema.json&quot;&gt; &lt;code&gt;@schematics/angular&lt;/code&gt; &lt;/a&gt; . Схема описывает параметры, доступные для CLI для каждой из &lt;code&gt;ng generate&lt;/code&gt; , как показано в выводе &lt;code&gt;--help&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f07f2ef6bdc0276dc66c13525614930ce905b490" translate="yes" xml:space="preserve">
          <source>The NPM registry to use.</source>
          <target state="translated">Реестр НПМ для использования.</target>
        </trans-unit>
        <trans-unit id="ddfa2dc248ef3e69640a4a039271e3809480eb1f" translate="yes" xml:space="preserve">
          <source>The NgModule classes differ from JavaScript module in the following key ways:</source>
          <target state="translated">Классы NgModule отличаются от модуля JavaScript следующими ключевыми особенностями:</target>
        </trans-unit>
        <trans-unit id="3c3d2df9acaceef7f08c09fa40d55f3607762e32" translate="yes" xml:space="preserve">
          <source>The NgModule instance.</source>
          <target state="translated">Экземпляр NgModule.</target>
        </trans-unit>
        <trans-unit id="0747755c8b239fe51fe8a94eabd907811f0aaa1b" translate="yes" xml:space="preserve">
          <source>The NgModule system is different from and unrelated to the JavaScript (ES2015) module system for managing collections of JavaScript objects. These are &lt;em&gt;complementary&lt;/em&gt; module systems that you can use together to write your apps.</source>
          <target state="translated">Система NgModule отличается и не связана с модульной системой JavaScript (ES2015) для управления коллекциями объектов JavaScript. Это &lt;em&gt;дополнительные&lt;/em&gt; модульные системы, которые вы можете использовать вместе для написания своих приложений.</target>
        </trans-unit>
        <trans-unit id="e78772f224ee2af36b30cd74fcf9b437c350b4e9" translate="yes" xml:space="preserve">
          <source>The PhoneCat project has both E2E Protractor tests and some Karma unit tests in it. Of these two, E2E tests can be dealt with much more easily: By definition, E2E tests access the application from the &lt;em&gt;outside&lt;/em&gt; by interacting with the various UI elements the app puts on the screen. E2E tests aren't really that concerned with the internal structure of the application components. That also means that, although you modify the project quite a bit during the upgrade, the E2E test suite should keep passing with just minor modifications. You didn't change how the application behaves from the user's point of view.</source>
          <target state="translated">В проекте PhoneCat есть как тесты E2E Protractor, так и некоторые модульные тесты Karma. С этими двумя тестами E2E можно справиться гораздо проще: по определению, тесты E2E обращаются к приложению &lt;em&gt;извне&lt;/em&gt; , взаимодействуя с различными элементами пользовательского интерфейса, которые приложение выводит на экран. Тесты E2E на самом деле не касаются внутренней структуры компонентов приложения. Это также означает, что, хотя вы вносите незначительные изменения в проект во время обновления, набор тестов E2E должен продолжать проходить с незначительными изменениями. Вы не изменили поведение приложения с точки зрения пользователя.</target>
        </trans-unit>
        <trans-unit id="f2ae4909a5e215dd224a806bec7a9225a92ca5ec" translate="yes" xml:space="preserve">
          <source>The Popup Service example app (shown below) defines a component that you can either load dynamically or convert to a custom element.</source>
          <target state="translated">Пример приложения Popup Service (показан ниже)определяет компонент,который можно либо загрузить динамически,либо преобразовать в пользовательский элемент.</target>
        </trans-unit>
        <trans-unit id="84993d2db560df7bc9b4de2bc50d97c62f64d0f4" translate="yes" xml:space="preserve">
          <source>The Router also makes use of multiple providers associated with a single token. When you provide multiple sets of routes using &lt;a href=&quot;../api/router/routermodule#forroot&quot;&gt;RouterModule.forRoot&lt;/a&gt; and &lt;a href=&quot;../api/router/routermodule#forchild&quot;&gt;RouterModule.forChild&lt;/a&gt; in a single module, the &lt;a href=&quot;../api/router/routes&quot;&gt;ROUTES&lt;/a&gt; token combines all the different provided sets of routes into a single value.</source>
          <target state="translated">Маршрутизатор также использует несколько провайдеров, связанных с одним токеном. Когда вы предоставляете несколько наборов маршрутов с использованием &lt;a href=&quot;../api/router/routermodule#forroot&quot;&gt;RouterModule.forRoot&lt;/a&gt; и &lt;a href=&quot;../api/router/routermodule#forchild&quot;&gt;RouterModule.forChild&lt;/a&gt; в одном модуле, маркер &lt;a href=&quot;../api/router/routes&quot;&gt;ROUTES&lt;/a&gt; объединяет все различные предоставленные наборы маршрутов в одно значение.</target>
        </trans-unit>
        <trans-unit id="06f152c32b945154045d8af9ca9b76a3d1746fea" translate="yes" xml:space="preserve">
          <source>The Router and Forms modules use observables to listen for and respond to user-input events.</source>
          <target state="translated">Модули Маршрутизатор и Формы используют наблюдаемые устройства для прослушивания и реагирования на события,происходящие на входе пользователя.</target>
        </trans-unit>
        <trans-unit id="6719949fe48b382a4f5d441956e3a39da43a1cf4" translate="yes" xml:space="preserve">
          <source>The RouterLink directive gives the router control over the anchor element. In this case, the route (URL) contains one fixed segment (&lt;code&gt;/products&lt;/code&gt;) and the final segment is variable, inserting the id property of the current product. For example, the URL for a product with an &lt;code&gt;id&lt;/code&gt; of 1 will be similar to &lt;code&gt;https://getting-started-myfork.stackblitz.io/products/1&lt;/code&gt;.</source>
          <target state="translated">Директива RouterLink дает маршрутизатору контроль над элементом привязки. В этом случае маршрут (URL) содержит один фиксированный сегмент ( &lt;code&gt;/products&lt;/code&gt; ), а последний сегмент является переменной, вставляя свойство id текущего продукта. Например, URL для продукта с &lt;code&gt;id&lt;/code&gt; 1 будет похож на &lt;code&gt;https://getting-started-myfork.stackblitz.io/products/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec9884b83270d5dfad5b0c687a2bc2fbf8233d70" translate="yes" xml:space="preserve">
          <source>The RouterLink directive gives the router control over the anchor element. In this case, the route, or URL, contains one fixed segment, &lt;code&gt;/products&lt;/code&gt;, while the final segment is variable, inserting the id property of the current product. For example, the URL for a product with an &lt;code&gt;id&lt;/code&gt; of 1 will be similar to &lt;code&gt;https://getting-started-myfork.stackblitz.io/products/1&lt;/code&gt;.</source>
          <target state="translated">Директива RouterLink дает маршрутизатору контроль над элементом привязки. В этом случае маршрут или URL-адрес содержит один фиксированный сегмент &lt;code&gt;/products&lt;/code&gt; , в то время как последний сегмент является переменным, и в него вставляется свойство id текущего продукта. Например, URL-адрес продукта с &lt;code&gt;id&lt;/code&gt; 1 будет похож на &lt;code&gt;https://getting-started-myfork.stackblitz.io/products/1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bb5da276658695e0be6ae79161628d231d307feb" translate="yes" xml:space="preserve">
          <source>The Routing Module has several characteristics:</source>
          <target state="translated">Модуль маршрутизации имеет несколько характеристик:</target>
        </trans-unit>
        <trans-unit id="35fd3904247e990d23cf1026f75cc708c81d26d7" translate="yes" xml:space="preserve">
          <source>The Routing Module is a design choice whose value is most obvious when the configuration is complex and includes specialized guard and resolver services. It can seem like overkill when the actual configuration is dead simple.</source>
          <target state="translated">Модуль маршрутизации-это конструкторский выбор,значение которого наиболее очевидно,когда конфигурация сложна и включает в себя специализированные службы охраны и резольвера.Это может показаться излишеством,когда фактическая конфигурация мертва проста.</target>
        </trans-unit>
        <trans-unit id="b6fe2baca6e2f506f7a1094ee33169d007121a3d" translate="yes" xml:space="preserve">
          <source>The RxJS &lt;code&gt;last()&lt;/code&gt; operator emits the observable's last value before completing, which will be the test quote. The &lt;code&gt;subscribe&lt;/code&gt; callback calls &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; to update the quote element with the test quote, in the same manner as the earlier tests.</source>
          <target state="translated">Оператор RxJS &lt;code&gt;last()&lt;/code&gt; выдает последнее значение наблюдаемой перед завершением, которое будет тестовой цитатой. &lt;code&gt;subscribe&lt;/code&gt; обратными вызовы &lt;code&gt;&lt;a href=&quot;../api/core/testing/componentfixture#detectChanges&quot;&gt;detectChanges()&lt;/a&gt;&lt;/code&gt; для обновления цитаты элемента с тестовой цитатой, таким же образом , как и в предыдущих опытах.</target>
        </trans-unit>
        <trans-unit id="e4ef5b64a22e5f089b247e3fce5803948ddbdd68" translate="yes" xml:space="preserve">
          <source>The RxJS &lt;code&gt;last()&lt;/code&gt; operator emits the observable's last value before completing, which will be the test quote. The &lt;code&gt;subscribe&lt;/code&gt; callback calls &lt;code&gt;detectChanges()&lt;/code&gt; to update the quote element with the test quote, in the same manner as the earlier tests.</source>
          <target state="translated">Оператор RxJS &lt;code&gt;last()&lt;/code&gt; испускает последнее значение наблюдаемого перед завершением, которое будет тестовой цитатой. &lt;code&gt;subscribe&lt;/code&gt; обратными вызовы &lt;code&gt;detectChanges()&lt;/code&gt; для обновления цитаты элемента с тестовой цитатой, таким же образом , как и в предыдущих опытах.</target>
        </trans-unit>
        <trans-unit id="dcaa953111009647a434b575f4fd13ea2b557407" translate="yes" xml:space="preserve">
          <source>The RxJS &lt;code&gt;tap&lt;/code&gt; operator (as in &quot;wiretap&quot;) lets the code inspect both success and error values passing through the observable without disturbing them.</source>
          <target state="translated">Оператор &lt;code&gt;tap&lt;/code&gt; RxJS (как в &amp;laquo;прослушке&amp;raquo;) позволяет коду проверять как успешные, так и ошибочные значения, проходящие через наблюдаемые, не нарушая их.</target>
        </trans-unit>
        <trans-unit id="1d1cccc9cf3740247de7c91761afdad5881ffa16" translate="yes" xml:space="preserve">
          <source>The RxJS &lt;code&gt;tap&lt;/code&gt; operator captures whether the request succeeded or failed. The RxJS &lt;code&gt;finalize&lt;/code&gt; operator is called when the response observable either errors or completes (which it must), and reports the outcome to the &lt;code&gt;MessageService&lt;/code&gt;.</source>
          <target state="translated">Оператор &lt;code&gt;tap&lt;/code&gt; RxJS фиксирует, был ли запрос успешным или неудачным. Оператор &lt;code&gt;finalize&lt;/code&gt; RxJS вызывается, когда наблюдаемый ответ либо ошибается, либо завершается (что необходимо), и сообщает результат в &lt;code&gt;MessageService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="827ac77d8ed61c8b49d2de8b0bdc53bf70d6d536" translate="yes" xml:space="preserve">
          <source>The RxJS library</source>
          <target state="translated">Библиотека RxJS</target>
        </trans-unit>
        <trans-unit id="f0136a6174ce00439105cc5cccfc1cdfbe02fb4c" translate="yes" xml:space="preserve">
          <source>The Schematics framework provides a file templating system, which supports both path and content templates. The system operates on placeholders defined inside files or paths that loaded in the input &lt;code&gt;Tree&lt;/code&gt;. It fills these in using values passed into the &lt;code&gt;Rule&lt;/code&gt;.</source>
          <target state="translated">Платформа Schematics предоставляет систему шаблонов файлов, которая поддерживает шаблоны путей и содержимого. Система работает с заполнителями, определенными в файлах или путях, которые загружены во входное &lt;code&gt;Tree&lt;/code&gt; . Он заполняет их, используя значения, переданные в &lt;code&gt;Rule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a709c4d8482569aaa0ad00942fcea4cbbe6b52ed" translate="yes" xml:space="preserve">
          <source>The ServiceWorker will redirect navigation requests that don't match any &lt;code&gt;asset&lt;/code&gt; or &lt;code&gt;data&lt;/code&gt; group to the specified &lt;a href=&quot;service-worker-config#index-file&quot;&gt;index file&lt;/a&gt;. A request is considered to be a navigation request if:</source>
          <target state="translated">ServiceWorker перенаправит запросы навигации, которые не соответствуют ни одному &lt;code&gt;asset&lt;/code&gt; или группе &lt;code&gt;data&lt;/code&gt; к указанному &lt;a href=&quot;service-worker-config#index-file&quot;&gt;файлу индекса&lt;/a&gt; . Запрос считается навигационным запросом, если:</target>
        </trans-unit>
        <trans-unit id="05060365aca92ff57a2a8cb3fad933d606282ffe" translate="yes" xml:space="preserve">
          <source>The StackBlitz generator might provide the cart service in &lt;code&gt;app.module.ts&lt;/code&gt; by default. That differs from the example, which uses a bundle-optimization technique, an &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator with the &lt;code&gt;{ providedIn: 'root' }&lt;/code&gt; statement. For more information about services, see &lt;a href=&quot;../guide/architecture-services&quot;&gt;Introduction to Services and Dependency Injection&lt;/a&gt;.</source>
          <target state="translated">По умолчанию генератор StackBlitz может предоставлять службу корзины в &lt;code&gt;app.module.ts&lt;/code&gt; . Это отличается от примера, в котором используется метод оптимизации &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; декоратор @ Injectable () с оператором &lt;code&gt;{ providedIn: 'root' }&lt;/code&gt; . Дополнительные сведения о службах см. В разделе &lt;a href=&quot;../guide/architecture-services&quot;&gt;Введение в службы и внедрение зависимостей&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0a8e6705d088a4f6f8c71e996096d93779313a26" translate="yes" xml:space="preserve">
          <source>The SystemJS configuration file &lt;code&gt;systemjs.config.js&lt;/code&gt; to the project root directory.</source>
          <target state="translated">Файл конфигурации &lt;code&gt;systemjs.config.js&lt;/code&gt; в корневой каталог проекта.</target>
        </trans-unit>
        <trans-unit id="55401394d273b717445755bd856afd574e272014" translate="yes" xml:space="preserve">
          <source>The Testability service provides testing hooks that can be accessed from the browser and by services such as Protractor. Each bootstrapped Angular application on the page will have an instance of Testability.</source>
          <target state="translated">Служба Testability предоставляет тестовые крючки,доступ к которым можно получить из браузера и с помощью таких сервисов,как Protractor.Каждое загружаемое угловое приложение на странице будет иметь экземпляр Testability.</target>
        </trans-unit>
        <trans-unit id="5766cb1be4ee9631ce9045b332f79763bfe74b65" translate="yes" xml:space="preserve">
          <source>The Tour of Heroes &lt;code&gt;HeroesComponent&lt;/code&gt; is currently getting and displaying fake data.</source>
          <target state="translated">Тур героев. &lt;code&gt;HeroesComponent&lt;/code&gt; в настоящее время получает и отображает поддельные данные.</target>
        </trans-unit>
        <trans-unit id="d2f2b03e1a17c636938183bec1a40bd186d69702" translate="yes" xml:space="preserve">
          <source>The Tour of Heroes app displays a list of heroes in a Master/Detail view.</source>
          <target state="translated">Приложение &quot;Tour of Heroes&quot; отображает список героев в режиме Master/Detail.</target>
        </trans-unit>
        <trans-unit id="29d68459c27733c932fb0a3e9b100ffb25836775" translate="yes" xml:space="preserve">
          <source>The Tour of Heroes is a comprehensive tutorial that guides you through the process of building an application with many of Angular's most popular features.</source>
          <target state="translated">Tour of Heroes является всеобъемлющим учебником,который проведет вас через процесс создания приложения со многими из наиболее популярных особенностей Angular.</target>
        </trans-unit>
        <trans-unit id="a4c698daff2c8aa5974a237e4112ae50ff6e51cc" translate="yes" xml:space="preserve">
          <source>The TypeScript and Angular have a wide range of options which can be used to configure type-checking features and generated output. For more information, see the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends&quot;&gt;Configuration inheritance with extends&lt;/a&gt; section of the TypeScript documentation.</source>
          <target state="translated">TypeScript и Angular имеют широкий спектр опций, которые можно использовать для настройки функций проверки типов и сгенерированного вывода. Дополнительные сведения см. В разделе &amp;laquo; &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends&quot;&gt;Наследование конфигурации с&lt;/a&gt; расширениями&amp;raquo; документации TypeScript.</target>
        </trans-unit>
        <trans-unit id="8568fa0f23ba2d73c5291a0c991f3fc03b8708b2" translate="yes" xml:space="preserve">
          <source>The TypeScript compiler does some of the analytic work of the first phase. It emits the &lt;code&gt;.d.ts&lt;/code&gt;&lt;em&gt;type definition files&lt;/em&gt; with type information that the AOT compiler needs to generate application code. At the same time, the AOT &lt;strong&gt;collector&lt;/strong&gt; analyzes the metadata recorded in the Angular decorators and outputs metadata information in &lt;strong&gt;&lt;code&gt;.metadata.json&lt;/code&gt;&lt;/strong&gt; files, one per &lt;code&gt;.d.ts&lt;/code&gt; file.</source>
          <target state="translated">Компилятор TypeScript выполняет некоторую аналитическую работу первого этапа. Он генерирует &lt;em&gt;файлы определения типа &lt;/em&gt; &lt;code&gt;.d.ts&lt;/code&gt; с информацией о типе, необходимой компилятору AOT для генерации кода приложения. В то же время &lt;strong&gt;сборщик&lt;/strong&gt; AOT анализирует метаданные, записанные в угловых декораторах, и выводит информацию метаданных в файлах &lt;strong&gt; &lt;code&gt;.metadata.json&lt;/code&gt; &lt;/strong&gt; , по одному на файл &lt;code&gt;.d.ts&lt;/code&gt; .&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e0a06e36760a2eff0336b6bc84af9dbdc59d36a" translate="yes" xml:space="preserve">
          <source>The TypeScript compiler generates a public field for each &lt;code&gt;public&lt;/code&gt; constructor parameter and automatically assigns the parameter&amp;rsquo;s value to that field when you create heroes.</source>
          <target state="translated">Компилятор TypeScript генерирует открытое поле для каждого &lt;code&gt;public&lt;/code&gt; параметра конструктора и автоматически присваивает значение параметра этому полю при создании героев.</target>
        </trans-unit>
        <trans-unit id="544dc91fe288513548a9233bbe8426452eb2d737" translate="yes" xml:space="preserve">
          <source>The TypeScript language server, including the &lt;em&gt;tsc&lt;/em&gt; TypeScript compiler.</source>
          <target state="translated">Языковой сервер TypeScript, включая компилятор &lt;em&gt;tsc&lt;/em&gt; TypeScript.</target>
        </trans-unit>
        <trans-unit id="585484bd3428c42d4450046039048a1e517dabea" translate="yes" xml:space="preserve">
          <source>The URL bound to the &lt;code&gt;[&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;]&lt;/code&gt; attribute flows in to the directive's &lt;code&gt;linkParams&lt;/code&gt; property.</source>
          <target state="translated">URL-адрес, связанный с атрибутом &lt;code&gt;[&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;]&lt;/code&gt; , &lt;code&gt;linkParams&lt;/code&gt; свойство директивы linkParams .</target>
        </trans-unit>
        <trans-unit id="d3b7615b7e3818d17d835d95dfcc876f7081b556" translate="yes" xml:space="preserve">
          <source>The URL for the current application state. This is used for initializing the platform's location. &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, and &lt;code&gt;port&lt;/code&gt; will be overridden if &lt;code&gt;baseUrl&lt;/code&gt; is set.</source>
          <target state="translated">URL-адрес текущего состояния приложения. Это используется для инициализации местоположения платформы. &lt;code&gt;protocol&lt;/code&gt; , &lt;code&gt;hostname&lt;/code&gt; и &lt;code&gt;port&lt;/code&gt; будут переопределены, если установлен &lt;code&gt;baseUrl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3b58a08584550f73eae9ff3e2376fdabaeb0c99" translate="yes" xml:space="preserve">
          <source>The URL fragment shared by all the routes</source>
          <target state="translated">Фрагмент URL,разделяемый всеми маршрутами</target>
        </trans-unit>
        <trans-unit id="7375623d6e6cb15b981147758fafc25c5fab9496" translate="yes" xml:space="preserve">
          <source>The URL in &lt;code&gt;&amp;lt;action type=&quot;Rewrite&quot; url=&quot;/src/&quot;/&amp;gt;&lt;/code&gt; should match the base href in &lt;code&gt;index.html&lt;/code&gt;.</source>
          <target state="translated">URL-адрес в &lt;code&gt;&amp;lt;action type=&quot;Rewrite&quot; url=&quot;/src/&quot;/&amp;gt;&lt;/code&gt; должен соответствовать базовому href в &lt;code&gt;index.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c30899e221cfea13e24ea0a470ee42b50353e939" translate="yes" xml:space="preserve">
          <source>The URL is the heroes resource URL plus the &lt;code&gt;id&lt;/code&gt; of the hero to delete.</source>
          <target state="translated">URL - это URL ресурса героев плюс &lt;code&gt;id&lt;/code&gt; героя, которого нужно удалить.</target>
        </trans-unit>
        <trans-unit id="6c5643dddca94caf55142e6ccbe6d6ec8803e3a0" translate="yes" xml:space="preserve">
          <source>The URL is unchanged. The heroes web API knows which hero to update by looking at the hero's &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">URL не изменился. Веб-API героев знает, какого героя обновлять, просматривая его &lt;code&gt;id&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="08c013a55e0baa8ffe5403ca40144123b223ee92" translate="yes" xml:space="preserve">
          <source>The URL must not contain &lt;code&gt;__&lt;/code&gt;.</source>
          <target state="translated">URL не должен содержать &lt;code&gt;__&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="81837d96bfb7f069e22ae8b8419daf579e0ede35" translate="yes" xml:space="preserve">
          <source>The URL must not contain a file extension (i.e. a &lt;code&gt;.&lt;/code&gt;) in the last path segment.</source>
          <target state="translated">URL не должен содержать расширение файла (т &lt;code&gt;.&lt;/code&gt; Е. ) В последнем сегменте пути.</target>
        </trans-unit>
        <trans-unit id="9c1a40ff35abb3598077b170eeaec00c0f54cc0e" translate="yes" xml:space="preserve">
          <source>The URL path</source>
          <target state="translated">Путь URL-адреса</target>
        </trans-unit>
        <trans-unit id="c0dd8facec71b1ec87d76b9020042f5cba77847d" translate="yes" xml:space="preserve">
          <source>The URL segments matched by this route</source>
          <target state="translated">Сегменты URL-адреса,соответствующие этому маршруту</target>
        </trans-unit>
        <trans-unit id="cc2bde1fb3859667c3bfd03de6cc864cffab7897" translate="yes" xml:space="preserve">
          <source>The URL segments of this group. See &lt;code&gt;&lt;a href=&quot;urlsegment&quot;&gt;UrlSegment&lt;/a&gt;&lt;/code&gt; for more information</source>
          <target state="translated">Сегменты URL этой группы. Смотрите &lt;code&gt;&lt;a href=&quot;urlsegment&quot;&gt;UrlSegment&lt;/a&gt;&lt;/code&gt; для получения дополнительной информации</target>
        </trans-unit>
        <trans-unit id="2b38217a179daea3d6656686b81dd85b6b4153c1" translate="yes" xml:space="preserve">
          <source>The URL string.</source>
          <target state="translated">Строка URL-адреса.</target>
        </trans-unit>
        <trans-unit id="52453743ef9a067eaee16ecf0d5bfffaa8d88e34" translate="yes" xml:space="preserve">
          <source>The URL that is the destination for this navigation.</source>
          <target state="translated">URL,который является местом назначения для этой навигации.</target>
        </trans-unit>
        <trans-unit id="82fa7104935e782b71b9ac41f1f70a9244a9aa62" translate="yes" xml:space="preserve">
          <source>The URL that the browser client (or live-reload client, if enabled) should use to connect to the development server. Use for a complex dev server setup, such as one with reverse proxies.</source>
          <target state="translated">URL,который клиент браузера (или клиент живой загрузки,если он включен)должен использовать для подключения к серверу разработки.Используется для сложной настройки сервера разработки,например,с обратными прокси.</target>
        </trans-unit>
        <trans-unit id="c519406384bbfabb8d794f38fa84b37a2a8a8261" translate="yes" xml:space="preserve">
          <source>The ability to alter the state of a value after its creation. &lt;a href=&quot;glossary#reactive-forms&quot;&gt;Reactive forms&lt;/a&gt; perform immutable changes in that each change to the data model produces a new data model rather than modifying the existing one. &lt;a href=&quot;glossary#template-driven-forms&quot;&gt;Template-driven forms&lt;/a&gt; perform mutable changes with &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; and &lt;a href=&quot;glossary#data-binding&quot;&gt;two-way data binding&lt;/a&gt; to modify the existing data model in place.</source>
          <target state="translated">Возможность изменять состояние значения после его создания. &lt;a href=&quot;glossary#reactive-forms&quot;&gt;Реактивные формы&lt;/a&gt; выполняют неизменные изменения, так как каждое изменение в модели данных создает новую модель данных, а не изменяет существующую. &lt;a href=&quot;glossary#template-driven-forms&quot;&gt;Формы на основе шаблонов&lt;/a&gt; выполняют изменяемые изменения с помощью &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; и &lt;a href=&quot;glossary#data-binding&quot;&gt;двусторонней привязки данных,&lt;/a&gt; чтобы изменить существующую модель данных на месте.</target>
        </trans-unit>
        <trans-unit id="caa4182924ebe66fa358bd4a3e14ba6d81b491fb" translate="yes" xml:space="preserve">
          <source>The ability to configure one or more providers at different levels opens up useful possibilities. For a look at the following scenarios in a working app, see the heroes use case examples.</source>
          <target state="translated">Возможность настройки одного или нескольких провайдеров на разных уровнях открывает полезные возможности.Для ознакомления со следующими сценариями в рабочем приложении посмотрите,как герои используют конкретные примеры.</target>
        </trans-unit>
        <trans-unit id="d357726f6694fec9b1683368af646f1226db5511" translate="yes" xml:space="preserve">
          <source>The ability to request &lt;a href=&quot;http#typed-response&quot;&gt;typed response objects&lt;/a&gt;.</source>
          <target state="translated">Возможность запрашивать &lt;a href=&quot;http#typed-response&quot;&gt;объекты типизированного ответа&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="50fe34565db9f623c1a4c2f1c8f3d0239b4b1371" translate="yes" xml:space="preserve">
          <source>The above command completes the following actions:</source>
          <target state="translated">Вышеуказанная команда завершает следующие действия:</target>
        </trans-unit>
        <trans-unit id="d10343d799b7008227efc9a02b184cf8a761ab84" translate="yes" xml:space="preserve">
          <source>The above example demonstrates changing a component's code to accommodate a pipe.</source>
          <target state="translated">Приведенный выше пример демонстрирует изменение кода компонента для размещения трубы.</target>
        </trans-unit>
        <trans-unit id="d5d6af0be00ddd39a1a4c1567712c9175938cf95" translate="yes" xml:space="preserve">
          <source>The absolute URL for the latter example, including the &lt;code&gt;localhost&lt;/code&gt; origin, is</source>
          <target state="translated">Абсолютный URL для последнего примера, включая &lt;code&gt;localhost&lt;/code&gt; источник,</target>
        </trans-unit>
        <trans-unit id="63cb971f43856a00f354567181daff31d8142b01" translate="yes" xml:space="preserve">
          <source>The absolute URL for the latter example, including the &lt;code&gt;localhost&lt;/code&gt; origin, is as follows:</source>
          <target state="translated">Абсолютный URL-адрес для последнего примера, включая происхождение &lt;code&gt;localhost&lt;/code&gt; , выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="c4e256b4477c3d36ae67c61de1ee6c1a8ff7190f" translate="yes" xml:space="preserve">
          <source>The abstract base class for the concrete form control classes &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt;. It provides their common behaviors and properties.</source>
          <target state="translated">Абстрактный базовый класс для конкретных классов управления &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/formarray&quot;&gt;FormArray&lt;/a&gt;&lt;/code&gt; . Это обеспечивает их общее поведение и свойства.</target>
        </trans-unit>
        <trans-unit id="402b1c3034ebb0af6c0f9e2efa6f13695bff7d6e" translate="yes" xml:space="preserve">
          <source>The abstraction of the form model promotes simplicity over structure. The template-driven form directive &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; is responsible for creating and managing the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance for a given form element. It's less explicit, but you no longer have direct control over the form model.</source>
          <target state="translated">Абстракция модели формы способствует простоте структуры. Управляемая &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; директива формы NgModel отвечает за создание и управление экземпляром &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; для данного элемента формы. Это менее очевидно, но вы больше не имеете прямого контроля над моделью формы.</target>
        </trans-unit>
        <trans-unit id="e35904284dfba5a413162707ebab87af73ae1a76" translate="yes" xml:space="preserve">
          <source>The act of subscribing to an observable triggers its execution, associates callbacks with it, and creates a &lt;code&gt;Subscription&lt;/code&gt; object that lets you unsubscribe.</source>
          <target state="translated">&lt;code&gt;Subscription&lt;/code&gt; на наблюдаемое запускает его выполнение, связывает с ним обратные вызовы и создает объект подписки, который позволяет отписаться.</target>
        </trans-unit>
        <trans-unit id="14342a1287cec6129e7b1a94b8d02bdf3a5f1f89" translate="yes" xml:space="preserve">
          <source>The actions and effects are as follows:</source>
          <target state="translated">Действия и эффекты являются следующими:</target>
        </trans-unit>
        <trans-unit id="6c6b7761a008c0eacb4c9720e87a44ff177306a4" translate="yes" xml:space="preserve">
          <source>The ad banner uses a helper directive called &lt;code&gt;AdDirective&lt;/code&gt; to mark valid insertion points in the template.</source>
          <target state="translated">В рекламном баннере используется вспомогательная директива &lt;code&gt;AdDirective&lt;/code&gt; для отметки допустимых точек вставки в шаблоне.</target>
        </trans-unit>
        <trans-unit id="727d776b678ae681b954ef7437bc5f9ca400e1a0" translate="yes" xml:space="preserve">
          <source>The admin feature file structure looks like this:</source>
          <target state="translated">Файловая структура функции администрирования выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="d83a95f34e4382511e2a151024543d721552d92d" translate="yes" xml:space="preserve">
          <source>The admin feature is now protected by the guard, albeit protected poorly.</source>
          <target state="translated">Функция администрирования теперь защищена охранником,хотя и плохо защищена.</target>
        </trans-unit>
        <trans-unit id="4747864fdf4438dfdda6f414c25b73c364d2192c" translate="yes" xml:space="preserve">
          <source>The admin feature is now protected by the guard, but the guard requires more customization to work fully.</source>
          <target state="translated">Функция администрирования теперь защищена охранником,но для полноценной работы охраннику требуется больше настроек.</target>
        </trans-unit>
        <trans-unit id="96aed0c722ab88a83207ea9b85e25c7e2f416849" translate="yes" xml:space="preserve">
          <source>The admin feature module contains the &lt;code&gt;AdminComponent&lt;/code&gt; used for routing within the feature module, a dashboard route and two unfinished components to manage crises and heroes.</source>
          <target state="translated">Функциональный модуль администратора содержит &lt;code&gt;AdminComponent&lt;/code&gt; , используемый для маршрутизации в функциональном модуле, маршрут панели мониторинга и два незавершенных компонента для управления кризисами и героями.</target>
        </trans-unit>
        <trans-unit id="ab267a14770ddb26fa34604e27d4f4b4861c73ef" translate="yes" xml:space="preserve">
          <source>The aggregate value of the &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt;, including any disabled controls.</source>
          <target state="translated">Совокупное значение &lt;code&gt;&lt;a href=&quot;formgroup&quot;&gt;FormGroup&lt;/a&gt;&lt;/code&gt; , включая все отключенные элементы управления.</target>
        </trans-unit>
        <trans-unit id="fd0a4fc774ffbf4fe8af10420d93bf7b1af6f41a" translate="yes" xml:space="preserve">
          <source>The aggregate value of the array, including any disabled controls.</source>
          <target state="translated">Совокупное значение массива,включая любые отключенные элементы управления.</target>
        </trans-unit>
        <trans-unit id="0f45a54234e4cd13b23944c4560457d66bc0cc78" translate="yes" xml:space="preserve">
          <source>The aliases control in the form group instance is now populated with a single control until more controls are added dynamically.</source>
          <target state="translated">Контроль псевдонимов в экземпляре группы форм теперь заполняется одним контролем,пока динамически не будет добавлено больше элементов управления.</target>
        </trans-unit>
        <trans-unit id="84256de55279155b325c264a0950f97a32368023" translate="yes" xml:space="preserve">
          <source>The alternative display includes an &lt;em&gt;Edit&lt;/em&gt; button whose click event is bound to an expression that clears the &lt;code&gt;submitted&lt;/code&gt; flag.</source>
          <target state="translated">Альтернативный дисплей включает кнопку &amp;laquo; &lt;em&gt;Изменить&amp;raquo;&lt;/em&gt; , событие щелчка которой связано с выражением, сбрасывающим &lt;code&gt;submitted&lt;/code&gt; флаг.</target>
        </trans-unit>
        <trans-unit id="e34fac3a099ab7998cdfc1b5ee75e1f1e111edc0" translate="yes" xml:space="preserve">
          <source>The alternative is a reactive form. For an introduction and comparison of both forms approaches, see &lt;a href=&quot;forms-overview&quot;&gt;Introduction to Angular Forms&lt;/a&gt;.</source>
          <target state="translated">Альтернатива - реактивная форма. Для ознакомления и сравнения подходов обеих форм см. &lt;a href=&quot;forms-overview&quot;&gt;Введение в угловые формы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1941cf59d3da9ef9cde211095dfc431f3816eae8" translate="yes" xml:space="preserve">
          <source>The alternative is a template-driven form. For an introduction and comparison of both forms approaches, see &lt;a href=&quot;forms-overview&quot;&gt;Introduction to Angular Forms&lt;/a&gt;.</source>
          <target state="translated">Альтернативой является шаблонно-управляемая форма. Для ознакомления и сравнения подходов обеих форм см. &lt;a href=&quot;forms-overview&quot;&gt;Введение в угловые формы&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2afb8502dfea931790e61f9165c97e230612b7ba" translate="yes" xml:space="preserve">
          <source>The anchor directive</source>
          <target state="translated">Директива по анкерам</target>
        </trans-unit>
        <trans-unit id="d6857daa67f01cf8f26a596689dfd09a6f899822" translate="yes" xml:space="preserve">
          <source>The anchor element in the parent view for this embedded view.</source>
          <target state="translated">Анкерный элемент в родительском представлении для этого встроенного представления.</target>
        </trans-unit>
        <trans-unit id="6c969a2cfd58f9109f69d4b274dd9f759efa168a" translate="yes" xml:space="preserve">
          <source>The angular i18n extractor tool generates a file with a translation unit entry for each &lt;code&gt;i18n&lt;/code&gt; attribute in a template. By default, it assigns each translation unit a unique id such as this one:</source>
          <target state="translated">Инструмент извлечения угловых i18n создает файл с записью единицы перевода для каждого атрибута &lt;code&gt;i18n&lt;/code&gt; в шаблоне. По умолчанию он присваивает каждой единице перевода уникальный идентификатор, такой как этот:</target>
        </trans-unit>
        <trans-unit id="b4ed70517cf63237f526da9af09e8982010ac6a8" translate="yes" xml:space="preserve">
          <source>The animation &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; function emits &lt;em&gt;callbacks&lt;/em&gt; when it starts and when it finishes. In the example below we have a component that contains an &lt;code&gt;openClose&lt;/code&gt; trigger.</source>
          <target state="translated">Функция анимации &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; генерирует &lt;em&gt;обратные вызовы&lt;/em&gt; при запуске и завершении. В приведенном ниже примере у нас есть компонент, который содержит триггер &lt;code&gt;openClose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f36fc312f8edc026c035d420a1e31c8179cfbb5" translate="yes" xml:space="preserve">
          <source>The animation &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; function emits &lt;em&gt;callbacks&lt;/em&gt; when it starts and when it finishes. The example below features a component that contains an &lt;code&gt;openClose&lt;/code&gt; trigger.</source>
          <target state="translated">Функция анимации &lt;code&gt;&lt;a href=&quot;../api/animations/trigger&quot;&gt;trigger&lt;/a&gt;()&lt;/code&gt; отправляет &lt;em&gt;обратные вызовы&lt;/em&gt; при запуске и завершении. В приведенном ниже примере показан компонент, содержащий триггер &lt;code&gt;openClose&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32c58e882c1163e1488d4a8deb42e2f4a125fcae" translate="yes" xml:space="preserve">
          <source>The animation code does the following after styling the views:</source>
          <target state="translated">Код анимации делает следующее после стилизации видов:</target>
        </trans-unit>
        <trans-unit id="39510d97650c99c8d731a36b1b5cab49af76350b" translate="yes" xml:space="preserve">
          <source>The animation definition does several things:</source>
          <target state="translated">Определение анимации делает несколько вещей:</target>
        </trans-unit>
        <trans-unit id="5c15153dc0c0d7f3e168540e74067114fac5f559" translate="yes" xml:space="preserve">
          <source>The animation does the following:</source>
          <target state="translated">Анимация делает следующее:</target>
        </trans-unit>
        <trans-unit id="359225b3095525891affab38ee53ef7bf8f5aa89" translate="yes" xml:space="preserve">
          <source>The animation is executed or triggered when the expression value changes to a new state.</source>
          <target state="translated">Анимация выполняется или запускается при изменении значения выражения в новое состояние.</target>
        </trans-unit>
        <trans-unit id="e37c1ace322c9054988c345df432382153656a5c" translate="yes" xml:space="preserve">
          <source>The animation phase in which the callback was invoked, one of &quot;start&quot; or &quot;done&quot;.</source>
          <target state="translated">Фаза анимации,в которой был вызван обратный вызов,одна из &quot;start&quot; или &quot;done&quot;.</target>
        </trans-unit>
        <trans-unit id="880fbe2cde1e59f262c1b3a83415a83ff7f6bba6" translate="yes" xml:space="preserve">
          <source>The answer is grounded in a fundamental characteristic of the Angular dependency-injection system. An injector can add providers &lt;em&gt;until it's first used&lt;/em&gt;. Once an injector starts creating and delivering services, its provider list is frozen; no new providers are allowed.</source>
          <target state="translated">Ответ основан на фундаментальной характеристике системы угловой зависимости-инжекции. Инжектор может добавлять провайдеров, &lt;em&gt;пока он не будет использован впервые&lt;/em&gt; . Как только инжектор начинает создавать и предоставлять услуги, список его поставщиков блокируется; новые провайдеры не допускаются.</target>
        </trans-unit>
        <trans-unit id="a0e08c28364e929009cd4fcd1fafe952fc3e50ec" translate="yes" xml:space="preserve">
          <source>The app ID to use in withServerTransition().</source>
          <target state="translated">Идентификатор приложения для использования в функцииServerTransition().</target>
        </trans-unit>
        <trans-unit id="25a56b32ae6b92c99875f10e2a3113c098b85214" translate="yes" xml:space="preserve">
          <source>The app and its translation file</source>
          <target state="translated">Приложение и файл его перевода</target>
        </trans-unit>
        <trans-unit id="db254e7060d83009dcee1a2432f520bc87c194ef" translate="yes" xml:space="preserve">
          <source>The app displays &quot;Miss Marple&quot; as the user instead of the default &quot;Sherlock Holmes&quot;.</source>
          <target state="translated">В качестве пользователя в приложении отображается &quot;Мисс Марпл&quot;,а не &quot;Шерлок Холмс&quot; по умолчанию.</target>
        </trans-unit>
        <trans-unit id="027095d9f26f0b5344d94ebc0591a3e4f039f94d" translate="yes" xml:space="preserve">
          <source>The app identifier to use for transition.</source>
          <target state="translated">Идентификатор приложения для перехода.</target>
        </trans-unit>
        <trans-unit id="c5d365172cdf1df024ceeae484b684f201469335" translate="yes" xml:space="preserve">
          <source>The app is already set up to use the Angular &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; and to use routing to navigate to the product list component you modified earlier. This section shows you how to define a route to show individual product details.</source>
          <target state="translated">Приложение уже настроено для использования Angular &lt;code&gt;&lt;a href=&quot;../api/router/router&quot;&gt;Router&lt;/a&gt;&lt;/code&gt; и использования маршрутизации для перехода к компоненту списка продуктов, который вы изменили ранее. В этом разделе показано, как определить маршрут для отображения сведений об отдельных продуктах.</target>
        </trans-unit>
        <trans-unit id="0ac4d8abd7c8f6886de0bd1d638135e72499484d" translate="yes" xml:space="preserve">
          <source>The app is already set up to use the Angular router and to use routing to navigate to the product list component you modified earlier. Let's define a route to show individual product details.</source>
          <target state="translated">Приложение уже настроено на использование Углового маршрутизатора и на использование маршрутизации для навигации к компоненту списка продуктов,который вы изменили ранее.Определим маршрут для отображения отдельных деталей продукта.</target>
        </trans-unit>
        <trans-unit id="afc7c88884fd7e0ec8cfc8b97f304e1f0a3e0b9e" translate="yes" xml:space="preserve">
          <source>The app now displays the name and description of each product in the list. Notice that the final product does not have a description paragraph. Because the product's description property is empty, Angular doesn't create the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element&amp;mdash;including the word &quot;Description&quot;.</source>
          <target state="translated">Приложение теперь отображает название и описание каждого продукта в списке. Обратите внимание, что конечный продукт не имеет описания параграфа. Поскольку свойство description продукта пустое, Angular не создает элемент &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; , включая слово &amp;laquo;Description&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="80b00fe83f126d464662ae9b7cb3f238f2be6cf8" translate="yes" xml:space="preserve">
          <source>The app now has a product list and sharing feature. In the process, you've learned to use five common features of Angular's template syntax:</source>
          <target state="translated">Приложение теперь имеет список продуктов и возможность совместного использования.В процессе работы вы научились использовать пять общих функций синтаксиса шаблонов Angular:</target>
        </trans-unit>
        <trans-unit id="0cdfea076c0644e956bc7ea95c84f491e7fb9c75" translate="yes" xml:space="preserve">
          <source>The app now shows unexpected behavior: When the user adds flying heroes, none of them appear under &quot;Heroes who fly.&quot; This happens because the code that adds a hero does so by pushing it onto the &lt;code&gt;heroes&lt;/code&gt; array:</source>
          <target state="translated">Приложение теперь демонстрирует неожиданное поведение: когда пользователь добавляет летающих героев, ни один из них не отображается в разделе &amp;laquo;Летящие герои&amp;raquo;. Это происходит потому, что код, добавляющий героя, делает это, помещая его в массив &lt;code&gt;heroes&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4004b359d1942125b76739a78f40d94105d5d4b8" translate="yes" xml:space="preserve">
          <source>The app probably defines more than a dozen financial instrument components. If you're lucky, they all implement the same base class whose API your &lt;code&gt;NewsComponent&lt;/code&gt; understands.</source>
          <target state="translated">Приложение, вероятно, определяет более десятка компонентов финансовых инструментов. Если вам повезет, все они реализуют один и тот же базовый класс, API &lt;code&gt;NewsComponent&lt;/code&gt; понимает ваш NewsComponent .</target>
        </trans-unit>
        <trans-unit id="dbbf8f3b96fb7d36c8dd7548739bff46943fc834" translate="yes" xml:space="preserve">
          <source>The app renders with a row of navigation buttons and the &lt;em&gt;Heroes&lt;/em&gt; view with its list of heroes.</source>
          <target state="translated">Приложение отображается с рядом кнопок навигации и представлением &amp;laquo; &lt;em&gt;Герои&amp;raquo;&lt;/em&gt; со списком героев.</target>
        </trans-unit>
        <trans-unit id="8180573e4452faa80c9d5ca340e48884d6391a8a" translate="yes" xml:space="preserve">
          <source>The app root with the navigation links.</source>
          <target state="translated">Корень приложения со ссылками навигации.</target>
        </trans-unit>
        <trans-unit id="6a56d757961d70a0621db9660baa94da256fbc99" translate="yes" xml:space="preserve">
          <source>The app's code defines the data directly inside the component, which isn't best practice. In a simple demo, however, it's fine.</source>
          <target state="translated">Код приложения определяет данные непосредственно внутри компонента,что не является лучшей практикой.Однако в простой демонстрационной версии все в порядке.</target>
        </trans-unit>
        <trans-unit id="ff5f015f00e1b7bcc2b5b1966f795b0d2d4559e6" translate="yes" xml:space="preserve">
          <source>The appendix material isn't essential. Continued reading is for the curious.</source>
          <target state="translated">Материал аппендикса не важен.Продолжение чтения для любопытных.</target>
        </trans-unit>
        <trans-unit id="b9a3afbab00f003cf626b8798a7fe9cd10bab21f" translate="yes" xml:space="preserve">
          <source>The application builder uses the &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; build tool, with default configuration options specified in the workspace configuration file (&lt;code&gt;angular.json&lt;/code&gt;) or with a named alternative configuration. A &quot;production&quot; configuration is created by default when you use the CLI to create the project, and you can use that configuration by specifying the &lt;code&gt;--configuration=&quot;production&quot;&lt;/code&gt; or the &lt;code&gt;--prod&lt;/code&gt; option.</source>
          <target state="translated">Конструктор приложений использует &lt;a href=&quot;https://webpack.js.org/&quot;&gt;инструмент&lt;/a&gt; сборки webpack с параметрами конфигурации по умолчанию, указанными в файле конфигурации рабочей области ( &lt;code&gt;angular.json&lt;/code&gt; ), или с именованной альтернативной конфигурацией. &amp;laquo;Производственная&amp;raquo; конфигурация создается по умолчанию, когда вы используете интерфейс командной строки для создания проекта, и вы можете использовать эту конфигурацию, указав параметр &lt;code&gt;--configuration=&quot;production&quot;&lt;/code&gt; или &lt;code&gt;--prod&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9dd362d11a1ef5a6531528132f21de5203087f19" translate="yes" xml:space="preserve">
          <source>The application builder uses the &lt;a href=&quot;https://webpack.js.org/&quot;&gt;webpack&lt;/a&gt; build tool, with default configuration options specified in the workspace configuration file (&lt;code&gt;angular.json&lt;/code&gt;) or with a named alternative configuration. A &quot;production&quot; configuration is created by default when you use the CLI to create the project, and you can use that configuration by specifying the &lt;code&gt;--configuration=&quot;production&quot;&lt;/code&gt; or the &lt;code&gt;--prod=&quot;true&quot;&lt;/code&gt; option.</source>
          <target state="translated">Компоновщик приложений использует &lt;a href=&quot;https://webpack.js.org/&quot;&gt;инструмент&lt;/a&gt; построения веб-пакета с параметрами конфигурации по умолчанию, указанными в файле конфигурации рабочего пространства ( &lt;code&gt;angular.json&lt;/code&gt; ) или с именованной альтернативной конфигурацией. &amp;laquo;Производственная&amp;raquo; конфигурация создается по умолчанию, когда вы используете CLI для создания проекта, и вы можете использовать эту конфигурацию, указав параметр &lt;code&gt;--configuration=&quot;production&quot;&lt;/code&gt; или &lt;code&gt;--prod=&quot;true&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d185e637c749a1de6fd1f1bdb29eb36d9acb4054" translate="yes" xml:space="preserve">
          <source>The application continues to work just the same, and you can use &lt;code&gt;AppRoutingModule&lt;/code&gt; as the central place to maintain future routing configuration.</source>
          <target state="translated">Приложение продолжает работать точно так же, и вы можете использовать &lt;code&gt;AppRoutingModule&lt;/code&gt; в качестве центрального места для поддержки будущей конфигурации маршрутизации.</target>
        </trans-unit>
        <trans-unit id="6b0dcdc763eccf27206af346ed5971a7a9acc7e5" translate="yes" xml:space="preserve">
          <source>The application enables the Forms feature and registers the created form component.</source>
          <target state="translated">Приложение включает функцию Формы и регистрирует созданный компонент формы.</target>
        </trans-unit>
        <trans-unit id="f896208078e253c6d0d2530b1eb7048144ab3290" translate="yes" xml:space="preserve">
          <source>The application fails if the user clicks that button because you haven't defined a &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; route yet.</source>
          <target state="translated">Приложение не работает, если пользователь нажимает эту кнопку, потому что вы еще не определили маршрут &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5a42b907321006905eeb06152c339b50f8d052cb" translate="yes" xml:space="preserve">
          <source>The application has a configured router. The shell component has a &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; where it can display views produced by the router. It has &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt;s that users can click to navigate via the router.</source>
          <target state="translated">В приложении настроен роутер. Компонент оболочки имеет &lt;code&gt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;RouterOutlet&lt;/a&gt;&lt;/code&gt; , где он может отображать представления, созданные маршрутизатором. У него есть &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; , который пользователи могут нажимать для навигации через маршрутизатор.</target>
        </trans-unit>
        <trans-unit id="c989c3b0f1e6e8f53d9a09edb55240976ed8f5a3" translate="yes" xml:space="preserve">
          <source>The application has three main feature areas:</source>
          <target state="translated">Приложение имеет три основные функциональные области:</target>
        </trans-unit>
        <trans-unit id="3065b933415b7cf762046554acdd3e29eb0e7df7" translate="yes" xml:space="preserve">
          <source>The application is currently bootstrapped using the AngularJS &lt;code&gt;ng-app&lt;/code&gt; directive attached to the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element of the host page. This will no longer work in the hybrid app. Switch to the &lt;a href=&quot;upgrade#bootstrapping-hybrid-applications&quot;&gt;ngUpgrade bootstrap&lt;/a&gt; method instead.</source>
          <target state="translated">В настоящее время приложение загружается с использованием директивы AngularJS &lt;code&gt;ng-app&lt;/code&gt; , прикрепленной к элементу &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; страницы хоста. Это больше не будет работать в гибридном приложении. &lt;a href=&quot;upgrade#bootstrapping-hybrid-applications&quot;&gt;Вместо&lt;/a&gt; этого переключитесь на метод начальной загрузки ngUpgrade .</target>
        </trans-unit>
        <trans-unit id="56483481d00ea138c4f54373a7ad2676459f0061" translate="yes" xml:space="preserve">
          <source>The application is still bootstrapped as a hybrid app. There's no need for that anymore.</source>
          <target state="translated">Приложение до сих пор загружается как гибридное приложение.В этом больше нет необходимости.</target>
        </trans-unit>
        <trans-unit id="659c0372b9f399b6beeebc7431038c78d51f057e" translate="yes" xml:space="preserve">
          <source>The application launches by bootstrapping the root &lt;code&gt;AppModule&lt;/code&gt;, which is also referred to as an &lt;code&gt;entryComponent&lt;/code&gt;. Among other things, the bootstrapping process creates the component(s) listed in the &lt;code&gt;bootstrap&lt;/code&gt; array and inserts each one into the browser DOM.</source>
          <target state="translated">Приложение запускается путем начальной загрузки корневого &lt;code&gt;AppModule&lt;/code&gt; , который также называется &lt;code&gt;entryComponent&lt;/code&gt; . Помимо прочего, процесс начальной загрузки создает компоненты, перечисленные в массиве &lt;code&gt;bootstrap&lt;/code&gt; и вставляет каждый из них в DOM браузера.</target>
        </trans-unit>
        <trans-unit id="2612b202ec4ed4dd6768f7b59b7e18c77e0da23e" translate="yes" xml:space="preserve">
          <source>The application needs a &lt;strong&gt;default route&lt;/strong&gt; to a valid page. The default page for this app is the list of heroes. The app should navigate there as if the user clicked the &quot;Heroes&quot; link or pasted &lt;code&gt;localhost:4200/heroes&lt;/code&gt; into the address bar.</source>
          <target state="translated">Приложению требуется &lt;strong&gt;маршрут&lt;/strong&gt; по &lt;strong&gt;умолчанию&lt;/strong&gt; к действительной странице. Страницей по умолчанию для этого приложения является список героев. Приложение должно перемещаться туда, как если бы пользователь щелкнул ссылку &amp;laquo;Герои&amp;raquo; или вставил &lt;code&gt;localhost:4200/heroes&lt;/code&gt; в адресную строку.</target>
        </trans-unit>
        <trans-unit id="092f74418595cfa6d21b651c2f1df92beae38cb2" translate="yes" xml:space="preserve">
          <source>The application needs a default route to a valid page. The default page for this app is the list of heroes. The app should navigate there as if the user clicked the &quot;Heroes&quot; link or pasted &lt;code&gt;localhost:4200/heroes&lt;/code&gt; into the address bar.</source>
          <target state="translated">Приложению требуется маршрут по умолчанию к действующей странице. Страницей по умолчанию для этого приложения является список героев. Приложение должно перемещаться туда, как если бы пользователь щелкнул ссылку &amp;laquo;Герои&amp;raquo; или вставил &lt;code&gt;localhost:4200/heroes&lt;/code&gt; в адресную строку.</target>
        </trans-unit>
        <trans-unit id="56d4a232475d28d6ebfb5660d2c232d4d967e1c8" translate="yes" xml:space="preserve">
          <source>The application now has a basic title. Next you will create a new component to display hero information and place that component in the application shell.</source>
          <target state="translated">Теперь у приложения есть основное название.Далее вы создадите новый компонент для отображения информации о герое и поместите этот компонент в оболочку приложения.</target>
        </trans-unit>
        <trans-unit id="829934fd6d860a7ab62d3a61aa92f15b4a6b5b9a" translate="yes" xml:space="preserve">
          <source>The application startup process is called &lt;strong&gt;bootstrapping&lt;/strong&gt;.</source>
          <target state="translated">Процесс запуска приложения называется &lt;strong&gt;начальной загрузкой&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2fe6858c50e849cafada85f8462c70c2503bf77f" translate="yes" xml:space="preserve">
          <source>The application still works. Clicking &quot;back&quot; returns to the hero list view.</source>
          <target state="translated">Приложение все еще работает.Нажатие кнопки &quot;назад&quot; возвращает к просмотру списка героев.</target>
        </trans-unit>
        <trans-unit id="046b8cfa4320e7c42d24954dca5b601917075b16" translate="yes" xml:space="preserve">
          <source>The application that StackBlitz generates for this guide comes with predefined shipping data in &lt;code&gt;assets/shipping.json&lt;/code&gt;. Use this data to add shipping prices for items in the cart.</source>
          <target state="translated">Приложение, которое StackBlitz создает для этого руководства, поставляется с предопределенными данными о доставке в &lt;code&gt;assets/shipping.json&lt;/code&gt; . Используйте эти данные, чтобы добавить стоимость доставки для товаров в корзине.</target>
        </trans-unit>
        <trans-unit id="f8660ff77e53d3af1d6b5d25c45bdc8f5312cc9f" translate="yes" xml:space="preserve">
          <source>The application will fail if the user clicks that button because you haven't defined a &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; route yet.</source>
          <target state="translated">Приложение не будет работать, если пользователь нажмет эту кнопку, потому что вы еще не определили маршрут &lt;code&gt;&quot;/sidekicks&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed54cdb1c808ba8673445f1d2779954ad42d3eed" translate="yes" xml:space="preserve">
          <source>The application-specific configuration files for the root application reside at the workspace root level. For a multi-project workspace, project-specific configuration files are in the project root, under &lt;code&gt;projects/project-name/&lt;/code&gt;.</source>
          <target state="translated">Специфичные для приложения файлы конфигурации для корневого приложения находятся на корневом уровне рабочей области. Для многопроектного рабочего пространства специфичные для проекта файлы конфигурации находятся в корневом каталоге проекта в &lt;code&gt;projects/project-name/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="13ff0efc21d065f969a6bbdb7ff0db29bd8d03e9" translate="yes" xml:space="preserve">
          <source>The architecture of an Angular application relies on certain fundamental concepts. The basic building blocks of the Angular framework are Angular components that are organized into &lt;em&gt;NgModules&lt;/em&gt;. NgModules collect related code into functional sets; an Angular app is defined by a set of NgModules. An app always has at least a &lt;em&gt;root module&lt;/em&gt; that enables bootstrapping, and typically has many more &lt;em&gt;feature modules&lt;/em&gt;.</source>
          <target state="translated">Архитектура приложения Angular основана на определенных фундаментальных концепциях. Основными строительными блоками фреймворка Angular являются компоненты Angular, которые организованы в &lt;em&gt;модули NgModules&lt;/em&gt; . NgModules собирают связанный код в функциональные наборы; Приложение Angular определяется набором NgModules. В приложении всегда есть как минимум &lt;em&gt;корневой модуль,&lt;/em&gt; который обеспечивает начальную загрузку, и, как правило, гораздо больше &lt;em&gt;функциональных модулей&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="212fe89436e2176aa80e03136d002159d641788a" translate="yes" xml:space="preserve">
          <source>The associated Angular directives are prefixed with &lt;code&gt;form&lt;/code&gt;, such as &lt;code&gt;formControl&lt;/code&gt;, &lt;code&gt;formGroup&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Связанные Angular-директивы имеют префикс &lt;code&gt;form&lt;/code&gt; , такой как &lt;code&gt;formControl&lt;/code&gt; , &lt;code&gt;formGroup&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrolname&quot;&gt;formControlName&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d1134f1a0eb2fdd5f3a8e0fb4e5b2e806b71dc5" translate="yes" xml:space="preserve">
          <source>The associated Angular directives are prefixed with &lt;code&gt;ng&lt;/code&gt; such as &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Соответствующие угловые директивы имеют префикс &lt;code&gt;ng&lt;/code&gt; , такой как &lt;code&gt;&lt;a href=&quot;../api/forms/ngform&quot;&gt;ngForm&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;ngModel&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodelgroup&quot;&gt;ngModelGroup&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b789263e42e1ba12a8ef45ee17e36b2666f38151" translate="yes" xml:space="preserve">
          <source>The asterisk (*) prefix</source>
          <target state="translated">Звездочка (*)префикса</target>
        </trans-unit>
        <trans-unit id="cf3cb31b10ef2ee87b7198fc18b7ebdda8470524" translate="yes" xml:space="preserve">
          <source>The asterisk (*) syntax is more clear than the desugared form. Use &lt;a href=&quot;structural-directives#ng-container&quot;&gt;&amp;lt;ng-container&amp;gt;&lt;/a&gt; when there's no single element to host the directive.</source>
          <target state="translated">Синтаксис звездочки (*) более понятен, чем десагаред. Используйте &lt;a href=&quot;structural-directives#ng-container&quot;&gt;&amp;lt;ng-container&amp;gt;,&lt;/a&gt; когда нет единого элемента для размещения директивы.</target>
        </trans-unit>
        <trans-unit id="751e6d020be23e3837cb4d0404a963f68690e654" translate="yes" xml:space="preserve">
          <source>The asterisk is &quot;syntactic sugar&quot; for something a bit more complicated. Internally, Angular translates the &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt; into a &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt;&lt;em&gt;element&lt;/em&gt;, wrapped around the host element, like this.</source>
          <target state="translated">Звездочка - это &amp;laquo;синтаксический сахар&amp;raquo; для чего-то более сложного. Внутренне Угловой переводит &lt;code&gt;*&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; &lt;em&gt; атрибут&lt;/em&gt; в &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; &lt;em&gt;элемент&lt;/em&gt; , обернутый вокруг принимающего элемента, как это.</target>
        </trans-unit>
        <trans-unit id="3b4a29f29c11882e809acfcb05aa2c373ab6faac" translate="yes" xml:space="preserve">
          <source>The async &lt;em&gt;beforeEach&lt;/em&gt;</source>
          <target state="translated">Асинхронный &lt;em&gt;beforeEach&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5c45708a98d5362eedbae57d26a0c6334302defc" translate="yes" xml:space="preserve">
          <source>The async observable was produced by an &lt;code&gt;asyncData&lt;/code&gt; helper. The &lt;code&gt;asyncData&lt;/code&gt; helper is a utility function that you'll have to write yourself, or you can copy this one from the sample code.</source>
          <target state="translated">Наблюдаемая асинхронность была создана помощником &lt;code&gt;asyncData&lt;/code&gt; . &lt;code&gt;asyncData&lt;/code&gt; помощник является функция полезности , что вам придется писать самостоятельно, или вы можете скопировать этот из образца кода.</target>
        </trans-unit>
        <trans-unit id="20002a8d76c8443af179a912eabfe7d2bd723ba6" translate="yes" xml:space="preserve">
          <source>The async validators registered with this group.</source>
          <target state="translated">Асинхронные валидаторы,зарегистрированные в этой группе.</target>
        </trans-unit>
        <trans-unit id="2fbd14477caf9ebf68f9c80df83d21e5c5c18a6c" translate="yes" xml:space="preserve">
          <source>The attribute name.</source>
          <target state="translated">Имя атрибута.</target>
        </trans-unit>
        <trans-unit id="46f07f08fc1b4870de9353911f6a05a26df4cdc3" translate="yes" xml:space="preserve">
          <source>The author of a guide page is responsible for the code sample that supports that page. The author must also write end-to-end tests for the sample.</source>
          <target state="translated">Автор справочной страницы отвечает за образец кода,который поддерживает эту страницу.Автор также должен написать сквозные тесты для этого образца.</target>
        </trans-unit>
        <trans-unit id="c55158bff8f14a5af007abfba787b3d08fdaf5eb" translate="yes" xml:space="preserve">
          <source>The authority to change the &lt;code&gt;navigation.json&lt;/code&gt; file is limited to a few core team members. But for a new guide page, you should suggest a navigation title and position in the left-side navigation panel called the &quot;side nav&quot;.</source>
          <target state="translated">Полномочия на изменение файла &lt;code&gt;navigation.json&lt;/code&gt; ограничены несколькими членами основной группы. Но для новой страницы руководства, вы должны предложить название и положение навигации на левой боковой панели навигации, называемой &amp;laquo;боковая навигация&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="c9cca8eb36b32cb72b65257ae685ecc71bda7db3" translate="yes" xml:space="preserve">
          <source>The balance of this guide is a set of appendices that elaborate some of the points you covered quickly above.</source>
          <target state="translated">Баланс этого руководства представляет собой набор приложений,которые подробно описывают некоторые из пунктов,которые вы быстро покрыли выше.</target>
        </trans-unit>
        <trans-unit id="62e80f8200c53dbaacf1f70959c15d031920c2db" translate="yes" xml:space="preserve">
          <source>The base &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; configuration for projects in the workspace. All other configuration files inherit from this base file. For more information, see the &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends&quot;&gt;Configuration inheritance with extends&lt;/a&gt; section of the TypeScript documentation.</source>
          <target state="translated">Базовая конфигурация &lt;a href=&quot;https://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; для проектов в рабочей области. Все остальные файлы конфигурации наследуются от этого базового файла. Дополнительные сведения см. В разделе &amp;laquo; &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/tsconfig-json.html#configuration-inheritance-with-extends&quot;&gt;Наследование конфигурации с&lt;/a&gt; расширениями&amp;raquo; документации TypeScript.</target>
        </trans-unit>
        <trans-unit id="522287acd1fcc8d0b65512fb495f5cbde0a52b11" translate="yes" xml:space="preserve">
          <source>The base URL for resolving absolute URL for HTTP requests. It must be set if &lt;code&gt;useAbsoluteUrl&lt;/code&gt; is true, and must consist of protocol, hostname, and optional port. This option has no effect if &lt;code&gt;useAbsoluteUrl&lt;/code&gt; is not enabled.</source>
          <target state="translated">Базовый URL-адрес для разрешения абсолютного URL-адреса для HTTP-запросов. Он должен быть установлен, если &lt;code&gt;useAbsoluteUrl&lt;/code&gt; имеет значение true, и должен состоять из протокола, имени хоста и необязательного порта. Этот параметр не действует, если не включен &lt;code&gt;useAbsoluteUrl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="28e0d32989f227e01be5c403027f23cddf2ddede" translate="yes" xml:space="preserve">
          <source>The base URL for the URL</source>
          <target state="translated">Базовый URL-адрес для URL-адреса</target>
        </trans-unit>
        <trans-unit id="57099de5f5cfe3bbdb7d5e04cfb9753de8a79ecf" translate="yes" xml:space="preserve">
          <source>The base class to implement.</source>
          <target state="translated">Базовый класс для реализации.</target>
        </trans-unit>
        <trans-unit id="3535061e9163fbc474fb7bea7e4b0e4221db4845" translate="yes" xml:space="preserve">
          <source>The base file &lt;code&gt;environment.ts&lt;/code&gt;, contains the default environment settings. For example:</source>
          <target state="translated">Базовый файл &lt;code&gt;environment.ts&lt;/code&gt; , содержит настройки среды по умолчанию. Например:</target>
        </trans-unit>
        <trans-unit id="eba0a2970a5d5416f712668687e7f717166ec56a" translate="yes" xml:space="preserve">
          <source>The base for the URL</source>
          <target state="translated">База для URL-адреса</target>
        </trans-unit>
        <trans-unit id="f719337e6149dc965109a2c27fc6710518952795" translate="yes" xml:space="preserve">
          <source>The baseline size for comparison.</source>
          <target state="translated">Базовый размер для сравнения.</target>
        </trans-unit>
        <trans-unit id="acd2918d5aedfdef3ee567f11a80ee9bf8efacd9" translate="yes" xml:space="preserve">
          <source>The basic NgModule</source>
          <target state="translated">Базовый NgМодуль</target>
        </trans-unit>
        <trans-unit id="effcca684bb65593213fc80d2f4bc7710498f947" translate="yes" xml:space="preserve">
          <source>The basic building blocks of an Angular application are &lt;em&gt;NgModules&lt;/em&gt;, which provide a compilation context for &lt;em&gt;components&lt;/em&gt;. NgModules collect related code into functional sets; an Angular app is defined by a set of NgModules. An app always has at least a &lt;em&gt;root module&lt;/em&gt; that enables bootstrapping, and typically has many more &lt;em&gt;feature modules&lt;/em&gt;.</source>
          <target state="translated">Основными строительными блоками приложения Angular являются &lt;em&gt;NgModules&lt;/em&gt; , которые предоставляют контекст компиляции для &lt;em&gt;компонентов&lt;/em&gt; . NgModules собирают связанный код в функциональные наборы; Angular-приложение определяется набором NgModules. В приложении всегда есть по крайней мере &lt;em&gt;корневой модуль,&lt;/em&gt; который включает загрузку, и обычно он имеет гораздо больше &lt;em&gt;функциональных модулей&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1cefca9c2b8409ec18d9ee7ef0e08cb1327edec9" translate="yes" xml:space="preserve">
          <source>The basic version can evolve to support a richer variety of questions, more graceful rendering, and superior user experience.</source>
          <target state="translated">Базовая версия может развиваться для поддержки более богатого разнообразия вопросов,более изящного рендеринга и превосходного пользовательского интерфейса.</target>
        </trans-unit>
        <trans-unit id="6650d02a072a3d2f1f14aae05a80f687c7755565" translate="yes" xml:space="preserve">
          <source>The basics of &lt;a href=&quot;architecture-components#template-syntax&quot;&gt;Angular template syntax&lt;/a&gt;.</source>
          <target state="translated">Основы &lt;a href=&quot;architecture-components#template-syntax&quot;&gt;синтаксиса шаблонов Angular&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="891e8b0d931b98e89c149cf4d8b8e9a75dec7e52" translate="yes" xml:space="preserve">
          <source>The basics of &lt;a href=&quot;template-syntax&quot;&gt;Angular template syntax&lt;/a&gt;.</source>
          <target state="translated">Основы &lt;a href=&quot;template-syntax&quot;&gt;синтаксиса шаблонов Angular&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fcfb49ac405d1244456d49ab443227db937f7f95" translate="yes" xml:space="preserve">
          <source>The beauty of marble testing is in the visual definition of the observable streams. This test defines a &lt;a href=&quot;testing#cold-observable&quot;&gt;&lt;em&gt;cold&lt;/em&gt; observable&lt;/a&gt; that waits three &lt;a href=&quot;testing#marble-frame&quot;&gt;frames&lt;/a&gt; (&lt;code&gt;---&lt;/code&gt;), emits a value (&lt;code&gt;x&lt;/code&gt;), and completes (&lt;code&gt;|&lt;/code&gt;). In the second argument you map the value marker (&lt;code&gt;x&lt;/code&gt;) to the emitted value (&lt;code&gt;testQuote&lt;/code&gt;).</source>
          <target state="translated">Прелесть мраморных испытаний заключается в визуальном определении наблюдаемых потоков. Этот тест определяет &lt;a href=&quot;testing#cold-observable&quot;&gt;наблюдаемую &lt;/a&gt;&lt;em&gt;холодную область,&lt;/em&gt; которая ожидает три &lt;a href=&quot;testing#marble-frame&quot;&gt;кадра&lt;/a&gt; ( &lt;code&gt;---&lt;/code&gt; ), выдает значение ( &lt;code&gt;x&lt;/code&gt; ) и завершает ( &lt;code&gt;|&lt;/code&gt; ). Во втором аргументе вы отображаете маркер значения ( &lt;code&gt;x&lt;/code&gt; ) на испускаемое значение ( &lt;code&gt;testQuote&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="043f7bfbada1679dd54dd8a56e0f46a600dbbd8c" translate="yes" xml:space="preserve">
          <source>The beauty of marble testing is in the visual definition of the observable streams. This test defines a &lt;a href=&quot;testing-components-scenarios#cold-observable&quot;&gt;&lt;em&gt;cold&lt;/em&gt; observable&lt;/a&gt; that waits three &lt;a href=&quot;testing-components-scenarios#marble-frame&quot;&gt;frames&lt;/a&gt; (&lt;code&gt;---&lt;/code&gt;), emits a value (&lt;code&gt;x&lt;/code&gt;), and completes (&lt;code&gt;|&lt;/code&gt;). In the second argument you map the value marker (&lt;code&gt;x&lt;/code&gt;) to the emitted value (&lt;code&gt;testQuote&lt;/code&gt;).</source>
          <target state="translated">Прелесть мраморных испытаний заключается в визуальном определении наблюдаемых потоков. Этот тест определяет &lt;a href=&quot;testing-components-scenarios#cold-observable&quot;&gt;&lt;em&gt;холодную&lt;/em&gt; наблюдаемую,&lt;/a&gt; которая ожидает три &lt;a href=&quot;testing-components-scenarios#marble-frame&quot;&gt;кадра&lt;/a&gt; ( &lt;code&gt;---&lt;/code&gt; ), выдает значение ( &lt;code&gt;x&lt;/code&gt; ) и завершает ( &lt;code&gt;|&lt;/code&gt; ). Во втором аргументе вы сопоставляете маркер значения ( &lt;code&gt;x&lt;/code&gt; ) с &lt;code&gt;testQuote&lt;/code&gt; значением ( testQuote ).</target>
        </trans-unit>
        <trans-unit id="2edba611517a05b39ecce086b35051547ded4fc7" translate="yes" xml:space="preserve">
          <source>The behavior is similar when you write a constructor that requires an injected class-based dependency. When you define a constructor parameter with the &lt;code&gt;HeroService&lt;/code&gt; class type, Angular knows to inject the service associated with that &lt;code&gt;HeroService&lt;/code&gt; class token:</source>
          <target state="translated">Поведение аналогично, когда вы пишете конструктор, который требует вставленной зависимости на основе классов. Когда вы определяете параметр конструктора с &lt;code&gt;HeroService&lt;/code&gt; класса HeroService , Angular знает, как внедрить службу, связанную с этим &lt;code&gt;HeroService&lt;/code&gt; класса HeroService :</target>
        </trans-unit>
        <trans-unit id="32153d084333f937ba427f5295fec97c1fe75cf8" translate="yes" xml:space="preserve">
          <source>The binding conveys information about the event. This information can include data values such as an event object, string, or number named &lt;code&gt;$event&lt;/code&gt;.</source>
          <target state="translated">Привязка передает информацию о событии. Эта информация может включать значения данных, такие как объект события, строка или число с именем &lt;code&gt;$event&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7d0b9ef8d2bdf9e1a86196d518bf9f9db67ec13e" translate="yes" xml:space="preserve">
          <source>The binding executes the statement within a context that includes the DOM event object, &lt;code&gt;$event&lt;/code&gt;.</source>
          <target state="translated">Привязка выполняет инструкцию в контексте, который включает объект события DOM, &lt;code&gt;$event&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e66feaf21874ec24c62d2c0bfdf3e80de0fdbb10" translate="yes" xml:space="preserve">
          <source>The binding matcher relies on AngularJS data binding</source>
          <target state="translated">Матчер связывания опирается на привязку данных AngularJS</target>
        </trans-unit>
        <trans-unit id="fde66a8e4a2d1977e8552f1e09947ea468bf5e21" translate="yes" xml:space="preserve">
          <source>The bootstrap zone for the upgrade application</source>
          <target state="translated">Зона загрузки для приложения обновления</target>
        </trans-unit>
        <trans-unit id="02e0a35afc164ea455b1247684f9f9299b769401" translate="yes" xml:space="preserve">
          <source>The bootstrapped root &lt;code&gt;AppComponent&lt;/code&gt; is an &lt;em&gt;entry component&lt;/em&gt;. True, its selector matches an element tag in &lt;code&gt;index.html&lt;/code&gt;. But &lt;code&gt;index.html&lt;/code&gt; isn't a component template and the &lt;code&gt;AppComponent&lt;/code&gt; selector doesn't match an element in any component template.</source>
          <target state="translated">&lt;code&gt;AppComponent&lt;/code&gt; корневой AppComponent является &lt;em&gt;компонентом ввода&lt;/em&gt; . Правда, его селектор соответствует тегу элемента в &lt;code&gt;index.html&lt;/code&gt; . Но &lt;code&gt;index.html&lt;/code&gt; не является шаблоном компонента, а селектор &lt;code&gt;AppComponent&lt;/code&gt; не соответствует элементу ни в одном шаблоне компонента.</target>
        </trans-unit>
        <trans-unit id="438a9cd3a363b134dfcd99e057df9d3a75cf0cef" translate="yes" xml:space="preserve">
          <source>The bootstrapped root component.</source>
          <target state="translated">Загрузочный корневой компонент.</target>
        </trans-unit>
        <trans-unit id="5399b75d7a78532d352ee3f6549ed287c3a81704" translate="yes" xml:space="preserve">
          <source>The brackets, &lt;code&gt;[]&lt;/code&gt;, cause Angular to evaluate the right-hand side of the assignment as a dynamic expression. Without the brackets, Angular treats the the right-hand side as a string literal and sets the property to that static value.</source>
          <target state="translated">Скобки &lt;code&gt;[]&lt;/code&gt; заставляют Angular оценивать правую часть присваивания как динамическое выражение. Без скобок Angular обрабатывает правую часть как строковый литерал и устанавливает для свойства это статическое значение.</target>
        </trans-unit>
        <trans-unit id="8ef4ee708285425cb9ef88beb31132640eba2132" translate="yes" xml:space="preserve">
          <source>The brackets, &lt;code&gt;[]&lt;/code&gt;, tell Angular to evaluate the template expression. If you omit the brackets, Angular treats the string as a constant and &lt;em&gt;initializes the target property&lt;/em&gt; with that string:</source>
          <target state="translated">Скобки, &lt;code&gt;[]&lt;/code&gt; , говорят Angular вычислять выражение шаблона. Если вы опустите скобки, Angular обрабатывает строку как константу и &lt;em&gt;инициализирует целевое свойство&lt;/em&gt; этой строкой:</target>
        </trans-unit>
        <trans-unit id="c1feb87ec9550df145615086e8f3767f244e3a08" translate="yes" xml:space="preserve">
          <source>The browser address bar shows &lt;code&gt;.../heroes&lt;/code&gt; as if you'd navigated there directly.</source>
          <target state="translated">В адресной строке браузера отображается &lt;code&gt;.../heroes&lt;/code&gt; , как если бы вы попали туда напрямую.</target>
        </trans-unit>
        <trans-unit id="bd60d31fa4f304dfebce4165416af0762306c2cf" translate="yes" xml:space="preserve">
          <source>The browser does not download the service worker script and &lt;code&gt;ngsw.json&lt;/code&gt; manifest file.</source>
          <target state="translated">Браузер не загружает рабочий скрипт сервиса и &lt;code&gt;ngsw.json&lt;/code&gt; манифеста ngsw.json .</target>
        </trans-unit>
        <trans-unit id="4dff3dc3654746ecbf5404102b359a8b2ed8a409" translate="yes" xml:space="preserve">
          <source>The browser doesn't process the HTML and instead displays it raw, as follows.</source>
          <target state="translated">Браузер не обрабатывает HTML и вместо этого отображает его в необработанном виде,как показано ниже.</target>
        </trans-unit>
        <trans-unit id="35b0e92376d69e4ef661396d137d20849c9d556f" translate="yes" xml:space="preserve">
          <source>The browser is a familiar model of application navigation:</source>
          <target state="translated">Браузер представляет собой привычную модель навигации по приложениям:</target>
        </trans-unit>
        <trans-unit id="15d36d861b545a684a9e5ea9c902708889325b8b" translate="yes" xml:space="preserve">
          <source>The browser now renders the following, omitting the previous examples for brevity:</source>
          <target state="translated">Теперь браузер делает следующее,опуская предыдущие примеры для краткости:</target>
        </trans-unit>
        <trans-unit id="4e64586da0c751f5944b08cc25ed0266a7ab13d6" translate="yes" xml:space="preserve">
          <source>The browser refreshes and displays the app title and heroes link, but not the heroes list.</source>
          <target state="translated">В браузере обновляется и отображается название приложения и ссылка &quot;Герои&quot;,но не список &quot;Герои&quot;.</target>
        </trans-unit>
        <trans-unit id="133c2ebe14781b8826924474cf293ac9fc41ab61" translate="yes" xml:space="preserve">
          <source>The browser refreshes and displays the hero's information.</source>
          <target state="translated">Браузер освежает и отображает информацию о герое.</target>
        </trans-unit>
        <trans-unit id="a8489bb56b8d3c19ce6ee0631e9a122a2265bf15" translate="yes" xml:space="preserve">
          <source>The browser refreshes and displays the new application title.</source>
          <target state="translated">Браузер обновляет и отображает новое название приложения.</target>
        </trans-unit>
        <trans-unit id="10d2bffee74f9f32b1e61f1be54989dd1c6cc5fa" translate="yes" xml:space="preserve">
          <source>The browser refreshes and now the hero's name is displayed in capital letters.</source>
          <target state="translated">Обновился браузер,и теперь имя героя отображается заглавными буквами.</target>
        </trans-unit>
        <trans-unit id="35ae0dc5e77b04c47f765fe14b310abb1d8a872a" translate="yes" xml:space="preserve">
          <source>The browser refreshes and the app crashes with a compiler error. &lt;code&gt;HeroService&lt;/code&gt; doesn't have a &lt;code&gt;getHero()&lt;/code&gt; method. Add it now.</source>
          <target state="translated">Браузер обновляется, и приложение вылетает с ошибкой компилятора. &lt;code&gt;HeroService&lt;/code&gt; не имеет &lt;code&gt;getHero()&lt;/code&gt; . Добавьте это сейчас.</target>
        </trans-unit>
        <trans-unit id="ddd180f39b4c9fc1fda12238a08d9a92883f1c13" translate="yes" xml:space="preserve">
          <source>The browser refreshes and the app is working again. You can click a hero in the dashboard or in the heroes list and navigate to that hero's detail view.</source>
          <target state="translated">Браузер обновляется,и приложение снова работает.Вы можете щелкнуть по герою на приборной панели или в списке героев и перейти к детальному виду этого героя.</target>
        </trans-unit>
        <trans-unit id="e88d32f27973b4cfeee563874f1886550dc5ac79" translate="yes" xml:space="preserve">
          <source>The browser refreshes and the app starts working again as it did before.</source>
          <target state="translated">Браузер обновляется,и приложение снова начинает работать,как раньше.</target>
        </trans-unit>
        <trans-unit id="ff713c5acce26c8a8f6436f37009b416e9435f49" translate="yes" xml:space="preserve">
          <source>The browser refreshes and the page displays the list of heroes. Scroll to the bottom to see the message from the &lt;code&gt;HeroService&lt;/code&gt; in the message area. Click the &quot;clear&quot; button and the message area disappears.</source>
          <target state="translated">Браузер обновится, и на странице отобразится список героев. Прокрутите вниз, чтобы увидеть сообщение от &lt;code&gt;HeroService&lt;/code&gt; в области сообщений. Нажмите кнопку &amp;laquo;Очистить&amp;raquo;, и область сообщений исчезнет.</target>
        </trans-unit>
        <trans-unit id="cdb7b4eed65968a0c60496c1330166de228b5429" translate="yes" xml:space="preserve">
          <source>The browser should refresh and display the app title but not the list of heroes.</source>
          <target state="translated">Браузер должен обновлять и отображать название приложения,но не список героев.</target>
        </trans-unit>
        <trans-unit id="3980e997a7b117fe62ffce3f3b2a0b5e77fea676" translate="yes" xml:space="preserve">
          <source>The browser won't display an &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; within a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Браузер не будет отображать &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; внутри &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="14e80d1c5f056a696f1915bb5d74d05712d1d29b" translate="yes" xml:space="preserve">
          <source>The build process uses &lt;a href=&quot;glossary#ahead-of-time-aot-compilation&quot;&gt;ahead-of-time (AOT) compilation&lt;/a&gt; to produce a small, fast, ready-to-run app. With Ivy in Angular version 9, AOT is used by default for both development and production builds, and AOT is required to localize component templates.</source>
          <target state="translated">В процессе сборки используется предварительная &lt;a href=&quot;glossary#ahead-of-time-aot-compilation&quot;&gt;компиляция (AOT)&lt;/a&gt; для создания небольшого, быстрого и готового к запуску приложения. В Ivy в Angular версии 9 AOT используется по умолчанию как для разработки, так и для производственной сборки, а AOT требуется для локализации шаблонов компонентов.</target>
        </trans-unit>
        <trans-unit id="92146b9358486bbcf5077ab8741177ac14e2a2bf" translate="yes" xml:space="preserve">
          <source>The build step is important if you haven't published your library as an npm package and then installed the package back into your app from npm. For instance, if you clone your git repository and run &lt;code&gt;npm install&lt;/code&gt;, your editor will show the &lt;code&gt;my-lib&lt;/code&gt; imports as missing if you haven't yet built your library.</source>
          <target state="translated">Шаг сборки важен, если вы не опубликовали свою библиотеку как пакет npm, а затем установили пакет обратно в приложение из npm. Например, если вы клонируете свой git-репозиторий и запускаете &lt;code&gt;npm install&lt;/code&gt; , ваш редактор покажет импорт &lt;code&gt;my-lib&lt;/code&gt; как отсутствующий, если вы еще не создали свою библиотеку.</target>
        </trans-unit>
        <trans-unit id="b332d6a59c4de48eb194eed9848b874deab58d55" translate="yes" xml:space="preserve">
          <source>The build system for apps, &lt;code&gt;@angular-devkit/build-angular&lt;/code&gt;, is based on &lt;code&gt;webpack&lt;/code&gt;, and is included in all new Angular CLI projects.</source>
          <target state="translated">Система сборки приложений &lt;code&gt;@angular-devkit/build-angular&lt;/code&gt; основана на &lt;code&gt;webpack&lt;/code&gt; и включена во все новые проекты Angular CLI.</target>
        </trans-unit>
        <trans-unit id="f7834a2399202ec039da155d28f4732ed390ded5" translate="yes" xml:space="preserve">
          <source>The build system for libraries is based on &lt;code&gt;ng-packagr&lt;/code&gt;. It is only added to your dependencies when you add a library using &lt;code&gt;ng generate library my-lib&lt;/code&gt;.</source>
          <target state="translated">Система сборки для библиотек основана на &lt;code&gt;ng-packagr&lt;/code&gt; . Он добавляется к вашим зависимостям только тогда, когда вы добавляете библиотеку с помощью &lt;code&gt;ng generate library my-lib&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e9d7c89f6355b9b74a563d2b71f0981c52287f26" translate="yes" xml:space="preserve">
          <source>The builder function is not executed until the scheduler returns a &lt;code&gt;BuilderRun&lt;/code&gt; control object. The CLI typically schedules tasks by calling the &lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt; function, and then resolves input options using the target definition in the &lt;code&gt;angular.json&lt;/code&gt; file.</source>
          <target state="translated">Функция построителя не выполняется до тех пор, пока планировщик не вернет &lt;code&gt;BuilderRun&lt;/code&gt; управления BuilderRun . CLI обычно планирует задачи, вызывая функцию &lt;code&gt;BuilderContext.scheduleTarget()&lt;/code&gt; , а затем разрешает параметры ввода с использованием определения цели в файле &lt;code&gt;angular.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60025dc689d82f5907f20636b33bf1a757ea740e" translate="yes" xml:space="preserve">
          <source>The builder handler function can be synchronous (return a value) or asynchronous (return a Promise), or it can watch and return multiple values (return an Observable). The return value or values must always be of type &lt;code&gt;BuilderOutput&lt;/code&gt;. This object contains a Boolean &lt;code&gt;success&lt;/code&gt; field and an optional &lt;code&gt;error&lt;/code&gt; field that can contain an error message.</source>
          <target state="translated">Функция обработчика построителя может быть синхронной (возвращать значение) или асинхронной (возвращать обещание), или она может наблюдать и возвращать несколько значений (возвращать наблюдаемое). Возвращаемое значение или значения всегда должны иметь тип &lt;code&gt;BuilderOutput&lt;/code&gt; . Этот объект содержит логическое поле &lt;code&gt;success&lt;/code&gt; и необязательное поле &lt;code&gt;error&lt;/code&gt; которое может содержать сообщение об ошибке.</target>
        </trans-unit>
        <trans-unit id="fbde09f90e553f00908e4a943a5ad8a525206f7a" translate="yes" xml:space="preserve">
          <source>The builder should always emit a &lt;code&gt;BuilderOutput&lt;/code&gt; object after each execution. Once it&amp;rsquo;s been executed, it can enter a watch mode, to be triggered by an external event. If an event triggers it to restart, the builder should execute the &lt;code&gt;BuilderContext.reportRunning()&lt;/code&gt; function to tell Architect that it is running again. This prevents Architect from stopping the builder if another run is scheduled.</source>
          <target state="translated">&lt;code&gt;BuilderOutput&lt;/code&gt; всегда должен генерировать объект BuilderOutput после каждого выполнения. После того, как он был выполнен, он может войти в режим просмотра, который будет вызван внешним событием. Если событие запускает его для перезапуска, сборщик должен выполнить функцию &lt;code&gt;BuilderContext.reportRunning()&lt;/code&gt; чтобы сообщить Architect, что он снова запускается. Это не позволяет архитектору остановить конструктор, если запланирован другой запуск.</target>
        </trans-unit>
        <trans-unit id="f49f4287e9775e1849d1d16275e5c1d9b379ace2" translate="yes" xml:space="preserve">
          <source>The built-in &lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt; provides a way to diagnose a mysteriously failing data binding or to inspect an object for future binding.</source>
          <target state="translated">Встроенный &lt;a href=&quot;../api/common/jsonpipe&quot;&gt;JsonPipe&lt;/a&gt; предоставляет способ диагностировать загадочно сбой привязки данных или проверить объект на предмет будущей привязки.</target>
        </trans-unit>
        <trans-unit id="dd3cba59a8ad93f9f11597609f818467f4d13876" translate="yes" xml:space="preserve">
          <source>The built-in AngularJS &lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;orderBy&lt;/code&gt; filters do not exist in Angular, so you need to do the filtering and sorting yourself.</source>
          <target state="translated">Встроенный &lt;code&gt;filter&lt;/code&gt; AngularJS и фильтры &lt;code&gt;orderBy&lt;/code&gt; не существуют в Angular, поэтому вам нужно выполнить фильтрацию и сортировку самостоятельно.</target>
        </trans-unit>
        <trans-unit id="27c4675a67e0eef6db4eb2262eed281861d1655a" translate="yes" xml:space="preserve">
          <source>The built-in browser DOM APIs don't automatically protect you from security vulnerabilities. For example, &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt;, the node available through &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt;, and many third-party APIs contain unsafe methods. In the same way, if you interact with other libraries that manipulate the DOM, you likely won't have the same automatic sanitization as with Angular interpolations. Avoid directly interacting with the DOM and instead use Angular templates where possible.</source>
          <target state="translated">Встроенные в DOM API-интерфейсы браузера автоматически не защищают вас от уязвимостей системы безопасности. Например, &lt;code&gt;&lt;a href=&quot;../api/platform-server/platformconfig#document&quot;&gt;document&lt;/a&gt;&lt;/code&gt; , узел, доступный через &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; , и многие сторонние API содержат небезопасные методы. Точно так же, если вы взаимодействуете с другими библиотеками, которые манипулируют DOM, у вас, скорее всего, не будет такой же автоматической очистки, как с угловыми интерполяциями. Избегайте прямого взаимодействия с DOM и вместо этого используйте шаблоны Angular, где это возможно.</target>
        </trans-unit>
        <trans-unit id="27a7000125e6fd5e12b64464ee5108af7e83095b" translate="yes" xml:space="preserve">
          <source>The built-in browser DOM APIs don't automatically protect you from security vulnerabilities. For example, &lt;code&gt;document&lt;/code&gt;, the node available through &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt;, and many third-party APIs contain unsafe methods. In the same way, if you interact with other libraries that manipulate the DOM, you likely won't have the same automatic sanitization as with Angular interpolations. Avoid directly interacting with the DOM and instead use Angular templates where possible.</source>
          <target state="translated">Встроенные в браузер DOM API не защищают вас от уязвимостей автоматически. Например, &lt;code&gt;document&lt;/code&gt; , узел, доступный через &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; , и многие сторонние API-интерфейсы содержат небезопасные методы. Точно так же, если вы взаимодействуете с другими библиотеками, которые манипулируют DOM, у вас, скорее всего, не будет такой же автоматической очистки, как с интерполяциями Angular. Избегайте прямого взаимодействия с DOM и вместо этого используйте шаблоны Angular, где это возможно.</target>
        </trans-unit>
        <trans-unit id="ba40c60b86170477c8de2f47167fe787c47e2c28" translate="yes" xml:space="preserve">
          <source>The built-in validators don't always match the exact use case of your application, so you sometimes need to create a custom validator.</source>
          <target state="translated">Встроенные валидаторы не всегда точно совпадают со случаем использования вашего приложения,поэтому иногда нужно создавать пользовательский валидатор.</target>
        </trans-unit>
        <trans-unit id="39744b033a42ddea775e1f902f35f4d12364d185" translate="yes" xml:space="preserve">
          <source>The bundle is injected by default, but you can set &lt;code&gt;inject&lt;/code&gt; to false to exclude the bundle from injection. For example, the following object values create and name a bundle that contains styles and scripts, and excludes it from injection:</source>
          <target state="translated">Пакет внедряется по умолчанию, но вы можете установить для параметра &lt;code&gt;inject&lt;/code&gt; значение false, чтобы исключить пакет из внедрения. Например, следующие значения объекта создают и называют пакет, содержащий стили и сценарии, и исключают его из внедрения:</target>
        </trans-unit>
        <trans-unit id="9ff88152d1671e545c950355e4856d89b2193246" translate="yes" xml:space="preserve">
          <source>The bundling configuration must take lazy loading into consideration. Because lazy-loaded modules aren't imported in JavaScript, bundlers exclude them by default. Bundlers don't know about the router configuration and can't create separate bundles for lazy-loaded modules. You would have to create these bundles manually.</source>
          <target state="translated">Конфигурация комплектации должна учитывать ленивую загрузку.Так как ленивые модули не импортируются в JavaScript,то по умолчанию пакеты их исключают.Бундлеры не знают о конфигурации маршрутизатора и не могут создавать отдельные пучки для ленивых модулей.Вам придется создавать эти пакеты вручную.</target>
        </trans-unit>
        <trans-unit id="d8708bfa23fa52e22c67b7fb716a9c92a7fff5da" translate="yes" xml:space="preserve">
          <source>The callback function</source>
          <target state="translated">Функция обратного вызова</target>
        </trans-unit>
        <trans-unit id="182e95510ced064ca2569f30358a8b0ad32b1752" translate="yes" xml:space="preserve">
          <source>The callback function name.</source>
          <target state="translated">Имя функции обратного вызова.</target>
        </trans-unit>
        <trans-unit id="1c1819b20078d68dd56a0742a60395369c73dff3" translate="yes" xml:space="preserve">
          <source>The callback function that is triggered for the listener when the URL changes.</source>
          <target state="translated">Функция обратного вызова,которая срабатывает для слушателя при изменении URL.</target>
        </trans-unit>
        <trans-unit id="f29546adb0a293b59216f583d9f5377716b2a139" translate="yes" xml:space="preserve">
          <source>The callback function that is triggered when an error occurs.</source>
          <target state="translated">Функция обратного вызова,которая срабатывает при возникновении ошибки.</target>
        </trans-unit>
        <trans-unit id="7e8f5213291a0dccb35f253ed9c74c78e2074d16" translate="yes" xml:space="preserve">
          <source>The callback function to register</source>
          <target state="translated">Функция обратного вызова для регистрации</target>
        </trans-unit>
        <trans-unit id="324517c75dfdff3257b5e48b32727d2719bed16b" translate="yes" xml:space="preserve">
          <source>The callback function.</source>
          <target state="translated">Функция обратного вызова.</target>
        </trans-unit>
        <trans-unit id="44ad2e447a43167d715b851a2f95ea045f8de842" translate="yes" xml:space="preserve">
          <source>The callback in the updated component method receives a typed data object, which is easier and safer to consume:</source>
          <target state="translated">Обратный вызов в методе обновленных компонентов получает типизированный объект данных,который легче и безопаснее потреблять:</target>
        </trans-unit>
        <trans-unit id="f7989cb817f3892197b63d55f812a8feae326844" translate="yes" xml:space="preserve">
          <source>The callback method to update the model from the view when requested</source>
          <target state="translated">Метод обратного вызова для обновления модели из представления при запросе</target>
        </trans-unit>
        <trans-unit id="9de01ab978bcaa115dbc245728b09c7ed9d15018" translate="yes" xml:space="preserve">
          <source>The callback to invoke when Angular is stable or the timeout expires whichever comes first.</source>
          <target state="translated">Обратный вызов для вызова,когда Угол стабилен или тайм-аут истекает в зависимости от того,что наступит раньше.</target>
        </trans-unit>
        <trans-unit id="f3a7dd48a909e9970fb1da807f08ca215abf3f7f" translate="yes" xml:space="preserve">
          <source>The callbacks attached to the component's &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; properties and/or the element's event properties.</source>
          <target state="translated">Обратные вызовы, прикрепленные к свойствам &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;&lt;/code&gt; компонента и / или свойствам события элемента.</target>
        </trans-unit>
        <trans-unit id="8360f1396c197b509f36e79abbf7f8bed7725084" translate="yes" xml:space="preserve">
          <source>The change detection strategy to use in the new component.</source>
          <target state="translated">Стратегия обнаружения изменений для использования в новом компоненте.</target>
        </trans-unit>
        <trans-unit id="d8068b6c20a86a548f92c8754f7e23bf2d24a0bb" translate="yes" xml:space="preserve">
          <source>The change detector for this component instance.</source>
          <target state="translated">Детектор изменений для этого компонента.</target>
        </trans-unit>
        <trans-unit id="b15fbfe9cced7df5ea9485a05cd1a48449704aef" translate="yes" xml:space="preserve">
          <source>The change detector ignores changes to elements of an array, so the pipe doesn't run.</source>
          <target state="translated">Детектор изменений игнорирует изменения элементов массива,поэтому труба не работает.</target>
        </trans-unit>
        <trans-unit id="67f5cdf216cb0945406d5e4965afcbf10659fe3b" translate="yes" xml:space="preserve">
          <source>The change handler function, which take a URL and a location history state.</source>
          <target state="translated">Функция обработчика изменений,которая принимает URL и состояние истории местоположения.</target>
        </trans-unit>
        <trans-unit id="3343e149a2f6f98e9fba5ecd1fe5527f3ae22370" translate="yes" xml:space="preserve">
          <source>The change tracking method plays a role in the efficiency of your application.</source>
          <target state="translated">Метод отслеживания изменений играет роль в эффективности вашего приложения.</target>
        </trans-unit>
        <trans-unit id="3093bb2a5ab46a9af4b283f32aac491c34e27270" translate="yes" xml:space="preserve">
          <source>The change-detection strategy to use for this component.</source>
          <target state="translated">Стратегия определения изменений для этого компонента.</target>
        </trans-unit>
        <trans-unit id="8d6b5bb93f2a36dfade3aee37283efde684f1ce3" translate="yes" xml:space="preserve">
          <source>The change-tracking method plays a role in the efficiency of your application.</source>
          <target state="translated">Метод отслеживания изменений играет важную роль в эффективности Вашего приложения.</target>
        </trans-unit>
        <trans-unit id="8d0536d0b3c762f5645d9b26cad792c0eb3a67f3" translate="yes" xml:space="preserve">
          <source>The changed properties.</source>
          <target state="translated">Измененные свойства.</target>
        </trans-unit>
        <trans-unit id="796e4cce084e241e06d5ee695cffadaaa1312b5b" translate="yes" xml:space="preserve">
          <source>The checked value</source>
          <target state="translated">Проверенное значение</target>
        </trans-unit>
        <trans-unit id="21eac29c346266d04fe1ecdfdafa7f73a1cb4c45" translate="yes" xml:space="preserve">
          <source>The child component class and template</source>
          <target state="translated">Класс и шаблон детского компонента</target>
        </trans-unit>
        <trans-unit id="98bc7cef6b7350b74e17dc76fe9675f388d460b3" translate="yes" xml:space="preserve">
          <source>The child component exposes an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; property with which it &lt;code&gt;emits&lt;/code&gt; events when something happens. The parent binds to that event property and reacts to those events.</source>
          <target state="translated">Дочерний компонент предоставляет свойство &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; , с которым он &lt;code&gt;emits&lt;/code&gt; события, когда что-то происходит. Родитель связывается с этим свойством события и реагирует на эти события.</target>
        </trans-unit>
        <trans-unit id="336bbbacf94a88998e2de3b06f6103b4483a4bcd" translate="yes" xml:space="preserve">
          <source>The child component uses the &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; property to raise an event to notify the parent of the change. To raise an event, an &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; must have the type of &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, which is a class in &lt;code&gt;@angular/core&lt;/code&gt; that you use to emit custom events.</source>
          <target state="translated">Дочерний компонент использует свойство &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; чтобы вызвать событие, чтобы уведомить родителя об изменении. Чтобы вызвать событие, &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; должен иметь тип &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; , который является классом в &lt;code&gt;@angular/core&lt;/code&gt; который вы используете для генерации настраиваемых событий.</target>
        </trans-unit>
        <trans-unit id="de2ff0bbaa0c25d3965be8b69d52b30ddde19e03" translate="yes" xml:space="preserve">
          <source>The child node to query.</source>
          <target state="translated">Детский узел для запроса.</target>
        </trans-unit>
        <trans-unit id="b838a97bc91f5bd4d3163e9eb632cf7f1cec63fa" translate="yes" xml:space="preserve">
          <source>The child node to remove.</source>
          <target state="translated">Детский узел,который нужно удалить.</target>
        </trans-unit>
        <trans-unit id="28113636f1f53ec2086b37193a976e332ddde875" translate="yes" xml:space="preserve">
          <source>The child route under the &lt;code&gt;AdminComponent&lt;/code&gt; has a &lt;code&gt;path&lt;/code&gt; and a &lt;code&gt;children&lt;/code&gt; property but it's not using a &lt;code&gt;component&lt;/code&gt;. This defines a &lt;em&gt;component-less&lt;/em&gt; route.</source>
          <target state="translated">Дочерний маршрут в &lt;code&gt;AdminComponent&lt;/code&gt; имеет &lt;code&gt;path&lt;/code&gt; и свойство &lt;code&gt;children&lt;/code&gt; , но не использует &lt;code&gt;component&lt;/code&gt; . Это определяет маршрут без &lt;em&gt;компонентов&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8909b8dd5928a2ca32979b4c5eb8646b0c1ed1ee" translate="yes" xml:space="preserve">
          <source>The child selector is &lt;code&gt;&amp;lt;app-input-output&amp;gt;&lt;/code&gt; with &lt;code&gt;item&lt;/code&gt; and &lt;code&gt;deleteRequest&lt;/code&gt; being &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; properties in the child component class. The property &lt;code&gt;currentItem&lt;/code&gt; and the method &lt;code&gt;crossOffItem()&lt;/code&gt; are both in the parent component class.</source>
          <target state="translated">Дочерний селектор - это &lt;code&gt;&amp;lt;app-input-output&amp;gt;&lt;/code&gt; , а &lt;code&gt;item&lt;/code&gt; и &lt;code&gt;deleteRequest&lt;/code&gt; являются свойствами &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;@&lt;a href=&quot;../api/core/output&quot;&gt;Output&lt;/a&gt;()&lt;/code&gt; в классе дочерних компонентов. Свойство &lt;code&gt;currentItem&lt;/code&gt; и метод &lt;code&gt;crossOffItem()&lt;/code&gt; находятся в родительском классе компонента.</target>
        </trans-unit>
        <trans-unit id="73fee6cefa43b5b1a569bd5a82fbaedf48efdb3f" translate="yes" xml:space="preserve">
          <source>The child's &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; property is an &lt;strong&gt;&lt;em&gt;output property&lt;/em&gt;&lt;/strong&gt;, typically adorned with an &lt;a href=&quot;inputs-outputs#output&quot;&gt;@Output() decorator&lt;/a&gt; as seen in this &lt;code&gt;VoterComponent&lt;/code&gt;:</source>
          <target state="translated">Ребенок &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; свойство является &lt;strong&gt;&lt;em&gt;выход свойства&lt;/em&gt;&lt;/strong&gt; , как правило , украшена &lt;a href=&quot;inputs-outputs#output&quot;&gt;@output () декоратор&lt;/a&gt; , как показано в этом &lt;code&gt;VoterComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="3ebaac95fe3c0183cb6f4ac86416f49de1d80ee6" translate="yes" xml:space="preserve">
          <source>The child's &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; property is an &lt;strong&gt;&lt;em&gt;output property&lt;/em&gt;&lt;/strong&gt;, typically adorned with an &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;@Output decoration&lt;/a&gt; as seen in this &lt;code&gt;VoterComponent&lt;/code&gt;:</source>
          <target state="translated">Ребенок &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; свойство является &lt;strong&gt;&lt;em&gt;выход свойства&lt;/em&gt;&lt;/strong&gt; , как правило , украшен с &lt;a href=&quot;template-syntax#inputs-outputs&quot;&gt;украшением @output&lt;/a&gt; , как показано в этом &lt;code&gt;VoterComponent&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="45c5e393302819e4131079c6fe541b42e859ee2b" translate="yes" xml:space="preserve">
          <source>The child's template has two controls. The first is an HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with a &lt;a href=&quot;template-reference-variables&quot;&gt;template reference variable&lt;/a&gt; , &lt;code&gt;#newItem&lt;/code&gt;, where the user types in an item name. The &lt;code&gt;value&lt;/code&gt; property of the &lt;code&gt;#newItem&lt;/code&gt; variable stores what the user types into the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">У дочернего шаблона есть два элемента управления. Первый - это HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; со &lt;a href=&quot;template-reference-variables&quot;&gt;ссылочной переменной шаблона&lt;/a&gt; , &lt;code&gt;#newItem&lt;/code&gt; , где пользователь вводит имя элемента. &lt;code&gt;value&lt;/code&gt; свойство &lt;code&gt;#newItem&lt;/code&gt; переменная хранит то , что пользователь вводит в &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d21e7048f090003f6988e5a99ace595822566be" translate="yes" xml:space="preserve">
          <source>The child's template has two controls. The first is an HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; with a &lt;a href=&quot;template-syntax#ref-var&quot;&gt;template reference variable&lt;/a&gt; , &lt;code&gt;#newItem&lt;/code&gt;, where the user types in an item name. Whatever the user types into the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; gets stored in the &lt;code&gt;#newItem&lt;/code&gt; variable.</source>
          <target state="translated">Шаблон ребенка имеет два элемента управления. Первый - это HTML &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; со &lt;a href=&quot;template-syntax#ref-var&quot;&gt;ссылочной переменной шаблона&lt;/a&gt; , &lt;code&gt;#newItem&lt;/code&gt; , где пользователь вводит имя элемента. Все, что пользователь вводит в &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; , сохраняется в переменной &lt;code&gt;#newItem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9815f861c67f39ad3a340bdc46586f227e38f0d3" translate="yes" xml:space="preserve">
          <source>The children of this route in the router state tree</source>
          <target state="translated">Дети этого маршрута в дереве состояния маршрутизатора</target>
        </trans-unit>
        <trans-unit id="88f283ebf90d73f7691965239f91c83b97c637c7" translate="yes" xml:space="preserve">
          <source>The children of this route in the router state tree.</source>
          <target state="translated">Дети этого маршрута в дереве состояния маршрутизатора.</target>
        </trans-unit>
        <trans-unit id="cd478977dac1aaeeb2106c8d25bd353cbf9a9248" translate="yes" xml:space="preserve">
          <source>The choice between inline and separate HTML is a matter of taste, circumstances, and organization policy. Here the app uses inline HTML because the template is small and the demo is simpler without the additional HTML file.</source>
          <target state="translated">Выбор между встроенным и отдельным HTML-дело вкуса,обстоятельств и политики организации.Здесь приложение использует встроенный HTML,потому что шаблон небольшой,а демонстрация проще без дополнительного HTML-файла.</target>
        </trans-unit>
        <trans-unit id="a4f2b79a3029d546fba201c93d23eabb4aa329ff" translate="yes" xml:space="preserve">
          <source>The class additionally declares three members: The array of phones, the name of the current sort key, and the search query. These are all things you have already been attaching to the controller but that weren't explicitly declared anywhere. The last one of these isn't actually used in the TypeScript code since it's only referred to in the template, but for the sake of clarity you should define all of the controller members.</source>
          <target state="translated">Класс дополнительно объявляет три члена:Массив телефонов,имя текущего ключа сортировки и поисковый запрос.Это все то,что вы уже прикрепили к контроллеру,но нигде явно не объявлено.Последний из них на самом деле не используется в коде TypeScript,так как он упоминается только в шаблоне,но для большей ясности необходимо определить все члены контроллера.</target>
        </trans-unit>
        <trans-unit id="386c4da46833767828efb663588fa86f0b351c05" translate="yes" xml:space="preserve">
          <source>The class name.</source>
          <target state="translated">Название класса.</target>
        </trans-unit>
        <trans-unit id="cfb8e2fa1ec41a7877ca2cf24377f2bbac37fc6a" translate="yes" xml:space="preserve">
          <source>The class we have created provides a service. The &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; decorator marks it as a service that can be injected, but Angular can't actually inject it anywhere until you configure an Angular &lt;a href=&quot;glossary#injector&quot;&gt;dependency injector&lt;/a&gt; with a &lt;a href=&quot;glossary#provider&quot;&gt;provider&lt;/a&gt; of that service.</source>
          <target state="translated">Созданный нами класс предоставляет сервис. В &lt;code&gt;@&lt;a href=&quot;../api/core/injectable&quot;&gt;Injectable&lt;/a&gt;()&lt;/code&gt; декораторе помечает его как сервис , который можно закачать, но Угловой фактически не может вводить его в любом месте , пока вы не настроите угловую &lt;a href=&quot;glossary#injector&quot;&gt;форсунку зависимости&lt;/a&gt; с &lt;a href=&quot;glossary#provider&quot;&gt;поставщиком&lt;/a&gt; этой услуги.</target>
        </trans-unit>
        <trans-unit id="9bb76e82307d0c0d07213e61c7341ddb5167bded" translate="yes" xml:space="preserve">
          <source>The class-provider syntax is a shorthand expression that expands into a provider configuration, defined by the &lt;a href=&quot;../api/core/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt; interface&lt;/a&gt;. The following code snippets shows how a class that is given as the &lt;code&gt;providers&lt;/code&gt; value is expanded into a full provider object.</source>
          <target state="translated">Синтаксис поставщика класса - это сокращенное выражение, которое расширяется до конфигурации поставщика, определенной &lt;a href=&quot;../api/core/provider&quot;&gt;интерфейсом &lt;/a&gt; &lt;code&gt;Provider&lt;/code&gt; . В следующих фрагментах кода показано, как класс, заданный в качестве значения &lt;code&gt;providers&lt;/code&gt; расширяется до полного объекта провайдера.</target>
        </trans-unit>
        <trans-unit id="e4378e45dd65db5c919f1a83b79501f5e742c2cc" translate="yes" xml:space="preserve">
          <source>The code behind it customizes how and where the DI framework provides dependencies. The use cases illustrate different ways to use the &lt;a href=&quot;dependency-injection-providers#provide&quot;&gt;&lt;em&gt;provide&lt;/em&gt; object literal&lt;/a&gt; to associate a definition object with a DI token.</source>
          <target state="translated">Код позади него настраивает, как и где структура DI обеспечивает зависимости. Варианты использования иллюстрируют различные способы использования &lt;a href=&quot;dependency-injection-providers#provide&quot;&gt;литерала &lt;/a&gt;&lt;em&gt;предоставления&lt;/em&gt; объекта для связывания объекта определения с маркером DI.</target>
        </trans-unit>
        <trans-unit id="970ee2781eada9efc03e7fd17ce53917ceee0e8f" translate="yes" xml:space="preserve">
          <source>The code binds to the &lt;code&gt;input&lt;/code&gt; event of the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element, which allows the code to listen for changes.</source>
          <target state="translated">Кодовый связывается с &lt;code&gt;input&lt;/code&gt; событием &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; элемента, что позволяет код , чтобы слушать изменения.</target>
        </trans-unit>
        <trans-unit id="f96fcb6e3857904aa9aa4b964b93a302cc574eb0" translate="yes" xml:space="preserve">
          <source>The code coverage percentages let you estimate how much of your code is tested. If your team decides on a set minimum amount to be unit tested, you can enforce this minimum with the Angular CLI.</source>
          <target state="translated">Проценты покрытия кода позволяют оценить,насколько сильно проверяется ваш код.Если ваша команда решит установить минимальную сумму для тестирования модулей,вы можете обеспечить соблюдение этого минимума с помощью Углового коэффициента покрытия.</target>
        </trans-unit>
        <trans-unit id="f5dce1db38cdc532ad3d7c72afd2efd8358fd816" translate="yes" xml:space="preserve">
          <source>The code for this color change might look like this.</source>
          <target state="translated">Код для такого изменения цвета может выглядеть так.</target>
        </trans-unit>
        <trans-unit id="cbeac1c9a0c35dbccb31f978400fc2fe2a5e2a4a" translate="yes" xml:space="preserve">
          <source>The code imports the Angular core library and the &lt;code&gt;Hero&lt;/code&gt; model you just created.</source>
          <target state="translated">Код импортирует библиотеку ядра Angular и модель &lt;code&gt;Hero&lt;/code&gt; ,которую вы только что создали.</target>
        </trans-unit>
        <trans-unit id="68f0a3da097460a4e1aa89208185bd3703ba9e66" translate="yes" xml:space="preserve">
          <source>The code must &lt;em&gt;detach&lt;/em&gt; the listener when the directive is destroyed to avoid memory leaks.</source>
          <target state="translated">Код должен &lt;em&gt;отсоединять&lt;/em&gt; слушателя, когда директива уничтожена, чтобы избежать утечек памяти.</target>
        </trans-unit>
        <trans-unit id="46c6a7d6568026289889fe5df8dce62319144252" translate="yes" xml:space="preserve">
          <source>The code of the error to check</source>
          <target state="translated">Код ошибки для проверки</target>
        </trans-unit>
        <trans-unit id="6f27e3b52d7266eb93e97fdd4a94b9f45b555f31" translate="yes" xml:space="preserve">
          <source>The code of the locale whose currency code we want.</source>
          <target state="translated">Код локали,валютный код которой мы хотим.</target>
        </trans-unit>
        <trans-unit id="10c0011222fc6b4866ac8487498f45dd83f02549" translate="yes" xml:space="preserve">
          <source>The code sample below shows how to use this feature.</source>
          <target state="translated">Пример кода,приведенный ниже,показывает,как пользоваться этой функцией.</target>
        </trans-unit>
        <trans-unit id="52a764918c407ee86da193bb47e766db1ee7d4cb" translate="yes" xml:space="preserve">
          <source>The code sets &lt;code&gt;packages$&lt;/code&gt; to this re-composed &lt;code&gt;Observable&lt;/code&gt; of search results. The template subscribes to &lt;code&gt;packages$&lt;/code&gt; with the &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt; and displays search results as they arrive.</source>
          <target state="translated">Код устанавливает &lt;code&gt;packages$&lt;/code&gt; в эту заново составленную &lt;code&gt;Observable&lt;/code&gt; результатов поиска. Шаблон подписывается на &lt;code&gt;packages$&lt;/code&gt; с &lt;a href=&quot;../api/common/asyncpipe&quot;&gt;AsyncPipe&lt;/a&gt; и отображает результаты поиска по мере их поступления.</target>
        </trans-unit>
        <trans-unit id="f6ed28c9f178e87589fbe392d21c577aea987e8f" translate="yes" xml:space="preserve">
          <source>The code snippet for this animation might look like this.</source>
          <target state="translated">Кодовый фрагмент для этой анимации может выглядеть так.</target>
        </trans-unit>
        <trans-unit id="688745f4df04e9e5819d70cbf741b8a833c173c4" translate="yes" xml:space="preserve">
          <source>The code with offsets specified would be as follows.</source>
          <target state="translated">Код с указанными смещениями будет выглядеть следующим образом.</target>
        </trans-unit>
        <trans-unit id="aa6d3cc42e5d49bc58e9f59a5de8ba857d85cdb3" translate="yes" xml:space="preserve">
          <source>The code you write in development using TypeScript is compiled and bundled into ES2015, the JavaScript syntax that is compatible with most browsers. All modern browsers support ES2015 and beyond, but in most cases, you still have to account for users accessing your application from a browser that doesn't. When targeting older browsers, &lt;a href=&quot;browser-support#polyfills&quot;&gt;polyfills&lt;/a&gt; can bridge the gap by providing functionality that doesn't exist in the older versions of JavaScript supported by those browsers.</source>
          <target state="translated">Код, который вы пишете в разработке с использованием TypeScript, компилируется и связывается с ES2015, синтаксисом JavaScript, который совместим с большинством браузеров. Все современные браузеры поддерживают ES2015 и более поздние версии, но в большинстве случаев вам все равно придется учитывать пользователей, обращающихся к вашему приложению из браузера, который этого не делает. &lt;a href=&quot;browser-support#polyfills&quot;&gt;Ориентируясь&lt;/a&gt; на старые браузеры, полифиллы могут сократить разрыв, предоставляя функции, которых нет в старых версиях JavaScript, поддерживаемых этими браузерами.</target>
        </trans-unit>
        <trans-unit id="b7e52622776d7c1959881d2e660fa7a5fa2ffc44" translate="yes" xml:space="preserve">
          <source>The code you write isn't immediately executable. For example, components have templates that contain custom elements, attribute directives, Angular binding declarations, and some peculiar syntax that clearly isn't native HTML.</source>
          <target state="translated">Код,который вы пишете,не является немедленно исполняемым.Например,компоненты имеют шаблоны,которые содержат пользовательские элементы,директивы атрибутов,объявления угловых привязок,и некоторый специфический синтаксис,который явно не является родным HTML.</target>
        </trans-unit>
        <trans-unit id="c98252757016faf472023968bc36999991222bc9" translate="yes" xml:space="preserve">
          <source>The collector accepts any function or static method that contains a single &lt;code&gt;return&lt;/code&gt; statement. The compiler, however, only supports macros in the form of functions or static methods that return an &lt;em&gt;expression&lt;/em&gt;.</source>
          <target state="translated">Сборщик принимает любую функцию или статический метод, который содержит один оператор &lt;code&gt;return&lt;/code&gt; . Однако компилятор поддерживает только макросы в форме функций или статических методов, которые возвращают &lt;em&gt;выражение&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="775ba5d48c201b80c8c8ae9cd1d70622bb775dd4" translate="yes" xml:space="preserve">
          <source>The collector can evaluate references to module-local &lt;code&gt;const&lt;/code&gt; declarations and initialized &lt;code&gt;var&lt;/code&gt; and &lt;code&gt;let&lt;/code&gt; declarations, effectively removing them from the &lt;code&gt;.metadata.json&lt;/code&gt; file.</source>
          <target state="translated">Сборщик может оценивать ссылки на локально-модульные объявления &lt;code&gt;const&lt;/code&gt; и инициализированные объявления &lt;code&gt;var&lt;/code&gt; и &lt;code&gt;let&lt;/code&gt; , эффективно удаляя их из файла &lt;code&gt;.metadata.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f9ef0ca017a80f8e54b27d25998685f9c051e40" translate="yes" xml:space="preserve">
          <source>The collector can represent a function call or object creation with &lt;code&gt;new&lt;/code&gt; as long as the syntax is valid. The compiler, however, can later refuse to generate a call to a &lt;em&gt;particular&lt;/em&gt; function or creation of a &lt;em&gt;particular&lt;/em&gt; object.</source>
          <target state="translated">Сборщик может представлять вызов функции или создание объекта с &lt;code&gt;new&lt;/code&gt; если синтаксис действителен. Однако позже компилятор может отказаться генерировать вызов &lt;em&gt;определенной&lt;/em&gt; функции или создание &lt;em&gt;определенного&lt;/em&gt; объекта.</target>
        </trans-unit>
        <trans-unit id="04cdce6617c90dd9e3023f3aef0d2359e60d969d" translate="yes" xml:space="preserve">
          <source>The collector makes no attempt to understand the metadata that it collects and outputs to &lt;code&gt;.metadata.json&lt;/code&gt;. It represents the metadata as best it can and records errors when it detects a metadata syntax violation. It's the compiler's job to interpret the &lt;code&gt;.metadata.json&lt;/code&gt; in the code generation phase.</source>
          <target state="translated">Сборщик не пытается понять, какие метаданные он собирает и выводит в &lt;code&gt;.metadata.json&lt;/code&gt; . Он представляет метаданные как можно лучше и записывает ошибки, когда обнаруживает нарушение синтаксиса метаданных. Работа компилятора заключается в интерпретации &lt;code&gt;.metadata.json&lt;/code&gt; на этапе генерации кода.</target>
        </trans-unit>
        <trans-unit id="c94e729ff8a27c730c157a9c5bcc96f4b75e729a" translate="yes" xml:space="preserve">
          <source>The collector reduces this expression to its equivalent &lt;em&gt;folded&lt;/em&gt; string:</source>
          <target state="translated">Сборщик сводит это выражение к эквивалентной &lt;em&gt;свернутой&lt;/em&gt; строке:</target>
        </trans-unit>
        <trans-unit id="2cb307c5d9a821cbeb1291555d897d427eb70d97" translate="yes" xml:space="preserve">
          <source>The colon (:) in the &lt;code&gt;path&lt;/code&gt; indicates that &lt;code&gt;:id&lt;/code&gt; is a placeholder for a specific hero &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">Двоеточие (:) в &lt;code&gt;path&lt;/code&gt; указывает, что &lt;code&gt;:id&lt;/code&gt; является заполнителем для конкретного &lt;code&gt;id&lt;/code&gt; героя .</target>
        </trans-unit>
        <trans-unit id="822a3863f5cea533bb631122ed79d3a3234d1e18" translate="yes" xml:space="preserve">
          <source>The command also adds the &lt;code&gt;HeroDetailComponent&lt;/code&gt; as a declaration in the &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; decorator of the &lt;code&gt;src/app/app.module.ts&lt;/code&gt; file.</source>
          <target state="translated">Команда также добавляет &lt;code&gt;HeroDetailComponent&lt;/code&gt; как объявление в &lt;code&gt;@&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; декоратор &lt;code&gt;src/app/app.module.ts&lt;/code&gt; файл.</target>
        </trans-unit>
        <trans-unit id="ecfcfd92ddc1e6e65d554b28efd2166d3482d5a8" translate="yes" xml:space="preserve">
          <source>The command can be used to build a project of type &quot;application&quot; or &quot;library&quot;. When used to build a library, a different builder is invoked, and only the &lt;code&gt;ts-config&lt;/code&gt;, &lt;code&gt;configuration&lt;/code&gt;, and &lt;code&gt;watch&lt;/code&gt; options are applied. All other options apply only to building applications.</source>
          <target state="translated">Команду можно использовать для создания проекта типа &amp;laquo;приложение&amp;raquo; или &amp;laquo;библиотека&amp;raquo;. При использовании для создания библиотеки вызывается другой сборщик, и применяются только параметры &lt;code&gt;ts-config&lt;/code&gt; , &lt;code&gt;configuration&lt;/code&gt; и &lt;code&gt;watch&lt;/code&gt; . Все остальные параметры применимы только к созданию приложений.</target>
        </trans-unit>
        <trans-unit id="512e225eda6cc1639eea07b5d955a25e07759d5d" translate="yes" xml:space="preserve">
          <source>The command can read and write files in three translation formats:</source>
          <target state="translated">Команда может читать и записывать файлы в трех форматах перевода:</target>
        </trans-unit>
        <trans-unit id="bf84844b9e75c71ac51168fed3b964af90b550ed" translate="yes" xml:space="preserve">
          <source>The command configures your app to use service workers by adding the service-worker package and generating the necessary support files.</source>
          <target state="translated">Команда настраивает ваше приложение на использование сервис-работников,добавляя пакет сервис-работник и генерируя необходимые файлы поддержки.</target>
        </trans-unit>
        <trans-unit id="60cbb6bb9baee1657c5aabadd3c30a172960868d" translate="yes" xml:space="preserve">
          <source>The command creates the following &lt;code&gt;HeroService&lt;/code&gt; skeleton.</source>
          <target state="translated">Команда создает следующий скелет &lt;code&gt;HeroService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb7672e8c965167d0a611c29c3e95da6a052157c" translate="yes" xml:space="preserve">
          <source>The command creates the following folder structure.</source>
          <target state="translated">Команда создает следующую структуру папок.</target>
        </trans-unit>
        <trans-unit id="23f6fb999f367965df4e9072feb6668a104067e3" translate="yes" xml:space="preserve">
          <source>The command generates a skeleton &lt;code&gt;HeroService&lt;/code&gt; class in &lt;code&gt;src/app/hero.service.ts&lt;/code&gt; as follows:</source>
          <target state="translated">Команда создает скелетный класс &lt;code&gt;HeroService&lt;/code&gt; в файле &lt;code&gt;src/app/hero.service.ts&lt;/code&gt; следующим образом:</target>
        </trans-unit>
        <trans-unit id="f84057f8a139bc98948e34aa76f1de7682fe3a1c" translate="yes" xml:space="preserve">
          <source>The command generates the new named schematic inside your collection, with a main &lt;code&gt;index.ts&lt;/code&gt; file and its associated test spec. It also adds the name, description, and factory function for the new schematic to the collection's schema in the &lt;code&gt;collection.json&lt;/code&gt; file.</source>
          <target state="translated">Команда генерирует новую именованную схему внутри вашей коллекции с основным файлом &lt;code&gt;index.ts&lt;/code&gt; и соответствующей тестовой спецификацией. Он также добавляет имя, описание и функцию фабрики для новой схемы в схему &lt;code&gt;collection.json&lt;/code&gt; файле collection.json .</target>
        </trans-unit>
        <trans-unit id="032b5d312dec4716aade5ccf6d268d0aee388017" translate="yes" xml:space="preserve">
          <source>The command is interactive. In this case, you must have or create a Firebase account, and authenticate using that account. The command prompts you to select a Firebase project for deployment</source>
          <target state="translated">Команда интерактивная.В этом случае вы должны иметь или создать учетную запись Firebase и аутентифицироваться,используя эту учетную запись.Команда попросит вас выбрать проект Firebase для установки</target>
        </trans-unit>
        <trans-unit id="e0238e94e6ed6d69aeb9b7186b5420a4c6cccd58" translate="yes" xml:space="preserve">
          <source>The command passes the builder the set of default options specified in the &quot;options&quot; section. If you pass the &lt;code&gt;--configuration=production&lt;/code&gt; flag, it uses the override values specified in the &lt;code&gt;production&lt;/code&gt; alternative configuration. You can specify further option overrides individually on the command line. You might also add more alternative configurations to the &lt;code&gt;build&lt;/code&gt; target, to define other environments such as &lt;code&gt;stage&lt;/code&gt; or &lt;code&gt;qa&lt;/code&gt;.</source>
          <target state="translated">Команда передает сборщику набор параметров по умолчанию, указанных в разделе &amp;laquo;Параметры&amp;raquo;. Если вы передаете &lt;code&gt;--configuration=production&lt;/code&gt; флаг, он использует значения на указанные в &lt;code&gt;production&lt;/code&gt; альтернативной конфигурации. Вы можете указать дополнительные опции отдельно в командной строке. Вы также можете добавить больше альтернативных конфигураций для цели &lt;code&gt;build&lt;/code&gt; , чтобы определить другие среды, такие как &lt;code&gt;stage&lt;/code&gt; или &lt;code&gt;qa&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb2912a10269d45a749dd2c9c3467ad9cb8c57d9" translate="yes" xml:space="preserve">
          <source>The command performs the following actions.</source>
          <target state="translated">Команда выполняет следующие действия.</target>
        </trans-unit>
        <trans-unit id="d05643aa6337d26acd02d68221885268cc4cdae7" translate="yes" xml:space="preserve">
          <source>The command replaces the original messages with translated text, and generates a new version of the app in the target language.</source>
          <target state="translated">Команда заменяет исходные сообщения переведенным текстом и генерирует новую версию приложения на целевом языке.</target>
        </trans-unit>
        <trans-unit id="26f3e6fe9701a42c19f4d2b3080bd162ab88cf06" translate="yes" xml:space="preserve">
          <source>The command scaffolds the following:</source>
          <target state="translated">Команда строит леса следующим образом:</target>
        </trans-unit>
        <trans-unit id="afe6b95bc4862f31c695e35a376168015bb8944a" translate="yes" xml:space="preserve">
          <source>The command takes an optional project name, as specified in the &lt;code&gt;projects&lt;/code&gt; section of the &lt;code&gt;angular.json&lt;/code&gt; workspace configuration file. When a project name is not supplied, executes the &lt;code&gt;deploy&lt;/code&gt; builder for the default project.</source>
          <target state="translated">Команда принимает необязательное имя проекта, как указано в разделе &lt;code&gt;projects&lt;/code&gt; в &lt;code&gt;angular.json&lt;/code&gt; конфигурации рабочей области angular.json . Если имя проекта не указано, выполняется построитель &lt;code&gt;deploy&lt;/code&gt; для проекта по умолчанию.</target>
        </trans-unit>
        <trans-unit id="e2367757f500b2b5e14443d0ffa2b6ea5d19b891" translate="yes" xml:space="preserve">
          <source>The command-line output includes extra logging from Bazel. We plan to reduce this in the future.</source>
          <target state="translated">Вывод командной строки включает в себя дополнительную запись в журнал от Bazel.Мы планируем уменьшить это в будущем.</target>
        </trans-unit>
        <trans-unit id="deebac4a0e4d9463353e1ba094d4311ba5bced82" translate="yes" xml:space="preserve">
          <source>The comment text.</source>
          <target state="translated">Текст комментария.</target>
        </trans-unit>
        <trans-unit id="f727b50279d21957a5ea426f3f6ef5d1c870a679" translate="yes" xml:space="preserve">
          <source>The common commands in Bazel are:</source>
          <target state="translated">Обычные команды в Бейзеле:</target>
        </trans-unit>
        <trans-unit id="4dce573efdc896e6762e4abce3c4ef846a95893d" translate="yes" xml:space="preserve">
          <source>The commonly-needed services, pipes, and directives provided by the Angular team. The &lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt;&lt;code&gt;HttpClientModule&lt;/code&gt;&lt;/a&gt; is also here, in the &lt;a href=&quot;../api/common/http&quot;&gt;&lt;code&gt;@angular/common/http&lt;/code&gt;&lt;/a&gt; subfolder. For more information, see the &lt;a href=&quot;http&quot;&gt;HttpClient guide&lt;/a&gt;.</source>
          <target state="translated">Обычно необходимые услуги, каналы и директивы, предоставляемые командой Angular. &lt;a href=&quot;../api/common/http/httpclientmodule&quot;&gt; &lt;code&gt;HttpClientModule&lt;/code&gt; &lt;/a&gt; также здесь, в &lt;a href=&quot;../api/common/http&quot;&gt; &lt;code&gt;@angular/common/http&lt;/code&gt; &lt;/a&gt; подпапок. Для получения дополнительной информации см. &lt;a href=&quot;http&quot;&gt;Руководство HttpClient&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91fd0e342d19fa9a326ec600aa54532eda1d7b70" translate="yes" xml:space="preserve">
          <source>The companion component class provides heroes, adds heroes into the array, and can reset the array.</source>
          <target state="translated">Класс сопутствующих компонентов предоставляет героев,добавляет героев в массив и может перезагружать массив.</target>
        </trans-unit>
        <trans-unit id="68d35ebfa15210ab8b65604e0da1d1214dd4d36d" translate="yes" xml:space="preserve">
          <source>The compilation and rendering pipeline used by Angular before version 9. Compare &lt;a href=&quot;glossary#ivy&quot;&gt;Ivy&lt;/a&gt;.</source>
          <target state="translated">Конвейер компиляции и рендеринга, используемый Angular до версии 9. Сравните &lt;a href=&quot;glossary#ivy&quot;&gt;Ivy&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5a7467e3bed5cce9e9e9439293f13cf8bbe37b57" translate="yes" xml:space="preserve">
          <source>The compilation process is the same whether the translation file is in &lt;code&gt;.xlf&lt;/code&gt; format or in another format that Angular understands, such as &lt;code&gt;.xtb&lt;/code&gt;.</source>
          <target state="translated">Процесс компиляции одинаков, независимо от того, находится ли файл перевода в формате &lt;code&gt;.xlf&lt;/code&gt; или в другом формате, понятном Angular, например &lt;code&gt;.xtb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="20e023920577f4366d6e8bec0ad15d5c1dfa3ffb" translate="yes" xml:space="preserve">
          <source>The compiler also has some major limitations in this mode:</source>
          <target state="translated">Компилятор также имеет некоторые существенные ограничения в этом режиме:</target>
        </trans-unit>
        <trans-unit id="8fbe0c27d00d7023e6067129fe8bbf4a24d10a6a" translate="yes" xml:space="preserve">
          <source>The compiler can only create instances of certain classes, supports only core decorators, and only supports calls to macros (functions or static methods) that return expressions.</source>
          <target state="translated">Компилятор может создавать только экземпляры определенных классов,поддерживает только декораторы ядра и поддерживает только вызовы макросов (функций или статических методов),которые возвращают выражения.</target>
        </trans-unit>
        <trans-unit id="bee270b045da60269f4d9d82490b3eec3eb7fedb" translate="yes" xml:space="preserve">
          <source>The compiler can only reference &lt;em&gt;exported symbols&lt;/em&gt;.</source>
          <target state="translated">Компилятор может ссылаться только на &lt;em&gt;экспортированные символы&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f3502a185963958198b9a85072d430d31a7108b0" translate="yes" xml:space="preserve">
          <source>The compiler can only resolve references to &lt;strong&gt;&lt;em&gt;exported&lt;/em&gt;&lt;/strong&gt; symbols. The collector, however, can evaluate an expression during collection and record the result in the &lt;code&gt;.metadata.json&lt;/code&gt;, rather than the original expression. This allows you to make limited use of non-exported symbols within expressions.</source>
          <target state="translated">Компилятор может разрешать только ссылки на &lt;strong&gt;&lt;em&gt;экспортируемые&lt;/em&gt;&lt;/strong&gt; символы. Однако сборщик может оценить выражение во время сбора и записать результат в &lt;code&gt;.metadata.json&lt;/code&gt; , а не в исходное выражение. Это позволяет вам ограниченно использовать неэкспортированные символы в выражениях.</target>
        </trans-unit>
        <trans-unit id="3de2fe859e8aea7858d788054cb92a56c24aa22f" translate="yes" xml:space="preserve">
          <source>The compiler can understand simple enum values but not complex values such as those derived from computed properties.</source>
          <target state="translated">Компилятор может понимать простые значения перечислений,но не сложные значения,такие как те,которые получены из вычисленных свойств.</target>
        </trans-unit>
        <trans-unit id="19f4a053ad2943ecc2598d242fc7f107dd7fdda1" translate="yes" xml:space="preserve">
          <source>The compiler cannot wait until runtime to get the template information. It must statically derive the value of the &lt;code&gt;someTemplate&lt;/code&gt; variable from the source code so that it can generate the component factory, which includes instructions for building the element based on the template.</source>
          <target state="translated">Компилятор не может дождаться времени выполнения, чтобы получить информацию о шаблоне. Он должен статически извлекать значение переменной &lt;code&gt;someTemplate&lt;/code&gt; из исходного кода, чтобы он мог генерировать фабрику компонентов, которая включает инструкции для построения элемента на основе шаблона.</target>
        </trans-unit>
        <trans-unit id="d06c32faa1f9142e1197fcd5ba01c4a27e47837e" translate="yes" xml:space="preserve">
          <source>The compiler could not refer to the &lt;code&gt;template&lt;/code&gt; constant because it isn't exported. The collector, however, can fold the &lt;code&gt;template&lt;/code&gt; constant into the metadata definition by in-lining its contents. The effect is the same as if you had written:</source>
          <target state="translated">Компилятор не может ссылаться на константу &lt;code&gt;template&lt;/code&gt; потому что она не экспортируется. Коллектор, однако, может сложить константу &lt;code&gt;template&lt;/code&gt; в определение метаданных, вставив его содержимое. Эффект такой же, как если бы вы написали:</target>
        </trans-unit>
        <trans-unit id="bd1ef8c2b73d68e5b22c9b1138d099eae1677b0f" translate="yes" xml:space="preserve">
          <source>The compiler does not currently support &lt;a href=&quot;aot-compiler#function-expression&quot;&gt;function expressions or lambda functions&lt;/a&gt;. For example, you cannot set a provider's &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; to an anonymous function or arrow function like this.</source>
          <target state="translated">Компилятор в настоящее время не поддерживает &lt;a href=&quot;aot-compiler#function-expression&quot;&gt;выражения функций или лямбда-функции&lt;/a&gt; . Например, вы не можете установить &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; провайдера на анонимную функцию или функцию стрелки, подобную этой.</target>
        </trans-unit>
        <trans-unit id="8d63679f07b8e39bfb7c96d9e6a44e1bdd0523a8" translate="yes" xml:space="preserve">
          <source>The compiler does not currently support &lt;a href=&quot;aot-compiler#function-expression&quot;&gt;function expressions or lambda functions&lt;/a&gt;. For example, you cannot set a provider's &lt;code&gt;useFactory&lt;/code&gt; to an anonymous function or arrow function like this.</source>
          <target state="translated">В настоящее время компилятор не поддерживает &lt;a href=&quot;aot-compiler#function-expression&quot;&gt;функциональные выражения или лямбда-функции&lt;/a&gt; . Например, вы не можете установить в &lt;code&gt;useFactory&lt;/code&gt; провайдера анонимную функцию или стрелочную функцию, подобную этой.</target>
        </trans-unit>
        <trans-unit id="420d66550ed93c835ed583c6e68981a83a4d586b" translate="yes" xml:space="preserve">
          <source>The compiler does not support references to variables assigned by &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/variable-declarations.html#destructuring&quot;&gt;destructuring&lt;/a&gt;.</source>
          <target state="translated">Компилятор не поддерживает ссылки на переменные, назначаемые при &lt;a href=&quot;https://www.typescriptlang.org/docs/handbook/variable-declarations.html#destructuring&quot;&gt;деструктурировании&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4e2d31b8c52b289dfbc88a3b991740e86003b12c" translate="yes" xml:space="preserve">
          <source>The compiler does not verify that the value of &lt;code&gt;user.address.city&lt;/code&gt; is assignable to the city input of the &lt;code&gt;&amp;lt;map&amp;gt;&lt;/code&gt; component.</source>
          <target state="translated">Компилятор не проверяет, можно ли &lt;code&gt;user.address.city&lt;/code&gt; значение user.address.city входу city компонента &lt;code&gt;&amp;lt;map&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="858c40dd3910dea8d82725091f2c0604dc6827af" translate="yes" xml:space="preserve">
          <source>The compiler does the rewriting during the emit of the &lt;code&gt;.js&lt;/code&gt; file. It does not, however, rewrite the &lt;code&gt;.d.ts&lt;/code&gt; file, so TypeScript doesn't recognize it as being an export. and it does not interfere with the ES module's exported API.</source>
          <target state="translated">Компилятор выполняет переписывание во время &lt;code&gt;.js&lt;/code&gt; файла .js . Однако он не переписывает файл &lt;code&gt;.d.ts&lt;/code&gt; , поэтому TypeScript не распознает его как экспорт. и это не мешает экспортированному API модуля ES.</target>
        </trans-unit>
        <trans-unit id="157b36dfa249eaae0f0223d7b4e275b5742dd33b" translate="yes" xml:space="preserve">
          <source>The compiler encountered a JavaScript ES2015 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals&quot;&gt;tagged template expression&lt;/a&gt; such as the following.</source>
          <target state="translated">Компилятор обнаружил теговое &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals&quot;&gt;выражение&lt;/a&gt; JavaScript с кодом ES2015, например следующее.</target>
        </trans-unit>
        <trans-unit id="1f7ded75927c1788a32dd4918360a2ddcd0a071f" translate="yes" xml:space="preserve">
          <source>The compiler encountered a referenced to a locally defined symbol that either wasn't exported or wasn't initialized.</source>
          <target state="translated">Компилятор столкнулся со ссылкой на локально определенный символ,который либо не был экспортирован,либо не был инициализирован.</target>
        </trans-unit>
        <trans-unit id="98ec5135addca132edc67362962593357c1995fe" translate="yes" xml:space="preserve">
          <source>The compiler erases &lt;em&gt;type position&lt;/em&gt; references after conversion from TypeScript, so they have no impact on tree-shaking.</source>
          <target state="translated">Компилятор стирает ссылки на &lt;em&gt;позиции типов&lt;/em&gt; после преобразования из TypeScript, поэтому они не влияют на встряхивание дерева.</target>
        </trans-unit>
        <trans-unit id="ca1bd41286b7b47d0a30a94f678cfe97b2c0aa55" translate="yes" xml:space="preserve">
          <source>The compiler finds a pipe if the pipe's &lt;em&gt;name&lt;/em&gt; appears within the pipe syntax of the template HTML.</source>
          <target state="translated">Компилятор находит трубу , если трубы &lt;em&gt;имя&lt;/em&gt; появляется в синтаксисе трубы шаблона HTML.</target>
        </trans-unit>
        <trans-unit id="85ca245c9abcc7994f5066093444c00be9929c1e" translate="yes" xml:space="preserve">
          <source>The compiler found a reference to an exported variable or static field that wasn't initialized. It needs the value of that variable to generate code.</source>
          <target state="translated">Компилятор нашел ссылку на экспортируемую переменную или статическое поле,которое не было инициализировано.Для генерации кода ему необходимо значение этой переменной.</target>
        </trans-unit>
        <trans-unit id="8ae63bcc430b2dd230e7e26c813c3c02cb2734f3" translate="yes" xml:space="preserve">
          <source>The compiler generates the component factory, which includes the &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; provider code, in a separate module. &lt;em&gt;That&lt;/em&gt; factory module can't reach back to &lt;em&gt;this&lt;/em&gt; source module to access the local (non-exported) &lt;code&gt;foo&lt;/code&gt; variable.</source>
          <target state="translated">Компилятор генерирует фабрику компонентов, которая включает в &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; код поставщика useValue , в отдельном модуле. &lt;em&gt;Этот&lt;/em&gt; фабричный модуль не может обратиться к &lt;em&gt;этому&lt;/em&gt; исходному модулю для доступа к локальной (не экспортируемой) переменной &lt;code&gt;foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92ce2206bc50448555d44e682fc1007463818f9c" translate="yes" xml:space="preserve">
          <source>The compiler generates the component factory, which includes the &lt;code&gt;useValue&lt;/code&gt; provider code, in a separate module. &lt;em&gt;That&lt;/em&gt; factory module can't reach back to &lt;em&gt;this&lt;/em&gt; source module to access the local (non-exported) &lt;code&gt;foo&lt;/code&gt; variable.</source>
          <target state="translated">Компилятор создает фабрику компонентов, которая включает в &lt;code&gt;useValue&lt;/code&gt; код поставщика useValue , в отдельном модуле. &lt;em&gt;Этот&lt;/em&gt; фабричный модуль не может обратиться к &lt;em&gt;этому&lt;/em&gt; исходному модулю для доступа к локальной (неэкспортированной) переменной &lt;code&gt;foo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0712bff79b6ba8bd1174d1e3baa5133a297e4d4c" translate="yes" xml:space="preserve">
          <source>The compiler handles token references in these positions differently.</source>
          <target state="translated">Компилятор обрабатывает токеновые ссылки в этих позициях по-разному.</target>
        </trans-unit>
        <trans-unit id="1c2d272b65afaacb9c96d83311fa7679569cb638" translate="yes" xml:space="preserve">
          <source>The compiler must retain &lt;em&gt;value position&lt;/em&gt; references at runtime, which prevents the component from being tree-shaken.</source>
          <target state="translated">Компилятор должен сохранять ссылки на &lt;em&gt;позиции значений&lt;/em&gt; во время выполнения, что предотвращает раскол дерева компонента.</target>
        </trans-unit>
        <trans-unit id="4ada9db2a3fbbffaa6e62a942bdef132fbfb3595" translate="yes" xml:space="preserve">
          <source>The compiler needs the value of the &lt;code&gt;template&lt;/code&gt; property &lt;em&gt;right now&lt;/em&gt; to generate the component factory. The variable reference alone is insufficient. Prefixing the declaration with &lt;code&gt;export&lt;/code&gt; merely produces a new error, &quot;&lt;a href=&quot;aot-metadata-errors#only-initialized-variables&quot;&gt;&lt;code&gt;Only initialized variables and constants can be referenced&lt;/code&gt;&lt;/a&gt;&quot;.</source>
          <target state="translated">Компилятору необходимо значение свойства &lt;code&gt;template&lt;/code&gt; &lt;em&gt;прямо сейчас,&lt;/em&gt; чтобы сгенерировать фабрику компонентов. Одной ссылки на переменную недостаточно. Добавление префикса к объявлению с помощью &lt;code&gt;export&lt;/code&gt; приводит к новой ошибке: &amp;laquo; &lt;a href=&quot;aot-metadata-errors#only-initialized-variables&quot;&gt; &lt;code&gt;Only initialized variables and constants can be referenced&lt;/code&gt; &lt;/a&gt; &amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="126c486c473104383ae1229ed43b46dfdfc50d01" translate="yes" xml:space="preserve">
          <source>The compiler only allows metadata that create instances of the class &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;@angular/core&lt;/code&gt;.</source>
          <target state="translated">Компилятор допускает только метаданные, которые создают экземпляры класса &lt;code&gt;&lt;a href=&quot;../api/core/injectiontoken&quot;&gt;InjectionToken&lt;/a&gt;&lt;/code&gt; из &lt;code&gt;@angular/core&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9f89138d6d0f2fb62cfc6fb9e28cc12abb7395f" translate="yes" xml:space="preserve">
          <source>The compiler only supports metadata for the &lt;a href=&quot;../api/core#decorators&quot;&gt;Angular decorators in the &lt;code&gt;@angular/core&lt;/code&gt; module&lt;/a&gt;.</source>
          <target state="translated">Компилятор поддерживает только метаданные для &lt;a href=&quot;../api/core#decorators&quot;&gt;угловых декораторов в модуле &lt;code&gt;@angular/core&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc097f6a4e195c52e2bb0c422611001de27e4295" translate="yes" xml:space="preserve">
          <source>The compiler starts with the entry components, then it generates code for the declared components it &lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;finds&lt;/a&gt; in an entry component's template, then for the declared components it discovers in the templates of previously compiled components, and so on. At the end of the process, the compiler has generated code for every entry component and every component reachable from an entry component.</source>
          <target state="translated">Компилятор начинается с компонентов ввода, затем он генерирует код для объявленных компонентов, которые он &lt;a href=&quot;ngmodule-faq#q-template-reference&quot;&gt;находит&lt;/a&gt; в шаблоне компонента ввода, затем для объявленных компонентов, которые он обнаруживает в шаблонах ранее скомпилированных компонентов, и так далее. В конце процесса компилятор сгенерировал код для каждого компонента ввода и каждого компонента, доступного из компонента ввода.</target>
        </trans-unit>
        <trans-unit id="30de544841894f2a949ed7ed373dd95bbee68599" translate="yes" xml:space="preserve">
          <source>The compiler treats object literals containing the fields &lt;code&gt;useClass&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;data&lt;/code&gt; specially, converting the expression initializing one of these fields into an exported variable that replaces the expression. This process of rewriting these expressions removes all the restrictions on what can be in them because the compiler doesn't need to know the expression's value&amp;mdash;it just needs to be able to generate a reference to the value.</source>
          <target state="translated">Компилятор обрабатывает литералы объектов, содержащие поля &lt;code&gt;useClass&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/valuesansprovider#useValue&quot;&gt;useValue&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../api/core/factorysansprovider#useFactory&quot;&gt;useFactory&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;data&lt;/code&gt; частности, преобразовывая выражение, инициализирующее одно из этих полей, в экспортируемую переменную, которая заменяет выражение. Этот процесс переписывания этих выражений снимает все ограничения на то, что может быть в них, потому что компилятору не нужно знать значение выражения - ему просто нужно иметь возможность генерировать ссылку на значение.</target>
        </trans-unit>
        <trans-unit id="465dc08186ad9c2bbff559d79ad3f0253ec651d2" translate="yes" xml:space="preserve">
          <source>The compiler treats object literals containing the fields &lt;code&gt;useClass&lt;/code&gt;, &lt;code&gt;useValue&lt;/code&gt;, &lt;code&gt;useFactory&lt;/code&gt;, and &lt;code&gt;data&lt;/code&gt; specially, converting the expression initializing one of these fields into an exported variable that replaces the expression. This process of rewriting these expressions removes all the restrictions on what can be in them because the compiler doesn't need to know the expression's value&amp;mdash;it just needs to be able to generate a reference to the value.</source>
          <target state="translated">Компилятор обрабатывает объектные литералы, содержащие поля &lt;code&gt;useClass&lt;/code&gt; , &lt;code&gt;useValue&lt;/code&gt; , &lt;code&gt;useFactory&lt;/code&gt; и &lt;code&gt;data&lt;/code&gt; специально, преобразовывая выражение, инициализирующее одно из этих полей, в экспортируемую переменную, которая заменяет выражение. Этот процесс перезаписи этих выражений снимает все ограничения на то, что может быть в них, потому что компилятору не нужно знать значение выражения - ему просто нужно иметь возможность сгенерировать ссылку на значение.</target>
        </trans-unit>
        <trans-unit id="db26295d71e3539c97b99511069043f20a6fd3aa" translate="yes" xml:space="preserve">
          <source>The compiler treats this usage as if you had written:</source>
          <target state="translated">Компилятор относится к этому использованию так,как будто вы написали:</target>
        </trans-unit>
        <trans-unit id="24b187f48898ccf4dbc0fdd64dfa738c3e7bfd6e" translate="yes" xml:space="preserve">
          <source>The compiler understands all syntax forms that the collector supports, but it may reject &lt;em&gt;syntactically&lt;/em&gt; correct metadata if the &lt;em&gt;semantics&lt;/em&gt; violate compiler rules.</source>
          <target state="translated">Компилятор понимает все синтаксические формы, которые поддерживает сборщик, но он может отклонить &lt;em&gt;синтаксически&lt;/em&gt; правильные метаданные, если &lt;em&gt;семантика&lt;/em&gt; нарушает правила компилятора.</target>
        </trans-unit>
        <trans-unit id="5929dc62de7601c08bcabe703705f0dbec26534b" translate="yes" xml:space="preserve">
          <source>The compiler will &lt;a href=&quot;aot-compiler#code-folding&quot;&gt;fold&lt;/a&gt; the expression into the provider as if you had written this.</source>
          <target state="translated">Компилятор &lt;a href=&quot;aot-compiler#code-folding&quot;&gt;свернет&lt;/a&gt; выражение в провайдере, как если бы вы написали это.</target>
        </trans-unit>
        <trans-unit id="138f31c0677c88cc7b7a7fd6bf76154f84ce3954" translate="yes" xml:space="preserve">
          <source>The compiler will recognize the &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; element and the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; attribute because you declared a corresponding &lt;code&gt;AppComponent&lt;/code&gt; and &lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; configuration.</source>
          <target state="translated">Компилятор распознает элемент &lt;code&gt;&amp;lt;app-root&amp;gt;&lt;/code&gt; и атрибут &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; , поскольку вы объявили соответствующие &lt;code&gt;AppComponent&lt;/code&gt; и &lt;code&gt;RouterLinkDirectiveStub&lt;/code&gt; в конфигурации &lt;code&gt;&lt;a href=&quot;../api/core/testing/testbed&quot;&gt;TestBed&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="715bb9b8568dd05e7eb02ef4fd3d2ba93fd18630" translate="yes" xml:space="preserve">
          <source>The completed directive code looks like this:</source>
          <target state="translated">Полный код директивы выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="5053850abd39601781be8b25dae3426c32eb731b" translate="yes" xml:space="preserve">
          <source>The component DOM tests described in this guide often require extensive setup and advanced techniques whereas the &lt;a href=&quot;testing#component-class-testing&quot;&gt;unit tests&lt;/a&gt; are comparatively simple.</source>
          <target state="translated">Тесты DOM компонентов, описанные в этом руководстве, часто требуют обширной настройки и передовых методов, тогда как &lt;a href=&quot;testing#component-class-testing&quot;&gt;модульные тесты&lt;/a&gt; сравнительно просты.</target>
        </trans-unit>
        <trans-unit id="945dcf8f41bb23dc85788ad4c63aa881eb1cb6bf" translate="yes" xml:space="preserve">
          <source>The component defines a &lt;code&gt;deleteRequest&lt;/code&gt; property that returns an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;. When the user clicks &lt;em&gt;delete&lt;/em&gt;, the component invokes the &lt;code&gt;delete()&lt;/code&gt; method, telling the &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; to emit an &lt;code&gt;Item&lt;/code&gt; object.</source>
          <target state="translated">Компонент определяет свойство &lt;code&gt;deleteRequest&lt;/code&gt; , которое возвращает &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; . Когда пользователь нажимает кнопку &lt;em&gt;удаления&lt;/em&gt; , компонент вызывает метод &lt;code&gt;delete()&lt;/code&gt; , сообщая &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; о создании объекта &lt;code&gt;Item&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5fed15d886f224a42d47fdb41a31f93da40106cc" translate="yes" xml:space="preserve">
          <source>The component defines a &lt;code&gt;deleteRequest&lt;/code&gt; property that returns an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;. When the user clicks &lt;strong&gt;Delete&lt;/strong&gt;, the component invokes the &lt;code&gt;delete()&lt;/code&gt; method, telling the &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; to emit an &lt;code&gt;Item&lt;/code&gt; object.</source>
          <target state="translated">Компонент определяет свойство &lt;code&gt;deleteRequest&lt;/code&gt; , которое возвращает &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; . Когда пользователь нажимает кнопку &amp;laquo; &lt;strong&gt;Удалить&amp;raquo;&lt;/strong&gt; , компонент вызывает метод &lt;code&gt;delete()&lt;/code&gt; , сообщая &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; создать объект &lt;code&gt;Item&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8eb8273c79d0db2bd78752acb04c3573261ff2c7" translate="yes" xml:space="preserve">
          <source>The component defines an accessibility-enabled element with both the standard HTML attribute &lt;code&gt;role&lt;/code&gt;, and ARIA attributes. The ARIA attribute &lt;code&gt;aria-valuenow&lt;/code&gt; is bound to the user's input.</source>
          <target state="translated">Компонент определяет элемент с возможностью доступа со стандартной &lt;code&gt;role&lt;/code&gt; атрибута HTML и атрибутами ARIA. Атрибут ARIA &lt;code&gt;aria-valuenow&lt;/code&gt; привязан к вводу пользователя.</target>
        </trans-unit>
        <trans-unit id="4f9ce139efb795e90ce6b8f3abad0b17a35b4fb0" translate="yes" xml:space="preserve">
          <source>The component definition also exports the class, &lt;code&gt;ProductAlertsComponent&lt;/code&gt;, which handles functionality for the component.</source>
          <target state="translated">Определение компонента также экспортирует класс &lt;code&gt;ProductAlertsComponent&lt;/code&gt; , который обрабатывает функциональные возможности для компонента.</target>
        </trans-unit>
        <trans-unit id="fa73e1af978181527b58e22c002fc64877e2e6db" translate="yes" xml:space="preserve">
          <source>The component directive example from above looks like this when expressed using the component API:</source>
          <target state="translated">Пример директивы компонент сверху выглядит так,когда он выражен с помощью компонентного API:</target>
        </trans-unit>
        <trans-unit id="7bc7b389fbcb64544804120818c464acab440078" translate="yes" xml:space="preserve">
          <source>The component file contains three transitions.</source>
          <target state="translated">Файл компонента содержит три перехода.</target>
        </trans-unit>
        <trans-unit id="05a22aee3a73845cd036df1c66514d97e0d66817" translate="yes" xml:space="preserve">
          <source>The component is instantiated by being listed in Angular template. This means that the host element is controlled by Angular, but the component's view will be controlled by AngularJS.</source>
          <target state="translated">Компонент инстанцируется перечислением в шаблоне Angular (Угловой).Это означает,что хост-элемент управляется с помощью Angular,но вид компонента будет управляться с помощью AngularJS.</target>
        </trans-unit>
        <trans-unit id="634e741b6ed10e05a132403dcdaef42865cb78fc" translate="yes" xml:space="preserve">
          <source>The component is instantiated by being listed in AngularJS template. This means that the host element is controlled by AngularJS, but the component's view will be controlled by Angular.</source>
          <target state="translated">Компонент инстанцируется перечислением в шаблоне AngularJS.Это означает,что хост-элемент управляется с помощью AngularJS,но вид компонента будет управляться с помощью Angular.</target>
        </trans-unit>
        <trans-unit id="87bfe9e9cc407bbc45693a944d489ceb1150ea14" translate="yes" xml:space="preserve">
          <source>The component isn't expecting a result from the delete operation, so it subscribes without a callback. Even though you are not using the result, you still have to subscribe. Calling the &lt;code&gt;subscribe()&lt;/code&gt; method &lt;em&gt;executes&lt;/em&gt; the observable, which is what initiates the DELETE request.</source>
          <target state="translated">Компонент не ожидает результата от операции удаления, поэтому он подписывается без обратного вызова. Даже если вы не используете результат, вы все равно должны подписаться. Вызов метода &lt;code&gt;subscribe()&lt;/code&gt; &lt;em&gt;выполняет&lt;/em&gt; наблюдаемое, что и инициирует запрос DELETE.</target>
        </trans-unit>
        <trans-unit id="4b73c6bddfe52c8459168da819770d17a2a129c6" translate="yes" xml:space="preserve">
          <source>The component of the route</source>
          <target state="translated">Компонент маршрута</target>
        </trans-unit>
        <trans-unit id="4aa79cea92ca5f94c22df8eaa184e84e014458cf" translate="yes" xml:space="preserve">
          <source>The component of the route, a constant.</source>
          <target state="translated">Компонент маршрута,константа.</target>
        </trans-unit>
        <trans-unit id="1f39c6523ba2e6e387e161f0f9a129bc4867c79e" translate="yes" xml:space="preserve">
          <source>The component quickly becomes cluttered with data access minutia. The component becomes harder to understand, harder to test, and the data access logic can't be re-used or standardized.</source>
          <target state="translated">Компонент быстро становится загроможденным с помощью миниатюрного доступа к данным.Компонент становится более сложным для понимания,сложным для тестирования,а логика доступа к данным не может быть повторно использована или стандартизирована.</target>
        </trans-unit>
        <trans-unit id="7f56d078cb463ae3dcc2533c399d9111710a9122" translate="yes" xml:space="preserve">
          <source>The component renders as the following:</source>
          <target state="translated">Компонент выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="d642e45463b12cd87110e913308fd35c74b02d00" translate="yes" xml:space="preserve">
          <source>The component should only display the selected hero details if the &lt;code&gt;selectedHero&lt;/code&gt; exists.</source>
          <target state="translated">Компонент должен отображать информацию о выбранном герое только в том случае, если &lt;code&gt;selectedHero&lt;/code&gt; существует.</target>
        </trans-unit>
        <trans-unit id="bd71cc1bc88a121f31376dc02838f1a5e74183b1" translate="yes" xml:space="preserve">
          <source>The component template interpolates the content as follows:</source>
          <target state="translated">Шаблон компонента интерполирует содержимое следующим образом:</target>
        </trans-unit>
        <trans-unit id="c7dbc7c28ecb5af85fcbc4145f18fa9e1be06908" translate="yes" xml:space="preserve">
          <source>The component test file generated by the CLI calls &lt;code&gt;compileComponents()&lt;/code&gt; even though it is never required when running &lt;code&gt;ng test&lt;/code&gt;.</source>
          <target state="translated">Файл теста компонента, сгенерированный CLI, вызывает &lt;code&gt;compileComponents()&lt;/code&gt; даже если он никогда не требуется при запуске &lt;code&gt;ng test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a0311eba241fe09acc7a2c71109494bced8b04d" translate="yes" xml:space="preserve">
          <source>The component to instantiate when the path matches. Can be empty if child routes specify components.</source>
          <target state="translated">Компонент для инстанцирования,когда путь совпадает.Может быть пустым,если в дочерних маршрутах указываются компоненты.</target>
        </trans-unit>
        <trans-unit id="7c07c7ab7dee70787d92839f5740c175aea5adee" translate="yes" xml:space="preserve">
          <source>The component to transform.</source>
          <target state="translated">Компонент для трансформации.</target>
        </trans-unit>
        <trans-unit id="c03142546a7a9067dc7bd0f3bdc5f667718c42e5" translate="yes" xml:space="preserve">
          <source>The component tree can be very deep and, most of the time, the nested components play no role in testing the component at the top of the tree.</source>
          <target state="translated">Дерево компонентов может быть очень глубоким,и в большинстве случаев вложенные компоненты не играют никакой роли в тестировании компонента в верхней части дерева.</target>
        </trans-unit>
        <trans-unit id="8e15674fa536b1448524d88911c6fd3a5af7c894" translate="yes" xml:space="preserve">
          <source>The component type.</source>
          <target state="translated">Тип компонента.</target>
        </trans-unit>
        <trans-unit id="a025e9eb678c1adf18cef368c04d88f1706b83ff" translate="yes" xml:space="preserve">
          <source>The component's &lt;code&gt;birthday&lt;/code&gt; value flows through the &lt;a href=&quot;template-expression-operators#pipe&quot;&gt;pipe operator&lt;/a&gt; ( | ) to the &lt;a href=&quot;../api/common/datepipe&quot;&gt;&lt;code&gt;date&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">Значение &lt;code&gt;birthday&lt;/code&gt; компонента передается через &lt;a href=&quot;template-expression-operators#pipe&quot;&gt;оператор вертикальной черты&lt;/a&gt; (|) в функцию &lt;a href=&quot;../api/common/datepipe&quot;&gt; &lt;code&gt;date&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3a0e4aec9a04b168fe5b9cfc031aad8b684a6788" translate="yes" xml:space="preserve">
          <source>The component's &lt;code&gt;ngOnInit&lt;/code&gt; lifecycle hook calls the &lt;code&gt;HeroService&lt;/code&gt; method, not the constructor.</source>
          <target state="translated">&lt;code&gt;ngOnInit&lt;/code&gt; жизненного цикла компонента ngOnInit вызывает метод &lt;code&gt;HeroService&lt;/code&gt; , а не конструктор.</target>
        </trans-unit>
        <trans-unit id="a393e0445991d1a36a41d0c3b83117e4d646235e" translate="yes" xml:space="preserve">
          <source>The component's &lt;code&gt;selected&lt;/code&gt; property returns an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt;, which looks like an RxJS synchronous &lt;code&gt;Observable&lt;/code&gt; to consumers. The test subscribes to it &lt;em&gt;explicitly&lt;/em&gt; just as the host component does &lt;em&gt;implicitly&lt;/em&gt;.</source>
          <target state="translated">Свойство &lt;code&gt;selected&lt;/code&gt; компонента возвращает &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; , который выглядит как RxJS синхронный &lt;code&gt;Observable&lt;/code&gt; для потребителей. Тест подписывается на него &lt;em&gt;явно,&lt;/em&gt; как &lt;em&gt;неявно&lt;/em&gt; делает компонент хоста .</target>
        </trans-unit>
        <trans-unit id="b1e101d4a9e06ccb23308352dafb1f38a636d4e4" translate="yes" xml:space="preserve">
          <source>The component's &lt;code&gt;selector&lt;/code&gt; value of &quot;app-hero-form&quot; means you can drop this form in a parent template using the &lt;code&gt;&amp;lt;app-hero-form&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">Значение &lt;code&gt;selector&lt;/code&gt; компонента &quot;app-hero-form&quot; означает, что вы можете поместить эту форму в родительский шаблон с помощью &lt;code&gt;&amp;lt;app-hero-form&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1962b26c443a8f93187c9613e919572df2a309b4" translate="yes" xml:space="preserve">
          <source>The component's &lt;code&gt;showConfigResponse()&lt;/code&gt; method displays the response headers as well as the configuration:</source>
          <target state="translated">Метод &lt;code&gt;showConfigResponse()&lt;/code&gt; компонента отображает заголовки ответа, а также конфигурацию:</target>
        </trans-unit>
        <trans-unit id="8bb55779cfa560056a11685cf4309c305487f8a0" translate="yes" xml:space="preserve">
          <source>The component's HTML selector.</source>
          <target state="translated">HTML-селектор компонента.</target>
        </trans-unit>
        <trans-unit id="45c242f97cfe38564c598a3971646c8412339c77" translate="yes" xml:space="preserve">
          <source>The conditional displays the data only if &lt;code&gt;userStream&lt;/code&gt; returns a value, so you don't need to use the &lt;a href=&quot;../../guide/template-expression-operators#safe-navigation-operator&quot;&gt;safe-navigation-operator&lt;/a&gt; (&lt;code&gt;?.&lt;/code&gt;) to guard against null values when accessing properties. You can display an alternative template while waiting for the data.</source>
          <target state="translated">Условное &lt;code&gt;userStream&lt;/code&gt; отображает данные только в том случае, если userStream возвращает значение, поэтому вам не нужно использовать &lt;a href=&quot;../../guide/template-expression-operators#safe-navigation-operator&quot;&gt;оператор безопасной навигации&lt;/a&gt; ( &lt;code&gt;?.&lt;/code&gt; ) Для защиты от нулевых значений при доступе к свойствам. Вы можете отобразить альтернативный шаблон, ожидая данных.</target>
        </trans-unit>
        <trans-unit id="906d8cdaee971e09d03956839d141439a00f4e7f" translate="yes" xml:space="preserve">
          <source>The conditional displays the data only if &lt;code&gt;userStream&lt;/code&gt; returns a value, so you don't need to use the &lt;a href=&quot;../../guide/template-syntax#safe-navigation-operator&quot;&gt;safe-navigation-operator&lt;/a&gt; (&lt;code&gt;?.&lt;/code&gt;) to guard against null values when accessing properties. You can display an alternative template while waiting for the data.</source>
          <target state="translated">Условное отображение данных только в том случае, если &lt;code&gt;userStream&lt;/code&gt; возвращает значение, поэтому вам не нужно использовать &lt;a href=&quot;../../guide/template-syntax#safe-navigation-operator&quot;&gt;оператор безопасной навигации&lt;/a&gt; ( &lt;code&gt;?.&lt;/code&gt; ) Для защиты от нулевых значений при доступе к свойствам. Вы можете отобразить альтернативный шаблон во время ожидания данных.</target>
        </trans-unit>
        <trans-unit id="d86de5c94963265bd4f854ea02275e5968f8001b" translate="yes" xml:space="preserve">
          <source>The configurable options for a default or targeted build generally correspond to the options available for the &lt;a href=&quot;cli/build&quot;&gt;&lt;code&gt;ng build&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cli/serve&quot;&gt;&lt;code&gt;ng serve&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;cli/test&quot;&gt;&lt;code&gt;ng test&lt;/code&gt;&lt;/a&gt; commands. For details of those options and their possible values, see the &lt;a href=&quot;cli&quot;&gt;CLI Reference&lt;/a&gt;.</source>
          <target state="translated">Настраиваемые параметры для сборки по умолчанию или целевой сборки обычно соответствуют параметрам, доступным для команд &lt;a href=&quot;cli/build&quot;&gt; &lt;code&gt;ng build&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;cli/serve&quot;&gt; &lt;code&gt;ng serve&lt;/code&gt; &lt;/a&gt; и &lt;a href=&quot;cli/test&quot;&gt; &lt;code&gt;ng test&lt;/code&gt; &lt;/a&gt; . Подробнее об этих параметрах и их возможных значениях см. В &lt;a href=&quot;cli&quot;&gt;справочнике&lt;/a&gt; по CLI .</target>
        </trans-unit>
        <trans-unit id="8683e9a1dac5420bfeea384e8f30a82f93d62bfe" translate="yes" xml:space="preserve">
          <source>The configuration file uses the JSON format. All file paths must begin with &lt;code&gt;/&lt;/code&gt;, which corresponds to the deployment directory&amp;mdash;usually &lt;code&gt;dist/&amp;lt;project-name&amp;gt;&lt;/code&gt; in CLI projects.</source>
          <target state="translated">Файл конфигурации использует формат JSON. Все пути к файлам должны начинаться с &lt;code&gt;/&lt;/code&gt; , что соответствует каталогу развертывания - обычно &lt;code&gt;dist/&amp;lt;project-name&amp;gt;&lt;/code&gt; в проектах CLI.</target>
        </trans-unit>
        <trans-unit id="40e87f989f48f3ba9948b17f612ebb52c1eb9ad7" translate="yes" xml:space="preserve">
          <source>The configuration file uses the JSON format. All file paths must begin with &lt;code&gt;/&lt;/code&gt;, which is the deployment directory&amp;mdash;usually &lt;code&gt;dist&lt;/code&gt; in CLI projects.</source>
          <target state="translated">Файл конфигурации использует формат JSON. Все пути к файлам должны начинаться с &lt;code&gt;/&lt;/code&gt; , который является каталогом развертывания - обычно это &lt;code&gt;dist&lt;/code&gt; в проектах CLI.</target>
        </trans-unit>
        <trans-unit id="9b69952674dd4b63a3a568c2873291a95fb4f9db" translate="yes" xml:space="preserve">
          <source>The configuration key to set or query, in JSON path format. For example: &quot;a[3].foo.bar[2]&quot;. If no new value is provided, returns the current value of this key.</source>
          <target state="translated">Ключ конфигурации для установки или запроса,в формате JSON путь.Например:&quot;a[3].foo.bar[2]&quot;.Если новое значение не предусмотрено,возвращает текущее значение этого ключа.</target>
        </trans-unit>
        <trans-unit id="eb6fc904e89e428b0083d3c15ea355abb65dfe2a" translate="yes" xml:space="preserve">
          <source>The configuration options generally correspond to the command options. You can override individual configuration defaults by specifying the corresponding options on the command line. The command can accept option names given in either dash-case or camelCase. Note that in the configuration file, you must specify names in camelCase.</source>
          <target state="translated">Опции конфигурации обычно соответствуют опциям команд.Вы можете отменить отдельные настройки по умолчанию,указав соответствующие опции в командной строке.Команда может принимать имена опций,заданные как в тире,так и в кейсе верблюдов.Обратите внимание,что в конфигурационном файле вы должны указать имена в верблюжьем регистре.</target>
        </trans-unit>
        <trans-unit id="7b16623cd8cb243d6de3e15d7611a5847bcf2f77" translate="yes" xml:space="preserve">
          <source>The configuration to apply service worker to.</source>
          <target state="translated">Конфигурация,к которой следует применить работника сервисной службы.</target>
        </trans-unit>
        <trans-unit id="c64e682f36d33924e7b55e376fb7962258b0cea6" translate="yes" xml:space="preserve">
          <source>The configuration used to match this route *</source>
          <target state="translated">Конфигурация,используемая для соответствия этому маршруту *</target>
        </trans-unit>
        <trans-unit id="63af88f97d299ed29fc90f13430520c0ca49701b" translate="yes" xml:space="preserve">
          <source>The configuration used to match this route.</source>
          <target state="translated">Конфигурация,используемая для соответствия этому маршруту.</target>
        </trans-unit>
        <trans-unit id="68528e3bdae3eede6b9bd6f97339c8df83d69334" translate="yes" xml:space="preserve">
          <source>The configuration's injector is the initial injector set on the class, and used by default for each created instance.This behavior can be overridden with the static property to affect all newly created instances, or as a constructor argument for one-off creations.</source>
          <target state="translated">Инжектор конфигурации является начальным инжектором,установленным в классе и используемым по умолчанию для каждого создаваемого экземпляра.Такое поведение может быть переопределено статическим свойством для воздействия на все вновь создаваемые экземпляры,или в качестве аргумента конструктора для одноразовых созданий.</target>
        </trans-unit>
        <trans-unit id="834a1e227c0c50a09a054c8e9e6ce66a5e71337b" translate="yes" xml:space="preserve">
          <source>The configurations key is optional, we'll leave it out for now.</source>
          <target state="translated">Ключ конфигурации необязателен,мы пока оставим его в стороне.</target>
        </trans-unit>
        <trans-unit id="a6f51a44f469c2e24865a1040b3de3b6516154cf" translate="yes" xml:space="preserve">
          <source>The console output looks a bit like this:</source>
          <target state="translated">Выход консоли выглядит немного так:</target>
        </trans-unit>
        <trans-unit id="72c105d38074b2df6181fbe4b841b458d3e091b7" translate="yes" xml:space="preserve">
          <source>The constructed paragraph renders strangely.</source>
          <target state="translated">Странно,что построенный абзац.</target>
        </trans-unit>
        <trans-unit id="c7fdd6a63e113f58fb8d465907d502d5baf57f6c" translate="yes" xml:space="preserve">
          <source>The constructor asks for an injected instance of &lt;code&gt;Logger&lt;/code&gt; and stores it in a private field called &lt;code&gt;logger&lt;/code&gt;. The &lt;code&gt;getHeroes()&lt;/code&gt; method logs a message when asked to fetch heroes.</source>
          <target state="translated">Конструктор запрашивает внедренный экземпляр &lt;code&gt;Logger&lt;/code&gt; и сохраняет его в закрытом поле, называемом &lt;code&gt;logger&lt;/code&gt; . Метод &lt;code&gt;getHeroes()&lt;/code&gt; регистрирует сообщение, когда его просят выбрать героев.</target>
        </trans-unit>
        <trans-unit id="36406f88f194439134400738d911a712dacb18ae" translate="yes" xml:space="preserve">
          <source>The constructor expects Angular to inject the &lt;code&gt;HeroService&lt;/code&gt; into a private &lt;code&gt;heroService&lt;/code&gt; property.</source>
          <target state="translated">Конструктор ожидает, что Angular &lt;code&gt;HeroService&lt;/code&gt; в частное свойство &lt;code&gt;heroService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="02e6daf629ba2d69937d75255228c5dcdccc4d38" translate="yes" xml:space="preserve">
          <source>The constructor injects the &lt;code&gt;HeroesService&lt;/code&gt;, which defines the following interface.</source>
          <target state="translated">Конструктор внедряет &lt;code&gt;HeroesService&lt;/code&gt; , которая определяет следующий интерфейс.</target>
        </trans-unit>
        <trans-unit id="7eab4a9cd938314dc3fba0ac964a8f9a79e0b72b" translate="yes" xml:space="preserve">
          <source>The constructor isn't an Angular hook &lt;em&gt;per se&lt;/em&gt;. The log confirms that input properties (the &lt;code&gt;name&lt;/code&gt; property in this case) have no assigned values at construction.</source>
          <target state="translated">Конструктор не является угловым крючком &lt;em&gt;как таковым&lt;/em&gt; . Журнал подтверждает, что входные свойства ( в данном случае свойство &lt;code&gt;name&lt;/code&gt; ) не имеют назначенных значений при построении.</target>
        </trans-unit>
        <trans-unit id="a26127b5ec5fe19c64995c70e6ae4945b4c33a2f" translate="yes" xml:space="preserve">
          <source>The constructor tells Angular to inject the &lt;code&gt;GreetingModule&lt;/code&gt; into itself. The injection would be circular if Angular looked for &lt;code&gt;GreetingModule&lt;/code&gt; in the &lt;em&gt;current&lt;/em&gt; injector, but the &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; decorator means &quot;look for &lt;code&gt;GreetingModule&lt;/code&gt; in an ancestor injector, above me in the injector hierarchy.&quot;</source>
          <target state="translated">Конструктор говорит Angular ввести &lt;code&gt;GreetingModule&lt;/code&gt; в себя. Инжекция была бы круглой, если бы Angular искал &lt;code&gt;GreetingModule&lt;/code&gt; в &lt;em&gt;текущем&lt;/em&gt; инжекторе, но декоратор &lt;code&gt;@&lt;a href=&quot;../api/core/skipself&quot;&gt;SkipSelf&lt;/a&gt;()&lt;/code&gt; означает &amp;laquo;ищите &lt;code&gt;GreetingModule&lt;/code&gt; в предшественнике , выше меня в иерархии инжекторов&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="2a0a07f08ada0f60a409bcf703aee3b141535d37" translate="yes" xml:space="preserve">
          <source>The content to replace with.</source>
          <target state="translated">Содержимое для замены.</target>
        </trans-unit>
        <trans-unit id="434978912cc545b69caa64dbe5cbc7693818a867" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;node_modules/some-package/images/&lt;/code&gt; will be available in &lt;code&gt;dist/some-package/&lt;/code&gt;.</source>
          <target state="translated">Содержимое &lt;code&gt;node_modules/some-package/images/&lt;/code&gt; будет доступно в &lt;code&gt;dist/some-package/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de9762d967849535b472516dad70dc2a5e2d798a" translate="yes" xml:space="preserve">
          <source>The context for terms in an expression is a blend of the &lt;em&gt;template variables&lt;/em&gt;, the directive's &lt;em&gt;context&lt;/em&gt; object (if it has one), and the component's &lt;em&gt;members&lt;/em&gt;. If you reference a name that belongs to more than one of these namespaces, the template variable name takes precedence, followed by a name in the directive's &lt;em&gt;context&lt;/em&gt;, and, lastly, the component's member names.</source>
          <target state="translated">Контекст терминов в выражении представляет собой смесь из &lt;em&gt;переменного шаблона&lt;/em&gt; , директива в &lt;em&gt;контексте&lt;/em&gt; объекта (если он есть), и компонента &lt;em&gt;членов&lt;/em&gt; . Если вы ссылаетесь на имя, которое принадлежит более чем одному из этих пространств имен, имя переменной шаблона имеет приоритет, за которым следует имя в &lt;em&gt;контексте&lt;/em&gt; директивы и, наконец, имена членов компонента.</target>
        </trans-unit>
        <trans-unit id="516e999a9dfd7f3d5bfbc11b52a151eecf3c24d1" translate="yes" xml:space="preserve">
          <source>The context for this view, inherited from the anchor element.</source>
          <target state="translated">Контекст для этого вида,унаследованный от якорного элемента.</target>
        </trans-unit>
        <trans-unit id="3c82f52221a89639198df33fedec6d9813e4dcee" translate="yes" xml:space="preserve">
          <source>The context in which to listen for events. Can be the entire window or document, the body of the document, or a specific DOM element.</source>
          <target state="translated">Контекст,в котором можно слушать события.Может быть все окно или документ,тело документа или определенный элемент DOM.</target>
        </trans-unit>
        <trans-unit id="f8c9c8d1c4b92136befec8a41da007e51cffd2d0" translate="yes" xml:space="preserve">
          <source>The context object passed into a rule provides access to utility functions and metadata that the schematic may need to work with, including a logging API to help with debugging. The context also defines a &lt;em&gt;merge strategy&lt;/em&gt; that determines how changes are merged from the staged tree into the base tree. A change can be accepted or ignored, or throw an exception.</source>
          <target state="translated">Объект контекста, переданный в правило, обеспечивает доступ к служебным функциям и метаданным, с которыми может потребоваться работа схемы, включая API ведения журнала для помощи в отладке. Контекст также определяет &lt;em&gt;стратегию слияния,&lt;/em&gt; которая определяет, как изменения объединяются из поэтапного дерева в базовое дерево. Изменение может быть принято или проигнорировано, или выдать исключение.</target>
        </trans-unit>
        <trans-unit id="ac7cbb9fe3e4587d9144d9bbb440b6a49b7cc42b" translate="yes" xml:space="preserve">
          <source>The context of a template statement can be the component class instance or the template. Because of this, template statements cannot refer to anything in the global namespace such as &lt;code&gt;window&lt;/code&gt; or &lt;code&gt;document&lt;/code&gt;. For example, template statements can't call &lt;code&gt;console.log()&lt;/code&gt; or &lt;code&gt;Math.max()&lt;/code&gt;.</source>
          <target state="translated">Контекст оператора шаблона может быть экземпляром класса компонента или шаблоном. Из-за этого операторы шаблона не могут ссылаться ни на что в глобальном пространстве имен, например на &lt;code&gt;window&lt;/code&gt; или &lt;code&gt;document&lt;/code&gt; . Например, операторы шаблона не могут вызывать &lt;code&gt;console.log()&lt;/code&gt; или &lt;code&gt;Math.max()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62f2c493dfbb04d85e053c932b8ad74fee0d374f" translate="yes" xml:space="preserve">
          <source>The context property for &lt;code&gt;let-hero&lt;/code&gt; wasn't specified. Its intended source is implicit. Angular sets &lt;code&gt;let-hero&lt;/code&gt; to the value of the context's &lt;code&gt;$implicit&lt;/code&gt; property, which &lt;code&gt;NgFor&lt;/code&gt; has initialized with the hero for the current iteration.</source>
          <target state="translated">Свойство context для &lt;code&gt;let-hero&lt;/code&gt; не указано. Предполагаемый источник неявный. Angular устанавливает &lt;code&gt;let-hero&lt;/code&gt; в значение свойства &lt;code&gt;$implicit&lt;/code&gt; контекста , которое &lt;code&gt;NgFor&lt;/code&gt; инициализировал с героем для текущей итерации.</target>
        </trans-unit>
        <trans-unit id="c7a76e231011258158f2254b2b16d3db05a38e38" translate="yes" xml:space="preserve">
          <source>The control directive from which to get the &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Директива управления, из которой нужно получить &lt;code&gt;&lt;a href=&quot;formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2bbb61d0c4df311e8b07462ca259b3c982a86148" translate="yes" xml:space="preserve">
          <source>The control directive to add to the form.</source>
          <target state="translated">Директива управления для добавления в форму.</target>
        </trans-unit>
        <trans-unit id="8cf41ea4b3493c2c856c54199afc949817c4eac6" translate="yes" xml:space="preserve">
          <source>The control has been visited.</source>
          <target state="translated">Контроль был посещен.</target>
        </trans-unit>
        <trans-unit id="8285061d6a84be25121b021c12ee6bd37827dfdd" translate="yes" xml:space="preserve">
          <source>The control name to add to the collection</source>
          <target state="translated">Имя элемента управления для добавления в коллекцию</target>
        </trans-unit>
        <trans-unit id="5410d4b9567d41805c92f96af4682275c27445e2" translate="yes" xml:space="preserve">
          <source>The control name to check for existence in the collection</source>
          <target state="translated">Контрольное имя для проверки существования в коллекции</target>
        </trans-unit>
        <trans-unit id="27a6dcc8aa638e92c26671752f447bfd819f1fd0" translate="yes" xml:space="preserve">
          <source>The control name to register in the collection</source>
          <target state="translated">Контрольное имя для регистрации в коллекции</target>
        </trans-unit>
        <trans-unit id="ecc2af5b43a3852f887c5005940458e40013ceda" translate="yes" xml:space="preserve">
          <source>The control name to remove from the collection</source>
          <target state="translated">Имя элемента управления для удаления из коллекции</target>
        </trans-unit>
        <trans-unit id="ecdbba447a430bfa7169d3caa0fdd744eda0f7c5" translate="yes" xml:space="preserve">
          <source>The control name to replace in the collection</source>
          <target state="translated">Имя элемента управления для замены в коллекции</target>
        </trans-unit>
        <trans-unit id="9760257811426aae616bf4d1494569b4a3c52759" translate="yes" xml:space="preserve">
          <source>The control to validate against.</source>
          <target state="translated">Контроль для проверки.</target>
        </trans-unit>
        <trans-unit id="5b425478a2596d27714c9aeca87c94e3908535ff" translate="yes" xml:space="preserve">
          <source>The control value accessor also calls the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel#viewToModelUpdate&quot;&gt;NgModel.viewToModelUpdate()&lt;/a&gt;&lt;/code&gt; method which emits an &lt;code&gt;ngModelChange&lt;/code&gt; event.</source>
          <target state="translated">Метод доступа к &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel#viewToModelUpdate&quot;&gt;NgModel.viewToModelUpdate()&lt;/a&gt;&lt;/code&gt; управления также вызывает метод NgModel.viewToModelUpdate (), который генерирует событие &lt;code&gt;ngModelChange&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd98c4bcc74109310318a5dad8988a21d99457b6" translate="yes" xml:space="preserve">
          <source>The control value accessor attached to the input triggers the &lt;code&gt;setValue()&lt;/code&gt; method on the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Метод доступа к управляющему значению, присоединенный к входу, вызывает метод &lt;code&gt;setValue()&lt;/code&gt; в экземпляре &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f1cc67d8c922fc67a0beca6d8cfcfeb12e494a15" translate="yes" xml:space="preserve">
          <source>The control value accessor listening for events on the form input element immediately relays the new value to the &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; instance.</source>
          <target state="translated">Метод доступа к управляющему значению, прослушивающий события в элементе ввода формы, немедленно передает новое значение экземпляру &lt;code&gt;&lt;a href=&quot;../api/forms/formcontrol&quot;&gt;FormControl&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6d0f6693ae5ef3a6a4bffa9b91611a36bc4a2862" translate="yes" xml:space="preserve">
          <source>The control value accessor on the form input element updates the element with the new value.</source>
          <target state="translated">Ассистент управляющего значения на элементе ввода формы обновляет элемент новым значением.</target>
        </trans-unit>
        <trans-unit id="e1fe9f7a09b8a92372a5486a9d79fb459c696cac" translate="yes" xml:space="preserve">
          <source>The control value accessor updates the form input element in the view with the latest &lt;code&gt;favoriteColor&lt;/code&gt; value.</source>
          <target state="translated">Контрольное значение аксессор обновляет элемент ввода формы в представлении с последним &lt;code&gt;favoriteColor&lt;/code&gt; значения.</target>
        </trans-unit>
        <trans-unit id="57410b20d49ca1897c2b04634df3cd7ef8cf74c9" translate="yes" xml:space="preserve">
          <source>The control's value has changed.</source>
          <target state="translated">Значение управления изменилось.</target>
        </trans-unit>
        <trans-unit id="ca5764f6850cc69be0e8c8077aba090d028119b4" translate="yes" xml:space="preserve">
          <source>The control's value is valid.</source>
          <target state="translated">Значение управления действует.</target>
        </trans-unit>
        <trans-unit id="e9901119ca7da8a80f5cee35a4eeb845a13e8315" translate="yes" xml:space="preserve">
          <source>The conversion process implements the &lt;code&gt;&lt;a href=&quot;../api/elements/ngelementconstructor&quot;&gt;NgElementConstructor&lt;/a&gt;&lt;/code&gt; interface, and creates a constructor class that is configured to produce a self-bootstrapping instance of your component.</source>
          <target state="translated">Процесс преобразования реализует интерфейс &lt;code&gt;&lt;a href=&quot;../api/elements/ngelementconstructor&quot;&gt;NgElementConstructor&lt;/a&gt;&lt;/code&gt; и создает класс конструктора, который настроен на создание самозагрузочного экземпляра вашего компонента.</target>
        </trans-unit>
        <trans-unit id="c62334e88935fbdcec541fa91d80d7ebfb110faa" translate="yes" xml:space="preserve">
          <source>The corresponding &lt;code&gt;ForbiddenValidatorDirective&lt;/code&gt; serves as a wrapper around the &lt;code&gt;forbiddenNameValidator&lt;/code&gt;.</source>
          <target state="translated">Соответствующая &lt;code&gt;ForbiddenValidatorDirective&lt;/code&gt; служит оболочкой для &lt;code&gt;forbiddenNameValidator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71f13dbbb53ef63c0ce04dd500aaa91a7309173e" translate="yes" xml:space="preserve">
          <source>The corresponding DOM element in the browser (null for WebWorkers).</source>
          <target state="translated">Соответствующий элемент DOM в браузере (нулевой для WebWorkers).</target>
        </trans-unit>
        <trans-unit id="6c2cbb3d5c755eeb2e5b9b3e623ec0e5d0851a99" translate="yes" xml:space="preserve">
          <source>The corresponding component template looks like this:</source>
          <target state="translated">Соответствующий шаблон компонента выглядит следующим образом:</target>
        </trans-unit>
        <trans-unit id="32c9b0cfa7f7e663d7530ee0ae139a0a521b8ab6" translate="yes" xml:space="preserve">
          <source>The created object does not get cached by the injector.</source>
          <target state="translated">Созданный объект не кэшируется инжектором.</target>
        </trans-unit>
        <trans-unit id="2dda5305b34fe50eac42c633b9209406f904f2ac" translate="yes" xml:space="preserve">
          <source>The creation API parses the component looking for input properties, and defines corresponding attributes for the custom element. It transforms the property names to make them compatible with custom elements, which do not recognize case distinctions. The resulting attribute names use dash-separated lowercase. For example, for a component with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;('myInputProp') inputProp&lt;/code&gt;, the corresponding custom element defines an attribute &lt;code&gt;my-input-prop&lt;/code&gt;.</source>
          <target state="translated">API создания анализирует компонент, ища входные свойства, и определяет соответствующие атрибуты для пользовательского элемента. Он преобразует имена свойств, чтобы сделать их совместимыми с пользовательскими элементами, которые не распознают различия в регистре. Полученные имена атрибутов используют разделенные дефисом строчные буквы. Например, для компонента с &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;('myInputProp') inputProp&lt;/code&gt; @ Input ('myInputProp') inputProp соответствующий пользовательский элемент определяет атрибут &lt;code&gt;my-input-prop&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7ada0b3e583a0ac804c845e4cb5c1762cf95099" translate="yes" xml:space="preserve">
          <source>The curious, dedicated reader might enjoy this lengthy blog post, &lt;a href=&quot;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&quot;&gt;&quot;&lt;em&gt;Tasks, microtasks, queues and schedules&lt;/em&gt;&quot;&lt;/a&gt;.</source>
          <target state="translated">Любопытному, преданному читателю может понравиться это длинное сообщение в блоге &lt;a href=&quot;https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/&quot;&gt;&amp;laquo; &lt;em&gt;Задачи, микрозадачи, очереди и графики&lt;/em&gt; &amp;raquo;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d763599e77a8e6d59d75f1dcf9f6e13a9029d04" translate="yes" xml:space="preserve">
          <source>The currency code.</source>
          <target state="translated">Код валюты.</target>
        </trans-unit>
        <trans-unit id="1e961714f083647d9f7ae1dda7fc90792c835c30" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;BannerComponent&lt;/code&gt; presents static title text in the HTML template.</source>
          <target state="translated">Текущий &lt;code&gt;BannerComponent&lt;/code&gt; представляет статический текст заголовка в шаблоне HTML.</target>
        </trans-unit>
        <trans-unit id="6b2680b0b6ad0710d65d5e5d0746df48e0918d04" translate="yes" xml:space="preserve">
          <source>The current &lt;code&gt;HeroService.getHeroes()&lt;/code&gt; uses the RxJS &lt;code&gt;of()&lt;/code&gt; function to return an array of mock heroes as an &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Текущий &lt;code&gt;HeroService.getHeroes()&lt;/code&gt; использует функцию RxJS &lt;code&gt;of()&lt;/code&gt; чтобы вернуть массив фиктивных героев в качестве &lt;code&gt;Observable&amp;lt;Hero[]&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f0560dbef41d1c541841cce2b26360211c4eacaf" translate="yes" xml:space="preserve">
          <source>The current Navigation object if one exists</source>
          <target state="translated">Текущий объект Навигации,если он существует</target>
        </trans-unit>
        <trans-unit id="7657c044778fdf6db1068d532e80d6b9bbb7dca8" translate="yes" xml:space="preserve">
          <source>The current URL.</source>
          <target state="translated">Текущий URL.</target>
        </trans-unit>
        <trans-unit id="f730ad3ca5d926f1046ca241082281a7fc5a38ff" translate="yes" xml:space="preserve">
          <source>The current guidelines allow for a three-level navigation structure with two header levels. Don't add a third header level.</source>
          <target state="translated">Текущие указания позволяют создать трехуровневую структуру навигации с двумя уровнями заголовков.Не добавляйте третий уровень заголовков.</target>
        </trans-unit>
        <trans-unit id="ba120156cf1c2d4ed712977962e77791a19b845b" translate="yes" xml:space="preserve">
          <source>The current snapshot of the router state</source>
          <target state="translated">Текущий снимок состояния маршрутизатора</target>
        </trans-unit>
        <trans-unit id="f8da6bf8a2bb6f6853fcc1eb9997ee7e13be10da" translate="yes" xml:space="preserve">
          <source>The current snapshot of this route</source>
          <target state="translated">Текущий снимок этого маршрута</target>
        </trans-unit>
        <trans-unit id="21d77846b699af6d4d8754e17ac9142b0c9df316" translate="yes" xml:space="preserve">
          <source>The current state of routing in this NgModule.</source>
          <target state="translated">Текущее состояние маршрутизации в этом NgМодуле.</target>
        </trans-unit>
        <trans-unit id="a53af39d47142b7e376378e57c34e7d410be02ee" translate="yes" xml:space="preserve">
          <source>The current state of the router including a tree of the currently activated routes together with convenience methods for traversing the route tree.</source>
          <target state="translated">Текущее состояние маршрутизатора,включающее дерево активированных в данный момент маршрутов,а также удобные методы прохождения по дереву маршрутов.</target>
        </trans-unit>
        <trans-unit id="c415c67c1ff9b11622afff6651c02db58a193f2a" translate="yes" xml:space="preserve">
          <source>The current value</source>
          <target state="translated">Текущее значение</target>
        </trans-unit>
        <trans-unit id="e0698114602d013efa358ad69baa59d634483f5a" translate="yes" xml:space="preserve">
          <source>The current value of the control.</source>
          <target state="translated">Текущее значение управления.</target>
        </trans-unit>
        <trans-unit id="166fd9baf2239e5db9cc405e59c759c3c4b062a1" translate="yes" xml:space="preserve">
          <source>The current version becomes invalid due to a failed hash.</source>
          <target state="translated">Текущая версия становится недействительной из-за неудачного хэша.</target>
        </trans-unit>
        <trans-unit id="0e72187959d2f6f8846ed4b702c80eccf7a5d636" translate="yes" xml:space="preserve">
          <source>The custom element feature extends HTML by allowing you to define a tag whose content is created and controlled by JavaScript code. A custom element (also called a &lt;em&gt;web component&lt;/em&gt;) is recognized by a browser when it's added to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry&quot;&gt;CustomElementRegistry&lt;/a&gt;.</source>
          <target state="translated">Функция пользовательских элементов расширяет HTML, позволяя вам определять тег, содержимое которого создается и контролируется кодом JavaScript. Пользовательский элемент (также называемый &lt;em&gt;веб-компонентом&lt;/em&gt; ) распознается браузером при его добавлении в &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry&quot;&gt;CustomElementRegistry&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79531376d994372336113a8ca4d9f22bc6ea61d5" translate="yes" xml:space="preserve">
          <source>The custom id is persistent. The extractor tool does not change it when the translatable text changes. Therefore, you do not need to update the translation. This approach makes maintenance easier.</source>
          <target state="translated">Обычный идентификатор настойчив.Инструмент для извлечения не изменяет его при изменении переводимого текста.Поэтому вам не нужно обновлять перевод.Такой подход облегчает обслуживание.</target>
        </trans-unit>
        <trans-unit id="602948966524c9d08153f6c90b9a75768c2a47aa" translate="yes" xml:space="preserve">
          <source>The data model for this type of form must represent a question. The example includes the &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt;, which defines a question as the fundamental object in the model.</source>
          <target state="translated">Модель данных для этого типа формы должна представлять вопрос. Пример включает &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt; , который определяет вопрос как фундаментальный объект в модели.</target>
        </trans-unit>
        <trans-unit id="6b5e4745435b5221cc9e2e4e96dbb049887d7068" translate="yes" xml:space="preserve">
          <source>The data-binding and injection contexts of embedded views created from this &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; inherit from the contexts of this location.</source>
          <target state="translated">Контексты привязки данных и внедрения встроенных представлений, созданные из этого &lt;code&gt;&lt;a href=&quot;templateref&quot;&gt;TemplateRef&lt;/a&gt;&lt;/code&gt; , наследуются от контекстов этого расположения.</target>
        </trans-unit>
        <trans-unit id="f5a2918cf9fc155916140d56e47a05739e0b8db4" translate="yes" xml:space="preserve">
          <source>The data-binding context of the embedded view, as declared in the &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; usage.</source>
          <target state="translated">Контекст привязки данных встроенного представления, как объявлено в использовании &lt;code&gt;&amp;lt;ng-template&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91f462d727aaa6e3286220f710d54dc9c89b65cd" translate="yes" xml:space="preserve">
          <source>The date expression: a &lt;code&gt;Date&lt;/code&gt; object, a number (milliseconds since UTC epoch), or an ISO string (&lt;a href=&quot;https://www.w3.org/TR/NOTE-datetime&quot;&gt;https://www.w3.org/TR/NOTE-datetime&lt;/a&gt;).</source>
          <target state="translated">Выражение даты: объект &lt;code&gt;Date&lt;/code&gt; , число (миллисекунды с начала UTC) или строка ISO ( &lt;a href=&quot;https://www.w3.org/TR/NOTE-datetime&quot;&gt;https://www.w3.org/TR/NOTE-datetime&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6be1ff2545cf2f4032129392887400693da8322e" translate="yes" xml:space="preserve">
          <source>The date to format, as a Date, or a number (milliseconds since UTC epoch) or an &lt;a href=&quot;https://www.w3.org/TR/NOTE-datetime&quot;&gt;ISO date-time string&lt;/a&gt;.</source>
          <target state="translated">Дата для форматирования, как Дата, или число (миллисекунды с момента времени UTC) или &lt;a href=&quot;https://www.w3.org/TR/NOTE-datetime&quot;&gt;строка даты и времени ISO&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a32c99fba05678acf40c6cb230f29e12bd614202" translate="yes" xml:space="preserve">
          <source>The date-time components to include. See &lt;code&gt;&lt;a href=&quot;datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">Компоненты даты и времени для включения. Смотрите &lt;code&gt;&lt;a href=&quot;datepipe&quot;&gt;DatePipe&lt;/a&gt;&lt;/code&gt; для деталей.</target>
        </trans-unit>
        <trans-unit id="4682d1b62b750807cc0fad3edaa1edf9e246371a" translate="yes" xml:space="preserve">
          <source>The date/time components to include, using predefined options or a custom format string.</source>
          <target state="translated">Компоненты даты/времени для включения,используя предопределенные опции или строку пользовательского формата.</target>
        </trans-unit>
        <trans-unit id="d9f490b1b139b96680fa4c11b44dad3844d370ec" translate="yes" xml:space="preserve">
          <source>The declaring NgModule.</source>
          <target state="translated">Декларирующий NgModule.</target>
        </trans-unit>
        <trans-unit id="98c201f69b3b13f5cb6ff04cc4ea1ccaa2f85377" translate="yes" xml:space="preserve">
          <source>The decorator requirement is imposed by TypeScript. TypeScript normally discards parameter type information when it &lt;a href=&quot;glossary#transpile&quot;&gt;transpiles&lt;/a&gt; the code to JavaScript. TypeScript preserves this information if the class has a decorator and the &lt;code&gt;emitDecoratorMetadata&lt;/code&gt; compiler option is set &lt;code&gt;true&lt;/code&gt; in TypeScript's &lt;code&gt;tsconfig.json&lt;/code&gt; configuration file. The CLI configures &lt;code&gt;tsconfig.json&lt;/code&gt; with &lt;code&gt;emitDecoratorMetadata: true&lt;/code&gt;.</source>
          <target state="translated">Требование декоратора наложено TypeScript. TypeScript обычно отбрасывает информацию о типе параметра, когда &lt;a href=&quot;glossary#transpile&quot;&gt;переносит&lt;/a&gt; код в JavaScript. TypeScript сохраняет эту информацию, если у класса есть декоратор, а для &lt;code&gt;emitDecoratorMetadata&lt;/code&gt; компилятора emitDecoratorMetadata задано значение &lt;code&gt;true&lt;/code&gt; в &lt;code&gt;tsconfig.json&lt;/code&gt; конфигурации tsconfig.json TypeScript . CLI настраивает &lt;code&gt;tsconfig.json&lt;/code&gt; с помощью &lt;code&gt;emitDecoratorMetadata: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4251b78ae593ecab9f27a838a16244d1b57f7e3e" translate="yes" xml:space="preserve">
          <source>The deep details of structural directives are covered in the &lt;a href=&quot;structural-directives&quot;&gt;Structural Directives&lt;/a&gt; guide, which explains the following:</source>
          <target state="translated">Глубокие детали структурных директив описаны в руководстве по &lt;a href=&quot;structural-directives&quot;&gt;структурным директивам&lt;/a&gt; , в котором объясняется следующее:</target>
        </trans-unit>
        <trans-unit id="712324aee1adee04b50e7221977f131f39e9ab45" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a value and listening to changes on input elements. The accessor is used by the &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; по умолчанию для записи значения и прослушивания изменений входных элементов. Метод доступа используется &lt;code&gt;&lt;a href=&quot;formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f7b6c4995ba6a4dfd9eaabf3e2d50d81a0d5b1e8" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; for writing a value and listening to changes on input elements. The accessor is used by the &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt;&lt;/code&gt; по умолчанию для записи значения и прослушивания изменений входных элементов. Метод доступа используется &lt;code&gt;&lt;a href=&quot;forms/formcontroldirective&quot;&gt;FormControlDirective&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;forms/formcontrolname&quot;&gt;FormControlName&lt;/a&gt;&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4e719651b95774d5d34ffe3d1bbd55b00706ab7b" translate="yes" xml:space="preserve">
          <source>The default Renderer implementation is &lt;code&gt;DomRenderer&lt;/code&gt;. Also available is &lt;code&gt;WebWorkerRenderer&lt;/code&gt;.</source>
          <target state="translated">Реализация Renderer по умолчанию - &lt;code&gt;DomRenderer&lt;/code&gt; . Также доступен &lt;code&gt;WebWorkerRenderer&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8144ff44256c0840ffad9f04ff6fa0e5521432e2" translate="yes" xml:space="preserve">
          <source>The default application created by the Angular CLI only has one component, &lt;code&gt;AppComponent&lt;/code&gt;, so it is in both the &lt;code&gt;declarations&lt;/code&gt; and the &lt;code&gt;bootstrap&lt;/code&gt; arrays.</source>
          <target state="translated">Приложение по умолчанию, созданное Angular CLI, имеет только один компонент, &lt;code&gt;AppComponent&lt;/code&gt; , поэтому он находится как в &lt;code&gt;declarations&lt;/code&gt; и в массивах &lt;code&gt;bootstrap&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="faf5e63ed78ca0e97a9ecedb41e45ca7f39187d5" translate="yes" xml:space="preserve">
          <source>The default behavior of registering once the application stabilizes (i.e. as soon as there are no pending micro- and macro-tasks) is designed to register the ServiceWorker as soon as possible but without affecting the application's first time load.</source>
          <target state="translated">Поведение по умолчанию при регистрации после стабилизации приложения (т.е.при отсутствии отложенных микро-и макро-задач)рассчитано на то,чтобы зарегистрировать ServiceWorker как можно быстрее,но без влияния на первую загрузку приложения.</target>
        </trans-unit>
        <trans-unit id="672d2814be4490a28b926b37ab8405f75d9fe39e" translate="yes" xml:space="preserve">
          <source>The default behavior of registering once the application stabilizes (i.e. as soon as there are no pending micro- and macro-tasks), is designed register the ServiceWorker as soon as possible but without affecting the application's first time load.</source>
          <target state="translated">Поведение по умолчанию при регистрации после стабилизации приложения (т.е.при отсутствии отложенных микро-и макро-задач),спроектировано так,чтобы регистрировать ServiceWorker как можно быстрее,но без влияния на первую загрузку приложения.</target>
        </trans-unit>
        <trans-unit id="cce4ed312ef59874b902e6e384a1d10149839da4" translate="yes" xml:space="preserve">
          <source>The default browser opens and displays the Getting Started sample application.</source>
          <target state="translated">В браузере по умолчанию открывается и отображается приложение &quot;Начало работы с образцом&quot;.</target>
        </trans-unit>
        <trans-unit id="0f5ba8741324b5f3ed216ef4d87ba588c6257ad8" translate="yes" xml:space="preserve">
          <source>The default change-detection algorithm looks for differences by comparing bound-property values by reference across change detection runs. You can use this hook to check for and respond to changes by some other means.</source>
          <target state="translated">Алгоритм обнаружения изменений по умолчанию ищет различия,сравнивая значения свойств по ссылке в разных прогонах обнаружения изменений.Вы можете использовать этот крючок для проверки изменений и реагирования на них какими-либо другими способами.</target>
        </trans-unit>
        <trans-unit id="3bdda24538401899e9cf064e6950ae0505e59468" translate="yes" xml:space="preserve">
          <source>The default currency code is currently always &lt;code&gt;USD&lt;/code&gt; but this is deprecated from v9.</source>
          <target state="translated">Код валюты по умолчанию в настоящее время всегда - &lt;code&gt;USD&lt;/code&gt; но это устарело с версии 9.</target>
        </trans-unit>
        <trans-unit id="082b0e1b657a0cc56834735f1afbffb10d4ce270" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;&lt;a href=&quot;errorhandler&quot;&gt;ErrorHandler&lt;/a&gt;&lt;/code&gt; prints error messages to the &lt;code&gt;console&lt;/code&gt;. To intercept error handling, write a custom exception handler that replaces this default as appropriate for your app.</source>
          <target state="translated">Реализация по умолчанию &lt;code&gt;&lt;a href=&quot;errorhandler&quot;&gt;ErrorHandler&lt;/a&gt;&lt;/code&gt; выводит сообщения об ошибках на &lt;code&gt;console&lt;/code&gt; . Чтобы перехватить обработку ошибок, напишите пользовательский обработчик исключений, который заменяет это значение по умолчанию в соответствии с вашим приложением.</target>
        </trans-unit>
        <trans-unit id="db3547e124faaafb5a7338dfb8bf9084eed6ca08" translate="yes" xml:space="preserve">
          <source>The default in v11 is &lt;code&gt;corrected&lt;/code&gt;.</source>
          <target state="translated">По умолчанию в v11 будет &lt;code&gt;corrected&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3da2e963162d2e85424f83d2c8181d34306ac18d" translate="yes" xml:space="preserve">
          <source>The default is &lt;code&gt;false&lt;/code&gt;. Testers who prefer fine control over test behavior tend to keep it &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">По умолчанию установлено значение &lt;code&gt;false&lt;/code&gt; . Тестеры, которые предпочитают точный контроль над тестовым поведением, склонны сохранять его &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5ebb2e2795a7b0b2584064979361ec77fdedf64e" translate="yes" xml:space="preserve">
          <source>The default is defined as the first currency which is still in use.</source>
          <target state="translated">По умолчанию определяется как первая используемая валюта.</target>
        </trans-unit>
        <trans-unit id="f3ba8d89cb5ef08f208e48a85b605b4310bf02cf" translate="yes" xml:space="preserve">
          <source>The default linting tool is &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;TSLint&lt;/a&gt;, and the default configuration is specified in the project's &lt;code&gt;tslint.json&lt;/code&gt; file.</source>
          <target state="translated">Инструментом для &lt;a href=&quot;https://palantir.github.io/tslint/&quot;&gt;рисования&lt;/a&gt; по умолчанию является TSLint , а конфигурация по умолчанию указана в файле проекта &lt;code&gt;tslint.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa5bb1f5c1cbe109211dd889cbb9c6ae3627b274" translate="yes" xml:space="preserve">
          <source>The default path-match strategy is 'prefix', which means that the router checks URL elements from the left to see if the URL matches a specified path. For example, '/team/11/user' matches 'team/:id'.</source>
          <target state="translated">По умолчанию стратегия сопоставления путей-это &quot;префикс&quot;,что означает,что маршрутизатор проверяет элементы URL слева,чтобы посмотреть,соответствует ли URL указанному пути.Например,'/team/11/user' соответствует 'team/:id'.</target>
        </trans-unit>
        <trans-unit id="a47bf320097df757ab7493c282071f6bfda35329" translate="yes" xml:space="preserve">
          <source>The default project is the value of &lt;code&gt;defaultProject&lt;/code&gt; in &lt;code&gt;angular.json&lt;/code&gt;.</source>
          <target state="translated">Проект по умолчанию - это значение &lt;code&gt;defaultProject&lt;/code&gt; в &lt;code&gt;angular.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="41162e3fcbf077344fe0553550fad85de67bc73a" translate="yes" xml:space="preserve">
          <source>The default route should redirect to the &lt;code&gt;HeroListComponent&lt;/code&gt; only when the entire url is &lt;code&gt;''&lt;/code&gt;. Remember to restore the redirect to &lt;code&gt;pathMatch = 'full'&lt;/code&gt;.</source>
          <target state="translated">Маршрут по умолчанию должен перенаправлять на &lt;code&gt;HeroListComponent&lt;/code&gt; только тогда, когда весь URL-адрес - &lt;code&gt;''&lt;/code&gt; . Не забудьте восстановить перенаправление на &lt;code&gt;pathMatch = 'full'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="35028a29988fb7b9cfea4b5e01d0bd632d1882bd" translate="yes" xml:space="preserve">
          <source>The default route should redirect to the &lt;code&gt;HeroListComponent&lt;/code&gt;&lt;em&gt;only&lt;/em&gt; when the &lt;em&gt;entire&lt;/em&gt; url is &lt;code&gt;''&lt;/code&gt;. Remember to restore the redirect to &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt; = '&lt;a href=&quot;../api/core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt;.</source>
          <target state="translated">Маршрут по умолчанию должен перенаправляться на &lt;code&gt;HeroListComponent&lt;/code&gt; &lt;em&gt;только&lt;/em&gt; тогда, когда &lt;em&gt;весь&lt;/em&gt; URL-адрес равен &lt;code&gt;''&lt;/code&gt; . Не забудьте восстановить перенаправление на &lt;code&gt;&lt;a href=&quot;../api/router/route#pathMatch&quot;&gt;pathMatch&lt;/a&gt; = '&lt;a href=&quot;../api/core/version#full&quot;&gt;full&lt;/a&gt;'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40dc3536f16b1ce21d8af7dde493b0505694ab3d" translate="yes" xml:space="preserve">
          <source>The definition of a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; element to match or create.</source>
          <target state="translated">Определение элемента &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; для сопоставления или создания.</target>
        </trans-unit>
        <trans-unit id="29c7e53a19049e62c9da95d6a0a14c4a3484e84c" translate="yes" xml:space="preserve">
          <source>The dependency injector provides services to a component, such as the router service that lets you define navigation among views.</source>
          <target state="translated">Инжектор зависимости предоставляет услуги компоненту,такому как сервис маршрутизатора,который позволяет определить навигацию между просмотрами.</target>
        </trans-unit>
        <trans-unit id="b7a62bbd3b9e12b19e45e6db0e78136526c99fd6" translate="yes" xml:space="preserve">
          <source>The dependency object (returned by the factory function) is typically a class instance, but can be other things as well. In this example, the dependency object is a string of the names of the runners up to the &quot;Hero of the Month&quot; contest.</source>
          <target state="translated">Объект зависимости (возвращаемый заводской функцией)обычно является экземпляром класса,но может быть и другим.В данном примере объект зависимости представляет собой строку имен бегунов до конкурса &quot;Герой месяца&quot;.</target>
        </trans-unit>
        <trans-unit id="0c7316f7415af94bc3bb1c1645bdc8512fc3d426" translate="yes" xml:space="preserve">
          <source>The detail view is different. It displays a particular hero. It can't know which hero to show on its own. That information must come from outside.</source>
          <target state="translated">Детальный вид отличается.Он отображает конкретного героя.Он не может знать,какого героя показать самому.Эта информация должна поступать извне.</target>
        </trans-unit>
        <trans-unit id="4c817e48763ae86e1867cf929f8071103e83a6b1" translate="yes" xml:space="preserve">
          <source>The details are specific to each kind of element and therefore the &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; directive only works for an element supported by a &lt;a href=&quot;../api/forms/controlvalueaccessor&quot;&gt;ControlValueAccessor&lt;/a&gt; that adapts an element to this protocol. Angular provides &lt;em&gt;value accessors&lt;/em&gt; for all of the basic HTML form elements and the &lt;a href=&quot;forms&quot;&gt;Forms&lt;/a&gt; guide shows how to bind to them.</source>
          <target state="translated">Детали специфичны для каждого вида элементов, и поэтому директива &lt;code&gt;&lt;a href=&quot;../api/forms/ngmodel&quot;&gt;NgModel&lt;/a&gt;&lt;/code&gt; работает только для элемента, поддерживаемого &lt;a href=&quot;../api/forms/controlvalueaccessor&quot;&gt;ControlValueAccessor,&lt;/a&gt; который адаптирует элемент к этому протоколу. Angular предоставляет средства &lt;em&gt;доступа&lt;/em&gt; к &lt;em&gt;значениям&lt;/em&gt; для всех основных элементов формы HTML, а руководство по &lt;a href=&quot;forms&quot;&gt;формам&lt;/a&gt; показывает, как с ними связываться.</target>
        </trans-unit>
        <trans-unit id="a724916e40e1a922d989c92b3ecf082d7928f9a8" translate="yes" xml:space="preserve">
          <source>The details child route requires an &lt;code&gt;id&lt;/code&gt; route parameter.</source>
          <target state="translated">Для дочернего маршрута требуется параметр &lt;code&gt;id&lt;/code&gt; маршрута.</target>
        </trans-unit>
        <trans-unit id="f0ac9df13cb70c5c72364ce763f333d5013d07ec" translate="yes" xml:space="preserve">
          <source>The details of Angular router configuration are best left to the &lt;a href=&quot;router&quot;&gt;Routing documentation&lt;/a&gt; which recommends that you create a &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; dedicated to router configuration (called a &lt;em&gt;Routing Module&lt;/em&gt;).</source>
          <target state="translated">Подробные сведения о конфигурации маршрутизатора Angular лучше оставить в &lt;a href=&quot;router&quot;&gt;документации&lt;/a&gt; по маршрутизации, в которой рекомендуется создать &lt;code&gt;&lt;a href=&quot;../api/core/ngmodule&quot;&gt;NgModule&lt;/a&gt;&lt;/code&gt; предназначенный для конфигурации маршрутизатора (называемый &lt;em&gt;модулем маршрутизации&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="8a9f2a38fc0d832b04fd3ce2fa72347e9013e429" translate="yes" xml:space="preserve">
          <source>The diagnostic is evidence that values really are flowing from the input box to the model and back again.</source>
          <target state="translated">Диагностика свидетельствует о том,что значения действительно поступают из входного блока в модель и обратно.</target>
        </trans-unit>
        <trans-unit id="6cfa18b3ca324abf3063bbd00b532a641ab1a8b0" translate="yes" xml:space="preserve">
          <source>The diagnostic line that shows interpolated values demonstrates that values are really flowing from the input box to the model and back again.</source>
          <target state="translated">Диагностическая линия,показывающая интерполированные значения,демонстрирует,что значения действительно передаются от входного блока к модели и обратно.</target>
        </trans-unit>
        <trans-unit id="21adcbdc5aef6ef62df6c7fe98623baf3748c6ed" translate="yes" xml:space="preserve">
          <source>The diagnostic near the top of the form confirms that all of your changes are reflected in the model.</source>
          <target state="translated">Диагностика в верхней части формы подтверждает,что все ваши изменения отражены в модели.</target>
        </trans-unit>
        <trans-unit id="e6efeb726810925d371a1fb1a6d0474051cdf771" translate="yes" xml:space="preserve">
          <source>The difference between hiding and removing doesn't matter for a simple paragraph. It does matter when the host element is attached to a resource intensive component. Such a component's behavior continues even when hidden. The component stays attached to its DOM element. It keeps listening to events. Angular keeps checking for changes that could affect data bindings. Whatever the component was doing, it keeps doing.</source>
          <target state="translated">Разница между сокрытием и удалением не имеет значения для простого абзаца.Имеет значение,когда элемент хоста прикреплен к ресурсоемкому компоненту.Поведение такого компонента продолжается даже когда он скрыт.Компонент остается прикрепленным к своему DOM-элементу.Он продолжает слушать события.Угловой продолжает проверять изменения,которые могут повлиять на привязку данных.Что бы ни делал компонент,он продолжает делать.</target>
        </trans-unit>
        <trans-unit id="05f9c87a5a6b790829816cc1f58f2d347fb1340f" translate="yes" xml:space="preserve">
          <source>The difference is a matter of trust. Angular treats a component's template as &lt;em&gt;belonging&lt;/em&gt; to the component. The component and its template trust each other implicitly. Therefore, the component's own template may bind to &lt;em&gt;any&lt;/em&gt; property of that component, with or without the &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; decorator.</source>
          <target state="translated">Разница заключается в доверии. Angular рассматривает шаблон компонента как &lt;em&gt;принадлежащий&lt;/em&gt; компоненту. Компонент и его шаблон доверяют друг другу неявно. Следовательно, собственный шаблон компонента может связываться с &lt;em&gt;любым&lt;/em&gt; свойством этого компонента, с или без декоратора &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="34d8a0c8d3141d61c5f06db8d5d7c912587d8341" translate="yes" xml:space="preserve">
          <source>The difference is demonstrated in the examples above using the &lt;strong&gt;favorite color&lt;/strong&gt; input element.</source>
          <target state="translated">Разница демонстрируется в приведенных выше примерах с использованием элемента ввода &lt;strong&gt;любимого цвета&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d0b68e8984c3be4843fe55f903fdbda57abf5093" translate="yes" xml:space="preserve">
          <source>The difference is demonstrated in the previous examples that use the favorite-color input element.</source>
          <target state="translated">Разница показана в предыдущих примерах,где используется элемент ввода любимого цвета.</target>
        </trans-unit>
        <trans-unit id="ea05ec71ce84c9eace3d13785908f6ad65b675c9" translate="yes" xml:space="preserve">
          <source>The differences between &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; end here. The rest of the &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; APIs and concepts work in the exact same way for both types of hybrid apps. See &lt;a href=&quot;upgrade&quot;&gt;Upgrading from AngularJS&lt;/a&gt; to learn about:</source>
          <target state="translated">Различия между &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/downgrademodule&quot;&gt;downgradeModule&lt;/a&gt;()&lt;/code&gt; и &lt;code&gt;&lt;a href=&quot;../api/upgrade/static/upgrademodule&quot;&gt;UpgradeModule&lt;/a&gt;&lt;/code&gt; заканчиваются здесь. Остальные API и концепции &lt;code&gt;&lt;a href=&quot;../api/upgrade/static&quot;&gt;upgrade/static&lt;/a&gt;&lt;/code&gt; работают одинаково для обоих типов гибридных приложений. Смотрите &lt;a href=&quot;upgrade&quot;&gt;Обновление от AngularJS,&lt;/a&gt; чтобы узнать о:</target>
        </trans-unit>
        <trans-unit id="6588061d3d1691e6fff573c5dfe4f13036d79c9f" translate="yes" xml:space="preserve">
          <source>The differences from the WHATWG version include:</source>
          <target state="translated">Отличия от версии WHATWG включают в себя:</target>
        </trans-unit>
        <trans-unit id="c0cd765a4fa83561fb7b303deb68bf2d797c31c7" translate="yes" xml:space="preserve">
          <source>The different parts of the above declaration are as follows:</source>
          <target state="translated">Различные части вышеуказанной декларации являются следующими:</target>
        </trans-unit>
        <trans-unit id="8b57de4f61f7ca0b603af7696485495da36c5ceb" translate="yes" xml:space="preserve">
          <source>The directive (&lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt;) that marks where the router displays a view.</source>
          <target state="translated">Директива ( &lt;code&gt;&amp;lt;&lt;a href=&quot;../api/router/routeroutlet&quot;&gt;router-outlet&lt;/a&gt;&amp;gt;&lt;/code&gt; ), которая отмечает, где маршрутизатор отображает представление.</target>
        </trans-unit>
        <trans-unit id="e2a943aff4c59b087f2ebcb886a4b3d822ed396d" translate="yes" xml:space="preserve">
          <source>The directive &lt;em&gt;attribute name&lt;/em&gt; should be spelled in &lt;em&gt;lowerCamelCase&lt;/em&gt; and begin with a prefix. Don't use &lt;code&gt;ng&lt;/code&gt;. That prefix belongs to Angular. Pick something short that fits you or your company. In this example, the prefix is &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">Имя &lt;em&gt;атрибута&lt;/em&gt; директивы должно быть записано в &lt;em&gt;lowerCamelCase&lt;/em&gt; и начинаться с префикса. Не используйте &lt;code&gt;ng&lt;/code&gt; . Этот префикс принадлежит Angular. Выберите что-нибудь короткое, что подходит вам или вашей компании. В этом примере префикс &lt;code&gt;app&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba6a347d4773ad30b8df5e51d0a337cc8bc69a55" translate="yes" xml:space="preserve">
          <source>The directive &lt;em&gt;class&lt;/em&gt; name ends in &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; per the &lt;a href=&quot;styleguide#02-03&quot;&gt;style guide&lt;/a&gt;. Angular's own directives do not.</source>
          <target state="translated">Имя &lt;em&gt;класса&lt;/em&gt; директивы оканчивается на &lt;code&gt;&lt;a href=&quot;../api/core/directive&quot;&gt;Directive&lt;/a&gt;&lt;/code&gt; соответствии с &lt;a href=&quot;styleguide#02-03&quot;&gt;руководством&lt;/a&gt; по стилю . Собственные директивы Angular этого не делают.</target>
        </trans-unit>
        <trans-unit id="51842e95f5cffa45ec0bfdc97ee2a7c20674dbdc" translate="yes" xml:space="preserve">
          <source>The directive class then implements the &lt;code&gt;&lt;a href=&quot;../api/forms/validator&quot;&gt;Validator&lt;/a&gt;&lt;/code&gt; interface, so that it can easily integrate with Angular forms. Here is the rest of the directive to help you get an idea of how it all comes together.</source>
          <target state="translated">Затем класс директив реализует интерфейс &lt;code&gt;&lt;a href=&quot;../api/forms/validator&quot;&gt;Validator&lt;/a&gt;&lt;/code&gt; , чтобы его можно было легко интегрировать с формами Angular. Вот остальная часть директивы, которая поможет вам понять, как все это сочетается.</target>
        </trans-unit>
        <trans-unit id="478c2c1ea3888dc7a9fd6ef30943705c388014aa" translate="yes" xml:space="preserve">
          <source>The directive class then implements the &lt;code&gt;&lt;a href=&quot;../api/forms/validator&quot;&gt;Validator&lt;/a&gt;&lt;/code&gt; interface, so that it can easily integrate with Angular forms. Here is the rest of the directive to help you get an idea of how it all comes together:</source>
          <target state="translated">Класс директивы затем реализует интерфейс &lt;code&gt;&lt;a href=&quot;../api/forms/validator&quot;&gt;Validator&lt;/a&gt;&lt;/code&gt; , так что он может легко интегрироваться с угловыми формами. Вот остальная часть директивы, чтобы помочь вам понять, как все это происходит вместе:</target>
        </trans-unit>
        <trans-unit id="b6bcdd91bdc7b44148909c3bc1149dbbef3ee183" translate="yes" xml:space="preserve">
          <source>The directive configures the component template to define how the user navigates to the route or URL. When the user clicks a product name, the app displays the details for that product.</source>
          <target state="translated">Директива настраивает шаблон компонента на определение того,как пользователь переходит к маршруту или URL.Когда пользователь щелкает по названию продукта,приложение отображает подробную информацию об этом продукте.</target>
        </trans-unit>
        <trans-unit id="fef982e6c8f1c3d4a71424e22b9ee7addfb89bda" translate="yes" xml:space="preserve">
          <source>The directive consumer expects to bind a true/false condition to &lt;code&gt;[appUnless]&lt;/code&gt;. That means the directive needs an &lt;code&gt;appUnless&lt;/code&gt; property, decorated with &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Потребитель директивы ожидает связать условие &amp;laquo;истина / ложь&amp;raquo; с &lt;code&gt;[appUnless]&lt;/code&gt; . Это означает, что директиве нужно свойство &lt;code&gt;appUnless&lt;/code&gt; , украшенное &lt;code&gt;@&lt;a href=&quot;../api/core/input&quot;&gt;Input&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e4d5899afdcb557b6934f6b0ba2aaa7025a8c64" translate="yes" xml:space="preserve">
          <source>The directive creates an &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; and exposes it as a property.</source>
          <target state="translated">Директива создает &lt;code&gt;&lt;a href=&quot;../api/core/eventemitter&quot;&gt;EventEmitter&lt;/a&gt;&lt;/code&gt; и предоставляет его как свойство.</target>
        </trans-unit>
        <trans-unit id="3fce666c3d79d1e2430245c510a12d4b3059abdd" translate="yes" xml:space="preserve">
          <source>The directive defines &lt;code&gt;ngOnInit()&lt;/code&gt; and &lt;code&gt;ngOnDestroy()&lt;/code&gt; hooks that log messages to the parent via an injected &lt;code&gt;LoggerService&lt;/code&gt;.</source>
          <target state="translated">Директива определяет &lt;code&gt;ngOnInit()&lt;/code&gt; и &lt;code&gt;ngOnDestroy()&lt;/code&gt; которые регистрируют сообщения для родителя через &lt;code&gt;LoggerService&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db669c56bde0e0533c1d29dfee5bfc6ec09764ad" translate="yes" xml:space="preserve">
          <source>The directive for adding/removing classes from an HTML element when an associated &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; contained on or inside the element becomes active/inactive.</source>
          <target state="translated">Директива для добавления / удаления классов из HTML-элемента, когда связанный &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; , содержащийся внутри или внутри элемента, становится активным / неактивным.</target>
        </trans-unit>
        <trans-unit id="7b6fd6a150b5d66afb816ae7295a48ec4f8688d7" translate="yes" xml:space="preserve">
          <source>The directive for binding a clickable HTML element to a route. Clicking an element with a &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; directive that is bound to a</source>
          <target state="translated">Директива для привязки активируемого HTML-элемента к маршруту. Нажав на элемент с директивой &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;routerLink&lt;/a&gt;&lt;/code&gt; , который связан с</target>
        </trans-unit>
        <trans-unit id="720f2f8cb29907d240dec98a3b152961aea40b80" translate="yes" xml:space="preserve">
          <source>The directive instance.</source>
          <target state="translated">Директивный экземпляр.</target>
        </trans-unit>
        <trans-unit id="f9fd79ce44d9191d35df57d19db01b5aa188436a" translate="yes" xml:space="preserve">
          <source>The directive sets the background to a highlight color when the user mouses over the DOM element to which the directive is applied.</source>
          <target state="translated">Директива устанавливает цвет фона подсветки,когда пользователь мышит над элементом DOM,к которому применяется директива.</target>
        </trans-unit>
        <trans-unit id="3179195806726150a32be026d2382af65d93e04a" translate="yes" xml:space="preserve">
          <source>The directive then calls &lt;code&gt;EventEmitter.emit(data)&lt;/code&gt; to emit an event, passing in message data, which can be anything.</source>
          <target state="translated">Затем директива вызывает &lt;code&gt;EventEmitter.emit(data)&lt;/code&gt; для генерации события, передавая данные сообщения, которые могут быть любыми.</target>
        </trans-unit>
        <trans-unit id="3dadb675af202c36e02cf9e0644a0f6784933e09" translate="yes" xml:space="preserve">
          <source>The directive's &lt;em&gt;selector&lt;/em&gt; is typically the directive's &lt;strong&gt;attribute name&lt;/strong&gt; in square brackets, &lt;code&gt;[appUnless]&lt;/code&gt;. The brackets define a CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors&quot;&gt;attribute selector&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;Селектором&lt;/em&gt; директивы обычно является &lt;strong&gt;имя атрибута&lt;/strong&gt; директивы в квадратных скобках, &lt;code&gt;[appUnless]&lt;/code&gt; . Скобки определяют &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Attribute_selectors&quot;&gt;селектор атрибута&lt;/a&gt; CSS .</target>
        </trans-unit>
        <trans-unit id="a65366dfec5fde7acab8128614c62e56b18c5c2e" translate="yes" xml:space="preserve">
          <source>The directory name to create the workspace in.</source>
          <target state="translated">Имя каталога для создания рабочей области в.</target>
        </trans-unit>
        <trans-unit id="0c859cde8538cadb116c397acbbea91d60134e68" translate="yes" xml:space="preserve">
          <source>The disabled status to set on the element</source>
          <target state="translated">Статус &quot;Отключено&quot;,который должен быть установлен на элементе</target>
        </trans-unit>
        <trans-unit id="0dedb18c8e3657fdad61ad7a842be7e630e26797" translate="yes" xml:space="preserve">
          <source>The disabled value</source>
          <target state="translated">Отключенное значение</target>
        </trans-unit>
        <trans-unit id="f237bd4f809c19acaa65706b33e3dc5e3b8749b9" translate="yes" xml:space="preserve">
          <source>The display looks the same, but the code is clearer.</source>
          <target state="translated">Дисплей выглядит так же,но код более четкий.</target>
        </trans-unit>
        <trans-unit id="d8bcb8d5d64520feb45a9a032da8776b213521b0" translate="yes" xml:space="preserve">
          <source>The displayed value changes as you update the form control element.</source>
          <target state="translated">При обновлении элемента управления формой отображаемое значение изменяется.</target>
        </trans-unit>
        <trans-unit id="166a9002f622127466458a0d9c6c3c60c8874330" translate="yes" xml:space="preserve">
          <source>The distinction between an HTML attribute and a DOM property is key to understanding how Angular binding works. &lt;strong&gt;Attributes are defined by HTML. Properties are accessed from DOM (Document Object Model) nodes.&lt;/strong&gt;</source>
          <target state="translated">Различие между атрибутом HTML и свойством DOM является ключом к пониманию того, как работает угловое связывание. &lt;strong&gt;Атрибуты определяются HTML. Доступ к свойствам осуществляется из узлов DOM (объектная модель документа).&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5be893a71b5822406de32b6141daaf6fcfc26fc8" translate="yes" xml:space="preserve">
          <source>The doc generation process consumes the markdown files in the &lt;code&gt;content/guide&lt;/code&gt; directory and produces JSON files in the &lt;code&gt;src/generated/docs/guide&lt;/code&gt; directory, which is also flat. Those JSON files contain a combination of document metadata and HTML content.</source>
          <target state="translated">Процесс создания документа использует файлы уценки в каталоге &lt;code&gt;content/guide&lt;/code&gt; и создает файлы JSON в каталоге &lt;code&gt;src/generated/docs/guide&lt;/code&gt; , который также является плоским. Эти файлы JSON содержат комбинацию метаданных документа и содержимого HTML.</target>
        </trans-unit>
        <trans-unit id="757ded666a68b6c3ac40103b86cb3424cfc48bbf" translate="yes" xml:space="preserve">
          <source>The doc generation process erases these comments before displaying them in the doc viewer. It also strips them from stackblitz and sample code downloads.</source>
          <target state="translated">Процесс генерации док-станции стирает эти комментарии перед их отображением в окне просмотра док-станции.Он также удаляет их из стек-блица и примеров загрузки кода.</target>
        </trans-unit>
        <trans-unit id="4c43f4f32a923e773c7cd6d68f1699d4b637e4d5" translate="yes" xml:space="preserve">
          <source>The doc generator reads the image dimensions from the file and adds width and height attributes to the &lt;code&gt;img&lt;/code&gt; tag automatically. If you want to control the size of the image, supply your own width and height attributes.</source>
          <target state="translated">Генератор документов считывает размеры изображения из файла и автоматически добавляет атрибуты ширины и высоты в тег &lt;code&gt;img&lt;/code&gt; . Если вы хотите контролировать размер изображения, укажите свои собственные атрибуты ширины и высоты.</target>
        </trans-unit>
        <trans-unit id="0db28a33c3d601d7a77b4ee9b1f07754d91499dd" translate="yes" xml:space="preserve">
          <source>The doc tooling reports an error if the file identified in the path does not exist &lt;strong&gt;or is &lt;em&gt;git&lt;/em&gt;-ignored&lt;/strong&gt;.</source>
          <target state="translated">Инструмент doc сообщает об ошибке, если указанный в пути файл не существует &lt;strong&gt;или имеет &lt;em&gt;git-&lt;/em&gt; значение&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a8ce0feb69612f68f0f5866a34dd0b783bcf3d1b" translate="yes" xml:space="preserve">
          <source>The documentation generally refers to &lt;em&gt;elements&lt;/em&gt; (&lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; instances), as distinct from &lt;em&gt;DOM elements&lt;/em&gt; (which can be accessed directly if necessary).</source>
          <target state="translated">Документация обычно ссылается на &lt;em&gt;элементы&lt;/em&gt; ( экземпляры &lt;code&gt;&lt;a href=&quot;../api/core/elementref&quot;&gt;ElementRef&lt;/a&gt;&lt;/code&gt; ), в отличие от &lt;em&gt;элементов DOM&lt;/em&gt; (к которым можно обращаться напрямую, если это необходимо).</target>
        </trans-unit>
        <trans-unit id="6950b5369e17c747d6d6f1e74badedf7eff1e093" translate="yes" xml:space="preserve">
          <source>The double curly braces are Angular's &lt;em&gt;interpolation binding&lt;/em&gt; syntax. This interpolation binding presents the component's &lt;code&gt;title&lt;/code&gt; property value inside the HTML header tag.</source>
          <target state="translated">Двойные фигурные скобки - это синтаксис &lt;em&gt;привязки интерполяции&lt;/em&gt; Angular . Эта интерполяционная привязка представляет значение свойства &lt;code&gt;title&lt;/code&gt; компонента внутри тега заголовка HTML.</target>
        </trans-unit>
        <trans-unit id="60368b0fb0530b310d1b03d0c629cde2a42557de" translate="yes" xml:space="preserve">
          <source>The drop down works properly.</source>
          <target state="translated">Падение работает нормально.</target>
        </trans-unit>
        <trans-unit id="f7df533c465dacb0b3380c1fdf650cf2849bea23" translate="yes" xml:space="preserve">
          <source>The dynamic form itself will be represented by a container component, which you will add in a later step. Each question is represented in the form component's template by an &lt;code&gt;&amp;lt;app-question&amp;gt;&lt;/code&gt; tag, which matches an instance of &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt;.</source>
          <target state="translated">Сама динамическая форма будет представлена ​​компонентом контейнера, который вы добавите на более позднем этапе. Каждый вопрос представлен в шаблоне компонента формы тегом &lt;code&gt;&amp;lt;app-question&amp;gt;&lt;/code&gt; , который соответствует экземпляру &lt;code&gt;DynamicFormQuestionComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7022688694dc65a2c8f3c08da2b0a9b3ae17aba" translate="yes" xml:space="preserve">
          <source>The eagerly loaded scenario</source>
          <target state="translated">Желательно загруженный сценарий</target>
        </trans-unit>
        <trans-unit id="ea57f8da3c0e12c71f28c904fd0f0841386ae246" translate="yes" xml:space="preserve">
          <source>The easiest way to create a component is with the Angular CLI. You can also create a component manually.</source>
          <target state="translated">Самый простой способ создания компонента-с помощью Углового CLI.Вы также можете создать компонент вручную.</target>
        </trans-unit>
        <trans-unit id="c12f2ea045d53bad086859121475d2ad2a833c0a" translate="yes" xml:space="preserve">
          <source>The easiest way to display a component property is to bind the property name through interpolation. With interpolation, you put the property name in the view template, enclosed in double curly braces: &lt;code&gt;{{myHero}}&lt;/code&gt;.</source>
          <target state="translated">Самый простой способ отобразить свойство компонента - связать имя свойства с помощью интерполяции. При интерполяции вы вводите имя свойства в шаблон представления, заключенное в двойные фигурные скобки: &lt;code&gt;{{myHero}}&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d1ec4c9b3516ed0310d2e6eabdaf99dbd349d4a" translate="yes" xml:space="preserve">
          <source>The easing value controls how the animation accelerates and decelerates during its runtime. Value is one of &lt;code&gt;ease&lt;/code&gt;, &lt;code&gt;ease-in&lt;/code&gt;, &lt;code&gt;ease-out&lt;/code&gt;, &lt;code&gt;ease-in-out&lt;/code&gt;, or a &lt;code&gt;cubic-bezier()&lt;/code&gt; function call. If not supplied, no easing is applied.</source>
          <target state="translated">Значение замедления контролирует, как анимация ускоряется и замедляется во время выполнения. Значение может быть одним из следующих: &lt;code&gt;ease&lt;/code&gt; , &lt;code&gt;ease-in&lt;/code&gt; , &lt;code&gt;ease-out&lt;/code&gt; , &lt;code&gt;ease-in-out&lt;/code&gt; или &lt;code&gt;cubic-bezier()&lt;/code&gt; вызов функции Безье () . Если не поставляется, смягчение не применяется.</target>
        </trans-unit>
        <trans-unit id="673d673b2746886a3adde806bd89c20b0680bdef" translate="yes" xml:space="preserve">
          <source>The element tag name, if it is an element.</source>
          <target state="translated">Имя тега элемента,если это элемент.</target>
        </trans-unit>
        <trans-unit id="d27c746aa80a187e9f22b16f7b95f9f1bed7667f" translate="yes" xml:space="preserve">
          <source>The element that will recognize gestures.</source>
          <target state="translated">Элемент,который распознает жесты.</target>
        </trans-unit>
        <trans-unit id="e0442f5cd8f77d16465566da511146ed7ff5097c" translate="yes" xml:space="preserve">
          <source>The element to query, or a set of elements that contain Angular-specific characteristics, specified with one or more of the following tokens.</source>
          <target state="translated">Элемент для запроса или набор элементов,которые содержат угловые характеристики,заданные одной или несколькими из следующих лексем.</target>
        </trans-unit>
        <trans-unit id="84276241b9685b6ea2701e6001dbf22cb649f9c1" translate="yes" xml:space="preserve">
          <source>The element to render.</source>
          <target state="translated">Элемент для рендеринга.</target>
        </trans-unit>
        <trans-unit id="9131974bc73e41cfa82641177ab47b4bbe64ec2b" translate="yes" xml:space="preserve">
          <source>The element to which the animation is attached.</source>
          <target state="translated">Элемент,к которому прикреплена анимация.</target>
        </trans-unit>
        <trans-unit id="46178d56386d4cf368fc2af3376e280cef598d8e" translate="yes" xml:space="preserve">
          <source>The element to which you apply a directive is its &lt;em&gt;host&lt;/em&gt; element. The &lt;code&gt;&amp;lt;happy-hero&amp;gt;&lt;/code&gt; is the host element for the happy &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&amp;lt;unknown-hero&amp;gt;&lt;/code&gt; is the host element for the &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Элемент, к которому вы применяете директиву, является его &lt;em&gt;хост-&lt;/em&gt; элементом. &lt;code&gt;&amp;lt;happy-hero&amp;gt;&lt;/code&gt; является хозяином элемент для счастливого &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchcase&quot;&gt;ngSwitchCase&lt;/a&gt;&lt;/code&gt; . &lt;code&gt;&amp;lt;unknown-hero&amp;gt;&lt;/code&gt; является хозяином элемент для &lt;code&gt;*&lt;a href=&quot;../api/common/ngswitchdefault&quot;&gt;ngSwitchDefault&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21955f7341d9631161057f2409976b172f526079" translate="yes" xml:space="preserve">
          <source>The element's own component instance, if it has one.</source>
          <target state="translated">Собственный экземпляр элемента,если у него он есть.</target>
        </trans-unit>
        <trans-unit id="3bf4b7ea68f964a8343706cfd8e0de47b6ae2323" translate="yes" xml:space="preserve">
          <source>The element.</source>
          <target state="translated">Элемент.</target>
        </trans-unit>
        <trans-unit id="4ad5959dbe7800ed816d9f5708f3fc045876a16c" translate="yes" xml:space="preserve">
          <source>The empty path in the fourth route represents the default path for the application&amp;mdash;the place to go when the path in the URL is empty, as it typically is at the start. This default route redirects to the route for the &lt;code&gt;/heroes&lt;/code&gt; URL and, therefore, displays the &lt;code&gt;HeroesListComponent&lt;/code&gt;.</source>
          <target state="translated">Пустой путь в четвертом маршруте представляет собой путь по умолчанию для приложения - место, куда нужно перейти, когда путь в URL-адресе пуст, как обычно в начале. Этот маршрут по умолчанию перенаправляет на маршрут для URL-адреса &lt;code&gt;/heroes&lt;/code&gt; и, следовательно, отображает &lt;code&gt;HeroesListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f953b82a33a57fd342ecf714841bf89e003c89ed" translate="yes" xml:space="preserve">
          <source>The encoded key name.</source>
          <target state="translated">Имя закодированного ключа.</target>
        </trans-unit>
        <trans-unit id="77a9b35bf33aad2c1e20f1db858b00aff0e15a54" translate="yes" xml:space="preserve">
          <source>The encoded value.</source>
          <target state="translated">Закодированное значение.</target>
        </trans-unit>
        <trans-unit id="b4d1c435b55c4bd54f0e5938665f180e3308a59f" translate="yes" xml:space="preserve">
          <source>The ending location just happens to be the same as the component itself, because it is the topmost component in this application.</source>
          <target state="translated">Окончательное местоположение просто случайно совпадает с местоположением самого компонента,потому что это самый верхний компонент в этом приложении.</target>
        </trans-unit>
        <trans-unit id="53f8087657d38ede7c7b2e78926607c4e103415b" translate="yes" xml:space="preserve">
          <source>The endpoint URL.</source>
          <target state="translated">URL-адрес конечной точки.</target>
        </trans-unit>
        <trans-unit id="ce758382f5b525c72c93874bf2a5511cf0624108" translate="yes" xml:space="preserve">
          <source>The entire &lt;a href=&quot;http://v7.angular.io/api/http&quot;&gt;&lt;code&gt;@angular/http&lt;/code&gt;&lt;/a&gt; package has been removed. Use &lt;a href=&quot;../api/common/http&quot;&gt;&lt;code&gt;@angular/common/http&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">Весь пакет &lt;a href=&quot;http://v7.angular.io/api/http&quot;&gt; &lt;code&gt;@angular/http&lt;/code&gt; &lt;/a&gt; был удален. Вместо этого используйте &lt;a href=&quot;../api/common/http&quot;&gt; &lt;code&gt;@angular/common/http&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09267d94484132cc08f19cf699a998d66e34af3d" translate="yes" xml:space="preserve">
          <source>The entire cart component is shown below:</source>
          <target state="translated">Весь компонент тележки показан ниже:</target>
        </trans-unit>
        <trans-unit id="517d85bc6d5992973ef1adac25e14215d5732b6c" translate="yes" xml:space="preserve">
          <source>The entire template translation is complete. The next section describes how to load that translation into the app.</source>
          <target state="translated">Весь перевод шаблона завершен.В следующем разделе описано,как загрузить этот перевод в приложение.</target>
        </trans-unit>
        <trans-unit id="65be920f45735066f65d3093424f23271e09fd22" translate="yes" xml:space="preserve">
          <source>The error location is the beginning of the text node that contains the interpolation expression with the error. If the error is in an attribute binding such as &lt;code&gt;[value]=&quot;person.address.street&quot;&lt;/code&gt;, the error location is the location of the attribute that contains the error.</source>
          <target state="translated">Расположение ошибки - это начало текстового узла, который содержит выражение интерполяции с ошибкой. Если ошибка находится в привязке атрибута, такой как &lt;code&gt;[value]=&quot;person.address.street&quot;&lt;/code&gt; , местоположение ошибки - это местоположение атрибута, который содержит ошибку.</target>
        </trans-unit>
        <trans-unit id="5b2800e5c7af1b4412b364a4614c015c995767e2" translate="yes" xml:space="preserve">
          <source>The event binding listens for the button's click events and calls the component's &lt;code&gt;onSave()&lt;/code&gt; method whenever a click occurs.</source>
          <target state="translated">Привязка события прослушивает события нажатия кнопки и вызывает метод компонента &lt;code&gt;onSave()&lt;/code&gt; всякий раз, когда происходит щелчок.</target>
        </trans-unit>
        <trans-unit id="69ff142aa61a33181c0a1759ca603b78c8f65052" translate="yes" xml:space="preserve">
          <source>The event binding to the textbox's &lt;code&gt;input&lt;/code&gt; event calls the &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">Привязка события к &lt;code&gt;input&lt;/code&gt; событию текстового поля вызывает метод &lt;code&gt;&lt;a href=&quot;../api/common/upgrade/%24locationshim#search&quot;&gt;search()&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6ed6e9ce266d18a90fadd7e10b03d03c8dbd92d9" translate="yes" xml:space="preserve">
          <source>The event binding to the textbox's &lt;code&gt;input&lt;/code&gt; event calls the &lt;code&gt;search()&lt;/code&gt; method.</source>
          <target state="translated">Привязка события к событию &lt;code&gt;input&lt;/code&gt; текстового поля вызывает метод &lt;code&gt;search()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b1b6fe126f9ca22b76040da84e54d75ff818550" translate="yes" xml:space="preserve">
          <source>The event binding, &lt;code&gt;(newItemEvent)='addItem($event)'&lt;/code&gt;, connects the event in the child, &lt;code&gt;newItemEvent&lt;/code&gt;, to the method in the parent, &lt;code&gt;addItem()&lt;/code&gt;.</source>
          <target state="translated">Привязка события &lt;code&gt;(newItemEvent)='addItem($event)'&lt;/code&gt; связывает событие в дочернем &lt;code&gt;newItemEvent&lt;/code&gt; с методом родительского &lt;code&gt;addItem()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3639fbd6435142847d3144a74c6667bfa653654c" translate="yes" xml:space="preserve">
          <source>The event binding, &lt;code&gt;(newItemEvent)='addItem($event)'&lt;/code&gt;, tells Angular to connect the event in the child, &lt;code&gt;newItemEvent&lt;/code&gt;, to the method in the parent, &lt;code&gt;addItem()&lt;/code&gt;, and that the event that the child is notifying the parent about is to be the argument of &lt;code&gt;addItem()&lt;/code&gt;. In other words, this is where the actual hand off of data takes place. The &lt;code&gt;$event&lt;/code&gt; contains the data that the user types into the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; in the child template UI.</source>
          <target state="translated">Привязка события &lt;code&gt;(newItemEvent)='addItem($event)'&lt;/code&gt; сообщает Angular подключить событие в дочернем &lt;code&gt;newItemEvent&lt;/code&gt; , newItemEvent , к методу в родительском &lt;code&gt;addItem()&lt;/code&gt; и о том, что дочерний элемент уведомляет родительский объект. about должен быть аргументом &lt;code&gt;addItem()&lt;/code&gt; . Другими словами, именно здесь происходит фактическая передача данных. &lt;code&gt;$event&lt;/code&gt; содержит данные , которые пользователь вводит в &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; в шаблоне ребенка UI.</target>
        </trans-unit>
        <trans-unit id="ad8b492b040130403394a8b8405002e8fbe05184" translate="yes" xml:space="preserve">
          <source>The event name for control to update upon.</source>
          <target state="translated">Название события для управления для обновления.</target>
        </trans-unit>
        <trans-unit id="f4f20723f533d5e629777325cd0a3634e4a127e2" translate="yes" xml:space="preserve">
          <source>The event to listen for.</source>
          <target state="translated">Мероприятие для прослушивания.</target>
        </trans-unit>
        <trans-unit id="91ef2a7a591ac9092eaa2b69ce5e271726e45b75" translate="yes" xml:space="preserve">
          <source>The events occur in the following sequence:</source>
          <target state="translated">События происходят в следующей последовательности:</target>
        </trans-unit>
        <trans-unit id="54c1184dacbaa43055ccffb47a5d3e22a00bb1c7" translate="yes" xml:space="preserve">
          <source>The exact values of these attributes aren't important. They are automatically generated and you never refer to them in application code. But they are targeted by the generated component styles, which are in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; section of the DOM:</source>
          <target state="translated">Точные значения этих атрибутов не важны. Они генерируются автоматически, и вы никогда не ссылаетесь на них в коде приложения. Но они предназначены для сгенерированных стилей компонентов, которые находятся в разделе &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; DOM:</target>
        </trans-unit>
        <trans-unit id="4b7a62544532a45cb6e60791b758a5ec3dddf356" translate="yes" xml:space="preserve">
          <source>The example above casts the &lt;code&gt;$event&lt;/code&gt; as an &lt;code&gt;any&lt;/code&gt; type. That simplifies the code at a cost. There is no type information that could reveal properties of the event object and prevent silly mistakes.</source>
          <target state="translated">В приведенном выше примере &lt;code&gt;$event&lt;/code&gt; приводится к типу &lt;code&gt;any&lt;/code&gt; . Это упрощает код за плату. Нет информации о типах, которая могла бы раскрыть свойства объекта события и предотвратить глупые ошибки.</target>
        </trans-unit>
        <trans-unit id="273eb5d9b6efb1eb7fc204e5b2fd8c9a9f9a424d" translate="yes" xml:space="preserve">
          <source>The example above shows the preferred way to provide a service in a module. This method is preferred because it enables tree-shaking of the service if nothing injects it. If it's not possible to specify in the service which module should provide it, you can also declare a provider for the service within the module:</source>
          <target state="translated">В примере выше показан предпочтительный способ предоставления услуги в модуле.Этот метод предпочтительнее,потому что он позволяет встряхнуть сервис,если его ничто не впрыскивает.Если невозможно указать в сервисе,какой модуль должен его предоставлять,можно также объявить провайдера услуги внутри модуля:</target>
        </trans-unit>
        <trans-unit id="b2e27e8c2c92276e05378262ff057e11c8b22f08" translate="yes" xml:space="preserve">
          <source>The example added a &lt;code&gt;name&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element and set it to &quot;name&quot;, which makes sense for the hero's name. Any unique value will do, but using a descriptive name is helpful.</source>
          <target state="translated">В примере к элементу &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; добавлен атрибут &lt;code&gt;name&lt;/code&gt; и установлено значение &amp;laquo;name&amp;raquo;, что имеет смысл для имени героя. Подойдет любое уникальное значение, но полезно использовать описательное имя.</target>
        </trans-unit>
        <trans-unit id="effbc7d2c80d5854e16babc4c844f954f764345c" translate="yes" xml:space="preserve">
          <source>The example app features a second service, the &lt;code&gt;AnimalService&lt;/code&gt; to demonstrate &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">В примере приложения есть второй сервис &lt;code&gt;AnimalService&lt;/code&gt; для демонстрации &lt;code&gt;&lt;a href=&quot;../api/core/component#viewProviders&quot;&gt;viewProviders&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c78f64c7b89201f40e03d1b69154355e19de092e" translate="yes" xml:space="preserve">
          <source>The example app features a second service, the &lt;code&gt;AnimalService&lt;/code&gt; to demonstrate &lt;code&gt;viewProviders&lt;/code&gt;.</source>
          <target state="translated">В примере приложения есть вторая служба &lt;code&gt;AnimalService&lt;/code&gt; для демонстрации &lt;code&gt;viewProviders&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1d59f9bd8904b6d345e194680af23a795fc7a0b5" translate="yes" xml:space="preserve">
          <source>The example app has a &lt;code&gt;FlowerService&lt;/code&gt; provided in &lt;code&gt;root&lt;/code&gt; with an &lt;code&gt;emoji&lt;/code&gt; value of &lt;code&gt;🌺&lt;/code&gt; (red hibiscus).</source>
          <target state="translated">Пример приложение имеет &lt;code&gt;FlowerService&lt;/code&gt; , представленный в &lt;code&gt;root&lt;/code&gt; с &lt;code&gt;emoji&lt;/code&gt; значением &lt;code&gt;🌺&lt;/code&gt; (красный гибискус).</target>
        </trans-unit>
        <trans-unit id="7e293a7ac30ffcbf40d0aa732b70cb22ea0ae688" translate="yes" xml:space="preserve">
          <source>The example below shows how to use a &lt;code&gt;plural&lt;/code&gt; ICU expression to display one of those three options based on when the update occurred:</source>
          <target state="translated">В приведенном ниже примере показано, как использовать &lt;code&gt;plural&lt;/code&gt; выражение ICU для отображения одного из этих трех параметров в зависимости от того, когда произошло обновление:</target>
        </trans-unit>
        <trans-unit id="32f43e0dcae0b20b112d1f2cf6afab0db54ce258" translate="yes" xml:space="preserve">
          <source>The example catches errors as &lt;a href=&quot;http#error-details&quot;&gt;described above&lt;/a&gt;.</source>
          <target state="translated">В примере обнаруживаются ошибки, как &lt;a href=&quot;http#error-details&quot;&gt;описано выше&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd77271eb13f69fabbed387e0cde0a99c8b25dd3" translate="yes" xml:space="preserve">
          <source>The example component, &lt;code&gt;OnChangesComponent&lt;/code&gt;, has two input properties: &lt;code&gt;hero&lt;/code&gt; and &lt;code&gt;power&lt;/code&gt;.</source>
          <target state="translated">Пример компонента, &lt;code&gt;OnChangesComponent&lt;/code&gt; , имеет два входных свойства: &lt;code&gt;hero&lt;/code&gt; и &lt;code&gt;power&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f9155530069679df1e8e17804347a08779c0b88f" translate="yes" xml:space="preserve">
          <source>The example conforms to the best practices for creating scalable solutions by defining a re-usable &lt;a href=&quot;glossary#service&quot;&gt;injectable service&lt;/a&gt; to perform the data-handling functionality. In addition to fetching data, the service can post-process the data, add error handling, and add retry logic.</source>
          <target state="translated">Пример соответствует передовым методам создания масштабируемых решений путем определения повторно используемой &lt;a href=&quot;glossary#service&quot;&gt;инъекционной службы&lt;/a&gt; для выполнения функций обработки данных. Помимо выборки данных, служба может выполнять постобработку данных, добавлять обработку ошибок и логику повторных попыток.</target>
        </trans-unit>
        <trans-unit id="f5ae9273f0a2796a26e3fdc2b5495b83160ccdd7" translate="yes" xml:space="preserve">
          <source>The example defines a &lt;code&gt;Parent&lt;/code&gt; class interface.</source>
          <target state="translated">Пример определяет интерфейс &lt;code&gt;Parent&lt;/code&gt; класса.</target>
        </trans-unit>
        <trans-unit id="78dfaeee725082d98ba4c1ba36ee3d43f4320105" translate="yes" xml:space="preserve">
          <source>The example does not perform any initialization or clean-up. It just tracks the appearance and disappearance of an element in the view by recording when the directive itself is instantiated and destroyed.</source>
          <target state="translated">Пример не выполняет никакой инициализации или очистки.Он просто отслеживает появление и исчезновение элемента в представлении путем записи,когда сама директива инстанцируется и уничтожается.</target>
        </trans-unit>
        <trans-unit id="b1a19339f0623e57becdf428e24d9054631f017e" translate="yes" xml:space="preserve">
          <source>The example in this cookbook is a dynamic form to build an online application experience for heroes seeking employment. The agency is constantly tinkering with the application process. You can create the forms on the fly &lt;em&gt;without changing the application code&lt;/em&gt;.</source>
          <target state="translated">Пример в этой кулинарной книге - это динамическая форма для создания онлайн-приложения для героев, ищущих работу. Агентство постоянно работает над процессом подачи заявки. Вы можете создавать формы на лету, &lt;em&gt;не изменяя код приложения&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="21368d5aa0e0f57cc1e8629018f6a96fc88d7046" translate="yes" xml:space="preserve">
          <source>The example provides a model for a job application for heroes, but there are no references to any specific hero question other than the objects returned by &lt;code&gt;QuestionService&lt;/code&gt;. This separation of model and data allows you to repurpose the components for any type of survey as long as it's compatible with the &lt;em&gt;question&lt;/em&gt; object model.</source>
          <target state="translated">В этом примере представлена ​​модель заявления о приеме на работу для героев, но нет никаких ссылок на какой-либо конкретный вопрос героя, кроме объектов, возвращаемых &lt;code&gt;QuestionService&lt;/code&gt; . Такое разделение модели и данных позволяет изменять назначение компонентов для любого типа опроса, если он совместим с объектной моделью &lt;em&gt;вопроса&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="fda3065caba1d5eb2c8f5fe0c2d8e9d5653e9812" translate="yes" xml:space="preserve">
          <source>The examples use cross-validation to ensure that heroes do not reveal their true identities by filling out the Hero Form. The validators do this by checking that the hero names and alter egos do not match.</source>
          <target state="translated">В примерах используется перекрестная проверка,чтобы убедиться,что герои не раскрывают свою истинную личность,заполнив Форму Героя.Валидаторы делают это,проверяя,не совпадают ли имена героев и изменяют эго.</target>
        </trans-unit>
        <trans-unit id="6bc3566154c29af35184ae0bd0cc18f2f2008688" translate="yes" xml:space="preserve">
          <source>The existing &lt;code&gt;AuthGuard&lt;/code&gt; already has the essential logic in its &lt;code&gt;checkLogin()&lt;/code&gt; method to support the &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; guard.</source>
          <target state="translated">Существующий &lt;code&gt;AuthGuard&lt;/code&gt; уже имеет существенную логику в своем &lt;code&gt;checkLogin()&lt;/code&gt; для поддержки &lt;code&gt;&lt;a href=&quot;../api/router/canload&quot;&gt;CanLoad&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="718c865b634d55ae8dfe4de1b660b49d34f475af" translate="yes" xml:space="preserve">
          <source>The existing AngularJS code works as before &lt;em&gt;and&lt;/em&gt; you are ready to start adding Angular code.</source>
          <target state="translated">Существующий код AngularJS работает как прежде, &lt;em&gt;и&lt;/em&gt; вы готовы начать добавление кода Angular.</target>
        </trans-unit>
        <trans-unit id="ab13d61d6ddb887413912e2f62c6e3e7fc4aac41" translate="yes" xml:space="preserve">
          <source>The existing child node before which &lt;code&gt;newChild&lt;/code&gt; is inserted.</source>
          <target state="translated">Существующий дочерний узел, перед которым вставляется &lt;code&gt;newChild&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5fd876d33ea042d6b4add9cc8574eee41bd22c4" translate="yes" xml:space="preserve">
          <source>The existing child node that should precede the new node.</source>
          <target state="translated">Существующий дочерний узел,который должен предшествовать новому узлу.</target>
        </trans-unit>
        <trans-unit id="d872770ece0f419b22a9305fbf0ce1956dbee659" translate="yes" xml:space="preserve">
          <source>The expanded provider configuration is an object literal with two properties.</source>
          <target state="translated">Расширенная конфигурация провайдера представляет собой объект буквально с двумя свойствами.</target>
        </trans-unit>
        <trans-unit id="0a901e7e7f6e2f5a9cf69a27df265c2237d91887" translate="yes" xml:space="preserve">
          <source>The expected response type of the server.</source>
          <target state="translated">Ожидаемый тип ответа сервера.</target>
        </trans-unit>
        <trans-unit id="756b02a42955f8fd84e0875c967bff67e4bc2260" translate="yes" xml:space="preserve">
          <source>The experience might be better if all of this were handled first, before the route is activated. A &lt;code&gt;CrisisDetailResolver&lt;/code&gt; service could retrieve a &lt;code&gt;Crisis&lt;/code&gt; or navigate away if the &lt;code&gt;Crisis&lt;/code&gt; does not exist &lt;em&gt;before&lt;/em&gt; activating the route and creating the &lt;code&gt;CrisisDetailComponent&lt;/code&gt;.</source>
          <target state="translated">Опыт может быть лучше, если все это было обработано в первую очередь, до того, как маршрут активирован. &lt;code&gt;CrisisDetailResolver&lt;/code&gt; служба может извлечь из &lt;code&gt;Crisis&lt;/code&gt; или уйти , если &lt;code&gt;Crisis&lt;/code&gt; не существует , &lt;em&gt;прежде чем&lt;/em&gt; активировать маршрут и создания &lt;code&gt;CrisisDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="231b4a30ec02743f59b6dc1ae1cd48da208d12aa" translate="yes" xml:space="preserve">
          <source>The experience might be better if all of this were handled first, before the route is activated. A &lt;code&gt;CrisisDetailResolver&lt;/code&gt; service could retrieve a &lt;code&gt;Crisis&lt;/code&gt; or navigate away, if the &lt;code&gt;Crisis&lt;/code&gt; did not exist, &lt;em&gt;before&lt;/em&gt; activating the route and creating the &lt;code&gt;CrisisDetailComponent&lt;/code&gt;.</source>
          <target state="translated">Опыт мог бы быть лучше, если бы все это было обработано в первую очередь, до активации маршрута. &lt;code&gt;CrisisDetailResolver&lt;/code&gt; служба может извлечь из &lt;code&gt;Crisis&lt;/code&gt; или уйти, если &lt;code&gt;Crisis&lt;/code&gt; не существует, &lt;em&gt;перед&lt;/em&gt; тем активации маршрута и создания &lt;code&gt;CrisisDetailComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d0105ecd0834a0a52efb835dd0c06c79018cfc2a" translate="yes" xml:space="preserve">
          <source>The expression can invoke methods of the host component such as &lt;code&gt;getVal()&lt;/code&gt; in the following example:</source>
          <target state="translated">Выражение может вызывать методы компонента узла, такого как &lt;code&gt;getVal()&lt;/code&gt; в следующем примере:</target>
        </trans-unit>
        <trans-unit id="bc38af0a3f6b603a4f52ccb0dc5abcee023d78a0" translate="yes" xml:space="preserve">
          <source>The expression string can contain multiple comma-separated statements; for example &quot;state1 =&amp;gt; state2, state3 =&amp;gt; state4&quot;.</source>
          <target state="translated">Строка выражения может содержать несколько операторов, разделенных запятыми; например, &amp;laquo;состояние1 =&amp;gt; состояние2, состояние3 =&amp;gt; состояние4&amp;raquo;.</target>
        </trans-unit>
        <trans-unit id="a13861ade07df9e378c5d3fa8b540dff690597ea" translate="yes" xml:space="preserve">
          <source>The expression used in an &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; directive is used to narrow type unions in the Angular template compiler, the same way the &lt;code&gt;if&lt;/code&gt; expression does in TypeScript. For example, to avoid &lt;code&gt;Object is possibly 'undefined'&lt;/code&gt; error in the template above, modify it to only emit the interpolation if the value of &lt;code&gt;person&lt;/code&gt; is initialized as shown below:</source>
          <target state="translated">Выражение, используемое в директиве &lt;code&gt;&lt;a href=&quot;../api/common/ngif&quot;&gt;ngIf&lt;/a&gt;&lt;/code&gt; , используется для сужения объединений типов в компиляторе шаблонов Angular, аналогично выражению &lt;code&gt;if&lt;/code&gt; в TypeScript. Например, чтобы избежать &lt;code&gt;Object is possibly 'undefined'&lt;/code&gt; ошибки 'Object undefined' в шаблоне выше, измените ее так, чтобы она испускала интерполяцию только в том случае, если значение &lt;code&gt;person&lt;/code&gt; инициализировано, как показано ниже:</target>
        </trans-unit>
        <trans-unit id="ef8c01f4c0d7e68b89c220ac9f8c5253404cce00" translate="yes" xml:space="preserve">
          <source>The external typings for AngularJS may be uninstalled as well. The only ones you still need are for Jasmine and Angular polyfills. The &lt;code&gt;@angular/upgrade&lt;/code&gt; package and its mapping in &lt;code&gt;systemjs.config.js&lt;/code&gt; can also go.</source>
          <target state="translated">Внешние наборы для AngularJS также могут быть удалены. Единственные, которые вам все еще нужны, - это жасмин и угловые полифилы. Пакет &lt;code&gt;@angular/upgrade&lt;/code&gt; и его отображение в &lt;code&gt;systemjs.config.js&lt;/code&gt; также можно использовать.</target>
        </trans-unit>
        <trans-unit id="f9487dc824b5a06931326438975b3fa897554272" translate="yes" xml:space="preserve">
          <source>The extraction tool broke that into two translation units because ICU expressions are extracted separately.</source>
          <target state="translated">Инструмент извлечения разбил его на две единицы трансляции,потому что выражения ICU извлекаются отдельно.</target>
        </trans-unit>
        <trans-unit id="9417ff966974590689ce184e11dd80a18dd2fcc6" translate="yes" xml:space="preserve">
          <source>The extraction tool uses the locale to add the app locale information into your translation source file. This information is not used by Angular, but external translation tools may need it.</source>
          <target state="translated">Инструмент извлечения использует локаль для добавления информации о локали приложения в исходный файл перевода.Эта информация не используется программой Angular,но она может понадобиться внешним инструментам перевода.</target>
        </trans-unit>
        <trans-unit id="85f84c0e0492c512641e357031e4b8a990681047" translate="yes" xml:space="preserve">
          <source>The factory function used to create an instance of the &lt;code&gt;&lt;a href=&quot;%24locationshim&quot;&gt;$locationShim&lt;/a&gt;&lt;/code&gt; in Angular, and provides an API-compatiable &lt;code&gt;$locationProvider&lt;/code&gt; for AngularJS.</source>
          <target state="translated">Функция фабрики, используемая для создания экземпляра &lt;code&gt;&lt;a href=&quot;%24locationshim&quot;&gt;$locationShim&lt;/a&gt;&lt;/code&gt; в Angular, обеспечивает API-совместимый &lt;code&gt;$locationProvider&lt;/code&gt; для AngularJS.</target>
        </trans-unit>
        <trans-unit id="b0b48f7c53cdcc9a28c5b33f627658903f534c56" translate="yes" xml:space="preserve">
          <source>The factory function used to create an instance of the &lt;code&gt;&lt;a href=&quot;upgrade/%24locationshim&quot;&gt;$locationShim&lt;/a&gt;&lt;/code&gt; in Angular, and provides an API-compatiable &lt;code&gt;$locationProvider&lt;/code&gt; for AngularJS.</source>
          <target state="translated">Функция фабрики, используемая для создания экземпляра &lt;code&gt;&lt;a href=&quot;upgrade/%24locationshim&quot;&gt;$locationShim&lt;/a&gt;&lt;/code&gt; в Angular, обеспечивает API-совместимый &lt;code&gt;$locationProvider&lt;/code&gt; для AngularJS.</target>
        </trans-unit>
        <trans-unit id="fff2a09918a1b2d112204afd22582dc9b903d3db" translate="yes" xml:space="preserve">
          <source>The factory to use.</source>
          <target state="translated">Фабрика для использования.</target>
        </trans-unit>
        <trans-unit id="45110d699eb402accd2b39408cf613ccace142aa" translate="yes" xml:space="preserve">
          <source>The feature module has its own routing module, &lt;code&gt;customers-routing.module.ts&lt;/code&gt;. The &lt;code&gt;AppRoutingModule&lt;/code&gt; imports the feature module, &lt;code&gt;CustomersModule&lt;/code&gt;, and &lt;code&gt;CustomersModule&lt;/code&gt; in turn imports the &lt;code&gt;CustomersRoutingModule&lt;/code&gt;.</source>
          <target state="translated">Функциональный модуль имеет собственный модуль маршрутизации &lt;code&gt;customers-routing.module.ts&lt;/code&gt; . В &lt;code&gt;AppRoutingModule&lt;/code&gt; импортирует модуль особенность, &lt;code&gt;CustomersModule&lt;/code&gt; и &lt;code&gt;CustomersModule&lt;/code&gt; в свою очередь импорта &lt;code&gt;CustomersRoutingModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c68df8d13f8a11bcd08a42b67de607bb1fe78496" translate="yes" xml:space="preserve">
          <source>The feature-specific route definition file &lt;code&gt;customers-routing.module.ts&lt;/code&gt; imports its own feature component defined in the &lt;code&gt;customers.component.ts&lt;/code&gt; file, along with the other JavaScript import statements. It then maps the empty path to the &lt;code&gt;CustomersComponent&lt;/code&gt;.</source>
          <target state="translated">Файл определения маршрута для конкретной функции &lt;code&gt;customers-routing.module.ts&lt;/code&gt; импортирует свой собственный компонент функции, определенный в файле &lt;code&gt;customers.component.ts&lt;/code&gt; , вместе с другими операторами импорта JavaScript. Затем он сопоставляет пустой путь к &lt;code&gt;CustomersComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6957954dfc17f6637256e21496069d6d7edfa00a" translate="yes" xml:space="preserve">
          <source>The feature-specific routing module imports its own feature component, &lt;code&gt;CustomerListComponent&lt;/code&gt;, along with the other JavaScript import statements. It also adds the route to its own component.</source>
          <target state="translated">Специализированный модуль маршрутизации импортирует свой собственный компонент &lt;code&gt;CustomerListComponent&lt;/code&gt; вместе с другими операторами импорта JavaScript. Он также добавляет маршрут к своему собственному компоненту.</target>
        </trans-unit>
        <trans-unit id="b6679a077d80a4fae996b201686c099a780913b7" translate="yes" xml:space="preserve">
          <source>The features described in this guide &amp;mdash; and the more advanced features described in the related Angular animations guides &amp;mdash; are demonstrated in an example app available as a live example.</source>
          <target state="translated">Функции, описанные в этом руководстве, и более продвинутые функции, описанные в соответствующих руководствах по угловой анимации, демонстрируются в примере приложения, доступного в качестве живого примера.</target>
        </trans-unit>
        <trans-unit id="5d913855a2f92d2ad9226bb9153c9058915ef08a" translate="yes" xml:space="preserve">
          <source>The fields given in the schema correspond to the allowed argument values and defaults for the CLI sub-command options. You can update your workspace schema file to set a different default for a sub-command option.</source>
          <target state="translated">Поля,приведенные в схеме,соответствуют допустимым значениям аргументов и значениям по умолчанию для опций подкоманды CLI.Вы можете обновить файл схемы рабочего пространства,чтобы установить другое значение по умолчанию для подкомандной опции.</target>
        </trans-unit>
        <trans-unit id="1e46781c8a8accd7cee0f511396c96eb0f907cd9" translate="yes" xml:space="preserve">
          <source>The file extension or preprocessor to use for style files.</source>
          <target state="translated">Расширение файла или препроцессор для использования в файлах стилей.</target>
        </trans-unit>
        <trans-unit id="4df1821dbd4788e87e9499318c4ec670cf47f860" translate="yes" xml:space="preserve">
          <source>The file extension to use for style files.</source>
          <target state="translated">Расширение файла,используемое для файлов стилей.</target>
        </trans-unit>
        <trans-unit id="6406bc3d893f537b5bde48e17108b2279f261462" translate="yes" xml:space="preserve">
          <source>The file name reported in the error message, &lt;code&gt;my.component.ts.MyComponent.html&lt;/code&gt;, is a synthetic file generated by the template compiler that holds contents of the &lt;code&gt;MyComponent&lt;/code&gt; class template. The compiler never writes this file to disk. The line and column numbers are relative to the template string in the &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; annotation of the class, &lt;code&gt;MyComponent&lt;/code&gt; in this case. If a component uses &lt;code&gt;templateUrl&lt;/code&gt; instead of &lt;code&gt;template&lt;/code&gt;, the errors are reported in the HTML file referenced by the &lt;code&gt;templateUrl&lt;/code&gt; instead of a synthetic file.</source>
          <target state="translated">Имя файла, указанное в сообщении об ошибке, &lt;code&gt;my.component.ts.MyComponent.html&lt;/code&gt; , представляет собой синтетический файл, созданный компилятором шаблона, который содержит содержимое &lt;code&gt;MyComponent&lt;/code&gt; класса MyComponent . Компилятор никогда не записывает этот файл на диск. Номера строк и столбцов относятся к строке шаблона в аннотации &lt;code&gt;@&lt;a href=&quot;../api/core/component&quot;&gt;Component&lt;/a&gt;&lt;/code&gt; класса, в данном случае &lt;code&gt;MyComponent&lt;/code&gt; . Если компонент использует &lt;code&gt;templateUrl&lt;/code&gt; вместо &lt;code&gt;template&lt;/code&gt; , об ошибках сообщается в файле HTML, на который ссылается &lt;code&gt;templateUrl&lt;/code&gt; , а не в синтетическом файле.</target>
        </trans-unit>
        <trans-unit id="dc59a059fa420961f9dd7f4d741b5a2264a08f45" translate="yes" xml:space="preserve">
          <source>The files in &lt;code&gt;@angular/common/locales&lt;/code&gt; contain most of the locale data that you need, but some advanced formatting options might only be available in the extra dataset that you can import from &lt;code&gt;@angular/common/locales/extra&lt;/code&gt;. An error message informs you when this is the case.</source>
          <target state="translated">Файлы в &lt;code&gt;@angular/common/locales&lt;/code&gt; содержат большинство нужных вам данных о локалях , но некоторые дополнительные параметры форматирования могут быть доступны только в дополнительном наборе данных, который можно импортировать из &lt;code&gt;@angular/common/locales/extra&lt;/code&gt; . Сообщение об ошибке информирует вас, когда это так.</target>
        </trans-unit>
        <trans-unit id="cc5da9fb73116aefd1be69567f1edca5171f0c86" translate="yes" xml:space="preserve">
          <source>The files in the &lt;code&gt;dist/my-project-name&lt;/code&gt; folder are static and can be hosted on any web server capable of serving files (&lt;code&gt;Node.js&lt;/code&gt;, Java, .NET) or any backend (Firebase, Google Cloud, App Engine, others).</source>
          <target state="translated">Файлы в папке &lt;code&gt;dist/my-project-name&lt;/code&gt; являются статическими и могут быть размещены на любом веб-сервере, способном обслуживать файлы ( &lt;code&gt;Node.js&lt;/code&gt; , Java, .NET) или на любом внутреннем сервере (Firebase, Google Cloud, App Engine и другие). ,</target>
        </trans-unit>
        <trans-unit id="cfd2525e778d44ca48268a14e2d4009355f67534" translate="yes" xml:space="preserve">
          <source>The files in the &lt;code&gt;dist/my-project-name&lt;/code&gt; folder are static. This means you can host them on any web server capable of serving files (such as &lt;code&gt;Node.js&lt;/code&gt;, Java, .NET), or any backend (such as Firebase, Google Cloud, or App Engine).</source>
          <target state="translated">Файлы в папке &lt;code&gt;dist/my-project-name&lt;/code&gt; статичны. Это означает, что вы можете разместить их на любом веб-сервере, способном обслуживать файлы (например, &lt;code&gt;Node.js&lt;/code&gt; , Java, .NET), или на любом сервере (например, Firebase, Google Cloud или App Engine).</target>
        </trans-unit>
        <trans-unit id="fef6eeb99c812c89811914cb86075f88c7c8f8c4" translate="yes" xml:space="preserve">
          <source>The files marked with &lt;code&gt;*&lt;/code&gt; are new and not in the original tutorial sample.</source>
          <target state="translated">Файлы, отмеченные &lt;code&gt;*&lt;/code&gt; , являются новыми и отсутствуют в исходном учебном образце.</target>
        </trans-unit>
        <trans-unit id="4958ad54ba499fda7072a0286fdc85fb538ec9d8" translate="yes" xml:space="preserve">
          <source>The filter works in real time as you type. Elements leave the page as you type each new letter and the filter gets progressively stricter. The heroes list gradually re-enters the page as you delete each letter in the filter box.</source>
          <target state="translated">Фильтр работает в режиме реального времени по мере набора текста.Элементы покидают страницу по мере того,как вы набираете каждую новую букву,и фильтр становится все более строгим.Список героев постепенно возвращается на страницу по мере того,как вы удаляете каждую букву в фильтре.</target>
        </trans-unit>
        <trans-unit id="f573bd26d52dc028307ae3e04564422e663eec0d" translate="yes" xml:space="preserve">
          <source>The final UI looks like this:</source>
          <target state="translated">Последний пользовательский интерфейс выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="c5b275336e85842a3e2bdbdc55d315d60de9615b" translate="yes" xml:space="preserve">
          <source>The final ad banner looks like this:</source>
          <target state="translated">Последний рекламный баннер выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="321d2b68064070be07256e2a5abc3418d809f653" translate="yes" xml:space="preserve">
          <source>The final form looks like this:</source>
          <target state="translated">Окончательная форма выглядит вот так:</target>
        </trans-unit>
        <trans-unit id="041dc8a5f34133da31fcc036e9813dc9a7c7dd5c" translate="yes" xml:space="preserve">
          <source>The final source code follows:</source>
          <target state="translated">Далее следует окончательный исходный код:</target>
        </trans-unit>
        <trans-unit id="4efdfc25a6effd16bf1e38707887ca8fdb33714e" translate="yes" xml:space="preserve">
          <source>The finished &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; looks like this:</source>
          <target state="translated">Готовый &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; выглядит так:</target>
        </trans-unit>
        <trans-unit id="56cb402b12029a303e5d291a33be2607644acc0c" translate="yes" xml:space="preserve">
          <source>The first argument is the controller name. The second argument defines the string names of all dependencies injected into this controller, and a reference to the controller function.</source>
          <target state="translated">Первый аргумент-имя контроллера.Второй аргумент определяет строковые имена всех зависимостей,вводимых в этот контроллер,и ссылку на функцию контроллера.</target>
        </trans-unit>
        <trans-unit id="f9457d5b3e7c5601a8125917a5c64688ac0a8255" translate="yes" xml:space="preserve">
          <source>The first bundle contains modern ES2015 syntax, takes advantage of built-in support in modern browsers, ships less polyfills, and results in a smaller bundle size.</source>
          <target state="translated">Первый пакет содержит современный синтаксис ES2015,использует преимущества встроенной поддержки в современных браузерах,поставляет меньше полизаполнений,и,как результат,имеет меньший размер пакета.</target>
        </trans-unit>
        <trans-unit id="95633f9df24fc0ecf3fe00fc31e5e62805addea1" translate="yes" xml:space="preserve">
          <source>The first bundle contains modern ES2015 syntax. This bundle takes advantage of built-in support in modern browsers, ships fewer polyfills, and results in a smaller bundle size.</source>
          <target state="translated">Первый пакет содержит современный синтаксис ES2015.Этот пакет использует преимущества встроенной поддержки в современных браузерах,поставляет меньше полизаполнителей и приводит к меньшему размеру пакета.</target>
        </trans-unit>
        <trans-unit id="7f4b8a42566c14174c062c29a822d5296acfbeec" translate="yes" xml:space="preserve">
          <source>The first child of this route in the router state tree</source>
          <target state="translated">Первый ребенок этого маршрута в дереве состояния маршрутизатора</target>
        </trans-unit>
        <trans-unit id="0cf5b8a30d51a55deb1ed42e3408e1848f44035a" translate="yes" xml:space="preserve">
          <source>The first child of this route in the router state tree.</source>
          <target state="translated">Первый ребенок этого маршрута в дереве состояния маршрутизатора.</target>
        </trans-unit>
        <trans-unit id="cbbf9616cd583ee698811321ffe898de8bb5be2c" translate="yes" xml:space="preserve">
          <source>The first configuration defines an array of two routes with minimal paths leading to the &lt;code&gt;CrisisListComponent&lt;/code&gt; and &lt;code&gt;HeroListComponent&lt;/code&gt;.</source>
          <target state="translated">Первая конфигурация определяет массив из двух маршрутов с минимальными путями, ведущими к &lt;code&gt;CrisisListComponent&lt;/code&gt; и &lt;code&gt;HeroListComponent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="90ce335c264ff739546ba0f108b7867bf473ab4e" translate="yes" xml:space="preserve">
          <source>The first configuration defines an array of two routes with simple paths leading to the &lt;code&gt;CrisisListComponent&lt;/code&gt; and &lt;code&gt;HeroListComponent&lt;/code&gt;. Generate the &lt;code&gt;CrisisList&lt;/code&gt; and &lt;code&gt;HeroList&lt;/code&gt; components.</source>
          <target state="translated">Первая конфигурация определяет массив из двух маршрутов с простыми путями, ведущими к &lt;code&gt;CrisisListComponent&lt;/code&gt; и &lt;code&gt;HeroListComponent&lt;/code&gt; . Создайте компоненты &lt;code&gt;CrisisList&lt;/code&gt; и &lt;code&gt;HeroList&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fc5ab8411a999f00314640e534a4f07a7e314733" translate="yes" xml:space="preserve">
          <source>The first entry is for a schematic named &lt;code&gt;ng-add&lt;/code&gt;. It contains the description, and points to the factory function that is called when your schematic is executed.</source>
          <target state="translated">Первая запись предназначена для схемы с именем &lt;code&gt;ng-add&lt;/code&gt; . Он содержит описание и указывает на заводскую функцию, которая вызывается при выполнении вашей схемы.</target>
        </trans-unit>
        <trans-unit id="86c941d39038cbf4e554b9137f55a474253a3b56" translate="yes" xml:space="preserve">
          <source>The first example performs the following steps to verify the view-to-model data flow.</source>
          <target state="translated">Первый пример выполняет следующие шаги для проверки потока данных от представления к модели.</target>
        </trans-unit>
        <trans-unit id="f7c494230675324afd6a402aadf921b3773a5f5c" translate="yes" xml:space="preserve">
          <source>The first explicitly generated application goes into the &lt;code&gt;projects/&lt;/code&gt; folder along with all other projects in the workspace. Newly generated libraries are also added under &lt;code&gt;projects/&lt;/code&gt;. When you create projects this way, the file structure of the workspace is entirely consistent with the structure of the &lt;a href=&quot;workspace-config&quot;&gt;workspace configuration file&lt;/a&gt;, &lt;code&gt;angular.json&lt;/code&gt;.</source>
          <target state="translated">Первое явно сгенерированное приложение попадает в папку &lt;code&gt;projects/&lt;/code&gt; вместе со всеми другими проектами в рабочей области. Вновь созданные библиотеки также добавляются в &lt;code&gt;projects/&lt;/code&gt; . При создании проектов таким образом, файловая структура рабочей области полностью соответствует структуре &lt;a href=&quot;workspace-config&quot;&gt;файла конфигурации рабочего пространства&lt;/a&gt; , &lt;code&gt;angular.json&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5daa0866ecdb0176ba5151f4125dd5f05620ba13" translate="yes" xml:space="preserve">
          <source>The first form is not actually rendered, only the finished product ends up in the DOM.</source>
          <target state="translated">Первая форма на самом деле не отрисовывается,только готовый продукт попадает в DOM.</target>
        </trans-unit>
        <trans-unit id="4f7f9d4b304e201ea1705223665d4d800899a939" translate="yes" xml:space="preserve">
          <source>The first injector configured with a provider supplies the dependency (a service instance or value) to the constructor.</source>
          <target state="translated">Первый инжектор,сконфигурированный с провайдером,передает зависимость (экземпляр сервиса или значение)в конструктор.</target>
        </trans-unit>
        <trans-unit id="78ec94cfb431864b60956eb8b8ac569aa3b4907a" translate="yes" xml:space="preserve">
          <source>The first is a sanity test; it confirms that the stubbed &lt;code&gt;UserService&lt;/code&gt; is called and working.</source>
          <target state="translated">Первый - это тест на разумность; это подтверждает, что &lt;code&gt;UserService&lt;/code&gt; вызывается и работает.</target>
        </trans-unit>
        <trans-unit id="2fe10133ce5f0b8442b0b35164dad9dce4a33027" translate="yes" xml:space="preserve">
          <source>The first item in the array identifies the parent route (&lt;code&gt;/crisis-center&lt;/code&gt;).</source>
          <target state="translated">Первый элемент в массиве идентифицирует родительский маршрут ( &lt;code&gt;/crisis-center&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef2dfd24b47c1df0d44ab06dc8c75e10571cb271" translate="yes" xml:space="preserve">
          <source>The first line indicates the driver state:</source>
          <target state="translated">Первая строка указывает на состояние водителя:</target>
        </trans-unit>
        <trans-unit id="6ae643662b050aa4b42fc55539a448dfb7866f94" translate="yes" xml:space="preserve">
          <source>The first parameter is &lt;code&gt;AppServerModule&lt;/code&gt;. It's the bridge between the Universal server-side renderer and the Angular application.</source>
          <target state="translated">Первый параметр - это &lt;code&gt;AppServerModule&lt;/code&gt; . Это мост между универсальным рендерером на стороне сервера и приложением Angular.</target>
        </trans-unit>
        <trans-unit id="62953bff7e26f22cabbf685caa0a5a1a6c295ca3" translate="yes" xml:space="preserve">
          <source>The first parameter is an object containing the locale data imported from &lt;code&gt;@angular/common/locales&lt;/code&gt;. By default, the imported locale data is registered with the locale id that is defined in the Angular locale data itself. If you want to register the imported locale data with another locale id, use the second parameter to specify a custom locale id. For example, Angular's locale data defines the locale id for French as &quot;fr&quot;. You can use the second parameter to associate the imported French locale data with the custom locale id &quot;fr-FR&quot; instead of &quot;fr&quot;.</source>
          <target state="translated">Первый параметр - это объект, содержащий данные локали, импортированные из &lt;code&gt;@angular/common/locales&lt;/code&gt; . По умолчанию импортированные данные локали регистрируются с идентификатором локали, который определен в самих данных локали Angular. Если вы хотите зарегистрировать импортированные данные локали с другим идентификатором локали, используйте второй параметр, чтобы указать пользовательский идентификатор локали. Например, данные локали Angular определяют идентификатор локали для французского как &amp;laquo;fr&amp;raquo;. Вы можете использовать второй параметр, чтобы связать импортированные данные французской локали с пользовательским идентификатором локали &quot;fr-FR&quot; вместо &quot;fr&quot;.</target>
        </trans-unit>
        <trans-unit id="b4e326dc69f53ccaa57af61d7dcbe29b421b04c0" translate="yes" xml:space="preserve">
          <source>The first parameter is the &lt;em&gt;element-to-click&lt;/em&gt;. If you wish, you can pass a custom event object as the second parameter. The default is a (partial) &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button&quot;&gt;left-button mouse event object&lt;/a&gt; accepted by many handlers including the &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">Первый параметр - &lt;em&gt;элемент для щелчка&lt;/em&gt; . При желании вы можете передать пользовательский объект события в качестве второго параметра. По умолчанию используется &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/button&quot;&gt;объект события мыши&lt;/a&gt; (частично) левой кнопкой мыши, принятый многими обработчиками, включая директиву &lt;code&gt;&lt;a href=&quot;../api/router/routerlink&quot;&gt;RouterLink&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3697ff5f0aeb3ecb5abdfb5882b9887cea92e64" translate="yes" xml:space="preserve">
          <source>The first parameter is the key. It is bound to the component property (&lt;code&gt;minutes&lt;/code&gt;), which determines the number of minutes.</source>
          <target state="translated">Первый параметр - это ключ. Он связан со свойством компонента ( &lt;code&gt;minutes&lt;/code&gt; ), которое определяет количество минут.</target>
        </trans-unit>
        <trans-unit id="f4f25fbb7333cd732b136fdcf04f2c24da137856" translate="yes" xml:space="preserve">
          <source>The first parameter of &lt;code&gt;&lt;a href=&quot;router#navigate&quot;&gt;navigate()&lt;/a&gt;&lt;/code&gt; is a delta to be applied to the current URL or the one provided in the &lt;code&gt;&lt;a href=&quot;navigationextras#relativeTo&quot;&gt;relativeTo&lt;/a&gt;&lt;/code&gt; property of the second parameter (the &lt;code&gt;&lt;a href=&quot;navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">Первый параметр &lt;code&gt;&lt;a href=&quot;router#navigate&quot;&gt;navigate()&lt;/a&gt;&lt;/code&gt; является дельта быть применен к текущему URL или от предусмотренного в &lt;code&gt;&lt;a href=&quot;navigationextras#relativeTo&quot;&gt;relativeTo&lt;/a&gt;&lt;/code&gt; свойстве второго параметра ( &lt;code&gt;&lt;a href=&quot;navigationextras&quot;&gt;NavigationExtras&lt;/a&gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9345528a3c56bcfad8473c4b0ab2f6cb3a19cf3d" translate="yes" xml:space="preserve">
          <source>The first parameter, &lt;code&gt;minutes&lt;/code&gt;, is bound to the component property (&lt;code&gt;minutes&lt;/code&gt;), which determines the number of minutes.</source>
          <target state="translated">Первый параметр, &lt;code&gt;minutes&lt;/code&gt; , привязан к свойству компонента ( &lt;code&gt;minutes&lt;/code&gt; ), которое определяет количество минут.</target>
        </trans-unit>
        <trans-unit id="7ef08564247507d1853a70de3837b4de95a01686" translate="yes" xml:space="preserve">
          <source>The first part, &lt;code&gt;duration&lt;/code&gt;, is required. The duration can be expressed in milliseconds as a simple number without quotes, or in seconds with quotes and a time specifier. For example, a duration of a tenth of a second can be expressed as follows:</source>
          <target state="translated">Первая часть, &lt;code&gt;duration&lt;/code&gt; , обязательна. Продолжительность может быть выражена в миллисекундах в виде простого числа без кавычек или в секундах с кавычками и указателем времени. Например, длительность в одну десятую секунды может быть выражена следующим образом:</target>
        </trans-unit>
        <trans-unit id="8129f1ba089dbdcf14610c20d5972d429db07c52" translate="yes" xml:space="preserve">
          <source>The first piece you'll port over to Angular is the &lt;code&gt;Phone&lt;/code&gt; service, which resides in &lt;code&gt;app/core/phone/phone.service.ts&lt;/code&gt; and makes it possible for components to load phone information from the server. Right now it's implemented with ngResource and you're using it for two things:</source>
          <target state="translated">Первая часть, которую вы &lt;code&gt;app/core/phone/phone.service.ts&lt;/code&gt; на Angular, - это &lt;code&gt;Phone&lt;/code&gt; служба, которая находится в app / core / phone / phone.service.ts и позволяет компонентам загружать информацию о телефоне с сервера. Прямо сейчас это реализовано с помощью ngResource, и вы используете его для двух вещей:</target>
        </trans-unit>
        <trans-unit id="d409bc236492541655f27b252a1ca412eb1c6dd8" translate="yes" xml:space="preserve">
          <source>The first provider is the &lt;em&gt;de-sugared&lt;/em&gt;, expanded form of the most typical case in which the class to be created (&lt;code&gt;HeroService&lt;/code&gt;) is also the provider's dependency injection token. The short form is generally preferred; this long form makes the details explicit.</source>
          <target state="translated">Первым провайдером является &lt;em&gt;обессахаренная&lt;/em&gt; расширенная форма наиболее типичного случая, в котором создаваемый класс ( &lt;code&gt;HeroService&lt;/code&gt; ) также является токеном внедрения зависимостей провайдера. Короткая форма обычно предпочтительна; эта длинная форма делает детали явными.</target>
        </trans-unit>
        <trans-unit id="4833e5a707db3bf1798a161d416463da98bc30af" translate="yes" xml:space="preserve">
          <source>The first provides an existing instance of the &lt;code&gt;Hero&lt;/code&gt; class to use for the &lt;code&gt;Hero&lt;/code&gt; token, rather than requiring the injector to create a new instance with &lt;code&gt;new&lt;/code&gt; or use its own cached instance. Here, the token is the class itself.</source>
          <target state="translated">Первый предоставляет существующий экземпляр класса &lt;code&gt;Hero&lt;/code&gt; ,который будет использоваться для токена &lt;code&gt;Hero&lt;/code&gt; , вместо того, чтобы требовать от инжектора создавать новый экземпляр с &lt;code&gt;new&lt;/code&gt; или использовать собственный кэшированный экземпляр. Здесь токен - это сам класс.</target>
        </trans-unit>
        <trans-unit id="7e391d5af3994d07831d1d59d60f4b82bee03d07" translate="yes" xml:space="preserve">
          <source>The first route does the following:</source>
          <target state="translated">Первый маршрут делает следующее:</target>
        </trans-unit>
        <trans-unit id="d24e841b0aac44b0fa2a6d557695a951fb865d88" translate="yes" xml:space="preserve">
          <source>The first segment name can be prepended with &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;./&lt;/code&gt;, or &lt;code&gt;../&lt;/code&gt;.</source>
          <target state="translated">К имени первого сегмента можно добавить символы &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;./&lt;/code&gt; или &lt;code&gt;../&lt;/code&gt; .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
