<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="16f5463562706611ac6d20a1fe211da8ef7cca4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;.LeftFirst - The left side of the item will lead along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31686f410bcc3e812f82d99669ca50368f21c69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;.RightFirst - The right side of the item will lead along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b7eca7cb1d69438905357314f28855abdebf00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;.TopFirst - The top of the item will lead along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d61a17b170b8b9e78b9d0ead81105dc42a358f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-controls2-qmlmodule.html&quot;&gt;&lt;code&gt;QtQuick.Controls&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;&lt;code&gt;QtQuick.Controls.Material&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;qtquickcontrols2-universal&quot;&gt;&lt;code&gt;QtQuick.Controls.Universal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-templates2-qmlmodule.html&quot;&gt;&lt;code&gt;QtQuick.Templates&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fed849981dd9e8f491dad63ef5f8851e753d00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-localstorage-qmlmodule.html&quot;&gt;Local Storage&lt;/a&gt; - a submodule containing a JavaScript interface for an &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e20586ecda8c76a34b7e7f6735c19e700519e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;Qt Quick C++ Classes&lt;/a&gt; - the C++ API provided by the Qt Quick module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9faa72379317a1220abce8a40b8b65eaeb61ba04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; Controls supports actions in &lt;a href=&quot;qml-qtquick-controls-button&quot;&gt;Button&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-toolbutton&quot;&gt;ToolButton&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e84612b8715d0c2ad2790615af2126abc143ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; item to display a map on-screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ee4e50506742c8161b9f7d799c06b9f2f662cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-particles-qmlmodule.html&quot;&gt;Particles&lt;/a&gt; - provides a particle system for Qt Quick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e0a71fa2494feb7b52fc444f4b74d634635ea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-qmlmodule.html&quot;&gt;Qt Quick QML Types&lt;/a&gt; - a list of QML types provided by the &lt;code&gt;QtQuick&lt;/code&gt; import</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a4ba5e5846da8bcf51924453917c9df51e4b19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-window-qmlmodule.html&quot;&gt;Window&lt;/a&gt; - contains types for creating top-level windows and accessing screen information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2caa3e373c26527a59d552fe2439e8b65b5bc2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-xmllistmodel-qmlmodule.html&quot;&gt;XML List Model&lt;/a&gt; - contains types for creating models from XML data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d635c4b497f86ece33482cfa28c6f203c23cfee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquickcontrols-chattutorial-example.html#qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; implements setData() as described &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#changing-model-data&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb6252e4166f8c9a5818307de18ae2dcb020f91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsensors-module.html&quot;&gt;QtSensors&lt;/a&gt; supports a rich API for controlling and providing information about sensors. Naturally, not all of this functionality can be supported by all of the backends.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c96b68df7e11a8fedc225b8a1dd9ccb381b6670" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsensors-module.html&quot;&gt;QtSensors&lt;/a&gt;.shake gesture is available with the Qt Sensors API, but the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsensors-module.html&quot;&gt;QtSensors&lt;/a&gt;.SecondCounter sensor gesture is provided as example code for the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsensors-qmlsensorgestures-example.html&quot;&gt;Qt Sensors - SensorGesture QML Type example&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41aecb76b67e7708d80635ef20dde350cf9ba716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtserialbus-passthrucan-overview.html&quot;&gt;PassThruCAN&lt;/a&gt; (&lt;code&gt;passthrucan&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300b3e84b3b15509680c4c3f6ca57b6d199ef25e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtserialbus-peakcan-overview.html&quot;&gt;PeakCAN&lt;/a&gt; (&lt;code&gt;peakcan&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406a0054b9d53310fd810c3ed1936055c35f914b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtserialbus-socketcan-overview.html&quot;&gt;SocketCAN&lt;/a&gt; (&lt;code&gt;socketcan&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e66382ffe14a29a98593fdd1c0bb9954ce6566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtserialbus-systeccan-overview.html&quot;&gt;SystecCAN&lt;/a&gt; (&lt;code&gt;systeccan&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4b048d5df055b0afa648093a88525a1727adf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtserialbus-tinycan-overview.html&quot;&gt;TinyCAN&lt;/a&gt; (&lt;code&gt;tinycan&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fbd08bc58b9217acd9cddb6f7ae9312582a6b5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtserialbus-vectorcan-overview.html&quot;&gt;VectorCAN&lt;/a&gt; (&lt;code&gt;vectorcan&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb307d1e2417cb31d4058ef645f8cd399b9edda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtserialbus-virtualcan-overview.html&quot;&gt;VirtualCAN&lt;/a&gt; (&lt;code&gt;virtualcan&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6adc41c3cb8d3c006958f589ebd6190e971c2321" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; comes with a REGEXP operation. However the needed implementation must be provided by the user. For convenience a default implementation can be enabled by &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setting the connect option&lt;/a&gt;&lt;code&gt;QSQLITE_ENABLE_REGEXP&lt;/code&gt; before &lt;a href=&quot;qsqldatabase#open&quot;&gt;the database connection is opened&lt;/a&gt;. Then a SQL statement like &quot;column REGEXP 'pattern'&quot; basically expands to the Qt code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2da093f4bf70f822bc4e01e9420f2815ceb47cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; has some restrictions regarding multiple users and multiple transactions. If you try to read/write on a resource from different transactions, your application might freeze until one transaction commits or rolls back. The Qt &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; driver will retry to write to a locked resource until it runs into a timeout (see &lt;code&gt;QSQLITE_BUSY_TIMEOUT&lt;/code&gt; at &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;QSqlDatabase::setConnectOptions&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4b5bfdbe8107bff37db5abf72707b6d4f0181d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; is the in-process database system with the best test coverage and support on all platforms. Oracle via OCI, PostgreSQL, and MySQL through either ODBC or a native driver are well-tested on Windows and Linux. The completeness of the support for other systems depends on the availability and quality of client libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ae8391fa5297e6ddeed0ebe1b346dcc3a991d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; minor releases sometimes break file format forward compatibility. For example, &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 3.3 can read database files created with &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 3.2, but databases created with &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 3.3 cannot be read by &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 3.2. Please refer to the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; documentation and change logs for information about file format compatibility between versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76509a45ed304411c007852331cd2e6ee01091d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; version 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab52e37762fb7e5b069252c788dfe8a347665cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; version 2 is &quot;typeless&quot;. This means that you can store any kind of data you want in any column of any table, regardless of the declared data type of that column. We recommend that you map the data to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a92c53859567d3a8c1304b73638d526f127ed37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; version 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f275d3f1031d5f969cee9526ddb8f34304153e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; version 3 is included as a third-party library within Qt. It can be built by passing the &lt;code&gt;-qt-sqlite&lt;/code&gt; parameter to the configure script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7d854a2b3c8ea914dca20ed8b705f967d1dc9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; version 3 or above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8099a80ea1edda73efddf8990ecdc48b18a301b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qttest-qmlmodule.html&quot;&gt;Qt Quick Test&lt;/a&gt; is a unit test framework for QML applications. Test cases are written as JavaScript functions within a &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14163418819394c58b9d15066465a3220970023" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qttest-qmlmodule.html&quot;&gt;Tests&lt;/a&gt; - contains types for writing unit test for a QML application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5de5d67c58292130d1be44adc5903dab98748317" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtvirtualkeyboard-build.html&quot;&gt;Building Qt Virtual Keyboard&lt;/a&gt; describes how to integrate these plugins into the Qt Virtual Keyboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f166119208aa0fb480066a16bdd9a1013dd4498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-3rdparty-webrtc.html&quot;&gt;WebRTC&lt;/a&gt; provides browsers with Real-Time Communications (RTC) capabilities via simple APIs. For more information, see &lt;a href=&quot;qml-qtwebengine-webengineview#Feature-prop&quot;&gt;WebEngineView.Feature&lt;/a&gt; and &lt;a href=&quot;qwebenginepage#Feature-enum&quot;&gt;QWebEnginePage::Feature&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25225316ab95b3e715ba2f7c51089a06b9999950" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qvariant-obsolete.html#Type-enum&quot;&gt;QVariant::Type&lt;/a&gt; QMetaProperty::type() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9c812b3931490765a5cd11854f9b0783399694" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qvariant-obsolete.html#Type-enum&quot;&gt;QVariant::Type&lt;/a&gt; QSqlField::type() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e63e12020129e7106668933537d914e373eb5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/qvariant-obsolete.html#Type-enum&quot;&gt;QVariant::Type&lt;/a&gt; QVariant::type() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d860d6d09756b7297759ad2b6daaccf7733d248" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/reference-overview.html&quot;&gt;Qt Reference Pages&lt;/a&gt; - a listing of C++ and QML APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3959c02c2b924c30096a2b22db2095962013acde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5.15/sensorgesture-plugins-topics.html#qt-sensor-gestures&quot;&gt;Qt Sensor Gestures&lt;/a&gt; contains a list of currently supported sensor gestures and their descriptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa64e9d9ffb0bd2a8854d4e92d4bee02ef215b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5/qaction.html&quot;&gt;QAction&lt;/a&gt; * QMenu::addAction ( const QIcon &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c125a65c6c28d3ac155f8cfe8d28dfa7a56abf29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-5/qchar.html#JoiningType-enum&quot;&gt;JoiningType&lt;/a&gt; QChar::joiningType() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b8cbb79c671809a6c4d394a066d9e32f0e3221" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#class-command&quot;&gt;\class&lt;/a&gt; - for C++ class documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e8941365254392500f7df1a176c13814a26967" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#constructor&quot;&gt;PreviewWindow&lt;/a&gt;(&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; *parent = 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c520c574d0de6491e0a9e7cce820759d9cc99576" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#enum-command&quot;&gt;\enum&lt;/a&gt; - for enumeration documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377b3c373d78b2fb9407e76b38f30ea6660d08d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; - for creating a page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82ebb446b11077a89cae8b27ba23e4acb062afd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#qmlclass-command&quot;&gt;\qmlclass&lt;/a&gt; (deprecated, use \qmltype)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9c14e5299abc27a3fca56993923b90b1983b07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; - creates a QML type documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e311cbb506350bcde191c82eabb511dec9353a3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; - for QML type documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f2650288c16ad7701079c9bae0f1d7ec12e3613" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/overviews-main.html&quot;&gt;Qt Overviews&lt;/a&gt; - list of topics about application development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabbb7c9d7ea535a72907b33c1db29c47b1217d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; - Animates transitions during state changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e82cae5e3484038a5efda259f93554577141ef4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-1-0.html&quot;&gt;QOpenGLFunctions_1_0&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-1-1.html&quot;&gt;QOpenGLFunctions_1_1&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-1-2.html&quot;&gt;QOpenGLFunctions_1_2&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-1-3.html&quot;&gt;QOpenGLFunctions_1_3&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-1-4.html&quot;&gt;QOpenGLFunctions_1_4&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-1-5.html&quot;&gt;QOpenGLFunctions_1_5&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-2-0.html&quot;&gt;QOpenGLFunctions_2_0&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-2-1.html&quot;&gt;QOpenGLFunctions_2_1&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-3-0.html&quot;&gt;QOpenGLFunctions_3_0&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-3-1.html&quot;&gt;QOpenGLFunctions_3_1&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-3-2-compatibility.html&quot;&gt;QOpenGLFunctions_3_2_Compatibility&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-3-2-core.html&quot;&gt;QOpenGLFunctions_3_2_Core&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-3-3-compatibility.html&quot;&gt;QOpenGLFunctions_3_3_Compatibility&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-3-3-core.html&quot;&gt;QOpenGLFunctions_3_3_Core&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-0-compatibility.html&quot;&gt;QOpenGLFunctions_4_0_Compatibility&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-0-core.html&quot;&gt;QOpenGLFunctions_4_0_Core&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-1-compatibility.html&quot;&gt;QOpenGLFunctions_4_1_Compatibility&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-1-core.html&quot;&gt;QOpenGLFunctions_4_1_Core&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-2-compatibility.html&quot;&gt;QOpenGLFunctions_4_2_Compatibility&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-2-core.html&quot;&gt;QOpenGLFunctions_4_2_Core&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-3-compatibility.html&quot;&gt;QOpenGLFunctions_4_3_Compatibility&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-3-core.html&quot;&gt;QOpenGLFunctions_4_3_Core&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-4-compatibility.html&quot;&gt;QOpenGLFunctions_4_4_Compatibility&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-4-core.html&quot;&gt;QOpenGLFunctions_4_4_Core&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-5-compatibility.html&quot;&gt;QOpenGLFunctions_4_5_Compatibility&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-4-5-core.html&quot;&gt;QOpenGLFunctions_4_5_Core&lt;/a&gt;, and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions-es2.html&quot;&gt;QOpenGLFunctions_ES2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e30cd0c3009ae47875898a88067cdb413996487" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; *QOpenGLContext::functions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa23b3e3efd8d2acd63ad5044aa10d9d834a8a4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdoc-tutorials-alarms-example.html&quot;&gt;Getting Started Programming with Qt Quick&lt;/a&gt; - a tutorial showing the creation of a simple QML text editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a061042936e20ea331659689feafc6920465ee70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdoc-tutorials-alarms-example.html#qt-creator&quot;&gt;Qt Creator&lt;/a&gt; is the IDE for Qt development. Qt Creator creates project files, test and debug code, and connects to mobile devices. For Android, Qt Creator can sign and package APK files, ready for publishing to Google Play. &lt;a href=&quot;http://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;amp;mt=12&quot;&gt;Xcode&lt;/a&gt; is necessary for development on Apple platforms and Qt Creator can create project files and connect to Apple devices for testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0e6e9d42245ebc2f8a032641aa5aa4c05c45d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdoc-tutorials-alarms-example.html#qt-creator&quot;&gt;Qt Creator&lt;/a&gt; is the IDE for Qt development. Qt Creator creates project files, test and debug code, and connects to mobile devices. For Android, Qt Creator can sign and package APK files, ready for publishing to Google Play. &lt;a href=&quot;https://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;amp;mt=12&quot;&gt;Xcode&lt;/a&gt; is necessary for development on Apple platforms and Qt Creator can create project files and connect to Apple devices for testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0fdfd1e9cd4d81a28d4103ddd730308a1f25dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdoc-tutorials-alarms-example.html#qt-creator&quot;&gt;Qt Creator&lt;/a&gt; sets up project environments for the following types of Qt Quick applications:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776c08621dda1030596ff34f2eb9333d2f6bce54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtest-overview.html&quot;&gt;Qt Test&lt;/a&gt; (also known as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c5a1d0ec50499f163be7754307b42e234a42c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtexamplesandtutorials.html&quot;&gt;Examples and Tutorials&lt;/a&gt; - code samples and tutorials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966da42ed6abdaf21b9dde9a390f8e5bf6ed83eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtlinguist-index.html&quot;&gt;Qt Linguist Manual&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtlinguist-hellotr-example.html&quot;&gt;Hello tr&lt;/a&gt;() Example, &lt;a href=&quot;i18n-plural-rules&quot;&gt;Translation Rules for Plurals&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f325a9dd9f0d910f0a6ac5fc4c88e031ecdcc5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-documents-topic.html&quot;&gt;QML Documents&lt;/a&gt; include import statements that define the type names and JavaScript files visible to the document. In addition to their use in the QML declaration itself, type names are used by JavaScript code when accessing &lt;a href=&quot;qtqml-syntax-objectattributes#attached-properties-and-attached-signal-handlers&quot;&gt;attached properties&lt;/a&gt; and enumeration values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa4964d0fdf276b7b891d0835b7620535487156" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;.BottomFirst - The bottom of the item will lead along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e50d8ab83d74057568cd3bf839d2d2af0b8e0bbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;.Fixed (default) - the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt; will not control the rotation of the item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c093898c7600030d609dc85493cb9f825b100c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;.LeftFirst - The left side of the item will lead along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfd6c5322ccf452e7b27b709bd6826a18193c7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;.RightFirst - The right side of the item will lead along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d694406c77c9674ea1552b76cece2f210fc837e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-animation-example.html#pathanimation&quot;&gt;PathAnimation&lt;/a&gt;.TopFirst - The top of the item will lead along the path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95db30863c993f9816c0a9572eda4feac1f5e0ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-controls2-qmlmodule.html&quot;&gt;&lt;code&gt;QtQuick.Controls&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;&lt;code&gt;QtQuick.Controls.Material&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;qtquickcontrols2-universal&quot;&gt;&lt;code&gt;QtQuick.Controls.Universal&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-templates2-qmlmodule.html&quot;&gt;&lt;code&gt;QtQuick.Templates&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77bf4541eba53dc68f0f60f260e71eccd0aec4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-localstorage-qmlmodule.html&quot;&gt;Local Storage&lt;/a&gt; - a submodule containing a JavaScript interface for an &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157a3d22f4b598ba6b224e5025f76f8814edecf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-module.html&quot;&gt;Qt Quick C++ Classes&lt;/a&gt; - the C++ API provided by the Qt Quick module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c427db95f4811358375036edb4c4d127631ac8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-particles-qmlmodule.html&quot;&gt;Particles&lt;/a&gt; - provides a particle system for Qt Quick</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b82e2316a4116ca15d83d0a84c37ea4ff24e66f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-qmlmodule.html&quot;&gt;Qt Quick QML Types&lt;/a&gt; - a list of QML types provided by the &lt;code&gt;QtQuick&lt;/code&gt; import</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e91c7e9034c743dff1f4ae6df6f29e147178f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-customshaders-example.html&quot;&gt;Qt Quick 3D - Custom Shaders Example&lt;/a&gt;, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-custommaterial-example.html&quot;&gt;Qt Quick 3D - Custom Materials Example&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f781f7e543dce6af80e9127cbadf3a9b573c07af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-effects-qmlmodule.html&quot;&gt;QtQuick3D.Effects&lt;/a&gt; - A library of built-in post processing effect components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1dc6cc62962f4450da431283fbf9a90b04c9bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-helpers-qmlmodule.html&quot;&gt;QtQuick3D.Helpers&lt;/a&gt; - A library of additional components which can be used to help design 3D and debug 3D scenes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858d7455907282499e0725a736d0fbf1666c3b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-module.html&quot;&gt;QtQuick3D&lt;/a&gt; - The only public C++ module. Contains the definitions of all types exposed to the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-qmlmodule.html&quot;&gt;QtQuick3D&lt;/a&gt; QML import as well as a few C++ APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b816e3dfed971b2583a95ea96e2affa0bd07abbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-qmlmodule.html&quot;&gt;QtQuick3D&lt;/a&gt; - The main import which contains all the core components of Qt Quick 3D</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17066e41370ebc22b450a81d0d92e3afa13b027b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquickcontrols-chattutorial-example.html#qsqltablemodel&quot;&gt;QSqlTableModel&lt;/a&gt; implements setData() as described &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#changing-model-data&quot;&gt;below&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d468effd4cd6227404aab6624bd943c540e4c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; comes with a REGEXP operation. However the needed implementation must be provided by the user. For convenience a default implementation can be enabled by &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setting the connect option&lt;/a&gt;&lt;code&gt;QSQLITE_ENABLE_REGEXP&lt;/code&gt; before &lt;a href=&quot;qsqldatabase#open&quot;&gt;the database connection is opened&lt;/a&gt;. Then a SQL statement like &quot;column REGEXP 'pattern'&quot; basically expands to the Qt code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00684d76295daadc2d916ec43b8cbaf5d84f30d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; has some restrictions regarding multiple users and multiple transactions. If you try to read/write on a resource from different transactions, your application might freeze until one transaction commits or rolls back. The Qt &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; driver will retry to write to a locked resource until it runs into a timeout (see &lt;code&gt;QSQLITE_BUSY_TIMEOUT&lt;/code&gt; at &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;QSqlDatabase::setConnectOptions&lt;/a&gt;()).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15684652c3ff21d5a88a0e09d55498c7ab59c512" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; is the in-process database system with the best test coverage and support on all platforms. Oracle via OCI, PostgreSQL, and MySQL through either ODBC or a native driver are well-tested on Windows and Linux. The completeness of the support for other systems depends on the availability and quality of client libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c15312a9c77f16a39c15691b827967ea0ccb6f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; minor releases sometimes break file format forward compatibility. For example, &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 3.3 can read database files created with &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 3.2, but databases created with &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 3.3 cannot be read by &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 3.2. Please refer to the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; documentation and change logs for information about file format compatibility between versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b67f3b409b29dd29880482867892aef90b1a66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; version 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4cbced6532193c53d37c124105086bd8534339" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; version 3 is included as a third-party library within Qt. It can be built by passing the &lt;code&gt;-qt-sqlite&lt;/code&gt; parameter to the configure script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60801f6372f39e4d470b91d75aaab754f02931ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; version 3 or above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df7f1b27d749f4fb073e8d75dca97a6ecca618a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qttest-qmlmodule.html&quot;&gt;Qt Quick Test&lt;/a&gt; is a unit test framework for QML applications. Test cases are written as JavaScript functions within a &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2925c75ce647e842d3f4c083e49d11cca862d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/qttest-qmlmodule.html&quot;&gt;Tests&lt;/a&gt; - contains types for writing unit test for a QML application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7910f53c26b02f0fa68d4699bff817d58a8589" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/reference-overview.html&quot;&gt;Qt Reference Pages&lt;/a&gt; - a listing of C++ and QML APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc2c98fdf6a8fa92367f39b4157e6f978f603dd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qt-6.0/topics-app-development.html#design-tools&quot;&gt;Design Tools&lt;/a&gt; - tools for designing UIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6508ced8d9948ce6eacc727484c6f2318d46745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qtcreator/creator-developing-ios.html&quot;&gt;Connecting Apple Mobile Devices&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2ba8fbd44556b8a01256b7c637d2379fee1d96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt; is a complete IDE for developing Qt applications. You can setup project files, code, debug, package, and deploy from within Qt Creator. New in Qt 6, projects can use either &lt;a href=&quot;cmake-manual&quot;&gt;CMake&lt;/a&gt; or &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt; to build applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c59b3ec36fa1a5590503efb9d7bf5ed72284f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://emscripten.org/docs/introducing_emscripten/index.html&quot;&gt;emscripten&lt;/a&gt; is a toolchain for compiling to asm.js and WebAssembly. It lets you run Qt on the web at near-native speed without plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecd942143ac3d159f74c63dc104a2d0d309f8de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65309&quot;&gt;Related bug&lt;/a&gt; in GCC's bug tracker</source>
          <target state="translated">&lt;a href=&quot;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=65309&quot;&gt;Связанная ошибка&lt;/a&gt; в трекере ошибок GCC</target>
        </trans-unit>
        <trans-unit id="83823ecacf15e6fa18beabad1d04af5881c45994" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=67550&quot;&gt;Related bug&lt;/a&gt; in GCC's bug tracker</source>
          <target state="translated">&lt;a href=&quot;https://gcc.gnu.org/bugzilla/show_bug.cgi?id=67550&quot;&gt;Связанная ошибка&lt;/a&gt; в трекере ошибок GCC</target>
        </trans-unit>
        <trans-unit id="a5c783bbe7416654f921a4dac9ce06b7d65206f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crossbario/autobahn-testsuite&quot;&gt;Autobahn|Testsuite&lt;/a&gt;, a standard test suite for WebSocket Protocol (&lt;a href=&quot;http://tools.ietf.org/html/rfc6455&quot;&gt;RFC 6455&lt;/a&gt;), can be used for testing the conformance of Qt WebSockets. Refer to &lt;a href=&quot;https://github.com/crossbario/autobahn-testsuite/blob/master/README.md#installation&quot;&gt;Autobahn|Testsuite installation documentation&lt;/a&gt; to set up the test suite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c3a54c3c3aa5e5e0e87cd88a32b35a08bbadf1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://hdrihaven.com/hdris/&quot;&gt;HDRI Haven&lt;/a&gt; provides many CC0-licensed HDR images that can be used as source material for the above tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="172673af507a5cb3081b56cd93bd109fd8185c5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3.4.2&quot;&gt;HMAC-SHA1&lt;/a&gt; signature method.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3.4.2&quot;&gt;&lt;/a&gt;Метод подписи HMAC-SHA1 .</target>
        </trans-unit>
        <trans-unit id="719adf153c8228f986ece4d9e874efe563066955" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3.4.3&quot;&gt;RSA-SHA1&lt;/a&gt; signature method (not supported).</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3.4.3&quot;&gt;&lt;/a&gt;Метод подписи RSA-SHA1 (не поддерживается).</target>
        </trans-unit>
        <trans-unit id="49276c11b20d2e1a2f083a4bc95af806182f5b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3.4.4&quot;&gt;PLAINTEXT&lt;/a&gt; signature method.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5849#section-3.4.4&quot;&gt;&lt;/a&gt;Метод подписи PLAINTEXT .</target>
        </trans-unit>
        <trans-unit id="92d547914b4079336b2cef931f7e8f42e14316eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wayland.freedesktop.org/&quot;&gt;Wayland&lt;/a&gt; is a display server protocol that helps you to create multi-process systems. Multiple client applications (&quot;clients&quot;) can render their own content to off-screen buffers. These buffers are then passed to a display server, often called a compositor, using the Wayland protocol. Finally, the compositor composites and positions the content on a physical display.</source>
          <target state="translated">&lt;a href=&quot;https://wayland.freedesktop.org/&quot;&gt;Wayland&lt;/a&gt; - это протокол сервера отображения, который помогает создавать многопроцессорные системы. Несколько клиентских приложений (&amp;laquo;клиентов&amp;raquo;) могут отображать свой собственный контент во внеэкранных буферах. Затем эти буферы передаются на сервер дисплея, часто называемый композитором, с использованием протокола Wayland. Наконец, композитор объединяет и размещает контент на физическом дисплее.</target>
        </trans-unit>
        <trans-unit id="8995f6ce256283eae332b119b19ebb45f8c51999" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wayland.freedesktop.org/&quot;&gt;Wayland&lt;/a&gt; is a light-weight windowing system; or more precisely, it is a protocol for clients to talk to a display server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8e170af085ac44eb73fb80ed30a447cb429a10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wiki.qt.io/Qt5ForAndroidBuilding&quot;&gt;Building Qt for Android&lt;/a&gt; Wiki page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109d2a1d92c9ce74db2b2528bb4fdbcd82d94d26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.activestate.com/Products/activeperl/index.mhtml&quot;&gt;ActivePerl&lt;/a&gt; - Install a recent version of &lt;a href=&quot;https://www.activestate.com/Products/activeperl/index.mhtml&quot;&gt;ActivePerl&lt;/a&gt; (&lt;a href=&quot;https://www.activestate.com/activeperl&quot;&gt;download page&lt;/a&gt;) and add the installation location to your &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff253b13905c806614080c52aa3fcd6aa5eed6ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.freedesktop.org/wiki/Software/libinput&quot;&gt;libinput&lt;/a&gt; is a library to handle input devices that offers an alternative to the Qt's own &lt;code&gt;evdev&lt;/code&gt; input support. To enable using &lt;code&gt;libinput&lt;/code&gt;, when you configure and build Qt, make sure that the development files for &lt;code&gt;libudev&lt;/code&gt; and &lt;code&gt;libinput&lt;/code&gt; are available. If you require keyboard support, then &lt;code&gt;xkbcommon&lt;/code&gt; is also necessary. With &lt;code&gt;eglfs&lt;/code&gt; and &lt;code&gt;linuxfb&lt;/code&gt;, no further actions are necessary as these plugins use &lt;code&gt;libinput&lt;/code&gt; by default. If &lt;code&gt;libinput&lt;/code&gt; support is not available or the &lt;code&gt;QT_QPA_EGLFS_NO_LIBINPUT&lt;/code&gt; environment variable is set, then Qt's own &lt;code&gt;evdev&lt;/code&gt; handlers are used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48ce01af39c60ecc28755efdeb4142bde5aacaad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.khronos.org/egl&quot;&gt;EGL&lt;/a&gt; is an interface between OpenGL and the native windowing system. Qt can use EGL for context and surface management, however the API contains no platform-specifics. Creating a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54dac949e92056f2cb8e0dda4a89ae6a0a8914ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.khronos.org/opengl/&quot;&gt;OpenGL&lt;/a&gt; 3.0 or higher; OpenGL 3.3 or higher is strongly recommended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee115b1e7d7b9d27140d9c85f15aa8ef3963ce4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.khronos.org/opengles/&quot;&gt;OpenGL ES&lt;/a&gt; 2.0 or higher; OpenGL ES 3.0 or higher is strongly recommended</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1bcb093514b9bc19c86e11c782940ac252238e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.khronos.org/vulkan/&quot;&gt;Vulkan&lt;/a&gt; 1.0 or higher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb676bdeaa369f73ffc743932d0f404eb4f8722" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.khronos.org/vulkan/&quot;&gt;Vulkan&lt;/a&gt; is a cross-platform, explicit graphics and compute API. This class provides support for loading a Vulkan library and creating an &lt;code&gt;instance&lt;/code&gt; in a cross-platform manner. For an introduction on Vulkan instances, refer &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#initialization-instances&quot;&gt;to section 3.2 of the specification&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/vulkan/&quot;&gt;Vulkan&lt;/a&gt; - это кроссплатформенный, явный графический и вычислительный API. Этот класс обеспечивает поддержку загрузки библиотеки Vulkan и создания &lt;code&gt;instance&lt;/code&gt; кроссплатформенным способом. Для ознакомления с экземплярами Vulkan обратитесь &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#initialization-instances&quot;&gt;к разделу 3.2 спецификации&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b7777073773ab43d6597b0f3213a0a3bffc9b18a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.mapbox.com/help/define-access-token&quot;&gt;Access token&lt;/a&gt; provided by Mapbox. The token can also be specified using the environment variable &lt;code&gt;MAPBOX_ACCESS_TOKEN&lt;/code&gt;, but if also set using a plugin parameter, then this last one will have the precedence over the environment variable. When not set, a development token will be used by default. The development token is subject to the Mapbox &lt;a href=&quot;https://www.mapbox.com/tos&quot;&gt;Terms of Services&lt;/a&gt; and must not be used in production. This property has no effect on styles hosted outside the Mapbox servers.</source>
          <target state="translated">&lt;a href=&quot;https://www.mapbox.com/help/define-access-token&quot;&gt;Токен доступа,&lt;/a&gt; предоставленный Mapbox. Токен также можно указать с помощью переменной среды &lt;code&gt;MAPBOX_ACCESS_TOKEN&lt;/code&gt; , но если он также установлен с помощью параметра плагина, то последний будет иметь приоритет над переменной среды. Если не задан, по умолчанию будет использоваться токен разработки. На токен разработки распространяются &lt;a href=&quot;https://www.mapbox.com/tos&quot;&gt;Условия предоставления услуг&lt;/a&gt; Mapbox, и его нельзя использовать в производственной среде . Это свойство не влияет на стили, размещенные за пределами серверов Mapbox.</target>
        </trans-unit>
        <trans-unit id="94fdb7d4fa610642bbffe606ed78715e65321b9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.mapbox.com/help/define-access-token/&quot;&gt;Access token&lt;/a&gt; provided by Mapbox.</source>
          <target state="translated">&lt;a href=&quot;https://www.mapbox.com/help/define-access-token/&quot;&gt;Токен доступа,&lt;/a&gt; предоставленный Mapbox.</target>
        </trans-unit>
        <trans-unit id="db9dcac84c7a0457276e0483222bd0d26a61a6de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.mapbox.com/help/define-map-id/&quot;&gt;ID&lt;/a&gt; of the Mapbox map to show. An example ID is &quot;examples.map-zr0njcqy&quot;. If this parameter is present, the specified map type will be used by default, unless another is selected. If not present, the default Mapbox map ID is &quot;mapbox.streets&quot;. &lt;b&gt;Note:&lt;/b&gt; neither in this parameter nor in &lt;b&gt;mapbox.mapping.additional_map_ids&lt;/b&gt; it is allowed to use repeated map_ids. This includes the map_ids bundled in the plugin by default (documented &lt;a href=&quot;https://www.mapbox.com/api-documentation/#maps&quot;&gt;here&lt;/a&gt; under &lt;b&gt;Mapbox classic map IDs&lt;/b&gt;). Failing to do so will cause tile cache corruption.</source>
          <target state="translated">&lt;a href=&quot;https://www.mapbox.com/help/define-map-id/&quot;&gt;Идентификатор&lt;/a&gt; отображаемой карты Mapbox. Идентификатор примера - &amp;laquo;examples.map-zr0njcqy&amp;raquo;. Если этот параметр присутствует, указанный тип карты будет использоваться по умолчанию, если не выбран другой. Если не указан, идентификатор карты Mapbox по умолчанию - &amp;laquo;mapbox.streets&amp;raquo;. &lt;b&gt;Примечание:&lt;/b&gt; ни в этом параметре, ни в &lt;b&gt;mapbox.mapping.additional_map_ids нельзя&lt;/b&gt; использовать повторяющиеся map_ids. Это включает в себя map_ids, включенные в плагин по умолчанию (задокументированные &lt;a href=&quot;https://www.mapbox.com/api-documentation/#maps&quot;&gt;здесь,&lt;/a&gt; в &lt;b&gt;классических идентификаторах карт Mapbox&lt;/b&gt; ). Несоблюдение этого правила приведет к повреждению кэша листов.</target>
        </trans-unit>
        <trans-unit id="44f0d7133b53cc0621cced1a834a4ecb8505b395" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.myscript.com&quot;&gt;MyScript&lt;/a&gt; SDK is a commercial handwriting recognition engine.</source>
          <target state="translated">&lt;a href=&quot;https://www.myscript.com&quot;&gt;MyScript&lt;/a&gt; SDK - это коммерческий механизм распознавания рукописного ввода.</target>
        </trans-unit>
        <trans-unit id="c78b66f0383061bff41c6ea6fa0238d9b354160e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.nuance.com/mobile/mobile-solutions/text-input-solutions/t9-write.html&quot;&gt;T9 Write&lt;/a&gt; is a commercial handwriting recognition engine.</source>
          <target state="translated">&lt;a href=&quot;https://www.nuance.com/mobile/mobile-solutions/text-input-solutions/t9-write.html&quot;&gt;T9 Write&lt;/a&gt; - это коммерческий движок распознавания рукописного ввода.</target>
        </trans-unit>
        <trans-unit id="3a93adf95391262f99dffe565a5bb7ef0ccee6ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html&quot;&gt;Java SE Development Kit&lt;/a&gt; (JDK) or &lt;a href=&quot;http://openjdk.java.net&quot;&gt;OpenJDK&lt;/a&gt; (on Linux) version 6 up to 8. Versions higher than 8 might cause issues for &lt;a href=&quot;android-getting-started#android-sdk&quot;&gt;the Android SDK command-line tools&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e40816a5723d2e300a5a9839eb1fa54c5a44da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc2822.txt&quot;&gt;RFC 2822&lt;/a&gt;, &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc850.txt&quot;&gt;RFC 850&lt;/a&gt; and &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc1036.txt&quot;&gt;RFC 1036&lt;/a&gt; format: when converting dates to string form, format &lt;code&gt;dd MMM yyyy&lt;/code&gt; is used, for times the format is &lt;code&gt;HH:mm:ss&lt;/code&gt;. For combined date and time, these are combined as &lt;code&gt;dd MMM yyyy HH:mm:ss &amp;plusmn;tzoff&lt;/code&gt; (omitting the optional leading day of the week from the first format recognized). When reading from a string either &lt;code&gt;[ddd,] dd MMM yyyy [HH:mm[:ss]][ &amp;plusmn;tzoff]&lt;/code&gt; or &lt;code&gt;ddd MMM dd[ HH:mm:ss] yyyy[ &amp;plusmn;tzoff]&lt;/code&gt; will be recognized for combined dates and times, where &lt;code&gt;tzoff&lt;/code&gt; is a timezone offset in &lt;code&gt;HHmm&lt;/code&gt; format. Arbitrary spacing may appear before or after the text and any non-empty spacing may replace the spaces in this format. For dates and times separately, the same formats are matched and the unwanted parts are ignored. In particular, note that a time is not recognized without an accompanying date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e9c70e6f61c0b9d4aab53d16437978d1441c71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.x.org/&quot;&gt;X.org&lt;/a&gt; X11 keymaps can be converted to the &lt;code&gt;kmap&lt;/code&gt; format with the &lt;code&gt;ckbcomp&lt;/code&gt; utility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390c435adde831ff13c8bfd628e48d3ba84cc773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;implicit-sharing&quot;&gt;Implicit sharing&lt;/a&gt; has another consequence on STL-style iterators: you should avoid copying a container while iterators are active on that container. The iterators point to an internal structure, and if you copy a container you should be very careful with your iterators. E.g:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d89fabd218dab524feccbd6568415f7cd35ae59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;implicit-sharing&quot;&gt;Implicit sharing&lt;/a&gt; is used by many Qt classes to combine the speed and memory efficiency of pointers with the ease of use of classes. See the &lt;a href=&quot;implicit-sharing&quot;&gt;Shared Classes&lt;/a&gt; page for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25cf9b64fe9004e4f89b02b8a0db6ca3abe82644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;implicit-sharing#&quot;&gt;Implicit sharing&lt;/a&gt; has another consequence on STL-style iterators: you should avoid copying a container while iterators are active on that container. The iterators point to an internal structure, and if you copy a container you should be very careful with your iterators. E.g:</source>
          <target state="translated">&lt;a href=&quot;implicit-sharing#&quot;&gt;Неявное совместное использование&lt;/a&gt; имеет еще одно последствие для итераторов в стиле STL: вам следует избегать копирования контейнера, пока итераторы активны в этом контейнере. Итераторы указывают на внутреннюю структуру, и если вы копируете контейнер, вы должны быть очень осторожны с вашими итераторами. Например:</target>
        </trans-unit>
        <trans-unit id="b6840330f8e139f8a1c76d13d190041f6ce999fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;implicit-sharing#&quot;&gt;Implicit sharing&lt;/a&gt; is used by many Qt classes to combine the speed and memory efficiency of pointers with the ease of use of classes. See the &lt;a href=&quot;implicit-sharing#&quot;&gt;Shared Classes&lt;/a&gt; page for more information.</source>
          <target state="translated">&lt;a href=&quot;implicit-sharing#&quot;&gt;Неявное совместное&lt;/a&gt; использование используется многими классами Qt, чтобы объединить скорость и эффективность использования памяти указателей с простотой использования классов. См. Страницу &amp;laquo; &lt;a href=&quot;implicit-sharing#&quot;&gt;Общие классы&amp;raquo;&lt;/a&gt; для получения дополнительной информации.</target>
        </trans-unit>
        <trans-unit id="0badfcec8081dce6d9027b06c0995085bfcd74c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization&quot;&gt;Internationalization&lt;/a&gt; support, &lt;a href=&quot;embedded-linux&quot;&gt;embedded&lt;/a&gt; toolchains, &lt;a href=&quot;cmake-manual&quot;&gt;Build with CMake&lt;/a&gt;, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6efe65835b6685b3719a4f7319d40fec52a4fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization&quot;&gt;Internationalization&lt;/a&gt; support, &lt;a href=&quot;embedded-linux#&quot;&gt;embedded&lt;/a&gt; toolchains, and more.</source>
          <target state="translated">&lt;a href=&quot;internationalization&quot;&gt;&lt;/a&gt;Поддержка интернационализации , &lt;a href=&quot;embedded-linux#&quot;&gt;встроенные&lt;/a&gt; инструменты и многое другое.</target>
        </trans-unit>
        <trans-unit id="43dae729fa96ea2cd9dd00540485b542f0361c7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; - Supported</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; - Поддерживается</target>
        </trans-unit>
        <trans-unit id="43e7b8c4f6f92f22b458ff4ec070f62fdd5c5dfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; - Supported although there may be some retina scaling issues</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; - поддерживается, хотя могут возникать проблемы с масштабированием сетчатки</target>
        </trans-unit>
        <trans-unit id="f0ffb0025448fa288af0bcca5e7ef513ff8b90a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; и iOS</target>
        </trans-unit>
        <trans-unit id="bcf21247bf7a719b8e4fb92655eb9a40395b366e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; look</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; взгляд</target>
        </trans-unit>
        <trans-unit id="25a96aecaa50719618dae1234fff7002e8b67c02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; supports a separate find buffer that holds the current search string in Find operations. This find clipboard can be accessed by specifying the &lt;a href=&quot;qclipboard#Mode-enum&quot;&gt;FindBuffer&lt;/a&gt; mode.</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; поддерживает отдельный буфер поиска, в котором хранится текущая строка поиска в операциях поиска. Доступ к этому буферу обмена поиска можно получить, указав режим &lt;a href=&quot;qclipboard#Mode-enum&quot;&gt;FindBuffer&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d89625fbae5d7e4a4153b0e537d93e6effe5af9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;'s Quartz2D (CoreGraphics)</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;MacOS&lt;/a&gt; Quartz2D (CoreGraphics)</target>
        </trans-unit>
        <trans-unit id="60ac5c84e9d18540e351cb510aa0835f99ca2de8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;'s QuickDraw</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;&lt;/a&gt;QuickDraw в macOS</target>
        </trans-unit>
        <trans-unit id="d48c882623597c431111c53ddefee524e7e005fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, iOS, tvOS (including the tvOS remote)</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; , iOS, tvOS (включая пульт tvOS)</target>
        </trans-unit>
        <trans-unit id="ce82a35821c17fc1baf3d7be3f08d459c39504ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, iOS, tvOS, and watchOS</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; , iOS, tvOS и watchOS</target>
        </trans-unit>
        <trans-unit id="ed0f3ad2aa5d59b2d26c293c9d4888423de85f9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, iOS, tvOS, watchOS</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; , iOS, tvOS, watchOS</target>
        </trans-unit>
        <trans-unit id="7b392de8bcf3107d22b5a23fe5fe38657ee29858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;: &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;NoDefaultButton&lt;/a&gt; and &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;NoCancelButton&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; : &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;NoDefaultButton&lt;/a&gt; и &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;NoCancelButton&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0798b6c019f81b52bb5fb17364594f3e3cc879e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;: Two-finger douple tap (trackpad) / One-finger douple tap (magic mouse).</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; : двойное касание двумя пальцами (трекпад) / двойное касание одним пальцем (волшебная мышь).</target>
        </trans-unit>
        <trans-unit id="57510e980e9716f385bdd21fde8242c3e8df4710" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;: Two-finger pinch.</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; : ущипнуть двумя пальцами.</target>
        </trans-unit>
        <trans-unit id="0ce4bd5086fb9e9765e97be50db18d2ed3ee0acf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;: Two-finger rotate.</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; : поворот двумя пальцами.</target>
        </trans-unit>
        <trans-unit id="ca0b305db8e47e74735f0cffdaf64c4dfe633511" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;java-style-iterators#java-style-iterators&quot;&gt;Java-Style iterators&lt;/a&gt; were introduced in Qt 4. Their API is modelled on Java's iterator classes. New code should should prefer &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-Style Iterators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb0402be723dc18538f4a23b272597e07eb11dde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;layout&quot;&gt;Layouts&lt;/a&gt; are an elegant and flexible way to automatically arrange child widgets within their container. Each widget reports its size requirements to the layout through the &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt; and &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;sizePolicy&lt;/a&gt; properties, and the layout distributes the available space accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c0fef453373976b81501b63a5799bb4736ced5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;layout#&quot;&gt;Layouts&lt;/a&gt; are an elegant and flexible way to automatically arrange child widgets within their container. Each widget reports its size requirements to the layout through the &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt; and &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;sizePolicy&lt;/a&gt; properties, and the layout distributes the available space accordingly.</source>
          <target state="translated">&lt;a href=&quot;layout#&quot;&gt;Макеты&lt;/a&gt; - это элегантный и гибкий способ автоматического размещения дочерних виджетов в их контейнере. Каждый виджет сообщает свои требования к размеру макету через свойства &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt; и &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;sizePolicy&lt;/a&gt; , и макет распределяет доступное пространство соответствующим образом.</target>
        </trans-unit>
        <trans-unit id="7f226258c852ecbad6428996dc068561e071da23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;network-changes-qt6&quot;&gt;Changes to Qt Network&lt;/a&gt; lists important changes in the module API and functionality that were done for the Qt 6 series of Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2cca651c64d9f2b5359ee22585c9592189e48e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;printsupport-changes-qt6&quot;&gt;Changes to Qt Print Support&lt;/a&gt; lists important changes in the module API and functionality that were done for the Qt 6 series of Qt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fa3e5ba82be663add459c78b64b015de604826" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt; supports more than one series visible at the same time. It is not necessary for all series to have the same amount of rows and columns. Row and column labels are taken from the first added series, unless explicitly defined to row and column axes.</source>
          <target state="translated">&lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt; поддерживает одновременное отображение нескольких серий. Необязательно, чтобы все серии имели одинаковое количество строк и столбцов. Метки строк и столбцов берутся из первого добавленного ряда, если явно не определены оси строк и столбцов.</target>
        </trans-unit>
        <trans-unit id="ffbf840002c2c1ed45c6fec95174cdb8b4aca645" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt;, &lt;a href=&quot;q3dscatter&quot;&gt;Q3DScatter&lt;/a&gt;, and &lt;a href=&quot;q3dsurface&quot;&gt;Q3DSurface&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;q3dbars&quot;&gt;Q3DBars&lt;/a&gt; , &lt;a href=&quot;q3dscatter&quot;&gt;Q3DScatter&lt;/a&gt; и &lt;a href=&quot;q3dsurface&quot;&gt;Q3DSurface&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bde9cf27464f3c6058610edc9efbf6958de5c4a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dcamera&quot;&gt;Q3DCamera&lt;/a&gt; and &lt;a href=&quot;q3dlight&quot;&gt;Q3DLight&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;q3dcamera&quot;&gt;Q3DCamera&lt;/a&gt; и &lt;a href=&quot;q3dlight&quot;&gt;Q3DLight&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55a41bc8288aa590baf3f53cf1d3933040d4918f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dcamera&quot;&gt;Q3DCamera&lt;/a&gt; represents a basic orbit around centerpoint 3D camera that is used when rendering the data visualization. The class offers simple methods for rotating the camera around the origin and setting zoom level.</source>
          <target state="translated">&lt;a href=&quot;q3dcamera&quot;&gt;Q3DCamera&lt;/a&gt; представляет собой базовую орбиту вокруг трехмерной камеры с центральной точкой, которая используется при рендеринге визуализации данных. Класс предлагает простые методы для поворота камеры вокруг исходной точки и установки уровня масштабирования.</target>
        </trans-unit>
        <trans-unit id="0576677c116930733defb69b5c37ae6cb587f992" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dinputhandler&quot;&gt;Q3DInputHandler&lt;/a&gt; is the basic input handler for wheel mouse type of input devices.</source>
          <target state="translated">&lt;a href=&quot;q3dinputhandler&quot;&gt;Q3DInputHandler&lt;/a&gt; - это основной обработчик ввода для устройств ввода с колесиком мыши.</target>
        </trans-unit>
        <trans-unit id="8c0e8b7f8822f4288af88c0e0df6676b6313ff63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dlight&quot;&gt;Q3DLight&lt;/a&gt; class (and &lt;a href=&quot;qml-qtdatavisualization-light3d&quot;&gt;Light3D&lt;/a&gt; QML item) are currently not usable for anything.</source>
          <target state="translated">&lt;a href=&quot;q3dlight&quot;&gt;&lt;/a&gt;Класс Q3DLight (и &lt;a href=&quot;qml-qtdatavisualization-light3d&quot;&gt;элемент Light3D&lt;/a&gt; QML) в настоящее время ни для чего не используются.</target>
        </trans-unit>
        <trans-unit id="9ec1de9390cd57498143ed928297af09bd0911c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dlight&quot;&gt;Q3DLight&lt;/a&gt; represents a monochrome light source in 3D space.</source>
          <target state="translated">&lt;a href=&quot;q3dlight&quot;&gt;Q3DLight&lt;/a&gt; представляет собой монохромный источник света в трехмерном пространстве.</target>
        </trans-unit>
        <trans-unit id="e38626b7e3930c08bbf0a678f6c62668d142190e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dscatter&quot;&gt;Q3DScatter&lt;/a&gt; supports more than one series visible at the same time.</source>
          <target state="translated">&lt;a href=&quot;q3dscatter&quot;&gt;Q3DScatter&lt;/a&gt; поддерживает одновременное отображение более одной серии.</target>
        </trans-unit>
        <trans-unit id="b0ecbbca478015b60139611aead57c63da09f348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dscene&quot;&gt;Q3DScene&lt;/a&gt; class provides description of the 3D scene being visualized. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;q3dscene&quot;&gt;&lt;/a&gt;Класс Q3DScene предоставляет описание визуализируемой 3D-сцены. &lt;a href=&quot;#details&quot;&gt;Больше...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2f58570a09b83ac1d0d7f6ae4e3ee46e56e51b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;q3dtheme&quot;&gt;Q3DTheme&lt;/a&gt; class provides a visual style for graphs. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;q3dtheme&quot;&gt;&lt;/a&gt;Класс Q3DTheme обеспечивает визуальный стиль для графиков. &lt;a href=&quot;#details&quot;&gt;Больше...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9329499d7b5abea0a4d57e52d4ea7a0351eb44fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstract3daxis&quot;&gt;QAbstract3DAxis&lt;/a&gt; *QAbstract3DGraph::selectedAxis() const</source>
          <target state="translated">&lt;a href=&quot;qabstract3daxis&quot;&gt;QAbstract3DAxis&lt;/a&gt; * QAbstract3DGraph :: selectedAxis () const</target>
        </trans-unit>
        <trans-unit id="c717010f9035285e2f5d8d11a9ffbff42abf7755" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstract3dinputhandler&quot;&gt;QAbstract3DInputHandler&lt;/a&gt; is the base class that is subclassed by different input handling implementations that take input events and translate those to camera and light movements. Input handlers also translate raw input events to slicing and selection events in the scene.</source>
          <target state="translated">&lt;a href=&quot;qabstract3dinputhandler&quot;&gt;QAbstract3DInputHandler&lt;/a&gt; - это базовый класс, который является подклассом различных реализаций обработки ввода, которые принимают события ввода и преобразуют их в движения камеры и света. Обработчики ввода также преобразуют необработанные события ввода в события нарезки и выбора в сцене.</target>
        </trans-unit>
        <trans-unit id="a3f3aeaa3ad5fe40bd186f75cbf0356a5d0447ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; emits this signal after the animation has stopped and has reached the end.</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; испускает этот сигнал после того, как анимация остановилась и достигла конца.</target>
        </trans-unit>
        <trans-unit id="9bf6925a88f61feeedd9acc1be6b0f28e7490d0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; emits this signal whenever the current loop changes.</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; испускает этот сигнал всякий раз, когда изменяется текущий цикл.</target>
        </trans-unit>
        <trans-unit id="f9e24fd0e1ffca4723ec5c3175edcb012d5158a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; emits this signal whenever the direction has been changed.</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; излучает этот сигнал всякий раз, когда направление изменяется.</target>
        </trans-unit>
        <trans-unit id="b781b60e38335c07f67a6f3d1f6f8d89195f1f77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; emits this signal whenever the state of the animation has changed from</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; излучает этот сигнал всякий раз, когда состояние анимации меняется с</target>
        </trans-unit>
        <trans-unit id="f1f01ef489d0ed5b6da0a4cfac95d3c857354845" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; provides pure virtual functions used by subclasses to track the progress of the animation: &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt;() and &lt;a href=&quot;qabstractanimation#updateCurrentTime&quot;&gt;updateCurrentTime&lt;/a&gt;(). The &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt;() function lets you report a duration for the animation (as discussed above). The animation framework calls &lt;a href=&quot;qabstractanimation#updateCurrentTime&quot;&gt;updateCurrentTime&lt;/a&gt;() when current time has changed. By reimplementing this function, you can track the animation progress. Note that neither the interval between calls nor the number of calls to this function are defined; though, it will normally be 60 updates per second.</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; предоставляет чистые виртуальные функции, используемые подклассами для отслеживания хода анимации: &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt; () и &lt;a href=&quot;qabstractanimation#updateCurrentTime&quot;&gt;updateCurrentTime&lt;/a&gt; (). Функция &lt;a href=&quot;qabstractanimation#duration&quot;&gt;duration&lt;/a&gt; () позволяет сообщать продолжительность анимации (как описано выше). &lt;a href=&quot;qabstractanimation#updateCurrentTime&quot;&gt;Инфраструктура&lt;/a&gt; анимации вызывает updateCurrentTime (), когда текущее время изменилось. Повторно реализовав эту функцию, вы можете отслеживать ход анимации. Обратите внимание, что ни интервал между вызовами, ни количество вызовов этой функции не определены; хотя обычно это будет 60 обновлений в секунду.</target>
        </trans-unit>
        <trans-unit id="5f8b73293f6fc776afbf5cb0bfca47cc314d46d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;, &lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt;, &lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt;, &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, &lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt;, &lt;a href=&quot;qabstractnetworkcache&quot;&gt;QAbstractNetworkCache&lt;/a&gt;, &lt;a href=&quot;qabstractoauth&quot;&gt;QAbstractOAuth&lt;/a&gt;, &lt;a href=&quot;qabstractoauthreplyhandler&quot;&gt;QAbstractOAuthReplyHandler&lt;/a&gt;, &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt;, &lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;, &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;, &lt;a href=&quot;qactiongroup&quot;&gt;QActionGroup&lt;/a&gt;, &lt;a href=&quot;qbuttongroup&quot;&gt;QButtonGroup&lt;/a&gt;, &lt;a href=&quot;qclipboard&quot;&gt;QClipboard&lt;/a&gt;, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;, &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;, &lt;a href=&quot;qdatawidgetmapper&quot;&gt;QDataWidgetMapper&lt;/a&gt;, &lt;a href=&quot;qdbusabstractadaptor&quot;&gt;QDBusAbstractAdaptor&lt;/a&gt;, &lt;a href=&quot;qdbusabstractinterface&quot;&gt;QDBusAbstractInterface&lt;/a&gt;, &lt;a href=&quot;qdbuspendingcallwatcher&quot;&gt;QDBusPendingCallWatcher&lt;/a&gt;, &lt;a href=&quot;qdbusserver&quot;&gt;QDBusServer&lt;/a&gt;, &lt;a href=&quot;qdbusservicewatcher&quot;&gt;QDBusServiceWatcher&lt;/a&gt;, &lt;a href=&quot;qdbusvirtualobject&quot;&gt;QDBusVirtualObject&lt;/a&gt;, &lt;a href=&quot;qdesignerformeditorinterface&quot;&gt;QDesignerFormEditorInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerformwindowmanagerinterface&quot;&gt;QDesignerFormWindowManagerInterface&lt;/a&gt;, &lt;a href=&quot;qdnslookup&quot;&gt;QDnsLookup&lt;/a&gt;, &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;, &lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;, &lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt;, &lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt;, &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt;, &lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt;, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;, &lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt;, &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;, &lt;a href=&quot;qgenericplugin&quot;&gt;QGenericPlugin&lt;/a&gt;, &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;, &lt;a href=&quot;qgraphicsanchor&quot;&gt;QGraphicsAnchor&lt;/a&gt;, &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;, &lt;a href=&quot;qgraphicsitemanimation&quot;&gt;QGraphicsItemAnimation&lt;/a&gt;, &lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt;, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;, &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;, &lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt;, &lt;a href=&quot;qhelpfilterengine&quot;&gt;QHelpFilterEngine&lt;/a&gt;, &lt;a href=&quot;qhelpsearchengine&quot;&gt;QHelpSearchEngine&lt;/a&gt;, &lt;a href=&quot;qhttpmultipart&quot;&gt;QHttpMultiPart&lt;/a&gt;, &lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt;, &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt;, &lt;a href=&quot;qinputdevice&quot;&gt;QInputDevice&lt;/a&gt;, &lt;a href=&quot;qinputmethod&quot;&gt;QInputMethod&lt;/a&gt;, &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, &lt;a href=&quot;qitemselectionmodel&quot;&gt;QItemSelectionModel&lt;/a&gt;, &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt;, &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;, &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt;, &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt;, &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;, &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;, &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;, &lt;a href=&quot;qnetworkcookiejar&quot;&gt;QNetworkCookieJar&lt;/a&gt;, &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;, &lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt;, &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, &lt;a href=&quot;qopenglcontextgroup&quot;&gt;QOpenGLContextGroup&lt;/a&gt;, &lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt;, &lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt;, &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;, &lt;a href=&quot;qopengltimemonitor&quot;&gt;QOpenGLTimeMonitor&lt;/a&gt;, &lt;a href=&quot;qopengltimerquery&quot;&gt;QOpenGLTimerQuery&lt;/a&gt;, &lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt;, &lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt;, &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt;, &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt;, &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;, &lt;a href=&quot;qqmlengineextensionplugin&quot;&gt;QQmlEngineExtensionPlugin&lt;/a&gt;, &lt;a href=&quot;qqmlexpression&quot;&gt;QQmlExpression&lt;/a&gt;, &lt;a href=&quot;qqmlfileselector&quot;&gt;QQmlFileSelector&lt;/a&gt;, &lt;a href=&quot;qqmlimageproviderbase&quot;&gt;QQmlImageProviderBase&lt;/a&gt;, &lt;a href=&quot;qqmlpropertymap&quot;&gt;QQmlPropertyMap&lt;/a&gt;, &lt;a href=&quot;qquick3dobject&quot;&gt;QQuick3DObject&lt;/a&gt;, &lt;a href=&quot;qquickcolorgroup&quot;&gt;QQuickColorGroup&lt;/a&gt;, &lt;a href=&quot;qquickimageresponse&quot;&gt;QQuickImageResponse&lt;/a&gt;, &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;, &lt;a href=&quot;qquickitemgrabresult&quot;&gt;QQuickItemGrabResult&lt;/a&gt;, &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;, &lt;a href=&quot;qquicktextdocument&quot;&gt;QQuickTextDocument&lt;/a&gt;, &lt;a href=&quot;qquicktexturefactory&quot;&gt;QQuickTextureFactory&lt;/a&gt;, &lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt;, &lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt;, &lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt;, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;, &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt;, &lt;a href=&quot;qsgtextureprovider&quot;&gt;QSGTextureProvider&lt;/a&gt;, &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt;, &lt;a href=&quot;qshortcut&quot;&gt;QShortcut&lt;/a&gt;, &lt;a href=&quot;qsignalmapper&quot;&gt;QSignalMapper&lt;/a&gt;, &lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt;, &lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifier&lt;/a&gt;, &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt;, &lt;a href=&quot;qsqldriverplugin&quot;&gt;QSqlDriverPlugin&lt;/a&gt;, &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;, &lt;a href=&quot;qstylehints&quot;&gt;QStyleHints&lt;/a&gt;, &lt;a href=&quot;qstyleplugin&quot;&gt;QStylePlugin&lt;/a&gt;, &lt;a href=&quot;qsvgrenderer&quot;&gt;QSvgRenderer&lt;/a&gt;, &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;, &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt;, &lt;a href=&quot;qt3dcore-qabstractaspect&quot;&gt;Qt3DCore::QAbstractAspect&lt;/a&gt;, &lt;a href=&quot;qt3dcore-qaspectengine&quot;&gt;Qt3DCore::QAspectEngine&lt;/a&gt;, &lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt;, &lt;a href=&quot;qt3dinput-qinputdeviceintegration&quot;&gt;Qt3DInput::QInputDeviceIntegration&lt;/a&gt;, &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;, &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, &lt;a href=&quot;qtextobject&quot;&gt;QTextObject&lt;/a&gt;, &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;, &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;, &lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt;, &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;, &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;, &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt;, &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt;, &lt;a href=&quot;qundostack&quot;&gt;QUndoStack&lt;/a&gt;, &lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt;, &lt;a href=&quot;qwaylandclient&quot;&gt;QWaylandClient&lt;/a&gt;, &lt;a href=&quot;qwaylandquickshellintegration&quot;&gt;QWaylandQuickShellIntegration&lt;/a&gt;, &lt;a href=&quot;qwaylandsurfacegrabber&quot;&gt;QWaylandSurfaceGrabber&lt;/a&gt;, &lt;a href=&quot;qwaylandview&quot;&gt;QWaylandView&lt;/a&gt;, &lt;a href=&quot;qwaylandxdgpopup&quot;&gt;QWaylandXdgPopup&lt;/a&gt;, &lt;a href=&quot;qwaylandxdgtoplevel&quot;&gt;QWaylandXdgToplevel&lt;/a&gt;, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, and &lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bc42600f7f513f07841bd614be55ae9738e865" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;, &lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt;, &lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt;, &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, &lt;a href=&quot;qabstractnetworkcache&quot;&gt;QAbstractNetworkCache&lt;/a&gt;, &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;, &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt;, &lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt;, &lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;, &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;, &lt;a href=&quot;qactiongroup&quot;&gt;QActionGroup&lt;/a&gt;, &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;, &lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt;, &lt;a href=&quot;qaxscript&quot;&gt;QAxScript&lt;/a&gt;, &lt;a href=&quot;qaxscriptmanager&quot;&gt;QAxScriptManager&lt;/a&gt;, &lt;a href=&quot;qbuttongroup&quot;&gt;QButtonGroup&lt;/a&gt;, &lt;a href=&quot;qclipboard&quot;&gt;QClipboard&lt;/a&gt;, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;, &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;, &lt;a href=&quot;qdatawidgetmapper&quot;&gt;QDataWidgetMapper&lt;/a&gt;, &lt;a href=&quot;qdbusabstractadaptor&quot;&gt;QDBusAbstractAdaptor&lt;/a&gt;, &lt;a href=&quot;qdbusabstractinterface&quot;&gt;QDBusAbstractInterface&lt;/a&gt;, &lt;a href=&quot;qdbuspendingcallwatcher&quot;&gt;QDBusPendingCallWatcher&lt;/a&gt;, &lt;a href=&quot;qdbusserver&quot;&gt;QDBusServer&lt;/a&gt;, &lt;a href=&quot;qdbusservicewatcher&quot;&gt;QDBusServiceWatcher&lt;/a&gt;, &lt;a href=&quot;qdbusvirtualobject&quot;&gt;QDBusVirtualObject&lt;/a&gt;, &lt;a href=&quot;qdesignerformeditorinterface&quot;&gt;QDesignerFormEditorInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerformwindowmanagerinterface&quot;&gt;QDesignerFormWindowManagerInterface&lt;/a&gt;, &lt;a href=&quot;qdnslookup&quot;&gt;QDnsLookup&lt;/a&gt;, &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt;, &lt;a href=&quot;qdtls&quot;&gt;QDtls&lt;/a&gt;, &lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt;, &lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt;, &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt;, &lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt;, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;, &lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt;, &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;, &lt;a href=&quot;qgenericplugin&quot;&gt;QGenericPlugin&lt;/a&gt;, &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;, &lt;a href=&quot;qgraphicsanchor&quot;&gt;QGraphicsAnchor&lt;/a&gt;, &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;, &lt;a href=&quot;qgraphicsitemanimation&quot;&gt;QGraphicsItemAnimation&lt;/a&gt;, &lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt;, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;, &lt;a href=&quot;qgraphicstransform&quot;&gt;QGraphicsTransform&lt;/a&gt;, &lt;a href=&quot;qhttpmultipart&quot;&gt;QHttpMultiPart&lt;/a&gt;, &lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt;, &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt;, &lt;a href=&quot;qinputmethod&quot;&gt;QInputMethod&lt;/a&gt;, &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, &lt;a href=&quot;qitemselectionmodel&quot;&gt;QItemSelectionModel&lt;/a&gt;, &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt;, &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;, &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt;, &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt;, &lt;a href=&quot;qmactoolbar&quot;&gt;QMacToolBar&lt;/a&gt;, &lt;a href=&quot;qmactoolbaritem&quot;&gt;QMacToolBarItem&lt;/a&gt;, &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;, &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;, &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;, &lt;a href=&quot;qnetworkconfigurationmanager&quot;&gt;QNetworkConfigurationManager&lt;/a&gt;, &lt;a href=&quot;qnetworkcookiejar&quot;&gt;QNetworkCookieJar&lt;/a&gt;, &lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt;, &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;, &lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt;, &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, &lt;a href=&quot;qopenglcontextgroup&quot;&gt;QOpenGLContextGroup&lt;/a&gt;, &lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt;, &lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt;, &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;, &lt;a href=&quot;qopengltimemonitor&quot;&gt;QOpenGLTimeMonitor&lt;/a&gt;, &lt;a href=&quot;qopengltimerquery&quot;&gt;QOpenGLTimerQuery&lt;/a&gt;, &lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt;, &lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt;, &lt;a href=&quot;qpictureformatplugin&quot;&gt;QPictureFormatPlugin&lt;/a&gt;, &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt;, &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt;, &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;, &lt;a href=&quot;qqmlengineextensionplugin&quot;&gt;QQmlEngineExtensionPlugin&lt;/a&gt;, &lt;a href=&quot;qqmlexpression&quot;&gt;QQmlExpression&lt;/a&gt;, &lt;a href=&quot;qqmlfileselector&quot;&gt;QQmlFileSelector&lt;/a&gt;, &lt;a href=&quot;qqmlpropertymap&quot;&gt;QQmlPropertyMap&lt;/a&gt;, &lt;a href=&quot;qquickimageresponse&quot;&gt;QQuickImageResponse&lt;/a&gt;, &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;, &lt;a href=&quot;qquickitemgrabresult&quot;&gt;QQuickItemGrabResult&lt;/a&gt;, &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;, &lt;a href=&quot;qquicktextdocument&quot;&gt;QQuickTextDocument&lt;/a&gt;, &lt;a href=&quot;qquicktexturefactory&quot;&gt;QQuickTextureFactory&lt;/a&gt;, &lt;a href=&quot;qscreen&quot;&gt;QScreen&lt;/a&gt;, &lt;a href=&quot;qscroller&quot;&gt;QScroller&lt;/a&gt;, &lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt;, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;, &lt;a href=&quot;qsgabstractrenderer&quot;&gt;QSGAbstractRenderer&lt;/a&gt;, &lt;a href=&quot;qsgengine&quot;&gt;QSGEngine&lt;/a&gt;, &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt;, &lt;a href=&quot;qsgtextureprovider&quot;&gt;QSGTextureProvider&lt;/a&gt;, &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt;, &lt;a href=&quot;qshortcut&quot;&gt;QShortcut&lt;/a&gt;, &lt;a href=&quot;qsignalmapper&quot;&gt;QSignalMapper&lt;/a&gt;, &lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifier&lt;/a&gt;, &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;, &lt;a href=&quot;qstylehints&quot;&gt;QStyleHints&lt;/a&gt;, &lt;a href=&quot;qstyleplugin&quot;&gt;QStylePlugin&lt;/a&gt;, &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;, &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt;, &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;, &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, &lt;a href=&quot;qtextobject&quot;&gt;QTextObject&lt;/a&gt;, &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;, &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;, &lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt;, &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;, &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;, &lt;a href=&quot;qundogroup&quot;&gt;QUndoGroup&lt;/a&gt;, &lt;a href=&quot;qundostack&quot;&gt;QUndoStack&lt;/a&gt;, &lt;a href=&quot;qvalidator&quot;&gt;QValidator&lt;/a&gt;, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, &lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt;, &lt;a href=&quot;qwinjumplist&quot;&gt;QWinJumpList&lt;/a&gt;, &lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt;, &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt;, &lt;a href=&quot;qwinthumbnailtoolbar&quot;&gt;QWinThumbnailToolBar&lt;/a&gt;, and &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c18b83744941fa6762c18b664f92717d3261bbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;, &lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt;, &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt;, &lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt;, &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;, &lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt;, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;, &lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt;, &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, &lt;a href=&quot;qitemselectionmodel&quot;&gt;QItemSelectionModel&lt;/a&gt;, &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt;, &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;, &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;, &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt;, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;, &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt;, &lt;a href=&quot;qsignalmapper&quot;&gt;QSignalMapper&lt;/a&gt;, &lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifier&lt;/a&gt;, &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;, &lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt;, &lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt;, &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;, &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;, and &lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; , &lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt; , &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; , &lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; , &lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; , &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; , &lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt; , &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; , &lt;a href=&quot;qfilesystemwatcher&quot;&gt;QFileSystemWatcher&lt;/a&gt; , &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; , &lt;a href=&quot;qitemselectionmodel&quot;&gt;QItemSelectionModel&lt;/a&gt; , &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt; , &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; , &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt; , &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; , &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; , &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; , &lt;a href=&quot;qsignalmapper&quot;&gt;QSignalMapper&lt;/a&gt; , &lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifier&lt;/a&gt; , &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; ,&lt;a href=&quot;qthreadpool&quot;&gt;QThreadPool&lt;/a&gt; , &lt;a href=&quot;qtimeline&quot;&gt;QTimeLine&lt;/a&gt; , &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; , &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; и &lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79f5c52a9730f1af05d9a3f243d40b355430235c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation#QAbstractAnimation&quot;&gt;QAbstractAnimation&lt;/a&gt; *QAnimationGroup::animationAt(int</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation#QAbstractAnimation&quot;&gt;QAbstractAnimation&lt;/a&gt; * QAnimationGroup :: animationAt (int</target>
        </trans-unit>
        <trans-unit id="49e0e4b151499b4e9fffa9b0ce265ded12f79cb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractanimation#QAbstractAnimation&quot;&gt;QAbstractAnimation&lt;/a&gt; *QAnimationGroup::takeAnimation(int</source>
          <target state="translated">&lt;a href=&quot;qabstractanimation#QAbstractAnimation&quot;&gt;QAbstractAnimation&lt;/a&gt; * QAnimationGroup :: takeAnimation (int</target>
        </trans-unit>
        <trans-unit id="c8eae4a877ed709d29e9e4acff7499b860ba146b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractaudiooutput&quot;&gt;QAbstractAudioOutput&lt;/a&gt; implements audio functionality for &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt;, i.e., &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; routes function calls to &lt;a href=&quot;qabstractaudiooutput&quot;&gt;QAbstractAudioOutput&lt;/a&gt;. For a description of the functionality that is implemented, see the &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; class and function descriptions.</source>
          <target state="translated">&lt;a href=&quot;qabstractaudiooutput&quot;&gt;QAbstractAudioOutput&lt;/a&gt; реализует звуковые функции для &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; , т.е. &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; направляет вызовы функций в &lt;a href=&quot;qabstractaudiooutput&quot;&gt;QAbstractAudioOutput&lt;/a&gt; . Описание реализованной функциональности см. В &lt;a href=&quot;qaudiooutput&quot;&gt;описании&lt;/a&gt; класса и функции QAudioOutput .</target>
        </trans-unit>
        <trans-unit id="024d63ce4cfb02b051f875acf4dbba73a0848c36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbarseries&quot;&gt;QAbstractBarSeries&lt;/a&gt; supports the following format tag:</source>
          <target state="translated">&lt;a href=&quot;qabstractbarseries&quot;&gt;QAbstractBarSeries&lt;/a&gt; поддерживает следующий тег формата:</target>
        </trans-unit>
        <trans-unit id="c588a495dc9d3e9b38b3b20af3c070dc470c7dae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbarseries&quot;&gt;QAbstractBarSeries&lt;/a&gt;, &lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt;, &lt;a href=&quot;qboxplotseries&quot;&gt;QBoxPlotSeries&lt;/a&gt;, &lt;a href=&quot;qcandlestickseries&quot;&gt;QCandlestickSeries&lt;/a&gt;, &lt;a href=&quot;qpieseries&quot;&gt;QPieSeries&lt;/a&gt;, and &lt;a href=&quot;qxyseries&quot;&gt;QXYSeries&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractbarseries&quot;&gt;QAbstractBarSeries&lt;/a&gt; , &lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; , &lt;a href=&quot;qboxplotseries&quot;&gt;QBoxPlotSeries&lt;/a&gt; , &lt;a href=&quot;qcandlestickseries&quot;&gt;QCandlestickSeries&lt;/a&gt; , &lt;a href=&quot;qpieseries&quot;&gt;QPieSeries&lt;/a&gt; и &lt;a href=&quot;qxyseries&quot;&gt;QXYSeries&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6801d373c11245a3fb0c54b981c69cc1e6b86b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *QButtonGroup::button(int</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; * QButtonGroup :: button (int</target>
        </trans-unit>
        <trans-unit id="a7ca7b39ff00d643b3a2accee9994b6b8017f1a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *QButtonGroup::checkedButton() const</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; * QButtonGroup :: checkedButton () const</target>
        </trans-unit>
        <trans-unit id="2d95f3e57a644a846d833fcf811822e2bb961ef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *QMessageBox::button(&lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox::StandardButton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; * QMessageBox :: button ( &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox :: StandardButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8663e0bf70d69854a7aa784453133ae83208156e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *QMessageBox::clickedButton() const</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; * QMessageBox :: clickedButton () const</target>
        </trans-unit>
        <trans-unit id="37f9442cc677122d7ffc8366b531d36248725d06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *QMessageBox::escapeButton() const</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; * QMessageBox :: escapeButton () const</target>
        </trans-unit>
        <trans-unit id="d9c1f466e4181a7b3a8dacad17efa207064a8eaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; *QWizard::button(&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;QWizard::WizardButton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; * QWizard :: button ( &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;QWizard :: WizardButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d18bb9314e65fb8b2b581afef49c23e55c3aca58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; provides four signals:</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; предоставляет четыре сигнала:</target>
        </trans-unit>
        <trans-unit id="74acdc973ae17f478308c09059f04ce950e96af8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; provides most of the states used for buttons:</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; предоставляет большинство состояний, используемых для кнопок:</target>
        </trans-unit>
        <trans-unit id="9be6a5516113c3883e6e12541881885ccbeed0a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; provides support for both push buttons and checkable (toggle) buttons. Checkable buttons are implemented in the &lt;a href=&quot;qradiobutton&quot;&gt;QRadioButton&lt;/a&gt; and &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt; classes. Push buttons are implemented in the &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; and &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; classes; these also provide toggle behavior if required.</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; поддерживает как кнопки, так и проверяемые (переключаемые) кнопки. Проверяемые кнопки реализованы в &lt;a href=&quot;qradiobutton&quot;&gt;классах QRadioButton&lt;/a&gt; и &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt; . Кнопки реализованы в &lt;a href=&quot;qpushbutton&quot;&gt;классах QPushButton&lt;/a&gt; и &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; ; при необходимости они также обеспечивают переключение.</target>
        </trans-unit>
        <trans-unit id="6337e1f91ab3dcdd7c936653fb2c2009a4bc26d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt;, &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;, &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;, &lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt;, &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;, &lt;a href=&quot;qdesigneractioneditorinterface&quot;&gt;QDesignerActionEditorInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerobjectinspectorinterface&quot;&gt;QDesignerObjectInspectorInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerpropertyeditorinterface&quot;&gt;QDesignerPropertyEditorInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerwidgetboxinterface&quot;&gt;QDesignerWidgetBoxInterface&lt;/a&gt;, &lt;a href=&quot;qdesktopwidget&quot;&gt;QDesktopWidget&lt;/a&gt;, &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;, &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt;, &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;, &lt;a href=&quot;qfocusframe&quot;&gt;QFocusFrame&lt;/a&gt;, &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;, &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;, &lt;a href=&quot;qkeysequenceedit&quot;&gt;QKeySequenceEdit&lt;/a&gt;, &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;, &lt;a href=&quot;qmacnativewidget&quot;&gt;QMacNativeWidget&lt;/a&gt;, &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;, &lt;a href=&quot;qmdisubwindow&quot;&gt;QMdiSubWindow&lt;/a&gt;, &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;, &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;, &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;, &lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt;, &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, &lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt;, &lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt;, &lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt;, &lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt;, &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt;, &lt;a href=&quot;qsvgwidget&quot;&gt;QSvgWidget&lt;/a&gt;, &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;, &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;, and &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9576371f8266499465384a97941e3308ece2c1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt;, &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;, &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;, &lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt;, &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;, &lt;a href=&quot;qdesigneractioneditorinterface&quot;&gt;QDesignerActionEditorInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerobjectinspectorinterface&quot;&gt;QDesignerObjectInspectorInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerpropertyeditorinterface&quot;&gt;QDesignerPropertyEditorInterface&lt;/a&gt;, &lt;a href=&quot;qdesignerwidgetboxinterface&quot;&gt;QDesignerWidgetBoxInterface&lt;/a&gt;, &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;, &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt;, &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;, &lt;a href=&quot;qfocusframe&quot;&gt;QFocusFrame&lt;/a&gt;, &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;, &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;, &lt;a href=&quot;qkeysequenceedit&quot;&gt;QKeySequenceEdit&lt;/a&gt;, &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;, &lt;a href=&quot;qmdisubwindow&quot;&gt;QMdiSubWindow&lt;/a&gt;, &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;, &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;, &lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt;, &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, &lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt;, &lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt;, &lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt;, &lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt;, &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt;, &lt;a href=&quot;qsvgwidget&quot;&gt;QSvgWidget&lt;/a&gt;, &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;, &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;, and &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1806e5fc1755bdf56c2d330b3713e90689004d67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt;, &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;, &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;, &lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt;, &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;, &lt;a href=&quot;qdesktopwidget&quot;&gt;QDesktopWidget&lt;/a&gt;, &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;, &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt;, &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;, &lt;a href=&quot;qfocusframe&quot;&gt;QFocusFrame&lt;/a&gt;, &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt;, &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;, &lt;a href=&quot;qkeysequenceedit&quot;&gt;QKeySequenceEdit&lt;/a&gt;, &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;, &lt;a href=&quot;qmacnativewidget&quot;&gt;QMacNativeWidget&lt;/a&gt;, &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt;, &lt;a href=&quot;qmdisubwindow&quot;&gt;QMdiSubWindow&lt;/a&gt;, &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;, &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;, &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;, &lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt;, &lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt;, &lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt;, &lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt;, &lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt;, &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt;, &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt;, &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt;, and &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton&quot;&gt;QAbstractButton&lt;/a&gt; , &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt; , &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; , &lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt; , &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; , &lt;a href=&quot;qdesktopwidget&quot;&gt;QDesktopWidget&lt;/a&gt; , &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; , &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt; , &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt; , &lt;a href=&quot;qfocusframe&quot;&gt;QFocusFrame&lt;/a&gt; , &lt;a href=&quot;qframe&quot;&gt;QFrame&lt;/a&gt; , &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; , &lt;a href=&quot;qkeysequenceedit&quot;&gt;QKeySequenceEdit&lt;/a&gt; , &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; , &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; , &lt;a href=&quot;qmacnativewidget&quot;&gt;QMacNativeWidget&lt;/a&gt; , &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; , &lt;a href=&quot;qmdisubwindow&quot;&gt;QMdiSubWindow&lt;/a&gt; , &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; , &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; , &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; ,&lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt; , &lt;a href=&quot;qrubberband&quot;&gt;QRubberBand&lt;/a&gt; , &lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt; , &lt;a href=&quot;qsplashscreen&quot;&gt;QSplashScreen&lt;/a&gt; , &lt;a href=&quot;qsplitterhandle&quot;&gt;QSplitterHandle&lt;/a&gt; , &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt; , &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; , &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt; , &lt;a href=&quot;qtoolbar&quot;&gt;QToolBar&lt;/a&gt; и &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9485bddf148086d6005a5d2dbdf0563e76a98210" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;setAutoRepeat&lt;/a&gt;() sets whether the button will auto-repeat if the user holds it down. &lt;a href=&quot;qabstractbutton#autoRepeatDelay-prop&quot;&gt;autoRepeatDelay&lt;/a&gt; and &lt;a href=&quot;qabstractbutton#autoRepeatInterval-prop&quot;&gt;autoRepeatInterval&lt;/a&gt; define how auto-repetition is done.</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#autoRepeat-prop&quot;&gt;setAutoRepeat&lt;/a&gt; () устанавливает, будет ли кнопка автоматически повторяться, если пользователь удерживает ее. &lt;a href=&quot;qabstractbutton#autoRepeatDelay-prop&quot;&gt;autoRepeatDelay&lt;/a&gt; и &lt;a href=&quot;qabstractbutton#autoRepeatInterval-prop&quot;&gt;autoRepeatInterval&lt;/a&gt; определяют, как выполняется автоповторение.</target>
        </trans-unit>
        <trans-unit id="ba458e0fe35466a99c7b81c05b8a8b07c05a1b63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;() sets whether the button is a toggle button or not.</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt; () устанавливает, является ли кнопка переключателем или нет.</target>
        </trans-unit>
        <trans-unit id="7ba91ee403f3fa7daac84619634041dd2b5fac1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;() indicates whether the button is</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt; () указывает, является ли кнопка</target>
        </trans-unit>
        <trans-unit id="c4c351a021f38c5b8a33488cc9833202998a05b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked&lt;/a&gt;() is emitted when the button is first pressed and then released, when the shortcut key is typed, or when &lt;a href=&quot;qabstractbutton#click&quot;&gt;click&lt;/a&gt;() or &lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick&lt;/a&gt;() is called.</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#clicked&quot;&gt;щелкнул&lt;/a&gt; () испускается , когда кнопка нажата , а затем отпущена, когда сочетание клавиш набирается, или когда &lt;a href=&quot;qabstractbutton#click&quot;&gt;нажмите&lt;/a&gt; () или &lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick&lt;/a&gt; () называется.</target>
        </trans-unit>
        <trans-unit id="34285e37ab9ce1745b3e7e006a7b9444c7a33bca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;isDown&lt;/a&gt;() indicates whether the button is</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#down-prop&quot;&gt;isDown&lt;/a&gt; () указывает, является ли кнопка</target>
        </trans-unit>
        <trans-unit id="a88e48c8a2d37ed6fac1ecbe1c154efae48d7bac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton#pressed&quot;&gt;pressed&lt;/a&gt;() is emitted when the left mouse button is pressed while the mouse cursor is inside the button.</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#pressed&quot;&gt;Press&lt;/a&gt; () генерируется, когда левая кнопка мыши нажата, когда курсор мыши находится внутри кнопки.</target>
        </trans-unit>
        <trans-unit id="2f1addead804a2c46295add8f3bd769d60b2771e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton#released&quot;&gt;released&lt;/a&gt;() is emitted when the left mouse button is released.</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#released&quot;&gt;Release&lt;/a&gt; () излучается, когда отпускается левая кнопка мыши.</target>
        </trans-unit>
        <trans-unit id="6c3f512adeb9fbc5d18f0e55e8de80a83ad32d13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractbutton#toggled&quot;&gt;toggled&lt;/a&gt;() is emitted when the state of a toggle button changes.</source>
          <target state="translated">&lt;a href=&quot;qabstractbutton#toggled&quot;&gt;toggled&lt;/a&gt; () генерируется при изменении состояния переключателя.</target>
        </trans-unit>
        <trans-unit id="09a78e9f8a085ab7f77eeb5d18ba499f13a982e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt; *QThread::eventDispatcher() const</source>
          <target state="translated">&lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt; * QThread :: eventDispatcher () const</target>
        </trans-unit>
        <trans-unit id="179c79bf9f77d4af4c5b8b0175ba12133995d0ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt; also allows the integration of an external event loop with the Qt event loop.</source>
          <target state="translated">&lt;a href=&quot;qabstracteventdispatcher&quot;&gt;QAbstractEventDispatcher&lt;/a&gt; также позволяет интегрировать цикл внешних событий с циклом событий Qt.</target>
        </trans-unit>
        <trans-unit id="93f12ef01509e266b8f673550a05dd79f10ae927" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractextensionfactory&quot;&gt;QAbstractExtensionFactory&lt;/a&gt; is not intended to be instantiated directly; use the &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;qabstractextensionfactory&quot;&gt;QAbstractExtensionFactory&lt;/a&gt; не предназначен для непосредственного создания экземпляров; вместо этого используйте &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2656a32e14be7b1072abaa14ff7449a25634e4bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractextensionmanager&quot;&gt;QAbstractExtensionManager&lt;/a&gt; is not intended to be instantiated directly; use the &lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt; instead.</source>
          <target state="translated">&lt;a href=&quot;qabstractextensionmanager&quot;&gt;QAbstractExtensionManager&lt;/a&gt; не предназначен для непосредственного создания экземпляров; вместо этого используйте &lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d550d7592568f2235fe9bf0f8b9caa7aab46463" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractfileiconprovider&quot;&gt;QAbstractFileIconProvider&lt;/a&gt; *QFileDialog::iconProvider() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3066863f360f9e86312295ce881b2c1cebf692" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractfileiconprovider&quot;&gt;QAbstractFileIconProvider&lt;/a&gt; *QFileSystemModel::iconProvider() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349858daccb1d527316e174f03f85a3287b7e50f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractformbuilder&quot;&gt;QAbstractFormBuilder&lt;/a&gt; provides a standard interface and a default implementation for constructing forms from user interface files. It is not intended to be instantiated directly. Use the &lt;a href=&quot;qformbuilder&quot;&gt;QFormBuilder&lt;/a&gt; class to create user interfaces from UI files at run-time. For example:</source>
          <target state="translated">&lt;a href=&quot;qabstractformbuilder&quot;&gt;QAbstractFormBuilder&lt;/a&gt; предоставляет стандартный интерфейс и реализацию по умолчанию для создания форм из файлов пользовательского интерфейса. Он не предназначен для непосредственного создания экземпляров. Используйте класс &lt;a href=&quot;qformbuilder&quot;&gt;QFormBuilder&lt;/a&gt; для создания пользовательских интерфейсов из файлов пользовательского интерфейса во время выполнения. Например:</target>
        </trans-unit>
        <trans-unit id="644aa0f2bbabf2514c9bc369a7405def2c37e2d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractformbuilder#load&quot;&gt;load&lt;/a&gt;() handles reading of UI format files from arbitrary QIODevices, and construction of widgets from the XML data that they contain.</source>
          <target state="translated">&lt;a href=&quot;qabstractformbuilder#load&quot;&gt;load&lt;/a&gt; () обрабатывает чтение файлов формата пользовательского интерфейса с произвольных устройств QIODevices и создание виджетов из данных XML, которые они содержат.</target>
        </trans-unit>
        <trans-unit id="250e5d1aed69dea151b900e261a09d156a4adfbc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractformbuilder#save&quot;&gt;save&lt;/a&gt;() handles saving of widget details in UI format to arbitrary QIODevices.</source>
          <target state="translated">&lt;a href=&quot;qabstractformbuilder#save&quot;&gt;save&lt;/a&gt; () обрабатывает сохранение деталей виджета в формате UI на произвольные QIODevices.</target>
        </trans-unit>
        <trans-unit id="1d1f3f77cd245849c6ffab12b5996b16b4df9113" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractformbuilder#workingDirectory&quot;&gt;workingDirectory&lt;/a&gt;() and &lt;a href=&quot;qabstractformbuilder#setWorkingDirectory&quot;&gt;setWorkingDirectory&lt;/a&gt;() control the directory in which forms are held. The form builder looks for other resources on paths relative to this directory.</source>
          <target state="translated">&lt;a href=&quot;qabstractformbuilder#workingDirectory&quot;&gt;workingDirectory&lt;/a&gt; () и &lt;a href=&quot;qabstractformbuilder#setWorkingDirectory&quot;&gt;setWorkingDirectory&lt;/a&gt; () управляют каталогом, в котором хранятся формы. Конструктор форм ищет другие ресурсы по путям относительно этого каталога.</target>
        </trans-unit>
        <trans-unit id="1cb73c47bd0e600e19674cdf71d175e05786cfb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractgraphicsshapeitem&quot;&gt;QAbstractGraphicsShapeItem&lt;/a&gt;, &lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt;, &lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt;, &lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt;, and &lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractgraphicsshapeitem&quot;&gt;QAbstractGraphicsShapeItem&lt;/a&gt; , &lt;a href=&quot;qgraphicsitemgroup&quot;&gt;QGraphicsItemGroup&lt;/a&gt; , &lt;a href=&quot;qgraphicslineitem&quot;&gt;QGraphicsLineItem&lt;/a&gt; , &lt;a href=&quot;qgraphicsobject&quot;&gt;QGraphicsObject&lt;/a&gt; и &lt;a href=&quot;qgraphicspixmapitem&quot;&gt;QGraphicsPixmapItem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e69cfdbdab3e1ced53f0dca85df46f50c006449" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; *QAbstractItemView::itemDelegate() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; * QAbstractItemView :: itemDelegate () const</target>
        </trans-unit>
        <trans-unit id="3c5b082c916c31c7cdf765824bb1622a6bb73c21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; *QAbstractItemView::itemDelegate(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; * QAbstractItemView :: itemDelegate (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c4ab5c8e0e6a2b95436fa52af7e5a45789f0ece0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; *QAbstractItemView::itemDelegateForColumn(int</source>
          <target state="translated">&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; * QAbstractItemView :: itemDelegateForColumn (int</target>
        </trans-unit>
        <trans-unit id="b8e1f2fedf07f924a95e1cf5ce6cea9abc31e6b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; *QAbstractItemView::itemDelegateForRow(int</source>
          <target state="translated">&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; * QAbstractItemView :: itemDelegateForRow (int</target>
        </trans-unit>
        <trans-unit id="34284de95894a848216924361086b62571b70d4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; *QComboBox::itemDelegate() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; * QComboBox :: itemDelegate () const</target>
        </trans-unit>
        <trans-unit id="3c9a7f92e612ffc716d45faa7b9dbab980eb3b7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; *QDataWidgetMapper::itemDelegate() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; * QDataWidgetMapper :: itemDelegate () const</target>
        </trans-unit>
        <trans-unit id="01fa2e9a250e9607b882ddc5f20b9590f0b72a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; *QFileDialog::itemDelegate() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; * QFileDialog :: itemDelegate () const</target>
        </trans-unit>
        <trans-unit id="93e4ba141979d6130ee3ebf37266fbd845489903" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; is the abstract base class for delegates in the model/view framework. The default delegate implementation is provided by &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;, and this is used as the default delegate by Qt's standard views. However, &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; and &lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt; are independent alternatives to painting and providing editors for items in views. The difference between them is that &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; uses the current style to paint its items. We therefore recommend using &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; as the base class when implementing custom delegates or when working with Qt style sheets.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; - это абстрактный базовый класс для делегатов в структуре модели / представления. Реализация делегата по умолчанию предоставляется &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; , и он используется в качестве делегата по умолчанию стандартными представлениями Qt. Однако &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; и &lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt; являются независимыми альтернативами рисованию и предоставлению редакторов для элементов в представлениях. Разница между ними в том, что &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; использует текущий стиль для рисования своих элементов. Поэтому мы рекомендуем использовать &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; в качестве базового класса при реализации пользовательских делегатов или при работе с таблицами стилей Qt.</target>
        </trans-unit>
        <trans-unit id="488ea22c5cbd9cd7870e0fcd8259155a56542d68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *QAbstractItemModelTester::model() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; * QAbstractItemModelTester :: model () const</target>
        </trans-unit>
        <trans-unit id="0cd45afbc72f92657c329cdda7da29ed7a5aeed8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *QAbstractItemView::model() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; * QAbstractItemView :: model () const</target>
        </trans-unit>
        <trans-unit id="c0bdbea797a089f15d36ab62409e33dd5f6774c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *QComboBox::model() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; * QComboBox :: model () const</target>
        </trans-unit>
        <trans-unit id="f4e646b2b629ea9f77016fe44852fd832e5670b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *QCompleter::completionModel() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; * QCompleter :: ЗавершениеModel () const</target>
        </trans-unit>
        <trans-unit id="c97425edf61bfc54f2c916ba77992b5fff943e52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *QCompleter::model() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; * QCompleter :: model () const</target>
        </trans-unit>
        <trans-unit id="47709bb293bcfa4fae79437bdee1e02fc37acb17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *QDataWidgetMapper::model() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; * QDataWidgetMapper :: model () const</target>
        </trans-unit>
        <trans-unit id="7d991c7002c1b7d5dca08dfae730e367457c302f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *QItemSelectionModel::model()</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; * QItemSelectionModel :: model ()</target>
        </trans-unit>
        <trans-unit id="fd0b1394cdecbf9b78131d597cecf9c3633acdee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; presents a hierarchy of tables, but the views currently provided by QML can only display list data. In order to display the child lists of a hierarchical model, use the &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; QML type, which provides the following properties and functions to be used with list models of &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; type:</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; представляет иерархию таблиц, но представления, в настоящее время предоставляемые QML, могут отображать только данные списка. Чтобы отобразить дочерние списки иерархической модели, используйте тип QML &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; , который предоставляет следующие свойства и функции для использования со списковыми моделями типа &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="8b2ddd9032aa91aa4eaefff53630f19846331e5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; provides a hierarchical tree of data, whereas QML only operates on list data. &lt;code&gt;rootIndex&lt;/code&gt; allows the children of any node in a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; to be provided by this model.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; предоставляет иерархическое дерево данных, тогда как QML работает только с данными списка. &lt;code&gt;rootIndex&lt;/code&gt; позволяет этой модели предоставлять дочерние элементы любого узла в &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f7d55f192000472c6f2dd08eb0fe24d6b31b1c47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; provides a hierarchical tree of data, whereas QML only operates on list data. This function assists in using tree models in QML.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; предоставляет иерархическое дерево данных, тогда как QML работает только с данными списка. Эта функция помогает использовать древовидные модели в QML.</target>
        </trans-unit>
        <trans-unit id="0d0157c6eb3387e050a3c34eec17a39f4927c1ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; provides an interface to data that is flexible enough to handle views that represent data in the form of tables, lists, and trees. However, when implementing new models for list and table-like data structures, the &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; and &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; classes are better starting points because they provide appropriate default implementations of common functions. Each of these classes can be subclassed to provide models that support specialized kinds of lists and tables.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; предоставляет интерфейс для данных, который является достаточно гибким, чтобы обрабатывать представления, представляющие данные в форме таблиц, списков и деревьев. Однако при реализации новых моделей для структур данных, подобных спискам и таблицам, классы &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; и &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; являются лучшей отправной точкой, поскольку они обеспечивают соответствующие реализации по умолчанию общих функций. Каждый из этих классов может быть разделен на подклассы, чтобы предоставить модели, поддерживающие специализированные виды списков и таблиц.</target>
        </trans-unit>
        <trans-unit id="a8e13bf6940f0db3ab4a17ccd7af59efb55c4896" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel#QAbstractItemModel&quot;&gt;QAbstractItemModel&lt;/a&gt; *QAbstractProxyModel::sourceModel() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel#QAbstractItemModel&quot;&gt;QAbstractItemModel&lt;/a&gt; * QAbstractProxyModel :: sourceModel () const</target>
        </trans-unit>
        <trans-unit id="a56add39c9e499ce1a5f0090377a575ce6d14bb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodel#roleNames&quot;&gt;roleNames&lt;/a&gt;() to expose the role names to the QML frontend. For example, the following version returns the selected table's field names as role names:</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel#roleNames&quot;&gt;roleNames&lt;/a&gt; (), чтобы предоставить имена ролей интерфейсу QML. Например, следующая версия возвращает имена полей выбранной таблицы как имена ролей:</target>
        </trans-unit>
        <trans-unit id="75813b6f10f4bedf74fb820b4f614011384491ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; employs non-destructive tests, which typically consist in reading data and metadata out of a given item model. &lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; will also attempt illegal modifications of the model. In models which are properly implemented, such attempts should be rejected, and no data should be changed as a consequence.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; использует неразрушающие тесты, которые обычно заключаются в чтении данных и метаданных из данной модели элемента. &lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; также попытается внести незаконные изменения в модель. В правильно реализованных моделях такие попытки следует отклонять, и, как следствие, никакие данные не должны изменяться.</target>
        </trans-unit>
        <trans-unit id="66692e62a164757cc6cd6509f7bbcd7e591120df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; helps catching the most common errors in custom item model classes. By performing a series of tests, it will try to check that the model status is consistent at all times. The tests will be repeated automatically every time the model is modified.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; помогает выявить наиболее распространенные ошибки в классах пользовательских моделей элементов. Выполняя серию тестов, он будет пытаться проверить, что статус модели постоянен. Тесты будут повторяться автоматически каждый раз при изменении модели.</target>
        </trans-unit>
        <trans-unit id="887e2973182c544385087c26cae154733852ae85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; may also report additional debugging information as logging messages under the &lt;code&gt;qt.modeltest&lt;/code&gt; logging category. Such debug logging is disabled by default; refer to the &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt; documentation to learn how to enable it.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; может также сообщать дополнительную отладочную информацию в виде сообщений журнала в категории журналов &lt;code&gt;qt.modeltest&lt;/code&gt; . По умолчанию такое ведение журнала отладки отключено; обратитесь к документации &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory,&lt;/a&gt; чтобы узнать, как ее включить.</target>
        </trans-unit>
        <trans-unit id="f89875029ecd9bdcf9a20a09349a341629bed53c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; will report testing failures through the Qt Test logging mechanisms.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodeltester&quot;&gt;QAbstractItemModelTester&lt;/a&gt; будет сообщать об ошибках тестирования с помощью механизмов журналирования Qt Test.</target>
        </trans-unit>
        <trans-unit id="4fb0e4f50010d82a9e2b6b9c0aa43c570fd41e9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemmodeltester#FailureReportingMode-enum&quot;&gt;QAbstractItemModelTester::FailureReportingMode&lt;/a&gt; QAbstractItemModelTester::failureReportingMode() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodeltester#FailureReportingMode-enum&quot;&gt;QAbstractItemModelTester :: FailureReportingMode&lt;/a&gt; QAbstractItemModelTester :: failureReportingMode () const</target>
        </trans-unit>
        <trans-unit id="3a47d8451cbbf6c2eeb7e924b29b1236e891401c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; *QComboBox::view() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; * QComboBox :: view () const</target>
        </trans-unit>
        <trans-unit id="fffab10c02c406c2ac1294a934d9b2a168fc5a05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; *QCompleter::popup() const</source>
          <target state="translated">&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; * QCompleter :: popup () const</target>
        </trans-unit>
        <trans-unit id="d25d949406da67817fbe3a5230c66e95f279a09e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; class is the base class for every standard view that uses a &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;. &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; is an abstract class and cannot itself be instantiated. It provides a standard interface for interoperating with models through the signals and slots mechanism, enabling subclasses to be kept up-to-date with changes to their models. This class provides standard support for keyboard and mouse navigation, viewport scrolling, item editing, and selections. The keyboard navigation implements this functionality:</source>
          <target state="translated">&lt;a href=&quot;qabstractitemview&quot;&gt;&lt;/a&gt;Класс QAbstractItemView - это базовый класс для каждого стандартного представления, использующего &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; . &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; является абстрактным классом и не может быть создан сам по себе. Он предоставляет стандартный интерфейс для взаимодействия с моделями через механизм сигналов и слотов, что позволяет поддерживать подклассы в актуальном состоянии с изменениями в их моделях. Этот класс обеспечивает стандартную поддержку навигации с помощью клавиатуры и мыши, прокрутки области просмотра, редактирования элементов и выбора. Клавиатурная навигация реализует эту функцию:</target>
        </trans-unit>
        <trans-unit id="85a40e6de1224e22af277b788e98343fb02ba0e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; provides a lot of protected functions. Some are concerned with editing, for example, &lt;a href=&quot;qabstractitemview#edit&quot;&gt;edit&lt;/a&gt;(), and &lt;a href=&quot;qabstractitemview#commitData&quot;&gt;commitData&lt;/a&gt;(), whilst others are keyboard and mouse event handlers.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; предоставляет множество защищенных функций. Некоторые из них связаны с редактированием, например &lt;a href=&quot;qabstractitemview#edit&quot;&gt;edit&lt;/a&gt; () и &lt;a href=&quot;qabstractitemview#commitData&quot;&gt;commitData&lt;/a&gt; (), а другие - обработчиками событий клавиатуры и мыши.</target>
        </trans-unit>
        <trans-unit id="ba4349027b444b82834163de7a39141f1ba23842" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; provides common slots such as &lt;a href=&quot;qabstractitemview#edit&quot;&gt;edit&lt;/a&gt;() and &lt;a href=&quot;qabstractitemview#setCurrentIndex&quot;&gt;setCurrentIndex&lt;/a&gt;(). Many protected slots are also provided, including &lt;a href=&quot;qabstractitemview#dataChanged&quot;&gt;dataChanged&lt;/a&gt;(), &lt;a href=&quot;qabstractitemview#rowsInserted&quot;&gt;rowsInserted&lt;/a&gt;(), &lt;a href=&quot;qabstractitemview#rowsAboutToBeRemoved&quot;&gt;rowsAboutToBeRemoved&lt;/a&gt;(), &lt;a href=&quot;qabstractitemview#selectionChanged&quot;&gt;selectionChanged&lt;/a&gt;(), and &lt;a href=&quot;qabstractitemview#currentChanged&quot;&gt;currentChanged&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; предоставляет общие слоты, такие как &lt;a href=&quot;qabstractitemview#edit&quot;&gt;edit&lt;/a&gt; () и &lt;a href=&quot;qabstractitemview#setCurrentIndex&quot;&gt;setCurrentIndex&lt;/a&gt; (). Также предоставляется множество защищенных слотов, включая &lt;a href=&quot;qabstractitemview#dataChanged&quot;&gt;dataChanged&lt;/a&gt; (), &lt;a href=&quot;qabstractitemview#rowsInserted&quot;&gt;rowsInserted&lt;/a&gt; (), &lt;a href=&quot;qabstractitemview#rowsAboutToBeRemoved&quot;&gt;rowsAboutToBeRemoved&lt;/a&gt; (), &lt;a href=&quot;qabstractitemview#selectionChanged&quot;&gt;selectionChanged&lt;/a&gt; () и &lt;a href=&quot;qabstractitemview#currentChanged&quot;&gt;currentChanged&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="93efd28e6cc7d5411660b5602eb713a44feea6c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;, &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;, &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt;, &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt;, &lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt;, and &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt; , &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; , &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt; , &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; , &lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt; и &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a337c42afe3e08bab42a658871a72583da03d58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; provides a standard interface for models that represent their data as a simple non-hierarchical sequence of items. It is not used directly, but must be subclassed.</source>
          <target state="translated">&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; предоставляет стандартный интерфейс для моделей, которые представляют свои данные как простую неиерархическую последовательность элементов. Он не используется напрямую, но должен быть разделен на подклассы.</target>
        </trans-unit>
        <trans-unit id="34c68d47d9251e35ee45001204296e4a82534118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt;, &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;, &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt;, &lt;a href=&quot;qconcatenatetablesproxymodel&quot;&gt;QConcatenateTablesProxyModel&lt;/a&gt;, &lt;a href=&quot;qdirmodel&quot;&gt;QDirModel&lt;/a&gt;, &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;, and &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db4876bfbbf9c98f42cfe8ac02dcf670848f01d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt;, &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;, &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt;, &lt;a href=&quot;qconcatenatetablesproxymodel&quot;&gt;QConcatenateTablesProxyModel&lt;/a&gt;, &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;, &lt;a href=&quot;qhelpcontentmodel&quot;&gt;QHelpContentModel&lt;/a&gt;, and &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26644a49a290d3813578f8121bdb5b752d07b5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt;, &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;, &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt;, and &lt;a href=&quot;qconcatenatetablesproxymodel&quot;&gt;QConcatenateTablesProxyModel&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; , &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; , &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; и &lt;a href=&quot;qconcatenatetablesproxymodel&quot;&gt;QConcatenateTablesProxyModel&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a09d324908b2372f775078241c34cdd4adc425b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; *QXmlQuery::messageHandler() const</source>
          <target state="translated">&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; * QXmlQuery :: messageHandler () const</target>
        </trans-unit>
        <trans-unit id="6d7a5131a9737de4ea039e7b8cc5fecc3a467615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; *QXmlSchema::messageHandler() const</source>
          <target state="translated">&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; * QXmlSchema :: messageHandler () const</target>
        </trans-unit>
        <trans-unit id="26673103164154dd48b2d4862a67d0015c846fa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; *QXmlSchemaValidator::messageHandler() const</source>
          <target state="translated">&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; * QXmlSchemaValidator :: messageHandler () const</target>
        </trans-unit>
        <trans-unit id="de0464b0b2416b10153beee705c7b340cdf4282b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; is an abstract base class that provides a callback interface for handling messages. For example, class &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; parses and runs an &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;. When it detects a compile or runtime error, it generates an appropriate error message, but rather than output the message itself, it passes the message to the &lt;a href=&quot;qabstractmessagehandler#message&quot;&gt;message&lt;/a&gt;() function of its &lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt;. See &lt;a href=&quot;qxmlquery#setMessageHandler&quot;&gt;QXmlQuery::setMessageHandler&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; - это абстрактный базовый класс, который предоставляет интерфейс обратного вызова для обработки сообщений. Например, класс &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; анализирует и запускает &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; . Когда он обнаруживает ошибку компиляции или выполнения, он генерирует соответствующее сообщение об ошибке, но вместо вывода самого сообщения он передает сообщение функции &lt;a href=&quot;qabstractmessagehandler#message&quot;&gt;message&lt;/a&gt; () своего &lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; . См. &lt;a href=&quot;qxmlquery#setMessageHandler&quot;&gt;QXmlQuery :: setMessageHandler&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="050d9fd07f260f816b25fceec6fc3ed985f60d34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractnetworkcache&quot;&gt;QAbstractNetworkCache&lt;/a&gt; *QNetworkAccessManager::cache() const</source>
          <target state="translated">&lt;a href=&quot;qabstractnetworkcache&quot;&gt;QAbstractNetworkCache&lt;/a&gt; * QNetworkAccessManager :: cache () const</target>
        </trans-unit>
        <trans-unit id="e0ed6bb45c2b628bb3cf0b90b40480eee184620e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractnetworkcache&quot;&gt;QAbstractNetworkCache&lt;/a&gt; is the base class for every standard cache that is used by &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;. &lt;a href=&quot;qabstractnetworkcache&quot;&gt;QAbstractNetworkCache&lt;/a&gt; is an abstract class and cannot be instantiated.</source>
          <target state="translated">&lt;a href=&quot;qabstractnetworkcache&quot;&gt;QAbstractNetworkCache&lt;/a&gt; - это базовый класс для каждого стандартного кеша, используемого &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; . &lt;a href=&quot;qabstractnetworkcache&quot;&gt;QAbstractNetworkCache&lt;/a&gt; - это абстрактный класс, и его нельзя создать.</target>
        </trans-unit>
        <trans-unit id="77514447e5a61c8e6a5aca3b2979c4ba95250f78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractoauth#ContentType-enum&quot;&gt;QAbstractOAuth::ContentType&lt;/a&gt; QAbstractOAuth::contentType() const</source>
          <target state="translated">&lt;a href=&quot;qabstractoauth#ContentType-enum&quot;&gt;QAbstractOAuth ::&lt;/a&gt; ContentType QAbstractOAuth :: contentType () const</target>
        </trans-unit>
        <trans-unit id="d3365c6385baf615ef16f012e9238ef651a4dae6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractoauth#Status-enum&quot;&gt;QAbstractOAuth::Status&lt;/a&gt; QAbstractOAuth::status() const</source>
          <target state="translated">&lt;a href=&quot;qabstractoauth#Status-enum&quot;&gt;QAbstractOAuth :: Status&lt;/a&gt; QAbstractOAuth :: status () const</target>
        </trans-unit>
        <trans-unit id="e5fcd4c51e0b5f2197b1df90b14e8ae3d4e567ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractoauth2&quot;&gt;QAbstractOAuth2&lt;/a&gt; and &lt;a href=&quot;qoauth1&quot;&gt;QOAuth1&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractoauth2&quot;&gt;QAbstractOAuth2&lt;/a&gt; и &lt;a href=&quot;qoauth1&quot;&gt;QOAuth1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c51f78bc877f324c4ed20e96d05895f4e4fd29db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractoauthreplyhandler&quot;&gt;QAbstractOAuthReplyHandler&lt;/a&gt; *QAbstractOAuth::replyHandler() const</source>
          <target state="translated">&lt;a href=&quot;qabstractoauthreplyhandler&quot;&gt;QAbstractOAuthReplyHandler&lt;/a&gt; * QAbstractOAuth :: replyHandler () const</target>
        </trans-unit>
        <trans-unit id="08ecae6b79abb439d700c1852555a433e1793ffe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractopenglfunctions&quot;&gt;QAbstractOpenGLFunctions&lt;/a&gt; *QOpenGLContext::versionFunctions(const &lt;a href=&quot;qopenglversionprofile&quot;&gt;QOpenGLVersionProfile&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qabstractopenglfunctions&quot;&gt;QAbstractOpenGLFunctions&lt;/a&gt; * QOpenGLContext :: versionFunctions (const &lt;a href=&quot;qopenglversionprofile&quot;&gt;QOpenGLVersionProfile&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bbbe16570d913fbf31e8b01f5bc7f81f5163962f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt; extends &lt;a href=&quot;qabstractvideobuffer&quot;&gt;QAbstractVideoBuffer&lt;/a&gt; to support mapping non-continuous planar video data. Implement this instead of &lt;a href=&quot;qabstractvideobuffer&quot;&gt;QAbstractVideoBuffer&lt;/a&gt; when the abstracted video data stores planes in separate buffers or includes padding between planes which would interfere with calculating offsets from the bytes per line and frame height.</source>
          <target state="translated">&lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt; расширяет &lt;a href=&quot;qabstractvideobuffer&quot;&gt;QAbstractVideoBuffer&lt;/a&gt; для поддержки отображения прерывистых плоских видеоданных. Реализуйте это вместо &lt;a href=&quot;qabstractvideobuffer&quot;&gt;QAbstractVideoBuffer,&lt;/a&gt; когда абстрагированные видеоданные хранят плоскости в отдельных буферах или включают отступы между плоскостями, которые могут мешать вычислению смещений от байтов на строку и высоты кадра.</target>
        </trans-unit>
        <trans-unit id="f00aab216000e945825b0871e463613300641462" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractprintdialog#PrintRange-enum&quot;&gt;QAbstractPrintDialog::PrintRange&lt;/a&gt; QAbstractPrintDialog::printRange() const</source>
          <target state="translated">&lt;a href=&quot;qabstractprintdialog#PrintRange-enum&quot;&gt;QAbstractPrintDialog :: PrintRange&lt;/a&gt; QAbstractPrintDialog :: printRange () const</target>
        </trans-unit>
        <trans-unit id="e361cd2d42b7bcad510d954a519511641dde1619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; *QFileDialog::proxyModel() const</source>
          <target state="translated">&lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; * QFileDialog :: proxyModel () const</target>
        </trans-unit>
        <trans-unit id="8751cdfdb08d76809289e532d849df0dec18cd66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; already provides horizontal and vertical scroll bars by default. You can call this function to replace the default horizontal scroll bar with your own custom scroll bar.</source>
          <target state="translated">&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; уже по умолчанию предоставляет горизонтальные и вертикальные полосы прокрутки. Вы можете вызвать эту функцию, чтобы заменить горизонтальную полосу прокрутки по умолчанию собственной настраиваемой полосой прокрутки.</target>
        </trans-unit>
        <trans-unit id="6fbc5874a0042e86c250bc0ca20d65a960fee105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; already provides vertical and horizontal scroll bars by default. You can call this function to replace the default vertical scroll bar with your own custom scroll bar.</source>
          <target state="translated">&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; по умолчанию уже предоставляет вертикальные и горизонтальные полосы прокрутки. Вы можете вызвать эту функцию, чтобы заменить вертикальную полосу прокрутки по умолчанию своей собственной полосой прокрутки.</target>
        </trans-unit>
        <trans-unit id="3e98d2b9786137b9d66ced360e7e06b3c220ffeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; always shows a scroll bar. This property is ignored on systems with transient scroll bars (e.g., on Mac from version 10.7).</source>
          <target state="translated">&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; всегда показывает полосу прокрутки. Это свойство игнорируется в системах с временными полосами прокрутки (например, на Mac начиная с версии 10.7).</target>
        </trans-unit>
        <trans-unit id="a46a7c93da6ca31bec22eaa58b2d7d97d422b37a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; is a low-level abstraction of a scrolling area. The area provides a central widget called the viewport, in which the contents of the area is to be scrolled (i.e, the visible parts of the contents are rendered in the viewport).</source>
          <target state="translated">&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; - это низкоуровневая абстракция области прокрутки. Область представляет собой центральный виджет, называемый окном просмотра, в котором должно прокручиваться содержимое области (т. Е. Видимые части содержимого отображаются в окне просмотра).</target>
        </trans-unit>
        <trans-unit id="a051fcd614fe17d02f13ab60940407a6c131bcf5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; never shows a scroll bar.</source>
          <target state="translated">&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; никогда не показывает полосу прокрутки.</target>
        </trans-unit>
        <trans-unit id="37f30baab6732ce94471ba7265d3f5b5886025fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; shows a scroll bar when the content is too large to fit and not otherwise. This is the default.</source>
          <target state="translated">&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; показывает полосу прокрутки, когда содержимое слишком велико для размещения, и не иначе. Это значение по умолчанию.</target>
        </trans-unit>
        <trans-unit id="d54038a3561ec9d82b026ca096094e80599c9442" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;, &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;, &lt;a href=&quot;qlcdnumber&quot;&gt;QLCDNumber&lt;/a&gt;, &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt;, &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt;, and &lt;a href=&quot;qtoolbox&quot;&gt;QToolBox&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; , &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; , &lt;a href=&quot;qlcdnumber&quot;&gt;QLCDNumber&lt;/a&gt; , &lt;a href=&quot;qsplitter&quot;&gt;QSplitter&lt;/a&gt; , &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt; и &lt;a href=&quot;qtoolbox&quot;&gt;QToolBox&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fb6d49464e18971ac2d29b9afd0e9a86a6ba9cc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt; emits a comprehensive set of signals:</source>
          <target state="translated">&lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt; испускает исчерпывающий набор сигналов:</target>
        </trans-unit>
        <trans-unit id="62eddf0ec88468b30f377c859df51f3216d7e2a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt; provides a virtual &lt;a href=&quot;qabstractslider#sliderChange&quot;&gt;sliderChange&lt;/a&gt;() function that is well suited for updating the on-screen representation of sliders. By calling &lt;a href=&quot;qabstractslider#triggerAction&quot;&gt;triggerAction&lt;/a&gt;(), subclasses trigger slider actions. Two helper functions &lt;a href=&quot;qstyle#sliderPositionFromValue&quot;&gt;QStyle::sliderPositionFromValue&lt;/a&gt;() and &lt;a href=&quot;qstyle#sliderValueFromPosition&quot;&gt;QStyle::sliderValueFromPosition&lt;/a&gt;() help subclasses and styles to map screen coordinates to logical range values.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt; предоставляет виртуальную &lt;a href=&quot;qabstractslider#sliderChange&quot;&gt;функцию sliderChange&lt;/a&gt; (), которая хорошо подходит для обновления экранного представления ползунков. Позвонив &lt;a href=&quot;qabstractslider#triggerAction&quot;&gt;TriggerAction&lt;/a&gt; (), подклассы вызывают ползунки действия. Две вспомогательные функции &lt;a href=&quot;qstyle#sliderPositionFromValue&quot;&gt;QStyle :: sliderPositionFromValue&lt;/a&gt; () и &lt;a href=&quot;qstyle#sliderValueFromPosition&quot;&gt;QStyle :: sliderValueFromPosition&lt;/a&gt; () помогают подклассам и стилям отображать координаты экрана в значения логического диапазона.</target>
        </trans-unit>
        <trans-unit id="0ececaab9ef066f244026cff500bfcd0d15b6730" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#actionTriggered&quot;&gt;actionTriggered()&lt;/a&gt; is emitted when the scroll bar is changed by user interaction or via the &lt;a href=&quot;qabstractslider#triggerAction&quot;&gt;triggerAction()&lt;/a&gt; function.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#actionTriggered&quot;&gt;actionTriggered ()&lt;/a&gt; генерируется, когда полоса прокрутки изменяется в результате взаимодействия с пользователем или с помощью функции &lt;a href=&quot;qabstractslider#triggerAction&quot;&gt;triggerAction ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c006eafb673215a0347e74e49b6d5d2afc7d82df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#actionTriggered&quot;&gt;actionTriggered&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#actionTriggered&quot;&gt;actionTriggered&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="be07dd0fd78cd034b3a19c4b63e585f1afe9fb8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#maximum-prop&quot;&gt;maximum&lt;/a&gt;: The highest possible value.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#maximum-prop&quot;&gt;максимум&lt;/a&gt; : максимально возможное значение.</target>
        </trans-unit>
        <trans-unit id="25f501e9b1daee337f9bf0bc582f2a9e9edb949a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;minimum&lt;/a&gt;: The lowest possible value.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;минимум&lt;/a&gt; : наименьшее возможное значение.</target>
        </trans-unit>
        <trans-unit id="137652883d9106c27620e31a33877347d4e6960d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;pageStep&lt;/a&gt;: The larger of two natural steps that an abstract slider provides and typically corresponds to the user pressing PageUp or PageDown.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#pageStep-prop&quot;&gt;pageStep&lt;/a&gt; : больший из двух естественных шагов, которые предоставляет абстрактный слайдер и обычно соответствует нажатию пользователем PageUp или PageDown.</target>
        </trans-unit>
        <trans-unit id="827698ee12e16bb14b78012389f642902380a5bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#rangeChanged&quot;&gt;rangeChanged()&lt;/a&gt; is emitted when the scroll bar's range of values has changed.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#rangeChanged&quot;&gt;rangeChanged () генерируется,&lt;/a&gt; когда диапазон значений полосы прокрутки изменился.</target>
        </trans-unit>
        <trans-unit id="20ffd21f95b283ef0c943683060350656b87aaad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#rangeChanged&quot;&gt;rangeChanged&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#rangeChanged&quot;&gt;rangeChanged&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="09d79208df4a8af2f75b3f7a2a53575c354e08ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;singleStep&lt;/a&gt;: The smaller of two natural steps that an abstract sliders provides and typically corresponds to the user pressing an arrow key.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#singleStep-prop&quot;&gt;singleStep&lt;/a&gt; : меньший из двух естественных шагов, который предоставляет абстрактные ползунки и обычно соответствует нажатию пользователем клавиши со стрелкой.</target>
        </trans-unit>
        <trans-unit id="bc11b46d87628e46fc62d703c46559040a010283" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#sliderMoved&quot;&gt;sliderMoved()&lt;/a&gt; is emitted when the user drags the slider.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#sliderMoved&quot;&gt;sliderMoved () генерируется,&lt;/a&gt; когда пользователь перетаскивает ползунок.</target>
        </trans-unit>
        <trans-unit id="f50606ad729e759551ed6833be7664224d36d362" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#sliderMoved&quot;&gt;sliderMoved&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#sliderMoved&quot;&gt;sliderMoved&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="3f07705de636ca8a4d84aab9498622ea74331fcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#sliderPosition-prop&quot;&gt;sliderPosition&lt;/a&gt;: The current position of the slider. If &lt;a href=&quot;qabstractslider#tracking-prop&quot;&gt;tracking&lt;/a&gt; is enabled (the default), this is identical to &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;value&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#sliderPosition-prop&quot;&gt;sliderPosition&lt;/a&gt; : текущая позиция ползунка. Если &lt;a href=&quot;qabstractslider#tracking-prop&quot;&gt;отслеживание&lt;/a&gt; включено (по умолчанию), это идентично &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;значению&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="13363979aa07cdd3481c826ca950ddee2e7ad795" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#sliderPressed&quot;&gt;sliderPressed()&lt;/a&gt; is emitted when the user starts to drag the slider.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#sliderPressed&quot;&gt;sliderPressed () генерируется,&lt;/a&gt; когда пользователь начинает перетаскивать ползунок.</target>
        </trans-unit>
        <trans-unit id="eb0c3be3f783ea8626bccf35aa4ff249a6edbeed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#sliderPressed&quot;&gt;sliderPressed&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#sliderPressed&quot;&gt;sliderPressed&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="ed8f9c9f4368c360dec50d1667ce10cdd94057cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#sliderReleased&quot;&gt;sliderReleased()&lt;/a&gt; is emitted when the user releases the slider.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#sliderReleased&quot;&gt;sliderReleased () запускается,&lt;/a&gt; когда пользователь отпускает слайдер.</target>
        </trans-unit>
        <trans-unit id="9343078d0f65b20cdd8a99c3299e1e8314b61023" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#sliderReleased&quot;&gt;sliderReleased&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#sliderReleased&quot;&gt;sliderReleased&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="65f15ced18c9cee3c71c1a5376c563ff4d84e3ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#tracking-prop&quot;&gt;tracking&lt;/a&gt;: Whether slider tracking is enabled.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#tracking-prop&quot;&gt;отслеживание&lt;/a&gt; : включено ли отслеживание слайдера.</target>
        </trans-unit>
        <trans-unit id="b992eaab6bf3f2df93546ef2fc2d5ef20d1e95cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#value-prop&quot;&gt;value&lt;/a&gt;: The bounded integer that &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt; maintains.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#value-prop&quot;&gt;значение&lt;/a&gt; : ограниченное целое число, поддерживаемое &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2750967f00d3c496ddf786873bba98b2a4a81911" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#value-prop&quot;&gt;value&lt;/a&gt;: The bounded integer that QAbstractSlider maintains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6355e2aef5b06da1d8c4e4758630aeafb40f7d5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged()&lt;/a&gt; is emitted when the scroll bar's value has changed. The tracking() determines whether this signal is emitted during user interaction.</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged () генерируется,&lt;/a&gt; когда значение полосы прокрутки изменилось. Функция tracking () определяет, испускается ли этот сигнал во время взаимодействия с пользователем.</target>
        </trans-unit>
        <trans-unit id="a73cb616b0b78902d0c3eb567f8c5c956f401058" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="dbf2c918c85728eccaaeedda9f81ffaf777f22d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; can be used with &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;'s stream operators (operator&amp;lt;&amp;lt;() and operator&amp;gt;&amp;gt;()). There is one issue to be aware of, though: You must make sure that enough data is available before attempting to read it using operator&amp;gt;&amp;gt;().</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; можно использовать с операторами потока &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; и &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; (operator &amp;lt;&amp;lt; () и operator &amp;gt;&amp;gt; ()). Однако есть одна проблема, о которой следует помнить: вы должны убедиться, что доступно достаточно данных, прежде чем пытаться прочитать их с помощью оператора &amp;gt;&amp;gt; ().</target>
        </trans-unit>
        <trans-unit id="71dd819d8012280dc685714be88faf0487956b9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; is the base class for &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; and &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; and contains all common functionality of these two classes. If you need a socket, you have two options:</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; является базовым классом для &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; и &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; и содержит все общие функции этих двух классов. Если вам нужна розетка, у вас есть два варианта:</target>
        </trans-unit>
        <trans-unit id="a48b5f7d3645925cb24e8220e7a82e9d763608a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; provides a set of functions that suspend the calling thread until certain signals are emitted. These functions can be used to implement blocking sockets:</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; предоставляет набор функций, которые приостанавливают вызывающий поток до появления определенных сигналов. Эти функции могут использоваться для реализации блокирующих сокетов:</target>
        </trans-unit>
        <trans-unit id="eb49194bbe8972c95bde5bb225f038c1b01ed7f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;'s API unifies most of the differences between the two protocols. For example, although UDP is connectionless, &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;() establishes a virtual connection for UDP sockets, enabling you to use &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; in more or less the same way regardless of the underlying protocol. Internally, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; remembers the address and port passed to &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;(), and functions like &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() and &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() use these values.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket&quot;&gt;&lt;/a&gt;API QAbstractSocket объединяет большинство различий между двумя протоколами. Например, хотя UDP не &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;требует&lt;/a&gt; установления соединения, connectToHost () устанавливает виртуальное соединение для сокетов UDP, позволяя вам использовать &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; более или менее одинаково, независимо от базового протокола. Внутри &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; запоминает адрес и порт, переданные в &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt; (), и такие функции, как &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; () и &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt; (), используют эти значения.</target>
        </trans-unit>
        <trans-unit id="04f171416ff58821dba01550651d6925d0173d46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;, &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;, &lt;a href=&quot;qfiledevice&quot;&gt;QFileDevice&lt;/a&gt;, &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt;, &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt;, and &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827807b0e875c345d4bd5421a2d04c2d638cef6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#NetworkLayerProtocol-enum&quot;&gt;QAbstractSocket::NetworkLayerProtocol&lt;/a&gt; QHostAddress::protocol() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#NetworkLayerProtocol-enum&quot;&gt;QAbstractSocket :: NetworkLayerProtocol&lt;/a&gt; QHostAddress :: protocol () const</target>
        </trans-unit>
        <trans-unit id="3e16211ffb1b8044f3cfab6e70f1cb6e28b69b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#PauseMode-enum&quot;&gt;QAbstractSocket::PauseModes&lt;/a&gt; QAbstractSocket::pauseMode() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#PauseMode-enum&quot;&gt;QAbstractSocket :: PauseModes&lt;/a&gt; QAbstractSocket :: pauseMode () const</target>
        </trans-unit>
        <trans-unit id="ebf4229842d365c77f2526579ba77af2cc382aa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#PauseMode-enum&quot;&gt;QAbstractSocket::PauseModes&lt;/a&gt; QWebSocket::pauseMode() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#PauseMode-enum&quot;&gt;QAbstractSocket :: PauseModes&lt;/a&gt; QWebSocket :: pauseMode () const</target>
        </trans-unit>
        <trans-unit id="2d58449bc2d83d306d93eebde2ed78898ecd4d1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::SocketError&lt;/a&gt; QAbstractSocket::error() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: SocketError&lt;/a&gt; QAbstractSocket :: error () const</target>
        </trans-unit>
        <trans-unit id="08d76d6d27e45f3f1252d05c436fdcc6b9db81a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::SocketError&lt;/a&gt; QLocalServer::serverError() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: SocketError&lt;/a&gt; QLocalServer :: serverError () const</target>
        </trans-unit>
        <trans-unit id="7751af26b82cdefa705463e97011c4521fd1faaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::SocketError&lt;/a&gt; QTcpServer::serverError() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: SocketError&lt;/a&gt; QTcpServer :: serverError () const</target>
        </trans-unit>
        <trans-unit id="573def6e28b7b10e2725b657d9458de57eabbfe5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::SocketError&lt;/a&gt; QWebSocket::error() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: SocketError&lt;/a&gt; QWebSocket :: error () const</target>
        </trans-unit>
        <trans-unit id="53f3be417bf4fb877d2e6f9035eff918926d25c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::SocketError&lt;/a&gt; is not a registered metatype, so for queued connections, you will have to register it with &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;() and &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: SocketError&lt;/a&gt; не является зарегистрированным метатипом, поэтому для подключений в очереди вам нужно будет зарегистрировать его с помощью &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt; () и &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="494c3598d2bfc899b7f4452db29d26080093fe09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::SocketState&lt;/a&gt; QAbstractSocket::state() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: SocketState&lt;/a&gt; QAbstractSocket :: state () const</target>
        </trans-unit>
        <trans-unit id="11b9e8576a3f02213fb6c8f0b44195bab0aa933a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::SocketState&lt;/a&gt; QWebSocket::state() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: SocketState&lt;/a&gt; QWebSocket :: state () const</target>
        </trans-unit>
        <trans-unit id="80323a0bbbb8718376f12a45d54eb0d572d0087b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::SocketState&lt;/a&gt; is not a registered metatype, so for queued connections, you will have to register it with &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;() and &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: SocketState&lt;/a&gt; не является зарегистрированным метатипом, поэтому для подключений в очереди вам нужно будет зарегистрировать его с помощью &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt; () и &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="ce7cbe4f402af89106f79e160ed4f819032e370c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::SocketState&lt;/a&gt; is not a registered metatype, so for queued connections, you will have to register it with Q_REGISTER_METATYPE() and &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: SocketState&lt;/a&gt; не является зарегистрированным метатипом, поэтому для подключений в очереди вам нужно будет зарегистрировать его с помощью Q_REGISTER_METATYPE () и &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="947108e01b5fc3a9a3ef778552c4f30115e821fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#SocketType-enum&quot;&gt;QAbstractSocket::SocketType&lt;/a&gt; QAbstractSocket::socketType() const</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#SocketType-enum&quot;&gt;QAbstractSocket :: SocketType&lt;/a&gt; QAbstractSocket :: socketType () const</target>
        </trans-unit>
        <trans-unit id="9f7e24aff31a21ec614c2610c1068806ffc446dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#bind&quot;&gt;QUdpSocket::bind&lt;/a&gt;() prepares the socket for accepting incoming datagrams, much like &lt;a href=&quot;qtcpserver#listen&quot;&gt;QTcpServer::listen&lt;/a&gt;() for TCP servers. Whenever one or more datagrams arrive, &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; emits the &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead()&lt;/a&gt; signal. Call &lt;a href=&quot;qudpsocket#readDatagram&quot;&gt;QUdpSocket::readDatagram&lt;/a&gt;() to read the datagram.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#bind&quot;&gt;QUdpSocket :: bind&lt;/a&gt; () подготавливает сокет для приема входящих дейтаграмм, во многом подобно &lt;a href=&quot;qtcpserver#listen&quot;&gt;QTcpServer :: listen&lt;/a&gt; () для TCP-серверов. Каждый раз, когда приходит одна или несколько дейтаграмм, &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; испускает сигнал &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead ()&lt;/a&gt; . Вызовите &lt;a href=&quot;qudpsocket#readDatagram&quot;&gt;QUdpSocket :: readDatagram&lt;/a&gt; (), чтобы прочитать дейтаграмму.</target>
        </trans-unit>
        <trans-unit id="0cecd6179bbe277dabca696e0d61cd2f7b327c85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;() blocks until one payload of data has been written to the socket.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt; () блокируется до тех пор, пока в сокет не будет записана одна полезная нагрузка данных.</target>
        </trans-unit>
        <trans-unit id="bc64c53f42a30b7955e9f1a1ddd9eda2b722dacf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt;() blocks until a connection has been established.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#waitForConnected&quot;&gt;waitForConnected&lt;/a&gt; () блокируется до тех пор, пока соединение не будет установлено.</target>
        </trans-unit>
        <trans-unit id="e6e79f5da14818a1150fa8df971a0d0f57ea02b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt;() blocks until the connection has closed.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#waitForDisconnected&quot;&gt;waitForDisconnected&lt;/a&gt; () блокируется, пока соединение не закрывается.</target>
        </trans-unit>
        <trans-unit id="cf441a9da6ba9ebc3d2f4f73135a53b68debdb15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;() blocks until new data is available for reading.</source>
          <target state="translated">&lt;a href=&quot;qabstractsocket#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt; () блокируется, пока новые данные не станут доступны для чтения.</target>
        </trans-unit>
        <trans-unit id="1a63f4e3b06f9e5c630b82670f6813b9cd70366d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; also provide a virtual function &lt;a href=&quot;qabstractspinbox#stepEnabled&quot;&gt;stepEnabled&lt;/a&gt;() to determine whether stepping up/down is allowed at any point. This function returns a bitset of &lt;a href=&quot;qabstractspinbox#StepEnabledFlag-enum&quot;&gt;StepEnabled&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; также предоставляет виртуальную функцию &lt;a href=&quot;qabstractspinbox#stepEnabled&quot;&gt;stepEnabled&lt;/a&gt; (), чтобы определить, разрешено ли повышение / понижение в любой момент. Эта функция возвращает битовый &lt;a href=&quot;qabstractspinbox#StepEnabledFlag-enum&quot;&gt;набор StepEnabled&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c5fe9394f857dce75051a23fbd4132ea702d2bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; provides a virtual &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;() function that is called whenever the user triggers a step. This function takes an integer value to signify how many steps were taken. E.g. Pressing &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key_Down&lt;/a&gt; will trigger a call to &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(-1).</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; предоставляет виртуальную &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;функцию stepBy&lt;/a&gt; (), которая вызывается всякий раз, когда пользователь запускает шаг. Эта функция принимает целочисленное значение, чтобы указать, сколько шагов было сделано. Например, нажатие &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key_Down&lt;/a&gt; вызовет вызов &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt; (-1).</target>
        </trans-unit>
        <trans-unit id="c2d37f0c4176a2ed70b0e1e4e3fc441bdc76887a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; takes ownership of the new &lt;a href=&quot;qabstractspinbox#lineEdit&quot;&gt;lineEdit&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; становится владельцем новой &lt;a href=&quot;qabstractspinbox#lineEdit&quot;&gt;строки&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee38ca8d8cde2fb035babce609a4067c3a04f58d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox#ButtonSymbols-enum&quot;&gt;QAbstractSpinBox::ButtonSymbols&lt;/a&gt; QStyleOptionSpinBox::buttonSymbols</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox#ButtonSymbols-enum&quot;&gt;QAbstractSpinBox :: ButtonSymbols&lt;/a&gt; QStyleOptionSpinBox :: buttonSymbols</target>
        </trans-unit>
        <trans-unit id="d743121d350d27df403095c05d9eb61523f21f04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox#StepEnabledFlag-enum&quot;&gt;QAbstractSpinBox::StepEnabled&lt;/a&gt; QStyleOptionSpinBox::stepEnabled</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox#StepEnabledFlag-enum&quot;&gt;QAbstractSpinBox :: StepEnabled&lt;/a&gt; QStyleOptionSpinBox :: stepEnabled</target>
        </trans-unit>
        <trans-unit id="014c9e0873e309a0e1b783cac6167e2c40a920ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox#text-prop&quot;&gt;text&lt;/a&gt;: The text that is displayed in the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox#text-prop&quot;&gt;text&lt;/a&gt; : текст, отображаемый в &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0737cc91f077746ffdfd116031c161ecd9fddc33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox#text-prop&quot;&gt;text&lt;/a&gt;: The text that is displayed in the QAbstractSpinBox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd0975c325dd33cac804ab071984d33a4d05ec01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox#wrapping-prop&quot;&gt;wrapping&lt;/a&gt;: Whether the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; wraps from the minimum value to the maximum value and vice versa.</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox#wrapping-prop&quot;&gt;wrapping&lt;/a&gt; : выполняет ли &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox &lt;/a&gt;перенос от минимального значения к максимальному и наоборот.</target>
        </trans-unit>
        <trans-unit id="1262b5557f2470f9a715a1a27d3ae0019e899ada" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractspinbox#wrapping-prop&quot;&gt;wrapping&lt;/a&gt;: Whether the QAbstractSpinBox wraps from the minimum value to the maximum value and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090e3762c4d9823f1873a34160b1e48d33786f67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; *QAbstractTransition::targetState() const</source>
          <target state="translated">&lt;a href=&quot;qabstractstate&quot;&gt;QAbstractState&lt;/a&gt; * QAbstractTransition :: targetState () const</target>
        </trans-unit>
        <trans-unit id="7cd8410be639282e788d6a21607d1ede8a45e9e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *QHistoryState::defaultState() const</source>
          <target state="translated">&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; * QHistoryState :: defaultState () const</target>
        </trans-unit>
        <trans-unit id="89d97d42edbfc14dc8c5748556b408d428afc34e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *QState::errorState() const</source>
          <target state="translated">&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; * QState :: errorState () const</target>
        </trans-unit>
        <trans-unit id="fc0286c30bf5b48034940b4fce2bdd361344c027" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *QState::initialState() const</source>
          <target state="translated">&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; * QState :: initialState () const</target>
        </trans-unit>
        <trans-unit id="7a03275603b174cde94b9a3af9bbe19b472dd84f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; provides a standard interface for models that represent their data as a two-dimensional array of items. It is not used directly, but must be subclassed.</source>
          <target state="translated">&lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; предоставляет стандартный интерфейс для моделей, которые представляют свои данные как двумерный массив элементов. Он не используется напрямую, но должен быть подклассом.</target>
        </trans-unit>
        <trans-unit id="9c5104f70c27dd38a91fe597fe2ff95b02d2197e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; *QTextDocument::documentLayout() const</source>
          <target state="translated">&lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; * QTextDocument :: documentLayout () const</target>
        </trans-unit>
        <trans-unit id="10c05b6504d1396bb38ce97c71ebb0e36bb114e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; *QHistoryState::defaultTransition() const</source>
          <target state="translated">&lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; * QHistoryState :: defaultTransition () const</target>
        </trans-unit>
        <trans-unit id="d6319fe8a06dee57744bcf9caca9650ab2004dab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; *QState::addTransition(&lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qabstracttransition&quot;&gt;QAbstractTransition&lt;/a&gt; * QState :: addTransition ( &lt;a href=&quot;qabstractstate#QAbstractState&quot;&gt;QAbstractState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c442de5d5555a176750c362b18282aa8e18aed57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstracttransition#TransitionType-enum&quot;&gt;QAbstractTransition::TransitionType&lt;/a&gt; QAbstractTransition::transitionType() const</source>
          <target state="translated">&lt;a href=&quot;qabstracttransition#TransitionType-enum&quot;&gt;QAbstractTransition :: TransitionType&lt;/a&gt; QAbstractTransition :: transitionType () const</target>
        </trans-unit>
        <trans-unit id="6cba8d5bac028f8957c87741958322ef4fb89963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractvideobuffer&quot;&gt;QAbstractVideoBuffer&lt;/a&gt; *QVideoFrame::buffer() const</source>
          <target state="translated">&lt;a href=&quot;qabstractvideobuffer&quot;&gt;QAbstractVideoBuffer&lt;/a&gt; * QVideoFrame :: buffer () const</target>
        </trans-unit>
        <trans-unit id="fab2ad314e4242130dde758d36c7766aaba88f02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractvideobuffer#HandleType-enum&quot;&gt;QAbstractVideoBuffer::HandleType&lt;/a&gt; QAbstractVideoBuffer::handleType() const</source>
          <target state="translated">&lt;a href=&quot;qabstractvideobuffer#HandleType-enum&quot;&gt;QAbstractVideoBuffer :: HandleType&lt;/a&gt; QAbstractVideoBuffer :: handleType () const</target>
        </trans-unit>
        <trans-unit id="e7f50700d2fc3ecf50bf919439c2c1cfe0548438" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractvideobuffer#HandleType-enum&quot;&gt;QAbstractVideoBuffer::HandleType&lt;/a&gt; QVideoFrame::handleType() const</source>
          <target state="translated">&lt;a href=&quot;qabstractvideobuffer#HandleType-enum&quot;&gt;QAbstractVideoBuffer :: HandleType&lt;/a&gt; QVideoFrame :: handleType () const</target>
        </trans-unit>
        <trans-unit id="50750cd4685969d2dd5778139d8d6a9c5d002a8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractvideobuffer#HandleType-enum&quot;&gt;QAbstractVideoBuffer::HandleType&lt;/a&gt; QVideoSurfaceFormat::handleType() const</source>
          <target state="translated">&lt;a href=&quot;qabstractvideobuffer#HandleType-enum&quot;&gt;QAbstractVideoBuffer :: HandleType&lt;/a&gt; QVideoSurfaceFormat :: handleType () const</target>
        </trans-unit>
        <trans-unit id="e154f0d033b99ea080b3705bb7a9202d66c0be5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer::MapMode&lt;/a&gt; QVideoFrame::mapMode() const</source>
          <target state="translated">&lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer :: MapMode&lt;/a&gt; QVideoFrame :: mapMode () const</target>
        </trans-unit>
        <trans-unit id="5f05cab714aa424398849f41cdb19048213da921" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; is meant to be subclassed. The subclasses are then registered to the QML engine, so they can be used as a QML type. The list of filters are assigned to a &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; type via its &lt;a href=&quot;qml-qtmultimedia-videooutput#filters-prop&quot;&gt;filters&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; предназначен для создания подклассов. Затем подклассы регистрируются в движке QML, поэтому их можно использовать как тип QML. Список фильтров назначается типу &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; через его свойство &lt;a href=&quot;qml-qtmultimedia-videooutput#filters-prop&quot;&gt;filters&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d39350c6e768b539f7da32bb80eca5188c5360a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; provides a convenient way for applications to run image processing, computer vision algorithms or any generic transformation or calculation on the output of a &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; type, regardless of the source (video or camera). By providing a simple interface it allows applications and third parties to easily develop QML types that provide image processing algorithms using popular frameworks like &lt;a href=&quot;http://opencv.org&quot;&gt;OpenCV&lt;/a&gt;. Due to the close integration with the final stages of the Qt Multimedia video pipeline, accelerated and possibly zero-copy solutions are feasible too: for instance, a plugin providing OpenCL-based algorithms can use OpenCL's OpenGL interop to use the OpenGL textures created by a hardware accelerated video decoder, without additional readbacks and copies.</source>
          <target state="translated">&lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; предоставляет приложениям удобный способ запуска обработки изображений, алгоритмов компьютерного зрения или любых общих преобразований или вычислений на выходе типа &lt;a href=&quot;qml-qtmultimedia-videooutput&quot;&gt;VideoOutput&lt;/a&gt; , независимо от источника (видео или камера). Предоставляя простой интерфейс, он позволяет приложениям и третьим сторонам легко разрабатывать типы QML, которые предоставляют алгоритмы обработки изображений с использованием популярных фреймворков, таких как &lt;a href=&quot;http://opencv.org&quot;&gt;OpenCV&lt;/a&gt; . Благодаря тесной интеграции с заключительными этапами видеоконвейера Qt Multimedia, возможны также ускоренные и, возможно, нулевые копии: например, плагин, обеспечивающий алгоритмы на основе OpenCL, может использовать взаимодействие OpenCL OpenGL для использования текстур OpenGL, созданных с помощью декодер видео с аппаратным ускорением, без дополнительных считываний и копий.</target>
        </trans-unit>
        <trans-unit id="a60c4e3a4afe6d1134099639c0cdda4683cc83cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractvideosurface#Error-enum&quot;&gt;QAbstractVideoSurface::Error&lt;/a&gt; QAbstractVideoSurface::error() const</source>
          <target state="translated">&lt;a href=&quot;qabstractvideosurface#Error-enum&quot;&gt;QAbstractVideoSurface :: Error&lt;/a&gt; QAbstractVideoSurface :: error () const</target>
        </trans-unit>
        <trans-unit id="5d8a92ffd87f2832d75038fb2bbf75f01bc8f7a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; bridges the gap between the arbitrary structure of the non-XML data to be queried and the well-defined structure of XML data understood by &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel устраняет&lt;/a&gt; разрыв между произвольной структурой запрашиваемых не-XML-данных и четко определенной структурой XML-данных, понятной &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="df67eea8569fc689c003ffd2bb4afe40c1339bca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; is an abstract base class that provides a callback interface for receiving an &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;XQuery sequence&lt;/a&gt;, usually the output of an &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, and transforming that sequence into a structure of your choosing, usually XML. Consider the example:</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; - это абстрактный базовый класс, который предоставляет интерфейс обратного вызова для получения &lt;a href=&quot;qabstractxmlreceiver#xquery-sequence&quot;&gt;последовательности XQuery&lt;/a&gt; , обычно &lt;a href=&quot;qxmlquery&quot;&gt;выходящей&lt;/a&gt; из QXmlQuery , и преобразования этой последовательности в структуру по вашему выбору, обычно XML. Рассмотрим пример:</target>
        </trans-unit>
        <trans-unit id="1aef3c692c4123734170ceb19a8fca2ba111be2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver#atomicValue&quot;&gt;atomicValue&lt;/a&gt;() is called for each</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver#atomicValue&quot;&gt;atomicValue&lt;/a&gt; () вызывается для каждого</target>
        </trans-unit>
        <trans-unit id="d7a77c01880bab83b319dacb6bb9b334c73b6db5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver#attribute&quot;&gt;attribute&lt;/a&gt;() is called for each</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver#attribute&quot;&gt;attribute&lt;/a&gt; () вызывается для каждого</target>
        </trans-unit>
        <trans-unit id="7ed0c25b1e817dceea702100fc88641e0bb2b0ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver#characters&quot;&gt;characters&lt;/a&gt;() is called for each</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver#characters&quot;&gt;characters&lt;/a&gt; () вызывается для каждого</target>
        </trans-unit>
        <trans-unit id="c239f5b4e7ab7df60d6af8bec6188a4611c76eab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver#comment&quot;&gt;comment&lt;/a&gt;() is called for each</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver#comment&quot;&gt;comment&lt;/a&gt; () вызывается для каждого</target>
        </trans-unit>
        <trans-unit id="1f882c0af435f17d8e493868f04ccae0a1e7bfb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver#namespaceBinding&quot;&gt;namespaceBinding&lt;/a&gt;() is called for each</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver#namespaceBinding&quot;&gt;namespaceBinding&lt;/a&gt; () вызывается для каждого</target>
        </trans-unit>
        <trans-unit id="1d73f2991231d6dd9ec6cd34b831d2fce74b5562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver#processingInstruction&quot;&gt;processingInstruction&lt;/a&gt;() is called for each</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver#processingInstruction&quot;&gt;processingInstruction&lt;/a&gt; () вызывается для каждого</target>
        </trans-unit>
        <trans-unit id="89c89970eb001f5188b9566a6a80a382dad6a9fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver#startDocument&quot;&gt;startDocument&lt;/a&gt;() and &lt;a href=&quot;qabstractxmlreceiver#endDocument&quot;&gt;endDocument&lt;/a&gt;() are called for each</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver#startDocument&quot;&gt;startDocument&lt;/a&gt; () и &lt;a href=&quot;qabstractxmlreceiver#endDocument&quot;&gt;endDocument&lt;/a&gt; () вызываются для каждого</target>
        </trans-unit>
        <trans-unit id="253abf400a4cb38e47da7b5f515d3e631aaf70fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qabstractxmlreceiver#startElement&quot;&gt;startElement&lt;/a&gt;() and &lt;a href=&quot;qabstractxmlreceiver#endElement&quot;&gt;endElement&lt;/a&gt;() are called for each</source>
          <target state="translated">&lt;a href=&quot;qabstractxmlreceiver#startElement&quot;&gt;startElement&lt;/a&gt; () и &lt;a href=&quot;qabstractxmlreceiver#endElement&quot;&gt;endElement&lt;/a&gt; () вызываются для каждого</target>
        </trans-unit>
        <trans-unit id="9e923cf387bb71f9de3f2e0c8ac7ca0b44e45a1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;, &lt;a href=&quot;qaltimeter&quot;&gt;QAltimeter&lt;/a&gt;, &lt;a href=&quot;qambientlightsensor&quot;&gt;QAmbientLightSensor&lt;/a&gt;, &lt;a href=&quot;qambienttemperaturesensor&quot;&gt;QAmbientTemperatureSensor&lt;/a&gt;, &lt;a href=&quot;qcompass&quot;&gt;QCompass&lt;/a&gt;, &lt;a href=&quot;qdistancesensor&quot;&gt;QDistanceSensor&lt;/a&gt;, &lt;a href=&quot;qgyroscope&quot;&gt;QGyroscope&lt;/a&gt;, &lt;a href=&quot;qholstersensor&quot;&gt;QHolsterSensor&lt;/a&gt;, &lt;a href=&quot;qhumiditysensor&quot;&gt;QHumiditySensor&lt;/a&gt;, &lt;a href=&quot;qirproximitysensor&quot;&gt;QIRProximitySensor&lt;/a&gt;, &lt;a href=&quot;qlidsensor&quot;&gt;QLidSensor&lt;/a&gt;, &lt;a href=&quot;qlightsensor&quot;&gt;QLightSensor&lt;/a&gt;, &lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt;, &lt;a href=&quot;qorientationsensor&quot;&gt;QOrientationSensor&lt;/a&gt;, &lt;a href=&quot;qpressuresensor&quot;&gt;QPressureSensor&lt;/a&gt;, &lt;a href=&quot;qproximitysensor&quot;&gt;QProximitySensor&lt;/a&gt;, &lt;a href=&quot;qrotationsensor&quot;&gt;QRotationSensor&lt;/a&gt;, &lt;a href=&quot;qtapsensor&quot;&gt;QTapSensor&lt;/a&gt;, and &lt;a href=&quot;qtiltsensor&quot;&gt;QTiltSensor&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt; , &lt;a href=&quot;qaltimeter&quot;&gt;QAltimeter&lt;/a&gt; , &lt;a href=&quot;qambientlightsensor&quot;&gt;QAmbientLightSensor&lt;/a&gt; , &lt;a href=&quot;qambienttemperaturesensor&quot;&gt;QAmbientTemperatureSensor&lt;/a&gt; , &lt;a href=&quot;qcompass&quot;&gt;QCompass&lt;/a&gt; , &lt;a href=&quot;qdistancesensor&quot;&gt;QDistanceSensor&lt;/a&gt; , &lt;a href=&quot;qgyroscope&quot;&gt;QGyroscope&lt;/a&gt; , QHolsterSensor , QHumiditySensor , QIRProximitySensor , QLidSensor , QLightSensor , QSensor , QSensor , &lt;a href=&quot;qholstersensor&quot;&gt;QSensor&lt;/a&gt; , &lt;a href=&quot;qhumiditysensor&quot;&gt;QSensor&lt;/a&gt; , &lt;a href=&quot;qirproximitysensor&quot;&gt;QSensor&lt;/a&gt; , &lt;a href=&quot;qlidsensor&quot;&gt;QSensor&lt;/a&gt; , &lt;a href=&quot;qlightsensor&quot;&gt;QPressorSensor&lt;/a&gt; , &lt;a href=&quot;qmagnetometer&quot;&gt;QSensor&lt;/a&gt; , &lt;a href=&quot;qorientationsensor&quot;&gt;QSensor&lt;/a&gt; , &lt;a href=&quot;qpressuresensor&quot;&gt;QPressor&lt;/a&gt; , &lt;a href=&quot;qproximitysensor&quot;&gt;QSensor&lt;/a&gt; , &lt;a href=&quot;qrotationsensor&quot;&gt;QSensor&lt;/a&gt; , &lt;a href=&quot;qtapsensor&quot;&gt;QSensor&lt;/a&gt; и &lt;a href=&quot;qtiltsensor&quot;&gt;QPressorSensor&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="552de771fd34f4b58decfe16584873bfe521c555" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccelerometerfilter&quot;&gt;QAccelerometerFilter&lt;/a&gt;, &lt;a href=&quot;qaltimeterfilter&quot;&gt;QAltimeterFilter&lt;/a&gt;, &lt;a href=&quot;qambientlightfilter&quot;&gt;QAmbientLightFilter&lt;/a&gt;, &lt;a href=&quot;qambienttemperaturefilter&quot;&gt;QAmbientTemperatureFilter&lt;/a&gt;, &lt;a href=&quot;qcompassfilter&quot;&gt;QCompassFilter&lt;/a&gt;, &lt;a href=&quot;qdistancefilter&quot;&gt;QDistanceFilter&lt;/a&gt;, &lt;a href=&quot;qgyroscopefilter&quot;&gt;QGyroscopeFilter&lt;/a&gt;, &lt;a href=&quot;qholsterfilter&quot;&gt;QHolsterFilter&lt;/a&gt;, &lt;a href=&quot;qhumidityfilter&quot;&gt;QHumidityFilter&lt;/a&gt;, &lt;a href=&quot;qirproximityfilter&quot;&gt;QIRProximityFilter&lt;/a&gt;, &lt;a href=&quot;qlidfilter&quot;&gt;QLidFilter&lt;/a&gt;, &lt;a href=&quot;qlightfilter&quot;&gt;QLightFilter&lt;/a&gt;, &lt;a href=&quot;qmagnetometerfilter&quot;&gt;QMagnetometerFilter&lt;/a&gt;, &lt;a href=&quot;qorientationfilter&quot;&gt;QOrientationFilter&lt;/a&gt;, &lt;a href=&quot;qpressurefilter&quot;&gt;QPressureFilter&lt;/a&gt;, &lt;a href=&quot;qproximityfilter&quot;&gt;QProximityFilter&lt;/a&gt;, &lt;a href=&quot;qrotationfilter&quot;&gt;QRotationFilter&lt;/a&gt;, &lt;a href=&quot;qtapfilter&quot;&gt;QTapFilter&lt;/a&gt;, and &lt;a href=&quot;qtiltfilter&quot;&gt;QTiltFilter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaccelerometerfilter&quot;&gt;QAccelerometerFilter&lt;/a&gt; , &lt;a href=&quot;qaltimeterfilter&quot;&gt;QAltimeterFilter&lt;/a&gt; , &lt;a href=&quot;qambientlightfilter&quot;&gt;QAmbientLightFilter&lt;/a&gt; , &lt;a href=&quot;qambienttemperaturefilter&quot;&gt;QAmbientTemperatureFilter&lt;/a&gt; , &lt;a href=&quot;qcompassfilter&quot;&gt;QCompassFilter&lt;/a&gt; , &lt;a href=&quot;qdistancefilter&quot;&gt;QDistanceFilter&lt;/a&gt; , &lt;a href=&quot;qgyroscopefilter&quot;&gt;QGyroscopeFilter&lt;/a&gt; , &lt;a href=&quot;qholsterfilter&quot;&gt;QHolsterFilter&lt;/a&gt; , &lt;a href=&quot;qhumidityfilter&quot;&gt;QHumidityFilter&lt;/a&gt; , &lt;a href=&quot;qirproximityfilter&quot;&gt;QIRProximityFilter&lt;/a&gt; , &lt;a href=&quot;qlidfilter&quot;&gt;QLidFilter&lt;/a&gt; , &lt;a href=&quot;qlightfilter&quot;&gt;QLightFilter&lt;/a&gt; , &lt;a href=&quot;qmagnetometerfilter&quot;&gt;QMagnetometerFilter&lt;/a&gt; , &lt;a href=&quot;qorientationfilter&quot;&gt;QOrientationFilter&lt;/a&gt; , &lt;a href=&quot;qpressurefilter&quot;&gt;QPressureFilter&lt;/a&gt; , &lt;a href=&quot;qproximityfilter&quot;&gt;QProximityFilter&lt;/a&gt; , &lt;a href=&quot;qrotationfilter&quot;&gt;QRotationFilter&lt;/a&gt; , &lt;a href=&quot;qtapfilter&quot;&gt;QTapFilter&lt;/a&gt; и &lt;a href=&quot;qtiltfilter&quot;&gt;QTiltFilter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9157c37bc22c15f5691427f7267859107ef895ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; *QAccelerometer::reading() const</source>
          <target state="translated">&lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; * QAccelerometer :: reading () const</target>
        </trans-unit>
        <trans-unit id="2d7fcb1121b29661def3616b1254c955046b0fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt;, &lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading&lt;/a&gt;, &lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading&lt;/a&gt;, &lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading&lt;/a&gt;, &lt;a href=&quot;qcompassreading&quot;&gt;QCompassReading&lt;/a&gt;, &lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading&lt;/a&gt;, &lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading&lt;/a&gt;, &lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading&lt;/a&gt;, &lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading&lt;/a&gt;, &lt;a href=&quot;qirproximityreading&quot;&gt;QIRProximityReading&lt;/a&gt;, &lt;a href=&quot;qlidreading&quot;&gt;QLidReading&lt;/a&gt;, &lt;a href=&quot;qlightreading&quot;&gt;QLightReading&lt;/a&gt;, &lt;a href=&quot;qmagnetometerreading&quot;&gt;QMagnetometerReading&lt;/a&gt;, &lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading&lt;/a&gt;, &lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading&lt;/a&gt;, &lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading&lt;/a&gt;, &lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt;, &lt;a href=&quot;qtapreading&quot;&gt;QTapReading&lt;/a&gt;, and &lt;a href=&quot;qtiltreading&quot;&gt;QTiltReading&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; , &lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading&lt;/a&gt; , &lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading&lt;/a&gt; , &lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading&lt;/a&gt; , &lt;a href=&quot;qcompassreading&quot;&gt;QCompassReading&lt;/a&gt; , &lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading&lt;/a&gt; , &lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading&lt;/a&gt; , &lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading&lt;/a&gt; , &lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading&lt;/a&gt; , &lt;a href=&quot;qirproximityreading&quot;&gt;QIRProximityReading&lt;/a&gt; , &lt;a href=&quot;qlidreading&quot;&gt;QLidReading&lt;/a&gt; , &lt;a href=&quot;qlightreading&quot;&gt;QLightReading&lt;/a&gt; , &lt;a href=&quot;qmagnetometerreading&quot;&gt;QMagnetometerReading&lt;/a&gt; , &lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading&lt;/a&gt; , &lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading&lt;/a&gt; , &lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading&lt;/a&gt; , &lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt; , &lt;a href=&quot;qtapreading&quot;&gt;QTapReading&lt;/a&gt; и &lt;a href=&quot;qtiltreading&quot;&gt;QTiltReading&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11f8a10fa83df759c7b425bad8c9ea1bd109122f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessible#Event-enum&quot;&gt;QAccessible::Event&lt;/a&gt; QAccessibleEvent::type() const</source>
          <target state="translated">&lt;a href=&quot;qaccessible#Event-enum&quot;&gt;QAccessible :: Event&lt;/a&gt; QAccessibleEvent :: type () const</target>
        </trans-unit>
        <trans-unit id="5da233e37189aa11691ea4bfaa522c09b6b9d2ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessible#RelationFlag-enum&quot;&gt;Relation&lt;/a&gt;: Describes the relationship between objects in the object hierarchy.</source>
          <target state="translated">&lt;a href=&quot;qaccessible#RelationFlag-enum&quot;&gt;Связь&lt;/a&gt; : описывает отношения между объектами в иерархии объектов.</target>
        </trans-unit>
        <trans-unit id="eeb08d7ac559f7a220ae35cc0be9b7cfa8f0b3a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessible#Role-enum&quot;&gt;Role&lt;/a&gt;: Describes the role the object fills in the user interface, e.g., if it is a window, a text edit, or a cell in a table.</source>
          <target state="translated">&lt;a href=&quot;qaccessible#Role-enum&quot;&gt;Роль&lt;/a&gt; : описывает роль, которую объект выполняет в пользовательском интерфейсе, например, если это окно, текстовый редактор или ячейка в таблице.</target>
        </trans-unit>
        <trans-unit id="06fdda3d04eebc92c2d6631d0f8c135bc2ced605" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;queryAccessibleInterface()&lt;/a&gt; returns accessible interfaces for &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s. All widgets in Qt provide interfaces; if you need interfaces to control the behavior of other &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclasses, you must implement the interfaces yourself, although the &lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt; convenience class implements parts of the functionality for you.</source>
          <target state="translated">&lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;queryAccessibleInterface ()&lt;/a&gt; возвращает доступные интерфейсы для &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; s. Все виджеты в Qt предоставляют интерфейсы; если вам нужны интерфейсы для управления поведением других подклассов &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; , вы должны реализовать интерфейсы самостоятельно, хотя &lt;a href=&quot;qaccessibleobject&quot;&gt;вспомогательный&lt;/a&gt; класс QAccessibleObject реализует за вас части функциональности.</target>
        </trans-unit>
        <trans-unit id="446c91c9f9fd1ab0afe0e00d2e59f241f8adf432" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessible-state&quot;&gt;QAccessible::State&lt;/a&gt; QAccessibleStateChangeEvent::changedStates() const</source>
          <target state="translated">&lt;a href=&quot;qaccessible-state&quot;&gt;QAccessible :: State&lt;/a&gt; QAccessibleStateChangeEvent :: changedStates () const</target>
        </trans-unit>
        <trans-unit id="2d0dbaa444dbc8045c40bc38381d5f29542f9e3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessible-state&quot;&gt;State&lt;/a&gt;: The objects can be in a number of different states. Examples of states are whether the object is disabled, if it has focus, or if it provides a pop-up menu.</source>
          <target state="translated">&lt;a href=&quot;qaccessible-state&quot;&gt;Состояние&lt;/a&gt; : объекты могут находиться в разных состояниях. Примеры состояний: отключен ли объект, находится ли он в фокусе или отображается всплывающее меню.</target>
        </trans-unit>
        <trans-unit id="9d0f5f894cfe492a1e1859b88a701bef20974045" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; *QAccessibleInterface::actionInterface()</source>
          <target state="translated">&lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; * QAccessibleInterface :: actionInterface ()</target>
        </trans-unit>
        <trans-unit id="10e32961c2b5cfc2ac11c2a3d2b47b5a535f0374" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleactioninterface#decreaseAction&quot;&gt;decreaseAction&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qaccessibleactioninterface#decreaseAction&quot;&gt;decreaseAction&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="45e98771138608b9cee2acfb7f2f1bd716874c04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleactioninterface#increaseAction&quot;&gt;increaseAction&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qaccessibleactioninterface#increaseAction&quot;&gt;increaseAction&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="df5ed891f394fb494f4f075f8fdb3c7b697a1b65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleactioninterface#pressAction&quot;&gt;pressAction&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qaccessibleactioninterface#pressAction&quot;&gt;pressAction&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="446b39a764bf0b933bd240aa2a6dc0f916a8c330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleactioninterface#setFocusAction&quot;&gt;setFocusAction&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qaccessibleactioninterface#setFocusAction&quot;&gt;setFocusAction&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="04943ed48b2b77bc767518ac130b28e76d1aa073" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleactioninterface#showMenuAction&quot;&gt;showMenuAction&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qaccessibleactioninterface#showMenuAction&quot;&gt;showMenuAction&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b4e8e491fefc28a414bc48f0c8bfad00aa68042f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleactioninterface#toggleAction&quot;&gt;toggleAction&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qaccessibleactioninterface#toggleAction&quot;&gt;toggleAction&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="c9fcda555a92cf8b404c0b3f449c247ff61ef793" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; supports several sub interfaces. In order to provide more information about some objects, their accessible representation should implement one or more of these interfaces.</source>
          <target state="translated">&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; поддерживает несколько субинтерфейсов . Чтобы предоставить больше информации о некоторых объектах, их доступное представление должно реализовывать один или несколько из этих интерфейсов.</target>
        </trans-unit>
        <trans-unit id="836507fa400412bbbfa16b504fd19ce29cba9314" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt; and &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaccessibleobject&quot;&gt;QAccessibleObject&lt;/a&gt; и &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1066a9a19bcc2d31cf9966f88eeaefeed28c813" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessiblestatechangeevent&quot;&gt;QAccessibleStateChangeEvent&lt;/a&gt;, &lt;a href=&quot;qaccessibletablemodelchangeevent&quot;&gt;QAccessibleTableModelChangeEvent&lt;/a&gt;, &lt;a href=&quot;qaccessibletextcursorevent&quot;&gt;QAccessibleTextCursorEvent&lt;/a&gt;, and &lt;a href=&quot;qaccessiblevaluechangeevent&quot;&gt;QAccessibleValueChangeEvent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaccessiblestatechangeevent&quot;&gt;QAccessibleStateChangeEvent&lt;/a&gt; , &lt;a href=&quot;qaccessibletablemodelchangeevent&quot;&gt;QAccessibleTableModelChangeEvent&lt;/a&gt; , &lt;a href=&quot;qaccessibletextcursorevent&quot;&gt;QAccessibleTextCursorEvent&lt;/a&gt; и &lt;a href=&quot;qaccessiblevaluechangeevent&quot;&gt;QAccessibleValueChangeEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="284f10950cd882fb04c91babb93bc9697048d0be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibletablecellinterface&quot;&gt;QAccessibleTableCellInterface&lt;/a&gt; *QAccessibleInterface::tableCellInterface()</source>
          <target state="translated">&lt;a href=&quot;qaccessibletablecellinterface&quot;&gt;QAccessibleTableCellInterface&lt;/a&gt; * QAccessibleInterface :: tableCellInterface ()</target>
        </trans-unit>
        <trans-unit id="791220b78b71b355c66f6234a7be71268258273a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibletableinterface&quot;&gt;QAccessibleTableInterface&lt;/a&gt; *QAccessibleInterface::tableInterface()</source>
          <target state="translated">&lt;a href=&quot;qaccessibletableinterface&quot;&gt;QAccessibleTableInterface&lt;/a&gt; * QAccessibleInterface :: tableInterface ()</target>
        </trans-unit>
        <trans-unit id="cce1e0ac920d4377eecb56ed1cec5bb760e9653b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibletablemodelchangeevent#ModelChangeType-enum&quot;&gt;QAccessibleTableModelChangeEvent::ModelChangeType&lt;/a&gt; QAccessibleTableModelChangeEvent::modelChangeType() const</source>
          <target state="translated">&lt;a href=&quot;qaccessibletablemodelchangeevent#ModelChangeType-enum&quot;&gt;QAccessibleTableModelChangeEvent :: ModelChangeType&lt;/a&gt; QAccessibleTableModelChangeEvent :: modelChangeType () const</target>
        </trans-unit>
        <trans-unit id="e9c5c330ee99670d85060554e03c70c874d3d1e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibletextinsertevent&quot;&gt;QAccessibleTextInsertEvent&lt;/a&gt;, &lt;a href=&quot;qaccessibletextremoveevent&quot;&gt;QAccessibleTextRemoveEvent&lt;/a&gt;, &lt;a href=&quot;qaccessibletextselectionevent&quot;&gt;QAccessibleTextSelectionEvent&lt;/a&gt;, and &lt;a href=&quot;qaccessibletextupdateevent&quot;&gt;QAccessibleTextUpdateEvent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaccessibletextinsertevent&quot;&gt;QAccessibleTextInsertEvent&lt;/a&gt; , &lt;a href=&quot;qaccessibletextremoveevent&quot;&gt;QAccessibleTextRemoveEvent&lt;/a&gt; , &lt;a href=&quot;qaccessibletextselectionevent&quot;&gt;QAccessibleTextSelectionEvent&lt;/a&gt; и &lt;a href=&quot;qaccessibletextupdateevent&quot;&gt;QAccessibleTextUpdateEvent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c2c3b3bf3722c68ad046fd6868c233275458576" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibletextinterface&quot;&gt;QAccessibleTextInterface&lt;/a&gt; *QAccessibleInterface::textInterface()</source>
          <target state="translated">&lt;a href=&quot;qaccessibletextinterface&quot;&gt;QAccessibleTextInterface&lt;/a&gt; * QAccessibleInterface :: textInterface ()</target>
        </trans-unit>
        <trans-unit id="2ef8821f98a2ec4bd8a78195f5d313ec9189da22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessibletextselectionevent&quot;&gt;QAccessibleTextSelectionEvent&lt;/a&gt; signals a change in the text selection of an object. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaccessibletextselectionevent&quot;&gt;QAccessibleTextSelectionEvent&lt;/a&gt; сигнализирует об изменении выделения текста в объекте. &lt;a href=&quot;#details&quot;&gt;Больше...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81c3f3ed63835e5f76f57ea4bfb4368bc7559f05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaccessiblevalueinterface&quot;&gt;QAccessibleValueInterface&lt;/a&gt; *QAccessibleInterface::valueInterface()</source>
          <target state="translated">&lt;a href=&quot;qaccessiblevalueinterface&quot;&gt;QAccessibleValueInterface&lt;/a&gt; * QAccessibleInterface :: valueInterface ()</target>
        </trans-unit>
        <trans-unit id="80170098a6414c14bbf2ed2ca83d844941c9de8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QActionEvent::action() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QActionEvent :: action () const</target>
        </trans-unit>
        <trans-unit id="c1e329eecee3bd8fb2912ec739afabb2916c1417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QActionEvent::before() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QActionEvent :: before () const</target>
        </trans-unit>
        <trans-unit id="701e00ddafa1b973ec9799661e085aa04cad7ce2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QActionGroup::addAction(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QActionGroup :: addAction ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fdfb63afa7f3099d08dfa7101e8046009c464ece" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QActionGroup::addAction(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QActionGroup :: addAction (const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fb665b3cae851b80ae1139298f7fbd3fc2cafef6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QActionGroup::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QActionGroup :: addAction (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="79c57a113f6b7aa3d54979c9c961722d4bc79cae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QActionGroup::checkedAction() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QActionGroup :: checkedAction () const</target>
        </trans-unit>
        <trans-unit id="23a92f900a7accbc831fa15620df10ac7d30f271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QDockWidget::toggleViewAction() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QDockWidget :: toggleViewAction () const</target>
        </trans-unit>
        <trans-unit id="a8d463f875baa44c7b975899b3e85576d1eaf97a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QLineEdit::addAction(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QLineEdit :: addAction (const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8589e64b4c7b02557efae3ed6280c3c41507ed2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::actionAt(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: actionAt (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="973aa5a2a6de530d1723a84d72a7009fadba1ce1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::activeAction() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: activeAction () const</target>
        </trans-unit>
        <trans-unit id="0e88102a3a7bb010a315faf48f6cc072ac240d13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addAction(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: addAction (const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a238ef204dcc3ad1890bb582fae3337d26b303eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: addAction (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4c5a16da6a88f0a61308a463b64cd8379b06190a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addMenu(&lt;a href=&quot;qmenu#QMenu&quot;&gt;QMenu&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: addMenu ( &lt;a href=&quot;qmenu#QMenu&quot;&gt;QMenu&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5b405fe651cee009b6234078f33730c75e85dfe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addSection(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: addSection (const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d354600c35c4079a47ef13eacb6d04b16a67e5c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addSection(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: addSection (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc12bd85965932f4af4aede0500f04903551347f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::addSeparator()</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: addSeparator ()</target>
        </trans-unit>
        <trans-unit id="c53377740a2347466fa1a47fab4971f1d2ea843b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::defaultAction() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: defaultAction () const</target>
        </trans-unit>
        <trans-unit id="1ebe9002b1524b21514791f3725b9806dbdc5254" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::exec()</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: exec ()</target>
        </trans-unit>
        <trans-unit id="2dcc513db5a0837c2189349dbe4b3eb6b7e85271" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::exec(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: exec (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="aea888d86376166a80ca2f6e0ee2a71a13129944" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::insertMenu(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: insertMenu ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f3f4d86d22778f80aed089048b5b32f750a660c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::insertSection(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: insertSection ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="17b16805b80e8d1ed19484669d79804c92bca222" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::insertSeparator(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: insertSeparator ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="36ffa64156e132fbc6c22e5cde471c655f41ac3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenu::menuAction() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenu :: menuAction () const</target>
        </trans-unit>
        <trans-unit id="5c2ca17587f848db0da55409360af60b526615ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::actionAt(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: actionAt (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2d36af21184bb74235de6bc30fe7bc11b1b77130" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::activeAction() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: activeAction () const</target>
        </trans-unit>
        <trans-unit id="13270a03df1360203718124a69e55c7b249aeba3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: addAction (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="174d6a2d33691af85691f8c190cbc774fb2ba541" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::addMenu(&lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: addMenu ( &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6dc663f996a96c30931532a5de184f81682d8352" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::addSeparator()</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: addSeparator ()</target>
        </trans-unit>
        <trans-unit id="8c17fa36c149ed51d26336e435a9331227e80df8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::insertMenu(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: insertMenu ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c1eac5a36baae945134367cb13e3240c862a2a25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QMenuBar::insertSeparator(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QMenuBar :: insertSeparator ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b2ba5b18758d68a95ef0fd0c0e5b6a26bd4eeef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::actionAt(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: actionAt (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4443a888157d81c70e862b689a2c39892bfed727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::actionAt(int</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: actionAt (int</target>
        </trans-unit>
        <trans-unit id="aa2a73522b0308d15eecdaccc5dd65d3326b1cd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::addAction(const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: addAction (const &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="18fec0fdb64d8d0c05545f6fd015a2d61fe92bc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::addAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: addAction (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c3a21aa6047db4b203ce691d73dfc62af346d2da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::addSeparator()</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: addSeparator ()</target>
        </trans-unit>
        <trans-unit id="ea210c6cd131db97c23558c87e9beb72410cf358" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::addWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: addWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="35ba93824752bf3d298cacd3a789e08bd7c2055b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::insertSeparator(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: insertSeparator ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ca50e2e782cecd6c58b147e4003ba152c9840c0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::insertWidget(&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: insertWidget ( &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ea69025be7ebb7dad8ec463df29b67df278eaedc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolBar::toggleViewAction() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolBar :: toggleViewAction () const</target>
        </trans-unit>
        <trans-unit id="f1985d7b7c9ca01a33317be9916a2fb1ec8efc86" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QToolButton::defaultAction() const</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QToolButton :: defaultAction () const</target>
        </trans-unit>
        <trans-unit id="b4d3c1e80c68acc9257f28cf60df05644f3f661d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QUndoGroup::createRedoAction(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QUndoGroup :: createRedoAction ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c476e4c938b114385f3d0b781658996cc6b2309a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QUndoGroup::createUndoAction(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QUndoGroup :: createUndoAction ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="12cf1f9f746866c2365c5ec28bdb386fe2713ce1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QUndoStack::createRedoAction(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QUndoStack :: createRedoAction ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6262ec1a1d84179cd2cf086f20200ec70d1300c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QUndoStack::createUndoAction(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QUndoStack :: createUndoAction ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9a00182f5a38ef7cdbbd341234be52622e3d61bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QWebEnginePage::action(&lt;a href=&quot;qwebenginepage#WebAction-enum&quot;&gt;QWebEnginePage::WebAction&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QWebEnginePage :: action ( &lt;a href=&quot;qwebenginepage#WebAction-enum&quot;&gt;QWebEnginePage :: WebAction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74cd1d3955d1827aa63c3b65f170cc7c9e73fbfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QWebEngineView::pageAction(&lt;a href=&quot;qwebenginepage#WebAction-enum&quot;&gt;QWebEnginePage::WebAction&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QWebEngineView :: pageAction ( &lt;a href=&quot;qwebenginepage#WebAction-enum&quot;&gt;QWebEnginePage :: WebAction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="062c7ef55c0a09d1972ea4ff2ca625ef10a24117" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qactionevent&quot;&gt;QActionEvent&lt;/a&gt;, &lt;a href=&quot;qchildevent&quot;&gt;QChildEvent&lt;/a&gt;, &lt;a href=&quot;qcloseevent&quot;&gt;QCloseEvent&lt;/a&gt;, &lt;a href=&quot;qdragleaveevent&quot;&gt;QDragLeaveEvent&lt;/a&gt;, &lt;a href=&quot;qdropevent&quot;&gt;QDropEvent&lt;/a&gt;, &lt;a href=&quot;qdynamicpropertychangeevent&quot;&gt;QDynamicPropertyChangeEvent&lt;/a&gt;, &lt;a href=&quot;qenterevent&quot;&gt;QEnterEvent&lt;/a&gt;, &lt;a href=&quot;qexposeevent&quot;&gt;QExposeEvent&lt;/a&gt;, &lt;a href=&quot;qfileopenevent&quot;&gt;QFileOpenEvent&lt;/a&gt;, &lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;, &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;, &lt;a href=&quot;qgraphicssceneevent&quot;&gt;QGraphicsSceneEvent&lt;/a&gt;, &lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt;, &lt;a href=&quot;qhideevent&quot;&gt;QHideEvent&lt;/a&gt;, &lt;a href=&quot;qicondragevent&quot;&gt;QIconDragEvent&lt;/a&gt;, &lt;a href=&quot;qinputevent&quot;&gt;QInputEvent&lt;/a&gt;, &lt;a href=&quot;qinputmethodevent&quot;&gt;QInputMethodEvent&lt;/a&gt;, &lt;a href=&quot;qinputmethodqueryevent&quot;&gt;QInputMethodQueryEvent&lt;/a&gt;, &lt;a href=&quot;qmoveevent&quot;&gt;QMoveEvent&lt;/a&gt;, &lt;a href=&quot;qpaintevent&quot;&gt;QPaintEvent&lt;/a&gt;, &lt;a href=&quot;qplatformsurfaceevent&quot;&gt;QPlatformSurfaceEvent&lt;/a&gt;, &lt;a href=&quot;qresizeevent&quot;&gt;QResizeEvent&lt;/a&gt;, &lt;a href=&quot;qscrollevent&quot;&gt;QScrollEvent&lt;/a&gt;, &lt;a href=&quot;qscrollprepareevent&quot;&gt;QScrollPrepareEvent&lt;/a&gt;, &lt;a href=&quot;qshortcutevent&quot;&gt;QShortcutEvent&lt;/a&gt;, &lt;a href=&quot;qshowevent&quot;&gt;QShowEvent&lt;/a&gt;, &lt;a href=&quot;qstatemachine-signalevent&quot;&gt;QStateMachine::SignalEvent&lt;/a&gt;, &lt;a href=&quot;qstatemachine-wrappedevent&quot;&gt;QStateMachine::WrappedEvent&lt;/a&gt;, &lt;a href=&quot;qstatustipevent&quot;&gt;QStatusTipEvent&lt;/a&gt;, &lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent&lt;/a&gt;, &lt;a href=&quot;qwhatsthisclickedevent&quot;&gt;QWhatsThisClickedEvent&lt;/a&gt;, and &lt;a href=&quot;qwindowstatechangeevent&quot;&gt;QWindowStateChangeEvent&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc001fe3ff9f113b6deb5357e0eb09a0d00e1ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qactionevent&quot;&gt;QActionEvent&lt;/a&gt;, &lt;a href=&quot;qchildevent&quot;&gt;QChildEvent&lt;/a&gt;, &lt;a href=&quot;qcloseevent&quot;&gt;QCloseEvent&lt;/a&gt;, &lt;a href=&quot;qdragleaveevent&quot;&gt;QDragLeaveEvent&lt;/a&gt;, &lt;a href=&quot;qdropevent&quot;&gt;QDropEvent&lt;/a&gt;, &lt;a href=&quot;qdynamicpropertychangeevent&quot;&gt;QDynamicPropertyChangeEvent&lt;/a&gt;, &lt;a href=&quot;qexposeevent&quot;&gt;QExposeEvent&lt;/a&gt;, &lt;a href=&quot;qfileopenevent&quot;&gt;QFileOpenEvent&lt;/a&gt;, &lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;, &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;, &lt;a href=&quot;qgraphicssceneevent&quot;&gt;QGraphicsSceneEvent&lt;/a&gt;, &lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt;, &lt;a href=&quot;qhideevent&quot;&gt;QHideEvent&lt;/a&gt;, &lt;a href=&quot;qicondragevent&quot;&gt;QIconDragEvent&lt;/a&gt;, &lt;a href=&quot;qinputevent&quot;&gt;QInputEvent&lt;/a&gt;, &lt;a href=&quot;qinputmethodevent&quot;&gt;QInputMethodEvent&lt;/a&gt;, &lt;a href=&quot;qinputmethodqueryevent&quot;&gt;QInputMethodQueryEvent&lt;/a&gt;, &lt;a href=&quot;qmoveevent&quot;&gt;QMoveEvent&lt;/a&gt;, &lt;a href=&quot;qpaintevent&quot;&gt;QPaintEvent&lt;/a&gt;, &lt;a href=&quot;qplatformsurfaceevent&quot;&gt;QPlatformSurfaceEvent&lt;/a&gt;, &lt;a href=&quot;qresizeevent&quot;&gt;QResizeEvent&lt;/a&gt;, &lt;a href=&quot;qscrollevent&quot;&gt;QScrollEvent&lt;/a&gt;, &lt;a href=&quot;qscrollprepareevent&quot;&gt;QScrollPrepareEvent&lt;/a&gt;, &lt;a href=&quot;qshortcutevent&quot;&gt;QShortcutEvent&lt;/a&gt;, &lt;a href=&quot;qshowevent&quot;&gt;QShowEvent&lt;/a&gt;, &lt;a href=&quot;qstatustipevent&quot;&gt;QStatusTipEvent&lt;/a&gt;, &lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent&lt;/a&gt;, &lt;a href=&quot;qwhatsthisclickedevent&quot;&gt;QWhatsThisClickedEvent&lt;/a&gt;, and &lt;a href=&quot;qwindowstatechangeevent&quot;&gt;QWindowStateChangeEvent&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f8bf642134e33209274210e894cd53a8d0d1f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qactiongroup&quot;&gt;QActionGroup&lt;/a&gt; *QAction::actionGroup() const</source>
          <target state="translated">&lt;a href=&quot;qactiongroup&quot;&gt;QActionGroup&lt;/a&gt; * QAction :: actionGroup () const</target>
        </trans-unit>
        <trans-unit id="8681f0e0f82f020bac00a6f9072624337727e053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading&lt;/a&gt; *QAltimeter::reading() const</source>
          <target state="translated">&lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading&lt;/a&gt; * QAltimeter :: reading () const</target>
        </trans-unit>
        <trans-unit id="74d00fa33e78390805c3030440269852c1b48d77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading&lt;/a&gt; *QAmbientLightSensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading&lt;/a&gt; * QAmbientLightSensor :: reading () const</target>
        </trans-unit>
        <trans-unit id="69a2026d42a91a63c5e06d2dbef902aace65910d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading&lt;/a&gt; *QAmbientTemperatureSensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading&lt;/a&gt; * QAmbientTemperatureSensor :: reading () const</target>
        </trans-unit>
        <trans-unit id="e62e0f9abdff14885045c5386c0a1116f7ec17e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt; QAndroidParcel::readBinder() const</source>
          <target state="translated">&lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt; QAndroidParcel :: readBinder () const</target>
        </trans-unit>
        <trans-unit id="2619a01ad080503a866b6e203078fd8708d21807" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidBinder::handle() const</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidBinder :: handle () const</target>
        </trans-unit>
        <trans-unit id="2453c25353635c3a513d58bad855795a0551ff34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidIntent::handle() const</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidIntent :: handle () const</target>
        </trans-unit>
        <trans-unit id="aaea56b228782a062bd951b456a0ae2f98e1fb8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidParcel::handle() const</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidParcel :: handle () const</target>
        </trans-unit>
        <trans-unit id="cdfa13bf6a0c216f5d86679fad999f7722b28b2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidServiceConnection::handle() const</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidServiceConnection :: handle () const</target>
        </trans-unit>
        <trans-unit id="ce44262d6472572c34ffd7e81f149fb94f2dd21a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QtAndroid::androidActivity()</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QtAndroid :: androidActivity ()</target>
        </trans-unit>
        <trans-unit id="6126b4f0bdd8c771879013f9935275377aaa856f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QtAndroid::androidContext()</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QtAndroid :: androidContext ()</target>
        </trans-unit>
        <trans-unit id="e331805c0a243d60b6757c874fbe70c8176ec682" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QtAndroid::androidService()</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject&quot;&gt;QAndroidJniObject&lt;/a&gt; QtAndroid :: androidService ()</target>
        </trans-unit>
        <trans-unit id="dbb40b8e8052bec995c2ab6bd74cda0f81031f99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; &amp;amp;QAndroidJniObject::operator=(T</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; &amp;amp; QAndroidJniObject :: operator = (T</target>
        </trans-unit>
        <trans-unit id="e62260adee2b030cffdbcefc28f95481094a0637" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject::callObjectMethod(const char *</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject :: callObjectMethod (const char *</target>
        </trans-unit>
        <trans-unit id="3de9798ff60cacc7141a2288740e0e6bc736d856" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject::getObjectField(const char *</source>
          <target state="translated">&lt;a href=&quot;qandroidjniobject#QAndroidJniObject&quot;&gt;QAndroidJniObject&lt;/a&gt; QAndroidJniObject :: getObjectField (const char *</target>
        </trans-unit>
        <trans-unit id="346ec670b9a2e172e53167b8f5c7b13f767b4ac1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; *QAbstractAnimation::group() const</source>
          <target state="translated">&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; * QAbstractAnimation :: group () const</target>
        </trans-unit>
        <trans-unit id="10c31855974515a3b34cd0a637d352d01eb3d2e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; provides methods for adding and retrieving animations. Besides that, you can remove animations by calling &lt;a href=&quot;qanimationgroup#removeAnimation&quot;&gt;removeAnimation&lt;/a&gt;(), and clear the animation group by calling &lt;a href=&quot;qanimationgroup#clear&quot;&gt;clear&lt;/a&gt;(). You may keep track of changes in the group's animations by listening to &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ChildAdded&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ChildRemoved&lt;/a&gt; events.</source>
          <target state="translated">&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; предоставляет методы для добавления и получения анимации. Кроме того, вы можете удалить анимацию, вызвав &lt;a href=&quot;qanimationgroup#removeAnimation&quot;&gt;removeAnimation&lt;/a&gt; (), и очистить группу анимации, вызвав &lt;a href=&quot;qanimationgroup#clear&quot;&gt;clear&lt;/a&gt; (). Вы можете отслеживать изменения в анимации группы, слушая &lt;a href=&quot;qevent#Type-enum&quot;&gt;события QEvent :: ChildAdded&lt;/a&gt; и &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: ChildRemoved&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55301d56e9eaa3e74ec5477430eb2b94473bd642" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; takes ownership of the animations it manages, and ensures that they are deleted when the animation group is deleted.</source>
          <target state="translated">&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; становится владельцем управляемых им анимаций и обеспечивает их удаление при удалении группы анимации.</target>
        </trans-unit>
        <trans-unit id="e705340dab2e663295935e389b161520f012ee74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt;, &lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimation&lt;/a&gt;, and &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; , &lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimation&lt;/a&gt; и &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fddfe2bcc64b02310eba111f440d3d6e40e8c8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; provides this functionality as a slot.</source>
          <target state="translated">&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; предоставляет эту функциональность как слот.</target>
        </trans-unit>
        <trans-unit id="6d5805c2265565366a62f6aa6c79c73abc45ec73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; specializes &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; with some functionality needed for &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;-based applications. It handles widget specific initialization, finalization.</source>
          <target state="translated">&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; специализируется на &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; с некоторыми функциями, необходимыми для приложений на основе &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; . Он обрабатывает специфическую инициализацию и завершение виджета.</target>
        </trans-unit>
        <trans-unit id="8450e1fd48d7415025e9dcf4e87b8904183aace3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;'s main areas of responsibility are:</source>
          <target state="translated">&lt;a href=&quot;qapplication&quot;&gt;&lt;/a&gt;Основные области ответственности QApplication :</target>
        </trans-unit>
        <trans-unit id="5fdc534fc6073edbfb90496cfc1966a92ca325fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication#allWidgets&quot;&gt;allWidgets&lt;/a&gt;(), &lt;a href=&quot;qapplication#topLevelWidgets&quot;&gt;topLevelWidgets&lt;/a&gt;(), &lt;a href=&quot;qapplication#activePopupWidget&quot;&gt;activePopupWidget&lt;/a&gt;(), &lt;a href=&quot;qapplication#activeModalWidget&quot;&gt;activeModalWidget&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#clipboard&quot;&gt;clipboard&lt;/a&gt;(), &lt;a href=&quot;qapplication#focusWidget&quot;&gt;focusWidget&lt;/a&gt;(), &lt;a href=&quot;qapplication#activeWindow&quot;&gt;activeWindow&lt;/a&gt;(), &lt;a href=&quot;qapplication#widgetAt&quot;&gt;widgetAt&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a939e0faf8c2296b0d46e193309c86d7f434c20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication#allWidgets&quot;&gt;allWidgets&lt;/a&gt;(), &lt;a href=&quot;qapplication#topLevelWidgets&quot;&gt;topLevelWidgets&lt;/a&gt;(), &lt;a href=&quot;qapplication#desktop&quot;&gt;desktop&lt;/a&gt;(), &lt;a href=&quot;qapplication#activePopupWidget&quot;&gt;activePopupWidget&lt;/a&gt;(), &lt;a href=&quot;qapplication#activeModalWidget&quot;&gt;activeModalWidget&lt;/a&gt;(), &lt;a href=&quot;qguiapplication#clipboard&quot;&gt;clipboard&lt;/a&gt;(), &lt;a href=&quot;qapplication#focusWidget&quot;&gt;focusWidget&lt;/a&gt;(), &lt;a href=&quot;qapplication#activeWindow&quot;&gt;activeWindow&lt;/a&gt;(), &lt;a href=&quot;qapplication#widgetAt&quot;&gt;widgetAt&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qapplication#allWidgets&quot;&gt;allWidgets&lt;/a&gt; (), &lt;a href=&quot;qapplication#topLevelWidgets&quot;&gt;topLevelWidgets&lt;/a&gt; (), &lt;a href=&quot;qapplication#desktop&quot;&gt;desktop&lt;/a&gt; (), &lt;a href=&quot;qapplication#activePopupWidget&quot;&gt;activePopupWidget&lt;/a&gt; (), &lt;a href=&quot;qapplication#activeModalWidget&quot;&gt;activeModalWidget&lt;/a&gt; (), &lt;a href=&quot;qguiapplication#clipboard&quot;&gt;clipboard&lt;/a&gt; (), &lt;a href=&quot;qapplication#focusWidget&quot;&gt;focusWidget&lt;/a&gt; (), &lt;a href=&quot;qapplication#activeWindow&quot;&gt;activeWindow&lt;/a&gt; (), &lt;a href=&quot;qapplication#widgetAt&quot;&gt;widgetAt&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="847d0fd64fcb4abe6259514809f3acfe582667bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication#closeAllWindows&quot;&gt;closeAllWindows&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#startingUp&quot;&gt;startingUp&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#closingDown&quot;&gt;closingDown&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qapplication#closeAllWindows&quot;&gt;closeAllWindows&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#startingUp&quot;&gt;startingUp&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#closingDown&quot;&gt;closingDown&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="80e7ab57158f313dbb37dfa12afc588079fb01f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication#exec&quot;&gt;exec&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#exit&quot;&gt;exit&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#quit&quot;&gt;quit&lt;/a&gt;(). &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;sendEvent&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;postEvent&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#sendPostedEvents&quot;&gt;sendPostedEvents&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#removePostedEvents&quot;&gt;removePostedEvents&lt;/a&gt;(), &lt;a href=&quot;qapplication#notify&quot;&gt;notify&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a76ef2a2c1727ffe245b70bca5e551fe2cb527" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication#exec&quot;&gt;exec&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#exit&quot;&gt;exit&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#quit&quot;&gt;quit&lt;/a&gt;(). &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;sendEvent&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;postEvent&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#sendPostedEvents&quot;&gt;sendPostedEvents&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#removePostedEvents&quot;&gt;removePostedEvents&lt;/a&gt;(), hasPendingEvents(), &lt;a href=&quot;qapplication#notify&quot;&gt;notify&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qapplication#exec&quot;&gt;exec&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#exit&quot;&gt;exit&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#quit&quot;&gt;quit&lt;/a&gt; (). &lt;a href=&quot;qcoreapplication#sendEvent&quot;&gt;SendEvent&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;postEvent&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#sendPostedEvents&quot;&gt;sendPostedEvents&lt;/a&gt; (), &lt;a href=&quot;qcoreapplication#removePostedEvents&quot;&gt;removePostedEvents&lt;/a&gt; (), hasPendingEvents (), &lt;a href=&quot;qapplication#notify&quot;&gt;уведомляет&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="daf6dcdcd669cbd6b4ff904e96e74f4284ac4713" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qapplication#style&quot;&gt;style&lt;/a&gt;(), &lt;a href=&quot;qapplication#setStyle&quot;&gt;setStyle&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qapplication#style&quot;&gt;стиль&lt;/a&gt; (), &lt;a href=&quot;qapplication#setStyle&quot;&gt;setStyle&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="64c67092c25b09dd93c80eec0559fd9a9e721d11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qarealegendmarker&quot;&gt;QAreaLegendMarker&lt;/a&gt;, &lt;a href=&quot;qbarlegendmarker&quot;&gt;QBarLegendMarker&lt;/a&gt;, &lt;a href=&quot;qboxplotlegendmarker&quot;&gt;QBoxPlotLegendMarker&lt;/a&gt;, &lt;a href=&quot;qcandlesticklegendmarker&quot;&gt;QCandlestickLegendMarker&lt;/a&gt;, &lt;a href=&quot;qpielegendmarker&quot;&gt;QPieLegendMarker&lt;/a&gt;, and &lt;a href=&quot;qxylegendmarker&quot;&gt;QXYLegendMarker&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qarealegendmarker&quot;&gt;QAreaLegendMarker&lt;/a&gt; , &lt;a href=&quot;qbarlegendmarker&quot;&gt;QBarLegendMarker&lt;/a&gt; , &lt;a href=&quot;qboxplotlegendmarker&quot;&gt;QBoxPlotLegendMarker&lt;/a&gt; , &lt;a href=&quot;qcandlesticklegendmarker&quot;&gt;QCandlestickLegendMarker&lt;/a&gt; , &lt;a href=&quot;qpielegendmarker&quot;&gt;QPieLegendMarker&lt;/a&gt; и &lt;a href=&quot;qxylegendmarker&quot;&gt;QXYLegendMarker&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8491ceed52f216a48b33ea627d502440e67593c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; supports the following format tags:</source>
          <target state="translated">&lt;a href=&quot;qareaseries&quot;&gt;QAreaSeries&lt;/a&gt; поддерживает следующие теги формата:</target>
        </trans-unit>
        <trans-unit id="08290e5ca4c845ab5093b36eca14d58287d1bc14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qassociativeiterable&quot;&gt;QAssociativeIterable&lt;/a&gt; and &lt;a href=&quot;qsequentialiterable&quot;&gt;QSequentialIterable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7174df74067b9a92bd59df10aaeb3b64390af0ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qassociativeiterable-const-iterator&quot;&gt;QAssociativeIterable::const_iterator&lt;/a&gt; QAssociativeIterable::begin() const</source>
          <target state="translated">&lt;a href=&quot;qassociativeiterable-const-iterator&quot;&gt;QAssociativeIterable :: const_iterator&lt;/a&gt; QAssociativeIterable :: begin () const</target>
        </trans-unit>
        <trans-unit id="eb1f9bb2727d684bb7d49162240b9ea825ff606b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qassociativeiterable-const-iterator&quot;&gt;QAssociativeIterable::const_iterator&lt;/a&gt; QAssociativeIterable::end() const</source>
          <target state="translated">&lt;a href=&quot;qassociativeiterable-const-iterator&quot;&gt;QAssociativeIterable :: const_iterator&lt;/a&gt; QAssociativeIterable :: end () const</target>
        </trans-unit>
        <trans-unit id="207fa66fb991dff49b358207eef820be0a1b87b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qassociativeiterable-const-iterator&quot;&gt;QAssociativeIterable::const_iterator&lt;/a&gt; QAssociativeIterable::find(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qassociativeiterable-const-iterator&quot;&gt;QAssociativeIterable :: const_iterator&lt;/a&gt; QAssociativeIterable :: find (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9df5e7f6e3a0f4fe4c0bf862bdeba31e691859ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; provides several implementations of the atomic test-and-set, fetch-and-store, and fetch-and-add functions. Each implementation defines a memory ordering semantic that describes how memory accesses surrounding the atomic instruction are executed by the processor. Since many modern architectures allow out-of-order execution and memory ordering, using the correct semantic is necessary to ensure that your application functions properly on all processors.</source>
          <target state="translated">&lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; предоставляет несколько реализаций атомарных функций test-and-set, fetch-and-store и fetch-and-add. Каждая реализация определяет семантику упорядочения памяти, которая описывает, как доступ к памяти, окружающий атомарную инструкцию, выполняется процессором. Поскольку многие современные архитектуры допускают выполнение вне очереди и упорядочение памяти, использование правильной семантики необходимо для обеспечения правильной работы вашего приложения на всех процессорах.</target>
        </trans-unit>
        <trans-unit id="17e5ec6a89d4c92894cdb359338418593a592750" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicinteger#QAtomicInteger&quot;&gt;QAtomicInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QAtomicInteger::operator=(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb06a0295ee3c3eef7e9973352e6c996ea5dc96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicinteger#QAtomicInteger&quot;&gt;QAtomicInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QAtomicInteger::operator=(const &lt;a href=&quot;qatomicinteger#QAtomicInteger&quot;&gt;QAtomicInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c642b2bb4795af8ec6b4e8f15687220489b7594" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicinteger#memory-ordering&quot;&gt;memory ordering&lt;/a&gt; semantics, leaving the compiler and processor to freely reorder memory accesses.</source>
          <target state="translated">&lt;a href=&quot;qatomicinteger#memory-ordering&quot;&gt;&lt;/a&gt;семантика упорядочивания памяти , позволяющая компилятору и процессору свободно изменять порядок обращений к памяти.</target>
        </trans-unit>
        <trans-unit id="7c84deecc2dbce8ec5c8d9ef896054b4c586cd6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicinteger#memory-ordering&quot;&gt;memory ordering&lt;/a&gt; semantics, which ensures that memory access before and after the atomic operation (in program order) may not be re-ordered.</source>
          <target state="translated">&lt;a href=&quot;qatomicinteger#memory-ordering&quot;&gt;&lt;/a&gt;Семантика упорядочения памяти , которая гарантирует, что доступ к памяти до и после атомарной операции (в программном порядке) не может быть переупорядочен.</target>
        </trans-unit>
        <trans-unit id="6bed2414f1d3a13990f60ecb3d16c063fb51d962" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicinteger#memory-ordering&quot;&gt;memory ordering&lt;/a&gt; semantics, which ensures that memory access before the atomic operation (in program order) may not be re-ordered after the atomic operation.</source>
          <target state="translated">&lt;a href=&quot;qatomicinteger#memory-ordering&quot;&gt;&lt;/a&gt;Семантика упорядочивания памяти , которая гарантирует, что доступ к памяти до атомарной операции (в программном порядке) не может быть переупорядочен после атомарной операции.</target>
        </trans-unit>
        <trans-unit id="b8681129c7eba99b7fc8028c639449dfc9c047f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicinteger#memory-ordering&quot;&gt;memory ordering&lt;/a&gt; semantics, which ensures that memory access following the atomic operation (in program order) may not be re-ordered before the atomic operation.</source>
          <target state="translated">&lt;a href=&quot;qatomicinteger#memory-ordering&quot;&gt;&lt;/a&gt;Семантика упорядочивания памяти , которая гарантирует, что доступ к памяти после атомарной операции (в программном порядке) не может быть переупорядочен перед атомарной операцией.</target>
        </trans-unit>
        <trans-unit id="e68cef097188df99d0647f5c889d3fb1b1b63fd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; provides several implementations of the atomic test-and-set, fetch-and-store, and fetch-and-add functions. Each implementation defines a memory ordering semantic that describes how memory accesses surrounding the atomic instruction are executed by the processor. Since many modern architectures allow out-of-order execution and memory ordering, using the correct semantic is necessary to ensure that your application functions properly on all processors.</source>
          <target state="translated">&lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; предоставляет несколько реализаций атомарных функций test-and-set, fetch-and-store и fetch-and-add. Каждая реализация определяет семантику упорядочения памяти, которая описывает, как доступ к памяти, окружающий атомарную инструкцию, выполняется процессором. Поскольку многие современные архитектуры допускают выполнение вне очереди и упорядочение памяти, использование правильной семантики необходимо для обеспечения правильной работы вашего приложения на всех процессорах.</target>
        </trans-unit>
        <trans-unit id="66731f6cbe4e616f3b74169cf445041377432a30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicpointer#QAtomicPointer&quot;&gt;QAtomicPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QAtomicPointer::operator=(const &lt;a href=&quot;qatomicpointer#QAtomicPointer&quot;&gt;QAtomicPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qatomicpointer#QAtomicPointer&quot;&gt;QAtomicPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QAtomicPointer :: operator = (const &lt;a href=&quot;qatomicpointer#QAtomicPointer&quot;&gt;QAtomicPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5e0297841d825654438304b682f31171eeecbece" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicpointer#memory-ordering&quot;&gt;memory ordering&lt;/a&gt; semantics, leaving the compiler and processor to freely reorder memory accesses.</source>
          <target state="translated">&lt;a href=&quot;qatomicpointer#memory-ordering&quot;&gt;&lt;/a&gt;семантика упорядочивания памяти , позволяющая компилятору и процессору свободно изменять порядок обращений к памяти.</target>
        </trans-unit>
        <trans-unit id="f34107f77662187a694b5986d5d75362fc1e8960" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicpointer#memory-ordering&quot;&gt;memory ordering&lt;/a&gt; semantics, which ensures that memory access before and after the atomic operation (in program order) may not be re-ordered.</source>
          <target state="translated">&lt;a href=&quot;qatomicpointer#memory-ordering&quot;&gt;&lt;/a&gt;Семантика упорядочения памяти , которая гарантирует, что доступ к памяти до и после атомарной операции (в программном порядке) не может быть переупорядочен.</target>
        </trans-unit>
        <trans-unit id="97d7d408b04cdab1b3f63e864862268b1e5252e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicpointer#memory-ordering&quot;&gt;memory ordering&lt;/a&gt; semantics, which ensures that memory access before the atomic operation (in program order) may not be re-ordered after the atomic operation.</source>
          <target state="translated">&lt;a href=&quot;qatomicpointer#memory-ordering&quot;&gt;&lt;/a&gt;Семантика упорядочивания памяти , которая гарантирует, что доступ к памяти до атомарной операции (в программном порядке) не может быть переупорядочен после атомарной операции.</target>
        </trans-unit>
        <trans-unit id="7b1145bad33c8e3161e0f581907fb8e5e665d433" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qatomicpointer#memory-ordering&quot;&gt;memory ordering&lt;/a&gt; semantics, which ensures that memory access following the atomic operation (in program order) may not be re-ordered before the atomic operation.</source>
          <target state="translated">&lt;a href=&quot;qatomicpointer#memory-ordering&quot;&gt;&lt;/a&gt;Семантика упорядочивания памяти , которая гарантирует, что доступ к памяти после атомарной операции (в программном порядке) не может быть переупорядочен перед атомарной операцией.</target>
        </trans-unit>
        <trans-unit id="276f5e6d3418dd188368f419918caa5c98145e37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::Error&lt;/a&gt; QAudioInput::error() const</source>
          <target state="translated">&lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio :: Error&lt;/a&gt; QAudioInput :: error () const</target>
        </trans-unit>
        <trans-unit id="109af5fc03d244705616dbd49560cd4787bd8f05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::Error&lt;/a&gt; QAudioOutput::error() const</source>
          <target state="translated">&lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio :: Error&lt;/a&gt; QAudioOutput :: error () const</target>
        </trans-unit>
        <trans-unit id="025b9dfd408e8f9c7a4cd5e2f17f66cb5e49ab74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; QAudioInput::state() const</source>
          <target state="translated">&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; QAudioInput :: state () const</target>
        </trans-unit>
        <trans-unit id="3ec04fe364c6ab7e91aba5ba2362555aadd594b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; QAudioOutput::state() const</source>
          <target state="translated">&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; QAudioOutput :: state () const</target>
        </trans-unit>
        <trans-unit id="0a7e2878aecfe13374fe43ce795eb57fa0b94ac0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt; QAudioDecoder::read() const</source>
          <target state="translated">&lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt; QAudioDecoder :: read () const</target>
        </trans-unit>
        <trans-unit id="77736d1296de7928230612451dd62075e4e05492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiobuffer#QAudioBuffer&quot;&gt;QAudioBuffer&lt;/a&gt; &amp;amp;QAudioBuffer::operator=(const &lt;a href=&quot;qaudiobuffer#QAudioBuffer&quot;&gt;QAudioBuffer&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaudiobuffer#QAudioBuffer&quot;&gt;QAudioBuffer&lt;/a&gt; &amp;amp; QAudioBuffer :: operator = (const &lt;a href=&quot;qaudiobuffer#QAudioBuffer&quot;&gt;QAudioBuffer&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="08f1f036c1a2e70bd1577a9ebab0cb5c6737ec03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiobuffer-stereoframe#StereoFrame&quot;&gt;StereoFrame&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;StereoFrame::operator=(const &lt;a href=&quot;qaudiobuffer-stereoframe#StereoFrame&quot;&gt;StereoFrame&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaudiobuffer-stereoframe#StereoFrame&quot;&gt;StereoFrame&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; StereoFrame :: operator = (const &lt;a href=&quot;qaudiobuffer-stereoframe#StereoFrame&quot;&gt;StereoFrame&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="61f86eed560704fb2fa5396b1afe7df0d32e40d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiodecoder&quot;&gt;QAudioDecoder&lt;/a&gt;, &lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt;, &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt;, and &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaudiodecoder&quot;&gt;QAudioDecoder&lt;/a&gt; , &lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; , &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; и &lt;a href=&quot;qradiotuner&quot;&gt;QRadioTuner&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7d8d4b6d8d305af4d9936994b9642ed60e2f02b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiodecoder#Error-enum&quot;&gt;QAudioDecoder::Error&lt;/a&gt; QAudioDecoder::error() const</source>
          <target state="translated">&lt;a href=&quot;qaudiodecoder#Error-enum&quot;&gt;QAudioDecoder :: Error&lt;/a&gt; QAudioDecoder :: error () const</target>
        </trans-unit>
        <trans-unit id="78cd4987bc2cf4f12b7e8f92956bc6e6aa4e6d7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiodecodercontrol&quot;&gt;QAudioDecoderControl&lt;/a&gt;, &lt;a href=&quot;qaudioencodersettingscontrol&quot;&gt;QAudioEncoderSettingsControl&lt;/a&gt;, &lt;a href=&quot;qaudioinputselectorcontrol&quot;&gt;QAudioInputSelectorControl&lt;/a&gt;, &lt;a href=&quot;qaudiooutputselectorcontrol&quot;&gt;QAudioOutputSelectorControl&lt;/a&gt;, &lt;a href=&quot;qaudiorolecontrol&quot;&gt;QAudioRoleControl&lt;/a&gt;, &lt;a href=&quot;qcameracapturebufferformatcontrol&quot;&gt;QCameraCaptureBufferFormatControl&lt;/a&gt;, &lt;a href=&quot;qcameracapturedestinationcontrol&quot;&gt;QCameraCaptureDestinationControl&lt;/a&gt;, &lt;a href=&quot;qcameracontrol&quot;&gt;QCameraControl&lt;/a&gt;, &lt;a href=&quot;qcameraexposurecontrol&quot;&gt;QCameraExposureControl&lt;/a&gt;, &lt;a href=&quot;qcamerafeedbackcontrol&quot;&gt;QCameraFeedbackControl&lt;/a&gt;, &lt;a href=&quot;qcameraflashcontrol&quot;&gt;QCameraFlashControl&lt;/a&gt;, &lt;a href=&quot;qcamerafocuscontrol&quot;&gt;QCameraFocusControl&lt;/a&gt;, &lt;a href=&quot;qcameraimagecapturecontrol&quot;&gt;QCameraImageCaptureControl&lt;/a&gt;, &lt;a href=&quot;qcameraimageprocessingcontrol&quot;&gt;QCameraImageProcessingControl&lt;/a&gt;, &lt;a href=&quot;qcamerainfocontrol&quot;&gt;QCameraInfoControl&lt;/a&gt;, &lt;a href=&quot;qcameralockscontrol&quot;&gt;QCameraLocksControl&lt;/a&gt;, &lt;a href=&quot;qcameraviewfindersettingscontrol&quot;&gt;QCameraViewfinderSettingsControl&lt;/a&gt;, &lt;a href=&quot;qcameraviewfindersettingscontrol2&quot;&gt;QCameraViewfinderSettingsControl2&lt;/a&gt;, &lt;a href=&quot;qcamerazoomcontrol&quot;&gt;QCameraZoomControl&lt;/a&gt;, &lt;a href=&quot;qcustomaudiorolecontrol&quot;&gt;QCustomAudioRoleControl&lt;/a&gt;, &lt;a href=&quot;qimageencodercontrol&quot;&gt;QImageEncoderControl&lt;/a&gt;, &lt;a href=&quot;qmediaaudioprobecontrol&quot;&gt;QMediaAudioProbeControl&lt;/a&gt;, &lt;a href=&quot;qmediaavailabilitycontrol&quot;&gt;QMediaAvailabilityControl&lt;/a&gt;, &lt;a href=&quot;qmediacontainercontrol&quot;&gt;QMediaContainerControl&lt;/a&gt;, &lt;a href=&quot;qmediagaplessplaybackcontrol&quot;&gt;QMediaGaplessPlaybackControl&lt;/a&gt;, &lt;a href=&quot;qmedianetworkaccesscontrol&quot;&gt;QMediaNetworkAccessControl&lt;/a&gt;, &lt;a href=&quot;qmediaplayercontrol&quot;&gt;QMediaPlayerControl&lt;/a&gt;, &lt;a href=&quot;qmediarecordercontrol&quot;&gt;QMediaRecorderControl&lt;/a&gt;, &lt;a href=&quot;qmediastreamscontrol&quot;&gt;QMediaStreamsControl&lt;/a&gt;, &lt;a href=&quot;qmediavideoprobecontrol&quot;&gt;QMediaVideoProbeControl&lt;/a&gt;, &lt;a href=&quot;qmetadatareadercontrol&quot;&gt;QMetaDataReaderControl&lt;/a&gt;, &lt;a href=&quot;qmetadatawritercontrol&quot;&gt;QMetaDataWriterControl&lt;/a&gt;, &lt;a href=&quot;qradiodatacontrol&quot;&gt;QRadioDataControl&lt;/a&gt;, &lt;a href=&quot;qradiotunercontrol&quot;&gt;QRadioTunerControl&lt;/a&gt;, &lt;a href=&quot;qvideodeviceselectorcontrol&quot;&gt;QVideoDeviceSelectorControl&lt;/a&gt;, &lt;a href=&quot;qvideoencodersettingscontrol&quot;&gt;QVideoEncoderSettingsControl&lt;/a&gt;, &lt;a href=&quot;qvideorenderercontrol&quot;&gt;QVideoRendererControl&lt;/a&gt;, &lt;a href=&quot;qvideowidgetcontrol&quot;&gt;QVideoWidgetControl&lt;/a&gt;, and &lt;a href=&quot;qvideowindowcontrol&quot;&gt;QVideoWindowControl&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaudiodecodercontrol&quot;&gt;QAudioDecoderControl&lt;/a&gt; , &lt;a href=&quot;qaudioencodersettingscontrol&quot;&gt;QAudioEncoderSettingsControl&lt;/a&gt; , &lt;a href=&quot;qaudioinputselectorcontrol&quot;&gt;QAudioInputSelectorControl&lt;/a&gt; , &lt;a href=&quot;qaudiooutputselectorcontrol&quot;&gt;QAudioOutputSelectorControl&lt;/a&gt; , &lt;a href=&quot;qaudiorolecontrol&quot;&gt;QAudioRoleControl&lt;/a&gt; , &lt;a href=&quot;qcameracapturebufferformatcontrol&quot;&gt;QCameraCaptureBufferFormatControl&lt;/a&gt; , &lt;a href=&quot;qcameracapturedestinationcontrol&quot;&gt;QCameraCaptureDestinationControl&lt;/a&gt; , &lt;a href=&quot;qcameracontrol&quot;&gt;QCameraControl&lt;/a&gt; , &lt;a href=&quot;qcameraexposurecontrol&quot;&gt;QCameraExposureControl&lt;/a&gt; , &lt;a href=&quot;qcamerafeedbackcontrol&quot;&gt;QCameraFeedbackControl&lt;/a&gt; , &lt;a href=&quot;qcameraflashcontrol&quot;&gt;QCameraFlashControl&lt;/a&gt; , &lt;a href=&quot;qcamerafocuscontrol&quot;&gt;QCameraFocusControl&lt;/a&gt; , &lt;a href=&quot;qcameraimagecapturecontrol&quot;&gt;QCameraImageCaptureControl&lt;/a&gt; , &lt;a href=&quot;qcameraimageprocessingcontrol&quot;&gt;QCameraImageProcessingControl&lt;/a&gt; , &lt;a href=&quot;qcamerainfocontrol&quot;&gt;QCameraInfoControl&lt;/a&gt; , &lt;a href=&quot;qcameralockscontrol&quot;&gt;QCameraLocksControl&lt;/a&gt; ,&lt;a href=&quot;qcameraviewfindersettingscontrol&quot;&gt;QCameraViewfinderSettingsControl&lt;/a&gt; , &lt;a href=&quot;qcameraviewfindersettingscontrol2&quot;&gt;QCameraViewfinderSettingsControl2&lt;/a&gt; , &lt;a href=&quot;qcamerazoomcontrol&quot;&gt;QCameraZoomControl&lt;/a&gt; , &lt;a href=&quot;qcustomaudiorolecontrol&quot;&gt;QCustomAudioRoleControl&lt;/a&gt; , &lt;a href=&quot;qimageencodercontrol&quot;&gt;QImageEncoderControl&lt;/a&gt; , &lt;a href=&quot;qmediaaudioprobecontrol&quot;&gt;QMediaAudioProbeControl&lt;/a&gt; , &lt;a href=&quot;qmediaavailabilitycontrol&quot;&gt;QMediaAvailabilityControl&lt;/a&gt; , &lt;a href=&quot;qmediacontainercontrol&quot;&gt;QMediaContainerControl&lt;/a&gt; , &lt;a href=&quot;qmediagaplessplaybackcontrol&quot;&gt;QMediaGaplessPlaybackControl&lt;/a&gt; , &lt;a href=&quot;qmedianetworkaccesscontrol&quot;&gt;QMediaNetworkAccessControl&lt;/a&gt; , &lt;a href=&quot;qmediaplayercontrol&quot;&gt;QMediaPlayerControl&lt;/a&gt; , &lt;a href=&quot;qmediarecordercontrol&quot;&gt;QMediaRecorderControl&lt;/a&gt; , &lt;a href=&quot;qmediastreamscontrol&quot;&gt;QMediaStreamsControl&lt;/a&gt; , &lt;a href=&quot;qmediavideoprobecontrol&quot;&gt;QMediaVideoProbeControl&lt;/a&gt; , &lt;a href=&quot;qmetadatareadercontrol&quot;&gt;QMetaDataReaderControl&lt;/a&gt; , &lt;a href=&quot;qmetadatawritercontrol&quot;&gt;QMetaDataWriterControl&lt;/a&gt; , &lt;a href=&quot;qradiodatacontrol&quot;&gt;QRadioDataControl&lt;/a&gt;, &lt;a href=&quot;qradiotunercontrol&quot;&gt;QRadioTunerControl&lt;/a&gt; , &lt;a href=&quot;qvideodeviceselectorcontrol&quot;&gt;QVideoDeviceSelectorControl&lt;/a&gt; , &lt;a href=&quot;qvideoencodersettingscontrol&quot;&gt;QVideoEncoderSettingsControl&lt;/a&gt; , &lt;a href=&quot;qvideorenderercontrol&quot;&gt;QVideoRendererControl&lt;/a&gt; , &lt;a href=&quot;qvideowidgetcontrol&quot;&gt;QVideoWidgetControl&lt;/a&gt; и &lt;a href=&quot;qvideowindowcontrol&quot;&gt;QVideoWindowControl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c23cee799c79dc3b07c505460773bd32f9ffa9f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; lets you query for audio devices--such as sound cards and USB headsets--that are currently available on the system. The audio devices available are dependent on the platform or audio plugins installed.</source>
          <target state="translated">&lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; позволяет запрашивать аудиоустройства, такие как звуковые карты и USB-гарнитуры, которые в настоящее время доступны в системе. Доступные аудиоустройства зависят от платформы или установленных звуковых плагинов.</target>
        </trans-unit>
        <trans-unit id="828266d67b9127ba7bfe69f47a2b50f3b461b1ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiodeviceinfo#QAudioDeviceInfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; &amp;amp;QAudioDeviceInfo::operator=(const &lt;a href=&quot;qaudiodeviceinfo#QAudioDeviceInfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaudiodeviceinfo#QAudioDeviceInfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; &amp;amp; QAudioDeviceInfo :: operator = (const &lt;a href=&quot;qaudiodeviceinfo#QAudioDeviceInfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f8cf041d1a7d0b92618dfa69ac019845ec86d039" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudiodeviceinfo#availableDevices&quot;&gt;QAudioDeviceInfo::availableDevices&lt;/a&gt;(&lt;a href=&quot;qaudio#Mode-enum&quot;&gt;QAudio::AudioOutput&lt;/a&gt;).size() = 0 (dummy backend)</source>
          <target state="translated">&lt;a href=&quot;qaudiodeviceinfo#availableDevices&quot;&gt;QAudioDeviceInfo :: availableDevices&lt;/a&gt; ( &lt;a href=&quot;qaudio#Mode-enum&quot;&gt;QAudio :: AudioOutput&lt;/a&gt; ) .size () = 0 (фиктивный бэкэнд)</target>
        </trans-unit>
        <trans-unit id="9ecbea4ba947843964c4fd82d48c3b52d527fe8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioencodersettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; QMediaRecorder::audioSettings() const</source>
          <target state="translated">&lt;a href=&quot;qaudioencodersettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; QMediaRecorder :: audioSettings () const</target>
        </trans-unit>
        <trans-unit id="d2b0f458e5363c99957b1b42872087f63b2e63a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioencodersettings#QAudioEncoderSettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; &amp;amp;QAudioEncoderSettings::operator=(const &lt;a href=&quot;qaudioencodersettings#QAudioEncoderSettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaudioencodersettings#QAudioEncoderSettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; &amp;amp; QAudioEncoderSettings :: operator = (const &lt;a href=&quot;qaudioencodersettings#QAudioEncoderSettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="20f55fb9758e2e3dcfe1335bd170f2aa60b1915d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioBuffer::format() const</source>
          <target state="translated">&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioBuffer :: format () const</target>
        </trans-unit>
        <trans-unit id="d2bdec7a4f3b0fd2a4e1dba3eaebe562e3913f6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioDecoder::audioFormat() const</source>
          <target state="translated">&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioDecoder :: audioFormat () const</target>
        </trans-unit>
        <trans-unit id="7b6877a6cf44bce53de518b8105007c937ef29be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioDeviceInfo::nearestFormat(const &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioDeviceInfo :: nearFormat (const &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="99b65af8d83e4974327e0ae8be9c184454f340aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioDeviceInfo::preferredFormat() const</source>
          <target state="translated">&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioDeviceInfo :: preferredFormat () const</target>
        </trans-unit>
        <trans-unit id="2253b4ce0eb190c79b6c451c6f8fe35fe8a82b9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioInput::format() const</source>
          <target state="translated">&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioInput :: format () const</target>
        </trans-unit>
        <trans-unit id="3ef57edae6c143eac342dd23cb79ff68dec03e0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioOutput::format() const</source>
          <target state="translated">&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioOutput :: format () const</target>
        </trans-unit>
        <trans-unit id="dcf3af2dd411d820d4c948c62f9f5314f53f936b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt;; otherwise returns false.</source>
          <target state="translated">&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; ; в противном случае возвращает false.</target>
        </trans-unit>
        <trans-unit id="a9a573343c474c3d5e22f30a5538f9d80cd2f236" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat#Endian-enum&quot;&gt;QAudioFormat::Endian&lt;/a&gt; QAudioFormat::byteOrder() const</source>
          <target state="translated">&lt;a href=&quot;qaudioformat#Endian-enum&quot;&gt;QAudioFormat :: Endian&lt;/a&gt; QAudioFormat :: byteOrder () const</target>
        </trans-unit>
        <trans-unit id="9f013fb6b3d2d584b963778c0fab8bedc694b358" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat#QAudioFormat&quot;&gt;QAudioFormat&lt;/a&gt; &amp;amp;QAudioFormat::operator=(const &lt;a href=&quot;qaudioformat#QAudioFormat&quot;&gt;QAudioFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaudioformat#QAudioFormat&quot;&gt;QAudioFormat&lt;/a&gt; &amp;amp; QAudioFormat :: operator = (const &lt;a href=&quot;qaudioformat#QAudioFormat&quot;&gt;QAudioFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ec65960b367e0d32f5fd64250147ddfdbf4fb93d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat#SampleType-enum&quot;&gt;QAudioFormat::SampleType&lt;/a&gt; QAudioFormat::sampleType() const</source>
          <target state="translated">&lt;a href=&quot;qaudioformat#SampleType-enum&quot;&gt;QAudioFormat :: SampleType&lt;/a&gt; QAudioFormat :: sampleType () const</target>
        </trans-unit>
        <trans-unit id="ca533f3c486df011a8442092c7bbdb6f54c8086e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat#byteOrder&quot;&gt;byteOrder&lt;/a&gt;() = &lt;a href=&quot;qaudioformat#Endian-enum&quot;&gt;QAudioFormat::Endian&lt;/a&gt;(&lt;a href=&quot;qsysinfo#Endian-enum&quot;&gt;QSysInfo::ByteOrder&lt;/a&gt;)</source>
          <target state="translated">&lt;a href=&quot;qaudioformat#byteOrder&quot;&gt;byteOrder&lt;/a&gt; () = &lt;a href=&quot;qaudioformat#Endian-enum&quot;&gt;QAudioFormat :: Endian&lt;/a&gt; ( &lt;a href=&quot;qsysinfo#Endian-enum&quot;&gt;QSysInfo :: ByteOrder&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="4e766aee35fb0112e39aae6b85496df300da9d47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat#channelCount&quot;&gt;channelCount&lt;/a&gt;() = -1</source>
          <target state="translated">&lt;a href=&quot;qaudioformat#channelCount&quot;&gt;channelCount&lt;/a&gt; () = -1</target>
        </trans-unit>
        <trans-unit id="8c16336f0e2d62c078d984f479da65a0732cc1dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat#sampleRate&quot;&gt;sampleRate&lt;/a&gt;() = -1</source>
          <target state="translated">&lt;a href=&quot;qaudioformat#sampleRate&quot;&gt;sampleRate&lt;/a&gt; () = -1</target>
        </trans-unit>
        <trans-unit id="b4d77b59aa8c041155bb932d8e4a0208655b7959" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat#sampleSize&quot;&gt;sampleSize&lt;/a&gt;() = -1</source>
          <target state="translated">&lt;a href=&quot;qaudioformat#sampleSize&quot;&gt;sampleSize&lt;/a&gt; () = -1</target>
        </trans-unit>
        <trans-unit id="82de70b9a634a18339d2de0d6b7b0f584431738d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioformat#sampleType&quot;&gt;sampleType&lt;/a&gt;() = &lt;a href=&quot;qaudioformat#SampleType-enum&quot;&gt;QAudioFormat::Unknown&lt;/a&gt;&lt;code&gt;codec()&lt;/code&gt; = &quot;&quot;</source>
          <target state="translated">&lt;a href=&quot;qaudioformat#sampleType&quot;&gt;sampleType&lt;/a&gt; () = &lt;a href=&quot;qaudioformat#SampleType-enum&quot;&gt;QAudioFormat :: Неизвестный &lt;/a&gt; &lt;code&gt;codec()&lt;/code&gt; = &quot;&quot;</target>
        </trans-unit>
        <trans-unit id="3933cf313af272867ef50f2d97f9ebc8f5a135ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; lets you record audio with an audio input device. The default constructor of this class will use the systems default audio device, but you can also specify a &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; for a specific device. You also need to pass in the &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; in which you wish to record.</source>
          <target state="translated">&lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; позволяет записывать звук с помощью устройства ввода звука. Конструктор по умолчанию этого класса будет использовать системное звуковое устройство по умолчанию, но вы также можете указать &lt;a href=&quot;qaudiodeviceinfo&quot;&gt;QAudioDeviceInfo&lt;/a&gt; для конкретного устройства. Вам также необходимо передать &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat,&lt;/a&gt; в котором вы хотите записывать.</target>
        </trans-unit>
        <trans-unit id="0aa1df3e7f2a49ddd428b5d891dc9548c89d8611" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; provides several ways of measuring the time that has passed since the &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;() of the recording. The &lt;code&gt;processedUSecs()&lt;/code&gt; function returns the length of the stream in microseconds written, i.e., it leaves out the times the audio input was suspended or idle. The &lt;a href=&quot;qaudioinput#elapsedUSecs&quot;&gt;elapsedUSecs&lt;/a&gt;() function returns the time elapsed since &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;() was called regardless of which states the &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; has been in.</source>
          <target state="translated">&lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; предоставляет несколько способов измерения времени, прошедшего с момента &lt;a href=&quot;qaudioinput#start-1&quot;&gt;начала&lt;/a&gt; () записи. Функция &lt;code&gt;processedUSecs()&lt;/code&gt; возвращает длину потока в записанных микросекундах, т. Е. Не учитывает время, когда аудиовход был приостановлен или бездействовал. Функция &lt;a href=&quot;qaudioinput#elapsedUSecs&quot;&gt;elapsedUSecs&lt;/a&gt; () возвращает время, прошедшее с момента &lt;a href=&quot;qaudioinput&quot;&gt;вызова &lt;/a&gt;&lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt; (), независимо от того, в каком состоянии находился QAudioInput .</target>
        </trans-unit>
        <trans-unit id="0160170c22e9a5f4fe9243c34225c0d98e262166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaudioprobe&quot;&gt;QAudioProbe&lt;/a&gt; is the client facing class for probing audio - this class is implemented by media backends to provide this functionality.</source>
          <target state="translated">&lt;a href=&quot;qaudioprobe&quot;&gt;QAudioProbe&lt;/a&gt; - это класс, обращенный к клиенту, для исследования звука - этот класс реализуется серверными модулями мультимедиа для обеспечения этой функциональности.</target>
        </trans-unit>
        <trans-unit id="3994d6c7336d2f701894d5af1607a63b184bf50d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qauthenticator&quot;&gt;QAuthenticator&lt;/a&gt; supports the following authentication methods:</source>
          <target state="translated">&lt;a href=&quot;qauthenticator&quot;&gt;QAuthenticator&lt;/a&gt; поддерживает следующие методы аутентификации:</target>
        </trans-unit>
        <trans-unit id="abc626f64704bc51d7fcd39a8498a990a9c59b31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qauthenticator#QAuthenticator&quot;&gt;QAuthenticator&lt;/a&gt; &amp;amp;QAuthenticator::operator=(const &lt;a href=&quot;qauthenticator#QAuthenticator&quot;&gt;QAuthenticator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qauthenticator#QAuthenticator&quot;&gt;QAuthenticator&lt;/a&gt; &amp;amp; QAuthenticator :: operator = (const &lt;a href=&quot;qauthenticator#QAuthenticator&quot;&gt;QAuthenticator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d4a64f2d89d52ca70bc0b9c948c724bdabcfdf12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxaggregated&quot;&gt;QAxAggregated&lt;/a&gt; can be subclassed to implement additional COM interfaces.</source>
          <target state="translated">&lt;a href=&quot;qaxaggregated&quot;&gt;QAxAggregated&lt;/a&gt; может быть разделен на подклассы для реализации дополнительных COM-интерфейсов.</target>
        </trans-unit>
        <trans-unit id="6bbfdb955650985130c0e91c306770b8dceb55ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; is an abstract class that cannot be used directly, and is instantiated through the subclasses &lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; and &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt;. This class provides the API to access the COM object directly through its IUnknown implementation. If the COM object implements the IDispatch interface, the properties and methods of that object become available as Qt properties and slots.</source>
          <target state="translated">&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; - это абстрактный класс, который нельзя использовать напрямую, и он &lt;a href=&quot;qaxobject&quot;&gt;создается&lt;/a&gt; через подклассы QAxObject и &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; . Этот класс предоставляет API для доступа к COM-объекту напрямую через его реализацию IUnknown. Если COM-объект реализует интерфейс IDispatch, свойства и методы этого объекта становятся доступными как свойства и слоты Qt.</target>
        </trans-unit>
        <trans-unit id="2c9e00de1f370d4a545da11e2cccdf1c21e73004" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; is an abstract class that provides an API to initialize and access a COM object or ActiveX control.</source>
          <target state="translated">&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; - это абстрактный класс, который предоставляет API для инициализации и доступа к COM-объекту или элементу управления ActiveX.</target>
        </trans-unit>
        <trans-unit id="dd75cbdf400cdd4babd8ff474292b1154c773ff2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; transparently converts between COM data types and the equivalent Qt data types. Some COM types have no equivalent Qt data structure.</source>
          <target state="translated">&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; прозрачно конвертирует между типами данных COM и эквивалентными типами данных Qt. Некоторые типы COM не имеют эквивалентной структуры данных Qt.</target>
        </trans-unit>
        <trans-unit id="07f6d3131d0d4788b054a78375c30cbe553ba533" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxbase#PropertyBag-typedef&quot;&gt;QAxBase::PropertyBag&lt;/a&gt; QAxBase::propertyBag() const</source>
          <target state="translated">&lt;a href=&quot;qaxbase#PropertyBag-typedef&quot;&gt;QAxBase :: PropertyBag&lt;/a&gt; QAxBase :: propertyBag () const</target>
        </trans-unit>
        <trans-unit id="8d13f537a13a67885375f029d1ad782dec2734db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt; provides an interface between the Qt widget and the COM object.</source>
          <target state="translated">&lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt; предоставляет интерфейс между виджетом Qt и COM-объектом.</target>
        </trans-unit>
        <trans-unit id="aa5add0abc2ede837f3f3ce8751d4cfea57f6f77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt; defines a factory for the creation of COM objects.</source>
          <target state="translated">&lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt; определяет фабрику для создания COM-объектов.</target>
        </trans-unit>
        <trans-unit id="75b35af3f922a500181190a2f7acbd9dcd817661" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; *QAxBase::querySubObject(const char *</source>
          <target state="translated">&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; * QAxBase :: querySubObject (const char *</target>
        </trans-unit>
        <trans-unit id="6499a5a16f75e051b7ac9dba7ac287abc51c5f4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; also inherits most of its ActiveX-related functionality from &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt;, notably &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall&lt;/a&gt;() and &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;querySubObject&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; также наследует большую часть своих функций, связанных с &lt;a href=&quot;qaxbase&quot;&gt;ActiveX&lt;/a&gt; , от QAxBase , в частности, &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall&lt;/a&gt; () и &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;querySubObject&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="6fc4c0612680f1f13cf16194b3e30a23e655ad60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; and &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; и &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9845e7fcc524a7ff60d964da4d0e95c066e1a1fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; is a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and can be used as such, e.g. it can be organized in an object hierarchy, receive events and connect to signals and slots.</source>
          <target state="translated">&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; является &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; и может использоваться как таковой, например, он может быть организован в иерархию объектов, принимать события и подключаться к сигналам и слотам.</target>
        </trans-unit>
        <trans-unit id="8351a07abcec8099f1c8a2ef3c209dfe59eb927c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; provides a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; that wraps a COM object.</source>
          <target state="translated">&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; предоставляет &lt;a href=&quot;qobject&quot;&gt;QObject,&lt;/a&gt; который обертывает COM-объект.</target>
        </trans-unit>
        <trans-unit id="00c4622378eaee07dfe9647cc469d33429a4563e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt;*</source>
          <target state="translated">&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt;*</target>
        </trans-unit>
        <trans-unit id="96dd4b291e15fd0f89aefe6759239ec074b6db0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt;* (return value)</source>
          <target state="translated">&lt;a href=&quot;qaxobject&quot;&gt;QAxObject&lt;/a&gt; * (возвращаемое значение)</target>
        </trans-unit>
        <trans-unit id="b554db2675dd9b0b0220b54cea496af08823aecc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxscript&quot;&gt;QAxScript&lt;/a&gt; *QAxScriptManager::load(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaxscript&quot;&gt;QAxScript&lt;/a&gt; * QAxScriptManager :: load (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d0fed29330f0026802b93a8dd5659f620151f8ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxscript&quot;&gt;QAxScript&lt;/a&gt; *QAxScriptManager::script(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qaxscript&quot;&gt;QAxScript&lt;/a&gt; * QAxScriptManager :: script (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="96873b62daf87c70760965b58814323ef41e38cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxscriptengine&quot;&gt;QAxScriptEngine&lt;/a&gt; *QAxScript::scriptEngine() const</source>
          <target state="translated">&lt;a href=&quot;qaxscriptengine&quot;&gt;QAxScriptEngine&lt;/a&gt; * QAxScript :: scriptEngine () const</target>
        </trans-unit>
        <trans-unit id="d5819a9786bf0ee011d214468e9f93d400ef46c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxscriptengine#State-enum&quot;&gt;QAxScriptEngine::State&lt;/a&gt; QAxScriptEngine::state() const</source>
          <target state="translated">&lt;a href=&quot;qaxscriptengine#State-enum&quot;&gt;QAxScriptEngine :: State&lt;/a&gt; QAxScriptEngine :: state () const</target>
        </trans-unit>
        <trans-unit id="808e0178d60a2f5b417b03ca712265af7e000714" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxscriptmanager&quot;&gt;QAxScriptManager&lt;/a&gt;, &lt;a href=&quot;qaxscript&quot;&gt;QAxScript&lt;/a&gt; and &lt;a href=&quot;qaxscriptengine&quot;&gt;QAxScriptEngine&lt;/a&gt; provide an interface to the Windows Script Host.</source>
          <target state="translated">&lt;a href=&quot;qaxscriptmanager&quot;&gt;QAxScriptManager&lt;/a&gt; , &lt;a href=&quot;qaxscript&quot;&gt;QAxScript&lt;/a&gt; и &lt;a href=&quot;qaxscriptengine&quot;&gt;QAxScriptEngine&lt;/a&gt; предоставляют интерфейс для Windows Script Host.</target>
        </trans-unit>
        <trans-unit id="f052125a2d959f6426094c1fcb2114cbaf93c767" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxselect&quot;&gt;QAxSelect&lt;/a&gt; dialog can be used to provide users with a way to browse the registered COM components of the system and select one. It also provides a combo box for selecting desired sandboxing level. The CLSID of the selected component can then be used in the application to e.g. initialize a &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qaxselect&quot;&gt;&lt;/a&gt;Диалог QAxSelect может использоваться, чтобы предоставить пользователям возможность просматривать зарегистрированные COM-компоненты системы и выбирать один из них. Он также предоставляет поле со списком для выбора желаемого уровня песочницы. Затем CLSID выбранного компонента можно использовать в приложении, например, для инициализации &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e35c3c81d2776592c4c76cc16c68960e0d3ea0e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxselect#SandboxingLevel-enum&quot;&gt;QAxSelect::SandboxingLevel&lt;/a&gt; QAxSelect::sandboxingLevel() const</source>
          <target state="translated">&lt;a href=&quot;qaxselect#SandboxingLevel-enum&quot;&gt;QAxSelect :: SandboxingLevel&lt;/a&gt; QAxSelect :: sandboxingLevel () const</target>
        </trans-unit>
        <trans-unit id="e4053a41c3f038a4c107888ec764b7643026d5a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; also inherits most of its ActiveX-related functionality from &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt;, notably &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall&lt;/a&gt;() and &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;querySubObject&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; также наследует большую часть своих функций, связанных с &lt;a href=&quot;qaxbase&quot;&gt;ActiveX&lt;/a&gt; , от QAxBase , в частности, &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall&lt;/a&gt; () и &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;querySubObject&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="f80adf012ccb822a448b26c5d97a8d32aebb294a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; is a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and can mostly be used as such, e.g. it can be organized in a widget hierarchy and layouts or act as an event filter. Standard widget properties, e.g. &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;enabled&lt;/a&gt; are supported, but it depends on the ActiveX control to implement support for ambient properties like e.g. palette or font. &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; tries to provide the necessary hints.</source>
          <target state="translated">&lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; - это &lt;a href=&quot;qwidget&quot;&gt;QWidget, который в&lt;/a&gt; большинстве случаев может использоваться как таковой, например, он может быть организован в виде иерархии и макетов виджетов или действовать как фильтр событий. Поддерживаются стандартные свойства виджета, например, &lt;a href=&quot;qwidget#enabled-prop&quot;&gt;разрешено&lt;/a&gt; , но это зависит от элемента управления ActiveX для реализации поддержки внешних свойств, таких как палитра или шрифт. &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; пытается предоставить необходимые подсказки.</target>
        </trans-unit>
        <trans-unit id="04aae60ec3a62675c97cf1d0f522fb97b859b1e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; is a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; that wraps an ActiveX control.</source>
          <target state="translated">&lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; - это &lt;a href=&quot;qwidget&quot;&gt;QWidget,&lt;/a&gt; который является оболочкой для элемента управления ActiveX.</target>
        </trans-unit>
        <trans-unit id="eb8851db8fff9a4de355a46747a3e2ed502d2d33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; *QWidget::backingStore() const</source>
          <target state="translated">&lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; * QWidget :: backingStore () const</target>
        </trans-unit>
        <trans-unit id="0fd98416bd49b6901cc201157da9160b8506051b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; enables the use of &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to paint on a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; with type RasterSurface. The other way of rendering to a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; is through the use of OpenGL with &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; позволяет использовать &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; для рисования в &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; с типом RasterSurface. Другой способ рендеринга в &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; - использование OpenGL с &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="944dafdece671d320d479191dfa65b6b8f0269e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; might be used by an application that wants to use &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; without OpenGL acceleration and without the extra overhead of using the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; or &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; UI stacks. For an example of how to use &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-rasterwindow-example.html#&quot;&gt;Raster Window Example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; может использоваться приложением, которое хочет использовать &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; без ускорения OpenGL и без дополнительных накладных расходов на использование стеков &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; или &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; UI. Пример использования &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt; см. В &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-rasterwindow-example.html#&quot;&gt;примере окна растра&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4be1594379168ef95dbc7ee40f5e562f06416c3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries&lt;/a&gt; supports the following format tags for &lt;a href=&quot;qabstract3dseries#itemLabelFormat-prop&quot;&gt;QAbstract3DSeries::setItemLabelFormat&lt;/a&gt;():</source>
          <target state="translated">&lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries&lt;/a&gt; поддерживает следующие теги формата для &lt;a href=&quot;qabstract3dseries#itemLabelFormat-prop&quot;&gt;QAbstract3DSeries :: setItemLabelFormat&lt;/a&gt; ():</target>
        </trans-unit>
        <trans-unit id="9fec151ab862a0976599606c3815df57242472c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries&lt;/a&gt;, &lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries&lt;/a&gt;, and &lt;a href=&quot;qsurface3dseries&quot;&gt;QSurface3DSeries&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries&lt;/a&gt; , &lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries&lt;/a&gt; и &lt;a href=&quot;qsurface3dseries&quot;&gt;QSurface3DSeries&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87358932c3fff7aacc7121cf38dfff0d18347b68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt; can be set up to show an axis line with tick marks, grid lines, and shades. Categories are drawn between the ticks. It can be used also with a line series, as demonstrated by the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcharts-lineandbar-example.html#&quot;&gt;Line and BarChart Example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt; можно настроить для отображения линии оси с делениями, линиями сетки и тенями. Категории нарисованы между галочками. Его также можно использовать с серией линий, как показано на &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcharts-lineandbar-example.html#&quot;&gt;примере Line и BarChart&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce9a57d2a9297867eb97823483202fdcf4adb472" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt;, &lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt;, &lt;a href=&quot;qlogvalueaxis&quot;&gt;QLogValueAxis&lt;/a&gt;, and &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt; , &lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt; , &lt;a href=&quot;qlogvalueaxis&quot;&gt;QLogValueAxis&lt;/a&gt; и &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e63cb9e894744efadd2459359c3cf9e38cd0ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbardataitem#QBarDataItem&quot;&gt;QBarDataItem&lt;/a&gt; &amp;amp;QBarDataItem::operator=(const &lt;a href=&quot;qbardataitem#QBarDataItem&quot;&gt;QBarDataItem&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbardataitem#QBarDataItem&quot;&gt;QBarDataItem&lt;/a&gt; &amp;amp; QBarDataItem :: operator = (const &lt;a href=&quot;qbardataitem#QBarDataItem&quot;&gt;QBarDataItem&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8e0aa1dfba29bcc4aad35f57f95dfa97e19b8d96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy&lt;/a&gt; optionally keeps track of row and column labels, which &lt;a href=&quot;qcategory3daxis&quot;&gt;QCategory3DAxis&lt;/a&gt; can utilize to show axis labels. The row and column labels are stored in a separate array from the data and row manipulation methods provide alternate versions that do not affect the row labels. This enables the option of having row labels that relate to the position of the data in the array rather than the data itself.</source>
          <target state="translated">&lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy&lt;/a&gt; дополнительно отслеживает метки строк и столбцов, которые &lt;a href=&quot;qcategory3daxis&quot;&gt;QCategory3DAxis&lt;/a&gt; может использовать для отображения меток осей. Метки строк и столбцов хранятся в отдельном массиве от данных, а методы управления строками предоставляют альтернативные версии, которые не влияют на метки строк. Это позволяет иметь метки строк, которые относятся к положению данных в массиве, а не к самим данным.</target>
        </trans-unit>
        <trans-unit id="40bbd349a065e2b2b7a2d4ae212560e5c86dac27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy&lt;/a&gt; takes ownership of all QtDataVisualization::QBarDataRow objects passed to it, whether directly or in a QtDataVisualization::QBarDataArray container. If bar data row pointers are used to directly modify data after adding the array to the proxy, the appropriate signal must be emitted to update the graph.</source>
          <target state="translated">&lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy&lt;/a&gt; становится владельцем всех объектов QtDataVisualization :: QBarDataRow, переданных ему напрямую или в контейнере QtDataVisualization :: QBarDataArray. Если указатели строк данных столбца используются для непосредственного изменения данных после добавления массива в прокси, должен быть подан соответствующий сигнал для обновления графика.</target>
        </trans-unit>
        <trans-unit id="834190045d586ffe9986d9ee8433c45512c16a53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy&lt;/a&gt;, &lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt;, and &lt;a href=&quot;qsurfacedataproxy&quot;&gt;QSurfaceDataProxy&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy&lt;/a&gt; , &lt;a href=&quot;qscatterdataproxy&quot;&gt;QScatterDataProxy&lt;/a&gt; и &lt;a href=&quot;qsurfacedataproxy&quot;&gt;QSurfaceDataProxy&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="115325fad0a9cc718a786e5c9d605a6e282b1faa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbarseries&quot;&gt;QBarSeries&lt;/a&gt;, &lt;a href=&quot;qhorizontalbarseries&quot;&gt;QHorizontalBarSeries&lt;/a&gt;, &lt;a href=&quot;qhorizontalpercentbarseries&quot;&gt;QHorizontalPercentBarSeries&lt;/a&gt;, &lt;a href=&quot;qhorizontalstackedbarseries&quot;&gt;QHorizontalStackedBarSeries&lt;/a&gt;, &lt;a href=&quot;qpercentbarseries&quot;&gt;QPercentBarSeries&lt;/a&gt;, and &lt;a href=&quot;qstackedbarseries&quot;&gt;QStackedBarSeries&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbarseries&quot;&gt;QBarSeries&lt;/a&gt; , &lt;a href=&quot;qhorizontalbarseries&quot;&gt;QHorizontalBarSeries&lt;/a&gt; , &lt;a href=&quot;qhorizontalpercentbarseries&quot;&gt;QHorizontalPercentBarSeries&lt;/a&gt; , &lt;a href=&quot;qhorizontalstackedbarseries&quot;&gt;QHorizontalStackedBarSeries&lt;/a&gt; , &lt;a href=&quot;qpercentbarseries&quot;&gt;QPercentBarSeries&lt;/a&gt; и &lt;a href=&quot;qstackedbarseries&quot;&gt;QStackedBarSeries&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fedeb99e287f017d477a57c4006bdc656cbc5a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbarset&quot;&gt;QBarSet&lt;/a&gt; *QBarLegendMarker::barset()</source>
          <target state="translated">&lt;a href=&quot;qbarset&quot;&gt;QBarSet&lt;/a&gt; * QBarLegendMarker :: barset ()</target>
        </trans-unit>
        <trans-unit id="afacbae7a1cc6269401d7ded5afc70e78f9e6cdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbarset#QBarSet&quot;&gt;QBarSet&lt;/a&gt; &amp;amp;QBarSet::operator&amp;lt;&amp;lt;(const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbarset#QBarSet&quot;&gt;QBarSet&lt;/a&gt; &amp;amp; QBarSet :: operator &amp;lt;&amp;lt; (const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a00ffe33b1d91ca44bd7589c66529875bea6e946" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbarset#QBarSet&quot;&gt;QBarSet&lt;/a&gt; &amp;amp;QBarSet::operator&amp;lt;&amp;lt;(const &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93104dde7808748c8b449d3282683c219c26851d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator%=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator% = (T</target>
        </trans-unit>
        <trans-unit id="98c0f8f67f349dbf10ccb6289a17eff3d597bcec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator&amp;amp;=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator &amp;amp; = (T</target>
        </trans-unit>
        <trans-unit id="9b8f5b804fb66a0ffba06b81fbc3c7bd4367eceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator&amp;gt;&amp;gt;=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator &amp;gt;&amp;gt; = (T</target>
        </trans-unit>
        <trans-unit id="0e22b966bc0c35d19bfec47ecbdc4e849150e933" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator&amp;lt;&amp;lt;=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator &amp;lt;&amp;lt; = (T</target>
        </trans-unit>
        <trans-unit id="fd703548c99bdfaef7763c1b7510c1c7f1b6ddc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator*=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator * = (T</target>
        </trans-unit>
        <trans-unit id="9fc07a110ff3f975639d8015b48478707a021582" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator++(</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator ++ (</target>
        </trans-unit>
        <trans-unit id="db9649e1299658925af6f4a003e9c958747b4104" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator++()</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator ++ ()</target>
        </trans-unit>
        <trans-unit id="5a36068ee6f48dae85a7cf70cd6aea08d00c7a5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator++(int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7660e814b38f849af7a7d96cdceeae1f8797bf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator+=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator + = (T</target>
        </trans-unit>
        <trans-unit id="45e4f06bbab58a8e47c2a98b0d56deba33ca7652" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator--(</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator - (</target>
        </trans-unit>
        <trans-unit id="a214580668e5174b7364a9a39c3c286849efd323" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator--()</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator - ()</target>
        </trans-unit>
        <trans-unit id="f1b1f8e8e648656b30d4dd3652e0e5bcf5858315" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator--(int)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021be692a91ac4ff1dc7dbd185d04d9f104d2437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator-=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator - = (T</target>
        </trans-unit>
        <trans-unit id="a6862d8d0a43f9133d75a9a7c79444a83e3d5ea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator/=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator / = (T</target>
        </trans-unit>
        <trans-unit id="01ec7695711c545633c553a282411df5b3bac28c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator = (T</target>
        </trans-unit>
        <trans-unit id="886272d301b389cb59dde96bc390dfc09b22a5b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator^=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator ^ = (T</target>
        </trans-unit>
        <trans-unit id="69f6d91affdc0d99ec88254b1ad1a66b20018f77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QBEInteger::operator|=(T</source>
          <target state="translated">&lt;a href=&quot;qbeinteger#QBEInteger&quot;&gt;QBEInteger&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp; QBEInteger :: operator | = (T</target>
        </trans-unit>
        <trans-unit id="85e805f6af5b3ace78af850649fb4454c2643878" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; QVariant::toBitArray() const</source>
          <target state="translated">&lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; QVariant :: toBitArray () Const</target>
        </trans-unit>
        <trans-unit id="614a5f5e34a2ea94cc2465ec6eeecd0209a43a2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; supports &lt;code&gt;&amp;amp;&lt;/code&gt; (&lt;a href=&quot;qbitarray#operator-and&quot;&gt;AND&lt;/a&gt;), &lt;code&gt;|&lt;/code&gt; (&lt;a href=&quot;qbitarray#operator-7c&quot;&gt;OR&lt;/a&gt;), &lt;code&gt;^&lt;/code&gt; (&lt;a href=&quot;qbitarray#operator-5e&quot;&gt;XOR&lt;/a&gt;), &lt;code&gt;~&lt;/code&gt; (&lt;a href=&quot;qbitarray#operator-7e&quot;&gt;NOT&lt;/a&gt;), as well as &lt;code&gt;&amp;amp;=&lt;/code&gt;, &lt;code&gt;|=&lt;/code&gt;, and &lt;code&gt;^=&lt;/code&gt;. These operators work in the same way as the built-in C++ bitwise operators of the same name. For example:</source>
          <target state="translated">&lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; поддерживает &lt;code&gt;&amp;amp;&lt;/code&gt; ( &lt;a href=&quot;qbitarray#operator-and&quot;&gt;И&lt;/a&gt; ), &lt;code&gt;|&lt;/code&gt; ( &lt;a href=&quot;qbitarray#operator-7c&quot;&gt;OR&lt;/a&gt; ), &lt;code&gt;^&lt;/code&gt; ( &lt;a href=&quot;qbitarray#operator-5e&quot;&gt;XOR&lt;/a&gt; ), &lt;code&gt;~&lt;/code&gt; ( &lt;a href=&quot;qbitarray#operator-7e&quot;&gt;NOT&lt;/a&gt; ), а также &lt;code&gt;&amp;amp;=&lt;/code&gt; , &lt;code&gt;|=&lt;/code&gt; и &lt;code&gt;^=&lt;/code&gt; . Эти операторы работают так же, как и одноименные встроенные побитовые операторы C ++. Например:</target>
        </trans-unit>
        <trans-unit id="2c839c279e79e1b43e97e7b6ce3e08cd991048de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; uses 0-based indexes, just like C++ arrays. To access the bit at a particular index position, you can use operator[](). On non-const bit arrays, operator[]() returns a reference to a bit that can be used on the left side of an assignment. For example:</source>
          <target state="translated">&lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; использует индексы на основе 0, как и массивы C ++. Чтобы получить доступ к биту в определенной позиции индекса, вы можете использовать operator [] (). В неконстантных битовых массивах operator [] () возвращает ссылку на бит, который можно использовать в левой части присваивания. Например:</target>
        </trans-unit>
        <trans-unit id="e724e2865741239d11ada1c85025e79772c913f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;QBitArray::operator&amp;amp;=(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp; QBitArray :: operator &amp;amp; = (const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dadfcb27345754e9eb55ae8f84f1745bc25d0295" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;QBitArray::operator=(&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp; QBitArray :: operator = ( &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="89a63349f62aaa5dd2e85280758c049b2079d3a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;QBitArray::operator=(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp; QBitArray :: operator = (const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="518824c287292cc947f53e607e5b4dc6aeecc980" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;QBitArray::operator^=(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp; QBitArray :: operator ^ = (const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9bba072d0e564e988bad63baa26d6b980ab09d8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;QBitArray::operator|=(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp; QBitArray :: operator | = (const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b7c00384eca3022348b478a132eba8a4a46e56ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; QBitArray::operator&amp;amp;(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; QBitArray :: operator &amp;amp; (const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e04c1c5f06bb92169070384f226512d567a2dc67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; QBitArray::operator^(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; QBitArray :: operator ^ (const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="200efefb2d41b0423c2937a6e9a44a94c1c8a5a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; QBitArray::operator|(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; QBitArray :: operator | (const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="386d5e7a77a02dd4cb9d59c01628d717195a450a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; QBitArray::operator~() const</source>
          <target state="translated">&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; QBitArray :: operator ~ () const</target>
        </trans-unit>
        <trans-unit id="57d45373d8d6054bf4130e4ef4f7064e56defaff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt;operator&amp;amp;(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4810f5ceef34a3daf8da19160e692b7d697adb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt;operator^(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5819bac76e8f11ff0e1cfdea4099c8fd4d54bc61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt;operator|(const &lt;a href=&quot;qbitarray#QBitArray&quot;&gt;QBitArray&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071fc747094eae2d100e61ae54d648d0990f5f67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QCursor::bitmap(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3005dd6f7c976d0c06ec47e07c8649e45561e8a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QCursor::bitmap() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63284fc4592a52568b081ca1d5ddb1caf838fdfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QCursor::mask(</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c67012bed7abb0e6e2050a9d7f83f013eaa0bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QCursor::mask() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197ef87d816422ad23fa38479a108726b2e9eab1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QPixmap::createHeuristicMask(bool</source>
          <target state="translated">&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QPixmap :: createHeuristicMask (bool</target>
        </trans-unit>
        <trans-unit id="476b636778f77483889b70cecb7d3b63b3714bb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QPixmap::createMaskFromColor(const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QPixmap :: createMaskFromColor (const &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cff1feb3b172d4622684c7028781290afa120c04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QPixmap::mask() const</source>
          <target state="translated">&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; QPixmap :: mask () const</target>
        </trans-unit>
        <trans-unit id="52e3970c74764029db676b19d515e865f105ca09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; is a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; subclass ensuring a depth of 1, except for null objects which have a depth of 0. If a pixmap with a depth greater than 1 is assigned to a bitmap, the bitmap will be dithered automatically.</source>
          <target state="translated">&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; - это подкласс &lt;a href=&quot;qpixmap&quot;&gt;QPixmap,&lt;/a&gt; обеспечивающий глубину 1, за исключением пустых объектов, которые имеют глубину 0. Если растровое изображение с глубиной больше 1 назначено растровому изображению, растровое изображение будет автоматически смещено.</target>
        </trans-unit>
        <trans-unit id="d1e699da562dcb8cde18153c968f5a061ea0972b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap#QBitmap&quot;&gt;QBitmap&lt;/a&gt; &amp;amp;QBitmap::operator=(const &lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitmap#QBitmap&quot;&gt;QBitmap&lt;/a&gt; &amp;amp; QBitmap :: operator = (const &lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f1fa7a365f00094d71ffda5d5ce4473d7604800a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbitmap#QBitmap&quot;&gt;QBitmap&lt;/a&gt; QBitmap::transformed(const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbitmap#QBitmap&quot;&gt;QBitmap&lt;/a&gt; QBitmap :: transformed (const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="522becbb61ebed59307b6fb5faa9feae3d88d507" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetooth#AttAccessConstraint-enum&quot;&gt;QBluetooth::AttAccessConstraints&lt;/a&gt; QLowEnergyCharacteristicData::readConstraints() const</source>
          <target state="translated">&lt;a href=&quot;qbluetooth#AttAccessConstraint-enum&quot;&gt;QBluetooth :: AttAccessConstraints&lt;/a&gt; QLowEnergyCharacteristicData :: readConstraints () const</target>
        </trans-unit>
        <trans-unit id="3d25035e7073f62ed9b272d92882e643377af364" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetooth#AttAccessConstraint-enum&quot;&gt;QBluetooth::AttAccessConstraints&lt;/a&gt; QLowEnergyCharacteristicData::writeConstraints() const</source>
          <target state="translated">&lt;a href=&quot;qbluetooth#AttAccessConstraint-enum&quot;&gt;QBluetooth :: AttAccessConstraints&lt;/a&gt; QLowEnergyCharacteristicData :: writeConstraints () const</target>
        </trans-unit>
        <trans-unit id="2bf957a6b78a54b1a1d65ccd708a708b9bad1c23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetooth#AttAccessConstraint-enum&quot;&gt;QBluetooth::AttAccessConstraints&lt;/a&gt; QLowEnergyDescriptorData::readConstraints() const</source>
          <target state="translated">&lt;a href=&quot;qbluetooth#AttAccessConstraint-enum&quot;&gt;QBluetooth :: AttAccessConstraints&lt;/a&gt; QLowEnergyDescriptorData :: readConstraints () const</target>
        </trans-unit>
        <trans-unit id="a5f1f8bdef1ac353686a828509200b12f004ecb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetooth#AttAccessConstraint-enum&quot;&gt;QBluetooth::AttAccessConstraints&lt;/a&gt; QLowEnergyDescriptorData::writeConstraints() const</source>
          <target state="translated">&lt;a href=&quot;qbluetooth#AttAccessConstraint-enum&quot;&gt;QBluetooth :: AttAccessConstraints&lt;/a&gt; QLowEnergyDescriptorData :: writeConstraints () const</target>
        </trans-unit>
        <trans-unit id="409ba32c9a33721b257572e109246d302d625fe1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetooth#QLowEnergyHandle-typedef&quot;&gt;QLowEnergyHandle&lt;/a&gt; QLowEnergyCharacteristic::handle() const</source>
          <target state="translated">&lt;a href=&quot;qbluetooth#QLowEnergyHandle-typedef&quot;&gt;QLowEnergyHandle&lt;/a&gt; QLowEnergyCharacteristic :: handle () const</target>
        </trans-unit>
        <trans-unit id="ab37b0bf5b639bc8326296a7b5e5b0049ba4d32e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetooth#QLowEnergyHandle-typedef&quot;&gt;QLowEnergyHandle&lt;/a&gt; QLowEnergyDescriptor::handle() const</source>
          <target state="translated">&lt;a href=&quot;qbluetooth#QLowEnergyHandle-typedef&quot;&gt;QLowEnergyHandle&lt;/a&gt; QLowEnergyDescriptor :: handle () const</target>
        </trans-unit>
        <trans-unit id="cb0ad38b5cf6588836825958844dc4d76e53cd40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::SecurityFlags&lt;/a&gt; QBluetoothServer::securityFlags() const</source>
          <target state="translated">&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: SecurityFlags&lt;/a&gt; QBluetoothServer :: securityFlags () const</target>
        </trans-unit>
        <trans-unit id="8197e380af70fd870e461660ba3700dd985bf5cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::SecurityFlags&lt;/a&gt; QBluetoothSocket::preferredSecurityFlags() const</source>
          <target state="translated">&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: SecurityFlags&lt;/a&gt; QBluetoothSocket :: preferredSecurityFlags () const</target>
        </trans-unit>
        <trans-unit id="bd4b7e3329e1d8fd8fbedea3c4c5417dbfbf432f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; AddressInfo::address</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; AddressInfo :: address</target>
        </trans-unit>
        <trans-unit id="473c05e9881d4c71245dae8732633bdb87b354f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothDeviceInfo::address() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothDeviceInfo :: address () const</target>
        </trans-unit>
        <trans-unit id="23c83a07b3b9ca7920325717cad1b1ae8b2edf55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothHostInfo::address() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothHostInfo :: address () const</target>
        </trans-unit>
        <trans-unit id="2bd3583bd81097a895fdc35d0ac5a4e5b4ca4bdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothLocalDevice::address() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothLocalDevice :: address () const</target>
        </trans-unit>
        <trans-unit id="10e9dc9cdb1bc6733e8ffd6ded3d7333c571678e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothServer::serverAddress() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothServer :: serverAddress () const</target>
        </trans-unit>
        <trans-unit id="88fffe871baecb8071ab19e6d357152813ad8425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothServiceDiscoveryAgent::remoteAddress() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothServiceDiscoveryAgent :: remoteAddress () const</target>
        </trans-unit>
        <trans-unit id="07a8253ff440a84375cf0e981bf2c056c8ca6f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothSocket::localAddress() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothSocket :: localAddress () const</target>
        </trans-unit>
        <trans-unit id="0010212b04270400c7e76564ad74dc419e029f1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothSocket::peerAddress() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothSocket :: peerAddress () const</target>
        </trans-unit>
        <trans-unit id="e54094dc538755ccbf530e544b368235933b68fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothTransferRequest::address() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QBluetoothTransferRequest :: address () const</target>
        </trans-unit>
        <trans-unit id="2dc3b383659b96b8b89b332789dfc9fac76ac64e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QLowEnergyController::localAddress() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QLowEnergyController :: localAddress () const</target>
        </trans-unit>
        <trans-unit id="68e326a5ef597d32e2eb121bae5233cba42dff8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QLowEnergyController::remoteAddress() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; QLowEnergyController :: remoteAddress () const</target>
        </trans-unit>
        <trans-unit id="a78917cdd1ab643cf0fcf1de26c980392b6fc9ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothaddress#QBluetoothAddress&quot;&gt;QBluetoothAddress&lt;/a&gt; &amp;amp;QBluetoothAddress::operator=(const &lt;a href=&quot;qbluetoothaddress#QBluetoothAddress&quot;&gt;QBluetoothAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothaddress#QBluetoothAddress&quot;&gt;QBluetoothAddress&lt;/a&gt; &amp;amp; QBluetoothAddress :: operator = (const &lt;a href=&quot;qbluetoothaddress#QBluetoothAddress&quot;&gt;QBluetoothAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6f0666888b6565c766f797b7faa99ce7ebe8e8e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothdevicediscoveryagent#Error-enum&quot;&gt;QBluetoothDeviceDiscoveryAgent::Error&lt;/a&gt; QBluetoothDeviceDiscoveryAgent::error() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdevicediscoveryagent#Error-enum&quot;&gt;QBluetoothDeviceDiscoveryAgent :: Error&lt;/a&gt; QBluetoothDeviceDiscoveryAgent :: error () const</target>
        </trans-unit>
        <trans-unit id="f867a532e187f70f197f1352e3c5498ecfae8ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothdeviceinfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; QBluetoothServiceInfo::device() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdeviceinfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; QBluetoothServiceInfo :: device () const</target>
        </trans-unit>
        <trans-unit id="d354b251b6db442922c16d2d4ed838c6923653b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothdeviceinfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; object and this are identical.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdeviceinfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; и это идентичны.</target>
        </trans-unit>
        <trans-unit id="1a80467cd10e428e256e8485d401e3c0e280daef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothdeviceinfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; provides information about a Bluetooth device's name, address and class of device.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdeviceinfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; предоставляет информацию об имени, адресе и классе устройства Bluetooth.</target>
        </trans-unit>
        <trans-unit id="069b3a08bdf1e5529daa02d1e379132eebbf086d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothdeviceinfo#CoreConfiguration-enum&quot;&gt;QBluetoothDeviceInfo::CoreConfigurations&lt;/a&gt; QBluetoothDeviceInfo::coreConfigurations() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdeviceinfo#CoreConfiguration-enum&quot;&gt;QBluetoothDeviceInfo :: CoreConfigurations&lt;/a&gt; QBluetoothDeviceInfo :: coreConfigurations () const</target>
        </trans-unit>
        <trans-unit id="53623d1279fd0fbd9fd59d8f7da6d839a244c7e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothdeviceinfo#MajorDeviceClass-enum&quot;&gt;QBluetoothDeviceInfo::MajorDeviceClass&lt;/a&gt; QBluetoothDeviceInfo::majorDeviceClass() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdeviceinfo#MajorDeviceClass-enum&quot;&gt;QBluetoothDeviceInfo :: MajorDeviceClass&lt;/a&gt; QBluetoothDeviceInfo :: majorDeviceClass () const</target>
        </trans-unit>
        <trans-unit id="4045ad7d1b56f6680ec31b301801c55a3458b76a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothdeviceinfo#QBluetoothDeviceInfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; &amp;amp;QBluetoothDeviceInfo::operator=(const &lt;a href=&quot;qbluetoothdeviceinfo#QBluetoothDeviceInfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdeviceinfo#QBluetoothDeviceInfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; &amp;amp; QBluetoothDeviceInfo :: operator = (const &lt;a href=&quot;qbluetoothdeviceinfo#QBluetoothDeviceInfo&quot;&gt;QBluetoothDeviceInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e683e3af89d541b26df9078b16aeb65d2410b4c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothdeviceinfo#ServiceClass-enum&quot;&gt;QBluetoothDeviceInfo::ServiceClasses&lt;/a&gt; QBluetoothDeviceInfo::serviceClasses() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdeviceinfo#ServiceClass-enum&quot;&gt;QBluetoothDeviceInfo :: ServiceClasses&lt;/a&gt; QBluetoothDeviceInfo :: serviceClasses () const</target>
        </trans-unit>
        <trans-unit id="ebda4720517a4059bd7f4bbdb4dc9636d21dd18f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothhostinfo#QBluetoothHostInfo&quot;&gt;QBluetoothHostInfo&lt;/a&gt; &amp;amp;QBluetoothHostInfo::operator=(const &lt;a href=&quot;qbluetoothhostinfo#QBluetoothHostInfo&quot;&gt;QBluetoothHostInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothhostinfo#QBluetoothHostInfo&quot;&gt;QBluetoothHostInfo&lt;/a&gt; &amp;amp; QBluetoothHostInfo :: operator = (const &lt;a href=&quot;qbluetoothhostinfo#QBluetoothHostInfo&quot;&gt;QBluetoothHostInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c88212ba343ee875be70b6e15f6ad8e033cee5b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothlocaldevice&quot;&gt;QBluetoothLocalDevice&lt;/a&gt; provides functions for getting and setting the state of local Bluetooth devices.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothlocaldevice&quot;&gt;QBluetoothLocalDevice&lt;/a&gt; предоставляет функции для получения и настройки состояния локальных устройств Bluetooth.</target>
        </trans-unit>
        <trans-unit id="fdbca26974d89d9afc144bb04750f3ee38801543" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothlocaldevice#HostMode-enum&quot;&gt;QBluetoothLocalDevice::HostMode&lt;/a&gt; QBluetoothLocalDevice::hostMode() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothlocaldevice#HostMode-enum&quot;&gt;QBluetoothLocalDevice :: HostMode&lt;/a&gt; QBluetoothLocalDevice :: hostMode () const</target>
        </trans-unit>
        <trans-unit id="aebeb637d0c4cf33fab8a70af9f0ef10ea5ae2b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;QBluetoothLocalDevice::Pairing&lt;/a&gt; QBluetoothLocalDevice::pairingStatus(const &lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;QBluetoothLocalDevice :: Pairing&lt;/a&gt; QBluetoothLocalDevice :: pairingStatus (const &lt;a href=&quot;qbluetoothaddress&quot;&gt;QBluetoothAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9cef6008ec6d9dc5870d34168b1b941c5bc03b3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserver&quot;&gt;QBluetoothServer&lt;/a&gt; is used to implement Bluetooth services over RFCOMM or L2cap.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserver&quot;&gt;QBluetoothServer&lt;/a&gt; используется для реализации служб Bluetooth через RFCOMM или L2cap.</target>
        </trans-unit>
        <trans-unit id="90ddff6e8ea95aefaa9f230634cebae63ca3f95b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserver#Error-enum&quot;&gt;QBluetoothServer::Error&lt;/a&gt; QBluetoothServer::error() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserver#Error-enum&quot;&gt;QBluetoothServer :: Error&lt;/a&gt; QBluetoothServer :: error () const</target>
        </trans-unit>
        <trans-unit id="243ac40d380f342996478cdbe1157c16767e86d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothservicediscoveryagent#Error-enum&quot;&gt;QBluetoothServiceDiscoveryAgent::Error&lt;/a&gt; QBluetoothServiceDiscoveryAgent::error() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothservicediscoveryagent#Error-enum&quot;&gt;QBluetoothServiceDiscoveryAgent :: Error&lt;/a&gt; QBluetoothServiceDiscoveryAgent :: error () const</target>
        </trans-unit>
        <trans-unit id="51ab65932139279c221885d50dd2da6848704182" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; QBluetoothServer::listen(const &lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; QBluetoothServer :: listen (const &lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0647fb7a844203fa8b903689bd933600e398ed92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; is not a value type in the traditional sense. All copies of the same service info object share the same data as they do not detach upon changing them. This ensures that two copies can (de)register the same Bluetooth service.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; не является типом значения в традиционном смысле. Все копии одного и того же информационного объекта службы используют одни и те же данные, поскольку они не отключаются при их изменении. Это гарантирует, что две копии могут (де) зарегистрировать одну и ту же службу Bluetooth.</target>
        </trans-unit>
        <trans-unit id="5172a735c4b916772a2c2deb51487ca3c335d83c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; provides information about a service offered by a Bluetooth device. In addition it can be used to register new services on the local device. Note that such a registration only affects the Bluetooth SDP entries. Any server listening for incoming connections (e.g an RFCOMM server) must be started before &lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;registerService&lt;/a&gt;() is called. Deregistration must happen in the reverse order.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; предоставляет информацию об услуге, предлагаемой устройством Bluetooth. Кроме того, его можно использовать для регистрации новых служб на локальном устройстве. Обратите внимание, что такая регистрация влияет только на записи Bluetooth SDP. Любой сервер, прослушивающий входящие соединения (например, сервер RFCOMM), должен быть запущен до &lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;вызова registerService&lt;/a&gt; (). Снятие с регистрации должно происходить в обратном порядке.</target>
        </trans-unit>
        <trans-unit id="1e48d82705ee504fd75967ca0856e8e9f8cf0923" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;L2CAP&lt;/a&gt; is a low level datagram-oriented Bluetooth socket. Android does not support &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;L2CAP&lt;/a&gt; for socket connections.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;L2CAP&lt;/a&gt; - это низкоуровневый Bluetooth-сокет, ориентированный на датаграммы. Android не поддерживает &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;L2CAP&lt;/a&gt; для сокетов.</target>
        </trans-unit>
        <trans-unit id="04a76fc480160b3783848f1d3cc7d69ae58930c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo::Protocol&lt;/a&gt; QBluetoothServer::serverType() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo :: Protocol&lt;/a&gt; QBluetoothServer :: serverType () const</target>
        </trans-unit>
        <trans-unit id="096c8bbeed71d93b977101cad31a9555fe1f2abd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo::Protocol&lt;/a&gt; QBluetoothServiceInfo::socketProtocol() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo :: Protocol&lt;/a&gt; QBluetoothServiceInfo :: socketProtocol () const</target>
        </trans-unit>
        <trans-unit id="87bade9e6e100e8914456d952c93e864eb28057b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo::Protocol&lt;/a&gt; QBluetoothSocket::socketType() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo :: Protocol&lt;/a&gt; QBluetoothSocket :: socketType () const</target>
        </trans-unit>
        <trans-unit id="34a4ecdf727f64526fbe649843a6c644f3ed84ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;RFCOMM&lt;/a&gt; is a reliable, stream-oriented socket. RFCOMM sockets emulate an RS-232 serial port.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;RFCOMM&lt;/a&gt; - надежный поточно-ориентированный сокет. Сокеты RFCOMM эмулируют последовательный порт RS-232.</target>
        </trans-unit>
        <trans-unit id="8d60f3578df2a04707b59857f4573de20d1c0791" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo#QBluetoothServiceInfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; &amp;amp;QBluetoothServiceInfo::operator=(const &lt;a href=&quot;qbluetoothserviceinfo#QBluetoothServiceInfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo#QBluetoothServiceInfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; &amp;amp; QBluetoothServiceInfo :: operator = (const &lt;a href=&quot;qbluetoothserviceinfo#QBluetoothServiceInfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f100b3c104431ad344c7c47f516828fe37d8aa58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothserviceinfo-sequence&quot;&gt;QBluetoothServiceInfo::Sequence&lt;/a&gt; QBluetoothServiceInfo::protocolDescriptor(&lt;a href=&quot;qbluetoothuuid#ProtocolUuid-enum&quot;&gt;QBluetoothUuid::ProtocolUuid&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothserviceinfo-sequence&quot;&gt;QBluetoothServiceInfo :: Sequence&lt;/a&gt; QBluetoothServiceInfo :: protocolDescriptor ( &lt;a href=&quot;qbluetoothuuid#ProtocolUuid-enum&quot;&gt;QBluetoothUuid :: ProtocolUuid&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ace554d81f3f30673ecba0e5e059217fb710faf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; *QBluetoothServer::nextPendingConnection()</source>
          <target state="translated">&lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; * QBluetoothServer :: nextPendingConnection ()</target>
        </trans-unit>
        <trans-unit id="4e0a844d3cc372b29621dc1ae3245a3356260c06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; supports two socket types, &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;L2CAP&lt;/a&gt; and &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;RFCOMM&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; поддерживает два типа сокетов, &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;L2CAP&lt;/a&gt; и &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;RFCOMM&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="45d93e3b834447e4c3bad147a8dcf7b0065b903b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket::SocketError&lt;/a&gt; QBluetoothSocket::error() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket :: SocketError&lt;/a&gt; QBluetoothSocket :: error () const</target>
        </trans-unit>
        <trans-unit id="7099ae905fbde545b711a1f979534ba891831c41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;QBluetoothSocket::SocketState&lt;/a&gt; QBluetoothSocket::state() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;QBluetoothSocket :: SocketState&lt;/a&gt; QBluetoothSocket :: state () const</target>
        </trans-unit>
        <trans-unit id="70aa4319a2eed253e88b6c25eb6e153f094841c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothtransfermanager&quot;&gt;QBluetoothTransferManager&lt;/a&gt; *QBluetoothTransferReply::manager() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothtransfermanager&quot;&gt;QBluetoothTransferManager&lt;/a&gt; * QBluetoothTransferReply :: manager () const</target>
        </trans-unit>
        <trans-unit id="e369a3c0e439b19dc67dd5aca3091a6cf26f2163" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothtransfermanager&quot;&gt;QBluetoothTransferManager&lt;/a&gt; uses OBEX to send put commands to remote devices. A typical OBEX transfer is initialized as follows:</source>
          <target state="translated">&lt;a href=&quot;qbluetoothtransfermanager&quot;&gt;QBluetoothTransferManager&lt;/a&gt; использует OBEX для отправки команд ввода на удаленные устройства. Типичная передача OBEX инициализируется следующим образом:</target>
        </trans-unit>
        <trans-unit id="bfe3ad8e878081b3fb8ed2de4a8d291ba482fdc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt; *QBluetoothTransferManager::put(const &lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt; * QBluetoothTransferManager :: put (const &lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c1b7a1979d41b042ea6cd41fb73249d70b48c5d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; QBluetoothTransferReply::request() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; QBluetoothTransferReply :: request () const</target>
        </trans-unit>
        <trans-unit id="731f6d181168a5060624b29c566507885464cb47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; is part of the Bluetooth Transfer API and is the class holding the information necessary to initiate a transfer over Bluetooth.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; является частью API передачи Bluetooth и представляет собой класс, содержащий информацию, необходимую для инициации передачи по Bluetooth.</target>
        </trans-unit>
        <trans-unit id="10d5129af6584ab572c6a44847f2d80065b496f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothtransferrequest#QBluetoothTransferRequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; &amp;amp;QBluetoothTransferRequest::operator=(const &lt;a href=&quot;qbluetoothtransferrequest#QBluetoothTransferRequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbluetoothtransferrequest#QBluetoothTransferRequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; &amp;amp; QBluetoothTransferRequest :: operator = (const &lt;a href=&quot;qbluetoothtransferrequest#QBluetoothTransferRequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1518263c6dfb35fbfa07b578b965c87bd31d70dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QBluetoothDeviceInfo::deviceUuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QBluetoothDeviceInfo :: deviceUuid () const</target>
        </trans-unit>
        <trans-unit id="f72453cde63ecf4cc8b38314fcd48fb20ddd9e3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QBluetoothServiceInfo::serviceUuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QBluetoothServiceInfo :: serviceUuid () const</target>
        </trans-unit>
        <trans-unit id="ddb4a6346bb9096ab9ffb257f42546b7470d773c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyCharacteristic::uuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyCharacteristic :: uuid () const</target>
        </trans-unit>
        <trans-unit id="cc02cb46120c6876bbb8ff98ab5e9b2f26d4620f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyCharacteristicData::uuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyCharacteristicData :: uuid () const</target>
        </trans-unit>
        <trans-unit id="e87be70810f3bef50ddc7eb7cc3630b691790dcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyController::remoteDeviceUuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyController :: remoteDeviceUuid () const</target>
        </trans-unit>
        <trans-unit id="8e64ef42387b55d3a2dde1851628a963789b10e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyDescriptor::uuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyDescriptor :: uuid () const</target>
        </trans-unit>
        <trans-unit id="3b0fff5f1fee940171c4f1dca598f037e19b1503" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyDescriptorData::uuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyDescriptorData :: uuid () const</target>
        </trans-unit>
        <trans-unit id="c2b6c6976ee2753151564ff1ce8f8cdf2f3e80ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyService::serviceUuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyService :: serviceUuid () const</target>
        </trans-unit>
        <trans-unit id="f5b14163629a6668db94aecbe16298078153f523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyServiceData::uuid() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid&quot;&gt;QBluetoothUuid&lt;/a&gt; QLowEnergyServiceData :: uuid () const</target>
        </trans-unit>
        <trans-unit id="92e2f91b07982a8948dd06848c32cd4af4cfae51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbluetoothuuid#DescriptorType-enum&quot;&gt;QBluetoothUuid::DescriptorType&lt;/a&gt; QLowEnergyDescriptor::type() const</source>
          <target state="translated">&lt;a href=&quot;qbluetoothuuid#DescriptorType-enum&quot;&gt;QBluetoothUuid :: DescriptorType&lt;/a&gt; QLowEnergyDescriptor :: type () const</target>
        </trans-unit>
        <trans-unit id="46424e8c838f09d167b10a454e5e51d69f62f54c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; also includes two margin widths:</source>
          <target state="translated">&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; также включает две ширины полей:</target>
        </trans-unit>
        <trans-unit id="bbec89e64ae7325d00f38e882a5d439866cb3820" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; takes the space it gets (from its parent layout or from the &lt;a href=&quot;qlayout#parentWidget&quot;&gt;parentWidget&lt;/a&gt;()), divides it up into a row of boxes, and makes each managed widget fill one box.</source>
          <target state="translated">&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; берет пространство, которое он получает (из своего родительского макета или из &lt;a href=&quot;qlayout#parentWidget&quot;&gt;parentWidget&lt;/a&gt; ()), делит его на ряд ящиков и заставляет каждый управляемый виджет заполнять одно поле.</target>
        </trans-unit>
        <trans-unit id="9c1170965e232efa1f31b6444a7a91b3a5ac6a73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt;, &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;, &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;, and &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; , &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; , &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; и &lt;a href=&quot;qstackedlayout&quot;&gt;QStackedLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f7def93c81eb5ac5734bb2194c5530cfe10e52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;QBoxLayout::Direction&lt;/a&gt; QBoxLayout::direction() const</source>
          <target state="translated">&lt;a href=&quot;qboxlayout#Direction-enum&quot;&gt;QBoxLayout :: Direction&lt;/a&gt; QBoxLayout :: direction () const</target>
        </trans-unit>
        <trans-unit id="8cd2b6ec3c565ae1901be139b658c60b5c430541" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#addLayout&quot;&gt;addLayout&lt;/a&gt;() to add a box containing another &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; to the row and set that layout's stretch factor.</source>
          <target state="translated">&lt;a href=&quot;qboxlayout#addLayout&quot;&gt;addLayout&lt;/a&gt; (), чтобы добавить блок, содержащий еще один &lt;a href=&quot;qlayout&quot;&gt;QLayout,&lt;/a&gt; в строку и установить коэффициент растяжения этого макета.</target>
        </trans-unit>
        <trans-unit id="9fed6a9f486c6c713b97cc3b2199d4205420d544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#addSpacing&quot;&gt;addSpacing()&lt;/a&gt;, &lt;a href=&quot;qboxlayout#addStretch&quot;&gt;addStretch()&lt;/a&gt;, &lt;a href=&quot;qboxlayout#insertSpacing&quot;&gt;insertSpacing()&lt;/a&gt;, &lt;a href=&quot;qboxlayout#insertStretch&quot;&gt;insertStretch()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qboxlayout#addSpacing&quot;&gt;addSpacing ()&lt;/a&gt; , &lt;a href=&quot;qboxlayout#addStretch&quot;&gt;addStretch ()&lt;/a&gt; , &lt;a href=&quot;qboxlayout#insertSpacing&quot;&gt;insertSpacing ()&lt;/a&gt; , &lt;a href=&quot;qboxlayout#insertStretch&quot;&gt;insertStretch ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2b8e261e128bffb948780016a247345f042761c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#addSpacing&quot;&gt;addSpacing&lt;/a&gt;() to create an empty box; this is one of the functions you use to create nice and spacious dialogs. See below for ways to set margins.</source>
          <target state="translated">&lt;a href=&quot;qboxlayout#addSpacing&quot;&gt;addSpacing&lt;/a&gt; () для создания пустого поля; это одна из функций, которые вы используете для создания красивых и объемных диалогов. См. Ниже способы установки полей.</target>
        </trans-unit>
        <trans-unit id="5a0c7717c4be2f80aad0f28a348ef090b6188a84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#addStretch&quot;&gt;addStretch&lt;/a&gt;() to create an empty, stretchable box.</source>
          <target state="translated">&lt;a href=&quot;qboxlayout#addStretch&quot;&gt;addStretch&lt;/a&gt; (), чтобы создать пустой растягиваемый блок.</target>
        </trans-unit>
        <trans-unit id="0062baeb5a83106d6d37e64eb75f652c66c814b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#addWidget&quot;&gt;addWidget()&lt;/a&gt;, &lt;a href=&quot;qboxlayout#insertWidget&quot;&gt;insertWidget()&lt;/a&gt;, &lt;a href=&quot;qboxlayout#setStretchFactor&quot;&gt;setStretchFactor()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qboxlayout#addWidget&quot;&gt;addWidget ()&lt;/a&gt; , &lt;a href=&quot;qboxlayout#insertWidget&quot;&gt;insertWidget ()&lt;/a&gt; , &lt;a href=&quot;qboxlayout#setStretchFactor&quot;&gt;setStretchFactor ()&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1acfaa8210478d3760a77bb79c7496c5d7006fca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#addWidget&quot;&gt;addWidget&lt;/a&gt;() to add a widget to the &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; and set the widget's stretch factor. (The stretch factor is along the row of boxes.)</source>
          <target state="translated">&lt;a href=&quot;qboxlayout#addWidget&quot;&gt;addWidget&lt;/a&gt; (), чтобы добавить виджет в &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; и установить коэффициент растяжения виджета. (Коэффициент растяжения указан в ряду ящиков.)</target>
        </trans-unit>
        <trans-unit id="00976f46d3e3dd4b79990b2fe9abdc9b884bebf1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#addWidget&quot;&gt;addWidget&lt;/a&gt;() to add a widget to the QBoxLayout and set the widget's stretch factor. (The stretch factor is along the row of boxes.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094b1741469e178dfd71550eb3f0f6ff3283ab33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxlayout#setSpacing&quot;&gt;setSpacing&lt;/a&gt;() sets the width between neighboring boxes. (You can use &lt;a href=&quot;qboxlayout#addSpacing&quot;&gt;addSpacing&lt;/a&gt;() to get more space at a particular spot.)</source>
          <target state="translated">&lt;a href=&quot;qboxlayout#setSpacing&quot;&gt;setSpacing&lt;/a&gt; () устанавливает ширину между соседними полями. (Вы можете использовать &lt;a href=&quot;qboxlayout#addSpacing&quot;&gt;addSpacing&lt;/a&gt; (), чтобы получить больше места в определенном месте.)</target>
        </trans-unit>
        <trans-unit id="8f3d2fef37c5d51254755ed4ea12f58ad750a449" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxset#QBoxSet&quot;&gt;QBoxSet&lt;/a&gt; &amp;amp;QBoxSet::operator&amp;lt;&amp;lt;(const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qboxset#QBoxSet&quot;&gt;QBoxSet&lt;/a&gt; &amp;amp; QBoxSet :: operator &amp;lt;&amp;lt; (const &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="066c0c729fe3775484b5be304e092ee23d58d2f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qboxset#QBoxSet&quot;&gt;QBoxSet&lt;/a&gt; &amp;amp;QBoxSet::operator&amp;lt;&amp;lt;(const &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c696987a621596494600d45de9a2d4d6c201426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; (</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; (</target>
        </trans-unit>
        <trans-unit id="741f49ee9f5acefa325fea997851974cefdfaa57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAbstractAxis::labelsBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAbstractAxis :: labelsBrush () const</target>
        </trans-unit>
        <trans-unit id="7e1574ade6a26ffcd65e1a796226f305fb0c8b59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAbstractAxis::shadesBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAbstractAxis :: shadesBrush () const</target>
        </trans-unit>
        <trans-unit id="ed0b140250c7b72cd1660bbb2fad620d2e82e5ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAbstractAxis::titleBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAbstractAxis :: titleBrush () const</target>
        </trans-unit>
        <trans-unit id="d77f1655f0cf600173b61e06888f9364c0b63eae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAbstractGraphicsShapeItem::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAbstractGraphicsShapeItem :: brush () const</target>
        </trans-unit>
        <trans-unit id="6269eaa949d53fe1c0d2ff30d1701977bebfe32b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAreaSeries::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QAreaSeries :: brush () const</target>
        </trans-unit>
        <trans-unit id="6b95bc5bc513b8e21ce793ee3e902522de31c3fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QBarSet::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QBarSet :: brush () const</target>
        </trans-unit>
        <trans-unit id="46c2d29803ad3bff2e72ddc9e476e49979360e65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QBarSet::labelBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QBarSet :: labelBrush () const</target>
        </trans-unit>
        <trans-unit id="3db77c6aa4885ed476cbb0da6c4e90eea65966a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QBoxSet::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QBoxSet :: brush () const</target>
        </trans-unit>
        <trans-unit id="6a4e7d77856462156097889250e1625ac8a36963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QChart::backgroundBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QChart :: backgroundBrush () const</target>
        </trans-unit>
        <trans-unit id="ba3dae28522a429347a5e9ad35b34c5187855842" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QChart::plotAreaBackgroundBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QChart :: plotAreaBackgroundBrush () const</target>
        </trans-unit>
        <trans-unit id="502c80044d90b77e432ff1f2e7d7d604444974a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QChart::titleBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QChart :: titleBrush () const</target>
        </trans-unit>
        <trans-unit id="e0a5c0ffda416aba82fc86f81b40db87b07c6ae6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QLegend::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QLegend :: brush () const</target>
        </trans-unit>
        <trans-unit id="fef96df101d8a68cd127660c28c427726d86f1c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QLegend::labelBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QLegend :: labelBrush () const</target>
        </trans-unit>
        <trans-unit id="1010c5d20043c0fa40264f6ff66889e301e38562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QLegendMarker::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QLegendMarker :: brush () const</target>
        </trans-unit>
        <trans-unit id="be4254457b08957316afa18670ba0ddee3a686a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QLegendMarker::labelBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QLegendMarker :: labelBrush () const</target>
        </trans-unit>
        <trans-unit id="b51cde38eb668f733691362520af0f28653bc8e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QListWidgetItem::background() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QListWidgetItem :: background () const</target>
        </trans-unit>
        <trans-unit id="d94ee546fcc473847a5c7b7d48c5aade118a52a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QListWidgetItem::foreground() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QListWidgetItem :: foreground () const</target>
        </trans-unit>
        <trans-unit id="8fa26b8cde432841f4432d839f9b041a9445ff4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QPaintEngineState::backgroundBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QPaintEngineState :: backgroundBrush () const</target>
        </trans-unit>
        <trans-unit id="2583bc859980ea628063da96af0b505c6f10f26a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QPaintEngineState::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QPaintEngineState :: brush () const</target>
        </trans-unit>
        <trans-unit id="77d765963afe9903373f5143ed53e9f87d411ae5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QPen::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QPen :: brush () const</target>
        </trans-unit>
        <trans-unit id="4b014e8d5c9a2827b670212ed07f0d09452a0661" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QStandardItem::background() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QStandardItem :: background () const</target>
        </trans-unit>
        <trans-unit id="b21c1c0db907de6ef15f075225e8be10cc36db94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QStandardItem::foreground() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QStandardItem :: foreground () const</target>
        </trans-unit>
        <trans-unit id="47242040c4bc9fae2bf702550cb32db5d366fe2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QStyleOptionViewItem::backgroundBrush</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QStyleOptionViewItem :: backgroundBrush</target>
        </trans-unit>
        <trans-unit id="e4c66c551acf255ce2571824708c51820d1a1a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTableWidgetItem::background() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTableWidgetItem :: background () const</target>
        </trans-unit>
        <trans-unit id="e0967adce3485a3d58f3f19244eb4da2f729f58e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTableWidgetItem::foreground() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTableWidgetItem :: foreground () const</target>
        </trans-unit>
        <trans-unit id="d8279bcb7a91029c9bb32b0c77597ebad4217a2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextFormat::background() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextFormat :: background () const</target>
        </trans-unit>
        <trans-unit id="c98d5e84325e779396f76358eb0db7a6531afb37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextFormat::brushProperty(int</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextFormat :: brushProperty (int</target>
        </trans-unit>
        <trans-unit id="3a1e65d1a02b73f4c137849e4b12f520590af8b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextFormat::foreground() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextFormat :: foreground () const</target>
        </trans-unit>
        <trans-unit id="8816906375580152d8cdc97ea0118b0aae5427fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextFrameFormat::borderBrush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextFrameFormat :: borderBrush () const</target>
        </trans-unit>
        <trans-unit id="f6282f11b8c59c8df2d6366ebd36ba84ab047d45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextTableCellFormat::bottomBorderBrush() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ce54d2590e2f2f25f23efae2e4a08fff69de43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextTableCellFormat::leftBorderBrush() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6169c548d0e2c036421fc9f5cdd9b932c59a20fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextTableCellFormat::rightBorderBrush() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c80bba2c6d598f432633ae619e46e7751c445e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTextTableCellFormat::topBorderBrush() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b7fb9ae362a736c0c901eb1d04bb96628e6547" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTreeWidgetItem::background(int</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTreeWidgetItem :: background (int</target>
        </trans-unit>
        <trans-unit id="f5f533cde81d81fe8a131ea067f4634ed9495aa4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTreeWidgetItem::foreground(int</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QTreeWidgetItem :: foreground (int</target>
        </trans-unit>
        <trans-unit id="dae527798268e865eb96940baced7f1a033f8fdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QXYSeries::brush() const</source>
          <target state="translated">&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt; QXYSeries :: brush () const</target>
        </trans-unit>
        <trans-unit id="59b0e57864d66d468039bddc8297d07b487636e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush#QBrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;QBrush::operator=(&lt;a href=&quot;qbrush#QBrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbrush#QBrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp; QBrush :: operator = ( &lt;a href=&quot;qbrush#QBrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="5afed32bf54c05e9053abcb9c158cf1c35675ec5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbrush#QBrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;QBrush::operator=(const &lt;a href=&quot;qbrush#QBrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbrush#QBrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp; QBrush :: operator = (const &lt;a href=&quot;qbrush#QBrush&quot;&gt;QBrush&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="421de56f3ad2a01483f6413288659603896dc875" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; allows you to access a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; interface. The &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is treated just as a standard random-accessed file. Example:</source>
          <target state="translated">&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; позволяет вам получить доступ к &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; с помощью интерфейса &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; . &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; обрабатывают так же , как стандартный случайный-доступ к файлу. Пример:</target>
        </trans-unit>
        <trans-unit id="4125f3b9341c7cf1edc4e08ed66bde1a689260af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; emits &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() when new data has arrived in the buffer. By connecting to this signal, you can use &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; to store temporary data before processing it. &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; also emits &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;() every time new data has been written to the buffer.</source>
          <target state="translated">&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; испускает &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt; (), когда в буфер поступают новые данные. Подключившись к этому сигналу, вы можете использовать &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; для хранения временных данных перед их обработкой. &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; также испускает &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt; () каждый раз, когда новые данные записываются в буфер.</target>
        </trans-unit>
        <trans-unit id="449e762f3dd54e1bd00981b8ff24415c4a11e2ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;, &lt;a href=&quot;qfiledevice&quot;&gt;QFileDevice&lt;/a&gt;, and &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; , &lt;a href=&quot;qfiledevice&quot;&gt;QFileDevice&lt;/a&gt; и &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d90b2c82eefb39c4fee1612c0f769fd054d6c9dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbuttongroup&quot;&gt;QButtonGroup&lt;/a&gt; *QAbstractButton::group() const</source>
          <target state="translated">&lt;a href=&quot;qbuttongroup&quot;&gt;QButtonGroup&lt;/a&gt; * QAbstractButton :: group () const</target>
        </trans-unit>
        <trans-unit id="b7e86d6777643667d4cea7b79d87eff4cf09502e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbuttongroup&quot;&gt;QButtonGroup&lt;/a&gt; provides an abstract container into which button widgets can be placed. It does not provide a visual representation of this container (see &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; for a container widget), but instead manages the states of each of the buttons in the group.</source>
          <target state="translated">&lt;a href=&quot;qbuttongroup&quot;&gt;QButtonGroup&lt;/a&gt; предоставляет абстрактный контейнер, в который могут быть помещены виджеты кнопок. Он не обеспечивает визуального представления этого контейнера (см. &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt; для виджета контейнера), но вместо этого управляет состояниями каждой из кнопок в группе.</target>
        </trans-unit>
        <trans-unit id="0d282ce418a3810b84884e0dcc56e27a5b8adedd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QBuffer::buffer()</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; и QBuffer :: buffer ()</target>
        </trans-unit>
        <trans-unit id="e2a4a850a0b861a88ee673f88658af0e4b3186af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; *RenderState::uniformData()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c495aeab1cde3810aabf35f033462a855252cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QAndroidIntent::extraBytes(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QAndroidIntent :: extraBytes (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="af882c5bb2378fc2a97ed83830c02f3a6916e6f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QAndroidParcel::readData() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QAndroidParcel :: readData () const</target>
        </trans-unit>
        <trans-unit id="80b3777c8bde16153865bb8dee87f192e838ce17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QBluetoothDeviceInfo::manufacturerData(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QBluetoothDeviceInfo :: ManufacturerData ( &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e63070a4bee77de93b77e442bc0ccdb7c1bf864" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QBluetoothDeviceInfo::manufacturerData(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b773319dff1ab0dc5627d250679656a6bc66ebe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QBuffer::data() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QBuffer :: data () const</target>
        </trans-unit>
        <trans-unit id="8020def6c87a83611588f0adb4439f7a1763977a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayList::join() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayList :: join () const</target>
        </trans-unit>
        <trans-unit id="217bf05a1f344f252697d630f534b8230c23ddd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayList::join(char</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayList :: join (char</target>
        </trans-unit>
        <trans-unit id="c962de821385dfee9e6723624520018132acb10d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayList::join(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayList :: join (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="943fb3c505ccab067001055056675e0a19144dfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayMatcher::pattern() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayMatcher :: pattern () const</target>
        </trans-unit>
        <trans-unit id="6b6faa9f2eba2b12d4df95f81a1c8089a195a97f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QByteArrayView::toByteArray() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3599d64eb81e9b556299f12f801c04a75935de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QCanBusFrame::payload() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QCanBusFrame :: payload () const</target>
        </trans-unit>
        <trans-unit id="2eafeae7f30fa9f979f4c83df400f67012d6c343" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QCborValue::toByteArray(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QCborValue :: toByteArray (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ecde3d8fa1d2d51a13f85eb07de07f547be84c0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QCborValue::toCbor(&lt;a href=&quot;qcborvalue#EncodingOption-enum&quot;&gt;QCborValue::EncodingOptions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QCborValue :: toCbor ( &lt;a href=&quot;qcborvalue#EncodingOption-enum&quot;&gt;QCborValue :: EncodingOptions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="766c0eaa9458c9f3b1b07abcd1399d4a84d27653" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QColorSpace::iccProfile() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5a5f039367f4d2f8c4de5e17905f0e3fc330cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QCryptographicHash::result() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QCryptographicHash :: result () const</target>
        </trans-unit>
        <trans-unit id="ec35374419e1e9317b6c414f9b58d552f8e46a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDataWidgetMapper::mappedPropertyName(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDataWidgetMapper :: mappedPropertyName ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="aff700be97b2824cb52595fbdebd3ddf2c1911a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDomDocument::toByteArray(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDomDocument :: toByteArray (int</target>
        </trans-unit>
        <trans-unit id="cf29af9a7ea526d6159eecfffd7176e7de6e38fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDtls::decryptDatagram(&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDtls :: decryptDatagram ( &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9e1f9db5e86aeaeb4d5b4bbe63af81d90d6f30b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDtlsClientVerifier::verifiedHello() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDtlsClientVerifier :: verifyHello () const</target>
        </trans-unit>
        <trans-unit id="847af28d97d4f9425f6a621bcc2c26271da1b7e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDynamicPropertyChangeEvent::propertyName() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDynamicPropertyChangeEvent :: propertyName () const</target>
        </trans-unit>
        <trans-unit id="701831f1644f71713f598b8f39569a1e8a30fac4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDynamicPropertyUpdatedChange::propertyName() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QDynamicPropertyUpdatedChange :: propertyName () const</target>
        </trans-unit>
        <trans-unit id="edc470737c5f5257183c20fa2a199b32dde621cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QFileDialog::saveState() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QFileDialog :: saveState () const</target>
        </trans-unit>
        <trans-unit id="217124a6e6bb5ee270f72a746a72da9caf97eda5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QHeaderView::saveState() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QHeaderView :: saveState () const</target>
        </trans-unit>
        <trans-unit id="586bdf0559c33fdf391ad4ca4c760cb599f74006" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QHelpEngineCore::fileData(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QHelpEngineCore :: fileData (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e6b0d62670ec519db6aca8927801e5d85c2a9927" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QHttpMultiPart::boundary() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QHttpMultiPart :: boundary () const</target>
        </trans-unit>
        <trans-unit id="7cba2978a12cf2130fb1cd26291e8c772ece9d8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QIODevice::peek(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QIODevice :: peek ( &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc5ffed9f19d0d387222c8a5a5df9fc54e9bf690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QIODevice::read(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QIODevice :: read ( &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8530a25acfea9a765f5272916069b00b2f65b792" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QIODevice::readAll()</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QIODevice :: readAll ()</target>
        </trans-unit>
        <trans-unit id="c5d75771b4fc928c37105720b4296d76059cd3cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QIODevice::readLine(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QIODevice :: readLine ( &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38606777c1cf6b030a3a983b4107bdcddd7c52de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageIOHandler::format() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageIOHandler :: format () const</target>
        </trans-unit>
        <trans-unit id="28f21937d4707dfc69431af27d14f38f174595bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageReader::format() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageReader :: format () const</target>
        </trans-unit>
        <trans-unit id="a9234108f932f024b6d3612f4152b15497801d57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageReader::subType() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageReader :: subType () const</target>
        </trans-unit>
        <trans-unit id="d9426fd2950eb3a234452fd451661471552be3c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageWriter::format() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageWriter :: format () const</target>
        </trans-unit>
        <trans-unit id="7aa89e1554357a181a63fcdf6063807563dbb1f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageWriter::subType() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QImageWriter :: subType () const</target>
        </trans-unit>
        <trans-unit id="898a155431be1946df173b29a8f55b7d96a098bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QJsonDocument::toBinaryData() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QJsonDocument :: toBinaryData () const</target>
        </trans-unit>
        <trans-unit id="d5610b0ada72ddb37a125f7789c8ae0caa37e21b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QJsonDocument::toJson() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QJsonDocument :: toJson () const</target>
        </trans-unit>
        <trans-unit id="fcfbf9b72d427a40591d6ef838eae9a74dc70b78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QJsonDocument::toJson(&lt;a href=&quot;qjsondocument#JsonFormat-enum&quot;&gt;QJsonDocument::JsonFormat&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QJsonDocument :: toJson ( &lt;a href=&quot;qjsondocument#JsonFormat-enum&quot;&gt;QJsonDocument :: JsonFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76e2e2db1bc89bd42eda172d8795f4a7c5de42f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyAdvertisingData::manufacturerData() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyAdvertisingData :: ManufacturerData () const</target>
        </trans-unit>
        <trans-unit id="8db814ca875f38365d5e7259e4fde8878bf687c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyAdvertisingData::rawData() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyAdvertisingData :: rawData () const</target>
        </trans-unit>
        <trans-unit id="7be19f77c8d773d00e56c2fa3aca1531d5e5cd79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyCharacteristic::value() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyCharacteristic :: value () const</target>
        </trans-unit>
        <trans-unit id="f164ce1df78a82a31d4ab3657b0e93f0dacc3827" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyCharacteristicData::value() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyCharacteristicData :: value () const</target>
        </trans-unit>
        <trans-unit id="97abfa0b290950f8bac1d113e41ca37df4163276" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyDescriptor::value() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyDescriptor :: value () const</target>
        </trans-unit>
        <trans-unit id="53896762390c604ffa2364272318887dbf2c5412" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyDescriptorData::value() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QLowEnergyDescriptorData :: value () const</target>
        </trans-unit>
        <trans-unit id="8370ae8e67a178f716b761e28a527ee91c16e1f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMainWindow::saveState(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMainWindow :: saveState (int</target>
        </trans-unit>
        <trans-unit id="cffc0367fa627d9a182185bd66b5cff71f87096e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMessageAuthenticationCode::result() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMessageAuthenticationCode :: result () const</target>
        </trans-unit>
        <trans-unit id="cfee161234da95fc3d762aa7df82481eebde25df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMetaEnum::valueToKeys(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMetaEnum :: valueToKeys (int</target>
        </trans-unit>
        <trans-unit id="56304a78fc1db73cc9231a8ea998bdf5d3a6de8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMetaMethod::methodSignature() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMetaMethod :: methodSignature () const</target>
        </trans-unit>
        <trans-unit id="ff7d3ef19afc27e6ed15781d004a102e9d8c680e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMetaMethod::name() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMetaMethod :: name () const</target>
        </trans-unit>
        <trans-unit id="186fadfacd31a876f25181978f0b427aac94d0ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMimeData::data(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMimeData :: data (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0ca6a300f3d2dc6baf0350cfcc114d29d4c49392" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QModbusDeviceIdentification::value(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QModbusDeviceIdentification :: value ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c205f8f3fae6a93323eb7b27c0ff9d21ca067387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QModbusDeviceIdentification::value(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd1bcbc35954d56e7dec543dd4c5295037cc773" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QModbusPdu::data() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QModbusPdu :: data () const</target>
        </trans-unit>
        <trans-unit id="d6fb11bd0b684a60135473bf613e91e35820bf94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMovie::format() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMovie :: format () const</target>
        </trans-unit>
        <trans-unit id="883e3b93f4cc5f3573ed6617e72155385b6a701b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefMessage::toByteArray() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefMessage :: toByteArray () const</target>
        </trans-unit>
        <trans-unit id="0024fdd65ac3c5dc778f3ff665bd548dbeaa1bfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefNfcSmartPosterRecord::icon(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefNfcSmartPosterRecord :: icon (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="09147106f222a22eb7a33d14ab2fb46a9cbb5cae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefNfcSmartPosterRecord::typeInfo() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefNfcSmartPosterRecord :: typeInfo () const</target>
        </trans-unit>
        <trans-unit id="dcbccdd94ab7707810f753a7b64ac94a485a3584" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefRecord::id() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefRecord :: id () const</target>
        </trans-unit>
        <trans-unit id="243cdad061cbb18e306a9afef349d20c16724ab3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefRecord::payload() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefRecord :: payload () const</target>
        </trans-unit>
        <trans-unit id="9c777c791d9699a445bfeb3104896d138755c7b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefRecord::type() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNdefRecord :: type () const</target>
        </trans-unit>
        <trans-unit id="a2d2bd4455d9366b886563978d043ba406c8ab40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkCookie::name() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkCookie :: name () const</target>
        </trans-unit>
        <trans-unit id="803e1f43c281dcb2bea6573cef215806cb7e3de6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkCookie::toRawForm(&lt;a href=&quot;qnetworkcookie#RawForm-enum&quot;&gt;QNetworkCookie::RawForm&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkCookie :: toRawForm ( &lt;a href=&quot;qnetworkcookie#RawForm-enum&quot;&gt;QNetworkCookie :: RawForm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f659b1522db2b6ddd407abb95f84cef727cfcb47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkCookie::value() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkCookie :: value () const</target>
        </trans-unit>
        <trans-unit id="130479fd4d6eda1503520cd3c9d6521420e29166" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkDatagram::data() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkDatagram :: data () const</target>
        </trans-unit>
        <trans-unit id="e93bd49bf6bd0d97df2558703a29d9efa1a4d62d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkProxy::rawHeader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkProxy :: rawHeader (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ed9625425decf22000c88425e3a88456c8143924" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkReply::rawHeader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkReply :: rawHeader (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="09422c5f93aced739922d2a6150e78187ceef549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkRequest::rawHeader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNetworkRequest :: rawHeader (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fa495d1addcbd8e68337521c31e83f8be880c837" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOAuth1Signature::customMethodString() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOAuth1Signature :: customMethodString () const</target>
        </trans-unit>
        <trans-unit id="c5a603f2b6cf697f65cd19a6b4c622b7ae91c951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOAuth1Signature::hmacSha1() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOAuth1Signature :: hmacSha1 () const</target>
        </trans-unit>
        <trans-unit id="c98d989c7f778f775e4124d13cc54c33ac4fcdb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOAuth1Signature::plainText() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOAuth1Signature :: plainText () const</target>
        </trans-unit>
        <trans-unit id="8a311a4493ecaa4fe5683087cc1d7b43b73932ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOAuth1Signature::rsaSha1() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOAuth1Signature :: rsaSha1 () const</target>
        </trans-unit>
        <trans-unit id="a103048baf15bec0c35940a3bceddd2c698238ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOpenGLShader::sourceCode() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QOpenGLShader :: sourceCode () const</target>
        </trans-unit>
        <trans-unit id="0ec02ef38adc6f8a75544ec4380c5de96f5f5c91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QPdfWriter::documentXmpMetadata() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa84ce194aa7a4d33c81fd521fc7d5b953fd181d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QProcess::readAllStandardError()</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QProcess :: readAllStandardError ()</target>
        </trans-unit>
        <trans-unit id="167a17bebfa89a86548b8c75a0cfff9136b2411f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QProcess::readAllStandardOutput()</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QProcess :: readAllStandardOutput ()</target>
        </trans-unit>
        <trans-unit id="523555fce0d6b4a531be8ca4590722d11b58db4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QQuick3DGeometry::indexBuffer() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d17ce725264b668fe6928883e0fd753ee34f9bce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QQuick3DGeometry::indexData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb844298006910b631ece54c1c123056f1d4d455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QQuick3DGeometry::vertexBuffer() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a04f913a36bfcbb8efad5417f0d637cef77acae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QQuick3DGeometry::vertexData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15eac24d6c1fc6e941d74672598731adcc96aa07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QRawFont::fontTable(const char *</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QRawFont :: fontTable (const char *</target>
        </trans-unit>
        <trans-unit id="037dac83f59ec54d6d992ccb7f004ed0a4838f4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QResource::uncompressedData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9549867410352088bb458d9ae7c2439776ab20e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QShaderProgram::shaderCode(&lt;a href=&quot;qt3drender-qshaderprogram#ShaderType-enum&quot;&gt;Qt3DRender::QShaderProgram::ShaderType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QShaderProgram :: shaderCode ( &lt;a href=&quot;qt3drender-qshaderprogram#ShaderType-enum&quot;&gt;Qt3DRender :: QShaderProgram :: ShaderType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b98aa84ba2d48cd0220e28fa2eb92754244d91b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSignalSpy::signal() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSignalSpy :: signal () const</target>
        </trans-unit>
        <trans-unit id="dfe29ddccb1f6442829f7c7cca9367d0fcf26c85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSignalTransition::signal() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSignalTransition :: signal () const</target>
        </trans-unit>
        <trans-unit id="5aec15d5bd4346e5c86d9d369ada7b307673fe9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSplitter::saveState() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSplitter :: saveState () const</target>
        </trans-unit>
        <trans-unit id="b45c0cd612a9138e90c2cc1cb024b9961ea3433e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate::digest(&lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash::Algorithm&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate :: digest ( &lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash :: Algorithm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9b563bb44f745b04a533a2fb604281fa7216b00" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate::serialNumber() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate :: serialNumber () const</target>
        </trans-unit>
        <trans-unit id="c35592407daa09b304b0c15f43fc5114f9dcd613" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate::toDer() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate :: toDer () const</target>
        </trans-unit>
        <trans-unit id="3cf702d8ce8c8e644da8590eeb41a4c3fef12502" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate::toPem() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate :: toPem () const</target>
        </trans-unit>
        <trans-unit id="dfbc4c56578d04865e70fb528f38d8937fede806" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate::version() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslCertificate :: version () const</target>
        </trans-unit>
        <trans-unit id="bb6b5faa2b733fbe466720c5b4bf27ca2315546b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslConfiguration::nextNegotiatedProtocol() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslConfiguration :: nextNegotiatedProtocol () const</target>
        </trans-unit>
        <trans-unit id="bb980474206d256182c238ce5b130ecc791ead34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslConfiguration::preSharedKeyIdentityHint() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslConfiguration :: preSharedKeyIdentityHint () const</target>
        </trans-unit>
        <trans-unit id="6d2a84dbedd1909485ac908e002fb89355a463dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslConfiguration::sessionTicket() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslConfiguration :: sessionTicket () const</target>
        </trans-unit>
        <trans-unit id="c84b448f0b6f8a497f333f02331c14d143b32fa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslKey::toDer(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslKey :: toDer (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="29cbe49055e6308afd6d6e79fdb2d99fb7ef257f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslKey::toPem(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslKey :: toPem (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="62020d54e3f4ae14d885b470bbaa8ef1c9468262" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslPreSharedKeyAuthenticator::identity() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslPreSharedKeyAuthenticator :: identity () const</target>
        </trans-unit>
        <trans-unit id="509b0f9be5ecf7d8cff4178ca08cfb50fd4ca2c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslPreSharedKeyAuthenticator::identityHint() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslPreSharedKeyAuthenticator :: identityHint () const</target>
        </trans-unit>
        <trans-unit id="2b5d7f60da3b7b5e8ad76103e8d8ccbc2c33c9e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslPreSharedKeyAuthenticator::preSharedKey() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QSslPreSharedKeyAuthenticator :: preSharedKey () const</target>
        </trans-unit>
        <trans-unit id="6d6c7368a62e8a8d8f215502240ff64d5c70b029" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStaticByteArrayMatcher::pattern() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStaticByteArrayMatcher :: pattern () const</target>
        </trans-unit>
        <trans-unit id="886312b24bbec6fff7a866605b6bac7ada6671e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStorageInfo::device() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStorageInfo :: device () const</target>
        </trans-unit>
        <trans-unit id="b18c2ecd096ccf89226dac2046337f24943476bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStorageInfo::fileSystemType() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStorageInfo :: fileSystemType () const</target>
        </trans-unit>
        <trans-unit id="56915568921cc90fbdfa69d5ed72dd8fb183bfd9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStorageInfo::subvolume() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStorageInfo :: subvolume () const</target>
        </trans-unit>
        <trans-unit id="ad38e1f9aaed677a7ea7c2ff590897aba4f2599b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QString::toLatin1() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QString :: toLatin1 () const</target>
        </trans-unit>
        <trans-unit id="e11a00cdf9df906b185c67b0fb24af8e0a8907c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QString::toLocal8Bit() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QString :: toLocal8Bit () const</target>
        </trans-unit>
        <trans-unit id="caa01d71b92f42e2d7ab3e6ddb29b2e21c6bfe3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QString::toUtf8() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QString :: toUtf8 () const</target>
        </trans-unit>
        <trans-unit id="53ead7bb1657ef721cc4dadbd714c2c37af45d7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringEncoder::encode(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c39c95fd78f17e1b3749d9ed4c070125085b31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringEncoder::encode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b031fdeb63e91ec0bb4d3cb0a82bc72801d621" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringEncoder::operator()(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed330c274bd1fb35b98ed375057366c13449ba9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringEncoder::operator()(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7738cf17cb62fdf968eb49b971b21c4c176fcb0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringRef::toLatin1() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringRef :: toLatin1 () const</target>
        </trans-unit>
        <trans-unit id="38cee15e79e95a34eac37ae9f8d37f82acbae9c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringRef::toLocal8Bit() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringRef :: toLocal8Bit () const</target>
        </trans-unit>
        <trans-unit id="9b54464b8408a21a133f479245cd49fe81d69cca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringRef::toUtf8() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringRef :: toUtf8 () const</target>
        </trans-unit>
        <trans-unit id="2f7044e7c3401184e42f1a37e3a410bee6e8c21a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringView::toLatin1() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringView :: toLatin1 () const</target>
        </trans-unit>
        <trans-unit id="1e4c1bcbdb19e119e341403e38a29d245cde633e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringView::toLocal8Bit() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringView :: toLocal8Bit () const</target>
        </trans-unit>
        <trans-unit id="181a8d7a3197c5ac3a6761043af62f0360cb0cd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringView::toUtf8() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QStringView :: toUtf8 () const</target>
        </trans-unit>
        <trans-unit id="57c5176eec0e073c63ed2ac12d50d7e2277ff50e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec::fromUnicode(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec :: fromUnicode ( &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec211f227d2a026dcfce71ad4c9b5b868b64cb49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec::fromUnicode(const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec :: fromUnicode (const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d0231f779224715f943575372ceab49781c56d03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec::fromUnicode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec :: fromUnicode (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f7a5029d7242145ef5611c41b27ea1b634a70e24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextDocumentWriter::format() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextDocumentWriter :: format () const</target>
        </trans-unit>
        <trans-unit id="a2b3ada52b573d27bda820f3799ee890f8abbfdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextEncoder::fromUnicode(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextEncoder :: fromUnicode ( &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ba6eca909b1a1d4cafa5e9052ee361c356bf1935" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextEncoder::fromUnicode(const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextEncoder :: fromUnicode (const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="89686d7f38851653cf513bc129cc5efe87f2a858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextEncoder::fromUnicode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextEncoder :: fromUnicode (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3fc470fdd0e80fdd5ef08eb496da74d9269d7d75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextureImageData::data(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextureImageData :: data (int</target>
        </trans-unit>
        <trans-unit id="0d647370ee5f675033ec29dd44a41fbec5f44fe0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTimeZone::id() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTimeZone :: id () const</target>
        </trans-unit>
        <trans-unit id="9e3c0243fdbd6e528ebd9fd892f8ba7ccadaf6c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QUrl::toEncoded(&lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl::FormattingOptions&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QUrl :: toEncoded ( &lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl :: FormattingOptions&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c64dce1d064209f85d6662f03d2213a86d52a775" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QUuid::toByteArray() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QUuid :: toByteArray () const</target>
        </trans-unit>
        <trans-unit id="13ea6a5c2944a56f9a9ebe4ccf746172a1c64ca1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QUuid::toByteArray(&lt;a href=&quot;quuid#StringFormat-enum&quot;&gt;QUuid::StringFormat&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QUuid :: toByteArray ( &lt;a href=&quot;quuid#StringFormat-enum&quot;&gt;QUuid :: StringFormat&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="98f66ca7f239f46f979a56d04ed056ef819c4403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QUuid::toRfc4122() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QUuid :: toRfc4122 () const</target>
        </trans-unit>
        <trans-unit id="f43462bba7f04fd852fc3df4bae4e08ddce5faf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QVariant::toByteArray() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QVariant :: toByteArray () const</target>
        </trans-unit>
        <trans-unit id="52d68f7da7b56346f25be21fb4c05600a9354a58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QVulkanExtension::name</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QVulkanExtension :: name</target>
        </trans-unit>
        <trans-unit id="b4c1d31fb2ba73e4e052b8340304ffb6360433aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QVulkanLayer::description</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QVulkanLayer :: description</target>
        </trans-unit>
        <trans-unit id="6dd2d05c177135da1500e7a8eb4468e4cb2482af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QVulkanLayer::name</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QVulkanLayer :: name</target>
        </trans-unit>
        <trans-unit id="f8658702321b0ef9d4cefc448e5d7dfdd344d8d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineHttpRequest::header(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineHttpRequest :: header (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="83a0a1d58d98572dde4a787e5a4233f217132958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineHttpRequest::postData() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineHttpRequest :: postData () const</target>
        </trans-unit>
        <trans-unit id="cb157cf7ab00b54d29868fe2aeadbee7ff19b49b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineUrlRequestInfo::requestMethod() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineUrlRequestInfo :: requestMethod () const</target>
        </trans-unit>
        <trans-unit id="40b726a6f9f0eb5d6c27268a963144c51b478f30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineUrlRequestJob::requestMethod() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineUrlRequestJob :: requestMethod () const</target>
        </trans-unit>
        <trans-unit id="d9e2dfd06628708d261c1acbc91c7d10a68c3ce9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineUrlScheme::name() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWebEngineUrlScheme :: name () const</target>
        </trans-unit>
        <trans-unit id="27296ddc34eb7a1a41809eb05df4321af94fe17c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWidget::saveGeometry() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QWidget :: saveGeometry () const</target>
        </trans-unit>
        <trans-unit id="b48d7cf4ab32b73b6a2810363072974bcefba409" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; and &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;T&amp;gt; use more or less the same algorithm as &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; и &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;T&amp;gt; используют более или менее тот же алгоритм, что и &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5471b81fe9db8ec3cd039e65dd20f796f2158b50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; can be used to store both raw bytes (including '\0's) and traditional 8-bit '\0'-terminated strings. Using &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is much more convenient than using &lt;code&gt;const char *&lt;/code&gt;. Behind the scenes, it always ensures that the data is followed by a '\0' terminator, and uses &lt;a href=&quot;implicit-sharing#&quot;&gt;implicit sharing&lt;/a&gt; (copy-on-write) to reduce memory usage and avoid needless copying of data.</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; может использоваться для хранения как сырых байтов (включая '\ 0'), так и традиционных 8-битных строк с завершением '\ 0'. Использование &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; намного удобнее, чем использование &lt;code&gt;const char *&lt;/code&gt; . За кулисами он всегда гарантирует, что за данными следует терминатор '\ 0', и использует &lt;a href=&quot;implicit-sharing#&quot;&gt;неявное совместное использование&lt;/a&gt; (копирование при записи), чтобы уменьшить использование памяти и избежать ненужного копирования данных.</target>
        </trans-unit>
        <trans-unit id="a8aff0372d2625c62d15247b8788a11c178cfc4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; makes a deep copy of the &lt;code&gt;const char *&lt;/code&gt; data, so you can modify it later without experiencing side effects. (If for performance reasons you don't want to take a deep copy of the character data, use &lt;a href=&quot;qbytearray#fromRawData&quot;&gt;QByteArray::fromRawData&lt;/a&gt;() instead.)</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; делает глубокую копию данных &lt;code&gt;const char *&lt;/code&gt; , поэтому вы можете изменить их позже, не испытывая побочных эффектов. (Если по соображениям производительности вы не хотите делать глубокую копию символьных данных, используйте вместо этого &lt;a href=&quot;qbytearray#fromRawData&quot;&gt;QByteArray :: fromRawData&lt;/a&gt; ().)</target>
        </trans-unit>
        <trans-unit id="05f426c094bc30b0cb5c0111df7329bceb8fc1d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; makes a deep copy of the string data.</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; делает глубокую копию строковых данных.</target>
        </trans-unit>
        <trans-unit id="004db49c0966b1c82dc77fed0d9c83390fee024a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; provides the following basic functions for modifying the byte data: &lt;a href=&quot;qbytearray#append&quot;&gt;append&lt;/a&gt;(), &lt;a href=&quot;qbytearray#prepend&quot;&gt;prepend&lt;/a&gt;(), &lt;a href=&quot;qbytearray#insert&quot;&gt;insert&lt;/a&gt;(), &lt;a href=&quot;qbytearray#replace&quot;&gt;replace&lt;/a&gt;(), and &lt;a href=&quot;qbytearray#remove&quot;&gt;remove&lt;/a&gt;(). For example:</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; предоставляет следующие основные функции для изменения байтовых данных: &lt;a href=&quot;qbytearray#append&quot;&gt;append&lt;/a&gt; (), &lt;a href=&quot;qbytearray#prepend&quot;&gt;prepend&lt;/a&gt; (), &lt;a href=&quot;qbytearray#insert&quot;&gt;insert&lt;/a&gt; (), &lt;a href=&quot;qbytearray#replace&quot;&gt;replace&lt;/a&gt; () и &lt;a href=&quot;qbytearray#remove&quot;&gt;remove&lt;/a&gt; (). Например:</target>
        </trans-unit>
        <trans-unit id="36d5847e710070f0aa0374914e1eff9ec03af15c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; uses the same algorithm as &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, but 16 bytes correspond to 16 characters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15ca0411b8f6769e4d109848c6c37185889ed24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="8e617746b3d7e6202a5ecda082fe30578c45f1f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;, const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; , const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="41e9f1f96b442bb4c4d65b86b851a3a714a2b5cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;: a byte array (&quot;byte string&quot;)</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; : байтовый массив (&amp;laquo;байтовая строка&amp;raquo;)</target>
        </trans-unit>
        <trans-unit id="7c935f52712ebd4f706227a19e3a8118d6034aab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;qgetenv(const char *</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; qgetenv (const char *</target>
        </trans-unit>
        <trans-unit id="b0e5b2a729f822dc399b6476c1f9b75852fcedaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;s can be compared using overloaded operators such as operator&amp;lt;(), operator&amp;lt;=(), operator==(), operator&amp;gt;=(), and so on. The comparison is based exclusively on the numeric values of the bytes and is very fast, but is not what a human would expect. &lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;QString::localeAwareCompare&lt;/a&gt;() is a better choice for sorting user-interface strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39238a1c8ca38ae5b17d7ba5a9ca6dc7fb978a07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;s can be compared using overloaded operators such as operator&amp;lt;(), operator&amp;lt;=(), operator==(), operator&amp;gt;=(), and so on. The comparison is based exclusively on the numeric values of the characters and is very fast, but is not what a human would expect. &lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;QString::localeAwareCompare&lt;/a&gt;() is a better choice for sorting user-interface strings.</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; можно сравнивать с помощью перегруженных операторов, таких как operator &amp;lt;(), operator &amp;lt;= (), operator == (), operator&amp;gt; = () и т. Д. Сравнение основано исключительно на числовых значениях символов и выполняется очень быстро, но не соответствует ожиданиям человека. &lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;QString :: localeAwareCompare&lt;/a&gt; () - лучший выбор для сортировки строк пользовательского интерфейса.</target>
        </trans-unit>
        <trans-unit id="e445a7a98a4a068b7af4b9762a554ba5a5441141" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::append(&lt;a href=&quot;qbytearrayview&quot;&gt;QByteArrayView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c75d7c7f77a6e73f4676364b9ca0d69137829c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::append(char</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: append (char</target>
        </trans-unit>
        <trans-unit id="f38d4f040d43007db4c8cd8129908f2ce017f17a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::append(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: append (const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e2c360e21194f5c5d6695d949d047b77cf5ae46b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::append(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: append (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="02220dad4ba0b5ee3233da99cece1e4dc9eb7323" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::append(const char *</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: append (const char *</target>
        </trans-unit>
        <trans-unit id="a8dd8a27be53164f7dc6b62aff7138b9114f84f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::append(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: append (int</target>
        </trans-unit>
        <trans-unit id="a90285e9e0a9e5a294c07dd979b48c4bdc545333" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::fill(char</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: fill (char</target>
        </trans-unit>
        <trans-unit id="e57e5d1a6bc2cbff66fc4459c3119c16db248478" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::insert(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: insert (int</target>
        </trans-unit>
        <trans-unit id="a0289ad60ee5d8d42a822a3335677b2b5a0c6bd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::insert(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4411d2851a8ea215e8becb61f9d659fa6e34650d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::operator+=(char</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: operator + = (char</target>
        </trans-unit>
        <trans-unit id="5005956c93da6520fe05d7a6a1f4e4b7891c9032" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::operator+=(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: operator + = (const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8839b19f3580f33a47a1b5067fe9a9a31ddef459" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::operator+=(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: operator + = (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d33171b5821795c4fc16db1258ca2ddc77b09ec9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::operator+=(const char *</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: operator + = (const char *</target>
        </trans-unit>
        <trans-unit id="77915e2d91f4dfa212e41af94295da8b7d603c76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::operator=(&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: operator = ( &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="726e2e281a6c3e69874923136cfd19a658885719" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::operator=(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: operator = (const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1f29968389e10ef7be639e7bc69bb35e5f7198c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::operator=(const char *</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: operator = (const char *</target>
        </trans-unit>
        <trans-unit id="f32d4c8914c8d84297833e218c036aaaaffd3a43" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::prepend(&lt;a href=&quot;qbytearrayview&quot;&gt;QByteArrayView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1e79fef3c0e28ac47c24a0ec3996ffbb80c5f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::prepend(char</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: prepend (char</target>
        </trans-unit>
        <trans-unit id="80e3492306e0c5c26f6f300752fe2e4a75682a5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::prepend(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: prepend (const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="81c0651e98ae1beed0605590f4cedfccb4b657e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::prepend(const char *</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: prepend (const char *</target>
        </trans-unit>
        <trans-unit id="306d30b1bd219f16551a986c40f04220a4d74277" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::prepend(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; и QByteArray :: prepend (int</target>
        </trans-unit>
        <trans-unit id="cf14fb7047486c11ebd048fca5c50d451941ffa2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::remove(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: remove (int</target>
        </trans-unit>
        <trans-unit id="ec794ce68756a90faac9e874af4825316cc51cf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::remove(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548850faa4aa3217c55e2f4e61481fc444e25198" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::replace(char</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: replace (char</target>
        </trans-unit>
        <trans-unit id="28a6c1ad3e52286fe548baf5988dbeaa366f81ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::replace(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: replace (const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a455da27036e64ab9bdfdaa6d81123ab5a5e1a08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::replace(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: replace (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7d20a795fee48e1361814ee8527e591330984ceb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::replace(const char *</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: replace (const char *</target>
        </trans-unit>
        <trans-unit id="c3993aa66ecaeb433f51d93d7bc4fdb210546c8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::replace(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: replace (int</target>
        </trans-unit>
        <trans-unit id="3bbf2bff0d9b1b6d70acef08b40943b0a1c98853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::replace(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d181d67686324ef4c4e15405e1bc508b1f049ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(&lt;a href=&quot;qtglobal#qlonglong-typedef&quot;&gt;qlonglong&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setNum ( &lt;a href=&quot;qtglobal#qlonglong-typedef&quot;&gt;qlonglong&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="398fca2a78dd9cb6fc596e95c6e620970b689c52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(&lt;a href=&quot;qtglobal#qulonglong-typedef&quot;&gt;qulonglong&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setNum ( &lt;a href=&quot;qtglobal#qulonglong-typedef&quot;&gt;qulonglong&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1db7a2b420a851c662294e6be04409930f8c6cb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setNum ( &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="56dc3d5b81e151655223f258cc99a869f77356c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(&lt;a href=&quot;qtglobal#ulong-typedef&quot;&gt;ulong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d7570c7c75f399f02b1a79d76b26bf62073ba5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(&lt;a href=&quot;qtglobal#ushort-typedef&quot;&gt;ushort&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setNum ( &lt;a href=&quot;qtglobal#ushort-typedef&quot;&gt;ushort&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f91e09a70b4c34273c7a685f3ff951185ccab48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(double</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setNum (double</target>
        </trans-unit>
        <trans-unit id="1ca5f12781b278cf67d3ba5883a16637633e2c3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(float</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setNum (float</target>
        </trans-unit>
        <trans-unit id="b6a21c275f6c06d91fac856b7774a680827ff4b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setNum (int</target>
        </trans-unit>
        <trans-unit id="0160f7d2d815c67f3e6b870839748bb1602a1fb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8020876cf0e5b1a4903ebec60b6791c61f51c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setNum(short</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setNum (короткий</target>
        </trans-unit>
        <trans-unit id="1e60ea3ad035e9d1f7ca56770d120e5f4c3f8d64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;QByteArray::setRawData(const char *</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp; QByteArray :: setRawData (const char *</target>
        </trans-unit>
        <trans-unit id="e36b03554d3e3a7c1a63be8586b00acc509acc53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; FromBase64Result::decoded</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514a37d993ed1441ab75983068472b97f8ea22ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::chopped(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: chopped (int</target>
        </trans-unit>
        <trans-unit id="c66dc31049ec42ef3024037195006682f0b221f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::left(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: left (int</target>
        </trans-unit>
        <trans-unit id="8c1f0bb7a98886aa2b858ba8f724e915263750dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::left(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca3929b4acfbb75814d6d982e8733ec730207ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::leftJustified(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: leftJustified (int</target>
        </trans-unit>
        <trans-unit id="e21b8005f2ef9dd35363f4a95caba39a694850ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::leftJustified(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb839b819f171bbb00f36c28861f95e1a26984c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::mid(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: mid (int</target>
        </trans-unit>
        <trans-unit id="6af77a96ac61cccc8894ff19c1e22ab94acc17ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::mid(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069c636d551983fea415124807e48c82bd54e3ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::qCompress(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: qCompress (const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="006041f1d5aa8bebae5d0ca3ce760fbae3017f98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::qCompress(const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: qCompress (const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2930ef98996bfd0396773eb6ea292cbe902cc57f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::qUncompress(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: qUncompress (const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8ce777b3977edc79a9b81e5b2597dd6f6b13684f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::qUncompress(const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: qUncompress (const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3f24cdc2cc8cba234ecdf0532aae23f8128d58bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::repeated(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: duplicate (int</target>
        </trans-unit>
        <trans-unit id="00087d463a79f9bcded94d275b0c22e732a7a2e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::repeated(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35151dd0269e3dc1f3511a8538c6fbeabcfbbde6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::right(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: right (int</target>
        </trans-unit>
        <trans-unit id="b2d04068586a50aa4c7a5d23d64542057283309b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::right(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8764b9f798f23f5b0390864882a1588f5efc6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::rightJustified(int</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: rightJustified (int</target>
        </trans-unit>
        <trans-unit id="6100a9e05517b436ebe5015f99bfbb7a79c3d69b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::rightJustified(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a730f1e2681bd083da43e069af55a0a1cb308105" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::simplified() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: simpleified () const</target>
        </trans-unit>
        <trans-unit id="20c7deb21301ba8e910aaff39a7461594476f6c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::toBase64() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: toBase64 () const</target>
        </trans-unit>
        <trans-unit id="04a6b5d13492efe8d565bc6f1ca8eb3405fad90a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::toBase64(&lt;a href=&quot;qbytearray#Base64Option-enum&quot;&gt;QByteArray::Base64Options&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: toBase64 ( &lt;a href=&quot;qbytearray#Base64Option-enum&quot;&gt;QByteArray :: Base64Options&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9464319c7f52f5070d6e7127b4447452833657eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::toHex() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: toHex () const</target>
        </trans-unit>
        <trans-unit id="af9376a3e3fe4cbd1072df3b573b9e9e52c45fbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::toHex(char</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: toHex (char</target>
        </trans-unit>
        <trans-unit id="e6b6275d9e782fe0bc4046d2b102f3217760bd6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::toLower() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: toLower () const</target>
        </trans-unit>
        <trans-unit id="5fa5dd73122e70902d4a0f9cbbac6bc6705cf964" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::toPercentEncoding(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: toPercentEncoding (const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="efb3be7c2c8b151a17ad595b448499f91e5a6125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::toUpper() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: toUpper () const</target>
        </trans-unit>
        <trans-unit id="417d2f2c7ad27dc7f4ee39ad53dd289116ee4fc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray::trimmed() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; QByteArray :: trimmed () const</target>
        </trans-unit>
        <trans-unit id="dca938ebb46f87fac9c82cd90581a6ea9d4d6d0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt;qCompress(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672893528340083552f9945fee00149f5c74c689" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt;qCompress(const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8be2dd52ff323465feb7a56955973dc62e24a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt;qUncompress(const &lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab56f685e7d55861a3213f4ad22cc32b4b8943b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#QByteArray&quot;&gt;QByteArray&lt;/a&gt;qUncompress(const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d794b860d8be6ce5c1a42243b906fbd96e2411ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#at&quot;&gt;at&lt;/a&gt;() can be faster than operator[](), because it never causes a &lt;a href=&quot;implicit-sharing#deep-copy&quot;&gt;deep copy&lt;/a&gt; to occur.</source>
          <target state="translated">&lt;a href=&quot;qbytearray#at&quot;&gt;at&lt;/a&gt; () может быть быстрее, чем operator [] (), потому что он никогда не вызывает &lt;a href=&quot;implicit-sharing#deep-copy&quot;&gt;глубокую копию&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78d9e2e38ecb4c66a7873f0b76f542f3f6770247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray::const_iterator&lt;/a&gt; QByteArray::begin() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray :: const_iterator&lt;/a&gt; QByteArray :: begin () const</target>
        </trans-unit>
        <trans-unit id="b9e1d83bfc86a04eb5ee387b3d5bff290d63c41b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray::const_iterator&lt;/a&gt; QByteArray::cbegin() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray :: const_iterator&lt;/a&gt; QByteArray :: cbegin () const</target>
        </trans-unit>
        <trans-unit id="f082f705b78ee4c36b2a992f7b8d4b2def84cc2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray::const_iterator&lt;/a&gt; QByteArray::cend() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray :: const_iterator&lt;/a&gt; QByteArray :: cend () const</target>
        </trans-unit>
        <trans-unit id="dc32d44eabd567898b2912fd15456a7dbfecabe7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray::const_iterator&lt;/a&gt; QByteArray::constBegin() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray :: const_iterator&lt;/a&gt; QByteArray :: constBegin () const</target>
        </trans-unit>
        <trans-unit id="624c68dc3c4a2756bf74964e79c4571292fd5591" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray::const_iterator&lt;/a&gt; QByteArray::constEnd() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray :: const_iterator&lt;/a&gt; QByteArray :: constEnd () const</target>
        </trans-unit>
        <trans-unit id="66bbfc97f51db7dead4dfd0b98fb0ebf9e5005cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray::const_iterator&lt;/a&gt; QByteArray::end() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_iterator-typedef&quot;&gt;QByteArray :: const_iterator&lt;/a&gt; QByteArray :: end () const</target>
        </trans-unit>
        <trans-unit id="92c674e1fe2c0d06ebc204ee67766a54d5dffba1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_reverse_iterator-typedef&quot;&gt;QByteArray::const_reverse_iterator&lt;/a&gt; QByteArray::crbegin() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_reverse_iterator-typedef&quot;&gt;QByteArray :: const_reverse_iterator&lt;/a&gt; QByteArray :: crbegin () const</target>
        </trans-unit>
        <trans-unit id="d35226e1190a7c4b497fcfdf6625a5826a70a421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_reverse_iterator-typedef&quot;&gt;QByteArray::const_reverse_iterator&lt;/a&gt; QByteArray::crend() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_reverse_iterator-typedef&quot;&gt;QByteArray :: const_reverse_iterator&lt;/a&gt; QByteArray :: crend ​​() const</target>
        </trans-unit>
        <trans-unit id="8395670b0e4830ae32419bbdc19b223aaa5f4956" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_reverse_iterator-typedef&quot;&gt;QByteArray::const_reverse_iterator&lt;/a&gt; QByteArray::rbegin() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_reverse_iterator-typedef&quot;&gt;QByteArray :: const_reverse_iterator&lt;/a&gt; QByteArray :: rbegin () const</target>
        </trans-unit>
        <trans-unit id="5f058e1eac0c39a729a4088877440c3664e3ebd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#const_reverse_iterator-typedef&quot;&gt;QByteArray::const_reverse_iterator&lt;/a&gt; QByteArray::rend() const</source>
          <target state="translated">&lt;a href=&quot;qbytearray#const_reverse_iterator-typedef&quot;&gt;QByteArray :: const_reverse_iterator&lt;/a&gt; QByteArray :: rend () const</target>
        </trans-unit>
        <trans-unit id="b3126ad572e64f9bb99bc334546a708472700da7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#fromBase64&quot;&gt;QByteArray::fromBase64&lt;/a&gt;() ignores the KeepTrailingEquals and OmitTrailingEquals options and will not flag errors in case they are missing or if there are too many of them.</source>
          <target state="translated">&lt;a href=&quot;qbytearray#fromBase64&quot;&gt;QByteArray :: fromBase64&lt;/a&gt; () игнорирует параметры KeepTrailingEquals и OmitTrailingEquals и не будет отмечать ошибки, если они отсутствуют или их слишком много.</target>
        </trans-unit>
        <trans-unit id="647fcdf835543e0f0fbe5151c114bc718793a2a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#fromBase64Encoding&quot;&gt;QByteArray::fromBase64Encoding&lt;/a&gt;() and &lt;a href=&quot;qbytearray#fromBase64&quot;&gt;QByteArray::fromBase64&lt;/a&gt;() ignore the KeepTrailingEquals and OmitTrailingEquals options. If the IgnoreBase64DecodingErrors option is specified, they will not flag errors in case trailing equal signs are missing or if there are too many of them. If instead the AbortOnBase64DecodingErrors is specified, then the input must either have no padding or have the correct amount of equal signs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96aef4f0d6015af453f607268d277a1cadad0a98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#iterator-typedef&quot;&gt;QByteArray::iterator&lt;/a&gt; QByteArray::begin()</source>
          <target state="translated">&lt;a href=&quot;qbytearray#iterator-typedef&quot;&gt;QByteArray :: iterator&lt;/a&gt; QByteArray :: begin ()</target>
        </trans-unit>
        <trans-unit id="8fca96de28b15184e05f177ef4088dfec97f576a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#iterator-typedef&quot;&gt;QByteArray::iterator&lt;/a&gt; QByteArray::end()</source>
          <target state="translated">&lt;a href=&quot;qbytearray#iterator-typedef&quot;&gt;QByteArray :: iterator&lt;/a&gt; QByteArray :: end ()</target>
        </trans-unit>
        <trans-unit id="050567641e80ea8e00db2fd2a704f48c535b534b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#reverse_iterator-typedef&quot;&gt;QByteArray::reverse_iterator&lt;/a&gt; QByteArray::rbegin()</source>
          <target state="translated">&lt;a href=&quot;qbytearray#reverse_iterator-typedef&quot;&gt;QByteArray :: reverse_iterator&lt;/a&gt; QByteArray :: rbegin ()</target>
        </trans-unit>
        <trans-unit id="eae7e5995a7711900e387713676559e015ccb215" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearray#reverse_iterator-typedef&quot;&gt;QByteArray::reverse_iterator&lt;/a&gt; QByteArray::rend()</source>
          <target state="translated">&lt;a href=&quot;qbytearray#reverse_iterator-typedef&quot;&gt;QByteArray :: reverse_iterator&lt;/a&gt; QByteArray :: rend ()</target>
        </trans-unit>
        <trans-unit id="bd2b31c057f9c830aa14ffc18ae43fb06b848b8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; QQuickGraphicsConfiguration::deviceExtensions() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884f4e4c72563e9fb2777a860f3c1f3527779406" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; QVulkanInstance::extensions() const</source>
          <target state="translated">&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; QVulkanInstance :: extensions () const</target>
        </trans-unit>
        <trans-unit id="983eb63e674f80bc22f41eb638e78110fb998839" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; QVulkanInstance::layers() const</source>
          <target state="translated">&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; QVulkanInstance :: Layers () const</target>
        </trans-unit>
        <trans-unit id="e8242c46fd7897ddbf85757e537dee36f59c6687" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; is actually just a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;. It is documented as a full class just for simplicity of documenting the member methods that exist only in &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; на самом деле просто &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt;. Он задокументирован как полный класс только для простоты документирования методов-членов, которые существуют только в &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="998412eb7763f98ce4a412dd02acf965a3fe29e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; provides both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style const iterator is simply a type definition for &lt;a href=&quot;qlistiterator&quot;&gt;QListIterator&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; обеспечивает как &lt;a href=&quot;containers#java-style-iterators&quot;&gt;итераторы в стиле Java&lt;/a&gt; и &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;итераторы в стиле STL&lt;/a&gt; . Константный итератор в стиле Java - это просто определение типа для &lt;a href=&quot;qlistiterator&quot;&gt;QListIterator&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="d80a088d5845b80bc9c4a31300a8476f590dd498" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; provides both &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style non-const iterator is simply a type definition for &lt;a href=&quot;qmutablelistiterator&quot;&gt;QMutableListIterator&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; обеспечивает как &lt;a href=&quot;containers#java-style-iterators&quot;&gt;итераторы в стиле Java&lt;/a&gt; и &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;итераторы в стиле STL&lt;/a&gt; . &lt;a href=&quot;qmutablelistiterator&quot;&gt;Неконстантный&lt;/a&gt; итератор в стиле Java - это просто определение типа для QMutableListIterator &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt;.</target>
        </trans-unit>
        <trans-unit id="0663518fb7ff1dfd803ac6e975a7d5348d23c991" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; provides both &lt;a href=&quot;java-style-iterators#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style const iterator is simply a type definition for &lt;a href=&quot;qlistiterator&quot;&gt;QListIterator&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0509562e6438fce17ff1ecad9ac50622a69707b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; provides both &lt;a href=&quot;java-style-iterators#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style non-const iterator is simply a type definition for &lt;a href=&quot;qmutablelistiterator&quot;&gt;QMutableListIterator&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a059ef2bedc8786c199a5f36447f87ca5009916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt;, &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt;, &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;, &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;, &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;, &lt;a href=&quot;qsignalspy&quot;&gt;QSignalSpy&lt;/a&gt;, &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;, &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;, &lt;a href=&quot;qtesteventlist&quot;&gt;QTestEventList&lt;/a&gt;, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qvulkaninfovector&quot;&gt;QVulkanInfoVector&lt;/a&gt;, and &lt;a href=&quot;qxmlstreamattributes&quot;&gt;QXmlStreamAttributes&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2325912e73c007dc191ab19fd469bb530c478db8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt;, &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt;, &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;, and &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbytearraylist&quot;&gt;QByteArrayList&lt;/a&gt; , &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt; , &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; и &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a601c4f37aa0398fc7924333a90986e9abf1d9a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearraymatcher#QByteArrayMatcher&quot;&gt;QByteArrayMatcher&lt;/a&gt; &amp;amp;QByteArrayMatcher::operator=(const &lt;a href=&quot;qbytearraymatcher#QByteArrayMatcher&quot;&gt;QByteArrayMatcher&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qbytearraymatcher#QByteArrayMatcher&quot;&gt;QByteArrayMatcher&lt;/a&gt; &amp;amp; QByteArrayMatcher :: operator = (const &lt;a href=&quot;qbytearraymatcher#QByteArrayMatcher&quot;&gt;QByteArrayMatcher&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3fc9698d713ffd643ac89de6296f55fc1159c210" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview&quot;&gt;QByteArrayView&lt;/a&gt; does not support mutable iterators, so this is the same as &lt;a href=&quot;qbytearrayview#const_iterator-typedef&quot;&gt;const_iterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d7210edb6563aee7bdb369e5df349be23a4dd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview&quot;&gt;QByteArrayView&lt;/a&gt; does not support mutable pointers, so this is the same as &lt;a href=&quot;qbytearrayview#const_pointer-typedef&quot;&gt;const_pointer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d842188bbd97ebe55ae2b893fc7bb3da8a297b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview&quot;&gt;QByteArrayView&lt;/a&gt; does not support mutable references, so this is the same as &lt;a href=&quot;qbytearrayview#const_reference-typedef&quot;&gt;const_reference&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84a075bd90b1146f89f4d19a97e0b96bbaf1d25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview&quot;&gt;QByteArrayView&lt;/a&gt; does not support mutable reverse iterators, so this is the same as &lt;a href=&quot;qbytearrayview#const_reverse_iterator-typedef&quot;&gt;const_reverse_iterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ca2476e3af81b50593d657ad02d6a4257f4789" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#QByteArrayView&quot;&gt;QByteArrayView&lt;/a&gt; QByteArrayView::chopped(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54656d958009b88d68422c6294878094d1f5d5f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#QByteArrayView&quot;&gt;QByteArrayView&lt;/a&gt; QByteArrayView::first(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436674f3ecc6a9a1bd90e90343e704764913aaf8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#QByteArrayView&quot;&gt;QByteArrayView&lt;/a&gt; QByteArrayView::last(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e825ac62d776bd25da95446ff85fc181a09c84a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#QByteArrayView&quot;&gt;QByteArrayView&lt;/a&gt; QByteArrayView::sliced(qsizetype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21f8d199253da13b1ebae560b19268954e06483" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_iterator-typedef&quot;&gt;QByteArrayView::const_iterator&lt;/a&gt; QByteArrayView::begin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe6f3a2067383b89d3cc1bc88b7c8a946400482" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_iterator-typedef&quot;&gt;QByteArrayView::const_iterator&lt;/a&gt; QByteArrayView::cbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe364fe170b51068d8264ec9e706a5c1595fd4f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_iterator-typedef&quot;&gt;QByteArrayView::const_iterator&lt;/a&gt; QByteArrayView::cend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac921d0f49725fd6cb21f23cc403a26e638a9bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_iterator-typedef&quot;&gt;QByteArrayView::const_iterator&lt;/a&gt; QByteArrayView::end() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da077cb089c617007092fd292682c37d785c2900" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_pointer-typedef&quot;&gt;QByteArrayView::const_pointer&lt;/a&gt; QByteArrayView::constData() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1219828281f80e6cb1c85410b6c2e104997027" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_pointer-typedef&quot;&gt;QByteArrayView::const_pointer&lt;/a&gt; QByteArrayView::data() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bd195d71aee88bc130d7bb3f512b2cdf538377" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_reverse_iterator-typedef&quot;&gt;QByteArrayView::const_reverse_iterator&lt;/a&gt; QByteArrayView::crbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1422f92119c63d8e5106447be310f8b3c1029ed4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_reverse_iterator-typedef&quot;&gt;QByteArrayView::const_reverse_iterator&lt;/a&gt; QByteArrayView::crend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceb85d85f3734bf99b25fcfb5775d01e57d516af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_reverse_iterator-typedef&quot;&gt;QByteArrayView::const_reverse_iterator&lt;/a&gt; QByteArrayView::rbegin() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165ee7003bc5ccb371003e1c8cd988e7423143f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbytearrayview#const_reverse_iterator-typedef&quot;&gt;QByteArrayView::const_reverse_iterator&lt;/a&gt; QByteArrayView::rend() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f54671cfc835e0020167d1921bf3b133c03c38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbyteref&quot;&gt;QByteRef&lt;/a&gt; QByteArray::back()</source>
          <target state="translated">&lt;a href=&quot;qbyteref&quot;&gt;QByteRef&lt;/a&gt; QByteArray :: back ()</target>
        </trans-unit>
        <trans-unit id="8e020ce47f388be5078b05e08d8dcd23be36bc57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbyteref&quot;&gt;QByteRef&lt;/a&gt; QByteArray::front()</source>
          <target state="translated">&lt;a href=&quot;qbyteref&quot;&gt;QByteRef&lt;/a&gt; QByteArray :: front ()</target>
        </trans-unit>
        <trans-unit id="1040e7e3750e308b228eadde72602f5be2a88009" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbyteref&quot;&gt;QByteRef&lt;/a&gt; QByteArray::operator[](&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qbyteref&quot;&gt;QByteRef&lt;/a&gt; QByteArray :: operator [] ( &lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfe47378eb1c90f04075cc7e92cc27550b99c9d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qbyteref&quot;&gt;QByteRef&lt;/a&gt; QByteArray::operator[](int</source>
          <target state="translated">&lt;a href=&quot;qbyteref&quot;&gt;QByteRef&lt;/a&gt; QByteArray :: operator [] (int</target>
        </trans-unit>
        <trans-unit id="897edb80ee7af45abef4aa01efeba44e98f44027" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt;&amp;lt;Key, T&amp;gt; defines a cache that stores objects of type T associated with keys of type Key. For example, here's the definition of a cache that stores objects of type Employee associated with an integer key:</source>
          <target state="translated">&lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; &amp;lt;Key, T&amp;gt; определяет кеш, в котором хранятся объекты типа T, связанные с ключами типа Key. Например, вот определение кеша, в котором хранятся объекты типа Employee, связанные с целочисленным ключом:</target>
        </trans-unit>
        <trans-unit id="1ee3980757a66b0c816b7c1331b6029e0f484952" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt;&amp;lt;Key, T&amp;gt; provides a cache to store objects of a certain type T associated with keys of type Key.</source>
          <target state="translated">&lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; &amp;lt;Key, T&amp;gt; предоставляет кеш для хранения объектов определенного типа T, связанных с ключами типа Key.</target>
        </trans-unit>
        <trans-unit id="dc93da7cdbf431ce33420ee899857a884cd2fda8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt; (2) provides a monthly calendar widget that can be used to select dates.</source>
          <target state="translated">&lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt; (2) предоставляет виджет ежемесячного календаря, который можно использовать для выбора дат.</target>
        </trans-unit>
        <trans-unit id="413c2f2fb0dd8fc34a18bc856e46e2e0fe102617" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt; *QDateTimeEdit::calendarWidget() const</source>
          <target state="translated">&lt;a href=&quot;qcalendarwidget&quot;&gt;QCalendarWidget&lt;/a&gt; * QDateTimeEdit :: calendarWidget () const</target>
        </trans-unit>
        <trans-unit id="ce7f776218bb2b336aaea746eef8e9ffc7e3dd83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; also emits &lt;a href=&quot;qcamera#lockStatusChanged&quot;&gt;lockStatusChanged&lt;/a&gt;(&lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera::LockType&lt;/a&gt;, &lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera::LockStatus&lt;/a&gt;) on individual lock status changes and &lt;a href=&quot;qcamera#lockStatusChanged&quot;&gt;lockStatusChanged&lt;/a&gt;(&lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera::LockStatus&lt;/a&gt;) signal on composite status changes.</source>
          <target state="translated">&lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; также излучает &lt;a href=&quot;qcamera#lockStatusChanged&quot;&gt;lockStatusChanged&lt;/a&gt; ( &lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera :: LockType&lt;/a&gt; , &lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera :: LockStatus&lt;/a&gt; ) при изменении статуса отдельной блокировки и &lt;a href=&quot;qcamera#lockStatusChanged&quot;&gt;сигнал lockStatusChanged&lt;/a&gt; ( &lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera :: LockStatus&lt;/a&gt; ) при изменении составного статуса.</target>
        </trans-unit>
        <trans-unit id="ce2e7c343dba8ab192d5a86c402222f829f6464e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; can be used with &lt;a href=&quot;qcameraviewfinder&quot;&gt;QCameraViewfinder&lt;/a&gt; for viewfinder display, &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt; for video recording and &lt;a href=&quot;qcameraimagecapture&quot;&gt;QCameraImageCapture&lt;/a&gt; for image taking.</source>
          <target state="translated">&lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; можно использовать с &lt;a href=&quot;qcameraviewfinder&quot;&gt;QCameraViewfinder&lt;/a&gt; для отображения в видоискателе, &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt; для записи видео и &lt;a href=&quot;qcameraimagecapture&quot;&gt;QCameraImageCapture&lt;/a&gt; для съемки изображений.</target>
        </trans-unit>
        <trans-unit id="d57dc1f4a9af287d0b5bb6de9b9437218a38bdce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; saves all the capture parameters like exposure settings or image processing parameters, so changes to camera parameters after capture() is called do not affect previous capture requests.</source>
          <target state="translated">&lt;a href=&quot;qcamera&quot;&gt;QCamera&lt;/a&gt; сохраняет все параметры захвата, такие как настройки экспозиции или параметры обработки изображения, поэтому изменения параметров камеры после вызова функции capture () не влияют на предыдущие запросы захвата.</target>
        </trans-unit>
        <trans-unit id="a94c3b8abef709a9a363f5ea33af628dd4c165dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera#Error-enum&quot;&gt;QCamera::Error&lt;/a&gt; QCamera::error() const</source>
          <target state="translated">&lt;a href=&quot;qcamera#Error-enum&quot;&gt;QCamera :: Error&lt;/a&gt; QCamera :: error () const</target>
        </trans-unit>
        <trans-unit id="ff65c9da57e7405ebc7fc0469b60a13aff4db2a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera::LockStatus&lt;/a&gt; QCamera::lockStatus() const</source>
          <target state="translated">&lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera :: LockStatus&lt;/a&gt; QCamera :: lockStatus () const</target>
        </trans-unit>
        <trans-unit id="56d18d382746d75f57dcfa167f79bb88d49335bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera::LockStatus&lt;/a&gt; QCamera::lockStatus(&lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera::LockType&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera :: LockStatus&lt;/a&gt; QCamera :: lockStatus ( &lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera :: LockType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79b70aa1dfabf92c39208fcca4149a0668b8a8c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera::LockTypes&lt;/a&gt; QCamera::requestedLocks() const</source>
          <target state="translated">&lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera :: LockTypes&lt;/a&gt; QCamera :: requestLocks () const</target>
        </trans-unit>
        <trans-unit id="51830d6788359158d27a69c5b399e93b72a1a814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera::LockTypes&lt;/a&gt; QCamera::supportedLocks() const</source>
          <target state="translated">&lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera :: LockTypes&lt;/a&gt; QCamera :: supportedLocks () const</target>
        </trans-unit>
        <trans-unit id="90056884f91b045b3522894b8c20f243ff8a1b2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamera#Position-enum&quot;&gt;QCamera::Position&lt;/a&gt; QCameraInfo::position() const</source>
          <target state="translated">&lt;a href=&quot;qcamera#Position-enum&quot;&gt;QCamera :: Position&lt;/a&gt; QCameraInfo :: position () const</target>
        </trans-unit>
        <trans-unit id="138331ad56f1c3932f94baa6d6bada4a505516e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraexposure&quot;&gt;QCameraExposure&lt;/a&gt; *QCamera::exposure() const</source>
          <target state="translated">&lt;a href=&quot;qcameraexposure&quot;&gt;QCameraExposure&lt;/a&gt; * QCamera :: Exposure () const</target>
        </trans-unit>
        <trans-unit id="ef336c8ff458f696ddc605ef3cfbdfbf7b30d8a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamerafocus&quot;&gt;QCameraFocus&lt;/a&gt; *QCamera::focus() const</source>
          <target state="translated">&lt;a href=&quot;qcamerafocus&quot;&gt;QCameraFocus&lt;/a&gt; * QCamera :: focus () const</target>
        </trans-unit>
        <trans-unit id="f77702509e03724766c43fc7191fc6e4f7acaabe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamerafocuszone#FocusZoneStatus-enum&quot;&gt;QCameraFocusZone::FocusZoneStatus&lt;/a&gt; QCameraFocusZone::status() const</source>
          <target state="translated">&lt;a href=&quot;qcamerafocuszone#FocusZoneStatus-enum&quot;&gt;QCameraFocusZone :: FocusZoneStatus&lt;/a&gt; QCameraFocusZone :: status () const</target>
        </trans-unit>
        <trans-unit id="64661f55a1773c4f1afe584be1d677eb3c9a7f46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraimagecapture&quot;&gt;QCameraImageCapture&lt;/a&gt;, &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt;, &lt;a href=&quot;qmediaplaylist&quot;&gt;QMediaPlaylist&lt;/a&gt;, &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt;, &lt;a href=&quot;qradiodata&quot;&gt;QRadioData&lt;/a&gt;, and &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qcameraimagecapture&quot;&gt;QCameraImageCapture&lt;/a&gt; , &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; , &lt;a href=&quot;qmediaplaylist&quot;&gt;QMediaPlaylist&lt;/a&gt; , &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt; , &lt;a href=&quot;qradiodata&quot;&gt;QRadioData&lt;/a&gt; и &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="47bafcb2391f9e8dd392f6a8abf880bf71fedf6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraimagecapture#CaptureDestination-enum&quot;&gt;QCameraImageCapture::CaptureDestinations&lt;/a&gt; QCameraImageCapture::captureDestination() const</source>
          <target state="translated">&lt;a href=&quot;qcameraimagecapture#CaptureDestination-enum&quot;&gt;QCameraImageCapture :: CaptureDestinations&lt;/a&gt; QCameraImageCapture :: captureDestination () const</target>
        </trans-unit>
        <trans-unit id="7be8dcaca9168f777354d70ebc6aa29483193503" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraimagecapture#Error-enum&quot;&gt;QCameraImageCapture::Error&lt;/a&gt; QCameraImageCapture::error() const</source>
          <target state="translated">&lt;a href=&quot;qcameraimagecapture#Error-enum&quot;&gt;QCameraImageCapture :: Error&lt;/a&gt; QCameraImageCapture :: error () const</target>
        </trans-unit>
        <trans-unit id="46c6d3c27a6e2db70f02a983cb168e56d910e4c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraimageprocessing&quot;&gt;QCameraImageProcessing&lt;/a&gt; *QCamera::imageProcessing() const</source>
          <target state="translated">&lt;a href=&quot;qcameraimageprocessing&quot;&gt;QCameraImageProcessing&lt;/a&gt; * QCamera :: imageProcessing () const</target>
        </trans-unit>
        <trans-unit id="3a5801027bc709c7b4658af9b3595fbba8598b1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraimageprocessing#ColorFilter-enum&quot;&gt;QCameraImageProcessing::ColorFilter&lt;/a&gt; QCameraImageProcessing::colorFilter() const</source>
          <target state="translated">&lt;a href=&quot;qcameraimageprocessing#ColorFilter-enum&quot;&gt;QCameraImageProcessing :: ColorFilter&lt;/a&gt; QCameraImageProcessing :: colorFilter () const</target>
        </trans-unit>
        <trans-unit id="454a80f28fd9091984b967301dfccb9e7cbaa6a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraimageprocessing#WhiteBalanceMode-enum&quot;&gt;QCameraImageProcessing::WhiteBalanceMode&lt;/a&gt; QCameraImageProcessing::whiteBalanceMode() const</source>
          <target state="translated">&lt;a href=&quot;qcameraimageprocessing#WhiteBalanceMode-enum&quot;&gt;QCameraImageProcessing :: WhiteBalanceMode&lt;/a&gt; QCameraImageProcessing :: whiteBalanceMode () const</target>
        </trans-unit>
        <trans-unit id="1cab7b5983e0bf4840b71732998ad56472b054bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamerainfo&quot;&gt;QCameraInfo&lt;/a&gt; lets you query for camera devices that are currently available on the system.</source>
          <target state="translated">&lt;a href=&quot;qcamerainfo&quot;&gt;QCameraInfo&lt;/a&gt; позволяет вам запрашивать устройства камеры, которые в настоящее время доступны в системе.</target>
        </trans-unit>
        <trans-unit id="f9f5f9c776b0db66802a016a1f34d6a44f36815f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcamerainfo#QCameraInfo&quot;&gt;QCameraInfo&lt;/a&gt; &amp;amp;QCameraInfo::operator=(const &lt;a href=&quot;qcamerainfo#QCameraInfo&quot;&gt;QCameraInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qcamerainfo#QCameraInfo&quot;&gt;QCameraInfo&lt;/a&gt; &amp;amp; QCameraInfo :: operator = (const &lt;a href=&quot;qcamerainfo#QCameraInfo&quot;&gt;QCameraInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2e93234379285ca16812f3608ef1705a8940d3ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraviewfindersettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; QCamera::viewfinderSettings() const</source>
          <target state="translated">&lt;a href=&quot;qcameraviewfindersettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; QCamera :: viewfinderSettings () const</target>
        </trans-unit>
        <trans-unit id="4729703d0f660cbf18cb5a63caf40035d93a0672" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraviewfindersettings#QCameraViewfinderSettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;amp;QCameraViewfinderSettings::operator=(&lt;a href=&quot;qcameraviewfindersettings#QCameraViewfinderSettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qcameraviewfindersettings#QCameraViewfinderSettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;amp; QCameraViewfinderSettings :: operator = ( &lt;a href=&quot;qcameraviewfindersettings#QCameraViewfinderSettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="c55b4cbd4bee83ab6bac2d349bb8d1412a84d87f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcameraviewfindersettings#QCameraViewfinderSettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;amp;QCameraViewfinderSettings::operator=(const &lt;a href=&quot;qcameraviewfindersettings#QCameraViewfinderSettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qcameraviewfindersettings#QCameraViewfinderSettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;amp; QCameraViewfinderSettings :: operator = (const &lt;a href=&quot;qcameraviewfindersettings#QCameraViewfinderSettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="571799f037011c1cbddebdf4b67ec6b576b31a22" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcanbus&quot;&gt;QCanBus&lt;/a&gt; loads Qt CAN Bus plugins at runtime. The ownership of serial bus plugins is transferred to the loader.</source>
          <target state="translated">&lt;a href=&quot;qcanbus&quot;&gt;QCanBus&lt;/a&gt; загружает подключаемые модули Qt CAN Bus во время выполнения. Право собственности на плагины последовательной шины передается загрузчику.</target>
        </trans-unit>
        <trans-unit id="7b808045075bbf59084d9d82ea09ae71c9b991fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcanbus&quot;&gt;QCanBus&lt;/a&gt; provides an API to create a &lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; from a chosen plugin.</source>
          <target state="translated">&lt;a href=&quot;qcanbus&quot;&gt;QCanBus&lt;/a&gt; предоставляет API для создания &lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; из выбранного плагина.</target>
        </trans-unit>
        <trans-unit id="ec5811525692c3f46e7b9c573a9163e1cf4329db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; *QCanBus::createDevice(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; * QCanBus :: createDevice (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a825444bfc96cac478fd91a5a900009a8e6b7c25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; can use &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; for read and write operations. It contains the frame identifier and the data payload. &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; contains the timestamp of the moment it was read.</source>
          <target state="translated">&lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; может использовать &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; для операций чтения и записи. Он содержит идентификатор кадра и полезные данные. &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; содержит метку времени, когда он был прочитан.</target>
        </trans-unit>
        <trans-unit id="18549786a0e487e71182490e0f8137380ac6b98e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; can use QCanBusFrame for read and write operations. It contains the frame identifier and the data payload. QCanBusFrame contains the timestamp of the moment it was read.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
