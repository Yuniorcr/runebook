<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ru" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="1c631142c8257d4db3fa51eb93589e420de520df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QAbstractState::QAbstractState(&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QAbstractState :: QAbstractState ( &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="723e43501bf80a11308a1b120c13ab583aedecd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QAbstractTexture::QAbstractTexture(&lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore::QNode&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QAbstractTexture :: QAbstractTexture ( &lt;a href=&quot;qt3dcore-qnode&quot;&gt;Qt3DCore :: QNode&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="dfd3421fb1fbfed002060b740821b195185f16a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QAbstractTexture::QAbstractTexture(&lt;a href=&quot;qt3drender-qabstracttexture#Target-enum&quot;&gt;Qt3DRender::QAbstractTexture::Target&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QAbstractTexture :: QAbstractTexture ( &lt;a href=&quot;qt3drender-qabstracttexture#Target-enum&quot;&gt;Qt3DRender :: QAbstractTexture :: Target&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0811f06ce4fd1d666cb6ed9a76ee587763104df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QAudioDecoderControl::QAudioDecoderControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QAudioDecoderControl :: QAudioDecoderControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="451b127850575e2a5616878b1bb3b93fcc8033ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QAudioEncoderSettingsControl::QAudioEncoderSettingsControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QAudioEncoderSettingsControl :: QAudioEncoderSettingsControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="89619e4135c031e3bf7d5700f76b4ad7b2039a35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QAudioInputSelectorControl::QAudioInputSelectorControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QAudioInputSelectorControl :: QAudioInputSelectorControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c8e9d5bf5d6b6c066d1d8f041c311e75be75058b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QAudioOutputSelectorControl::QAudioOutputSelectorControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QAudioOutputSelectorControl :: QAudioOutputSelectorControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bbf01194d406e5fa4dac450f36903b05288af8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QAudioRoleControl::QAudioRoleControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QAudioRoleControl :: QAudioRoleControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="22834d8095c52f27acb21fc51da9c30fe4bc294b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QBluetoothTransferReply::QBluetoothTransferReply(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QBluetoothTransferReply :: QBluetoothTransferReply ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="513b4932c94dbab1a256145a4cb95252108b305b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraCaptureBufferFormatControl::QCameraCaptureBufferFormatControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraCaptureBufferFormatControl :: QCameraCaptureBufferFormatControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="cc195a5fbb44a5c7acf19218643f22967e1a92f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraCaptureDestinationControl::QCameraCaptureDestinationControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraCaptureDestinationControl :: QCameraCaptureDestinationControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6e8e01453f60cfd16048d34433177afd1cb007f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraControl::QCameraControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraControl :: QCameraControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2312199353e306de60acd62d4111695fa6263a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraExposureControl::QCameraExposureControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraExposureControl :: QCameraExposureControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f9c6d83c6c844d9e4ed5d76604591f22a3418534" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraFeedbackControl::QCameraFeedbackControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraFeedbackControl :: QCameraFeedbackControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="980bfc18c63cafa8939e79bbb1593c084dbc0ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraFlashControl::QCameraFlashControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraFlashControl :: QCameraFlashControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="79ae073bd54b3c9bb8d1f86a79c61c487f281d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraFocusControl::QCameraFocusControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraFocusControl :: QCameraFocusControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c5d3ab1b80ebb47f832617df34dc5200ab11b07d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraImageCaptureControl::QCameraImageCaptureControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraImageCaptureControl :: QCameraImageCaptureControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="73244e4b0530f7d8595a44d405d166d3ed327b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraImageProcessingControl::QCameraImageProcessingControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraImageProcessingControl :: QCameraImageProcessingControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4f9776fc3266c20f97c54828eae2ddef7acd3b10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraInfoControl::QCameraInfoControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraInfoControl :: QCameraInfoControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2aafec3c900ef61543acd6104f4e99bbe417976f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraLocksControl::QCameraLocksControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraLocksControl :: QCameraLocksControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="00b0e107b82a92ff3eb89d76bfacd81c4a078c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraViewfinderSettingsControl2::QCameraViewfinderSettingsControl2(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraViewfinderSettingsControl2 :: QCameraViewfinderSettingsControl2 ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d4f2d19b57a5e2a8e9b5795294271521467dc698" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraViewfinderSettingsControl::QCameraViewfinderSettingsControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraViewfinderSettingsControl :: QCameraViewfinderSettingsControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7e71d4900dcbb1241c0574b4018dc4a7bb2380a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCameraZoomControl::QCameraZoomControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCameraZoomControl :: QCameraZoomControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d530040d5b9c7d6ef44beaa9557980405c124bf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QCustomAudioRoleControl::QCustomAudioRoleControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QCustomAudioRoleControl :: QCustomAudioRoleControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b64956e8837429b0ef755d61931e0aaa678d63be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QDBusAbstractAdaptor::QDBusAbstractAdaptor(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QDBusAbstractAdaptor :: QDBusAbstractAdaptor ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="64d3dd9114c8b8ded15df3349b79e643d1570bbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QGeoCodeReply::QGeoCodeReply(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QGeoCodeReply :: QGeoCodeReply ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5d4dd3dbe1c6ad5c00610f4d76db215cdfabf3a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QGeoRoute::QGeoRoute(const &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt;&amp;lt;QGeoRoutePrivate&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QGeoRoute :: QGeoRoute (const &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; &amp;lt;QGeoRoutePrivate&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c10a29eccb47b38ef3f0aee498ff7b28a83fe2c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QGeoRouteReply::QGeoRouteReply(const &lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QGeoRouteReply :: QGeoRouteReply (const &lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="73c8fd7ba8f74657607fafa5c4c213f08fff7eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QImageEncoderControl::QImageEncoderControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QImageEncoderControl :: QImageEncoderControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="95a30dbb41733fc10e6cfdbf278497acb8e489bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QInputDeviceIntegration::QInputDeviceIntegration(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cb8e5358c20063c926fdd255ce37740d30a5c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QList&amp;lt;&lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt;&amp;gt; QTextBlockGroup::blockList() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QList &amp;lt; &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;gt; QTextBlockGroup :: blockList () const</target>
        </trans-unit>
        <trans-unit id="8d0c991660268b6733ac76ce41b220e41defcc96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaAudioProbeControl::QMediaAudioProbeControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaAudioProbeControl :: QMediaAudioProbeControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c0ff7b4167daaac72b2b7b78039215dc8f2a815e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaAvailabilityControl::QMediaAvailabilityControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaAvailabilityControl :: QMediaAvailabilityControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ac4a76d0c9c9004156d2025d6e0b62a0038175f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaContainerControl::QMediaContainerControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaContainerControl :: QMediaContainerControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="591a1322e9357bdd982e104d4ce7c9cc70a66102" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaControl::QMediaControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaControl :: QMediaControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="97edf8a188a5c262c4a619b00427d3c09494db83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaGaplessPlaybackControl::QMediaGaplessPlaybackControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaGaplessPlaybackControl :: QMediaGaplessPlaybackControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4e06770e2109c24f7ff03a13532ad7fc3db234bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaObject::QMediaObject(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaObject :: QMediaObject ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="409d83f6f0fd7113a7940272b533c1eb6fb7e191" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaPlayerControl::QMediaPlayerControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaPlayerControl :: QMediaPlayerControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="76062e6404c80677c641f73feece8808f390e412" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaRecorderControl::QMediaRecorderControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaRecorderControl :: QMediaRecorderControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c4cdb3803ceec96339cdad268fc37291686ddaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaService::QMediaService(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaService :: QMediaService ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2c92b40645e9c6be8eacd15e7930b00a5565b2df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaStreamsControl::QMediaStreamsControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaStreamsControl :: QMediaStreamsControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ec8670c318aac247176ecb4293c3ccb0fbc835ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMediaVideoProbeControl::QMediaVideoProbeControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMediaVideoProbeControl :: QMediaVideoProbeControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="47ce0fd53ab312d2d1557f10c668d104fa077f96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMetaDataReaderControl::QMetaDataReaderControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMetaDataReaderControl :: QMetaDataReaderControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eda7576748c63c70915cf505286acb27ac47f6a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QMetaDataWriterControl::QMetaDataWriterControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QMetaDataWriterControl :: QMetaDataWriterControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="03c61fd1bcd8ca89d168117c45f191ca95bc24d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QModbusPdu::QModbusPdu(&lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusPdu::FunctionCode&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QModbusPdu :: QModbusPdu ( &lt;a href=&quot;qmodbuspdu#FunctionCode-enum&quot;&gt;QModbusPdu :: FunctionCode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e69edb7f948cf371d2c17bc76f9dbcd80066278f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QModbusPdu::QModbusPdu(const &lt;a href=&quot;qmodbuspdu#QModbusPdu&quot;&gt;QModbusPdu&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QModbusPdu :: QModbusPdu (const &lt;a href=&quot;qmodbuspdu#QModbusPdu&quot;&gt;QModbusPdu&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2b9d064deeaddc64a55dfe628fbd9e3493767e56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QNetworkReply::QNetworkReply(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QNetworkReply :: QNetworkReply ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ad9bb0669bf12f3de12e502bd3c5787ee711c4cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QOpenGLFramebufferObject *Renderer::framebufferObject() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa61a8a4e0b8f6cec22f307af5ced726f9ef9ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QPaintDevice::QPaintDevice()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QPaintDevice :: QPaintDevice ()</target>
        </trans-unit>
        <trans-unit id="65c83ff732843a72a342a716b3177f52543bf6dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QPdfDestination::QPdfDestination()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1609eff1e37f6f0d933177d65aa0491d0d787a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QPlace::QPlace(const &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;QPlacePrivate&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QPlace :: QPlace (const &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;QPlacePrivate&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="16dced6f94ffc64ba470ea95f2b0893ef84ecdd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QPropertyUpdatedChangeBase::QPropertyUpdatedChangeBase(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QPropertyUpdatedChangeBase :: QPropertyUpdatedChangeBase ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ac9b4e0d512992fd75e6d89da0099179146b346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QPropertyValueAddedChangeBase::QPropertyValueAddedChangeBase(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QPropertyValueAddedChangeBase :: QPropertyValueAddedChangeBase ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89b6f3add68cda8fdc98480812b07e39f1dc44c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QPropertyValueRemovedChangeBase::QPropertyValueRemovedChangeBase(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QPropertyValueRemovedChangeBase :: QPropertyValueRemovedChangeBase ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="218a4b2f1e3d6449b7112a67f7c17c5633d75266" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QQmlPropertyMap::QQmlPropertyMap(DerivedType *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QQmlPropertyMap :: QQmlPropertyMap (DerivedType *</target>
        </trans-unit>
        <trans-unit id="c22c19703b2993a14bbccb5ac5a5e49141c0ab4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QQuickColorGroup::QQuickColorGroup(QQuickPalette &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200b60a0327f46c4960baa7c15c691b4cbd3e89d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QRadioDataControl::QRadioDataControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QRadioDataControl :: QRadioDataControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="28db1b88d3f9cf386251a606619a2b62a54c0111" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QRadioTunerControl::QRadioTunerControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QRadioTunerControl :: QRadioTunerControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="48040155b372653e390c056cc71f39d0ed23aaf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QSceneChange::QSceneChange(&lt;a href=&quot;https://doc.qt.io/qt-5.15/qt3dcore-qscenechange-obsolete.html#ChangeFlag-enum&quot;&gt;Qt3DCore::ChangeFlag&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80645f51dd862f1c818dd1cade7a04240a48c8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QSceneChange::QSceneChange(&lt;a href=&quot;qt3dcore-qscenechange#ChangeFlag-enum&quot;&gt;Qt3DCore::ChangeFlag&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QSceneChange :: QSceneChange ( &lt;a href=&quot;qt3dcore-qscenechange#ChangeFlag-enum&quot;&gt;Qt3DCore :: ChangeFlag&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db8204bdc592dd4bf2997171c19d7d394dac438f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QScxmlDataModel::QScxmlDataModel(QScxmlDataModelPrivate &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QScxmlDataModel :: QScxmlDataModel (QScxmlDataModelPrivate &amp;amp;</target>
        </trans-unit>
        <trans-unit id="99e0229de318d9a3a68f3187b0e5a52e38f63af0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QSqlDatabase::QSqlDatabase(&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QSqlDatabase :: QSqlDatabase ( &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4c862386dc8912240c3cff9693b223fe120f20ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QSqlDatabase::QSqlDatabase(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QSqlDatabase :: QSqlDatabase (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2f4e0bb88ee3eadb352ac188abfc95e47c5db772" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QSqlResult::QSqlResult(const &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QSqlResult :: QSqlResult (const &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="96271ed25da2a4caf6c9666caa7c7297ed1b3017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QStandardItem::QStandardItem(const &lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QStandardItem :: QStandardItem (const &lt;a href=&quot;qstandarditem#QStandardItem&quot;&gt;QStandardItem&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d23b341a34b269d599e221426854be6276ffb936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QStaticPropertyUpdatedChangeBase::QStaticPropertyUpdatedChangeBase(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QStaticPropertyUpdatedChangeBase :: QStaticPropertyUpdatedChangeBase ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d969d2b7472006d82a494351b907fec9dba2fbf6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QStaticPropertyValueAddedChangeBase::QStaticPropertyValueAddedChangeBase(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QStaticPropertyValueAddedChangeBase :: QStaticPropertyValueAddedChangeBase ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84fe53bf69a31d26b5b383c86f9a5bb7bfab2557" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QStaticPropertyValueRemovedChangeBase::QStaticPropertyValueRemovedChangeBase(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QStaticPropertyValueRemovedChangeBase :: QStaticPropertyValueRemovedChangeBase ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e032fac81e0c888b40b2d0b5bfb2fbec9f125217" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QSurface::QSurface(&lt;a href=&quot;qsurface#SurfaceClass-enum&quot;&gt;QSurface::SurfaceClass&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QSurface :: QSurface ( &lt;a href=&quot;qsurface#SurfaceClass-enum&quot;&gt;QSurface :: SurfaceClass&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e79e04b93243b5e0bfe462898243c5a20591e93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QTextBlockGroup::QTextBlockGroup(&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QTextBlockGroup :: QTextBlockGroup ( &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="eebb8d8e1e10fdf161b846351b2e2a68efd867b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QTextCodec::QTextCodec()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QTextCodec :: QTextCodec ()</target>
        </trans-unit>
        <trans-unit id="51da16aa2356252e3ac350b34ef6b1217fddd1b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QTextObject::QTextObject(&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QTextObject :: QTextObject ( &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f13b3a80d381c66c44a5e307dd4bf4beeb46a3db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QVideoDeviceSelectorControl::QVideoDeviceSelectorControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QVideoDeviceSelectorControl :: QVideoDeviceSelectorControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6aa9c66b35307c2d9277e54e5aef34589c0f6372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QVideoEncoderSettingsControl::QVideoEncoderSettingsControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QVideoEncoderSettingsControl :: QVideoEncoderSettingsControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ff4394a521d08aab456a0ffea636af513097e3fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QVideoRendererControl::QVideoRendererControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QVideoRendererControl :: QVideoRendererControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="88caf3d3f72cb60488ee702766dbf53009d33721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QVideoWidgetControl::QVideoWidgetControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QVideoWidgetControl :: QVideoWidgetControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="855fcfed694315ee1fd9445449b37b6428c45e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;QVideoWindowControl::QVideoWindowControl(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; QVideoWindowControl :: QVideoWindowControl ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="54cfd5ecb59b191d13213f960982d501e788413a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;Renderer::Renderer()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; Renderer :: Renderer ()</target>
        </trans-unit>
        <trans-unit id="d6e3902dfa84b4ca127bfac78cb90da542df7ccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;T *QExplicitlySharedDataPointer::clone()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; T * QExplicitlySharedDataPointer :: clone ()</target>
        </trans-unit>
        <trans-unit id="428eb2168954bb5a4497535a331f56093fe0c10b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;T *QSharedDataPointer::clone()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; T * QSharedDataPointer :: clone ()</target>
        </trans-unit>
        <trans-unit id="d1e917ea841645e695178d63be915fb5152a7ce4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool Q3DObject::isDirty() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool Q3DObject :: isDirty () const</target>
        </trans-unit>
        <trans-unit id="419d202b1ba979ca9b0c8c56694fde280683e15e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QAbstractItemModel::beginMoveColumns(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QAbstractItemModel :: beginMoveColumns (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="57d15ff7189c9885bf6ebbff7948a82a7af1e504" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QAbstractItemModel::beginMoveRows(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QAbstractItemModel :: beginMoveRows (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8b63d5b2cc30eef03e63f6e04c17548db7369ac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QAxBase::initializeActive(IUnknown **</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QAxBase :: initializeActive (IUnknown **</target>
        </trans-unit>
        <trans-unit id="23d157a6436859121e0aee4dc6fe3e02e5f84a6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QAxBase::initializeFromFile(IUnknown **</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QAxBase :: initializeFromFile (IUnknown **</target>
        </trans-unit>
        <trans-unit id="25e28f49e4be1c41e34d145aef5b64510ba30bf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QAxBase::initializeLicensed(IUnknown **</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QAxBase :: initializeLicensed (IUnknown **</target>
        </trans-unit>
        <trans-unit id="63e9b45aa07779875e0e2572951004cb313e0c1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QAxBase::initializeRemote(IUnknown **</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QAxBase :: initializeRemote (IUnknown **</target>
        </trans-unit>
        <trans-unit id="e5b69cfc2507a671826e79c1ab7ab39eba0dde82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QAxBindable::requestPropertyChange(const char *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QAxBindable :: requestPropertyChange (const char *</target>
        </trans-unit>
        <trans-unit id="76cedd4c269a3d1899f6fad9e1d796512712a60b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QAxWidget::createHostWindow(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QAxWidget :: createHostWindow (bool</target>
        </trans-unit>
        <trans-unit id="ccfb49676b766601255731a660a8ae9e2fceb5e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QCanBusDevice::hasOutgoingFrames() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QCanBusDevice :: hasOutgoingFrames () const</target>
        </trans-unit>
        <trans-unit id="f070c605c31378722777e03b0c137a94410313f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QDBusAbstractAdaptor::autoRelaySignals() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QDBusAbstractAdaptor :: autoRelaySignals () const</target>
        </trans-unit>
        <trans-unit id="158b06d1b9288fcf7c6ef89e50493ae499809535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QGraphicsEffect::sourceIsPixmap() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QGraphicsEffect :: sourceIsPixmap () const</target>
        </trans-unit>
        <trans-unit id="d2f2191d2eae426bd7e2547dd0b21bfb5478dd69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QObject::isSignalConnected(const &lt;a href=&quot;qmetamethod&quot;&gt;QMetaMethod&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QObject :: isSignalConnected (const &lt;a href=&quot;qmetamethod&quot;&gt;QMetaMethod&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3e7a532009f91c13fa69f5de02ba823420550215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QQuickItem::heightValid() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QQuickItem :: heightValid () const</target>
        </trans-unit>
        <trans-unit id="a406eb9f49d7ee85f2dc08b8e98f3f0c3533e3f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QQuickItem::isComponentComplete() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QQuickItem :: isComponentComplete () const</target>
        </trans-unit>
        <trans-unit id="2cd7e4ba5995451904839f7def0c5f115d4ee394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QQuickItem::widthValid() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QQuickItem :: widthValid () const</target>
        </trans-unit>
        <trans-unit id="d1ac4bf71ab7c7d43ecf94a85c9093fe2eb310c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QResource::isDir() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QResource :: isDir () const</target>
        </trans-unit>
        <trans-unit id="c1f610d57f5eb8d67d55b5ea054fc20cbb4ab59d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QResource::isFile() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QResource :: isFile () const</target>
        </trans-unit>
        <trans-unit id="100fb5fabb07768052378d21f7667424b2015f56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QScxmlStateMachine::isActive(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QScxmlStateMachine :: isActive (int</target>
        </trans-unit>
        <trans-unit id="3a80819bc10a7b5cfb6737bab61431e4701e1c43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QSqlResult::hasOutValues() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QSqlResult :: hasOutValues ​​() const</target>
        </trans-unit>
        <trans-unit id="0f1d83600e90fdb60f39aec1c097b384cc73b0f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QSqlResult::isActive() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QSqlResult :: isActive () const</target>
        </trans-unit>
        <trans-unit id="9a3088bf9e910cd47dc6488c85a0cfafdd4835fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QSqlResult::isForwardOnly() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QSqlResult :: isForwardOnly () const</target>
        </trans-unit>
        <trans-unit id="03e0073362539f9425c5d908f6bf5ef91d311108" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QSqlResult::isSelect() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QSqlResult :: isSelect () const</target>
        </trans-unit>
        <trans-unit id="959c788f04856cdef5ec086dcd02a2e360680474" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QSqlResult::isValid() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QSqlResult :: isValid () const</target>
        </trans-unit>
        <trans-unit id="bcbf79a52454de9107480c5398edf73865f5e45b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QValue3DAxisFormatter::allowNegatives() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QValue3DAxisFormatter :: allowNegatives () const</target>
        </trans-unit>
        <trans-unit id="f2f9ab7269e0343d9f973bb299a0a00460ac3be8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QValue3DAxisFormatter::allowZero() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QValue3DAxisFormatter :: allowZero () const</target>
        </trans-unit>
        <trans-unit id="6497fd0d2b235fb0f8ea088a547b34150e17d3a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QWidget::focusNextChild()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QWidget :: focusNextChild ()</target>
        </trans-unit>
        <trans-unit id="13cca207feb7c142a7d82305c036e489b6e2fbfb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;bool QWidget::focusPreviousChild()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; bool QWidget :: focusPreviousChild ()</target>
        </trans-unit>
        <trans-unit id="c2ec1e7cdca88afda8366b5735930c415335d042" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;const &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *QSqlResult::driver() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; const &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; * QSqlResult :: driver () const</target>
        </trans-unit>
        <trans-unit id="1d0d142140916224eb124a6ac8a90cb925dd5ba4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QAbstract3DInputHandler::prevDistance() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QAbstract3DInputHandler :: prevDistance () const</target>
        </trans-unit>
        <trans-unit id="838b196f431cbe94fa2d597317d9464e3ee77584" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QCandlestickModelMapper::close() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QCandlestickModelMapper :: close () const</target>
        </trans-unit>
        <trans-unit id="0266b7864efd729cb5522a0118657d734c66e3c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QCandlestickModelMapper::firstSetSection() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QCandlestickModelMapper :: firstSetSection () const</target>
        </trans-unit>
        <trans-unit id="4e0de9998d3261db838cc5c0dd81028eaa1a6f96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QCandlestickModelMapper::high() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QCandlestickModelMapper :: high () const</target>
        </trans-unit>
        <trans-unit id="1f7e9362685b28e79b5d0d2131db7797566e8860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QCandlestickModelMapper::lastSetSection() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QCandlestickModelMapper :: lastSetSection () const</target>
        </trans-unit>
        <trans-unit id="0f85fdee8da81aa4d9f2604af6e5a37e3f52af29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QCandlestickModelMapper::low() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QCandlestickModelMapper :: low () const</target>
        </trans-unit>
        <trans-unit id="6d0537d09b5d0a3a21153c436258fedf2f295134" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QCandlestickModelMapper::open() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QCandlestickModelMapper :: open () const</target>
        </trans-unit>
        <trans-unit id="26d223211c00854242016d6d2c0adbffb43ebb86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QCandlestickModelMapper::timestamp() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QCandlestickModelMapper :: timestamp () const</target>
        </trans-unit>
        <trans-unit id="1ae9ed99f0fc58f72a367dbf1be13b1d4e5025e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QMenu::columnCount() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QMenu :: columnCount () const</target>
        </trans-unit>
        <trans-unit id="ce5e3bf6681ec269292b7c6f459cc2b49a95d6a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QObject::receivers(const char *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QObject :: Receivers (const char *</target>
        </trans-unit>
        <trans-unit id="4ba01381ca32e346264f94ee2195e5b131e7fd9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QObject::senderSignalIndex() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QObject :: senderSignalIndex () const</target>
        </trans-unit>
        <trans-unit id="99af0cf5f4a3971db89839771633dd5b37d76de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QSplitter::closestLegalPosition(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QSplitter :: closestLegalPosition (int</target>
        </trans-unit>
        <trans-unit id="54dc7ccb43f75c41cc731f72e5687b677b735de9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QSplitterHandle::closestLegalPosition(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QSplitterHandle :: closestLegalPosition (int</target>
        </trans-unit>
        <trans-unit id="f70b07c6746ae60f743c3360e2c989784099b0dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QSqlResult::at() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QSqlResult :: at () const</target>
        </trans-unit>
        <trans-unit id="d7169179a5eeb9339dfa68ac6b423211e3ef0486" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QSqlResult::boundValueCount() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QSqlResult :: boundValueCount () const</target>
        </trans-unit>
        <trans-unit id="18dd16d363cf32bbe157365b0df255bea1f1fdbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QSyntaxHighlighter::currentBlockState() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QSyntaxHighlighter :: currentBlockState () const</target>
        </trans-unit>
        <trans-unit id="a83482eefe8cdbfc0444f1436bb3fac3ae2f8c0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QSyntaxHighlighter::previousBlockState() const</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QSyntaxHighlighter :: previousBlockState () const</target>
        </trans-unit>
        <trans-unit id="a7dc60a05a3666237d7940db7f532fce81098bed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QThread::exec()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QThread :: exec ()</target>
        </trans-unit>
        <trans-unit id="d9a2231b6f6d0b9ba6b20595fd493612e332369a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QTreeView::indexRowSizeHint(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QTreeView :: indexRowSizeHint (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="567de77b6a98a1d3b8d3a8ab93753ece63e9e6f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;int QTreeView::rowHeight(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; int QTreeView :: rowHeight (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="86886b4cd03e1d2d7d55b9db5315681ceb50eda3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;template &amp;lt;typename DerivedType&amp;gt; QQmlPropertyMap::QQmlPropertyMap(DerivedType *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7de49d197ded82684dd5c58dbf57bed92bd9475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;template &amp;lt;typename Frontend&amp;gt; void QAbstractAspect::registerBackendType(const &lt;a href=&quot;qt3dcore-qabstractaspect#QBackendNodeMapperPtr-typedef&quot;&gt;Qt3DCore::QBackendNodeMapperPtr&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab44f3533e5f22684ecbcbaf0690e40e0de22db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void Q3DObject::setDirty(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void Q3DObject :: setDirty (bool</target>
        </trans-unit>
        <trans-unit id="a8b810e87d4f04470279993b1bbadd9d46def78c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstract3DInputHandler::setPrevDistance(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstract3DInputHandler :: setPrevDistance (int</target>
        </trans-unit>
        <trans-unit id="b1b8a104090a540e90f1dfeaaa937fd6df3fd061" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstract3DInputHandler::setPreviousInputPos(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstract3DInputHandler :: setPreviousInputPos (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a3d213c0750986e6cd17826940ced529af0669e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractAnimation::setDuration(float</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractAnimation :: setDuration (float</target>
        </trans-unit>
        <trans-unit id="6a8fc0fb48cf43b86abe8527cc7f57232c9e3b54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractAspect::registerBackendType(const &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractAspect :: registerBackendType (const &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="88b556cc6046e10d41829618e4c2c43f8d191f0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractAspect::registerBackendType(const &lt;a href=&quot;qt3dcore-qabstractaspect#QBackendNodeMapperPtr-typedef&quot;&gt;Qt3DCore::QBackendNodeMapperPtr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractAspect :: registerBackendType (const &lt;a href=&quot;qt3dcore-qabstractaspect#QBackendNodeMapperPtr-typedef&quot;&gt;Qt3DCore :: QBackendNodeMapperPtr&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8f2ec46fb6dfb2904562f8a0a454da289eaa50bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::beginInsertColumns(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: beginInsertColumns (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bba2f22538346aba60974c287c710f0b4e3ddc17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::beginInsertRows(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: beginInsertRows (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dc18c131206556f92a4b4110d46d3963a571b803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::beginRemoveColumns(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: beginRemoveColumns (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6c3eedf9ae5dccb6cc18eab24c46dd11ae0b06c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::beginRemoveRows(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: beginRemoveRows (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="39b439c4fa12e5dd38f22a8916d819bc9803b5fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::beginResetModel()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: beginResetModel ()</target>
        </trans-unit>
        <trans-unit id="6651f19158fdba8af7ce582eb8b74c2030aa69cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::changePersistentIndex(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: changePersistentIndex (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e325468936f0ca78e5bb8eef7154e772eca54400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::changePersistentIndexList(const &lt;a href=&quot;qmodelindex#QModelIndexList-typedef&quot;&gt;QModelIndexList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: changePersistentIndexList (const &lt;a href=&quot;qmodelindex#QModelIndexList-typedef&quot;&gt;QModelIndexList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="58049ca949301ec7108981451a2fb14ecbf475cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::endInsertColumns()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: endInsertColumns ()</target>
        </trans-unit>
        <trans-unit id="f8d9d1c00942cc3d9ec4134198d590bdfdb238a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::endInsertRows()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: endInsertRows ()</target>
        </trans-unit>
        <trans-unit id="53fb4932b718028980544b92b552d705d4886d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::endMoveColumns()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: endMoveColumns ()</target>
        </trans-unit>
        <trans-unit id="1f35bc32aa83c20ea8eef02c06578e2058dd3ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::endMoveRows()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: endMoveRows ()</target>
        </trans-unit>
        <trans-unit id="13ba43907c15b4a7ef6f6081d187dc3862f5f0d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::endRemoveColumns()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: endRemoveColumns ()</target>
        </trans-unit>
        <trans-unit id="bcce7c006bade95647c1b582cb17e488b30e2084" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::endRemoveRows()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: endRemoveRows ()</target>
        </trans-unit>
        <trans-unit id="8c120896e448c506351b12ce20bdd86b4e296512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemModel::endResetModel()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemModel :: endResetModel ()</target>
        </trans-unit>
        <trans-unit id="0e140d5f4cd77116abccee638202c460c9aec33e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemView::executeDelayedItemsLayout()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemView :: executeDelayedItemsLayout ()</target>
        </trans-unit>
        <trans-unit id="cf3218451aba54fc01f8763df566dd0bf3b2f3c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemView::scheduleDelayedItemsLayout()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemView :: scheduleDelayedItemsLayout ()</target>
        </trans-unit>
        <trans-unit id="fa72d992c084e781adc0c85fdb9bfdd5636401a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemView::scrollDirtyRegion(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemView :: scrollDirtyRegion (int</target>
        </trans-unit>
        <trans-unit id="d2fdcf87f5587db2da37de4c681941ce503d8c9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemView::setDirtyRegion(const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemView :: setDirtyRegion (const &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="750db2e4a054f9afab6578142eaab7719c946c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractItemView::setState(&lt;a href=&quot;qabstractitemview#State-enum&quot;&gt;QAbstractItemView::State&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractItemView :: setState ( &lt;a href=&quot;qabstractitemview#State-enum&quot;&gt;QAbstractItemView :: State&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3383baea8e902139e55a37812470563fd9cbd6b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractOAuth::setStatus(&lt;a href=&quot;qabstractoauth#Status-enum&quot;&gt;QAbstractOAuth::Status&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractOAuth :: setStatus ( &lt;a href=&quot;qabstractoauth#Status-enum&quot;&gt;QAbstractOAuth :: Status&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eee60230b7c20238b544bfd12449fbec5dfa0de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractScrollArea::setViewportMargins(const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractScrollArea :: setViewportMargins (const &lt;a href=&quot;qmargins&quot;&gt;QMargins&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1fedc753003ecd8bd5366810d132e76771e2d724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractScrollArea::setViewportMargins(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractScrollArea :: setViewportMargins (int</target>
        </trans-unit>
        <trans-unit id="73028ce3e22776bed0f87d9cbfd10bd52c39fd24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSlider::setRepeatAction(&lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;QAbstractSlider::SliderAction&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSlider :: setRepeatAction ( &lt;a href=&quot;qabstractslider#SliderAction-enum&quot;&gt;QAbstractSlider :: SliderAction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="151224761476bc31163152e59d640133e5e7d0e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setLocalAddress(const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSocket :: setLocalAddress (const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ac67764a8c1caefa9fb127405f07ffcad7cbe32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setLocalPort(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSocket :: setLocalPort ( &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f07277b8178665ec520b051ea27de24b125a64c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setLocalPort(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb857ac3cf06ecedd9a67868fbd25cf1f01a4009" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setPeerAddress(const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSocket :: setPeerAddress (const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e85732ea895df51b145b827c275852e477a23522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setPeerName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSocket :: setPeerName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3d5ae57bcc23e23040d980c4508bd121cec8fbd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setPeerPort(&lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSocket :: setPeerPort ( &lt;a href=&quot;#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="677fafb0663ec53d9685cb329b6f375fe8983f06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setPeerPort(&lt;a href=&quot;qtglobal#quint16-typedef&quot;&gt;quint16&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619f664abc948a689f1494ddfc49ca951d18fd6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setSocketError(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::SocketError&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSocket :: setSocketError ( &lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: SocketError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c8e658978b24444fbe1116ae56355f067c5ea22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSocket::setSocketState(&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::SocketState&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSocket :: setSocketState ( &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: SocketState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3851be3c06da227efe4c2ad7245a0677485d4ce5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSpinBox::initStyleOption(&lt;a href=&quot;qstyleoptionspinbox&quot;&gt;QStyleOptionSpinBox&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSpinBox :: initStyleOption ( &lt;a href=&quot;qstyleoptionspinbox&quot;&gt;QStyleOptionSpinBox&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="889822653a4f0b1b306300248936fc1488aae2e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractSpinBox::setLineEdit(&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractSpinBox :: setLineEdit ( &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e0e7bae85eb9643be9bef0866263e8f635881903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractTexture::setStatus(&lt;a href=&quot;qt3drender-qabstracttexture#Status-enum&quot;&gt;Qt3DRender::QAbstractTexture::Status&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractTexture :: setStatus ( &lt;a href=&quot;qt3drender-qabstracttexture#Status-enum&quot;&gt;Qt3DRender :: QAbstractTexture :: Status&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89a5ceca684f1d9c5a1e5c08b2945508b8d93a7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractTextureImage::notifyDataGeneratorChanged()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractTextureImage :: notifyDataGeneratorChanged ()</target>
        </trans-unit>
        <trans-unit id="f078cf9ddfda41ea81ffbabfa706455752fe7fbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractVideoSurface::setError(&lt;a href=&quot;qabstractvideosurface#Error-enum&quot;&gt;QAbstractVideoSurface::Error&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractVideoSurface :: setError ( &lt;a href=&quot;qabstractvideosurface#Error-enum&quot;&gt;QAbstractVideoSurface :: Error&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49aebc16fc41803eeb467b63fc0200d81cfe7293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAbstractVideoSurface::setNativeResolution(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAbstractVideoSurface :: setNativeResolution (const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0fa3cd0c00e4835d49f77a1532a23f00144eeb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAccessibleWidget::addControllingSignal(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAccessibleWidget :: addControllingSignal (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b66919895fbbead41b9d3d17d4badd0f4cbe63c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QAxBindable::propertyChanged(const char *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QAxBindable :: propertyChanged (const char *</target>
        </trans-unit>
        <trans-unit id="fb40dd1e437f5ea997303b9419274d83992e2d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QBackendNode::notifyObservers(const &lt;a href=&quot;qt3dcore-qscenechange#QSceneChangePtr-typedef&quot;&gt;Qt3DCore::QSceneChangePtr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QBackendNode :: notifyObservers (const &lt;a href=&quot;qt3dcore-qscenechange#QSceneChangePtr-typedef&quot;&gt;Qt3DCore :: QSceneChangePtr&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4888c55f7ba61c5edacad009a271282fdc33fe90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QBackendNode::sendReply(const &lt;a href=&quot;qt3dcore-qnodecommand#QNodeCommandPtr-typedef&quot;&gt;Qt3DCore::QNodeCommandPtr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QBackendNode :: sendReply (const &lt;a href=&quot;qt3dcore-qnodecommand#QNodeCommandPtr-typedef&quot;&gt;Qt3DCore :: QNodeCommandPtr&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c4c4fb5c346668ff11985a8d316f35f998db00e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QBluetoothSocket::doDeviceDiscovery(const &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QBluetoothSocket :: doDeviceDiscovery (const &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="383d1b6b66f010e4830a1c1c2297e91d0abd9afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QBluetoothSocket::setSocketError(&lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket::SocketError&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QBluetoothSocket :: setSocketError ( &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket :: SocketError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5389b57426b3c90df32016eee40b5fc06b13c930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QBluetoothSocket::setSocketState(&lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;QBluetoothSocket::SocketState&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QBluetoothSocket :: setSocketState ( &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;QBluetoothSocket :: SocketState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bf0a9f2b3980090912a476c5290b0c822585323" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QBluetoothTransferReply::setManager(&lt;a href=&quot;qbluetoothtransfermanager&quot;&gt;QBluetoothTransferManager&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QBluetoothTransferReply :: setManager ( &lt;a href=&quot;qbluetoothtransfermanager&quot;&gt;QBluetoothTransferManager&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="57da70097fcfa25c6978e0572e5aa3be9bdde5d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QBluetoothTransferReply::setRequest(const &lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QBluetoothTransferReply :: setRequest (const &lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0bf299ef426ef2f3ecde4bacb386c3d94c7730b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCalendarWidget::updateCell(&lt;a href=&quot;qdate&quot;&gt;QDate&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b017c5df19cc5866d996b7cf02b392ab42145fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCalendarWidget::updateCell(const &lt;a href=&quot;qdate&quot;&gt;QDate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCalendarWidget :: updateCell (const &lt;a href=&quot;qdate&quot;&gt;QDate&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8ed7ed91d218f2345e27d3227c9fcbe236012f81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCalendarWidget::updateCells()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCalendarWidget :: updateCells ()</target>
        </trans-unit>
        <trans-unit id="d63f011d69bf397a36b0c854043910b66ad232ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCanBusDevice::clearError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ee50cbcf9babc1e2b91774c4db47bdd3fb21ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCanBusDevice::enqueueOutgoingFrame(const &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCanBusDevice :: enqueueOutgoingFrame (const &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="746be97dece8c699c0b5b66eea64f4609a9a79ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCanBusDevice::enqueueReceivedFrames(const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCanBusDevice :: enqueueReceivedFrames (const &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7ea58e339cc5bef5b241bb782cabffe7fb97baf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCanBusDevice::setCanBusStatusGetter(std::function&amp;lt;&lt;a href=&quot;qcanbusdevice#CanBusStatus-enum&quot;&gt;CanBusStatus&lt;/a&gt; ()&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef62796fbac5c684373cc51f8fc63cd3e5fcf0d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCanBusDevice::setError(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCanBusDevice :: setError (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3d712e4d896d7431ee270514c71484e2563f2222" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCanBusDevice::setResetControllerFunction(std::function&amp;lt;void ()&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792cfc56d64936e4466f6bc0ed49dabfa7a9b91c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCanBusDevice::setState(&lt;a href=&quot;qcanbusdevice#CanBusDeviceState-enum&quot;&gt;QCanBusDevice::CanBusDeviceState&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCanBusDevice :: setState ( &lt;a href=&quot;qcanbusdevice#CanBusDeviceState-enum&quot;&gt;QCanBusDevice :: CanBusDeviceState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c05f9d463cb09ff5794d94e1c4f097d499ee42f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCandlestickModelMapper::setClose(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCandlestickModelMapper :: setClose (int</target>
        </trans-unit>
        <trans-unit id="9f8849bc0d7b41614e52a19b5aad0989f4ddba07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCandlestickModelMapper::setFirstSetSection(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCandlestickModelMapper :: setFirstSetSection (int</target>
        </trans-unit>
        <trans-unit id="7aec6b04390fce985a6a154a82dedff434ae74ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCandlestickModelMapper::setHigh(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCandlestickModelMapper :: setHigh (int</target>
        </trans-unit>
        <trans-unit id="8a30cc1e2f725654ead9db447eabca996565edfc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCandlestickModelMapper::setLastSetSection(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCandlestickModelMapper :: setLastSetSection (int</target>
        </trans-unit>
        <trans-unit id="c57c58ef68ced6cf76f8c79419862a47a9c65df3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCandlestickModelMapper::setLow(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCandlestickModelMapper :: setLow (int</target>
        </trans-unit>
        <trans-unit id="00ded8e8b7a091e59fef7a79bb1d67c60c097bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCandlestickModelMapper::setOpen(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCandlestickModelMapper :: setOpen (int</target>
        </trans-unit>
        <trans-unit id="e305339b63e017ccb708ba274e835f58805ba7e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCandlestickModelMapper::setTimestamp(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCandlestickModelMapper :: setTimestamp (int</target>
        </trans-unit>
        <trans-unit id="b0db421d2ff923e76d96abf533ca98f70163ca65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QCheckBox::initStyleOption(&lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QCheckBox :: initStyleOption ( &lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="89ed757c6d120345cced32654190560403d1707d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QColumnView::initializeColumn(&lt;a href=&quot;qabstractitemview#QAbstractItemView&quot;&gt;QAbstractItemView&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QColumnView :: initializeColumn ( &lt;a href=&quot;qabstractitemview#QAbstractItemView&quot;&gt;QAbstractItemView&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="50133f68ac74bc98031223cc78487049cf5856eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QComboBox::initStyleOption(&lt;a href=&quot;qstyleoptioncombobox&quot;&gt;QStyleOptionComboBox&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QComboBox :: initStyleOption ( &lt;a href=&quot;qstyleoptioncombobox&quot;&gt;QStyleOptionComboBox&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="94cb700925d5f8796771356c311e3b5574bd949d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QDBusAbstractAdaptor::setAutoRelaySignals(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QDBusAbstractAdaptor :: setAutoRelaySignals (bool</target>
        </trans-unit>
        <trans-unit id="6428f46276c947274b02b124de1e68ff8eefd81c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QDateTimeEdit::initStyleOption(&lt;a href=&quot;qstyleoptionspinbox&quot;&gt;QStyleOptionSpinBox&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QDateTimeEdit :: initStyleOption ( &lt;a href=&quot;qstyleoptionspinbox&quot;&gt;QStyleOptionSpinBox&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="efbcdc970dbffd52170bb0e23f4d8f78e74d3f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QDial::initStyleOption(&lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QDial :: initStyleOption ( &lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4ab9e1463999d92aabfad8db8bc1d0f394bc300d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QDockWidget::initStyleOption(&lt;a href=&quot;qstyleoptiondockwidget&quot;&gt;QStyleOptionDockWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QDockWidget :: initStyleOption ( &lt;a href=&quot;qstyleoptiondockwidget&quot;&gt;QStyleOptionDockWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="cedb183c2b67979931c939d53ec1b9c74db96fd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QFocusFrame::initStyleOption(&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QFocusFrame :: initStyleOption ( &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0fb421008daf1c8d59fb2ea5a8e9aea2ff53a2fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QFrame::initStyleOption(&lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QFrame :: initStyleOption ( &lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c5f6abac71666975d168f44b988f2f6441c4953b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoCodeReply::addLocation(const &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoCodeReply :: addLocation (const &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5943c9e1d115d51c9f085efd61e4e8c536f65789" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoCodeReply::setError(&lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::Error&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoCodeReply :: setError ( &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply :: Error&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="769aa1f1daf519da3a80c79d1ca9428d47abec14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoCodeReply::setFinished(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoCodeReply :: setFinished (bool</target>
        </trans-unit>
        <trans-unit id="37c7604ab2c47d3b5f528e3ea749a26ac6045090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoCodeReply::setLimit(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoCodeReply :: setLimit (int</target>
        </trans-unit>
        <trans-unit id="f8d4e15f42854daf2c1bb3e94446b9fb5acce363" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoCodeReply::setLocations(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoCodeReply :: setLocations (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a4b0c64f1948d2909eecfe59df38a55479d037b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoCodeReply::setOffset(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoCodeReply :: setOffset (int</target>
        </trans-unit>
        <trans-unit id="1984fe407ee165cc1ac095fd20eabfe4e0bff017" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoCodeReply::setViewport(const &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoCodeReply :: setViewport (const &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="35f9a8716cdfecb7d02023b8974d1803b03b0c30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoPolygon::setPerimeter(const &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoPolygon :: setPerimeter (const &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0765f38545c0726c948585c601286ab961703d6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRouteReply::addRoutes(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qgeoroute&quot;&gt;QGeoRoute&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRouteReply :: addRoutes (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qgeoroute&quot;&gt;QGeoRoute&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f8f17929f20b7188ab744e39c3744464189d7473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRouteReply::setError(&lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::Error&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRouteReply :: setError ( &lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply :: Error&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de9b7fb09b3741ab2f9f2c5ad2161e929946c2dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRouteReply::setFinished(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRouteReply :: setFinished (bool</target>
        </trans-unit>
        <trans-unit id="89140b2ee37573769e2a77c047ad6f7d8fc523c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRouteReply::setRoutes(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qgeoroute&quot;&gt;QGeoRoute&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRouteReply :: setRoutes (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qgeoroute&quot;&gt;QGeoRoute&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a4a92416b688fb2ac67c22607493f862a5551e6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRoutingManagerEngine::setSupportedFeatureTypes(&lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest::FeatureTypes&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRoutingManagerEngine :: setSupportedFeatureTypes ( &lt;a href=&quot;qgeorouterequest#FeatureType-enum&quot;&gt;QGeoRouteRequest :: FeatureTypes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87359f32c58f4555b3712d150d341a47ed104611" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRoutingManagerEngine::setSupportedFeatureWeights(&lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest::FeatureWeights&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRoutingManagerEngine :: setSupportedFeatureWeights ( &lt;a href=&quot;qgeorouterequest#FeatureWeight-enum&quot;&gt;QGeoRouteRequest :: FeatureWeights&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="221465c503c872b578b73466c0d2fb8339c5fb5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRoutingManagerEngine::setSupportedManeuverDetails(&lt;a href=&quot;qgeorouterequest#ManeuverDetail-enum&quot;&gt;QGeoRouteRequest::ManeuverDetails&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRoutingManagerEngine :: setSupportedManeuverDetails ( &lt;a href=&quot;qgeorouterequest#ManeuverDetail-enum&quot;&gt;QGeoRouteRequest :: ManeuverDetails&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4154591e182c64c7227605184f6e6a161ce3285d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRoutingManagerEngine::setSupportedRouteOptimizations(&lt;a href=&quot;qgeorouterequest#RouteOptimization-enum&quot;&gt;QGeoRouteRequest::RouteOptimizations&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRoutingManagerEngine :: setSupportedRouteOptimizations ( &lt;a href=&quot;qgeorouterequest#RouteOptimization-enum&quot;&gt;QGeoRouteRequest :: RouteOptimizations&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91896b1175fcd054ca8e0bd1829961723fd2493f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRoutingManagerEngine::setSupportedSegmentDetails(&lt;a href=&quot;qgeorouterequest#SegmentDetail-enum&quot;&gt;QGeoRouteRequest::SegmentDetails&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRoutingManagerEngine :: setSupportedSegmentDetails ( &lt;a href=&quot;qgeorouterequest#SegmentDetail-enum&quot;&gt;QGeoRouteRequest :: SegmentDetails&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0759e5791ac34f66a39cc6630303c55564b96e2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGeoRoutingManagerEngine::setSupportedTravelModes(&lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest::TravelModes&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGeoRoutingManagerEngine :: setSupportedTravelModes ( &lt;a href=&quot;qgeorouterequest#TravelMode-enum&quot;&gt;QGeoRouteRequest :: TravelModes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a8c27f3f1fd7c8e0cf19182b273f756afcf91dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGraphicsEffect::drawSource(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGraphicsEffect :: drawSource ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b30281ca4421519dfb2a4303b951c853151d4293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGraphicsEffect::updateBoundingRect()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGraphicsEffect :: updateBoundingRect ()</target>
        </trans-unit>
        <trans-unit id="ad1f9f34937b74fa4ce62cae45fb426b4063b8aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGraphicsItem::prepareGeometryChange()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGraphicsItem :: prepareGeometryChange ()</target>
        </trans-unit>
        <trans-unit id="f57ec4074bab19568519e4bcfc92bacea8b315b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGraphicsItem::updateMicroFocus()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGraphicsItem :: updateMicroFocus ()</target>
        </trans-unit>
        <trans-unit id="d417576cc399002bea54deb801e9fdd45e74130f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGraphicsLayout::addChildLayoutItem(&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGraphicsLayout :: addChildLayoutItem ( &lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="256e6d0dfca8fcf44f1e868cd6f8fddee0023d99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGraphicsLayoutItem::setGraphicsItem(&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGraphicsLayoutItem :: setGraphicsItem ( &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c4f856f512c2d9f1590e4c26b97e4361bbdfd3e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGraphicsLayoutItem::setOwnedByLayout(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGraphicsLayoutItem :: setOwnedByLayout (bool</target>
        </trans-unit>
        <trans-unit id="6263c12658ac7a538398bb465d9db200811a2fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QGroupBox::initStyleOption(&lt;a href=&quot;qstyleoptiongroupbox&quot;&gt;QStyleOptionGroupBox&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QGroupBox :: initStyleOption ( &lt;a href=&quot;qstyleoptiongroupbox&quot;&gt;QStyleOptionGroupBox&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0bd947ce658c304ea1f594ed44eae4706a8a0277" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QHeaderView::initStyleOption(&lt;a href=&quot;qstyleoptionheader&quot;&gt;QStyleOptionHeader&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QHeaderView :: initStyleOption ( &lt;a href=&quot;qstyleoptionheader&quot;&gt;QStyleOptionHeader&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1bbbdbcb2d7ac0a8ddf7cf7425d39864a855d2c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QIODevice::setErrorString(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QIODevice :: setErrorString (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c323aed7b4dedb5bc566d1046115d510c23aa0e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QIODevice::setOpenMode(&lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;QIODevice::OpenMode&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QIODevice :: setOpenMode ( &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;QIODevice :: OpenMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a079667b196b091bfa102f6bdc95437d383598dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QIODevice::setOpenMode(&lt;a href=&quot;qiodevicebase#OpenModeFlag-enum&quot;&gt;QIODeviceBase::OpenMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ca7c0b4d22931aab0b68210da1baa16c2229d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QInputDeviceIntegration::registerBackendType(const &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b64d37c1422e85aba8ca2fb49d4ccde547cf95b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QItemDelegate::drawBackground(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QItemDelegate :: drawBackground ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a19f42a21fbb9dcca022a9db535904ca31eb1b15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QItemSelectionModel::emitSelectionChanged(const &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QItemSelectionModel :: emitSelectionChanged (const &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3c25f401b30ce1c3cdcb7226fd23bf5aaecbfafb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QLayout::addChildLayout(&lt;a href=&quot;qlayout#QLayout&quot;&gt;QLayout&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QLayout :: addChildLayout ( &lt;a href=&quot;qlayout#QLayout&quot;&gt;QLayout&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7e2bb758b5abc41a8b96633c10b67c84895edc69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QLayout::addChildWidget(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QLayout :: addChildWidget ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4776b8d0d510b216bd7c450f7cfc982e47608e57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QLineEdit::initStyleOption(&lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QLineEdit :: initStyleOption ( &lt;a href=&quot;qstyleoptionframe&quot;&gt;QStyleOptionFrame&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="475a588996b217941c3cffc4b8e6cef73601f8b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QListView::setPositionForIndex(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QListView :: setPositionForIndex (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0fa137a19b200774d6ef00bb7790b972b346df6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QMediaObject::addPropertyWatch(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QMediaObject :: addPropertyWatch (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9d533cf58df3badb3003cf5f7b3f13df132194ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QMediaObject::removePropertyWatch(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QMediaObject :: removePropertyWatch (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d67d9943989d61e9372cb5c8847d8d613bc50c0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QMenu::initStyleOption(&lt;a href=&quot;qstyleoptionmenuitem&quot;&gt;QStyleOptionMenuItem&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QMenu :: initStyleOption ( &lt;a href=&quot;qstyleoptionmenuitem&quot;&gt;QStyleOptionMenuItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e95e12ebaae2a61f4bda684e9f47cec8cc184060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QMenuBar::initStyleOption(&lt;a href=&quot;qstyleoptionmenuitem&quot;&gt;QStyleOptionMenuItem&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QMenuBar :: initStyleOption ( &lt;a href=&quot;qstyleoptionmenuitem&quot;&gt;QStyleOptionMenuItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="443262d67d912de8b602c59facc1fd6e2f507157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QModbusDevice::setError(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QModbusDevice :: setError (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cc59895977f2fa82cf62ff291de66bdeb515683d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QModbusDevice::setState(&lt;a href=&quot;qmodbusdevice#State-enum&quot;&gt;QModbusDevice::State&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QModbusDevice :: setState ( &lt;a href=&quot;qmodbusdevice#State-enum&quot;&gt;QModbusDevice :: State&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="248b25f3c0c0b49300338206d4307f5fe83ed65d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNearFieldTarget::reportError(&lt;a href=&quot;qnearfieldtarget#Error-enum&quot;&gt;QNearFieldTarget::Error&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNearFieldTarget :: reportError ( &lt;a href=&quot;qnearfieldtarget#Error-enum&quot;&gt;QNearFieldTarget :: Error&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c1cbb0699edf6a3391117b80ff3e241bb5f52ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkCookieJar::setAllCookies(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qnetworkcookie&quot;&gt;QNetworkCookie&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkCookieJar :: setAllCookies (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qnetworkcookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4dd68d12637ebe7b09ce5fa1bdd029c8de5d5a5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkReply::setAttribute(&lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;QNetworkRequest::Attribute&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkReply :: setAttribute ( &lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;QNetworkRequest :: Attribute&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="928b40444d2cffa06b2931bf16756c5e71ed47b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkReply::setError(&lt;a href=&quot;qnetworkreply#NetworkError-enum&quot;&gt;QNetworkReply::NetworkError&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkReply :: setError ( &lt;a href=&quot;qnetworkreply#NetworkError-enum&quot;&gt;QNetworkReply :: NetworkError&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d4ef41892593a699fdd5a35ed2b51570a7921be6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkReply::setFinished(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkReply :: setFinished (bool</target>
        </trans-unit>
        <trans-unit id="bcb9e0161647c48bc4341df7fd6f6acb99a108f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkReply::setHeader(&lt;a href=&quot;qnetworkrequest#KnownHeaders-enum&quot;&gt;QNetworkRequest::KnownHeaders&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkReply :: setHeader ( &lt;a href=&quot;qnetworkrequest#KnownHeaders-enum&quot;&gt;QNetworkRequest :: KnownHeaders&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2670a6e87c27b72f302dc33ae834f284d3f883a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkReply::setOperation(&lt;a href=&quot;qnetworkaccessmanager#Operation-enum&quot;&gt;QNetworkAccessManager::Operation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkReply :: setOperation ( &lt;a href=&quot;qnetworkaccessmanager#Operation-enum&quot;&gt;QNetworkAccessManager :: Operation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="365c27207cd1985c6d2c07c9b4089b0235c6ce73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkReply::setRawHeader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkReply :: setRawHeader (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9f69b10f104059f63f5603a366a1afc4f163a255" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkReply::setRequest(const &lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkReply :: setRequest (const &lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0ca8b30bd5b9a7b6e1d925facbfc32415f151992" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNetworkReply::setUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNetworkReply :: setUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9973da52e5561407d35fd7f7882eac5692df22d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QNode::notifyObservers(const &lt;a href=&quot;qt3dcore-qscenechange#QSceneChangePtr-typedef&quot;&gt;Qt3DCore::QSceneChangePtr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QNode :: notifyObservers (const &lt;a href=&quot;qt3dcore-qscenechange#QSceneChangePtr-typedef&quot;&gt;Qt3DCore :: QSceneChangePtr&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="95c5fdc03e1ab82f2b0994b728eb6ba13ca1319e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QOAuth1::setup(&lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QOAuth1 :: setup ( &lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7286babb9b6b3ae02c7f37cb1216a1b486c9a294" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QOAuth2AuthorizationCodeFlow::requestAccessToken(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QOAuth2AuthorizationCodeFlow :: requestAccessToken (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d933e44df8e533d109c4eee28e6a8938a21a756f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceContentReply::setContent(const &lt;a href=&quot;qplacecontent#Collection-typedef&quot;&gt;QPlaceContent::Collection&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceContentReply :: setContent (const &lt;a href=&quot;qplacecontent#Collection-typedef&quot;&gt;QPlaceContent :: Collection&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4e5724a659cd743480925aca547bd3fa054fee91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceContentReply::setNextPageRequest(const &lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceContentReply :: setNextPageRequest (const &lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6cf1f6d28220dbff7aad59a677226c49faac3970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceContentReply::setPreviousPageRequest(const &lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceContentReply :: setPreviousPageRequest (const &lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fd6a360dd12a04ee75804b45606a627484f761f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceContentReply::setRequest(const &lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceContentReply :: setRequest (const &lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9b2a8e6605e5b20e0656afd10baf6ecfde8b5f8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceContentReply::setTotalCount(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceContentReply :: setTotalCount (int</target>
        </trans-unit>
        <trans-unit id="317340093aada933c924c1ea0adb535776d056a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceDetailsReply::setPlace(const &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceDetailsReply :: setPlace (const &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f561e08e71fa4818139a7797228bdcd12d3bb0b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceIdReply::setId(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceIdReply :: setId (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2126f5d2f3ed8256dbf50d4119a6fe6cf323a0ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceMatchReply::setPlaces(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceMatchReply :: setPlaces (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a925a5cdd012239f1c5bbd969c10bb6d437b1b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceMatchReply::setRequest(const &lt;a href=&quot;qplacematchrequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceMatchReply :: setRequest (const &lt;a href=&quot;qplacematchrequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0d3a62e970bfb981b1ea49d073c69f78543e4fbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceReply::setError(&lt;a href=&quot;qplacereply#Error-enum&quot;&gt;QPlaceReply::Error&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceReply :: setError ( &lt;a href=&quot;qplacereply#Error-enum&quot;&gt;QPlaceReply :: Error&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39a6685a814f565960f6531522da03f0df0653a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceReply::setFinished(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceReply :: setFinished (bool</target>
        </trans-unit>
        <trans-unit id="e0fe62ee59e9ce315d07fd514f568c5635e667c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceSearchReply::setNextPageRequest(const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceSearchReply :: setNextPageRequest (const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="650a4348bd8ca9c2e06977b2030b3a929e9d8549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceSearchReply::setPreviousPageRequest(const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceSearchReply :: setPreviousPageRequest (const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cf249d6d1401bc72ce2fd874bbe80b04c632c58c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceSearchReply::setRequest(const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceSearchReply :: setRequest (const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="20013812231633f2905b0124525d1d29c298d1c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceSearchReply::setResults(const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qplacesearchresult&quot;&gt;QPlaceSearchResult&lt;/a&gt;&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceSearchReply :: setResults (const &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qplacesearchresult&quot;&gt;QPlaceSearchResult&lt;/a&gt; &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="23d5b1f8273adafae139c46c33e825eefb2aa42a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPlaceSearchSuggestionReply::setSuggestions(const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPlaceSearchSuggestionReply :: setSuggestions (const &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d0e4cc617d31065103065fe8329a971a95d08d25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPrinter::setEngines(&lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPrinter :: setEngines ( &lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bdb128d0f1f0293dc36211325dd2f7188614c94c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QProcess::setProcessState(&lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;QProcess::ProcessState&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QProcess :: setProcessState ( &lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;QProcess :: ProcessState&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50c3d77994d268afdc9f3f6debd4f958b34ec6a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QProgressBar::initStyleOption(&lt;a href=&quot;qstyleoptionprogressbar&quot;&gt;QStyleOptionProgressBar&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QProgressBar :: initStyleOption ( &lt;a href=&quot;qstyleoptionprogressbar&quot;&gt;QStyleOptionProgressBar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="394e19dec7e67f00ffb28cfeaef93111a27e2e2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QPushButton::initStyleOption(&lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QPushButton :: initStyleOption ( &lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="cf1d9cbeaa898bc58461a2b9f4d7563dfd6be165" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QQuickItem::updateInputMethod(&lt;a href=&quot;qt#InputMethodQuery-enum&quot;&gt;Qt::InputMethodQueries&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QQuickItem :: updateInputMethod ( &lt;a href=&quot;qt#InputMethodQuery-enum&quot;&gt;Qt :: InputMethodQueries&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14395014c2887a1521da44874b993e28160a75a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QRadioButton::initStyleOption(&lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QRadioButton :: initStyleOption ( &lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="83c67269ba7a5d626a49ecfda7f2406352c9602f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QRubberBand::initStyleOption(&lt;a href=&quot;qstyleoptionrubberband&quot;&gt;QStyleOptionRubberBand&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QRubberBand :: initStyleOption ( &lt;a href=&quot;qstyleoptionrubberband&quot;&gt;QStyleOptionRubberBand&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f479d2526374f967054f03991f293d73a23c068c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSGMaterialRhiShader::setShader(QSGMaterialRhiShader::Stage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b109d4e69b01eb198d96d34247b4997e1ea0581e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSGMaterialRhiShader::setShaderFileName(QSGMaterialRhiShader::Stage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d3e6103a4226ba8c5fd3ab834162bacc88f04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSGMaterialShader::setShader(QSGMaterialShader::Stage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbbaeee7f85d0caeb838f5def92129b54bac0947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSGMaterialShader::setShaderFileName(QSGMaterialShader::Stage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa1f87aeee8bd334f5bb06a872bf199e61ed35c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSGMaterialShader::setShaderSourceFile(&lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader::ShaderType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSGMaterialShader :: setShaderSourceFile ( &lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader :: ShaderType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c793858c1e57b55af84f9acce9caeff762064194" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSGMaterialShader::setShaderSourceFiles(&lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader::ShaderType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSGMaterialShader :: setShaderSourceFiles ( &lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader :: ShaderType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be146da7bde3cac1567a1fe976a658578dfd4c1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QScrollBar::initStyleOption(&lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QScrollBar :: initStyleOption ( &lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bd536ab739431ef0ed6575d1aae520e23fde4299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSlider::initStyleOption(&lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSlider :: initStyleOption ( &lt;a href=&quot;qstyleoptionslider&quot;&gt;QStyleOptionSlider&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6acba19c63bac716d3dfd0e74c2f1ea66493247e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSortFilterProxyModel::invalidateFilter()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSortFilterProxyModel :: invalidateFilter ()</target>
        </trans-unit>
        <trans-unit id="d72fa90c8311185eccfaedde52e98f0e406b7a67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSplitter::moveSplitter(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSplitter :: moveSplitter (int</target>
        </trans-unit>
        <trans-unit id="23ce4c9c95e6de509005c1e6dc3af243db50a1b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSplitter::setRubberBand(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSplitter :: setRubberBand (int</target>
        </trans-unit>
        <trans-unit id="3ce1674dd31fe2d9d593dffdc81e929f512970c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSplitterHandle::moveSplitter(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSplitterHandle :: moveSplitter (int</target>
        </trans-unit>
        <trans-unit id="5423cf1c346014efee54d4165f9038074674cda3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSqlQueryModel::setLastError(const &lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSqlQueryModel :: setLastError (const &lt;a href=&quot;qsqlerror&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="86e1c9b92d971495f3892bbddc551b76c29a5107" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSqlResult::addBindValue(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSqlResult :: addBindValue (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="25ca4f3aaa32f13793798111745a97d4e527a2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSqlResult::clear()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSqlResult :: clear ()</target>
        </trans-unit>
        <trans-unit id="d5d7a1f8ce067c9cff3974b4dc99cc33359fdd5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSqlResult::resetBindCount()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSqlResult :: resetBindCount ()</target>
        </trans-unit>
        <trans-unit id="62a2b5f4a421dbb29f945543d5df8e5f8e01073a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSqlTableModel::setPrimaryKey(const &lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSqlTableModel :: setPrimaryKey (const &lt;a href=&quot;qsqlindex&quot;&gt;QSqlIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="baa2963b78c4510c44eb15cb9dfcf413fe306acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSqlTableModel::setQuery(const &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSqlTableModel :: setQuery (const &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e8447fa433fdee1409f88a9631dc81518abf31b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QStandardItem::emitDataChanged()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QStandardItem :: emitDataChanged ()</target>
        </trans-unit>
        <trans-unit id="2806a5cb4fc114b90902aa4aeda6ed687dd56fc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QStatusBar::hideOrShow()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QStatusBar :: hideOrShow ()</target>
        </trans-unit>
        <trans-unit id="13da81d8332456c60731df792a6b50e909b1d3e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QStatusBar::reformat()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QStatusBar :: regat ()</target>
        </trans-unit>
        <trans-unit id="03c7d0bdb853f9e1aff88cfc264c270a4c245581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSyntaxHighlighter::setCurrentBlockState(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSyntaxHighlighter :: setCurrentBlockState (int</target>
        </trans-unit>
        <trans-unit id="12add5a6d5d7bf51bf2a8e3685d22c231fe66a45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSyntaxHighlighter::setCurrentBlockUserData(&lt;a href=&quot;qtextblockuserdata&quot;&gt;QTextBlockUserData&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSyntaxHighlighter :: setCurrentBlockUserData ( &lt;a href=&quot;qtextblockuserdata&quot;&gt;QTextBlockUserData&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a5c4dff21923fd1f50194dfce91dba21647c382b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QSyntaxHighlighter::setFormat(int</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QSyntaxHighlighter :: setFormat (int</target>
        </trans-unit>
        <trans-unit id="84dccf9974688b508ac4f0df7817e24e49e780f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTabBar::initStyleOption(&lt;a href=&quot;qstyleoptiontab&quot;&gt;QStyleOptionTab&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QTabBar :: initStyleOption ( &lt;a href=&quot;qstyleoptiontab&quot;&gt;QStyleOptionTab&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c081160ba944f83cd8ac69dde36366bfc207a990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTabWidget::initStyleOption(&lt;a href=&quot;qstyleoptiontabwidgetframe&quot;&gt;QStyleOptionTabWidgetFrame&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QTabWidget :: initStyleOption ( &lt;a href=&quot;qstyleoptiontabwidgetframe&quot;&gt;QStyleOptionTabWidgetFrame&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1e5a8205fbe92cb950249a9daff20b6c9451abfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTabWidget::setTabBar(&lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QTabWidget :: setTabBar ( &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="cf05e42afaafc07c530358c8b481823dbafc3dec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTcpServer::addPendingConnection(&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QTcpServer :: addPendingConnection ( &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c949d7f7c628c398f4527853c882656409cfe11c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTextBrowser::doSetSource(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294363b45373891b653dde9126b4e9a0e9ff5c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTextObject::setFormat(const &lt;a href=&quot;qtextformat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QTextObject :: setFormat (const &lt;a href=&quot;qtextformat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="165635b7d18b205ae02d6a794f44cf67df602fb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTextureImage::setStatus(&lt;a href=&quot;qt3drender-qtextureimage#Status-enum&quot;&gt;Qt3DRender::QTextureImage::Status&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QTextureImage :: setStatus ( &lt;a href=&quot;qt3drender-qtextureimage#Status-enum&quot;&gt;Qt3DRender :: QTextureImage :: Status&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd61ed2796b53d6c81e518cba40aaddde7f66dd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QToolButton::initStyleOption(&lt;a href=&quot;qstyleoptiontoolbutton&quot;&gt;QStyleOptionToolButton&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QToolButton :: initStyleOption ( &lt;a href=&quot;qstyleoptiontoolbutton&quot;&gt;QStyleOptionToolButton&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7a546c32e804aff3a0e8bfbf0c76e211dfd3a86f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTreeView::drawTree(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QTreeView :: drawTree ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0e36a099ce80f7be9e95502341940a21c4108063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QTreeWidgetItem::emitDataChanged()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QTreeWidgetItem :: emitDataChanged ()</target>
        </trans-unit>
        <trans-unit id="77ffb7e44587025762a74f3eb4cfb002df41d51c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QValue3DAxisFormatter::markDirty(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QValue3DAxisFormatter :: markDirty (bool</target>
        </trans-unit>
        <trans-unit id="570ffd6fea58c67e93db0464002dd226fb9a936b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QValue3DAxisFormatter::setAllowNegatives(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QValue3DAxisFormatter :: setAllowNegatives (bool</target>
        </trans-unit>
        <trans-unit id="2727fdc46e265b87221544a0bea7f041859d42f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QValue3DAxisFormatter::setAllowZero(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QValue3DAxisFormatter :: setAllowZero (bool</target>
        </trans-unit>
        <trans-unit id="e7cc08c9a67e86637fee1790b19c8516bfacf4be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QValue3DAxisFormatter::setLocale(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QValue3DAxisFormatter :: setLocale (const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8b10fa97eda263e05609fac6ae634e7d917d5ef5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QWidget::create(WId</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QWidget :: create (WId</target>
        </trans-unit>
        <trans-unit id="872db78704bc02264c994a5f724509cc16e8eb73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QWidget::destroy(bool</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QWidget :: destroy (bool</target>
        </trans-unit>
        <trans-unit id="af9f03fa870e7bd47c047fc8fd4be03c57e6b0b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QWizardPage::registerField(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QWizardPage :: registerField (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="01c60d498c695ae019b7b431ce57a886cbc08a3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void QWizardPage::setField(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void QWizardPage :: setField (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="993e12f62f699e699acc7baf2c62a505fbe1e6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void Renderer::invalidateFramebufferObject()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void Renderer :: invalidateFramebufferObject ()</target>
        </trans-unit>
        <trans-unit id="775f39cb47aa6e3c73b8408272da309d410e6cd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[protected] &lt;/code&gt;void Renderer::update()</source>
          <target state="translated">&lt;code&gt;[protected] &lt;/code&gt; void Renderer :: update ()</target>
        </trans-unit>
        <trans-unit id="55b8194f643ce39d55a392816aa9d15e814abea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec::convertFromUnicode(const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec :: convertFromUnicode (const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2230da0413f37bb5705c8abeffe3c3722e358aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractItemView::moveCursor(&lt;a href=&quot;qabstractitemview#CursorAction-enum&quot;&gt;QAbstractItemView::CursorAction&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractItemView :: moveCursor ( &lt;a href=&quot;qabstractitemview#CursorAction-enum&quot;&gt;QAbstractItemView :: CursorAction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8043b75c3072602f1f3f4027dd2598802b04528" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QAbstractItemView::visualRegionForSelection(const &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; QAbstractItemView :: visualRegionForSelection (const &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9f74db40934a24a6890b851d5a0f531b5ad99e53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem::sizeHint(&lt;a href=&quot;qt#SizeHint-enum&quot;&gt;Qt::SizeHint&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QGraphicsLayoutItem :: sizeHint ( &lt;a href=&quot;qt#SizeHint-enum&quot;&gt;Qt :: SizeHint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0b31355f9a78fb1b713cbf5a801c28e5d04a2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QTextCodec::convertToUnicode(const char *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QTextCodec :: convertToUnicode (const char *</target>
        </trans-unit>
        <trans-unit id="c10d48954af487321e3e3db910093e09de49ec5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QIODevice::readData(char *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QIODevice :: readData (char *</target>
        </trans-unit>
        <trans-unit id="0e98f676102366b35bcb20fe11cec46503da9830" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QIODevice::writeData(const char *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QIODevice :: writeData (const char *</target>
        </trans-unit>
        <trans-unit id="656d17862050880c3bfebeca38affa25f659d099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlResult::data(int</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QSqlResult :: data (int</target>
        </trans-unit>
        <trans-unit id="a1154148a7e1afe5074d4dcea884533f2b9dd378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt;&amp;gt; QAbstractXmlNodeModel::attributes(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;gt; QAbstractXmlNodeModel :: attributes (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f3a209ea6b6afc3605609d891d3eca10cddcb50e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; QAbstractXmlNodeModel::nextFromSimpleAxis(&lt;a href=&quot;qabstractxmlnodemodel#SimpleAxis-enum&quot;&gt;QAbstractXmlNodeModel::SimpleAxis&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; QAbstractXmlNodeModel :: nextFromSimpleAxis ( &lt;a href=&quot;qabstractxmlnodemodel#SimpleAxis-enum&quot;&gt;QAbstractXmlNodeModel :: SimpleAxis&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6951f8398320eb991ca29a6fa56dc951f7d79c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;Qt3DRender::QTextureImageDataGeneratorPtr QAbstractTextureImage::dataGenerator() const</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; Qt3DRender :: QTextureImageDataGeneratorPtr QAbstractTextureImage :: dataGenerator () const</target>
        </trans-unit>
        <trans-unit id="d5a070ce6d98bf06367af76f72b80ac031d60123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QAbstractItemView::isIndexHidden(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QAbstractItemView :: isIndexHidden (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7f98e0370e8787b19045c8f9d49b061190524304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QAbstractTransition::eventTest(&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QAbstractTransition :: eventTest ( &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="17c8cfde55a029f5b5559a14253eedc41f582d51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QCanBusDevice::open()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QCanBusDevice :: open ()</target>
        </trans-unit>
        <trans-unit id="5e16cb052ba30224ecfe677cc45707debd5bd66d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QMediaBindableInterface::setMediaObject(&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QMediaBindableInterface :: setMediaObject ( &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="05cf654348b1e0991cbcde0029eb222c728cc482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QModbusDevice::open()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QModbusDevice :: open ()</target>
        </trans-unit>
        <trans-unit id="5fabf749d904d7521990bfedf1bcad39153e66ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QSensorGestureRecognizer::start()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QSensorGestureRecognizer :: start ()</target>
        </trans-unit>
        <trans-unit id="40d40f8de2c98a8163edcff932e5ac77c8a7a45a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QSensorGestureRecognizer::stop()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QSensorGestureRecognizer :: stop ()</target>
        </trans-unit>
        <trans-unit id="f85bf355deeb537c55277ebd2076ce6de3d07df4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QSqlResult::fetch(int</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QSqlResult :: fetch (int</target>
        </trans-unit>
        <trans-unit id="6ae90163283cc0d0fdda9866693dd9669b7c3e53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QSqlResult::fetchFirst()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QSqlResult :: fetchFirst ()</target>
        </trans-unit>
        <trans-unit id="90d668cb2b1e230fe827793a58d46e7c224b79c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QSqlResult::fetchLast()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QSqlResult :: fetchLast ()</target>
        </trans-unit>
        <trans-unit id="55785075adb65936eae82c34a6c50e1f04f21bd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QSqlResult::isNull(int</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QSqlResult :: isNull (int</target>
        </trans-unit>
        <trans-unit id="6379416f8b0040d79bc8cde3a3eb88b988e4d994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;bool QSqlResult::reset(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; bool QSqlResult :: reset (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f6507cabcccc32b36ec4353dba016f469526202f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;int QAbstractItemView::horizontalOffset() const</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; int QAbstractItemView :: horizontalOffset () const</target>
        </trans-unit>
        <trans-unit id="f5e9a4c48362824e1e46a934097060f4ce356dc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;int QAbstractItemView::verticalOffset() const</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; int QAbstractItemView :: verticalOffset () const</target>
        </trans-unit>
        <trans-unit id="1a6c78ec9a603f4fb6788bf3c199e76ae1efbf9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;int QSqlResult::numRowsAffected()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; int QSqlResult :: numRowsAffected ()</target>
        </trans-unit>
        <trans-unit id="99ab9e869971d9c842e98cb8256c3ae54c547a30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;int QSqlResult::size()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; int QSqlResult :: size ()</target>
        </trans-unit>
        <trans-unit id="6f7adb5f0f0bef844fc4845d6ae2bb850c6012bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QAbstractAnimation::updateCurrentTime(int</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QAbstractAnimation :: updateCurrentTime (int</target>
        </trans-unit>
        <trans-unit id="cc81498609d63e69dd955dcd036e5f7a0a985395" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QAbstractItemView::setSelection(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QAbstractItemView :: setSelection (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="051efcd423f2c409ea5d5843b115e061dc9b6ba3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QAbstractMessageHandler::handleMessage(&lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QAbstractMessageHandler :: handleMessage ( &lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7fd7aa539d500e0ab825edd92b8924cc39fb502f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QAbstractMessageHandler::handleMessage(&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtMsgType&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3696656eea242bd7bcac2bead579780369c53106" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QAbstractState::onEntry(&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QAbstractState :: onEntry ( &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2eaca6e76aa40f2fe4151262c048b846d99bd22b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QAbstractState::onExit(&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QAbstractState :: onExit ( &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e696ab1dc4019758f723f17a89f3636fa4dd71c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QAbstractTextDocumentLayout::documentChanged(int</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QAbstractTextDocumentLayout :: documentChanged (int</target>
        </trans-unit>
        <trans-unit id="385db69fe398599baefd6df55b51947f453cb026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QAbstractTransition::onTransition(&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QAbstractTransition :: onTransition ( &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c1f7e75f2f39817a2d758f98097d2ba891183782" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QCanBusDevice::close()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QCanBusDevice :: close ()</target>
        </trans-unit>
        <trans-unit id="559594f3f425e1defc90d62b2621a0bdd9767a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QGraphicsEffect::draw(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QGraphicsEffect :: draw ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a92954de84196c852d6d89366c53986dc67a69cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QModbusDevice::close()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QModbusDevice :: close ()</target>
        </trans-unit>
        <trans-unit id="65608caf762c042a269096e5895dc3b6fef603a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QPaintedTextureImage::paint(&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QPaintedTextureImage :: paint ( &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="62830f28e3689252e0fe0a335f9068a6fd3b10cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QSensorGestureRecognizer::create()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QSensorGestureRecognizer :: create ()</target>
        </trans-unit>
        <trans-unit id="0118f56a16cdaee92e8f82e71f15ce612ccbced2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void QSyntaxHighlighter::highlightBlock(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void QSyntaxHighlighter :: highlightBlock (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0590f9a9b41b1bb63773f3e1798fa0d66485a85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual protected] &lt;/code&gt;void Renderer::render()</source>
          <target state="translated">&lt;code&gt;[pure virtual protected] &lt;/code&gt; void Renderer :: render ()</target>
        </trans-unit>
        <trans-unit id="9cc5a8aa51a15509428e4b9589c026ad5897f353" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot, since 5.0] &lt;/code&gt;void QDesignerFormWindowManagerInterface::closeAllPreviews()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ebe7f3b997b58daf86a7346d22fc19c371f549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot, since 5.0] &lt;/code&gt;void QDesignerFormWindowManagerInterface::showPluginDialog()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4e61d69e7e53237fd55853f4bc70af860ffdf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot, since 5.0] &lt;/code&gt;void QDesignerFormWindowManagerInterface::showPreview()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6f1ef18195fa5822ff57759d5e11526e3a429d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;bool QDesignerFormWindowInterface::setContents(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; bool QDesignerFormWindowInterface :: setContents (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="85e7e025920c0d4493f3d332709c91e48b769e35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QAbstractNetworkCache::clear()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QAbstractNetworkCache :: clear ()</target>
        </trans-unit>
        <trans-unit id="5d0dbbc6ad26f867a881e88b842ecbf6431b5daf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QAbstractOAuth::grant()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QAbstractOAuth :: grant ()</target>
        </trans-unit>
        <trans-unit id="f0999be9145d8b2271c5d12e47aef90f7c645c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QAbstractOAuthReplyHandler::networkReplyFinished(&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QAbstractOAuthReplyHandler :: networkReplyFinished ( &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3225885b033abbd9a4aead340c99e0f9abf9472d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QAudioInputSelectorControl::setActiveInput(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QAudioInputSelectorControl :: setActiveInput (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3f5730756c13892d013956362f4b2a1107429794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QAudioOutputSelectorControl::setActiveOutput(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QAudioOutputSelectorControl :: setActiveOutput (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b9abf2e4c5f173f64e4c5eb929bd942e59bc1b9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerActionEditorInterface::setFormWindow(&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerActionEditorInterface :: setFormWindow ( &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ef5d73c46906825e11918e8fcef586100ac994e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowInterface::clearSelection(bool</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowInterface :: clearSelection (bool</target>
        </trans-unit>
        <trans-unit id="45a0685391bce25ceeaac96b847eb3dd73950fa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowInterface::manageWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowInterface :: manageWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bacdcb33c6a0a7fea8a1730dd0e174914e6e4421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowInterface::selectWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowInterface :: selectWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="17bcd3a0d5ec5b68743cf79bc338c1a9788ed882" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowInterface::setDirty(bool</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowInterface :: setDirty (bool</target>
        </trans-unit>
        <trans-unit id="aa079a79469dd126ec92fb0193a58934cda88188" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowInterface::setFeatures(&lt;a href=&quot;qdesignerformwindowinterface#FeatureFlag-enum&quot;&gt;QDesignerFormWindowInterface::Feature&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowInterface :: setFeatures ( &lt;a href=&quot;qdesignerformwindowinterface#FeatureFlag-enum&quot;&gt;QDesignerFormWindowInterface :: Feature&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="764691498f6457c68d02fada8ca16995a71fa944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowInterface::setFileName(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowInterface :: setFileName (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3ae2cbe1fc73a572f94723cb59bb835892de83dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowInterface::setGrid(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowInterface :: setGrid (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="55806225848d889beec8d324a66ace501fe027e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowInterface::unmanageWidget(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowInterface :: unmanageWidget ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5c0aff950f395df5541cc5f3a48f16b27d7e5140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowManagerInterface::addFormWindow(&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowManagerInterface :: addFormWindow ( &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="30070962729d41c36f7b107a0d327a28d414ec00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowManagerInterface::closeAllPreviews()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowManagerInterface :: closeAllPreviews ()</target>
        </trans-unit>
        <trans-unit id="af4c8ae62c34784c53e74fc2a8307a95eb649c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowManagerInterface::removeFormWindow(&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowManagerInterface :: removeFormWindow ( &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="421edee9f2538dafdc670a130ed10bff3dd87562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowManagerInterface::setActiveFormWindow(&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowManagerInterface :: setActiveFormWindow ( &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6dff14ec3d1dcdf138804dcef7f90da5c3ef6569" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowManagerInterface::showPluginDialog()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowManagerInterface :: showPluginDialog ()</target>
        </trans-unit>
        <trans-unit id="3214f72be8e17c986b7c59a4d994e061bb376e5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerFormWindowManagerInterface::showPreview()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerFormWindowManagerInterface :: showPreview ()</target>
        </trans-unit>
        <trans-unit id="218593ff6e6dc150222076f7b665fc6da0befe8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerObjectInspectorInterface::setFormWindow(&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerObjectInspectorInterface :: setFormWindow ( &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c3d08e4c0b4bc72182260eb30f8971fc012446ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerPropertyEditorInterface::setObject(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerPropertyEditorInterface :: setObject ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="27131d8bd0f9c97af86ba2a243e04be0920e7396" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerPropertyEditorInterface::setObject(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83622df4b6db0f991a8fc6fbcb7a0f425d8e1b01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerPropertyEditorInterface::setPropertyValue(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerPropertyEditorInterface :: setPropertyValue (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc196635201ad407d1b2229867ef29a361bcccbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QDesignerPropertyEditorInterface::setReadOnly(bool</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QDesignerPropertyEditorInterface :: setReadOnly (bool</target>
        </trans-unit>
        <trans-unit id="786e84e90db8cdcaafcc18a75ab66f4ef24ad6c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QGeoPositionInfoSource::requestUpdate(int</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QGeoPositionInfoSource :: requestUpdate (int</target>
        </trans-unit>
        <trans-unit id="db62fe9c2d0f0eabe1e616054c602851137163f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QGeoPositionInfoSource::startUpdates()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QGeoPositionInfoSource :: startUpdates ()</target>
        </trans-unit>
        <trans-unit id="2e2497a84304cde858b7bb5bde1ddbf29d89d57d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QGeoPositionInfoSource::stopUpdates()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QGeoPositionInfoSource :: stopUpdates ()</target>
        </trans-unit>
        <trans-unit id="5c336a58376583614b2bf1f73d000e564693d59a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QGeoSatelliteInfoSource::requestUpdate(int</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QGeoS satelliteInfoSource :: requestUpdate (int</target>
        </trans-unit>
        <trans-unit id="ca4e44c1a93b64b8c06514e47c6c13e61eacf9b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QGeoSatelliteInfoSource::startUpdates()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QGeoS satelliteInfoSource :: startUpdates ()</target>
        </trans-unit>
        <trans-unit id="c3694a0c6eade0c34393c1011278f84f26f52959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QGeoSatelliteInfoSource::stopUpdates()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QGeoS satelliteInfoSource :: stopUpdates ()</target>
        </trans-unit>
        <trans-unit id="2a5f0fbd2989111c162b037ea0f3022eeb045831" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QMediaRecorderControl::setMuted(bool</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QMediaRecorderControl :: setMuted (bool</target>
        </trans-unit>
        <trans-unit id="870a612e317baf2ead8e5fe3cc22aaf3bcf444e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QMediaRecorderControl::setState(&lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder::State&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QMediaRecorderControl :: setState ( &lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder :: State&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df10e2b85385d2f2733ddbebb4207c9ff4f05dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QMediaRecorderControl::setVolume(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QMediaRecorderControl :: setVolume ( &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83875d9ebaea42291bbcf40978770fd84ddeda84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QMediaRecorderControl::setVolume(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ae43cd5e00b036c658f91f647d958996d4051d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QNetworkReply::abort()</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QNetworkReply :: abort ()</target>
        </trans-unit>
        <trans-unit id="82e9f9f9c5483b109ff57f5835d44277d46cf054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QVideoDeviceSelectorControl::setSelectedDevice(int</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QVideoDeviceSelectorControl :: setSelectedDevice (int</target>
        </trans-unit>
        <trans-unit id="88646e63a9dad47231fd839fd3406603b2c8f0c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual slot] &lt;/code&gt;void QWebChannelAbstractTransport::sendMessage(const &lt;a href=&quot;qjsonobject&quot;&gt;QJsonObject&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual slot] &lt;/code&gt; void QWebChannelAbstractTransport :: sendMessage (const &lt;a href=&quot;qjsonobject&quot;&gt;QJsonObject&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2ac6ebc3b9bd8b2f0472a41cdc08b35f94fd2842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.0] &lt;/code&gt;&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QDesignerFormWindowManagerInterface::action(&lt;a href=&quot;qdesignerformwindowmanagerinterface#Action-enum&quot;&gt;QDesignerFormWindowManagerInterface::Action&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a2a459d3940e36fa6e3fcd87e0dce62746a3d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.0] &lt;/code&gt;&lt;a href=&quot;qactiongroup&quot;&gt;QActionGroup&lt;/a&gt; *QDesignerFormWindowManagerInterface::actionGroup(&lt;a href=&quot;qdesignerformwindowmanagerinterface#ActionGroup-enum&quot;&gt;QDesignerFormWindowManagerInterface::ActionGroup&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0415e0a6d35e6b69cd97a8ce38c98c01dcf486c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.0] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QDesignerFormWindowInterface::checkContents() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d1af550c8b6ecdb1a9d79f648c1e9d94649615" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.0] &lt;/code&gt;&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QDesignerFormWindowInterface::formContainer() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735cf6ca23c46a9831dbe3f8f2e636b0c3aa93ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.0] &lt;/code&gt;bool QDesignerContainerExtension::canAddWidget() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac6a17af9f2c2bb40c04d54ff0afdd1167de324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.0] &lt;/code&gt;bool QDesignerContainerExtension::canRemove(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be661ff86804cf97e4260ef37e385b65804afee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.0] &lt;/code&gt;bool QDesignerPropertySheetExtension::isEnabled(int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba6a8e7097a29d799e80a45ee00aa5f4ae113f9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.13] &lt;/code&gt;void QAbstractOAuth::prepareRequest(&lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a27cb32a99acc00a6703868ccb07cae1ebb19d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual, since 5.14] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QSGTexture::comparisonKey() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b0d73f97b0f71f882bdd6dd39e2011f690b5e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioInput::elapsedUSecs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioInput :: elapsedUSecs () const</target>
        </trans-unit>
        <trans-unit id="e7118dccefae68009a31045e15be66dd12783b03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioInput::processedUSecs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioInput :: loadedUSecs () const</target>
        </trans-unit>
        <trans-unit id="e7d62225eec4c03c204d81951b804429a3edeeaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioOutput::elapsedUSecs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioOutput :: elapsedUSecs () const</target>
        </trans-unit>
        <trans-unit id="f457dbef94b09dbd312f78da6e35a2dfe0a2f5ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioOutput::processedUSecs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioOutput :: loadedUSecs () const</target>
        </trans-unit>
        <trans-unit id="bb23000eb1076ddf14bebb39ddff7276095e139e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractNetworkCache::cacheSize() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractNetworkCache :: cacheSize () const</target>
        </trans-unit>
        <trans-unit id="6ab3421a594eb50d6163416ff05dd212da6ac006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAudioDecoderControl::duration() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAudioDecoderControl :: duration () const</target>
        </trans-unit>
        <trans-unit id="afe80dc0be16d1d8bfc22c1aaa25d04ee2330b51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAudioDecoderControl::position() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAudioDecoderControl :: position () const</target>
        </trans-unit>
        <trans-unit id="744bd30ad205377268dfb98e7ca1fc99ba96f70d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaPlayerControl::duration() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaPlayerControl :: duration () const</target>
        </trans-unit>
        <trans-unit id="18cedcbb51d23a0ba19ad113562545cb1df4b799" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaPlayerControl::position() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaPlayerControl :: position () const</target>
        </trans-unit>
        <trans-unit id="160d94fc3037f31f026197c45e70a37b480f3284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaRecorderControl::duration() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaRecorderControl :: duration () const</target>
        </trans-unit>
        <trans-unit id="54dde1e056d9c3dcfaac526cec13ca3da382cc86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; QAbstractFunctor::id() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; QAbstractFunctor :: id () const</target>
        </trans-unit>
        <trans-unit id="716a9cfed4a563ca095d66296972c7986a641d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::currentDigitalZoom() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl :: currentDigitalZoom () const</target>
        </trans-unit>
        <trans-unit id="f307e6f189af5e93ca5334abb1694325405d7e5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::currentOpticalZoom() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl :: currentOpticalZoom () const</target>
        </trans-unit>
        <trans-unit id="8bb81abef85b701fdc4cd264d2d3b75f52d6fc18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::maximumDigitalZoom() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl :: maximumDigitalZoom () const</target>
        </trans-unit>
        <trans-unit id="2deb37297ad6746a96967792b1571df5eaf45c3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::maximumOpticalZoom() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl :: maximumOpticalZoom () const</target>
        </trans-unit>
        <trans-unit id="921db8d253047aa43c35e38c4f7d3f9f36f7c5b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::requestedDigitalZoom() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl :: requiredDigitalZoom () const</target>
        </trans-unit>
        <trans-unit id="2f618399713f01a7cf8a86acbed696eae8a5f62f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::requestedOpticalZoom() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl :: requiredOpticalZoom () const</target>
        </trans-unit>
        <trans-unit id="c7d9e8da83e73abcf7ed4d6b68945fc613c90150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaGaplessPlaybackControl::crossfadeTime() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaGaplessPlaybackControl :: crossfadeTime () const</target>
        </trans-unit>
        <trans-unit id="7c6ee26e4ae82209faeaef905c60821a4d0f590f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaPlayerControl::playbackRate() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaPlayerControl :: playRate () const</target>
        </trans-unit>
        <trans-unit id="901d99dbf0012920a003331a00b8744b7b9f014f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaRecorderControl::volume() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaRecorderControl :: volume () const</target>
        </trans-unit>
        <trans-unit id="07898318659f838677df8f8221c9332438ab7e7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt; QMaskGenerator::nextMask()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt; QMaskGenerator :: nextMask ()</target>
        </trans-unit>
        <trans-unit id="e7b855ef15de83ef9b8be945fb3b5fe59dc999db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *QAbstractVideoBuffer::map(&lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer::MapMode&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt; * QAbstractVideoBuffer :: map ( &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer :: MapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de5b05268c5db8323ba637902c66cb9a3c164aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qabstractaxis#AxisType-enum&quot;&gt;QAbstractAxis::AxisType&lt;/a&gt; QAbstractAxis::type() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qabstractaxis#AxisType-enum&quot;&gt;QAbstractAxis :: AxisType&lt;/a&gt; QAbstractAxis :: type () const</target>
        </trans-unit>
        <trans-unit id="61687ee49f50cb786490e9e7f05dd1f3c67779bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qabstractseries&quot;&gt;QAbstractSeries&lt;/a&gt; *QLegendMarker::series()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qabstractseries&quot;&gt;QAbstractSeries&lt;/a&gt; * QLegendMarker :: series ()</target>
        </trans-unit>
        <trans-unit id="6517ba3c94487a35a56e736e88cf061587c0b716" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer::MapMode&lt;/a&gt; QAbstractVideoBuffer::mapMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer :: MapMode&lt;/a&gt; QAbstractVideoBuffer :: mapMode () const</target>
        </trans-unit>
        <trans-unit id="ab3c98256e57dc52f720f23ce1ecd2aa8ddbca99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qabstractvideosurface&quot;&gt;QAbstractVideoSurface&lt;/a&gt; *QVideoRendererControl::surface() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qabstractvideosurface&quot;&gt;QAbstractVideoSurface&lt;/a&gt; * QVideoRendererControl :: surface () const</target>
        </trans-unit>
        <trans-unit id="add2097909f7c2f0ead8729c1517a7d9488d8198" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessible#Role-enum&quot;&gt;QAccessible::Role&lt;/a&gt; QAccessibleInterface::role() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessible#Role-enum&quot;&gt;QAccessible :: Role&lt;/a&gt; QAccessibleInterface :: role () const</target>
        </trans-unit>
        <trans-unit id="2c60293d6802e3b46bb3b5f961901660998b8705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessible-state&quot;&gt;QAccessible::State&lt;/a&gt; QAccessibleInterface::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessible-state&quot;&gt;QAccessible :: State&lt;/a&gt; QAccessibleInterface :: state () const</target>
        </trans-unit>
        <trans-unit id="500eb484da1bbf6a8af8f4972fdc2bf1c3bb82f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *QAccessibleInterface::child(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; * QAccessibleInterface :: child (int</target>
        </trans-unit>
        <trans-unit id="1d1548632b4297c24b106aadc8bbdc7cd3166c2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *QAccessibleInterface::childAt(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; * QAccessibleInterface :: childAt (int</target>
        </trans-unit>
        <trans-unit id="dbd61623ff18f4e83dba9bfd2ef28d6d48038667" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *QAccessibleInterface::parent() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; * QAccessibleInterface :: parent () const</target>
        </trans-unit>
        <trans-unit id="14df88ca4707e136091ffc38101bb7e0497668b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *QAccessiblePlugin::create(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; * QAccessiblePlugin :: create (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5efb5c600f3fc07c78b782befde2a181dafd84e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *QAccessibleTableCellInterface::table() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; * QAccessibleTableCellInterface :: table () const</target>
        </trans-unit>
        <trans-unit id="3f8043c4577ddbd4f6c4e96610d67a9db7597575" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *QAccessibleTableInterface::caption() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; * QAccessibleTableInterface :: caption () const</target>
        </trans-unit>
        <trans-unit id="0a274d44848afb07736b7de7b0a1780798d4cc21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *QAccessibleTableInterface::cellAt(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; * QAccessibleTableInterface :: cellAt (int</target>
        </trans-unit>
        <trans-unit id="27710ebbd0ca6df03d7941d45aaa91fa4d53e5dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *QAccessibleTableInterface::summary() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; * QAccessibleTableInterface :: summary () const</target>
        </trans-unit>
        <trans-unit id="c0fd3342771e791d49730b1d080297772fe2b572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *QDesignerFormWindowManagerInterface::action(&lt;a href=&quot;qdesignerformwindowmanagerinterface#Action-enum&quot;&gt;QDesignerFormWindowManagerInterface::Action&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; * QDesignerFormWindowManagerInterface :: action ( &lt;a href=&quot;qdesignerformwindowmanagerinterface#Action-enum&quot;&gt;QDesignerFormWindowManagerInterface :: Action&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bca934d1935c977eb249a149c7bf0e489d7f71fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qactiongroup&quot;&gt;QActionGroup&lt;/a&gt; *QDesignerFormWindowManagerInterface::actionGroup(&lt;a href=&quot;qdesignerformwindowmanagerinterface#ActionGroup-enum&quot;&gt;QDesignerFormWindowManagerInterface::ActionGroup&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qactiongroup&quot;&gt;QActionGroup&lt;/a&gt; * QDesignerFormWindowManagerInterface :: actionGroup ( &lt;a href=&quot;qdesignerformwindowmanagerinterface#ActionGroup-enum&quot;&gt;QDesignerFormWindowManagerInterface :: ActionGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cbf3ab63f6f056c496a83c30f76287861dd49fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::Error&lt;/a&gt; QAbstractAudioInput::error() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio :: Error&lt;/a&gt; QAbstractAudioInput :: error () const</target>
        </trans-unit>
        <trans-unit id="ccbd5e0b7e07304fda90274a7adf37949585fc90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio::Error&lt;/a&gt; QAbstractAudioOutput::error() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudio#Error-enum&quot;&gt;QAudio :: Error&lt;/a&gt; QAbstractAudioOutput :: error () const</target>
        </trans-unit>
        <trans-unit id="61b16060f8fed0c1e06459a461b05cc777e11d4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudio#Role-enum&quot;&gt;QAudio::Role&lt;/a&gt; QAudioRoleControl::audioRole() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudio#Role-enum&quot;&gt;QAudio :: Role&lt;/a&gt; QAudioRoleControl :: audioRole () const</target>
        </trans-unit>
        <trans-unit id="afffee0a1378175e5df1e52a2aac2df7e024ee1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; QAbstractAudioInput::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; QAbstractAudioInput :: state () const</target>
        </trans-unit>
        <trans-unit id="afc5a90060b2b73aa4e3a68918eb53576b117cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; QAbstractAudioOutput::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; QAbstractAudioOutput :: state () const</target>
        </trans-unit>
        <trans-unit id="736b7aa17b60f26e3c54526857f94d12951f9c47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt; QAudioDecoderControl::read()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudiobuffer&quot;&gt;QAudioBuffer&lt;/a&gt; QAudioDecoderControl :: read ()</target>
        </trans-unit>
        <trans-unit id="56570805ffd71388fd9ab513cc38eb0601edbbc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudiodecoder#State-enum&quot;&gt;QAudioDecoder::State&lt;/a&gt; QAudioDecoderControl::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudiodecoder#State-enum&quot;&gt;QAudioDecoder :: State&lt;/a&gt; QAudioDecoderControl :: state () const</target>
        </trans-unit>
        <trans-unit id="368de586017e7bee9edea7b5d5572c9ac1dce03e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudioencodersettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; QAudioEncoderSettingsControl::audioSettings() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudioencodersettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; QAudioEncoderSettingsControl :: audioSettings () const</target>
        </trans-unit>
        <trans-unit id="31b1221c1d4cb5088dea8ac544ea99d2ddbf17b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAbstractAudioDeviceInfo::preferredFormat() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAbstractAudioDeviceInfo :: preferredFormat () const</target>
        </trans-unit>
        <trans-unit id="26329e9dee250272a0812dfd9fe639026d276bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAbstractAudioInput::format() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAbstractAudioInput :: format () const</target>
        </trans-unit>
        <trans-unit id="bb44271ffc1bc184741c95e17be6cf83bd782fcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAbstractAudioOutput::format() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAbstractAudioOutput :: format () const</target>
        </trans-unit>
        <trans-unit id="b87c888102d11c91fced9416496dac2aaf6c95e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioDecoderControl::audioFormat() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; QAudioDecoderControl :: audioFormat () const</target>
        </trans-unit>
        <trans-unit id="f005d3616bd7a19e314b6c561aa7d90f57cebe5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qbluetoothtransferreply#TransferError-enum&quot;&gt;QBluetoothTransferReply::TransferError&lt;/a&gt; QBluetoothTransferReply::error() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qbluetoothtransferreply#TransferError-enum&quot;&gt;QBluetoothTransferReply :: TransferError&lt;/a&gt; QBluetoothTransferReply :: error () const</target>
        </trans-unit>
        <trans-unit id="560ccda445e9b8e2a19ae784eea7a424b60b23f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; Loader::load(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; Loader :: load (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2e5bc183f10a93ee94ca7a61eb92e7b6e2d0f8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QBufferDataGenerator::operator()()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QBufferDataGenerator :: operator () ()</target>
        </trans-unit>
        <trans-unit id="93d7814276d22d2826408b3d5a5b3ddad47261b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QItemEditorCreatorBase::valuePropertyName() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QItemEditorCreatorBase :: valuePropertyName () const</target>
        </trans-unit>
        <trans-unit id="8c57381afde1ba7a140e47770d2e17d426080fc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMediaServiceDefaultDeviceInterface::defaultDevice(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QMediaServiceDefaultDeviceInterface :: defaultDevice (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fc9ca8bfbeb64096127e5b32e152fa634394a65f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNearFieldTarget::uid() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QNearFieldTarget :: uid () const</target>
        </trans-unit>
        <trans-unit id="90d326aaa33c14c98e3f741f1189fd078bb46516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec::name() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; QTextCodec :: name () const</target>
        </trans-unit>
        <trans-unit id="8026e5f58b937582559c57d45eb0033202edba4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamera#CaptureMode-enum&quot;&gt;QCamera::CaptureModes&lt;/a&gt; QCameraControl::captureMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamera#CaptureMode-enum&quot;&gt;QCamera :: CaptureModes&lt;/a&gt; QCameraControl :: captureMode () const</target>
        </trans-unit>
        <trans-unit id="1f8d64f30035d47b618fdbf3430a1c5dd40aed59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera::LockStatus&lt;/a&gt; QCameraLocksControl::lockStatus(&lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera::LockType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamera#LockStatus-enum&quot;&gt;QCamera :: LockStatus&lt;/a&gt; QCameraLocksControl :: lockStatus ( &lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera :: LockType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f0bd525ec8de5c4e6278f53e67329d9d1a57e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera::LockTypes&lt;/a&gt; QCameraLocksControl::supportedLocks() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamera#LockType-enum&quot;&gt;QCamera :: LockTypes&lt;/a&gt; QCameraLocksControl :: supportedLocks () const</target>
        </trans-unit>
        <trans-unit id="6aea3cfff75bf0bd7149a4aa462c9d4d717d3ee4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamera#Position-enum&quot;&gt;QCamera::Position&lt;/a&gt; QCameraInfoControl::cameraPosition(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamera#Position-enum&quot;&gt;QCamera :: Position&lt;/a&gt; QCameraInfoControl :: cameraPosition (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="239e7961f2173dbb7866785b94da7432952ceba9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamera#Position-enum&quot;&gt;QCamera::Position&lt;/a&gt; QMediaServiceCameraInfoInterface::cameraPosition(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamera#Position-enum&quot;&gt;QCamera :: Position&lt;/a&gt; QMediaServiceCameraInfoInterface :: cameraPosition (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0e12c912899ed9b2f6cd76cbd77114a629eadda9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamera#State-enum&quot;&gt;QCamera::State&lt;/a&gt; QCameraControl::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamera#State-enum&quot;&gt;QCamera :: State&lt;/a&gt; QCameraControl :: state () const</target>
        </trans-unit>
        <trans-unit id="55f8d75983f16c355933e36d51cf52ffdc7bba0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamera#Status-enum&quot;&gt;QCamera::Status&lt;/a&gt; QCameraControl::status() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamera#Status-enum&quot;&gt;QCamera :: Status&lt;/a&gt; QCameraControl :: status () const</target>
        </trans-unit>
        <trans-unit id="8d0c4d391bb35948ef93163dfb19f966011d3811" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcameraexposure#FlashMode-enum&quot;&gt;QCameraExposure::FlashModes&lt;/a&gt; QCameraFlashControl::flashMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcameraexposure#FlashMode-enum&quot;&gt;QCameraExposure :: FlashModes&lt;/a&gt; QCameraFlashControl :: flashMode () const</target>
        </trans-unit>
        <trans-unit id="7898e331a1fd99186001f00122e420022133dcb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamerafocus#FocusMode-enum&quot;&gt;QCameraFocus::FocusModes&lt;/a&gt; QCameraFocusControl::focusMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamerafocus#FocusMode-enum&quot;&gt;QCameraFocus :: FocusModes&lt;/a&gt; QCameraFocusControl :: focusMode () const</target>
        </trans-unit>
        <trans-unit id="064cc614d70fc6bd48ed61b72a77bdf59ffd4920" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcamerafocus#FocusPointMode-enum&quot;&gt;QCameraFocus::FocusPointMode&lt;/a&gt; QCameraFocusControl::focusPointMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcamerafocus#FocusPointMode-enum&quot;&gt;QCameraFocus :: FocusPointMode&lt;/a&gt; QCameraFocusControl :: focusPointMode () const</target>
        </trans-unit>
        <trans-unit id="ceef13c67ac2300becc995318389f03115d6754e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcameraimagecapture#CaptureDestination-enum&quot;&gt;QCameraImageCapture::CaptureDestinations&lt;/a&gt; QCameraCaptureDestinationControl::captureDestination() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcameraimagecapture#CaptureDestination-enum&quot;&gt;QCameraImageCapture :: CaptureDestinations&lt;/a&gt; QCameraCaptureDestinationControl :: captureDestination () const</target>
        </trans-unit>
        <trans-unit id="d988444bc9ff8dbf4534ddd5e9fcb7aa64beb82b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcameraimagecapture#DriveMode-enum&quot;&gt;QCameraImageCapture::DriveMode&lt;/a&gt; QCameraImageCaptureControl::driveMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcameraimagecapture#DriveMode-enum&quot;&gt;QCameraImageCapture :: DriveMode&lt;/a&gt; QCameraImageCaptureControl :: driveMode () const</target>
        </trans-unit>
        <trans-unit id="0538ad9ce31471379de8583eb2ebfeefa9202d99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcameraviewfindersettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; QCameraViewfinderSettingsControl2::viewfinderSettings() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcameraviewfindersettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; QCameraViewfinderSettingsControl2 :: viewfinderSettings () const</target>
        </trans-unit>
        <trans-unit id="0743c4520fbc4ae7743d0de622f23ab7521356f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; *QCanBusFactory::createDevice(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcanbusdevice&quot;&gt;QCanBusDevice&lt;/a&gt; * QCanBusFactory :: createDevice (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c9daafff975045e8cbf6c6ba674f5133bdfef80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; QSGRectangleNode::color() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; QSGRectangleNode :: color () const</target>
        </trans-unit>
        <trans-unit id="27c90b9c96073702d98233a748688a5534b1f8df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdesignerformeditorinterface&quot;&gt;QDesignerFormEditorInterface&lt;/a&gt; *QDesignerFormWindowManagerInterface::core() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdesignerformeditorinterface&quot;&gt;QDesignerFormEditorInterface&lt;/a&gt; * QDesignerFormWindowManagerInterface :: core () const</target>
        </trans-unit>
        <trans-unit id="ca3b77c44eb7ec20ab4de1280b2f55bc91056c29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdesignerformwindowcursorinterface&quot;&gt;QDesignerFormWindowCursorInterface&lt;/a&gt; *QDesignerFormWindowInterface::cursor() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdesignerformwindowcursorinterface&quot;&gt;QDesignerFormWindowCursorInterface&lt;/a&gt; * QDesignerFormWindowInterface :: cursor () const</target>
        </trans-unit>
        <trans-unit id="22205bc0aa8322b2104ae81d324af35099ef1070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *QDesignerFormWindowCursorInterface::formWindow() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; * QDesignerFormWindowCursorInterface :: formWindow () const</target>
        </trans-unit>
        <trans-unit id="5eb0c889442170bdadc909c056d5224ab78d6a77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *QDesignerFormWindowManagerInterface::activeFormWindow() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; * QDesignerFormWindowManagerInterface :: activeFormWindow () const</target>
        </trans-unit>
        <trans-unit id="fe5009e954e4faa490b5da8d2b55bcb97b458e96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *QDesignerFormWindowManagerInterface::createFormWindow(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; * QDesignerFormWindowManagerInterface :: createFormWindow ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="85f4c1d6690decd074921844a8aeee80cb0460d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; *QDesignerFormWindowManagerInterface::formWindow(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdesignerformwindowinterface&quot;&gt;QDesignerFormWindowInterface&lt;/a&gt; * QDesignerFormWindowManagerInterface :: formWindow (int</target>
        </trans-unit>
        <trans-unit id="ec712dff20b6f5f9fc63db98144563e9a381aa8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdesignerformwindowinterface#FeatureFlag-enum&quot;&gt;QDesignerFormWindowInterface::Feature&lt;/a&gt; QDesignerFormWindowInterface::features() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdesignerformwindowinterface#FeatureFlag-enum&quot;&gt;QDesignerFormWindowInterface :: Feature&lt;/a&gt; QDesignerFormWindowInterface :: features () const</target>
        </trans-unit>
        <trans-unit id="c909bff639cb247de6d3d4b8046fc6f84430135a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdesignerformwindowinterface#ResourceFileSaveMode-enum&quot;&gt;QDesignerFormWindowInterface::ResourceFileSaveMode&lt;/a&gt; QDesignerFormWindowInterface::resourceFileSaveMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdesignerformwindowinterface#ResourceFileSaveMode-enum&quot;&gt;QDesignerFormWindowInterface :: ResourceFileSaveMode&lt;/a&gt; QDesignerFormWindowInterface :: resourceFileSaveMode () const</target>
        </trans-unit>
        <trans-unit id="96db09373f518ce02b1dca03f0555e816ff5a63b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QDesignerFormWindowInterface::absoluteDir() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; QDesignerFormWindowInterface :: absoluteDir () const</target>
        </trans-unit>
        <trans-unit id="2a13d1230e3e01c2f533b7fceeea7a7a7e5ef247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; *QGeoPositionInfoSourceFactory::areaMonitor(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; * QGeoPositionInfoSourceFactory :: areaMonitor ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3784896446d39e9d724a983debd26e07c377ffb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeoareamonitorsource&quot;&gt;QGeoAreaMonitorSource&lt;/a&gt; *QGeoPositionInfoSourceFactoryV2::areaMonitorWithParameters(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3823edd82be60d54817d762d697916bc6524e8bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeoareamonitorsource#AreaMonitorFeature-enum&quot;&gt;QGeoAreaMonitorSource::AreaMonitorFeatures&lt;/a&gt; QGeoAreaMonitorSource::supportedAreaMonitorFeatures() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeoareamonitorsource#AreaMonitorFeature-enum&quot;&gt;QGeoAreaMonitorSource :: AreaMonitorFeatures&lt;/a&gt; QGeoAreaMonitorSource :: supportedAreaMonitorFeatures () const</target>
        </trans-unit>
        <trans-unit id="d592f81c2381789ac4d3e646cd18caa5f4d0207b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeoareamonitorsource#Error-enum&quot;&gt;QGeoAreaMonitorSource::Error&lt;/a&gt; QGeoAreaMonitorSource::error() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeoareamonitorsource#Error-enum&quot;&gt;QGeoAreaMonitorSource :: Error&lt;/a&gt; QGeoAreaMonitorSource :: error () const</target>
        </trans-unit>
        <trans-unit id="0b4f910d54f8444bda90dc0262a300badf49535e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeopositioninfo&quot;&gt;QGeoPositionInfo&lt;/a&gt; QGeoPositionInfoSource::lastKnownPosition(bool</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeopositioninfo&quot;&gt;QGeoPositionInfo&lt;/a&gt; QGeoPositionInfoSource :: lastKnownPosition (bool</target>
        </trans-unit>
        <trans-unit id="86924bcbfeba8342848abc02c5ccccd478f33291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource&lt;/a&gt; *QGeoPositionInfoSourceFactory::positionInfoSource(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource&lt;/a&gt; * QGeoPositionInfoSourceFactory :: positionInfoSource ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2ef4b094afb76979fe0072c59ff8e561a61510cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeopositioninfosource&quot;&gt;QGeoPositionInfoSource&lt;/a&gt; *QGeoPositionInfoSourceFactoryV2::positionInfoSourceWithParameters(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e614106da4578f2fee5bd5ed62558c2df15de143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeopositioninfosource#Error-enum&quot;&gt;QGeoPositionInfoSource::Error&lt;/a&gt; QGeoPositionInfoSource::error() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeopositioninfosource#Error-enum&quot;&gt;QGeoPositionInfoSource :: Error&lt;/a&gt; QGeoPositionInfoSource :: error () const</target>
        </trans-unit>
        <trans-unit id="2ef0746e4aaa00066634914c6f3c3528045aaaa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeopositioninfosource#PositioningMethod-enum&quot;&gt;QGeoPositionInfoSource::PositioningMethods&lt;/a&gt; QGeoPositionInfoSource::supportedPositioningMethods() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeopositioninfosource#PositioningMethod-enum&quot;&gt;QGeoPositionInfoSource :: PositioningMethods&lt;/a&gt; QGeoPositionInfoSource :: supportedPositioningMethods () const</target>
        </trans-unit>
        <trans-unit id="00d50416f7acfa001ebe8745806d9dfe76ca1b50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeoroutereply&quot;&gt;QGeoRouteReply&lt;/a&gt; *QGeoRoutingManagerEngine::calculateRoute(const &lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeoroutereply&quot;&gt;QGeoRouteReply&lt;/a&gt; * QGeoRoutingManagerEngine :: calculateRoute (const &lt;a href=&quot;qgeorouterequest&quot;&gt;QGeoRouteRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f001bab94cb282467ad30df59a767a664cd6ea46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeosatelliteinfosource&quot;&gt;QGeoSatelliteInfoSource&lt;/a&gt; *QGeoPositionInfoSourceFactory::satelliteInfoSource(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeosatelliteinfosource&quot;&gt;QGeoS satelliteInfoSource&lt;/a&gt; * QGeoPositionInfoSourceFactory :: satelliteInfoSource ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="050f55ffa5bb2def843434d24a1da057d14b0ce8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeosatelliteinfosource&quot;&gt;QGeoSatelliteInfoSource&lt;/a&gt; *QGeoPositionInfoSourceFactoryV2::satelliteInfoSourceWithParameters(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebcca71c5800da29a36f9ee41ace02c12ee0bb3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgeosatelliteinfosource#Error-enum&quot;&gt;QGeoSatelliteInfoSource::Error&lt;/a&gt; QGeoSatelliteInfoSource::error() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgeosatelliteinfosource#Error-enum&quot;&gt;QGeoS satelliteInfoSource :: Error&lt;/a&gt; QGeoS satelliteInfoSource :: error () const</target>
        </trans-unit>
        <trans-unit id="00de7e8b01dd75a693800046910bd5c321e433f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgesturerecognizer#ResultFlag-enum&quot;&gt;QGestureRecognizer::Result&lt;/a&gt; QGestureRecognizer::recognize(&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgesturerecognizer#ResultFlag-enum&quot;&gt;QGestureRecognizer :: Result&lt;/a&gt; QGestureRecognizer :: распознавать ( &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e8c72d9e262361b583772245a4d384f5036adcc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; *QGraphicsLayout::itemAt(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qgraphicslayoutitem#QGraphicsLayoutItem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; * QGraphicsLayout :: itemAt (int</target>
        </trans-unit>
        <trans-unit id="df4e624da250f07b1cd1357a6b6abbda4384ae3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QDesignerCustomWidgetInterface::icon() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57403b11eeee63f5a5b5f3303fbd8557959a0d41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyle::standardIcon(&lt;a href=&quot;qstyle#StandardPixmap-enum&quot;&gt;QStyle::StandardPixmap&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; QStyle :: standardIcon ( &lt;a href=&quot;qstyle#StandardPixmap-enum&quot;&gt;QStyle :: StandardPixmap&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df0dfbe826f9f4c85a7d210fcd6fb17ec4e6c69f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qiconengine&quot;&gt;QIconEngine&lt;/a&gt; *QIconEnginePlugin::create(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qiconengine&quot;&gt;QIconEngine&lt;/a&gt; * QIconEnginePlugin :: create (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6c28108a6fff2dcc190e359aa726081a1def4adb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qiconengine#QIconEngine&quot;&gt;QIconEngine&lt;/a&gt; *QIconEngine::clone() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qiconengine#QIconEngine&quot;&gt;QIconEngine&lt;/a&gt; * QIconEngine :: clone () const</target>
        </trans-unit>
        <trans-unit id="ccfe0136a6a5111bbb05e8f243923dee64bdd6b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qimageencodersettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; QImageEncoderControl::imageSettings() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qimageencodersettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; QImageEncoderControl :: imageSettings () const</target>
        </trans-unit>
        <trans-unit id="b71bb4d278c6674dacd79b1c5c0fa02bfe7c1969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; *QImageIOPlugin::create(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qimageiohandler&quot;&gt;QImageIOHandler&lt;/a&gt; * QImageIOPlugin :: create ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b793e7eeef5feef677c7b4cdd2345169306150be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qimageioplugin#Capability-enum&quot;&gt;QImageIOPlugin::Capabilities&lt;/a&gt; QImageIOPlugin::capabilities(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qimageioplugin#Capability-enum&quot;&gt;QImageIOPlugin :: Capabilities&lt;/a&gt; QImageIOPlugin :: features ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6555db13b319f7766b51ef7381df96102f34849f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *QAbstractAudioInput::start()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; * QAbstractAudioInput :: start ()</target>
        </trans-unit>
        <trans-unit id="19bd647b2700392d9051198ddaf59a6fbd9b4a5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *QAbstractAudioOutput::start()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; * QAbstractAudioOutput :: start ()</target>
        </trans-unit>
        <trans-unit id="f9d6b8818f5e3b363b63669b799551b2959db114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *QAbstractNetworkCache::data(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; * QAbstractNetworkCache :: data (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8fec2205ca985742985a86db810dbfd4565be398" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *QAbstractNetworkCache::prepare(const &lt;a href=&quot;qnetworkcachemetadata&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; * QAbstractNetworkCache :: prepare (const &lt;a href=&quot;qnetworkcachemetadata&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="06d72cb7df8595a427851f017671a86e11c6a84d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *QAudioDecoderControl::sourceDevice() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; * QAudioDecoderControl :: sourceDevice () const</target>
        </trans-unit>
        <trans-unit id="d8af8c2eae64f021231523d72ae88e69f880c0d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlayoutitem#QLayoutItem&quot;&gt;QLayoutItem&lt;/a&gt; *QLayout::itemAt(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlayoutitem#QLayoutItem&quot;&gt;QLayoutItem&lt;/a&gt; * QLayout :: itemAt (int</target>
        </trans-unit>
        <trans-unit id="93832891018e27a342b7db65a8b0ba7b4ae000aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlayoutitem#QLayoutItem&quot;&gt;QLayoutItem&lt;/a&gt; *QLayout::takeAt(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlayoutitem#QLayoutItem&quot;&gt;QLayoutItem&lt;/a&gt; * QLayout :: takeAt (int</target>
        </trans-unit>
        <trans-unit id="dd37d8fab388df5cab196d84b7d981df350439d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlegendmarker#LegendMarkerType-enum&quot;&gt;QLegendMarker::LegendMarkerType&lt;/a&gt; QLegendMarker::type()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlegendmarker#LegendMarkerType-enum&quot;&gt;QLegendMarker :: LegendMarkerType&lt;/a&gt; QLegendMarker :: type ()</target>
        </trans-unit>
        <trans-unit id="8f9522903633f023b29c9c980f46820a88242755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; QVideoEncoderSettingsControl::supportedFrameRates(const &lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; &amp;gt; QVideoEncoderSettingsControl :: supportedFrameRates (const &lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="747a0c7d8d7af0efc43a383afb84736efea89881" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qabstracteventdispatcher-timerinfo&quot;&gt;QAbstractEventDispatcher::TimerInfo&lt;/a&gt;&amp;gt; QAbstractEventDispatcher::registeredTimers(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qabstracteventdispatcher-timerinfo&quot;&gt;QAbstractEventDispatcher :: TimerInfo&lt;/a&gt; &amp;gt; QAbstractEventDispatcher :: registerTimers ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="459bc2e721a2f57d97fd5d9897139d3996c4104d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableCellInterface::columnHeaderCells() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ff053b348c6f53f38de43dc7b12e4f14da6119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableCellInterface::rowHeaderCells() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c4fa8f972f4df030a9588816e9d161363e891f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableInterface::selectedCells() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a66889a7912c5287ed0021b80c0b54aaba294ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *&amp;gt; QDesignerTaskMenuExtension::taskActions() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; *&amp;gt; QDesignerTaskMenuExtension :: taskActions () const</target>
        </trans-unit>
        <trans-unit id="51d742af5e45e730577fe2d0d38016af76dd6c52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qaudio#Role-enum&quot;&gt;QAudio::Role&lt;/a&gt;&amp;gt; QAudioRoleControl::supportedAudioRoles() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qaudio#Role-enum&quot;&gt;QAudio :: Role&lt;/a&gt; &amp;gt; QAudioRoleControl :: supportedAudioRoles () const</target>
        </trans-unit>
        <trans-unit id="e465d2c6055f641286c88f80ff6bd11fc508be71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qaudioformat#Endian-enum&quot;&gt;QAudioFormat::Endian&lt;/a&gt;&amp;gt; QAbstractAudioDeviceInfo::supportedByteOrders()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qaudioformat#Endian-enum&quot;&gt;QAudioFormat :: Endian&lt;/a&gt; &amp;gt; QAbstractAudioDeviceInfo :: supportedByteOrders ()</target>
        </trans-unit>
        <trans-unit id="ba5f4e58528feebdab788c9c7e22bece622aedc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qaudioformat#SampleType-enum&quot;&gt;QAudioFormat::SampleType&lt;/a&gt;&amp;gt; QAbstractAudioDeviceInfo::supportedSampleTypes()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qaudioformat#SampleType-enum&quot;&gt;QAudioFormat :: SampleType&lt;/a&gt; &amp;gt; QAbstractAudioDeviceInfo :: supportedSampleTypes ()</target>
        </trans-unit>
        <trans-unit id="0c67389bab8d41fc10ab5b9eff0b3b173d815c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; QMacPasteboardMime::convertFromMime(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt; QMacPasteboardMime :: convertFromMime (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b80d98c136a5f73af452ea48bd45f69821940b58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; QMediaServiceSupportedDevicesInterface::devices(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt; QMediaServiceSupportedDevicesInterface :: devices (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dabeb1d68cd16089fbb3c6361a1c9e7952d98794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt; QSGSimpleMaterialShader::attributes() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt; QSGSimpleMaterialShader :: attributes () const</target>
        </trans-unit>
        <trans-unit id="cd7b2376b49e24230c7c5d7ef7118a066f3dd7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qcameraviewfindersettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt;&amp;gt; QCameraViewfinderSettingsControl2::supportedViewfinderSettings() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qcameraviewfindersettings&quot;&gt;QCameraViewfinderSettings&lt;/a&gt; &amp;gt; QCameraViewfinderSettingsControl2 :: supportedViewfinderSettings () const</target>
        </trans-unit>
        <trans-unit id="7011f0479095ae549893b64895e0b862265dd5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qcanbusdeviceinfo&quot;&gt;QCanBusDeviceInfo&lt;/a&gt;&amp;gt; QCanBusFactoryV2::availableDevices(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qcanbusdeviceinfo&quot;&gt;QCanBusDeviceInfo&lt;/a&gt; &amp;gt; QCanBusFactoryV2 :: availableDevices ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f01a7a919f08624733500e07c1528b5c5883af5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt; *&amp;gt; QDesignerCustomWidgetCollectionInterface::customWidgets() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt; *&amp;gt; QDesignerCustomWidgetCollectionInterface :: customWidgets () const</target>
        </trans-unit>
        <trans-unit id="4236b80579f1e545bed9cfdb87d4ab6833f6e488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt;&amp;gt; QGeoAreaMonitorSource::activeMonitors() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;gt; QGeoAreaMonitorSource :: activeMonitors () const</target>
        </trans-unit>
        <trans-unit id="d65fc832c70e51440f9cce89dbe85c515b2b311e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt;&amp;gt; QGeoAreaMonitorSource::activeMonitors(const &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;gt; QGeoAreaMonitorSource :: activeMonitors (const &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5fcdc7f34c89323a10b6aa669a848962caf5ee5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt;&amp;gt; QNetworkProxyFactory::queryProxy(const &lt;a href=&quot;qnetworkproxyquery&quot;&gt;QNetworkProxyQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qnetworkproxy&quot;&gt;QNetworkProxy&lt;/a&gt; &amp;gt; QNetworkProxyFactory :: queryProxy (const &lt;a href=&quot;qnetworkproxyquery&quot;&gt;QNetworkProxyQuery&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ba352a09a63da3b34e75e6a729af89a7623bf3b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsensorgesturerecognizer&quot;&gt;QSensorGestureRecognizer&lt;/a&gt; *&amp;gt; QSensorGesturePluginInterface::createRecognizers()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsensorgesturerecognizer&quot;&gt;QSensorGestureRecognizer&lt;/a&gt; *&amp;gt; QSensorGesturePluginInterface :: createRecognizers ()</target>
        </trans-unit>
        <trans-unit id="16a70bd964ba2a5b9ed8251bd86a15e84ac5a41e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;&amp;gt; QImageEncoderControl::supportedResolutions(const &lt;a href=&quot;qimageencodersettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;gt; QImageEncoderControl :: supportedResolutions (const &lt;a href=&quot;qimageencodersettings&quot;&gt;QImageEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1b5869e30522d6da917a8351a212b2cacef7e48c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;&amp;gt; QVideoEncoderSettingsControl::supportedResolutions(const &lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;gt; QVideoEncoderSettingsControl :: supportedResolutions (const &lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="28c3c81b0ea13a4b5602e37d6ed174b549ccae24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; QAudioInputSelectorControl::availableInputs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt; QAudioInputSelectorControl :: availableInputs () const</target>
        </trans-unit>
        <trans-unit id="5ebef8b5998f3035cc2d4687ebbf22d380eed386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; QAudioOutputSelectorControl::availableOutputs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt; QAudioOutputSelectorControl :: availableOutputs () const</target>
        </trans-unit>
        <trans-unit id="7bf263a843511afda06d17d3c46a9e575367eb22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;&amp;gt; QInputDeviceIntegration::physicalDevices() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f8bdd1521dd1664055eefd5b684fa72ae63373" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;&amp;gt; QVideoEncoderSettingsControl::supportedFrameRates(const &lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740f4d90e696386042aaa1bc4e828f3d7f39385b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame::PixelFormat&lt;/a&gt;&amp;gt; QAbstractVideoSurface::supportedPixelFormats(&lt;a href=&quot;qabstractvideobuffer#HandleType-enum&quot;&gt;QAbstractVideoBuffer::HandleType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame :: PixelFormat&lt;/a&gt; &amp;gt; QAbstractVideoSurface :: supportedPixelFormats ( &lt;a href=&quot;qabstractvideobuffer#HandleType-enum&quot;&gt;QAbstractVideoBuffer :: HandleType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43c87653cadefdeb819dd2186b68cd044e54b4d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame::PixelFormat&lt;/a&gt;&amp;gt; QCameraCaptureBufferFormatControl::supportedBufferFormats() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame :: PixelFormat&lt;/a&gt; &amp;gt; QCameraCaptureBufferFormatControl :: supportedBufferFormats () const</target>
        </trans-unit>
        <trans-unit id="e6f86b06b6030e5d5f4df0fb76b990a1b6b2f890" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvirtualkeyboardinputengine#InputMode-enum&quot;&gt;QVirtualKeyboardInputEngine::InputMode&lt;/a&gt;&amp;gt; QVirtualKeyboardAbstractInputMethod::inputModes(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qvirtualkeyboardinputengine#InputMode-enum&quot;&gt;QVirtualKeyboardInputEngine :: InputMode&lt;/a&gt; &amp;gt; QVirtualKeyboardAbstractInputMethod :: inputModes (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="866d67d050cb25a2ea4b10de5ac749ed85bf3764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt; QAbstractAudioDeviceInfo::supportedChannelCounts()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;int&amp;gt; QAbstractAudioDeviceInfo :: supportedChannelCounts ()</target>
        </trans-unit>
        <trans-unit id="77e7dba07108155e5f0a3b95aeb1e67e0243e267" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt; QAbstractAudioDeviceInfo::supportedSampleRates()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;int&amp;gt; QAbstractAudioDeviceInfo :: supportedSampleRates ()</target>
        </trans-unit>
        <trans-unit id="2e1dc877f0b44b00d05bc90648c3383a508db93f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt; QAbstractAudioDeviceInfo::supportedSampleSizes()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;int&amp;gt; QAbstractAudioDeviceInfo :: supportedSampleSizes ()</target>
        </trans-unit>
        <trans-unit id="f38a86c0ba5e50b65005f98d36ad2dd325b669f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt; QAccessibleTableInterface::selectedColumns() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd62c79a03e1f81c90fbdd10e94809eb0ce4997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt; QAccessibleTableInterface::selectedRows() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="073ba2f03dcc9ddb52b9316dd7e3d09273391223" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;int&amp;gt; QAudioEncoderSettingsControl::supportedSampleRates(const &lt;a href=&quot;qaudioencodersettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;int&amp;gt; QAudioEncoderSettingsControl :: supportedSampleRates (const &lt;a href=&quot;qaudioencodersettings&quot;&gt;QAudioEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="50f5809f80d43cc08b921bada3626719813a04e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; QTextToSpeechEngine::locale() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; QTextToSpeechEngine :: locale () const</target>
        </trans-unit>
        <trans-unit id="8c53204f2ed4d4213d27bf1ee1303084c6ea0b8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; QMediaGaplessPlaybackControl::nextMedia() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; QMediaGaplessPlaybackControl :: nextMedia () const</target>
        </trans-unit>
        <trans-unit id="1fb19ab470351267c7a86b16f1b09dd2ab693681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; QMediaPlayerControl::media() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediacontent&quot;&gt;QMediaContent&lt;/a&gt; QMediaPlayerControl :: media () const</target>
        </trans-unit>
        <trans-unit id="75e35c3817ed6d824b726881708f2b081de044a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediacontrol&quot;&gt;QMediaControl&lt;/a&gt; *QMediaService::requestControl(const char *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediacontrol&quot;&gt;QMediaControl&lt;/a&gt; * QMediaService :: requestControl (const char *</target>
        </trans-unit>
        <trans-unit id="75236c24838582d9a6a594f11dece2552698e058" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; *QMediaBindableInterface::mediaObject() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; * QMediaBindableInterface :: mediaObject () const</target>
        </trans-unit>
        <trans-unit id="f502f234a2a614b35a03a0b85fc7d96a22b16b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediaplayer#MediaStatus-enum&quot;&gt;QMediaPlayer::MediaStatus&lt;/a&gt; QMediaPlayerControl::mediaStatus() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediaplayer#MediaStatus-enum&quot;&gt;QMediaPlayer :: MediaStatus&lt;/a&gt; QMediaPlayerControl :: mediaStatus () const</target>
        </trans-unit>
        <trans-unit id="1f154326c6816ca50a6269d763785f23e4610d1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediaplayer#State-enum&quot;&gt;QMediaPlayer::State&lt;/a&gt; QMediaPlayerControl::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediaplayer#State-enum&quot;&gt;QMediaPlayer :: State&lt;/a&gt; QMediaPlayerControl :: state () const</target>
        </trans-unit>
        <trans-unit id="111e35d9c14c252fd9cb6168e5c2a53d302b1af3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder::State&lt;/a&gt; QMediaRecorderControl::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder :: State&lt;/a&gt; QMediaRecorderControl :: state () const</target>
        </trans-unit>
        <trans-unit id="24f053ba75455e4d0a0587543a8fb27634b7bb64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediarecorder#Status-enum&quot;&gt;QMediaRecorder::Status&lt;/a&gt; QMediaRecorderControl::status() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediarecorder#Status-enum&quot;&gt;QMediaRecorder :: Status&lt;/a&gt; QMediaRecorderControl :: status () const</target>
        </trans-unit>
        <trans-unit id="d08e9af44b4724b899ba8fc60523381c37e4ec70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediaserviceproviderhint#Feature-enum&quot;&gt;QMediaServiceProviderHint::Features&lt;/a&gt; QMediaServiceFeaturesInterface::supportedFeatures(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediaserviceproviderhint#Feature-enum&quot;&gt;QMediaServiceProviderHint :: Features&lt;/a&gt; QMediaServiceFeaturesInterface :: supportedFeatures (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0ebdd22cd11dae44cb45c44e8723560f7e2bc3fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediastreamscontrol#StreamType-enum&quot;&gt;QMediaStreamsControl::StreamType&lt;/a&gt; QMediaStreamsControl::streamType(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediastreamscontrol#StreamType-enum&quot;&gt;QMediaStreamsControl :: StreamType&lt;/a&gt; QMediaStreamsControl :: streamType (int</target>
        </trans-unit>
        <trans-unit id="3ec72af2efbc410bb0d2c23cb34e13ce477ba520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmediatimerange&quot;&gt;QMediaTimeRange&lt;/a&gt; QMediaPlayerControl::availablePlaybackRanges() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmediatimerange&quot;&gt;QMediaTimeRange&lt;/a&gt; QMediaPlayerControl :: availablePlaybackRanges () const</target>
        </trans-unit>
        <trans-unit id="f1bc1a7ef2d4b2af81676743ecf537e05fca1d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractItemModel::index(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractItemModel :: index (int</target>
        </trans-unit>
        <trans-unit id="8f967bd75e6a54f8eb30d145a1a06575e0ba42e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractItemModel::parent(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractItemModel :: parent (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a9632daa84fd6537be4217331397d804f4ddb1c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractItemView::indexAt(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractItemView :: indexAt (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5fa0a26cb33ce346dd718e0ffa6dd614f6c644bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractProxyModel::mapFromSource(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractProxyModel :: mapFromSource (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="59289141bf9cd1b6ed173ee3e8f661f5d2fb00fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractProxyModel::mapToSource(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; QAbstractProxyModel :: mapToSource (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3fd47071aca190b2a3bd27301ed445838c26f750" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmultimedia#AvailabilityStatus-enum&quot;&gt;QMultimedia::AvailabilityStatus&lt;/a&gt; QMediaAvailabilityControl::availability() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmultimedia#AvailabilityStatus-enum&quot;&gt;QMultimedia :: AvailabilityStatus&lt;/a&gt; QMediaAvailabilityControl :: availability () const</target>
        </trans-unit>
        <trans-unit id="a32d1e11e5d32cc3e9fdbe32bf73d5f2d3a602fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qmultimedia#SupportEstimate-enum&quot;&gt;QMultimedia::SupportEstimate&lt;/a&gt; QMediaServiceSupportedFormatsInterface::hasSupport(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qmultimedia#SupportEstimate-enum&quot;&gt;QMultimedia ::&lt;/a&gt; SupportEstimate QMediaServiceSupportedFormatsInterface :: hasSupport (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8ccad01b93d8494e061da806350ccf0c052d2606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnearfieldtarget#AccessMethod-enum&quot;&gt;QNearFieldTarget::AccessMethods&lt;/a&gt; QNearFieldTarget::accessMethods() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnearfieldtarget#AccessMethod-enum&quot;&gt;QNearFieldTarget :: AccessMethods&lt;/a&gt; QNearFieldTarget :: accessMethods () const</target>
        </trans-unit>
        <trans-unit id="702a38782fcd6f406280d4d2583af93993156769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnearfieldtarget#Type-enum&quot;&gt;QNearFieldTarget::Type&lt;/a&gt; QNearFieldTarget::type() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnearfieldtarget#Type-enum&quot;&gt;QNearFieldTarget :: Type&lt;/a&gt; QNearFieldTarget :: type () const</target>
        </trans-unit>
        <trans-unit id="4a5c9d0962446a450379493a2b7eff2c63b7dd3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnetworkcachemetadata&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; QAbstractNetworkCache::metaData(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnetworkcachemetadata&quot;&gt;QNetworkCacheMetaData&lt;/a&gt; QAbstractNetworkCache :: metaData (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="817220d7db682b736f213253b176b4c30004ffbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; QMediaNetworkAccessControl::currentConfiguration() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; QMediaNetworkAccessControl :: currentConfiguration () const</target>
        </trans-unit>
        <trans-unit id="ecf9e179333123cf1a32a445b8a9157c55398816" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; *QAbstractOAuth::deleteResource(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; * QAbstractOAuth :: deleteResource (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="37896a7920680ee2913c6f5bf3e4f52457676c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; *QAbstractOAuth::get(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; * QAbstractOAuth :: get (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="422f8d7aaa0137ab64cc1e9a08a170f55493457c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; *QAbstractOAuth::head(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; * QAbstractOAuth :: head (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="47080f3c0e0a2e35f6089f01c4af9488c29a12c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; *QAbstractOAuth::post(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; * QAbstractOAuth :: post (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="26f32ed2749825b8080dd7c234f8353e80cd29d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; *QAbstractOAuth::put(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; * QAbstractOAuth :: put (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b9103bed4775b3085b63db2711024fac45e58926" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QAbstractExtensionFactory::extension(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QAbstractExtensionFactory :: extension ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="5681f157dab7699ceccce0cbeb132a033f2b32a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QAbstractExtensionManager::extension(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QAbstractExtensionManager :: extension ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4500641a12068460b0ed9894252240a4c2dddb11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QAccessibleInterface::object() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QAccessibleInterface :: object () const</target>
        </trans-unit>
        <trans-unit id="0396d2ab871a79c982c0e7c2a89355a5edf0b4a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QDesignerPropertyEditorInterface::object() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QDesignerPropertyEditorInterface :: object () const</target>
        </trans-unit>
        <trans-unit id="9031b14fe39ef84fda2d73a282a3742fa7d6e8f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QAxFactory::createObject(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QAxFactory :: createObject (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="95e77eb7ff2defb35c24c19de0603ba2871636fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QDesignerPropertyEditorInterface::object() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde08468e56abe83a2aa4d2cb76830e34c2f6bda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QGenericPlugin::create(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QGenericPlugin :: create (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b39bcdb5080f97bc50d755bbea3d44b39400518e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; *QPaintDevice::paintEngine() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; * QPaintDevice :: paintEngine () const</target>
        </trans-unit>
        <trans-unit id="d9ac14e6a38fc0d10bbe01c1bc46aea274225415" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qpaintengine#Type-enum&quot;&gt;QPaintEngine::Type&lt;/a&gt; QPaintEngine::type() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qpaintengine#Type-enum&quot;&gt;QPaintEngine :: Type&lt;/a&gt; QPaintEngine :: type () const</target>
        </trans-unit>
        <trans-unit id="a25069bd5fc3dd219cce14d3d33a8a788c5f18c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;int, int&amp;gt; QRadioTunerControl::frequencyRange(&lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner::Band&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;int, int&amp;gt; QRadioTunerControl :: frequencyRange ( &lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner :: Band&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b70be8283d4a716e02cfc451e5bafb9a3cd43b7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QDesignerFormWindowManagerInterface::createPreviewPixmap() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9a1d34f006ac05ad6f8bab43c9c38cac617de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QStyle::generatedIconPixmap(&lt;a href=&quot;qicon#Mode-enum&quot;&gt;QIcon::Mode&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QStyle :: generatedIconPixmap ( &lt;a href=&quot;qicon#Mode-enum&quot;&gt;QIcon :: Mode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="751f29eb053c8c04c05aa74251ded1ba726f1aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QDesignerFormWindowInterface::grid() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QDesignerFormWindowInterface :: grid () const</target>
        </trans-unit>
        <trans-unit id="cfaf76d0df221c2fa34dc213f14dd46bfd77d913" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QCameraFocusControl::customFocusPoint() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QCameraFocusControl :: customFocusPoint () const</target>
        </trans-unit>
        <trans-unit id="18138da6e5b405325b354446ca2a4d6ce2bef426" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qprinter#PrinterState-enum&quot;&gt;QPrinter::PrinterState&lt;/a&gt; QPrintEngine::printerState() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qprinter#PrinterState-enum&quot;&gt;QPrinter :: PrinterState&lt;/a&gt; QPrintEngine :: printerState () const</target>
        </trans-unit>
        <trans-unit id="dd722ee3aa0b21f097642d0db244d80f4f831cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qqmlimageproviderbase#Flag-enum&quot;&gt;QQmlImageProviderBase::Flags&lt;/a&gt; QQmlImageProviderBase::flags() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qqmlimageproviderbase#Flag-enum&quot;&gt;QQmlImageProviderBase :: Flags&lt;/a&gt; QQmlImageProviderBase :: flags () const</target>
        </trans-unit>
        <trans-unit id="277e881667edad0acbf05fcadf875f21a9f602cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;QQmlImageProviderBase::ImageType&lt;/a&gt; QQmlImageProviderBase::imageType() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;QQmlImageProviderBase :: ImageType&lt;/a&gt; QQmlImageProviderBase :: imageType () const</target>
        </trans-unit>
        <trans-unit id="fdd89d5c71e6f64f8e2632bc330609f1342483a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject::Renderer&lt;/a&gt; *QQuickFramebufferObject::createRenderer() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject :: Renderer&lt;/a&gt; * QQuickFramebufferObject :: createRenderer () const</target>
        </trans-unit>
        <trans-unit id="b06e77a886572131c97e97a5d77907410be32696" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qquickimageresponse&quot;&gt;QQuickImageResponse&lt;/a&gt; *QQuickAsyncImageProvider::requestImageResponse(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qquickimageresponse&quot;&gt;QQuickImageResponse&lt;/a&gt; * QQuickAsyncImageProvider :: requestImageResponse (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d78036c5679f6b461bd4d32d4c750ccbaea2e6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qquicktexturefactory&quot;&gt;QQuickTextureFactory&lt;/a&gt; *QQuickImageResponse::textureFactory() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qquicktexturefactory&quot;&gt;QQuickTextureFactory&lt;/a&gt; * QQuickImageResponse :: textureFactory () const</target>
        </trans-unit>
        <trans-unit id="175058933ac0e173722311211a41fd72d54786b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qradiodata#Error-enum&quot;&gt;QRadioData::Error&lt;/a&gt; QRadioDataControl::error() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qradiodata#Error-enum&quot;&gt;QRadioData :: Error&lt;/a&gt; QRadioDataControl :: error () const</target>
        </trans-unit>
        <trans-unit id="20a7e99c65a9aa87b61e966ddac65a9ba819b475" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qradiodata#ProgramType-enum&quot;&gt;QRadioData::ProgramType&lt;/a&gt; QRadioDataControl::programType() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qradiodata#ProgramType-enum&quot;&gt;QRadioData :: ProgramType&lt;/a&gt; QRadioDataControl :: programType () const</target>
        </trans-unit>
        <trans-unit id="6b2642d4cb3ef101d1a04d4af9b1796760570ab8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner::Band&lt;/a&gt; QRadioTunerControl::band() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner :: Band&lt;/a&gt; QRadioTunerControl :: band () const</target>
        </trans-unit>
        <trans-unit id="13fd6219bbd802b7a91928081403002c79699aa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qradiotuner#Error-enum&quot;&gt;QRadioTuner::Error&lt;/a&gt; QRadioTunerControl::error() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qradiotuner#Error-enum&quot;&gt;QRadioTuner :: Error&lt;/a&gt; QRadioTunerControl :: error () const</target>
        </trans-unit>
        <trans-unit id="5d675bea4b127ab5521d0c9a75fa6c8b1773ae12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qradiotuner#State-enum&quot;&gt;QRadioTuner::State&lt;/a&gt; QRadioTunerControl::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qradiotuner#State-enum&quot;&gt;QRadioTuner :: State&lt;/a&gt; QRadioTunerControl :: state () const</target>
        </trans-unit>
        <trans-unit id="004348f814e0bfbf428c4ba5dc23ccb4956627a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qradiotuner#StereoMode-enum&quot;&gt;QRadioTuner::StereoMode&lt;/a&gt; QRadioTunerControl::stereoMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qradiotuner#StereoMode-enum&quot;&gt;QRadioTuner :: StereoMode&lt;/a&gt; QRadioTunerControl :: stereoMode () const</target>
        </trans-unit>
        <trans-unit id="2af5c0683a366746fa90cc7f88daa5cb7d4b39a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QAbstractItemView::visualRect(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QAbstractItemView :: visualRect (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5c79a488a9fe985367846d0b6750b31a01d48845" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QAccessibleInterface::rect() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QAccessibleInterface :: rect () const</target>
        </trans-unit>
        <trans-unit id="19049af02e946466fa10dc32d60e132cf3939c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QAccessibleTextInterface::characterRect(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QAccessibleTextInterface :: characterRect (int</target>
        </trans-unit>
        <trans-unit id="882afc9d46a041265a26727bbd02e4d31d85202a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QLayoutItem::geometry() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QLayoutItem :: geometry () const</target>
        </trans-unit>
        <trans-unit id="dfb7b77b7b7e670f09dbce645de8ae674601c8db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyle::subControlRect(&lt;a href=&quot;qstyle#ComplexControl-enum&quot;&gt;QStyle::ComplexControl&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyle :: subControlRect ( &lt;a href=&quot;qstyle#ComplexControl-enum&quot;&gt;QStyle :: ComplexControl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d843ac528657cf1c1e006aa2ca9d701eeebe35ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyle::subElementRect(&lt;a href=&quot;qstyle#SubElement-enum&quot;&gt;QStyle::SubElement&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QStyle :: subElementRect ( &lt;a href=&quot;qstyle#SubElement-enum&quot;&gt;QStyle :: SubElement&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07e98a3dec2316b8411d4f7f6d5906555e330ecd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVideoWindowControl::displayRect() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; QVideoWindowControl :: displayRect () const</target>
        </trans-unit>
        <trans-unit id="81166a62d81391a1d88adb91c9c888f83005a6d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QAbstractTextDocumentLayout::blockBoundingRect(const &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QAbstractTextDocumentLayout :: blockBoundingRect (const &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="17c7ad18f85f581633b7847a69bc6cf362b0f7f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QAbstractTextDocumentLayout::frameBoundingRect(&lt;a href=&quot;qtextframe&quot;&gt;QTextFrame&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QAbstractTextDocumentLayout :: frameBoundingRect ( &lt;a href=&quot;qtextframe&quot;&gt;QTextFrame&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="878dc9baf2dd8299124f360ada07b5aea09f1352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem::boundingRect() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QGraphicsItem :: boundingRect () const</target>
        </trans-unit>
        <trans-unit id="11ae5d75947f0d42d53f7d190fa636182df161d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGImageNode::rect() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGImageNode :: rect () const</target>
        </trans-unit>
        <trans-unit id="514cbb5e823c700bdd15e01842231707f8e9a6c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGImageNode::sourceRect() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGImageNode :: sourceRect () const</target>
        </trans-unit>
        <trans-unit id="0b976490dd4956e472b0c54c668e5172e6b3f0b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGRectangleNode::rect() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; QSGRectangleNode :: rect () const</target>
        </trans-unit>
        <trans-unit id="b2d6a38bfc9fba74eaaecb71f48b6a2246e9752c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;QScxmlExecutableContent::ContainerId&lt;/a&gt; QScxmlTableData::initialSetup() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qscxmlexecutablecontent#ContainerId-typedef&quot;&gt;QScxmlExecutableContent :: ContainerId&lt;/a&gt; QScxmlTableData :: initialSetup () const</target>
        </trans-unit>
        <trans-unit id="449afee823b7bc6011332911bca23f39ce344d6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qscxmlexecutablecontent#InstructionId-typedef&quot;&gt;QScxmlExecutableContent::InstructionId&lt;/a&gt; *QScxmlTableData::instructions() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qscxmlexecutablecontent#InstructionId-typedef&quot;&gt;QScxmlExecutableContent :: InstructionId&lt;/a&gt; * QScxmlTableData :: instructions () const</target>
        </trans-unit>
        <trans-unit id="1a1d34b7d11b4dc0a7e90d1635168e3addd50d3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt; *QScxmlTableData::dataNames(int *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt; * QScxmlTableData :: dataNames (int *</target>
        </trans-unit>
        <trans-unit id="e19e31c4633d422b850d07bede68273b56a596f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qscxmlexecutablecontent-assignmentinfo&quot;&gt;QScxmlExecutableContent::AssignmentInfo&lt;/a&gt; QScxmlTableData::assignmentInfo(&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qscxmlexecutablecontent-assignmentinfo&quot;&gt;QScxmlExecutableContent :: AssignmentInfo&lt;/a&gt; QScxmlTableData :: assignmentInfo ( &lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent :: EvaluatorId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9a6fed6d7d2d649cec0db6c6efa89f0ea0bf98b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qscxmlexecutablecontent-evaluatorinfo&quot;&gt;QScxmlExecutableContent::EvaluatorInfo&lt;/a&gt; QScxmlTableData::evaluatorInfo(&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qscxmlexecutablecontent-evaluatorinfo&quot;&gt;QScxmlExecutableContent :: EvaluatorInfo&lt;/a&gt; QScxmlTableData :: &lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;evalatorInfo&lt;/a&gt; ( QScxmlExecutableContent :: EvaluatorId</target>
        </trans-unit>
        <trans-unit id="7024d63b1ff04a5d2dec21ceb1c8e7ce71fa1800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qscxmlexecutablecontent-foreachinfo&quot;&gt;QScxmlExecutableContent::ForeachInfo&lt;/a&gt; QScxmlTableData::foreachInfo(&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qscxmlexecutablecontent-foreachinfo&quot;&gt;QScxmlExecutableContent :: ForeachInfo&lt;/a&gt; QScxmlTableData :: foreachInfo ( &lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent :: EvaluatorId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d203c7fe626f8d3f6f53a5e447a37c0a11cc85b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qscxmlinvokableservice&quot;&gt;QScxmlInvokableService&lt;/a&gt; *QScxmlInvokableServiceFactory::invoke(&lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qscxmlinvokableservice&quot;&gt;QScxmlInvokableService&lt;/a&gt; * QScxmlInvokableServiceFactory :: invoke ( &lt;a href=&quot;qscxmlstatemachine&quot;&gt;QScxmlStateMachine&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ca4b96de17c9b54286a069c528f3a4e72ff4f1e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qscxmlinvokableservicefactory&quot;&gt;QScxmlInvokableServiceFactory&lt;/a&gt; *QScxmlTableData::serviceFactory(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qscxmlinvokableservicefactory&quot;&gt;QScxmlInvokableServiceFactory&lt;/a&gt; * QScxmlTableData :: serviceFactory (int</target>
        </trans-unit>
        <trans-unit id="4fd88575acb430839af46a559097e82021507075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsensorbackend&quot;&gt;QSensorBackend&lt;/a&gt; *QSensorBackendFactory::createBackend(&lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsensorbackend&quot;&gt;QSensorBackend&lt;/a&gt; * QSensorBackendFactory :: createBackend ( &lt;a href=&quot;qsensor&quot;&gt;QSensor&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="73715543eb597f809a91335d450d9a58a1e2675d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgimagenode#TextureCoordinatesTransformFlag-enum&quot;&gt;QSGImageNode::TextureCoordinatesTransformMode&lt;/a&gt; QSGImageNode::textureCoordinatesTransform() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgimagenode#TextureCoordinatesTransformFlag-enum&quot;&gt;QSGImageNode :: TextureCoordinatesTransformMode&lt;/a&gt; QSGImageNode :: textureCoordinatesTransform () const</target>
        </trans-unit>
        <trans-unit id="ad8229d3b278302285a3633c6f21cc638677b1b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; *QSGMaterial::createShader() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; * QSGMaterial :: createShader () const</target>
        </trans-unit>
        <trans-unit id="85179d3716048000f5abc5501cef5a5483b2d8f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; *QSGMaterial::createShader(&lt;a href=&quot;qsgrendererinterface#RenderMode-enum&quot;&gt;QSGRendererInterface::RenderMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee59b91c68a8f45df3cee1cee371b9757a0152e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgmaterialtype&quot;&gt;QSGMaterialType&lt;/a&gt; *QSGMaterial::type() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgmaterialtype&quot;&gt;QSGMaterialType&lt;/a&gt; * QSGMaterial :: type () const</target>
        </trans-unit>
        <trans-unit id="0ccc99bda4a8a85e7772733e15477c30a861ec3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface::GraphicsApi&lt;/a&gt; QSGRendererInterface::graphicsApi() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface :: GraphicsApi&lt;/a&gt; QSGRendererInterface :: graphicsApi () const</target>
        </trans-unit>
        <trans-unit id="fd20b598c1b2fb8eaca9c375fcbeb9565f7019b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgrendererinterface#ShaderCompilationType-enum&quot;&gt;QSGRendererInterface::ShaderCompilationTypes&lt;/a&gt; QSGRendererInterface::shaderCompilationType() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgrendererinterface#ShaderCompilationType-enum&quot;&gt;QSGRendererInterface :: ShaderCompilationTypes&lt;/a&gt; QSGRendererInterface :: shaderCompilationType () const</target>
        </trans-unit>
        <trans-unit id="fdd4315045668eb76e748ecff8bbd780d715e56a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgrendererinterface#ShaderSourceType-enum&quot;&gt;QSGRendererInterface::ShaderSourceTypes&lt;/a&gt; QSGRendererInterface::shaderSourceType() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgrendererinterface#ShaderSourceType-enum&quot;&gt;QSGRendererInterface :: ShaderSourceTypes&lt;/a&gt; QSGRendererInterface :: shaderSourceType () const</target>
        </trans-unit>
        <trans-unit id="c514ba552c74d9ac4776e1a1e3440bac31890814" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgrendererinterface#ShaderType-enum&quot;&gt;QSGRendererInterface::ShaderType&lt;/a&gt; QSGRendererInterface::shaderType() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgrendererinterface#ShaderType-enum&quot;&gt;QSGRendererInterface :: ShaderType&lt;/a&gt; QSGRendererInterface :: shaderType () const</target>
        </trans-unit>
        <trans-unit id="ecb9c310d0f207447ea75bdbe840aceafd77192b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QQuickTextureFactory::createTexture(&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QQuickTextureFactory :: createTexture ( &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4a98dc67053a74f2ee28b768a29eb6427daa4766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGImageNode::texture() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGImageNode :: texture () const</target>
        </trans-unit>
        <trans-unit id="45ab196dd52278f8b0fcf3595d7f647b16f63d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; *QSGTextureProvider::texture() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; * QSGTextureProvider :: texture () const</target>
        </trans-unit>
        <trans-unit id="136bb3a1a4e3c1eabdb82ce6eb59aa6c5b26f792" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgtexture#AnisotropyLevel-enum&quot;&gt;QSGTexture::AnisotropyLevel&lt;/a&gt; QSGImageNode::anisotropyLevel() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68d27dace0ab7e9459652e6703d837da5acc5d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGImageNode::filtering() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGImageNode :: filtering () const</target>
        </trans-unit>
        <trans-unit id="d9752e38c37ffdda637b14f26bd97785910fce97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Filtering&lt;/a&gt; QSGImageNode::mipmapFiltering() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Filtering&lt;/a&gt; QSGImageNode :: mipmapFiltering () const</target>
        </trans-unit>
        <trans-unit id="33ec3b38bceda5b4f794d1b1058c4a7618035820" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractItemDelegate::sizeHint(const &lt;a href=&quot;qstyleoptionviewitem&quot;&gt;QStyleOptionViewItem&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QAbstractItemDelegate :: sizeHint (const &lt;a href=&quot;qstyleoptionviewitem&quot;&gt;QStyleOptionViewItem&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0d935ded68877e4bc8ee8b8fd0d67f92f6b2913e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QLayoutItem::maximumSize() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QLayoutItem :: maximumSize () const</target>
        </trans-unit>
        <trans-unit id="d73219d372ebba52dee68447f8610927b7f544b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QLayoutItem::minimumSize() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QLayoutItem :: minimumSize () const</target>
        </trans-unit>
        <trans-unit id="fe0720f0ea34647bd0ee9a0ae39571858a0c41c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QLayoutItem::sizeHint() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QLayoutItem :: sizeHint () const</target>
        </trans-unit>
        <trans-unit id="3fbbdfd880533eb0c6e315c7ff92c9eb80c33060" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickTextureFactory::textureSize() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QQuickTextureFactory :: textureSize () const</target>
        </trans-unit>
        <trans-unit id="64830be16dd2d186f1c456b561a6d02472298ea0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSGTexture::textureSize() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSGTexture :: textureSize () const</target>
        </trans-unit>
        <trans-unit id="a5d03c5b364ed53bc2159d489a97d52f86c05b42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyle::sizeFromContents(&lt;a href=&quot;qstyle#ContentsType-enum&quot;&gt;QStyle::ContentsType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QStyle :: sizeFromContents ( &lt;a href=&quot;qstyle#ContentsType-enum&quot;&gt;QStyle :: ContentsType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6812acdc394e8b0868fb0d1160a763870bdd2ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSurface::size() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QSurface :: size () const</target>
        </trans-unit>
        <trans-unit id="1a60f6762de85d48981b24caf4d4ab7823ace158" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoWindowControl::nativeSize() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; QVideoWindowControl :: nativeSize () const</target>
        </trans-unit>
        <trans-unit id="df5c8b3ff4823ec0accae97b8048318d7debab21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QAbstractTextDocumentLayout::documentSize() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QAbstractTextDocumentLayout :: documentSize () const</target>
        </trans-unit>
        <trans-unit id="364b6cbe571a28bbe53cde4b29eaca00bb609899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QTextObjectInterface::intrinsicSize(&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; QTextObjectInterface :: intrinsicSize ( &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b24c86d7ae09be2f53b314ea531681985f4cf7ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *QSqlDriverCreatorBase::createObject() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; * QSqlDriverCreatorBase :: createObject () const</target>
        </trans-unit>
        <trans-unit id="d9f4f76fcbc0289ecdfd76508da1917a7e7eea88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; *QSqlDriverPlugin::create(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsqldriver&quot;&gt;QSqlDriver&lt;/a&gt; * QSqlDriverPlugin :: create (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8244ec1e11d155cc3f250ce5e31671a3d550d0cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; *QSqlDriver::createResult() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; * QSqlDriver :: createResult () const</target>
        </trans-unit>
        <trans-unit id="ef1a5d6b300675598f80bc9135df64a9b2a13490" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractAudioDeviceInfo::deviceName() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractAudioDeviceInfo :: deviceName () const</target>
        </trans-unit>
        <trans-unit id="9f8b1c06845fe6432c8948db33bd601f9b78cac9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuthReplyHandler::callback() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractOAuthReplyHandler :: callback () const</target>
        </trans-unit>
        <trans-unit id="5ce09b5b67fc6a37338219b427a1ad86e3ef8197" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractXmlNodeModel::stringValue(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAbstractXmlNodeModel :: stringValue (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9536f21550e69426cac4a8ab3159007967ede0ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleInterface::text(&lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible::Text&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleInterface :: text ( &lt;a href=&quot;qaccessible#Text-enum&quot;&gt;QAccessible :: Text&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fbfdfd5db209baa1692cf0a35fd3d36975f1ec7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTableInterface::columnDescription(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTableInterface :: columnDescription (int</target>
        </trans-unit>
        <trans-unit id="26ee9be2e6a42e84e8a5796cd2dca46d4b147240" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTableInterface::rowDescription(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTableInterface :: rowDescription (int</target>
        </trans-unit>
        <trans-unit id="c9970693f5e6ffd9db4fbfaf1079eefcd21cc38f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextInterface::attributes(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextInterface :: attributes (int</target>
        </trans-unit>
        <trans-unit id="65482e4cbeafe03882b17f1dbd62b10e1840d403" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextInterface::text(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAccessibleTextInterface :: text (int</target>
        </trans-unit>
        <trans-unit id="2107f9155214b78663183b1ed570ff15ce4fc376" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioDecoderControl::sourceFilename() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioDecoderControl :: sourceFilename () const</target>
        </trans-unit>
        <trans-unit id="ffe1daf859f731e92270733014a03511263d2ef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioEncoderSettingsControl::codecDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioEncoderSettingsControl :: codecDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c3dae0edb89b2f9c02eac7c31f6f644ca91a9c07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioInputSelectorControl::activeInput() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioInputSelectorControl :: activeInput () const</target>
        </trans-unit>
        <trans-unit id="e3581643d4be05cc7429cc63509feeec7a9c5cee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioInputSelectorControl::defaultInput() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioInputSelectorControl :: defaultInput () const</target>
        </trans-unit>
        <trans-unit id="28ce58da60c3a76bb7bfac166fec893d11b2f4c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioInputSelectorControl::inputDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioInputSelectorControl :: inputDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="652266f502e89f81483e784a0d8880b06994a95f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioOutputSelectorControl::activeOutput() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioOutputSelectorControl :: activeOutput () const</target>
        </trans-unit>
        <trans-unit id="4dbede0c157eed4e69a02752090a91df6b1dac7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioOutputSelectorControl::defaultOutput() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioOutputSelectorControl :: defaultOutput () const</target>
        </trans-unit>
        <trans-unit id="849db160a665185ce247bb05a373b015b5209d85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioOutputSelectorControl::outputDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QAudioOutputSelectorControl :: outputDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d92cc1c3a210fb14ddb479087482ebc789b4bd0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothTransferReply::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QBluetoothTransferReply :: errorString () const</target>
        </trans-unit>
        <trans-unit id="e42281c52bd3378300998de761dda36318109d46" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCanBusDevice::interpretErrorFrame(const &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCanBusDevice :: интерпретироватьErrorFrame (const &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bf8cca86139713a4471f6ac6cc20118fb91e49a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCustomAudioRoleControl::customAudioRole() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QCustomAudioRoleControl :: customAudioRole () const</target>
        </trans-unit>
        <trans-unit id="6fe0040237640507828f4464bd9de5ee586719ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDBusVirtualObject::introspect(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDBusVirtualObject :: introspect (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="02cb02db1d5d68ced5adce09debb8d3e0a668741" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface::group() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface :: group () const</target>
        </trans-unit>
        <trans-unit id="d277157ef38539215d18143a607556d0c82223f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface::includeFile() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface :: includeFile () const</target>
        </trans-unit>
        <trans-unit id="8c8c29f2fd10fb0e7f55c51ef62d93dded476154" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface::name() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface :: name () const</target>
        </trans-unit>
        <trans-unit id="a073ad0fd679fb986c349e3763814e9fc24c4f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface::toolTip() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface :: toolTip () const</target>
        </trans-unit>
        <trans-unit id="c77981fe8961f519c2e11a605414cad47252cd0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface::whatsThis() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerCustomWidgetInterface :: whatsThis () const</target>
        </trans-unit>
        <trans-unit id="71802568ce0f820e1208026bc94441a6801cd5c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface::author() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface :: author () const</target>
        </trans-unit>
        <trans-unit id="599f0f9f3baaccf5f7f6bb519bea1e19614b537c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface::comment() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface :: comment () const</target>
        </trans-unit>
        <trans-unit id="8fdecda2023eea5022e7a7b73337922af17cfd7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface::contents() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface :: contents () const</target>
        </trans-unit>
        <trans-unit id="0442a5d98a32fdcd020e9ad85f17478945530c68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface::exportMacro() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface :: exportMacro () const</target>
        </trans-unit>
        <trans-unit id="065c27e6a7a8d847c885ff476af68316c2622be5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface::fileName() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface :: fileName () const</target>
        </trans-unit>
        <trans-unit id="c4af4924e659d6f72e57a182ba0d4b5cc674a2e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface::pixmapFunction() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerFormWindowInterface :: pixmapFunction () const</target>
        </trans-unit>
        <trans-unit id="9dcdf4cf1a041c941379debfe5f07b7ba3c36ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerPropertyEditorInterface::currentPropertyName() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerPropertyEditorInterface :: currentPropertyName () const</target>
        </trans-unit>
        <trans-unit id="0ced839139d05f2b980dd81065f27fba776de527" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerPropertySheetExtension::propertyGroup(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerPropertySheetExtension :: propertyGroup (int</target>
        </trans-unit>
        <trans-unit id="b9f200fe21fb9489cde8a9b7d73e586d84170a14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerPropertySheetExtension::propertyName(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerPropertySheetExtension :: propertyName (int</target>
        </trans-unit>
        <trans-unit id="6e4097369fe2ccc524dfa986ab7e692b9c28dfbc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerWidgetBoxInterface::fileName() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QDesignerWidgetBoxInterface :: fileName () const</target>
        </trans-unit>
        <trans-unit id="661851bf88d59790b459a8c4f74170941f945bb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QImageEncoderControl::imageCodecDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QImageEncoderControl :: imageCodecDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c383cde171b99ecab040527a9377455080712c72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMacPasteboardMime::convertorName()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMacPasteboardMime :: convertorName ()</target>
        </trans-unit>
        <trans-unit id="a744de7b1816a8a4c646c10fded181122399d985" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMacPasteboardMime::flavorFor(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMacPasteboardMime :: flavourFor (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="57af57cbc751e87d79c0c0f6fbfb8abd5f135140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMacPasteboardMime::mimeFor(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMacPasteboardMime :: mimeFor ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a8f7d35c4d3c979ab26727a0c8d228b7fb6d041c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMediaContainerControl::containerDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMediaContainerControl :: containerDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f1ff28d3deb1ce71d06a86fddaa852214b86ffaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMediaContainerControl::containerFormat() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMediaContainerControl :: containerFormat () const</target>
        </trans-unit>
        <trans-unit id="a3ab4a7f460338034df2edc07bd4aaa9183d8713" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMediaServiceSupportedDevicesInterface::deviceDescription(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QMediaServiceSupportedDevicesInterface :: deviceDescription (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1704ba96202ad6a7bdc02b8445509920d452b683" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl :: errorString () const</target>
        </trans-unit>
        <trans-unit id="b4cac385bf5049b638319eb6e32ee0757d61fce6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl::programTypeName() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl :: programTypeName () const</target>
        </trans-unit>
        <trans-unit id="48dcfc52dcc4168d037d5c73131c5d243e90f61d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl::radioText() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl :: radioText () const</target>
        </trans-unit>
        <trans-unit id="8b4a1bf741e45eb3becea0787a4ea3429c97b647" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl::stationId() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl :: stationId () const</target>
        </trans-unit>
        <trans-unit id="4b8991eef9dbbe3f7db9fc3815b1e2b94a15e70c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl::stationName() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioDataControl :: stationName () const</target>
        </trans-unit>
        <trans-unit id="ef556cbd05b82ec01131a5412ccb6e44c221a339" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioTunerControl::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QRadioTunerControl :: errorString () const</target>
        </trans-unit>
        <trans-unit id="166f8ec00c2fb8225db60105e143fb791ff30bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QScxmlDataModel::evaluateToString(&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QScxmlDataModel :: &lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;AssessmentToString&lt;/a&gt; ( QScxmlExecutableContent :: EvaluatorId</target>
        </trans-unit>
        <trans-unit id="0834960f113736c734762b7e91fef3a1cdceb0f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QScxmlTableData::name() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QScxmlTableData :: name () const</target>
        </trans-unit>
        <trans-unit id="76251c64cb26529e135b1e1ae706257751c46fc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QScxmlTableData::string(&lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent::StringId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QScxmlTableData :: string ( &lt;a href=&quot;qscxmlexecutablecontent#StringId-typedef&quot;&gt;QScxmlExecutableContent :: StringId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d3903c84b24d9f1dd01a7819797c9c469486b0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QSensorGesturePluginInterface::name() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QSensorGesturePluginInterface :: name () const</target>
        </trans-unit>
        <trans-unit id="10eb9db6b2ae65071b26b7d73aece62c425d95f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QSensorGestureRecognizer::id() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QSensorGestureRecognizer :: id () const</target>
        </trans-unit>
        <trans-unit id="a7525d7955c506f3afb082938ad03256301e298c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QVideoDeviceSelectorControl::deviceDescription(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QVideoDeviceSelectorControl :: deviceDescription (int</target>
        </trans-unit>
        <trans-unit id="a4b54d2cd6e4b7a7d628d76c848ad2c2377e19a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QVideoDeviceSelectorControl::deviceName(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QVideoDeviceSelectorControl :: deviceName (int</target>
        </trans-unit>
        <trans-unit id="1fddbb8f50c3ba75623a52baf0ef83463f90c769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QVideoEncoderSettingsControl::videoCodecDescription(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QVideoEncoderSettingsControl :: videoCodecDescription (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5761d918a227ba23971f27de855685f2c1ecce5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QWinMime::mimeForFormat(const FORMATETC &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QWinMime :: mimeForFormat (const FORMATETC &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e076b26a6bbc1fc7f1c26025de1b19778963621a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlContentHandler::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlContentHandler :: errorString () const</target>
        </trans-unit>
        <trans-unit id="88cb27a4414aef46a759391f0f919948a2267785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlDTDHandler::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlDTDHandler :: errorString () const</target>
        </trans-unit>
        <trans-unit id="165e0196f485b64ff4eca4336f1adb0b4c4a2a5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlDeclHandler::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlDeclHandler :: errorString () const</target>
        </trans-unit>
        <trans-unit id="f4992d8c6a394d8519ebe63135607c3bee8985d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlEntityResolver::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlEntityResolver :: errorString () const</target>
        </trans-unit>
        <trans-unit id="d977fa6cff4d0688660bd23efd85c8c1ef46e60a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlErrorHandler::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlErrorHandler :: errorString () const</target>
        </trans-unit>
        <trans-unit id="bd109074635f728a4c7b44931538f1458ac56c0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlLexicalHandler::errorString() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; QXmlLexicalHandler :: errorString () const</target>
        </trans-unit>
        <trans-unit id="9a1dead703f90787bc4ac5ce259a40f996d7c73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAbstractAudioDeviceInfo::supportedCodecs()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAbstractAudioDeviceInfo :: supportedCodecs ()</target>
        </trans-unit>
        <trans-unit id="5af41d68d6f232385ad369529246b6afd1be6d3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAccessibleActionInterface::actionNames() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAccessibleActionInterface :: actionNames () const</target>
        </trans-unit>
        <trans-unit id="d150a9ce774145914307d2b5ead0458e08b84a02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAccessibleActionInterface::keyBindingsForAction(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAccessibleActionInterface :: keyBindingsForAction (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="13a8a28510ce511cbc81b65d4966e7ddb1a05baa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAudioEncoderSettingsControl::supportedAudioCodecs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAudioEncoderSettingsControl :: supportedAudioCodecs () const</target>
        </trans-unit>
        <trans-unit id="8983e133142a5ed8b46dab058234b03e3628443b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAxFactory::featureList() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QAxFactory :: featureList () const</target>
        </trans-unit>
        <trans-unit id="ba65a13862542eb054a81e9d3779a0c05b628eaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QCustomAudioRoleControl::supportedCustomAudioRoles() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QCustomAudioRoleControl :: supportedCustomAudioRoles () const</target>
        </trans-unit>
        <trans-unit id="37443614579d05129bda4e63966333fafdd9b14f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QDesignerFormWindowInterface::checkContents() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QDesignerFormWindowInterface :: checkContents () const</target>
        </trans-unit>
        <trans-unit id="74d9a399010f0cf2fcbaa1b9af39e816a17819b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QDesignerFormWindowInterface::includeHints() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QDesignerFormWindowInterface :: includeHints () const</target>
        </trans-unit>
        <trans-unit id="0e0f63769375d91c70c9435a2b77809d9818cc29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QDesignerFormWindowInterface::resourceFiles() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QDesignerFormWindowInterface :: resourceFiles () const</target>
        </trans-unit>
        <trans-unit id="c18b75f12419512b23edc821b4eca881fc5647dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QImageEncoderControl::supportedImageCodecs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QImageEncoderControl :: supportedImageCodecs () const</target>
        </trans-unit>
        <trans-unit id="505b7581a69e1b47c36eaede5bdaf70fac752203" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QMediaContainerControl::supportedContainers() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QMediaContainerControl :: supportedContainers () const</target>
        </trans-unit>
        <trans-unit id="a26f9f72a340b6dc1b2055cb70ee83611df5839c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QMediaServiceSupportedFormatsInterface::supportedMimeTypes() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QMediaServiceSupportedFormatsInterface :: supportedMimeTypes () const</target>
        </trans-unit>
        <trans-unit id="ef2f1faeda32c0b89c64357f830eaec959d368e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QMetaDataReaderControl::availableMetaData() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QMetaDataReaderControl :: availableMetaData () const</target>
        </trans-unit>
        <trans-unit id="499ce4a53556479ce5197c9e0d8eba6194f3db4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QMetaDataWriterControl::availableMetaData() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QMetaDataWriterControl :: availableMetaData () const</target>
        </trans-unit>
        <trans-unit id="2d4875f75e6700f1ed5d5f4ed2db735651b22bd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QSensorGesturePluginInterface::supportedIds() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QSensorGesturePluginInterface :: supportedIds () const</target>
        </trans-unit>
        <trans-unit id="9781bd409968c4714d3b0f9cc09b0242e72a3e34" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QVideoEncoderSettingsControl::supportedVideoCodecs() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; QVideoEncoderSettingsControl :: supportedVideoCodecs () const</target>
        </trans-unit>
        <trans-unit id="5c45e333dcc877340d6bdc8200276688e70a650c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; *QStylePlugin::create(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; * QStylePlugin :: create (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a79bf3676ec6b80d73a50374f131e836859555cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;QStyle::SubControl&lt;/a&gt; QStyle::hitTestComplexControl(&lt;a href=&quot;qstyle#ComplexControl-enum&quot;&gt;QStyle::ComplexControl&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qstyle#SubControl-enum&quot;&gt;QStyle :: SubControl&lt;/a&gt; QStyle :: hitTestComplexControl ( &lt;a href=&quot;qstyle#ComplexControl-enum&quot;&gt;QStyle :: ComplexControl&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7541ea0426695353a2a923f587c94a6972005ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsurface#SurfaceType-enum&quot;&gt;QSurface::SurfaceType&lt;/a&gt; QSurface::surfaceType() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsurface#SurfaceType-enum&quot;&gt;QSurface :: SurfaceType&lt;/a&gt; QSurface :: surfaceType () const</target>
        </trans-unit>
        <trans-unit id="12cbe9fda6e71d59beca39a60e3765e4ab0f0e03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; QSurface::format() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; QSurface :: format () const</target>
        </trans-unit>
        <trans-unit id="909b7e1a609f0a750db0d48685f02e24cd203857" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt#AspectRatioMode-enum&quot;&gt;Qt::AspectRatioMode&lt;/a&gt; QVideoWidgetControl::aspectRatioMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qt#AspectRatioMode-enum&quot;&gt;Qt :: AspectRatioMode&lt;/a&gt; QVideoWidgetControl :: aspectRatioMode () const</target>
        </trans-unit>
        <trans-unit id="2319ce7e44b5fba2c452ec5e9d591acc443ba4d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt#AspectRatioMode-enum&quot;&gt;Qt::AspectRatioMode&lt;/a&gt; QVideoWindowControl::aspectRatioMode() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qt#AspectRatioMode-enum&quot;&gt;Qt :: AspectRatioMode&lt;/a&gt; QVideoWindowControl :: aspectRatioMode () const</target>
        </trans-unit>
        <trans-unit id="3300e69275e822f1d0d7b58ddc0af6c768befda9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Orientation&lt;/a&gt; QCandlestickModelMapper::orientation() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt :: Orientation&lt;/a&gt; QCandlestickModelMapper :: ориентация () const</target>
        </trans-unit>
        <trans-unit id="de350316ed590ea7a07905cf3daab45bc4c2aa90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Orientations&lt;/a&gt; QLayoutItem::expandingDirections() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt :: Orientations&lt;/a&gt; QLayoutItem :: expandingDirections () const</target>
        </trans-unit>
        <trans-unit id="ded5deae8de9dca2e055377022db013ed9580c62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;Qt3DCore::QBackendNode&lt;/a&gt; *QBackendNodeMapper::create(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3975aa0115dc950fcc5cf974a693bf78179325ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;Qt3DCore::QBackendNode&lt;/a&gt; *QBackendNodeMapper::create(const &lt;a href=&quot;qt3dcore-qnodecreatedchangebase#QNodeCreatedChangeBasePtr-typedef&quot;&gt;Qt3DCore::QNodeCreatedChangeBasePtr&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;Qt3DCore :: QBackendNode&lt;/a&gt; * QBackendNodeMapper :: create (const &lt;a href=&quot;qt3dcore-qnodecreatedchangebase#QNodeCreatedChangeBasePtr-typedef&quot;&gt;Qt3DCore :: QNodeCreatedChangeBasePtr&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d3e66a7e19b6dc3c5addcf2462917d20a2c00c67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;Qt3DCore::QBackendNode&lt;/a&gt; *QBackendNodeMapper::get(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qt3dcore-qbackendnode&quot;&gt;Qt3DCore :: QBackendNode&lt;/a&gt; * QBackendNodeMapper :: get ( &lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore :: QNodeId&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84f2b9e8f12e5d8295abf574c13344b46640da0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt3dinput-qabstractphysicaldevice&quot;&gt;Qt3DInput::QAbstractPhysicalDevice&lt;/a&gt; *QInputDeviceIntegration::createPhysicalDevice(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ea460802ca362e0cfe4838a8d918cdf2004473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qt3drender-qtextureimagedatagenerator#QTextureImageDataPtr-typedef&quot;&gt;Qt3DRender::QTextureImageDataPtr&lt;/a&gt; QTextureImageDataGenerator::operator()()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qt3drender-qtextureimagedatagenerator#QTextureImageDataPtr-typedef&quot;&gt;Qt3DRender :: QTextureImageDataPtr&lt;/a&gt; QTextureImageDataGenerator :: operator () ()</target>
        </trans-unit>
        <trans-unit id="a086d970af8c3dca5482800fef65f87cee316fe6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtexttospeech#State-enum&quot;&gt;QTextToSpeech::State&lt;/a&gt; QTextToSpeechEngine::state() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qtexttospeech#State-enum&quot;&gt;QTextToSpeech :: State&lt;/a&gt; QTextToSpeechEngine :: state () const</target>
        </trans-unit>
        <trans-unit id="d8cb309ea67e86376f33ab725db6b364d50ca12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioInput::elapsedUSecs() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f24354084244fb2743b186b0109082b72e07a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioInput::processedUSecs() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ede797b196111345f16cfd3dbccc0df43b8c707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioOutput::elapsedUSecs() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbd3606f1039185784d58e56d79d0ccd24b63a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractAudioOutput::processedUSecs() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c4a099528dae0a9bac2824f597334969a3fc44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAbstractNetworkCache::cacheSize() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9e58b89cb71c91dd4350e116b864797ca349f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAudioDecoderControl::duration() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9ebb0d7668470635b961700186b227169536bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QAudioDecoderControl::position() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="510de38393c801a371df10549dbf64b9ca6316ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaPlayerControl::duration() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16f7190e1eab64f2d5dd63dbbcc364e31891fb71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaPlayerControl::position() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b630b1b47f7e77a4daec3612af34b2a49c543c42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; QMediaRecorderControl::duration() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe554726546c9fff21999362552ab04373b28c58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt; QAbstractFunctor::id() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c883afbe1e016796178092be408f1d004c427b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::currentDigitalZoom() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a10d7b118eadd8cf7f830cd4708e261a7d9279b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::currentOpticalZoom() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7e31f61c55081af21f25e5518d2cebb6537d36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::maximumDigitalZoom() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="380a755eda30bdedadc44eed46d52045eb892945" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::maximumOpticalZoom() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9759e82415fb8b518dafbc11e3326b2eb2446ad1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::requestedDigitalZoom() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1ead8298182a079431199f8616a3b373f1b864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QCameraZoomControl::requestedOpticalZoom() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aabef33de1844c42063bc93d9491f2d0ac5720" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaGaplessPlaybackControl::crossfadeTime() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ae4f7c71d9437ce597ae8b4cbb9acaf54c284f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaPlayerControl::playbackRate() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecadd9dd590061cec3356900b0911cf5eeb37fa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; QMediaRecorderControl::volume() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9accfe95728bc11a1317bde097b57005bcac0b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt; QMaskGenerator::nextMask()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5014fee33b28ee08b1fd9d9ed1e35d87f98aef8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *QAbstractVideoBuffer::map(&lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer::MapMode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b365f4f19a67a0e99829f1730160728db8660dd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QAbstractUriResolver::resolve(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QAbstractUriResolver :: resolve (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9dd78f63c36636dd2655c6727586217b2db5c176" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QAbstractXmlNodeModel::baseUri(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QAbstractXmlNodeModel :: baseUri (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6c88fe11233162f05c07ae0721306a65bcc9f407" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QAbstractXmlNodeModel::documentUri(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QAbstractXmlNodeModel :: documentUri (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b6538b2d9ebea4bbf44fac4c755baab0a45f5bc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QMediaRecorderControl::outputLocation() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QMediaRecorderControl :: outputLocation () const</target>
        </trans-unit>
        <trans-unit id="41f7d0ab914c6aa050dc4685dcaf855202521f17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQmlAbstractUrlInterceptor::intercept(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; QQmlAbstractUrlInterceptor :: intercept (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="df2bd0265ed3e9787286954fffae93f450d6df33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvalidator#State-enum&quot;&gt;QValidator::State&lt;/a&gt; QValidator::validate(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvalidator#State-enum&quot;&gt;QValidator :: State&lt;/a&gt; QValidator :: validate ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3c902cfd233643507ffa220f98370e4263624028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAbstractItemModel::data(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAbstractItemModel :: data (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="059f7ac10d62addf60a5109ce7d2fe937532dbb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAbstractXmlNodeModel::typedValue(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAbstractXmlNodeModel :: typedValue (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b5db82b91ed65cbdca98e267e23cdd887facc433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueInterface::currentValue() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueInterface :: currentValue () const</target>
        </trans-unit>
        <trans-unit id="c2cda8b89bfa4a3d7a73ec6a517f5e9321a24207" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueInterface::maximumValue() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueInterface :: maximumValue () const</target>
        </trans-unit>
        <trans-unit id="66b12ce0a209e49c701ab6aaed96dc39f94d0605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueInterface::minimumStepSize() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueInterface :: minimumStepSize () const</target>
        </trans-unit>
        <trans-unit id="c4a83d8a95a6f8c7e3a076dbc86b629948db4d62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueInterface::minimumValue() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QAccessibleValueInterface :: minimumValue () const</target>
        </trans-unit>
        <trans-unit id="093eab6038ecd62027acf3a983d9bee79cfda7d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCameraExposureControl::actualValue(&lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl::ExposureParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCameraExposureControl :: actualValue ( &lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl :: ExposureParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f310bce360c516429ff38ac52ee4076cbdfcc4ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCameraExposureControl::requestedValue(&lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl::ExposureParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCameraExposureControl :: &lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;requiredValue&lt;/a&gt; ( QCameraExposureControl :: ExposureParameter</target>
        </trans-unit>
        <trans-unit id="1bca43c33d283f9552ab5921fb9feeaf0d918885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCameraImageProcessingControl::parameter(&lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;QCameraImageProcessingControl::ProcessingParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCameraImageProcessingControl :: параметр ( &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;QCameraImageProcessingControl :: ProcessingParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="68832ad736129bf075fa1e442309ded1d2d5b4d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCameraViewfinderSettingsControl::viewfinderParameter(&lt;a href=&quot;qcameraviewfindersettingscontrol#ViewfinderParameter-enum&quot;&gt;QCameraViewfinderSettingsControl::ViewfinderParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QCameraViewfinderSettingsControl :: viewfinderParameter ( &lt;a href=&quot;qcameraviewfindersettingscontrol#ViewfinderParameter-enum&quot;&gt;QCameraViewfinderSettingsControl :: ViewfinderParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6086b0cbc279e5c2f3440c86fe1e1c603f84f9f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QDesignerPropertySheetExtension::property(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QDesignerPropertySheetExtension :: property (int</target>
        </trans-unit>
        <trans-unit id="bbdff5f5c6a81c12e2b183784683358a59b04451" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMacPasteboardMime::convertToMime(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMacPasteboardMime :: convertToMime (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9897722bc0218d49318a433138f236d930034137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMediaStreamsControl::metaData(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMediaStreamsControl :: metaData (int</target>
        </trans-unit>
        <trans-unit id="559f0cda9dffcbe47966771fb4a162e5bc5e713a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMetaDataReaderControl::metaData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMetaDataReaderControl :: metaData (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7f048505d84b90c431eaedd0d3681374c9ba843b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMetaDataWriterControl::metaData(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QMetaDataWriterControl :: metaData (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e9ade0098c2fd63fc24f3f01611e9993cfe83b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPrintEngine::property(&lt;a href=&quot;qprintengine#PrintEnginePropertyKey-enum&quot;&gt;QPrintEngine::PrintEnginePropertyKey&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QPrintEngine :: property ( &lt;a href=&quot;qprintengine#PrintEnginePropertyKey-enum&quot;&gt;QPrintEngine :: PrintEnginePropertyKey&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="427b248de528f52526a5fb7200815bc02fbafa27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QScxmlDataModel::evaluateToVariant(&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QScxmlDataModel :: &lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;AssessmentToVariant&lt;/a&gt; ( QScxmlExecutableContent :: EvaluatorId</target>
        </trans-unit>
        <trans-unit id="536cbbf4c42b33b56e3b83a2c0e2ba299dfbd58d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QScxmlDataModel::scxmlProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QScxmlDataModel :: scxmlProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5500305a2b6444a144c723674c1a8fb7f35efcd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QWinMime::convertToMime(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; QWinMime :: convertToMime (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2b1d631f619a5646fc957565ac92c4e9a4bcb9a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; QCameraExposureControl::supportedParameterRange(&lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl::ExposureParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; QCameraExposureControl :: supportedParameterRange ( &lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl :: ExposureParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7cd78020775efb52e59b2fccba86d491009d3c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; QRemoteObjectAbstractPersistedStore::restoreProperties(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; QRemoteObjectAbstractPersistedStore :: restoreProperties (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="24b200dc5603eeea070e953461402274f83ac592" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;&amp;gt; QTextToSpeechEngine::availableLocales() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;gt; QTextToSpeechEngine :: availableLocales () const</target>
        </trans-unit>
        <trans-unit id="5e0d9a65044d4880e74be0e5c4bfeb0fa23a51e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;&amp;gt; QInputDeviceIntegration::physicalDevices() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5362c25b639aaaf71b8848a822dbfb64937075f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qvoice&quot;&gt;QVoice&lt;/a&gt;&amp;gt; QTextToSpeechEngine::availableVoices() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qvoice&quot;&gt;QVoice&lt;/a&gt; &amp;gt; QTextToSpeechEngine :: availableVoices () const</target>
        </trans-unit>
        <trans-unit id="6067d3a549268784d35b36a2897fa05590cdbb6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;&amp;gt; QAbstractXmlNodeModel::namespaceBindings(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; &amp;gt; QAbstractXmlNodeModel :: namespaceBindings (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="661508760ef6f30e0c295c4a56573695953e077b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt;&amp;gt; QAbstractXmlNodeModel::nodesByIdref(const &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt; &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;gt; QAbstractXmlNodeModel :: nodesByIdref (const &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="09cb6b3d450bcc7a253f165930e44c1faf4f208a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;FORMATETC&amp;gt; QWinMime::formatsForMime(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;FORMATETC&amp;gt; QWinMime :: formatForMime (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="13002c3a8ef58c8e59a6a702d3bd0da739786d7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; QVideoEncoderSettingsControl::videoSettings() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvideoencodersettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; QVideoEncoderSettingsControl :: videoSettings () const</target>
        </trans-unit>
        <trans-unit id="14772b5b7da75ae897dd3f119735715d3fd76e5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt; *QAbstractVideoFilter::createFilterRunnable()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt; * QAbstractVideoFilter :: createFilterRunnable ()</target>
        </trans-unit>
        <trans-unit id="443c9e91b0a9d913e3e838120ce1905d5252b9b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; QVideoFilterRunnable::run(&lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; QVideoFilterRunnable :: run ( &lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="444faf3a7908e8e9037baa6d501a769c57caa421" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame::PixelFormat&lt;/a&gt; QCameraCaptureBufferFormatControl::bufferFormat() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvideoframe#PixelFormat-enum&quot;&gt;QVideoFrame :: PixelFormat&lt;/a&gt; QCameraCaptureBufferFormatControl :: bufferFormat () const</target>
        </trans-unit>
        <trans-unit id="f59f2d948005304e86f811e6045a96486766a0b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qvoice&quot;&gt;QVoice&lt;/a&gt; QTextToSpeechEngine::voice() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qvoice&quot;&gt;QVoice&lt;/a&gt; QTextToSpeechEngine :: voice () const</target>
        </trans-unit>
        <trans-unit id="2fa822db27f68b3e242f3275c99bfd4d5d46c254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwaylandquickshellintegration&quot;&gt;QWaylandQuickShellIntegration&lt;/a&gt; *QWaylandShellSurface::createIntegration(&lt;a href=&quot;qwaylandquickshellsurfaceitem&quot;&gt;QWaylandQuickShellSurfaceItem&lt;/a&gt; *</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727da26e51402ae6b6e007ac6a6ebfd9464c78df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QDesignerContainerExtension::widget(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; * QDesignerContainerExtension :: widget (int</target>
        </trans-unit>
        <trans-unit id="a4008467cd28251e794e4b7fc3fb60724d8f5879" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QDesignerCustomWidgetInterface::createWidget(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; * QDesignerCustomWidgetInterface :: createWidget ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="94f9e8ffd101decc35fd90c30837968b2c9566c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QDesignerFormWindowCursorInterface::current() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; * QDesignerFormWindowCursorInterface :: current () const</target>
        </trans-unit>
        <trans-unit id="4d8e6371d4a83e1749d1eb3ee50a56c1101b0d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QDesignerFormWindowCursorInterface::selectedWidget(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; * QDesignerFormWindowCursorInterface :: selectedWidget (int</target>
        </trans-unit>
        <trans-unit id="44d1cb5ea9ec7281f4b9952770a5f3dde531c2a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QDesignerFormWindowCursorInterface::widget(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; * QDesignerFormWindowCursorInterface :: widget (int</target>
        </trans-unit>
        <trans-unit id="e6cb2cca924e84d22e7ba4d78c41d07c3975872c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QItemEditorCreatorBase::createWidget(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; * QItemEditorCreatorBase :: createWidget ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a451aeeb7d94e7917719bbd8451ea1353b86fcc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *QVideoWidgetControl::videoWidget()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; * QVideoWidgetControl :: videoWidget ()</target>
        </trans-unit>
        <trans-unit id="0cc4ee25fd3602f9d98a60474d92141434229e0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *QDesignerFormWindowInterface::formContainer() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; * QDesignerFormWindowInterface :: formContainer () const</target>
        </trans-unit>
        <trans-unit id="78cb36adb40c24a0909da1cfe5c1a7f930a56fca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt; *QXmlReader::contentHandler() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt; * QXmlReader :: contentHandler () const</target>
        </trans-unit>
        <trans-unit id="fdb60ccaf7af7f9fda956afdafcbdcc255f99482" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt; *QXmlReader::declHandler() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmldeclhandler&quot;&gt;QXmlDeclHandler&lt;/a&gt; * QXmlReader :: declHandler () const</target>
        </trans-unit>
        <trans-unit id="1f85f12082ceb2123108f16f107f4cf60d6660e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt; *QXmlReader::DTDHandler() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmldtdhandler&quot;&gt;QXmlDTDHandler&lt;/a&gt; * QXmlReader :: DTDHandler () const</target>
        </trans-unit>
        <trans-unit id="e3574b9c9e79ff7b7e00688e7ee60e549a8a02d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmlentityresolver&quot;&gt;QXmlEntityResolver&lt;/a&gt; *QXmlReader::entityResolver() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmlentityresolver&quot;&gt;QXmlEntityResolver&lt;/a&gt; * QXmlReader :: entityResolver () const</target>
        </trans-unit>
        <trans-unit id="0db0738d6d6f49a62860928db0fd8903a2dfea8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt; *QXmlReader::errorHandler() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt; * QXmlReader :: errorHandler () const</target>
        </trans-unit>
        <trans-unit id="f446e8adf7df7a1846dc00eaf24e1acc38556bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmllexicalhandler&quot;&gt;QXmlLexicalHandler&lt;/a&gt; *QXmlReader::lexicalHandler() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmllexicalhandler&quot;&gt;QXmlLexicalHandler&lt;/a&gt; * QXmlReader :: lexicalHandler () const</target>
        </trans-unit>
        <trans-unit id="e2c6feb7af3c8ef147dbb585dae19392a7ba341b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; QAbstractXmlNodeModel::name(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; QAbstractXmlNodeModel :: name (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="858f384de342f1efbf82198ff1b9a40f23da3d06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; QAbstractXmlNodeModel::elementById(const &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; QAbstractXmlNodeModel :: elementById (const &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="51698472110fc156b4abd79b079c59bde7a410d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; QAbstractXmlNodeModel::root(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; QAbstractXmlNodeModel :: root (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="31b42a638ef9db67232b93ace58167a49e45f91a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmlnodemodelindex#DocumentOrder-enum&quot;&gt;QXmlNodeModelIndex::DocumentOrder&lt;/a&gt; QAbstractXmlNodeModel::compareOrder(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmlnodemodelindex#DocumentOrder-enum&quot;&gt;QXmlNodeModelIndex :: DocumentOrder&lt;/a&gt; QAbstractXmlNodeModel :: compareOrder (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2b867735488416b598c9effb8b8bca2e805b34f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;&lt;a href=&quot;qxmlnodemodelindex#NodeKind-enum&quot;&gt;QXmlNodeModelIndex::NodeKind&lt;/a&gt; QAbstractXmlNodeModel::kind(const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; &lt;a href=&quot;qxmlnodemodelindex#NodeKind-enum&quot;&gt;QXmlNodeModelIndex :: NodeKind&lt;/a&gt; QAbstractXmlNodeModel :: kind (const &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="25774f4c68441db49671c9acf72a0165082cdf50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;EGLContext QEGLContext::nativeContext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7772f959c658168a018dca02f9e2e8d768ae17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;GLuint QSGOpenGLTexture::nativeTexture() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d25af6a29b144c70ed39fae20e6c34fb84fc1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;HGLRC QWGLContext::nativeContext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1e49ac8533c6b99cb1968dbff50679ee0532a5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;NSOpenGLContext *QCocoaGLContext::nativeContext() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9e64aaa5b262e9c5e7b641cfef1652ca35d588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QAbstractPhysicalDeviceBackendNode *QInputDeviceIntegration::physicalDevice(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bd5ffbf939a6528c9b9c3e9325b5df334d5646" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QCameraFocusZoneList QCameraFocusControl::focusZones() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QCameraFocusZoneList QCameraFocusControl :: focusZones () const</target>
        </trans-unit>
        <trans-unit id="f446e51b370fb1733a91a17c98740d5ad36b8291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QIcon QDesignerCustomWidgetInterface::icon() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QIcon QDesignerCustomWidgetInterface :: icon () const</target>
        </trans-unit>
        <trans-unit id="b13e883e36073ef2846e95f488d7280d2c55fa5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QList&amp;lt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableCellInterface::columnHeaderCells() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QList &amp;lt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableCellInterface :: columnHeaderCells () const</target>
        </trans-unit>
        <trans-unit id="bcae53994aa9b7d5a37895ccf5d895d76583fb16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QList&amp;lt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableCellInterface::rowHeaderCells() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QList &amp;lt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableCellInterface :: rowHeaderCells () const</target>
        </trans-unit>
        <trans-unit id="ad960996dad34fc9d50f54b869898c38317202c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QList&amp;lt;&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableInterface::selectedCells() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QList &amp;lt; &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; *&amp;gt; QAccessibleTableInterface :: selectedCells () const</target>
        </trans-unit>
        <trans-unit id="da44af1b48deecb74e4f95ecd91ff7b2fe6a1a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QList&amp;lt;int&amp;gt; QAccessibleTableInterface::selectedColumns() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QList &amp;lt;int&amp;gt; QAccessibleTableInterface :: selectedColumns () const</target>
        </trans-unit>
        <trans-unit id="0bdabb87ab430d5571421463a5438745151f3c63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QList&amp;lt;int&amp;gt; QAccessibleTableInterface::selectedRows() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QList &amp;lt;int&amp;gt; QAccessibleTableInterface :: selectedRows () const</target>
        </trans-unit>
        <trans-unit id="9dfa7a8d77aace17e0c65b29d2944aca9801e358" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QNetworkAccessManager *QQmlNetworkAccessManagerFactory::create(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QNetworkAccessManager * QQmlNetworkAccessManagerFactory :: create ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b5e97e018343f65fb9b30ed93b2e0861e470ad79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QPixmap QDesignerFormWindowManagerInterface::createPreviewPixmap() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QPixmap QDesignerFormWindowManagerInterface :: createPreviewPixmap () const</target>
        </trans-unit>
        <trans-unit id="74a23d038f4d26b744365bdd77490172c1335020" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;QPlatformSurface *QSurface::surfaceHandle() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; QPlatformSurface * QSurface :: surfaceHandle () const</target>
        </trans-unit>
        <trans-unit id="466c6c03989721d3c173a60bde1b1ada7c4491d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;Qt3DInput::QAbstractPhysicalDeviceBackendNode *QInputDeviceIntegration::physicalDevice(&lt;a href=&quot;qt3dcore-qnodeid&quot;&gt;Qt3DCore::QNodeId&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4289f1bd7d42e06d92236b0860c3b9eb5322b2d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;Qt3DRender::QTextureDataPtr QTextureGenerator::operator()()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c486352b8cc090173397927649305b007d9f4f02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;VkImage QSGVulkanTexture::nativeImage() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d8bab2af53ce1fef15bd660179ba9aa0e35ded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;VkImageLayout QSGVulkanTexture::nativeImageLayout() const</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d87b9f1b4c81e9909c058e1b1f709db71869417" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;WId QVideoWindowControl::winId() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; WId QVideoWindowControl :: winId () const</target>
        </trans-unit>
        <trans-unit id="b1994885b7af49398455ba5bd8e40e97c5ca80ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAbstractAudioDeviceInfo::isFormatSupported(const &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAbstractAudioDeviceInfo :: isFormatSupported (const &lt;a href=&quot;qaudioformat&quot;&gt;QAudioFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b5b21bb1a2c4c3dc8c9383a5a4ad1c903b494f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAbstractEventDispatcher::processEvents(&lt;a href=&quot;qeventloop#ProcessEventsFlag-enum&quot;&gt;QEventLoop::ProcessEventsFlags&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAbstractEventDispatcher :: processEvents ( &lt;a href=&quot;qeventloop#ProcessEventsFlag-enum&quot;&gt;QEventLoop :: ProcessEventsFlags&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c5a10868d07083dcf22f6ebdf5dea562dc35ab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAbstractEventDispatcher::registerEventNotifier(&lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAbstractEventDispatcher :: registerEventNotifier ( &lt;a href=&quot;qwineventnotifier&quot;&gt;QWinEventNotifier&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="0811012d340f225bf37961ebe89ce4c61687614c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAbstractEventDispatcher::unregisterTimer(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAbstractEventDispatcher :: unregisterTimer (int</target>
        </trans-unit>
        <trans-unit id="116ba09f457cbeae654b63a2e2d5ebe7d8c28798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAbstractEventDispatcher::unregisterTimers(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAbstractEventDispatcher :: unregisterTimers ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="dd12f381615d990ff6e59ee9d01911057222a2ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAbstractNativeEventFilter::nativeEventFilter(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAbstractNativeEventFilter :: nativeEventFilter (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4f97006801865c0198a85e6e1917bb33e9bc26c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAbstractNetworkCache::remove(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAbstractNetworkCache :: remove (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9fd0441dce1fbb4bfb2d30d655720fd892961076" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAbstractVideoSurface::present(const &lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAbstractVideoSurface :: present (const &lt;a href=&quot;qvideoframe&quot;&gt;QVideoFrame&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="369ec232e43d9e8574d1ef14646aec4a4febbab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccelerometerFilter::filter(&lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccelerometerFilter :: filter ( &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c930f44dd3440c238e2b94893f70b9d9001ee66c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccessibleInterface::isValid() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccessibleInterface :: isValid () const</target>
        </trans-unit>
        <trans-unit id="934ab29ca90bd04d8e04131b1c1c5ef7ee151a94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccessibleTableCellInterface::isSelected() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccessibleTableCellInterface :: isSelected () const</target>
        </trans-unit>
        <trans-unit id="9578d51ad77cb2773df9c02ba919bce33e41f3ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccessibleTableInterface::isColumnSelected(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccessibleTableInterface :: isColumnSelected (int</target>
        </trans-unit>
        <trans-unit id="2ca2d948600a54e79b1d7a2367b18487a9431c7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccessibleTableInterface::isRowSelected(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccessibleTableInterface :: isRowSelected (int</target>
        </trans-unit>
        <trans-unit id="c08ccd556cd8e04a544e9a41d96cd77659da5e1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccessibleTableInterface::selectColumn(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccessibleTableInterface :: selectColumn (int</target>
        </trans-unit>
        <trans-unit id="4ede744658ff85ede8c7529d8b27bbc2f5b7fd57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccessibleTableInterface::selectRow(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccessibleTableInterface :: selectRow (int</target>
        </trans-unit>
        <trans-unit id="1f9c27d067a31c114c2305916035bef3c2728ec8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccessibleTableInterface::unselectColumn(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccessibleTableInterface :: unselectColumn (int</target>
        </trans-unit>
        <trans-unit id="c5cd160e9e2c2651561b7a532bcfafbce74466b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAccessibleTableInterface::unselectRow(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAccessibleTableInterface :: unselectRow (int</target>
        </trans-unit>
        <trans-unit id="1aee388d6bb4acdc1e6c7be40d4ca3113ea0515c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAltimeterFilter::filter(&lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAltimeterFilter :: filter ( &lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="b823e49717c6c7f656279dc55d2ccaf7165c038a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAmbientLightFilter::filter(&lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAmbientLightFilter :: filter ( &lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4b4beb38d0a9c59fad722abd47a838d26297ad32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAmbientTemperatureFilter::filter(&lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAmbientTemperatureFilter :: filter ( &lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f68ab1957bcee1feeaac6a2b457bb68c20586a8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QAudioDecoderControl::bufferAvailable() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QAudioDecoderControl :: bufferAvailable () const</target>
        </trans-unit>
        <trans-unit id="f577e640b672f34f98128e4581c5199d8c33b72b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QBluetoothTransferReply::isFinished() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QBluetoothTransferReply :: isFinished () const</target>
        </trans-unit>
        <trans-unit id="9cb51b8267669927a93146cda81777e24bcca9ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QBluetoothTransferReply::isRunning() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QBluetoothTransferReply :: isRunning () const</target>
        </trans-unit>
        <trans-unit id="a30256b5a6b9b27d4dcb7dc5502cfe4252fdf9b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QBufferDataGenerator::operator==(const &lt;a href=&quot;qt3drender-qbufferdatagenerator&quot;&gt;Qt3DRender::QBufferDataGenerator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QBufferDataGenerator :: operator == (const &lt;a href=&quot;qt3drender-qbufferdatagenerator&quot;&gt;Qt3DRender :: QBufferDataGenerator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8c2628df72b551c576b7769e50fe6b19246fb406" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraCaptureDestinationControl::isCaptureDestinationSupported(&lt;a href=&quot;qcameraimagecapture#CaptureDestination-enum&quot;&gt;QCameraImageCapture::CaptureDestinations&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraCaptureDestinationControl :: isCaptureDestinationSupported ( &lt;a href=&quot;qcameraimagecapture#CaptureDestination-enum&quot;&gt;QCameraImageCapture :: CaptureDestinations&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54717713c0f96b425f061aa6f06d3c1182f1c8d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraControl::canChangeProperty(&lt;a href=&quot;qcameracontrol#PropertyChangeType-enum&quot;&gt;QCameraControl::PropertyChangeType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraControl :: canChangeProperty ( &lt;a href=&quot;qcameracontrol#PropertyChangeType-enum&quot;&gt;QCameraControl :: PropertyChangeType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de174d60eadd8747ce6b6b411d1017b1613eda9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraControl::isCaptureModeSupported(&lt;a href=&quot;qcamera#CaptureMode-enum&quot;&gt;QCamera::CaptureModes&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraControl :: isCaptureModeSupported ( &lt;a href=&quot;qcamera#CaptureMode-enum&quot;&gt;QCamera :: CaptureModes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63e17f21751aa1abfcd4a0e21f83578a13a5e6d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraExposureControl::isParameterSupported(&lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl::ExposureParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraExposureControl :: isParameterSupported ( &lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl :: ExposureParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="00747dcb8e3f18f4d64517d05aa6abdf9693d5f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraExposureControl::setValue(&lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl::ExposureParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraExposureControl :: setValue ( &lt;a href=&quot;qcameraexposurecontrol#ExposureParameter-enum&quot;&gt;QCameraExposureControl :: ExposureParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c08ae50b46e2159f8d2fe3edc958c98e90dab97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraFeedbackControl::isEventFeedbackEnabled(&lt;a href=&quot;qcamerafeedbackcontrol#EventType-enum&quot;&gt;QCameraFeedbackControl::EventType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraFeedbackControl :: isEventFeedbackEnabled ( &lt;a href=&quot;qcamerafeedbackcontrol#EventType-enum&quot;&gt;QCameraFeedbackControl :: EventType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d047c16f4783bc9a53543b326d846593e960cf91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraFeedbackControl::isEventFeedbackLocked(&lt;a href=&quot;qcamerafeedbackcontrol#EventType-enum&quot;&gt;QCameraFeedbackControl::EventType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraFeedbackControl :: isEventFeedbackLocked ( &lt;a href=&quot;qcamerafeedbackcontrol#EventType-enum&quot;&gt;QCameraFeedbackControl :: EventType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b34a9d15ef2ae2c0a14825618dcc45555e8e0878" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraFeedbackControl::setEventFeedbackEnabled(&lt;a href=&quot;qcamerafeedbackcontrol#EventType-enum&quot;&gt;QCameraFeedbackControl::EventType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraFeedbackControl :: setEventFeedbackEnabled ( &lt;a href=&quot;qcamerafeedbackcontrol#EventType-enum&quot;&gt;QCameraFeedbackControl :: EventType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3975d2a274b514b2d6fafbdf52cbf4b03d1e3fbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraFeedbackControl::setEventFeedbackSound(&lt;a href=&quot;qcamerafeedbackcontrol#EventType-enum&quot;&gt;QCameraFeedbackControl::EventType&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraFeedbackControl :: setEventFeedbackSound ( &lt;a href=&quot;qcamerafeedbackcontrol#EventType-enum&quot;&gt;QCameraFeedbackControl :: EventType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e12bc3723ef105a4f0536577ca8c42b7a36dfa95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraFlashControl::isFlashModeSupported(&lt;a href=&quot;qcameraexposure#FlashMode-enum&quot;&gt;QCameraExposure::FlashModes&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraFlashControl :: isFlashModeSupported ( &lt;a href=&quot;qcameraexposure#FlashMode-enum&quot;&gt;QCameraExposure :: FlashModes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f88f3344020f86fa28d6e7bd07e9c55d1d9a8372" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraFlashControl::isFlashReady() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraFlashControl :: isFlashReady () const</target>
        </trans-unit>
        <trans-unit id="dd9e76dfe3b6b8558b4d1d2a223a95a6067ee256" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraFocusControl::isFocusModeSupported(&lt;a href=&quot;qcamerafocus#FocusMode-enum&quot;&gt;QCameraFocus::FocusModes&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraFocusControl :: isFocusModeSupported ( &lt;a href=&quot;qcamerafocus#FocusMode-enum&quot;&gt;QCameraFocus :: FocusModes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c47917a492950220f7fdbe4d801d3c8fbd5c324" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraFocusControl::isFocusPointModeSupported(&lt;a href=&quot;qcamerafocus#FocusPointMode-enum&quot;&gt;QCameraFocus::FocusPointMode&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraFocusControl :: isFocusPointModeSupported ( &lt;a href=&quot;qcamerafocus#FocusPointMode-enum&quot;&gt;QCameraFocus :: FocusPointMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f15348f830e38267e20bdda11042455aa1cebd76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraImageCaptureControl::isReadyForCapture() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraImageCaptureControl :: isReadyForCapture () const</target>
        </trans-unit>
        <trans-unit id="572280998985047d2273f9953ee8a9d89bf09dd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraImageProcessingControl::isParameterSupported(&lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;QCameraImageProcessingControl::ProcessingParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraImageProcessingControl :: isParameterSupported ( &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;QCameraImageProcessingControl :: ProcessingParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64845bfe4bb92ba874ecbe8ae652756c89b0c0d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraImageProcessingControl::isParameterValueSupported(&lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;QCameraImageProcessingControl::ProcessingParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraImageProcessingControl :: isParameterValueSupported ( &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;QCameraImageProcessingControl :: ProcessingParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ae10fe757a5bec5c6a71842126a6565f7e089fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCameraViewfinderSettingsControl::isViewfinderParameterSupported(&lt;a href=&quot;qcameraviewfindersettingscontrol#ViewfinderParameter-enum&quot;&gt;QCameraViewfinderSettingsControl::ViewfinderParameter&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCameraViewfinderSettingsControl :: isViewfinderParameterSupported ( &lt;a href=&quot;qcameraviewfindersettingscontrol#ViewfinderParameter-enum&quot;&gt;QCameraViewfinderSettingsControl :: ViewfinderParameter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="268736c1af4bcd2a4112c8aa838ff7539c92d78c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCanBusDevice::writeFrame(const &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCanBusDevice :: writeFrame (const &lt;a href=&quot;qcanbusframe&quot;&gt;QCanBusFrame&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d80600164699eb3ef9acd7b3c53751c903d67285" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QCompassFilter::filter(&lt;a href=&quot;qcompassreading&quot;&gt;QCompassReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QCompassFilter :: filter ( &lt;a href=&quot;qcompassreading&quot;&gt;QCompassReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="343e032572f377e199923691ecbb5512eddb3312" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDBusVirtualObject::handleMessage(const &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDBusVirtualObject :: handleMessage (const &lt;a href=&quot;qdbusmessage&quot;&gt;QDBusMessage&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d1a44ad97939e6c59e909c1a8f4662fbf44c5e92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerCustomWidgetInterface::isContainer() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerCustomWidgetInterface :: isContainer () const</target>
        </trans-unit>
        <trans-unit id="5db4f6ad140c664e4d788b1b7f61656d01224958" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerDynamicPropertySheetExtension::canAddDynamicProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerDynamicPropertySheetExtension :: canAddDynamicProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a8732a14c33ac91e284bdc15f3286755fb69035d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerDynamicPropertySheetExtension::dynamicPropertiesAllowed() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerDynamicPropertySheetExtension :: dynamicPropertiesAllowed () const</target>
        </trans-unit>
        <trans-unit id="7d9aa49edaab8598fca4e9b460543eaaa780cdca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerDynamicPropertySheetExtension::isDynamicProperty(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerDynamicPropertySheetExtension :: isDynamicProperty (int</target>
        </trans-unit>
        <trans-unit id="fcf6ca041177e9d90c1d1e0cc4ad50160b067625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerDynamicPropertySheetExtension::removeDynamicProperty(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerDynamicPropertySheetExtension :: removeDynamicProperty (int</target>
        </trans-unit>
        <trans-unit id="512ed74770657165a34a710bbfacb2a180f82db0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerFormWindowCursorInterface::hasSelection() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerFormWindowCursorInterface :: hasSelection () const</target>
        </trans-unit>
        <trans-unit id="3187278a10ca9ac03f011f5ce65b11e456d8be8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerFormWindowCursorInterface::movePosition(&lt;a href=&quot;qdesignerformwindowcursorinterface#MoveOperation-enum&quot;&gt;QDesignerFormWindowCursorInterface::MoveOperation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerFormWindowCursorInterface :: movePosition ( &lt;a href=&quot;qdesignerformwindowcursorinterface#MoveOperation-enum&quot;&gt;QDesignerFormWindowCursorInterface :: MoveOperation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3cc5052dfdbff831804d944662d785d65a2b5d7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerFormWindowInterface::hasFeature(&lt;a href=&quot;qdesignerformwindowinterface#FeatureFlag-enum&quot;&gt;QDesignerFormWindowInterface::Feature&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerFormWindowInterface :: hasFeature ( &lt;a href=&quot;qdesignerformwindowinterface#FeatureFlag-enum&quot;&gt;QDesignerFormWindowInterface :: Feature&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d2d79447d248dae7d1c85a72f0ae2c09bc2188f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerFormWindowInterface::isDirty() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerFormWindowInterface :: isDirty () const</target>
        </trans-unit>
        <trans-unit id="d065aa99f4060fb06b743d30f92fc743b611aa37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerFormWindowInterface::isManaged(&lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerFormWindowInterface :: isManaged ( &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="91e8c5edab4525a225ab3d36f50c3e7c69996fe1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerFormWindowInterface::setContents(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerFormWindowInterface :: setContents ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3f5fccabc56424ca5ae54f9c66a6f5d23e39dfa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerPropertyEditorInterface::isReadOnly() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerPropertyEditorInterface :: isReadOnly () const</target>
        </trans-unit>
        <trans-unit id="c3aee038cb9cc4de4fc699c740d3ce49164f2895" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerPropertySheetExtension::hasReset(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerPropertySheetExtension :: hasReset (int</target>
        </trans-unit>
        <trans-unit id="f5b6303851439aee6a505645f8acce3be3bec0c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerPropertySheetExtension::isAttribute(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerPropertySheetExtension :: isAttribute (int</target>
        </trans-unit>
        <trans-unit id="094a9f583c1765506dd3c557400ff775d022ae65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerPropertySheetExtension::isChanged(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerPropertySheetExtension :: isChanged (int</target>
        </trans-unit>
        <trans-unit id="e32ee988acec435acfe2081330a57d7a32272b4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerPropertySheetExtension::isVisible(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerPropertySheetExtension :: isVisible (int</target>
        </trans-unit>
        <trans-unit id="90a2637ca7ef10c0aea534170a072a2f48e7a796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerPropertySheetExtension::reset(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerPropertySheetExtension :: reset (int</target>
        </trans-unit>
        <trans-unit id="1a2c6317d12fe46938d7ed9966208d6cba4742d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerWidgetBoxInterface::load()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerWidgetBoxInterface :: load ()</target>
        </trans-unit>
        <trans-unit id="b8d3b48f0ac4d4f2d276fee161e401593b94fd17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDesignerWidgetBoxInterface::save()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDesignerWidgetBoxInterface :: save ()</target>
        </trans-unit>
        <trans-unit id="a91a53a653310832070b3c41941a04050470c893" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QDistanceFilter::filter(&lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QDistanceFilter :: filter ( &lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a0888518a9295845102658a3d6964a948790f13e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QGeoAreaMonitorSource::requestUpdate(const &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QGeoAreaMonitorSource :: requestUpdate (const &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="04f112c39da3b49f9e8684e82a092b19e6ef4516" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QGeoAreaMonitorSource::startMonitoring(const &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QGeoAreaMonitorSource :: startMonitoring (const &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fe5ae111d06469d9798e29d20b9e2343e9c05a2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QGeoAreaMonitorSource::stopMonitoring(const &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QGeoAreaMonitorSource :: stopMonitoring (const &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ca0a15e952c82d5fbc951dc9ff195a5791080a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QGyroscopeFilter::filter(&lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QGyroscopeFilter :: filter ( &lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="949eff528c0e80a3285f2b2631f6398bbbbc7562" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QHolsterFilter::filter(&lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QHolsterFilter :: filter ( &lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="95daa347f1a461da089ebf9a26ba024f6784e0d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QHumidityFilter::filter(&lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QHumidityFilter :: filter ( &lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8ae2be7a461128ef231f4f8d622ceba6db8e4fd7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QIRProximityFilter::filter(&lt;a href=&quot;qirproximityreading&quot;&gt;QIRProximityReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QIRProximityFilter :: filter ( &lt;a href=&quot;qirproximityreading&quot;&gt;QIRProximityReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="18a20e00b899391d3789162da630320e33cd55a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QImageIOHandler::canRead() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QImageIOHandler :: canRead () const</target>
        </trans-unit>
        <trans-unit id="105af517eab683afa40e522358783c8936c581ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QImageIOHandler::read(&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QImageIOHandler :: read ( &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9192fcb16a116aeaee43c83edff44dff4b3ed699" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QLayoutItem::isEmpty() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QLayoutItem :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="bd4d9ee63b5daccb3d2c2c0e3978b9d6c2282a04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QLidFilter::filter(&lt;a href=&quot;qlidreading&quot;&gt;QLidReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QLidFilter :: filter ( &lt;a href=&quot;qlidreading&quot;&gt;QLidReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6b81d2b8db7b1c4ee0867644d2be30ce0c9fb756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QLightFilter::filter(&lt;a href=&quot;qlightreading&quot;&gt;QLightReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QLightFilter :: filter ( &lt;a href=&quot;qlightreading&quot;&gt;QLightReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9ad160a2da1efa004f281ddfb6c940597495a264" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMacPasteboardMime::canConvert(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMacPasteboardMime :: canConvert (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a58a334a79b707ed7ddd87f45b2efacd3d8ec4dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMagnetometerFilter::filter(&lt;a href=&quot;qmagnetometerreading&quot;&gt;QMagnetometerReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMagnetometerFilter :: filter ( &lt;a href=&quot;qmagnetometerreading&quot;&gt;QMagnetometerReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4ea31122f3c9d56d7520c7461e9a30f8528da675" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMaskGenerator::seed()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMaskGenerator :: seed ()</target>
        </trans-unit>
        <trans-unit id="c79a0debbc7d6f3257dde667efae230104fa709d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMediaGaplessPlaybackControl::isCrossfadeSupported() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMediaGaplessPlaybackControl :: isCrossfadeSupported () const</target>
        </trans-unit>
        <trans-unit id="106780f721125f86f75933f3b7a4e7191b689313" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMediaPlayerControl::isAudioAvailable() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMediaPlayerControl :: isAudioAvailable () const</target>
        </trans-unit>
        <trans-unit id="e470a0a9b515f2b31cfbc2ab334743533b3f73c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMediaPlayerControl::isMuted() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMediaPlayerControl :: isMuted () const</target>
        </trans-unit>
        <trans-unit id="23e11f06094ebd36f08a84e3f08cf535c5689f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMediaPlayerControl::isSeekable() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMediaPlayerControl :: isSeekable () const</target>
        </trans-unit>
        <trans-unit id="cf86da8695089eaff2dc6198b6aab37ec10be447" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMediaPlayerControl::isVideoAvailable() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMediaPlayerControl :: isVideoAvailable () const</target>
        </trans-unit>
        <trans-unit id="fcd2e0e9dd3b67746e710d8e1eb245db852e78bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMediaRecorderControl::isMuted() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMediaRecorderControl :: isMuted () const</target>
        </trans-unit>
        <trans-unit id="8602d0a187b0113fde6e2bf9b8b5ad56f1a02131" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMediaRecorderControl::setOutputLocation(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMediaRecorderControl :: setOutputLocation (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1d71cc9f62e1833660d3ae5cac08f279d674523d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMediaStreamsControl::isActive(int</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMediaStreamsControl :: isActive (int</target>
        </trans-unit>
        <trans-unit id="81534ecc323277c695c3b324a61dd026ae584898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMetaDataReaderControl::isMetaDataAvailable() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMetaDataReaderControl :: isMetaDataAvailable () const</target>
        </trans-unit>
        <trans-unit id="e9ebcfda70b058d76271782af3c1eab8d559112c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMetaDataWriterControl::isMetaDataAvailable() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMetaDataWriterControl :: isMetaDataAvailable () const</target>
        </trans-unit>
        <trans-unit id="2be4bf1fa77c81424758fe0625fb19a3eecefca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QMetaDataWriterControl::isWritable() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QMetaDataWriterControl :: isWritable () const</target>
        </trans-unit>
        <trans-unit id="716dae0589afa1a9a433f70fa0ac607c73d46b31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QModbusTcpConnectionObserver::acceptNewConnection(QTcpSocket *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QModbusTcpConnectionObserver :: acceptNewConnection (QTcpSocket *</target>
        </trans-unit>
        <trans-unit id="c18e07634b871c036137b2cbfcc343e528093b7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QOrientationFilter::filter(&lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QOrientationFilter :: filter ( &lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ca6daf4407dcbf13f6f6d057d9ec1c1bb05445d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QPagedPaintDevice::newPage()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QPagedPaintDevice :: newPage ()</target>
        </trans-unit>
        <trans-unit id="7d8222649cfb1a0eb5d7be60e671afed9199edb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QPaintEngine::begin(&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QPaintEngine :: begin ( &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8cd5afae92ee1dbd0652b8099b1a224e2b3d2053" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QPaintEngine::end()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QPaintEngine :: end ()</target>
        </trans-unit>
        <trans-unit id="5f66169b52bc55b15f4999cbe3d11d2f068dbc4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QPictureFormatPlugin::installIOHandler(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QPictureFormatPlugin :: installIOHandler (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5fa7fd57a03195a6416243ec47c36e0d23d4dcab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QPressureFilter::filter(&lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QPressureFilter :: filter ( &lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="06f85a66d1dec22bb9abe2fc07ba67c33f519235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QPrintEngine::abort()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QPrintEngine :: abort ()</target>
        </trans-unit>
        <trans-unit id="d1d9f5ff32d0925c007e9899dd5aa9ab5b9b8715" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QPrintEngine::newPage()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QPrintEngine :: newPage ()</target>
        </trans-unit>
        <trans-unit id="877f26c26c92f8f8e1ae2fe95e198e3f32674b9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QProximityFilter::filter(&lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QProximityFilter :: filter ( &lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f2cf990f83e299b57e75d475519043707cc4e2ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QRadioDataControl::isAlternativeFrequenciesEnabled() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QRadioDataControl :: isAlternativeFrequenciesEnabled () const</target>
        </trans-unit>
        <trans-unit id="ce9e339d048ecb58d92c2fbbefc31f6469c2b286" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QRadioTunerControl::isBandSupported(&lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner::Band&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QRadioTunerControl :: isBandSupported ( &lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner :: Band&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d83b60c2e18ec50abdc0399475e6538b807c9ddb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QRadioTunerControl::isMuted() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QRadioTunerControl :: isMuted () const</target>
        </trans-unit>
        <trans-unit id="7fc83ddd26ad5ceae82c890e6859df6b10c8cbf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QRadioTunerControl::isSearching() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QRadioTunerControl :: isSearching () const</target>
        </trans-unit>
        <trans-unit id="69cd23152f74e9676035548d827ac33cd79e0571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QRadioTunerControl::isStereo() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QRadioTunerControl :: isStereo () const</target>
        </trans-unit>
        <trans-unit id="cc45401a107024e2fe99aceecec0b5635ab9ab40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QRotationFilter::filter(&lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QRotationFilter :: filter ( &lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9e212ff4ffb370979ba4a26aac474288cbf3b20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QSGDynamicTexture::updateTexture()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QSGDynamicTexture :: updateTexture ()</target>
        </trans-unit>
        <trans-unit id="3d0d74eda9af80fee35438a5e4acbb8459b3c205" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QSGImageNode::ownsTexture() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QSGImageNode :: ownsTexture () const</target>
        </trans-unit>
        <trans-unit id="fddc1048e1c8332bf9ddb777327f4e267f5344ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QSGTexture::hasAlphaChannel() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QSGTexture :: hasAlphaChannel () const</target>
        </trans-unit>
        <trans-unit id="d9eff9acc3827fe7cd785233af8adcd26b781008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QSGTexture::hasMipmaps() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QSGTexture :: hasMipmaps () const</target>
        </trans-unit>
        <trans-unit id="34e5abb87830e24ae87bcab81eacb5decb3c7902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QScxmlDataModel::evaluateToBool(&lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;QScxmlExecutableContent::EvaluatorId&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QScxmlDataModel :: &lt;a href=&quot;qscxmlexecutablecontent#EvaluatorId-typedef&quot;&gt;valuToBool&lt;/a&gt; ( QScxmlExecutableContent :: EvaluatorId</target>
        </trans-unit>
        <trans-unit id="d3cb9223b26334109edfc8696b42dc3629281659" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QScxmlDataModel::hasScxmlProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QScxmlDataModel :: hasScxmlProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="31956ce5453ec4f9996c6570903ec188cb7aa634" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QScxmlDataModel::setScxmlProperty(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QScxmlDataModel :: setScxmlProperty (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="da43f7541ac0acb51786a769100892229e0bb7e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QScxmlDataModel::setup(const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QScxmlDataModel :: setup (const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="14c94457624f5e3466036da0122bc9e9a932fff6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QScxmlInvokableService::start()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QScxmlInvokableService :: start ()</target>
        </trans-unit>
        <trans-unit id="71cd964a3bff4369d0e0f33a762258babe9b350b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QSensorFilter::filter(&lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QSensorFilter :: filter ( &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6ccec4cb46b7d976b1685fdde584a14f494af1df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QSensorGestureRecognizer::isActive()</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QSensorGestureRecognizer :: isActive ()</target>
        </trans-unit>
        <trans-unit id="83a8df595cc6790ea880e86dcae25e3120d6503d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QSqlDriver::hasFeature(&lt;a href=&quot;qsqldriver#DriverFeature-enum&quot;&gt;QSqlDriver::DriverFeature&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QSqlDriver :: hasFeature ( &lt;a href=&quot;qsqldriver#DriverFeature-enum&quot;&gt;QSqlDriver :: DriverFeature&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05c2a1c1e85c82dbf0581166b000bdc8ea5fb258" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QSqlDriver::open(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QSqlDriver :: open (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3eb8d790a2ef893a63227e420802152acbeeb855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTapFilter::filter(&lt;a href=&quot;qtapreading&quot;&gt;QTapReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QTapFilter :: filter ( &lt;a href=&quot;qtapreading&quot;&gt;QTapReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a265c63c30626a15263fac23777e0b26b27f3e43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTextToSpeechEngine::setLocale(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QTextToSpeechEngine :: setLocale (const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1641902bba2f5860994ba2fdc2d5a47d34ed7ce4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTextToSpeechEngine::setPitch(double</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QTextToSpeechEngine :: setPitch (double</target>
        </trans-unit>
        <trans-unit id="140b840ff67cef0a0f97b3559b3090dcf1b33ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTextToSpeechEngine::setRate(double</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QTextToSpeechEngine :: setRate (double</target>
        </trans-unit>
        <trans-unit id="5d3de8b67e9e1896ff636ba9d02afcc151f37beb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTextToSpeechEngine::setVoice(const &lt;a href=&quot;qvoice&quot;&gt;QVoice&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QTextToSpeechEngine :: setVoice (const &lt;a href=&quot;qvoice&quot;&gt;QVoice&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e144028983017409497290c15c246e4cf0a59d4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTextToSpeechEngine::setVolume(double</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QTextToSpeechEngine :: setVolume (double</target>
        </trans-unit>
        <trans-unit id="a78ac44b9a053967f3f611ecca4f09e200372437" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTextureGenerator::operator==(const &lt;a href=&quot;qt3drender-qtexturegenerator&quot;&gt;Qt3DRender::QTextureGenerator&lt;/a&gt; &amp;amp;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd51ec6a3de07f91b1c832acd425129150d391ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTextureImageDataGenerator::operator==(const &lt;a href=&quot;qt3drender-qtextureimagedatagenerator&quot;&gt;Qt3DRender::QTextureImageDataGenerator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QTextureImageDataGenerator :: operator == (const &lt;a href=&quot;qt3drender-qtextureimagedatagenerator&quot;&gt;Qt3DRender :: QTextureImageDataGenerator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9fc254c9537823f649974104885cca5ca0766786" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QTiltFilter::filter(&lt;a href=&quot;qtiltreading&quot;&gt;QTiltReading&lt;/a&gt; *</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QTiltFilter :: filter ( &lt;a href=&quot;qtiltreading&quot;&gt;QTiltReading&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1b6ff9fa494c172125606af0bbe14641de2ba38b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QVideoWidgetControl::isFullScreen() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QVideoWidgetControl :: isFullScreen () const</target>
        </trans-unit>
        <trans-unit id="2eb7e14530f71f225d3afe4b880fdb5fdb27cc1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QVideoWindowControl::isFullScreen() const</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QVideoWindowControl :: isFullScreen () const</target>
        </trans-unit>
        <trans-unit id="431b561801c42f1cd84b3885a32d42bc1a4d0e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QVirtualKeyboardAbstractInputMethod::keyEvent(&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QVirtualKeyboardAbstractInputMethod :: keyEvent ( &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="216ff3641e3092389adeddbc99dc6d9aed2fa247" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[pure virtual] &lt;/code&gt;bool QVirtualKeyboardAbstractInputMethod::setInputMode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;code&gt;[pure virtual] &lt;/code&gt; bool QVirtualKeyboardAbstractInputMethod :: setInputMode (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
