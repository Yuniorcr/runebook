<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="octave">
    <body>
      <group id="octave">
        <trans-unit id="c44161703e449927845e12c4b18189b1b2e1a57e" translate="yes" xml:space="preserve">
          <source>Convert a color indexed image to a grayscale intensity image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5221c8b344d84ad3d2ebd29fa997385f661beb" translate="yes" xml:space="preserve">
          <source>Convert a grayscale or binary intensity image to an indexed image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9d02877df354d2d8b22e3557db0b66c663d278" translate="yes" xml:space="preserve">
          <source>Convert a number (or array) to a string (or a character array).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fd9c3c57fcdb1f8a47988532b1d79da8f0bcdb" translate="yes" xml:space="preserve">
          <source>Convert a numeric array to an array of hexadecimal strings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eb1d41c1e9f769fdfdbf6cbf68c3f18f024b844" translate="yes" xml:space="preserve">
          <source>Convert a real, upper quasi-triangular Schur form &lt;var&gt;TR&lt;/var&gt; to a complex, upper triangular Schur form &lt;var&gt;T&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8144d9c980f4fa97a1ef53dfd0cdf4821fc79b03" translate="yes" xml:space="preserve">
          <source>Convert a serial date number (see &lt;code&gt;datenum&lt;/code&gt;) or date string (see &lt;code&gt;datestr&lt;/code&gt;) into a date vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d4744c2a7f2863ca40541aba3b946c805c937a" translate="yes" xml:space="preserve">
          <source>Convert a simple sparse matrix format easily generated by other programs into Octave&amp;rsquo;s internal sparse format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b036a3b8f4e61ea4d352f674bcccf84031df2d6" translate="yes" xml:space="preserve">
          <source>Convert a string to a real or complex number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d42856e4cf102cc51c09c74b34a48f9f8bf03a" translate="yes" xml:space="preserve">
          <source>Convert a time structure corresponding to the local time to the number of seconds since the epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd50c5742a915046c58fec3c8df53e97d15cdf6d" translate="yes" xml:space="preserve">
          <source>Convert a time structure to a string using the following format: &lt;code&gt;&quot;ddd mmm mm HH:MM:SS yyyy\n&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19997b090ca9bf37e9a498122c950f61a06e2b73" translate="yes" xml:space="preserve">
          <source>Convert a value returned from &lt;code&gt;time&lt;/code&gt; (or any other non-negative integer), to the local time and return a string of the same form as &lt;code&gt;asctime&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401b763fce6505cf58e8505a6e3002610b9602f8" translate="yes" xml:space="preserve">
          <source>Convert an image in red-green-blue (RGB) color space to an indexed image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174872bdca13ede59fb05b9376736dfee76bb63e" translate="yes" xml:space="preserve">
          <source>Convert an indexed image to red, green, and blue color components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bb81fdf3ac9b5281a922abc3f3f355e737ae2b" translate="yes" xml:space="preserve">
          <source>Convert an input image &lt;var&gt;X&lt;/var&gt; to an ouput indexed image &lt;var&gt;Y&lt;/var&gt; which uses the smallest colormap possible &lt;var&gt;newmap&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3cb6782265687d93cc652ff35307d7c4629433" translate="yes" xml:space="preserve">
          <source>Convert an integer (or array of integers) to a string (or a character array).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7e76ef5229de26e477b16700f33e85e41e0c29" translate="yes" xml:space="preserve">
          <source>Convert an object to an index vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788772db8bba7192b2875ef2b50ed9679eaf33b2" translate="yes" xml:space="preserve">
          <source>Convert any object acceptable to &lt;code&gt;disp&lt;/code&gt; into the format selected by the suffix of &lt;var&gt;filename&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27a1408f0e194d27469f72f687a65ee176054c5" translate="yes" xml:space="preserve">
          <source>Convert audio data from linear to mu-law.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e55f0e6d89d8fc6e1c67f535f955b27457fae3" translate="yes" xml:space="preserve">
          <source>Convert audio data from mu-law to linear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd264f3db6a60d1d6ed9f00c70af42db8645dfd0" translate="yes" xml:space="preserve">
          <source>Convert byte stream &lt;var&gt;native_bytes&lt;/var&gt; to UTF-8 using &lt;var&gt;codepage&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c74125f9eb5b2eded718ae9e9b6a5629f1e5f87" translate="yes" xml:space="preserve">
          <source>Convert degrees to radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fcf93844281b03b79f7e4131a2ea15831087e2" translate="yes" xml:space="preserve">
          <source>Convert escape sequences in &lt;var&gt;string&lt;/var&gt; to the characters they represent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3590ac96693fab64623b9690d7692612f627d36e" translate="yes" xml:space="preserve">
          <source>Convert image to double precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd7c79f898c7df83cc9b0543fcb2dcc9c51e485" translate="yes" xml:space="preserve">
          <source>Convert image to movie frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ca2aa76109df00e52ba71dc3939e640e4d4e91" translate="yes" xml:space="preserve">
          <source>Convert linear indices to subscripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cd4a140d03b8963a983f7d9f06d820393771c9" translate="yes" xml:space="preserve">
          <source>Convert movie frame to indexed image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8c6eda99b1b886940af0a620fe065ed8b11724" translate="yes" xml:space="preserve">
          <source>Convert object to index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d816cb09c7b3e1292729075bfe75c2f44c1f1df1" translate="yes" xml:space="preserve">
          <source>Convert radians to degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e57b5a12501f8b1f429da91ae1f061221021dd0" translate="yes" xml:space="preserve">
          <source>Convert special characters in strings back to their escaped forms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcf78531ddc02bc1e49a3723dfc17044eaa81e3" translate="yes" xml:space="preserve">
          <source>Convert subscripts to linear indices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a707027e944448998261e349be28a80bf87bfb3" translate="yes" xml:space="preserve">
          <source>Convert the cell array &lt;var&gt;c&lt;/var&gt; into a matrix by concatenating all elements of &lt;var&gt;c&lt;/var&gt; into a hyperrectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a429bedfa7f0b88df6d35595d7d620e994ed7f59" translate="yes" xml:space="preserve">
          <source>Convert the matrix &lt;var&gt;A&lt;/var&gt; to a cell array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e86b8f060062c8d6c61f331d1375bbc54118107" translate="yes" xml:space="preserve">
          <source>Convert the numeric matrix &lt;var&gt;A&lt;/var&gt; to a cell array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d12248de041eee889772d22a5d5accae5f3540" translate="yes" xml:space="preserve">
          <source>Convert the numeric object &lt;var&gt;x&lt;/var&gt; to logical type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba813b572cc0677b072842bdb4a39a4a23374fdd" translate="yes" xml:space="preserve">
          <source>Convert the string (or character array) &lt;var&gt;s&lt;/var&gt; to a number (or an array).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b854387467d3b584a3ed42172e45acad1143bc" translate="yes" xml:space="preserve">
          <source>Convert the string &lt;var&gt;str&lt;/var&gt; to the time structure &lt;var&gt;tm_struct&lt;/var&gt; under the control of the format string &lt;var&gt;fmt&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af86a712bb9b57b1a61bbabfa2d14e6be4f3717" translate="yes" xml:space="preserve">
          <source>Converting Numerical Data to Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483fd10c0462c898db63a6f60deb826ab8ef765c" translate="yes" xml:space="preserve">
          <source>Convex Hull</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fd38ec12fd1765907ab984d9fb555e6d7a4e23d" translate="yes" xml:space="preserve">
          <source>Convolve two vectors &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97390b96a4ad4a95c68b9af87589b16095fcd538" translate="yes" xml:space="preserve">
          <source>Convolve two vectors using the FFT for computation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b65cb23b30d5ea894c97776cfb28fbaefd3d0e" translate="yes" xml:space="preserve">
          <source>Coordinate Transformations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a50da7179010f44990182a6c782b87cca13c05" translate="yes" xml:space="preserve">
          <source>Copy the input parameters into the corresponding output parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befd0016f642035b32e1ff7b8f55a7812fb14489" translate="yes" xml:space="preserve">
          <source>Copy the source file(s) or directory &lt;var&gt;f1&lt;/var&gt; to the destination &lt;var&gt;f2&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b7de9894fd26b8d14ca6988e963239baff6ad4" translate="yes" xml:space="preserve">
          <source>Copying</source>
          <target state="translated">Copying</target>
        </trans-unit>
        <trans-unit id="a420abf6e89816696d0724f377c00c6447c28f0a" translate="yes" xml:space="preserve">
          <source>Copyright</source>
          <target state="translated">Copyright</target>
        </trans-unit>
        <trans-unit id="fbbb63950558c9d22db76c7fe3fbd681ccbfedb6" translate="yes" xml:space="preserve">
          <source>Copyright notice of the person or organization claiming rights to the image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf4532c463a1b2873579d7cc640f5b6f77ae3c9" translate="yes" xml:space="preserve">
          <source>CorelDraw</source>
          <target state="translated">CorelDraw</target>
        </trans-unit>
        <trans-unit id="ee67a870a6b6fe30de56fc58ecc3cee98d7dcf73" translate="yes" xml:space="preserve">
          <source>Correlation and Regression Analysis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94ced2dd72da3f4fb6e884136707f6b237393b5" translate="yes" xml:space="preserve">
          <source>Count the upward runs along the first non-singleton dimension of &lt;var&gt;x&lt;/var&gt; of length 1, 2, &amp;hellip;, &lt;var&gt;n&lt;/var&gt;-1 and greater than or equal to &lt;var&gt;n&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881e2c25bc6c56f0ac72f21c20a7f279660f8a44" translate="yes" xml:space="preserve">
          <source>Create a &amp;lsquo;counterexample&amp;rsquo; matrix to a condition estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38f44691ea5e1c9ba2b3bea1a1615d4eca239eb" translate="yes" xml:space="preserve">
          <source>Create a (0, 1) matrix whose inverse has large integer entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b866e0417c31ffa6e72ca4a68daf3640f33607d" translate="yes" xml:space="preserve">
          <source>Create a 2-D contour plot with filled intervals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d3e8167c1dfd5c75fce5bf7b642ab866e14976" translate="yes" xml:space="preserve">
          <source>Create a 2-D contour plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eab69f700e72e56f352c088f3cac0f340992a6b" translate="yes" xml:space="preserve">
          <source>Create a 2-D plot from polar coordinates &lt;var&gt;theta&lt;/var&gt; and &lt;var&gt;rho&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6eeabf212e500b9a83409413617bbc5a0c37d33" translate="yes" xml:space="preserve">
          <source>Create a 2-D plot with errorbars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7920355db1c41ad58502e052cdd3d25b55f8859c" translate="yes" xml:space="preserve">
          <source>Create a 3-D contour plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f6adae62159ea113028e8d321a47e76513d2ffa" translate="yes" xml:space="preserve">
          <source>Create a Cartesian axes object and return a handle to it, or set the current axes to &lt;var&gt;hax&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6162749e9bff4ad60c9282103ebacf5c449ec7dc" translate="yes" xml:space="preserve">
          <source>Create a Cauchy matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a86e9cdf1886f5c244d73618a69adaf599d7d824" translate="yes" xml:space="preserve">
          <source>Create a Chebyshev spectral differentiation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d4bff088dfd929d5e6fd7dc924839c1350d085" translate="yes" xml:space="preserve">
          <source>Create a Chow matrix &amp;ndash; a singular Toeplitz lower Hessenberg matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c71860670542c69ab3fd8b9ea5f0a31e72adf18" translate="yes" xml:space="preserve">
          <source>Create a FIFO special file named &lt;var&gt;name&lt;/var&gt; with file mode &lt;var&gt;mode&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690d3de5b828e9077b6317728d8ee22b656d5b4e" translate="yes" xml:space="preserve">
          <source>Create a Forsythe matrix (a perturbed Jordan block).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d518611725c82a17143bb6cf858bb9e231d9b9f" translate="yes" xml:space="preserve">
          <source>Create a Frank matrix (ill-conditioned eigenvalues).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea38130ed271d7c7a1bdb05ead38c2870bad600" translate="yes" xml:space="preserve">
          <source>Create a Gear matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f980a866bfdc3e1c314cf74d45281ef42043100" translate="yes" xml:space="preserve">
          <source>Create a Hankel matrix with factorial elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b12942b267140fcde8ab14141f9d1620c820ce" translate="yes" xml:space="preserve">
          <source>Create a Java array of size &lt;var&gt;sz&lt;/var&gt; with elements of class &lt;var&gt;classname&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96c1639f731518fafb31292c13fa3b0174c81a1" translate="yes" xml:space="preserve">
          <source>Create a Java object of class &lt;var&gt;classsname&lt;/var&gt;, by calling the class constructor with the arguments &lt;var&gt;arg1&lt;/var&gt;, &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c76c41243202dc423f8a23d1a1305e1b343be1" translate="yes" xml:space="preserve">
          <source>Create a Jordan block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058a30569c34ca547b8a5e7cd6b7ce602d3fb59b" translate="yes" xml:space="preserve">
          <source>Create a Kac-Murdock-Szego Toeplitz matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baac20ff2e91c08b90db4a94020ff6311671acf" translate="yes" xml:space="preserve">
          <source>Create a Kahan matrix (upper trapezoidal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8fcf43680175c7c05c6c296997a118b505666f1" translate="yes" xml:space="preserve">
          <source>Create a Krylov matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741c03b4f4b50d5a559e7177811402a18eee2cba" translate="yes" xml:space="preserve">
          <source>Create a Lauchli matrix (rectangular).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5e0370e133d72de978afcd71b79af50e4c7e5e" translate="yes" xml:space="preserve">
          <source>Create a Lehmer matrix (symmetric positive definite).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7399480def949a9ddf1202d8b1ceb5569fed23f6" translate="yes" xml:space="preserve">
          <source>Create a Lotkin matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38603ab9bfdce062ebefb113dd917df039b8119e" translate="yes" xml:space="preserve">
          <source>Create a Moler matrix (symmetric positive definite).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a41d7179d9c1ff49ff0e575dd99b33c1edb161" translate="yes" xml:space="preserve">
          <source>Create a Parter matrix (a Toeplitz matrix with singular values near pi).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab6c23fb4651564fc7d633beb2d282853335bfa" translate="yes" xml:space="preserve">
          <source>Create a Pei matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd587f4b8da56ead4b3c016e7cd172d9d2110c7" translate="yes" xml:space="preserve">
          <source>Create a Toeplitz matrix with sensitive eigenvalues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="496f3ecd68d6b53eb239dd5f2481121406edc34c" translate="yes" xml:space="preserve">
          <source>Create a Vandermonde-like matrix for the Chebyshev polynomials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2acbd008af5a85e447c9c2e84385f97e183278e0" translate="yes" xml:space="preserve">
          <source>Create a block tridiagonal matrix from Poisson&amp;rsquo;s equation (sparse).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d6f7bd14c2c33d3ea0e5c18bed77dab31845a1" translate="yes" xml:space="preserve">
          <source>Create a character array from one or more numeric matrices, character matrices, or cell arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9302862d5d1fb273d03921b10050d55d11b1d3fd" translate="yes" xml:space="preserve">
          <source>Create a checkbox control that allows user on/off selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a8334cb2844bb2a5c22f223831fec6513b438b4" translate="yes" xml:space="preserve">
          <source>Create a circulant matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0033074f0fefedc9648ad6a5269153a9925eb85d" translate="yes" xml:space="preserve">
          <source>Create a comparison matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a9caeaaa9e3a58866c1e97b61cfd9b3045cedb" translate="yes" xml:space="preserve">
          <source>Create a complex matrix, with a &amp;lsquo;smoke ring&amp;rsquo; pseudospectrum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6faf6e7d8bb2326fb46bb46cdf21613e5d1cc9c8" translate="yes" xml:space="preserve">
          <source>Create a copy of the current process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd06b8b3ef9ccade9a2345776dc309cb2fb42c59" translate="yes" xml:space="preserve">
          <source>Create a diagonally dominant, ill-conditioned, tridiagonal matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d418f61c8e215e864b7a609af5df5d32888ed87e" translate="yes" xml:space="preserve">
          <source>Create a directory named &lt;var&gt;dirname&lt;/var&gt; in the directory &lt;var&gt;parent&lt;/var&gt;, creating any intermediate directories if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e77dbccea10c97e0d9a1c835b664eab054e206e" translate="yes" xml:space="preserve">
          <source>Create a graphics transform object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24b1caa3fa34ece50e6131b9e2830da97be2615" translate="yes" xml:space="preserve">
          <source>Create a greatest common divisor matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c94536da77376694fb7027de04653ed255d08d" translate="yes" xml:space="preserve">
          <source>Create a householder matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9565e59ac17ff72fe0eb30cd948f3d26e6bd2b54" translate="yes" xml:space="preserve">
          <source>Create a light object in the current axes or for axes &lt;var&gt;hax&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afe22602c40312008e5cda54508b2ef9b746dde2" translate="yes" xml:space="preserve">
          <source>Create a line object from &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; (and possibly &lt;var&gt;z&lt;/var&gt;) and insert it in the current axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37673f994dbd59198250287a4cb97749eea6575f" translate="yes" xml:space="preserve">
          <source>Create a listbox control that displays a list of items and allows user selection of single or multiple items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58517d977f9c10203160113c3f3c40d13c5d392d" translate="yes" xml:space="preserve">
          <source>Create a matrix associated with the Riemann hypothesis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bc2d9d16e912c527a6fb5acbea2e7c7507db9c" translate="yes" xml:space="preserve">
          <source>Create a matrix whose columns repeat cyclically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc39ca2b9c03d296d07c885ed5cbf9ab902c5e9" translate="yes" xml:space="preserve">
          <source>Create a matrix whose eigenvalues lie on a vertical line in the complex plane.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9d030de70634d0c8b8c19b34da567b60cc3bda" translate="yes" xml:space="preserve">
          <source>Create a matrix with random integers in the range [1, &lt;var&gt;imax&lt;/var&gt;]. If &lt;var&gt;imin&lt;/var&gt; is given then the integers are in the range [&lt;var&gt;imin&lt;/var&gt;, &lt;var&gt;imax&lt;/var&gt;].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36929b7cd906be774c6f1dfb0bb9065e69aefe3c" translate="yes" xml:space="preserve">
          <source>Create a matrix with random samples from the standard normal distribution (mean = 0, std = 1).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48e375494084d28390ff67a557bc9ef81f50f06" translate="yes" xml:space="preserve">
          <source>Create a matrix with random samples from the standard uniform distribution (range [0,1]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e5a6b0a9dc98a19abc59fec0e9cbf238c7c9da" translate="yes" xml:space="preserve">
          <source>Create a new cell array from the objects stored in the struct object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766cc9f4deff8e9d485c507a4a30f55696b19d98" translate="yes" xml:space="preserve">
          <source>Create a new cell array object from the elements of the string array &lt;var&gt;strmat&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40759639ab84fa697b73f202531b37f5a12e7b8" translate="yes" xml:space="preserve">
          <source>Create a new cell array object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ddfc94f080516ba2b2d8d69a1d3ea7e546170a" translate="yes" xml:space="preserve">
          <source>Create a new figure and make it the current figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d454bdfafd61b66e9edaf7d4e6ddb14da5c4a6d2" translate="yes" xml:space="preserve">
          <source>Create a new figure window for plotting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3299770605f1987ca70abd2922a2f8851ef98f31" translate="yes" xml:space="preserve">
          <source>Create a new link (also known as a hard link) to an existing file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573fefc8ffded88560d74661914fbb9ef6b62f48" translate="yes" xml:space="preserve">
          <source>Create a new property named &lt;var&gt;name&lt;/var&gt; in graphics object &lt;var&gt;h&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c58df2accb9904b11beab56c5fb9e703c4edf14" translate="yes" xml:space="preserve">
          <source>Create a pentadiagonal Toeplitz matrix (sparse).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224d73ca0b4c802f678eee98814b0d5aa8dbd6d6" translate="yes" xml:space="preserve">
          <source>Create a pipe and return the reading and writing ends of the pipe into &lt;var&gt;read_fd&lt;/var&gt; and &lt;var&gt;write_fd&lt;/var&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ee210e73dccb806711e27b751f28b32851b03bc" translate="yes" xml:space="preserve">
          <source>Create a popupmenu control that displays a list of options that can be selected when the user clicks on the control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e1959885bfd7e7c606f966ef43666d7b7377d3" translate="yes" xml:space="preserve">
          <source>Create a prolate matrix (symmetric, ill-conditioned Toeplitz matrix).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550a46571418ea569220cf557c847075b62b3f4f" translate="yes" xml:space="preserve">
          <source>Create a push button control that allows user to press to cause an action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f1fa12d6b0e77b266abfce58c50ffceb38e696" translate="yes" xml:space="preserve">
          <source>Create a radio button control intended to be used for mutually exclusive input in a group of radiobutton controls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4d50bab3668eeba5d360db95f7392682a210d3" translate="yes" xml:space="preserve">
          <source>Create a random matrix with elements -1, 0 or 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7d0bcfd2dec37c74204b5aa6d03594f4e62a82" translate="yes" xml:space="preserve">
          <source>Create a random matrix with pre-assigned singular values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbdabd280925ea8bc0a5841049cc8275726f042" translate="yes" xml:space="preserve">
          <source>Create a random, orthogonal upper Hessenberg matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe3de59cebc27e0a9a3e872208f79884a0028dd" translate="yes" xml:space="preserve">
          <source>Create a scalar or array structure and initialize its values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a2f6e49b370c8aa999da31bdb3d421b70dc1bf" translate="yes" xml:space="preserve">
          <source>Create a singular matrix from the discrete Neumann problem (sparse).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641505d678442a66b129597890ce5b2af4ba9030" translate="yes" xml:space="preserve">
          <source>Create a slider control that allows user selection from a range of values by sliding knob on the control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa259a3727ac71dfe00a27924c0f17a7d003f41" translate="yes" xml:space="preserve">
          <source>Create a sparse matrix from a full matrix, or row, column, value triplets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a52b19aa123c1c1415929dc25cb7a4b5f385275" translate="yes" xml:space="preserve">
          <source>Create a special object that executes a given function upon destruction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527c6ee88c67a8edd012e95a16850c5448916734" translate="yes" xml:space="preserve">
          <source>Create a static text control to display single or multiple lines of text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76228fd8246bd787b279a1d7cbe7a680380ecf5d" translate="yes" xml:space="preserve">
          <source>Create a string array from one or more numeric matrices, character matrices, or cell arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbfba5b4ba7ff14e1002cf9bed606f949312988e" translate="yes" xml:space="preserve">
          <source>Create a subscript structure for use with &lt;code&gt;subsref&lt;/code&gt; or &lt;code&gt;subsasgn&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dace74e7e65d2fa3202444603f157424877a1df4" translate="yes" xml:space="preserve">
          <source>Create a surface graphic object given matrices &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; from &lt;code&gt;meshgrid&lt;/code&gt; and a matrix of values &lt;var&gt;z&lt;/var&gt; corresponding to the &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; coordinates of the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d22ab2c519663ef80546a3cdd7ba17ab6795da" translate="yes" xml:space="preserve">
          <source>Create a symbolic link &lt;var&gt;new&lt;/var&gt; which contains the string &lt;var&gt;old&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc82160db1ae1d1620dd124ffc8ba017f047225e" translate="yes" xml:space="preserve">
          <source>Create a symmetric Fiedler matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3b86ca2a08923c5cc3deed191416b8ffc86072" translate="yes" xml:space="preserve">
          <source>Create a symmetric Hankel matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d03f1443308703cb111e0b7715790a4956f31f" translate="yes" xml:space="preserve">
          <source>Create a symmetric positive definite Toeplitz matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3007c1b15dec53c0df07585ea21ae2fbff160f60" translate="yes" xml:space="preserve">
          <source>Create a symmetric positive definite matrix MIN(i,j).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a71395ea1bb80d54b5ec2d524bc55b10c51bc1d" translate="yes" xml:space="preserve">
          <source>Create a text object with text &lt;var&gt;string&lt;/var&gt; at position &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, (&lt;var&gt;z&lt;/var&gt;) on the current axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c490699a2befb04d352a048e712d23c6d132de" translate="yes" xml:space="preserve">
          <source>Create a toggle button control that appears like a push button but allows the user to select between two states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f71c9131cc25bc0c3d371ad5293ac8e99035107" translate="yes" xml:space="preserve">
          <source>Create a tridiagonal matrix (sparse).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec1a0212db76993f7b484a4000a50043b910bebc" translate="yes" xml:space="preserve">
          <source>Create a tridiagonal matrix with real, sensitive eigenvalues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="279046bdd9a97d20ad469447dfa1e33ffe4ec9b3" translate="yes" xml:space="preserve">
          <source>Create a tridiagonal matrix with zero diagonal entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e19ee78b61f6683ef56e75af9de0b4eb8504537" translate="yes" xml:space="preserve">
          <source>Create a uibuttongroup object and return a handle to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ed47eaaecf207d7f8ddcab9746730598a26c86" translate="yes" xml:space="preserve">
          <source>Create a uicontextmenu object and return a handle to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e6dfc136be1037e0364e8247955f3bb9518eae" translate="yes" xml:space="preserve">
          <source>Create a uicontrol object and return a handle to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda8fdcf69729ca18a3725a19ddca83d6fd3ff9a" translate="yes" xml:space="preserve">
          <source>Create a uimenu object and return a handle to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f621ee2ee740373fb3833887623166073bd2af" translate="yes" xml:space="preserve">
          <source>Create a uipanel object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b484a2795a4e76f0811ac546b1a01a80c38ac9c" translate="yes" xml:space="preserve">
          <source>Create a uipushtool object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011326a796f1ead45946f3eac6b9ac1fe730dadc" translate="yes" xml:space="preserve">
          <source>Create a uitable object and return a handle to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12e4f679af10667c323affeb25273cebc874137" translate="yes" xml:space="preserve">
          <source>Create a uitoggletool object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa39de99d19bc02049c3acd32394573e330cf7b0" translate="yes" xml:space="preserve">
          <source>Create a uitoolbar object. A uitoolbar displays uitoggletool and uipushtool buttons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca02ebd6010ae88f58a94924a486ab7cdcf181f" translate="yes" xml:space="preserve">
          <source>Create a vectorized version of the inline function &lt;var&gt;fun&lt;/var&gt; by replacing all occurrences of &lt;code&gt;*&lt;/code&gt;, &lt;code&gt;/&lt;/code&gt;, etc., with &lt;code&gt;.*&lt;/code&gt;, &lt;code&gt;./&lt;/code&gt;, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e6015fae28972f153617731f814b81195e0b34" translate="yes" xml:space="preserve">
          <source>Create a zero and ones matrix of Redheffer associated with the Riemann hypothesis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ef669c0daa535155145b4a2eb51780e6f6a282" translate="yes" xml:space="preserve">
          <source>Create an &lt;var&gt;m&lt;/var&gt;-by-&lt;var&gt;n&lt;/var&gt; sparse matrix with pre-allocated space for at most &lt;var&gt;nz&lt;/var&gt; nonzero elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869113c0081da70c397e07c9206666d870e0822f" translate="yes" xml:space="preserve">
          <source>Create an &lt;var&gt;n&lt;/var&gt;-by-&lt;var&gt;n&lt;/var&gt; magic square.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1ba248edaf3d9ef3f3e517633f0486f454b657" translate="yes" xml:space="preserve">
          <source>Create an array by accumulating the elements of a vector into the positions defined by their subscripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c58448403ee9b23b252197a50879c2c03d44471" translate="yes" xml:space="preserve">
          <source>Create an array by accumulating the slices of an array into the positions defined by their subscripts along a specified dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d78480edabbc03416fe36a7ca71a7779f6d0140" translate="yes" xml:space="preserve">
          <source>Create an audioplayer object that will play back data &lt;var&gt;y&lt;/var&gt; at sample rate &lt;var&gt;fs&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4e8568d4ae85ee81d3d91291d849f12c70f7ea" translate="yes" xml:space="preserve">
          <source>Create an audiorecorder object recording 8 bit mono audio at 8000 Hz sample rate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fcd655c875c73f9278b303a7fc4491a77ab721" translate="yes" xml:space="preserve">
          <source>Create an edit control that allows user input of single or multiple lines of text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4c4a012900394f2e9447ab99c4140d2b25f38d" translate="yes" xml:space="preserve">
          <source>Create an empty matrix or array with the empty constructor. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce84ea344fa189dee473e4631a99956f280445f" translate="yes" xml:space="preserve">
          <source>Create an empty modal dialog window to which other uicontrols can be added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dea59af2ec3999ab87193344eef95755ad377e" translate="yes" xml:space="preserve">
          <source>Create an inline function from the character string &lt;var&gt;str&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3ffef28292c226e08665838f19d1dab33e83bc" translate="yes" xml:space="preserve">
          <source>Create an involutory matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd966d8d479d16a9ab6127683eae0ef12c85ed5d" translate="yes" xml:space="preserve">
          <source>Create an object of the containers.Map class that stores a list of key/value pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5607c6fb75f85877924dbcebdb1990c7c2f38a39" translate="yes" xml:space="preserve">
          <source>Create an upper triangular matrix discussed by Kahan, Golub, and Wilkinson.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6713b285ab4cbeb1490d1119e52b275b3082c86e" translate="yes" xml:space="preserve">
          <source>Create color colormap. The colormap varies from cyan to magenta.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45f1c521e6b09af02ce0126224a2509c31ea42a" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap begins with red, changes through yellow, green, cyan, blue, and magenta, before returning to red.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430ed653e929924f6b0b6f138e2f0531f0ad959a" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap cycles through red, orange, yellow, green, blue and violet with each index change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3f52f7d3d14b41634a1062a7997ef11d89e421" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap cycles through red, white, blue, and black with each index change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56876247a04892ac2a1dbbd1c1928e7be7ba902" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap is completely white.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc7fb31c736f97c48458283286fafc2ef422d63" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap is composed of as many equally spaced colors (not grays) in the RGB color space as possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683b0851d3f69b81b9ae3f19ca62f5d5f1e07356" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap is composed of the list of colors in the current axes &lt;code&gt;&quot;ColorOrder&quot;&lt;/code&gt; property. The default is blue, orange, yellow, purple, green, light blue, and dark red.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22a471c01defc09e72b43098a154698e401c2f24" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap ranges from black through dark red, red, orange, yellow, to white.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c573ff245a55cd4762e3d280d12113beb898af9b" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap ranges from dark blue through blue, cyan, green, yellow, red, to dark red.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a643a1224983bee32e07f62e33c6d4cfb5db14a8" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap ranges from dark purplish-blue through blue, green, to yellow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cbdf020172f9a77af78d5cd53c521632e94af6" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap ranges from red through orange to yellow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfcb48440075c5addcb99464491cbb69b950687" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap ranges from red through orange, yellow, green, blue, to violet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116b9e733dc7148dfb7b98a7e21aa68f3bca1631" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap varies from black to a light copper tone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11fea3d96a7616a8af2d06ddea136fdce9fc1d2" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap varies from black to white with gray-blue shades.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b890a6d82e56bfaad9447fc37c656a0891a77a41" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap varies from black to white with shades of blue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34af5d2c2dfee5aa6476db0caa7b60f73b5773a9" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap varies from black to white with shades of gray-pink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cf441bf88bf9b123cf09c5c1c993018faf27b0" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap varies from blue to green.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b805fc842cc7068615eabb2cb1da5006e93ce369" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap varies from green to yellow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f82c8e649c87764118cde2b9f3a8fb900a8ac28" translate="yes" xml:space="preserve">
          <source>Create color colormap. This colormap varies from magenta to yellow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b8409210c9525f3834acb8a7ff7218797353f8" translate="yes" xml:space="preserve">
          <source>Create cubehelix colormap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c7d1384f136b04a0cac07a6a26f90a25b687ef" translate="yes" xml:space="preserve">
          <source>Create end-caps for isosurfaces of 3-D data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d535787a192634ffe05d542947750390fea2742c" translate="yes" xml:space="preserve">
          <source>Create gray colormap. This colormap varies from black to white with shades of gray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5010c58d6ce4da1321b3c4cfee69ea710bccacc7" translate="yes" xml:space="preserve">
          <source>Create handle graphics group object with axes parent &lt;var&gt;hax&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b5959c6c50a2e71716b122b36e86e61693f3fd" translate="yes" xml:space="preserve">
          <source>Create interesting matrices for testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ab345c05fe0e6bd3eb291673c0dc306a5524fc" translate="yes" xml:space="preserve">
          <source>Create object &lt;var&gt;p&lt;/var&gt; of the inputParser class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da29ea89aac1d4848a971bc4279112c1579912fc" translate="yes" xml:space="preserve">
          <source>Create one or more filled 2-D polygons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a4567695a3eab3dc2699ee2ac6cb841f2d20ae" translate="yes" xml:space="preserve">
          <source>Create options structure for optimization functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be81321856cf4a9958a1e8e52174aafbe244529d" translate="yes" xml:space="preserve">
          <source>Create or modify an ODE options structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c377923c6a23da8795481bf110a382e21bac1b" translate="yes" xml:space="preserve">
          <source>Create orthogonal and nearly orthogonal matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30a227ec0ef445e29fb71e217b70af034a4dd0a" translate="yes" xml:space="preserve">
          <source>Create patch object in the current axes with vertices at locations (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;) and of color &lt;var&gt;c&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a6f96669c97dfea4f8b69fe5d07cee36210478" translate="yes" xml:space="preserve">
          <source>Create remote directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92255e485b7194d79c7741be43547b14f604856" translate="yes" xml:space="preserve">
          <source>Create shared libraries (this is the default). If you are planning to use the dynamic loading features, you will probably want to use this option. It will make your</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66106d75f0a77ea51f6d2d62f9cc256fd93408f" translate="yes" xml:space="preserve">
          <source>Create the Wathen matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7128019583fbddf7a11a01c76b072f08e3f108b1" translate="yes" xml:space="preserve">
          <source>Create the augmented matrix of &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfc0b9a29049ddcf1c67db95b783663feeae26a" translate="yes" xml:space="preserve">
          <source>Create the file if it does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e953384c2f4997974ba97dda565e5b3fa5a9d4" translate="yes" xml:space="preserve">
          <source>Create the inverse of an upper Hessenberg matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecb2d4de98cc896c13ea7cf527acc63a0167d26" translate="yes" xml:space="preserve">
          <source>Create the remote directory &lt;var&gt;path&lt;/var&gt;, over the FTP connection &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb4b1716dea7a221ac7bc723522cdaea1421797" translate="yes" xml:space="preserve">
          <source>Create valid variable name &lt;var&gt;varname&lt;/var&gt; from &lt;var&gt;str&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96a2fb6d6f45e0e2ff358ccb4a946580d590bb5" translate="yes" xml:space="preserve">
          <source>Create various specific matrices devised/discussed by Wilkinson.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b68a89cc07973fc1c2760c38905fa892c8ea39" translate="yes" xml:space="preserve">
          <source>CreateFcn: called at the moment of the objects creation. It is not called if the object is altered in any way, and so it only makes sense to define this callback in the function call that defines the object. Callbacks that are added to &lt;code&gt;CreateFcn&lt;/code&gt; later with the &lt;code&gt;set&lt;/code&gt; function will never be executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a3bf796c5d649207faac2b0f72accb14b974648" translate="yes" xml:space="preserve">
          <source>Created and then filled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3698caf44a0b637f19c33056c2b1396b81bd42a9" translate="yes" xml:space="preserve">
          <source>Creating Cell Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e568c65d6fd1edc51dac996312628534c4e6363a" translate="yes" xml:space="preserve">
          <source>Creating Diagonal Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709c4efaf98267f25b4d2c4210d695d1e922d633" translate="yes" xml:space="preserve">
          <source>Creating Packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b38574f58625c8e436744a5e95661c792ba23d8" translate="yes" xml:space="preserve">
          <source>Creating Permutation Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76853fd91584f005cf44f5ce05349384e9e397f" translate="yes" xml:space="preserve">
          <source>Creating Sparse Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca40e113a2ada978ff714057b9864e5813ad73eb" translate="yes" xml:space="preserve">
          <source>Creating Sparse Matrices in Oct-Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd8132f6aff1f7027d01bbe93746f358b6fdcad" translate="yes" xml:space="preserve">
          <source>Creating Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="209fc93bca9f91f38545202cd2cfd56cf38d206a" translate="yes" xml:space="preserve">
          <source>Creating Structures</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0bc38f42e338777f5d82b19ec9eda05f8763de1" translate="yes" xml:space="preserve">
          <source>Creating a Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce991fc7433dffd5302ac834fbfcb485683ad45b" translate="yes" xml:space="preserve">
          <source>Creating a classdef Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dcec99651f43e92c4d318838324c4bff420386c" translate="yes" xml:space="preserve">
          <source>Creating and Manipulating Diagonal/Permutation Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dabf1d4a01df7ad528306ee9d6b6e6195d0f9ee" translate="yes" xml:space="preserve">
          <source>Creation and Manipulation of Diagonal/Permutation Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d44b148aa0222a8198215a63738defd261a4aad" translate="yes" xml:space="preserve">
          <source>Creation and Manipulation of Sparse Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5574c06304250301017243c5e560acfdbc4340" translate="yes" xml:space="preserve">
          <source>Crout version of ILU factorization (ILUC).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248c908368cf8fe57b5456c03f90c4b01d59670c" translate="yes" xml:space="preserve">
          <source>Ctrl-C</source>
          <target state="translated">Ctrl-C</target>
        </trans-unit>
        <trans-unit id="2e1cfe9730a4c0522c49ebf81133c84f6a77f385" translate="yes" xml:space="preserve">
          <source>Cubic interpolation (same as &lt;code&gt;&quot;pchip&quot;&lt;/code&gt; [not implemented yet]).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023e2c0745ceadd62ae2d83fe61b3d757e6b9ae8" translate="yes" xml:space="preserve">
          <source>Cubic interpolation (same as &lt;code&gt;&quot;pchip&quot;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcf182b9175c26eac9926ddd0869bdeb1f94cc7" translate="yes" xml:space="preserve">
          <source>Cubic interpolation from four nearest neighbors (not implemented yet).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b9c803cd0dd73c8b956cd4fc2ce36c46072dbf" translate="yes" xml:space="preserve">
          <source>Cubic spline interpolation&amp;mdash;smooth first and second derivatives throughout the curve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989796647ed2e8a6950ed710166566727a04252e" translate="yes" xml:space="preserve">
          <source>Cumulative numerical integration of points &lt;var&gt;y&lt;/var&gt; using the trapezoidal method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f371cc959a9a970d6b13a496999ab702a8827fd" translate="yes" xml:space="preserve">
          <source>Cumulative product of elements along dimension &lt;var&gt;dim&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8496ab01d0b29c14c68c2ff0d39c5bb60136a12f" translate="yes" xml:space="preserve">
          <source>Cumulative sum of elements along dimension &lt;var&gt;dim&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="836ef590289027cfac32b88c26f178433edbb56c" translate="yes" xml:space="preserve">
          <source>Current Working Directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93740326d63923d4938caee066fe01c34f13d55" translate="yes" xml:space="preserve">
          <source>Currently implemented solvers are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ed3c5f4858289fc2e7ceda072ba3db836cd08a" translate="yes" xml:space="preserve">
          <source>Currently it is not possible to invoke static methods with a Java like syntax from within Octave. Instead, one has to use the function &lt;a href=&quot;java-interface-functions#XREFjavaMethod&quot;&gt;javaMethod&lt;/a&gt; as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe4e9934c896a52b5ebfe6fc1ed13ea220b0215" translate="yes" xml:space="preserve">
          <source>Currently recognized values are &lt;code&gt;&quot;gesdd&quot;&lt;/code&gt; and &lt;code&gt;&quot;gesvd&quot;&lt;/code&gt;. The default is &lt;code&gt;&quot;gesvd&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bffb680ce1469eb548b1bd18b92cd629b315492" translate="yes" xml:space="preserve">
          <source>Currently, only patches consisting of triangles are supported. The resulting patch also consists only of triangles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1414f9340e2d35a3be647d7172c0c89734e837a1" translate="yes" xml:space="preserve">
          <source>Currently, this function always returns false in Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="659bc29efe7f9c89d4564c179aaaa2ec04c34c0e" translate="yes" xml:space="preserve">
          <source>Cursor Motion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dd7ff153934190e5d75b217180fa661b56fbe1" translate="yes" xml:space="preserve">
          <source>Custom file extensions may also be handled if a function &lt;code&gt;openxxx&lt;/code&gt;, where &lt;code&gt;xxx&lt;/code&gt; is the extension, is found in the load path. The function must accept the file name as input. For example, in order to load &lt;code&gt;&quot;.dat&quot;&lt;/code&gt; data files in the base workspace, as is done by default for &lt;code&gt;&quot;.mat&quot;&lt;/code&gt; files, one may define &lt;code&gt;&quot;opendat.m&quot;&lt;/code&gt; with the following contents:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f08d3ddb887ca35d8f4d3d5ba2a8438c39562d9" translate="yes" xml:space="preserve">
          <source>Customizing Toolkit Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555a38741b4506dc56171c38cf12f73706e77f55" translate="yes" xml:space="preserve">
          <source>Customizing readline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739feffc768cf63585601648218f9fd9d299be7d" translate="yes" xml:space="preserve">
          <source>Customizing the Prompt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1fe2d5051dae6f4c0e85f4a647eae59d36638e" translate="yes" xml:space="preserve">
          <source>Cyan</source>
          <target state="translated">Cyan</target>
        </trans-unit>
        <trans-unit id="57a81c280947e5796a4150be2ebb1d99f53e1183" translate="yes" xml:space="preserve">
          <source>Cycle the colormap for &lt;var&gt;t&lt;/var&gt; seconds with a color increment of &lt;var&gt;inc&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c9e8d5fc98727b4bbc93cf5d64a68db647f04f" translate="yes" xml:space="preserve">
          <source>D</source>
          <target state="translated">D</target>
        </trans-unit>
        <trans-unit id="3276961707884bee53f3abfd1f2c2c0fbe927574" translate="yes" xml:space="preserve">
          <source>D.1 Actual Bugs We Haven&amp;rsquo;t Fixed Yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3a6a3655ea1c3174d7084d93e59cbb0037d0b4" translate="yes" xml:space="preserve">
          <source>D.2 Reporting Bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b08373b79a961e823c2b23e0ed9a7481a517278" translate="yes" xml:space="preserve">
          <source>D.2.1 Have You Found a Bug?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391b604e27102c0ed2c8ee9b646c8726cee93ba7" translate="yes" xml:space="preserve">
          <source>D.2.2 Where to Report Bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35901796448c36a5e284e6869b5e7235695a077c" translate="yes" xml:space="preserve">
          <source>D.2.3 How to Report Bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4417c266a3c89f970b78d3faa1a2a5e393968a9d" translate="yes" xml:space="preserve">
          <source>D.2.4 Sending Patches for Octave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece7ca43b65f298a373e022046294383283ae1fd" translate="yes" xml:space="preserve">
          <source>D.3 How To Get Help with Octave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1726a129278e46b814b9f1c79f710406f6bf5ec" translate="yes" xml:space="preserve">
          <source>D.4 How to Distinguish Between Octave and Matlab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55669a9540dac13409c2400292458323f8afd317" translate="yes" xml:space="preserve">
          <source>DActual Bugs We Haven’t Fixed Yet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d017cb3dcf43d965d38a31c9ad97cefabc893fb" translate="yes" xml:space="preserve">
          <source>DEL</source>
          <target state="translated">DEL</target>
        </trans-unit>
        <trans-unit id="0ceecbea9d37250860e1b3086c61f32787e7e837" translate="yes" xml:space="preserve">
          <source>DESCRIPTION</source>
          <target state="translated">DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="324748284c36f609485ddd6d34eaf5e0e6c5cc34" translate="yes" xml:space="preserve">
          <source>DHave You Found a Bug?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="257a4b4842aeda11df12e8e19c85050ca9b1dc7e" translate="yes" xml:space="preserve">
          <source>DHow To Get Help with Octave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046e42dcf69327a5b83d0e8bc15fcabb00f41da3" translate="yes" xml:space="preserve">
          <source>DHow to Distinguish Between Octave and Matlab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e640d4e25d5ddfae2c5e7ce9a2957dbbcc8eacbf" translate="yes" xml:space="preserve">
          <source>DHow to Report Bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc7de3fd052c4628b1cdc61b11504a9954ee14c8" translate="yes" xml:space="preserve">
          <source>DReporting Bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d673b96683d0c0f0d06a17ef6dd464cdfc182d78" translate="yes" xml:space="preserve">
          <source>DSending Patches for Octave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="834b17883a4f6ec43fc65de42d6c4b44aaf251a1" translate="yes" xml:space="preserve">
          <source>DWhere to Report Bugs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4d348f3a9b1e72a99b102ab7b2d4fe8da0b93b" translate="yes" xml:space="preserve">
          <source>Dashed line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6237dcbbfb2058237feb91b325f14f1918c72434" translate="yes" xml:space="preserve">
          <source>Data Containers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd2d3f43709c405fdd151c4fd34dc05a072a163" translate="yes" xml:space="preserve">
          <source>Data Retrieval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff8f4e0edc9dde782afa4a0e129ebe391f292be" translate="yes" xml:space="preserve">
          <source>Data Sources in Object Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43556d77bfa3fa14b9df566f3e448da76ebcca3" translate="yes" xml:space="preserve">
          <source>Data Structure Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae1d2776d9833860999bc86b4498269dc5a58a6" translate="yes" xml:space="preserve">
          <source>Data columns are not padded; &lt;code&gt;textscan&lt;/code&gt; returns columns of unequal length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1285dafbb32ff629242617179149e1a3dfdc579" translate="yes" xml:space="preserve">
          <source>Data columns are not padded; strread returns columns of unequal length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bac32853f549bf14ca4204bd9e5169ea3e5ea18" translate="yes" xml:space="preserve">
          <source>Data columns are padded with empty fields or NaN so that all columns have equal length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d73475aaeabcd4f7ab52828a1c4f07b5c97eb2" translate="yes" xml:space="preserve">
          <source>Data columns are padded with empty fields, NaN or 0 (for integer fields) so that all columns have equal length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ef4fb943f72bd8f4cd15967684920437dea9ca" translate="yes" xml:space="preserve">
          <source>Data compression library (&lt;a href=&quot;https://zlib.net&quot;&gt;https://zlib.net&lt;/a&gt;). The zlib library is required for Octave&amp;rsquo;s &lt;code&gt;load&lt;/code&gt; and &lt;code&gt;save&lt;/code&gt; commands to handle compressed data, including &lt;small&gt;MATLAB&lt;/small&gt; v5 MAT files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf82f6068f6cdbebcfa1c3646b5b22bc7b3218a2" translate="yes" xml:space="preserve">
          <source>Data defining the patch object color. Patch color can be defined for faces or for vertices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7aa6b351f8dce6f7f2efeb1791e570ebc056d09" translate="yes" xml:space="preserve">
          <source>Data source variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b0486e4ae2aa8cdaba1caccb704676211bf4078" translate="yes" xml:space="preserve">
          <source>Data that is stored in a cell array can be processed in several ways depending on the actual data. The simplest way to process that data is to iterate through it using one or more &lt;code&gt;for&lt;/code&gt; loops. The same idea can be implemented more easily through the use of the &lt;code&gt;cellfun&lt;/code&gt; function that calls a user-specified function on all elements of a cell array. See &lt;a href=&quot;function-application#XREFcellfun&quot;&gt;cellfun&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28923e7b1dbdd0d35e2161edadc56393a6a9179f" translate="yes" xml:space="preserve">
          <source>Data written to the standard output may be filtered through the pager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c3d1800950d06390a6cda6cb34aef392b965393" translate="yes" xml:space="preserve">
          <source>Date (mm/dd/yy).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73f8de23cf64006ae01727baacb97259a688e70a" translate="yes" xml:space="preserve">
          <source>Date fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e096dfaae60140e84ac8d7431f383114b2e8ee9" translate="yes" xml:space="preserve">
          <source>Date of last modification to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9593204e53b95e415c717db59645ecdedbec3c" translate="yes" xml:space="preserve">
          <source>Date of last update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eec45c2e3b99a101285c0da279c8a589b6378c4" translate="yes" xml:space="preserve">
          <source>Date of the version/release.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e5baf5ecc3589631088c40cbdd43061976ed8f" translate="yes" xml:space="preserve">
          <source>DateTime</source>
          <target state="translated">DateTime</target>
        </trans-unit>
        <trans-unit id="7bae5c4270e00b336457a615387862ae25e2e4be" translate="yes" xml:space="preserve">
          <source>Day of month ( 1-31).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1ca6576f5625039bdeeb8cf2a26e1b497123485" translate="yes" xml:space="preserve">
          <source>Day of month (01-31).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac36b2f27605a102cba7a1b90c0cf37d800cad8" translate="yes" xml:space="preserve">
          <source>Day of the month (1-31).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5a63708cdee735cce250818ed1b9304afd16055" translate="yes" xml:space="preserve">
          <source>Day of week (0-6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9dbe4d8d44690628f1eb28dbc842c19bb0affd" translate="yes" xml:space="preserve">
          <source>Day of year (001-366).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edae75f57879fd3fa84e6a3958d7d38e142b5160" translate="yes" xml:space="preserve">
          <source>Daylight saving time flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed332957c468de28bff111474c765eee7ef0b7a" translate="yes" xml:space="preserve">
          <source>Days before the beginning of the month go to the previous month.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4a759294cd0ae852a760b18836e35e3fd74602" translate="yes" xml:space="preserve">
          <source>Days beyond the end of the month go into subsequent months.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f0d6bdae1874b244c5fdac0a06459dcc68835f8" translate="yes" xml:space="preserve">
          <source>Days can be fractional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caea32571c7c4db034622b7710271c2cfafc8452" translate="yes" xml:space="preserve">
          <source>Days of the month start at 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1344ec5ce4e67f1a130b206fe82b3a0eb8b9de46" translate="yes" xml:space="preserve">
          <source>Days since January 1 (0-365).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104db6c9ce71c8ad830c0236e1af0eb6d4e29563" translate="yes" xml:space="preserve">
          <source>Days since Sunday (0-6).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c083af7b5668ed424a691c18119e1aa24da7ae0b" translate="yes" xml:space="preserve">
          <source>Debug Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3fb213c4ef563891db7ba47be13e21a33ec041c" translate="yes" xml:space="preserve">
          <source>Debug mode also allows single line stepping through a function using the command &lt;code&gt;dbstep&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="997f59bc99b2a57280179c3ce09ba8ab57cbdf44" translate="yes" xml:space="preserve">
          <source>Dec</source>
          <target state="translated">Dec</target>
        </trans-unit>
        <trans-unit id="65640c6577c9c72497525e656127b5bd1deb6f85" translate="yes" xml:space="preserve">
          <source>December</source>
          <target state="translated">December</target>
        </trans-unit>
        <trans-unit id="0cf45562d96659da92e729527d125eef804249d0" translate="yes" xml:space="preserve">
          <source>Declare variables for use in multiple tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703c764d9edc39593c1d142c1272b75d687d6c12" translate="yes" xml:space="preserve">
          <source>Decode the double matrix or array &lt;var&gt;x&lt;/var&gt; from the base64 encoded string &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5b26b27fa04b8dbb6fc710b9ab7a0ee521ae38" translate="yes" xml:space="preserve">
          <source>Deconvolve two vectors (polynomial division).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a38baf3b03048f37add45c1488d99b0fdacb170" translate="yes" xml:space="preserve">
          <source>Default Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e120cb6da63373350bb45da0a13d348d6b170f" translate="yes" xml:space="preserve">
          <source>Default properties can be deleted by using &lt;code&gt;set&lt;/code&gt; with the special property value of &lt;code&gt;&quot;remove&quot;&lt;/code&gt;. To undo the default font assignment above use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f763b489db0194761caeb8a462752fadbcfc4e7e" translate="yes" xml:space="preserve">
          <source>Default property values can also be queried if the &lt;code&gt;set&lt;/code&gt; function is called without a value argument. When only one argument is given (a graphic handle) then a structure with defaults for all properties of the given object type is returned. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ceac03502bb706febbbd063af1c05369aea954" translate="yes" xml:space="preserve">
          <source>Default y-axis, larger values are near the top.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55c529ab6c9cc82cd0aa29eb81c3fa85e054ec7" translate="yes" xml:space="preserve">
          <source>Defaults for the graphic system as a whole are specified by setting properties of the root graphics object that begin with &lt;code&gt;&quot;Default&quot;&lt;/code&gt;. For example, to set the default font for all text objects to FreeSans use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ad2f2eff5f747463e9e01c5e18cefce14aaeef" translate="yes" xml:space="preserve">
          <source>Define &lt;var&gt;function&lt;/var&gt; to autoload from &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ae3b183b8d22939ebe38763ed4817c50f3f1ad" translate="yes" xml:space="preserve">
          <source>Define a function for use in multiple tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5a981d1f4924770793b9beceef9d0961da42b70" translate="yes" xml:space="preserve">
          <source>Define how Octave handles the execution of this object&amp;rsquo;s callback properties when it is unable to interrupt another object&amp;rsquo;s executing callback. This is only relevant when the currently executing callback object has its &lt;code&gt;interruptible&lt;/code&gt; property set to &lt;code&gt;&quot;off&quot;&lt;/code&gt;. The &lt;code&gt;busyaction&lt;/code&gt; property of the interrupting callback object indicates whether the interrupting callback is queued (&lt;code&gt;&quot;queue&quot;&lt;/code&gt; (default)) or discarded (&lt;code&gt;&quot;cancel&quot;&lt;/code&gt;). See &lt;a href=&quot;callbacks#Callbacks&quot;&gt;Callbacks section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c10d80e414801af8e7bb8894d11f2b227aee096" translate="yes" xml:space="preserve">
          <source>Define the absolute error tolerance for the quadrature. The default absolute tolerance is 1e-10 (1e-5 for single).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5d1f6ce7b39c072369399dd26f464df77d87fc" translate="yes" xml:space="preserve">
          <source>Define the absolute error tolerance for the quadrature. The default value is 1e-10 (1e-5 for single).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b271bb22704179eb465916032c9074832ef433e3" translate="yes" xml:space="preserve">
          <source>Define the dimensions of the matrix or array with a dim_vector which has the same characteristics as the vector returned from &lt;code&gt;size&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7e846aa87fd97c158316caa0103d24caa057bf" translate="yes" xml:space="preserve">
          <source>Define the limits for the color axis of image children. Setting &lt;code&gt;clim&lt;/code&gt; also forces the &lt;code&gt;climmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;. See &lt;a href=&quot;two_002ddimensional-plots#XREFpcolor&quot;&gt;pcolor function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa803ece2315f229f813db49f8c18ee289ed2a1" translate="yes" xml:space="preserve">
          <source>Define the number of rows and columns in the matrix. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ceb98f3c267f4ef348ef5fdb82df1eeca70816" translate="yes" xml:space="preserve">
          <source>Define the relative error tolerance for the quadrature. The default relative tolerance is 1e-6 (1e-4 for single).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d5b3a21324ac5ea78f88adbca1b4d91e94f5b0" translate="yes" xml:space="preserve">
          <source>Define the relative error tolerance for the quadrature. The default value is 1e-6 (1e-4 for single).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="775a076b571f356c0e5c7a202a8e96e21fa018ff" translate="yes" xml:space="preserve">
          <source>Defines the required convergence tolerance, calculated as &lt;code&gt;tol * norm (A)&lt;/code&gt;. The default is &lt;code&gt;eps&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292f60f275382399afa74120ffd27ed50a5e4820" translate="yes" xml:space="preserve">
          <source>Defining Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fbaa3a661f992aa1e4fa1166be370601d7cb13" translate="yes" xml:space="preserve">
          <source>Defining Indexing And Indexed Assignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74118a23e14f963648651fa6f970ff48815b74fd" translate="yes" xml:space="preserve">
          <source>Defining the FIRfilter class as a child of the polynomial class implies that a FIRfilter object may be used any place that a polynomial object may be used. This is not a normal use of a filter. It may be a more sensible design approach to use aggregation rather than inheritance. In this case, the polynomial is simply a field in the class structure. A class constructor for the aggregation case might be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e66842a916b27e1aeb1d9593f4b407305878d52" translate="yes" xml:space="preserve">
          <source>Delaunay Triangulation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e81bc48d7d20d528a883954fc9a73f72922673" translate="yes" xml:space="preserve">
          <source>DelayTime</source>
          <target state="translated">DelayTime</target>
        </trans-unit>
        <trans-unit id="705e44e90eb61d7bb944199b3aae9bf8dea0b823" translate="yes" xml:space="preserve">
          <source>Delete a breakpoint at line number &lt;var&gt;line&lt;/var&gt; in the function &lt;var&gt;func&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca58b2519b5ead2bd377dc8897c5d343fed005c6" translate="yes" xml:space="preserve">
          <source>Delete all child objects of the axes and reset all axes properties to their defaults. However, the following properties are not reset: Position, Units. This is equivalent to &lt;code&gt;cla reset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caad0a9bce8cafb9168cd64a83764a21471ebfd3" translate="yes" xml:space="preserve">
          <source>Delete all child objects of the figure and reset all figure properties to their defaults. However, the following four properties are not reset: Position, Units, PaperPosition, PaperUnits. This is equivalent to &lt;code&gt;clf reset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c53145e84a3828e7756d6b5eb51081eff8b8796" translate="yes" xml:space="preserve">
          <source>Delete all occurrences of &lt;var&gt;ptn&lt;/var&gt; within &lt;var&gt;str&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c5d95316fcbb024824dfc01b16105793ffb734" translate="yes" xml:space="preserve">
          <source>Delete child objects whose HandleVisibility is set to &lt;code&gt;&quot;on&quot;&lt;/code&gt;, but leave axes properties unmodified. This typically clears a plot, but preserves special settings such as log scaling for axes. This is equivalent to &lt;code&gt;cla&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d8322fbaae80290f8c36edcb1462e3b754789c" translate="yes" xml:space="preserve">
          <source>Delete child objects whose HandleVisibility is set to &lt;code&gt;&quot;on&quot;&lt;/code&gt;. Set NextPlot property to &lt;code&gt;&quot;add&quot;&lt;/code&gt;. This typically clears a figure, but leaves in place hidden objects such as menubars. This is equivalent to &lt;code&gt;clf&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cc668da1b124d83eea9590a89960b6e73b2500" translate="yes" xml:space="preserve">
          <source>Delete remote file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197efe2afa21edfe27fb23dabaf23e326963f4ed" translate="yes" xml:space="preserve">
          <source>Delete the application data &lt;var&gt;name&lt;/var&gt; from the graphics object with handle &lt;var&gt;h&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929088c27b0eb60e04edcac70b2a85e5a8dc47b1" translate="yes" xml:space="preserve">
          <source>Delete the character to the left of the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01e827109bb2eb4866db3b0d831fb311b52847a" translate="yes" xml:space="preserve">
          <source>Delete the character underneath the cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b642cb67406146df31b2f48ac6bb3bfc996901e0" translate="yes" xml:space="preserve">
          <source>Delete the environment variable &lt;var&gt;var&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f24068246d7dac12424cc13fbea3346719d2d94" translate="yes" xml:space="preserve">
          <source>Delete the file named &lt;var&gt;file&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db84203631d3e7078fb6cd49ba75521ee13e4a34" translate="yes" xml:space="preserve">
          <source>Delete the legend object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee99c3d568beffd3d21b31869e1a603d3b4fa428" translate="yes" xml:space="preserve">
          <source>Delete the named file or graphics handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00678d3fca3ee2b7f5dc2ed2a87cad0c3e862df" translate="yes" xml:space="preserve">
          <source>Delete the names matching the given &lt;var&gt;pattern&lt;/var&gt;s from the symbol table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bff6864c13b6a8944eefbc5e61a6a288205a80f" translate="yes" xml:space="preserve">
          <source>Delete the remote file &lt;var&gt;file&lt;/var&gt; over the FTP connection &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f8d9deec93c69e780a38ef574710267e738986" translate="yes" xml:space="preserve">
          <source>Delete the variables matching the given &lt;var&gt;pattern&lt;/var&gt;s from memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4675f554dbd457a6455f3ecf2227ede335a61cf3" translate="yes" xml:space="preserve">
          <source>DeleteFcn: called at the moment an object is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3897a56234a2ec0708cce93662933f2e74fb198e" translate="yes" xml:space="preserve">
          <source>Demo blocks in any C++ source files (</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a545b586fbe6c5dd2fe995af393474d201d784b1" translate="yes" xml:space="preserve">
          <source>Demo only executes in interactive mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="124781950af51d681d8731825c720cbdf10b1870" translate="yes" xml:space="preserve">
          <source>Demonstration Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479278f49bf038cc93a88a23e08354934c3c7d42" translate="yes" xml:space="preserve">
          <source>Demos are run in a stand-alone function environment with no access to external variables. This means that every demo must have separate initialization code. Alternatively, all demos can be combined into a single large demo with the code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff1877752060e23be1b755513a7df53018f36789" translate="yes" xml:space="preserve">
          <source>Denoting the differential variables in the state vector by &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb47fb62cf75de52538cd434a436c3785feebb8" translate="yes" xml:space="preserve">
          <source>Depending on the file format, it is possible to configure the reading of images with &lt;var&gt;parameter&lt;/var&gt;, &lt;var&gt;value&lt;/var&gt; pairs. The following options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab63773bbbf099685fa50d0972c8e628b08608f8" translate="yes" xml:space="preserve">
          <source>Depending on the file format, it is possible to configure the writing of images with &lt;var&gt;param&lt;/var&gt;, &lt;var&gt;val&lt;/var&gt; pairs. The following options are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551e72680a9ed0125a6373a3eb43d33557af3426" translate="yes" xml:space="preserve">
          <source>Depth first search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234cd7a626af5a9e3baa2db1a81659c4f052432b" translate="yes" xml:space="preserve">
          <source>Derivatives / Integrals / Transforms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08a353599915d9bf788776503cf555c376fb545a" translate="yes" xml:space="preserve">
          <source>Describe the conditions for copying and distributing Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="6b4a2b23ca8f3b21e6c48699e96aa0ae912c761d" translate="yes" xml:space="preserve">
          <source>Descriptive Statistics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba64cfdda6de18c1179a3ecf8896648cde112c67" translate="yes" xml:space="preserve">
          <source>Despite this option, the most efficient method of writing a multipage image is to pass a 4 dimensional &lt;var&gt;img&lt;/var&gt; to &lt;code&gt;imwrite&lt;/code&gt;, the same matrix that could be expected when using &lt;code&gt;imread&lt;/code&gt; with the option &lt;code&gt;&quot;Index&quot;&lt;/code&gt; set to &lt;code&gt;&quot;all&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d81198aa95f8ee24ad61cc5debbd8bf224fbff6" translate="yes" xml:space="preserve">
          <source>Details of any other deviations from the standard procedure for installing Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d684e6b948e6f652a5a47ea0deb8b0b44519764" translate="yes" xml:space="preserve">
          <source>Details on indexing cell arrays are explained in &lt;a href=&quot;indexing-cell-arrays#Indexing-Cell-Arrays&quot;&gt;Indexing Cell Arrays&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028a4db695940a76a255c40b97b53b5de4bbd7ca" translate="yes" xml:space="preserve">
          <source>Determine area of a polygon by triangle method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0569eacc73b6bee2ddd4706f8d21e0d2b786bc00" translate="yes" xml:space="preserve">
          <source>Determine if all input arguments are either scalar or of common size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1d423531f8860481347777a2808ffa3b1a7578" translate="yes" xml:space="preserve">
          <source>Determine processing of NaN values. Acceptable values are &lt;code&gt;&quot;all&quot;&lt;/code&gt;, &lt;code&gt;&quot;complete&quot;&lt;/code&gt;, and &lt;code&gt;&quot;pairwise&quot;&lt;/code&gt;. Default is &lt;code&gt;&quot;all&quot;&lt;/code&gt;. With &lt;code&gt;&quot;complete&quot;&lt;/code&gt;, only the rows without NaN values are considered. With &lt;code&gt;&quot;pairwise&quot;&lt;/code&gt;, the selection of NaN-free rows is made for each pair of variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878e69222f75f2b54f3f625f267b32f523bf340e" translate="yes" xml:space="preserve">
          <source>Determine the execution time of an expression (&lt;var&gt;f&lt;/var&gt;) for various input values (&lt;var&gt;n&lt;/var&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2009c83df1f7728a560a81047f87d45fdd469d29" translate="yes" xml:space="preserve">
          <source>Determine the largest principal angle between two subspaces spanned by the columns of matrices &lt;var&gt;A&lt;/var&gt; and &lt;var&gt;B&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a33eaca6e35456c3471dc6df2702ccaefad15e5" translate="yes" xml:space="preserve">
          <source>Determines what &lt;code&gt;amd&lt;/code&gt; considers to be a dense row or column of the input matrix. Rows or columns with more than &lt;code&gt;max (16, (dense *
sqrt (&lt;var&gt;n&lt;/var&gt;)))&lt;/code&gt; entries, where &lt;var&gt;n&lt;/var&gt; is the order of the matrix &lt;var&gt;S&lt;/var&gt;, are ignored by &lt;code&gt;amd&lt;/code&gt; during the calculation of the permutation. The value of dense must be a positive scalar and the default value is 10.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0891251a8a6b699d505b84acadb1fd801e4c637" translate="yes" xml:space="preserve">
          <source>Determines whether files should be edited in place, without regard to whether they are modifiable or not. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9962572389dc4f13a63df982fe04125b28ebb51" translate="yes" xml:space="preserve">
          <source>Diagonal Matrix Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56c763ebedb863062d0c0a5b1774a073d7d0be2" translate="yes" xml:space="preserve">
          <source>Diagonal and Permutation Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9151d405f1fb8bef17efe53afc8795832a1817a" translate="yes" xml:space="preserve">
          <source>Diagonal matrix with unit elements can be created using &lt;em&gt;eye&lt;/em&gt;. Some other built-in functions can also return diagonal matrices. Examples include &lt;em&gt;balance&lt;/em&gt; or &lt;em&gt;inv&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e760492039269a8454a785a53239c0b350c2993" translate="yes" xml:space="preserve">
          <source>Diagonal matrix. (Sparse matrices only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c6f621dde5ba575d1e6f6fe0cb9e63945a8eea" translate="yes" xml:space="preserve">
          <source>Diary and Echo Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b6db809c40ca63f580f1f25a5024d136f4e83fa" translate="yes" xml:space="preserve">
          <source>Differences in Treatment of Zero Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf657164ddfd9de9264bdd9b67cf72f0c3ece07" translate="yes" xml:space="preserve">
          <source>Different actions are available depending on the value of &lt;var&gt;command&lt;/var&gt; and on return arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440871e8a636c630305c9277fd8ca55a0fe8f360" translate="yes" xml:space="preserve">
          <source>Different file types are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c0054ee75461db7b3297cc7a43785cf2c454cf" translate="yes" xml:space="preserve">
          <source>Differential Equations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c74cfdc30b721f85c435c113c0edb109cc7a89e" translate="yes" xml:space="preserve">
          <source>Differential-Algebraic Equations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ea2ef622893d675b0e386b95f311c408767171" translate="yes" xml:space="preserve">
          <source>Differential-algebraic problems may occasionally suffer from severe scaling difficulties on the first step. If you know a great deal about the scaling of your problem, you can help to alleviate this problem by specifying an initial stepsize (default is computed automatically).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c31b52082cbaa73e666a10c4174e677d624259d" translate="yes" xml:space="preserve">
          <source>Differential-algebraic problems may occasionally suffer from severe scaling difficulties on the first step. If you know a great deal about the scaling of your problem, you can help to alleviate this problem by specifying an initial stepsize.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d548d1de16b9904526fa337606a9a8d77dbc0f2" translate="yes" xml:space="preserve">
          <source>DigitalCamera</source>
          <target state="translated">DigitalCamera</target>
        </trans-unit>
        <trans-unit id="6ea35ff3eeda6d706e2dc4281676e2d7776f16c3" translate="yes" xml:space="preserve">
          <source>Dimensions with fewer than 3 data points are skipped. Boundary points are calculated from the linear extrapolation of interior points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9393dd99f2253f533b587212c3b4ae6d496723f3" translate="yes" xml:space="preserve">
          <source>Direct children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564fbc97511095a88c01861b8dbf0304220dbc90" translate="yes" xml:space="preserve">
          <source>Direction of the x axis: &lt;code&gt;&quot;normal&quot;&lt;/code&gt; is left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9473abea1599a867b11c7ae2989e275d00fd412d" translate="yes" xml:space="preserve">
          <source>Direction of the y-axis: &lt;code&gt;&quot;normal&quot;&lt;/code&gt; is bottom to top.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="165d8bfc7c4371656a07bfcd8a1467405fdb4b70" translate="yes" xml:space="preserve">
          <source>Disable building all forms of the documentation (Info, PDF, HTML). The default is to build documentation, but your system will need functioning Texinfo and TeX installs for this to succeed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fb24bbc502901da02f51e1f016acb2574ec457" translate="yes" xml:space="preserve">
          <source>Disable command-line editing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27051840fdeb2bf207b5abf0da7f1604b1fb54db" translate="yes" xml:space="preserve">
          <source>Disable echoing of commands as they are executed in script files and functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db74ed73a6e8b1534563e3616d07d685e1388bf" translate="yes" xml:space="preserve">
          <source>Disable echoing of commands as they are executed in script files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e62f6d04506ba03ae473f72edb5c037d09d031" translate="yes" xml:space="preserve">
          <source>Disable echoing of commands as they are executed in the named function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7e3942924115a90bbffe7c1417c59730591456" translate="yes" xml:space="preserve">
          <source>Disable recording of command-line history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca55d2ecf004d5aedda9ae4826769661b390fcb0" translate="yes" xml:space="preserve">
          <source>Disable the graphical user interface (GUI) and use the command line interface (CLI) instead. This is the default behavior, but this option may be useful to override a previous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e53eb99a5a5476ffcc68711a47ac9f29d864784" translate="yes" xml:space="preserve">
          <source>Disable use of a windowing system including graphics. This forces a strictly terminal-only environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d448b5debe409e28643455e84571a7225121a5" translate="yes" xml:space="preserve">
          <source>Disable using 64-bit integers for indexing arrays and use 32-bit integers instead. On systems with 32-bit pointers, this option is always disabled. If the configure script determines that your &lt;small&gt;BLAS&lt;/small&gt; library uses 32-bit integers, then operations using the following libraries are limited to arrays with dimensions that are smaller than &lt;em&gt;2^{31}&lt;/em&gt; elements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5f1ff8c40c9a7daf84f367bea44ca1262f9ef9" translate="yes" xml:space="preserve">
          <source>Disables preliminary balancing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f44d88c45673186a3db38c72b807f49c4e24ee9" translate="yes" xml:space="preserve">
          <source>Discontinuities in the first derivative of the function to integrate can be flagged with the &lt;code&gt;&quot;WayPoints&quot;&lt;/code&gt; property. This forces the ends of a subinterval to fall on the breakpoints of the function and can result in significantly improved estimation of the error in the integral, faster computation, or both. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90caa8262688467d8b116c66f91ad368a17bedd8" translate="yes" xml:space="preserve">
          <source>Discontinuous sample quantile methods 1, 2, and 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f5ed59565fc76596ff0d64685b15f16e73fc305" translate="yes" xml:space="preserve">
          <source>Discrete-Time Signal Processing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574ff9b0c49cdeb5f5508548ae0cab44fecee038" translate="yes" xml:space="preserve">
          <source>Display</source>
          <target state="translated">Display</target>
        </trans-unit>
        <trans-unit id="e811eabd87ae43c33f88c00805ff431a7d38a3c5" translate="yes" xml:space="preserve">
          <source>Display &quot;Figure&quot; followed by the numerical figure handle value in the figure title bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c2ec485edc277414722191c2f0ae9d3a21a153" translate="yes" xml:space="preserve">
          <source>Display &lt;var&gt;msg&lt;/var&gt; using a message dialog box.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515a15ef1b2d558d22719be4eaaccf5499034110" translate="yes" xml:space="preserve">
          <source>Display &lt;var&gt;msg&lt;/var&gt; using a question dialog box and return the caption of the activated button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5964472dec303032b204c02aa8cf57e75c801d87" translate="yes" xml:space="preserve">
          <source>Display a formatted version of the polynomial &lt;var&gt;c&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926b0966e3acc0ddfd1319e1264f9f7971efaeb1" translate="yes" xml:space="preserve">
          <source>Display a header containing the current Octave version number, license string, and operating system. The header is followed by a list of installed packages, versions, and installation directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c997930b7215fef464d1b456335b20828c0f9b91" translate="yes" xml:space="preserve">
          <source>Display a help dialog box with help message &lt;var&gt;msg&lt;/var&gt; and caption &lt;var&gt;title&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82c902fab6e9cfc253b20938f189382aff68774" translate="yes" xml:space="preserve">
          <source>Display a legend for the current axes using the specified strings as labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f96579ba763fc6285896ac3b0c8674102f55ba80" translate="yes" xml:space="preserve">
          <source>Display a matrix as an indexed color image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb9fbc6ac213c9885d0747e54f2a636fb317cd3" translate="yes" xml:space="preserve">
          <source>Display a menu with heading &lt;var&gt;title&lt;/var&gt; and options &lt;var&gt;opt1&lt;/var&gt;, &amp;hellip;, and wait for user input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe43bbb774c39c59a6d922cf329c178d0225a68" translate="yes" xml:space="preserve">
          <source>Display a scaled version of the matrix &lt;var&gt;img&lt;/var&gt; as a color image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c21d02dbcbf0923cc31bf4064962ffc291bd07" translate="yes" xml:space="preserve">
          <source>Display a script file with line numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f924f59b436a19cc26d891ea4e8db992972b8a" translate="yes" xml:space="preserve">
          <source>Display a warning dialog box with warning message &lt;var&gt;msg&lt;/var&gt; and caption &lt;var&gt;title&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1f72654332446f80b11b0074c7d177beeb7c9b" translate="yes" xml:space="preserve">
          <source>Display a warning message or control the behavior of Octave&amp;rsquo;s warning system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25257e85b51d1dd6b3cdf48fddccde7d82da69bd" translate="yes" xml:space="preserve">
          <source>Display an error dialog box with error message &lt;var&gt;msg&lt;/var&gt; and caption &lt;var&gt;title&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="506600656149122dcd06d8b6ea156837ba1d08c6" translate="yes" xml:space="preserve">
          <source>Display an error message and stop m-file execution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75024911b42b9db4c08faa0e325fd2f2fcc98ccf" translate="yes" xml:space="preserve">
          <source>Display contact information for the GNU Octave community.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4466410a908ca8aeff188124df20f5636cdd5bf" translate="yes" xml:space="preserve">
          <source>Display documentation for the function &lt;var&gt;function_name&lt;/var&gt; directly from an online version of the printed manual, using the GNU Info browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0065e6b44c1aaca2fe5151465d5b1ac86e696600" translate="yes" xml:space="preserve">
          <source>Display file listing for directory &lt;var&gt;directory&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc16969e795ff78f1d49bfde3a926cc7f2d1e55e" translate="yes" xml:space="preserve">
          <source>Display flat per-function profiler results.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60aa106625babc7a1dc7d2bdb45ab47c9b6a21c2" translate="yes" xml:space="preserve">
          <source>Display information about all supported audio formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8ce5fb233a972618b7c94b6382ba4247970bed" translate="yes" xml:space="preserve">
          <source>Display intermediate results for every loop iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceacbabb5e429f44bc4baa89ede4eba5ff064bab" translate="yes" xml:space="preserve">
          <source>Display only the most recent &lt;var&gt;n&lt;/var&gt; lines of history.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0b04ed56f01d08818ef748bacea4fde054e84c" translate="yes" xml:space="preserve">
          <source>Display or return current debugging function stack information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bf65e90c32b29d478dafe499cc2b436e04da29" translate="yes" xml:space="preserve">
          <source>Display tests before execution. Print all warning messages. In interactive mode, run all tests including those which require user interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67e50a05134fef05df236b0bd4971547a6b6ba93" translate="yes" xml:space="preserve">
          <source>Display the GUI preferences dialog window for Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa95c1787b7e746a316cd8a5cf1d8c942948162e" translate="yes" xml:space="preserve">
          <source>Display the code for example &lt;var&gt;n&lt;/var&gt; associated with the function &lt;var&gt;name&lt;/var&gt;, but do not run it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6192cff20ba0702d776adf2b6b13ce94889a7467" translate="yes" xml:space="preserve">
          <source>Display the contents of &lt;var&gt;name&lt;/var&gt; which may be a file, function (m-file), variable, operator, or keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12159a7b147bbc2974c98b07fc543a035504c62d" translate="yes" xml:space="preserve">
          <source>Display the contents of the object &lt;var&gt;obj&lt;/var&gt; prepended by its name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fa7108fbf114ef3d02afef1e83c69399ac076c" translate="yes" xml:space="preserve">
          <source>Display the current NEWS file for Octave or an installed package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70ce49d94159d40608cd252603905d5295b4b43" translate="yes" xml:space="preserve">
          <source>Display the help text for &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31414be2b192627151eeea7a3653cbe7d42e1360" translate="yes" xml:space="preserve">
          <source>Display the image &lt;var&gt;im&lt;/var&gt;, where &lt;var&gt;im&lt;/var&gt; can be a 2-dimensional (grayscale image) or a 3-dimensional (RGB image) matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df0ecf26851db036a4f5c4297fc1602e032bbe9" translate="yes" xml:space="preserve">
          <source>Display the preferences directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cacbfa7053f70a9cb1da10fe814d70ca210c4a" translate="yes" xml:space="preserve">
          <source>Display the result of the final loop iteration if the function has failed to converge.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10adadd5ab9a6cb51572a13e3080a272a6f56833" translate="yes" xml:space="preserve">
          <source>Display the result of the final loop iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e840478b72dc98c2f72e985cfed08281faee0893" translate="yes" xml:space="preserve">
          <source>Display the tetrahedrons defined in the m-by-4 matrix &lt;var&gt;T&lt;/var&gt; as 3-D patches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0e1aecd046d94d0d5f6ec32746ac8f9f289720" translate="yes" xml:space="preserve">
          <source>Display the type of each &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a724ad34448f5c86f2bfaa79aa8e99bc8a637282" translate="yes" xml:space="preserve">
          <source>Display the value of &lt;var&gt;x&lt;/var&gt; on the stream &lt;var&gt;fid&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a355af943180e13a968da7233bd026c25ada8556" translate="yes" xml:space="preserve">
          <source>Display the value of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1bc9620650d3db298ea72db19dedb61e582b50" translate="yes" xml:space="preserve">
          <source>Display warning messages about skipped tests or failing xtests during test execution. Print a summary message when all tests pass, or print an error with the results of the first bad test when a failure occurs. Don&amp;rsquo;t run tests which require user interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326b6d1e0af926059b752b655127bc9cc6ee3920" translate="yes" xml:space="preserve">
          <source>Displaying Images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b99b283028a732760e4ef2ec6df5d85ca87a745" translate="yes" xml:space="preserve">
          <source>DisposalMethod</source>
          <target state="translated">DisposalMethod</target>
        </trans-unit>
        <trans-unit id="1d3c457cbe3e35739086346e0a4048653efa42e7" translate="yes" xml:space="preserve">
          <source>Distribution</source>
          <target state="translated">Distribution</target>
        </trans-unit>
        <trans-unit id="71fff5ea85661c16e7519843bc17a41ff8e91eb9" translate="yes" xml:space="preserve">
          <source>Distributions</source>
          <target state="translated">Distributions</target>
        </trans-unit>
        <trans-unit id="2e59140c4c687a587210556d67ea79894a35dd77" translate="yes" xml:space="preserve">
          <source>Do not hang if status is not immediately available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c0f234328c0ff052d1a6fd1a275a8e959d17fe" translate="yes" xml:space="preserve">
          <source>Do not pad the field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fa2215503af3d55f0e1a198817e55f5594f1ee" translate="yes" xml:space="preserve">
          <source>Documentation and Testing of Oct-Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74aaad649828f2e4c7facd89794a5a1954b5c5e2" translate="yes" xml:space="preserve">
          <source>Does the code make as much use as possible of existing built-in library routines?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c27693a8f8cea9310426a1e3e704bb2ed010581" translate="yes" xml:space="preserve">
          <source>Does writing a dynamically linked function represent a useful investment of your time, relative to staying in Octave?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c37117e34977a2245f0706db461e7b5a28f6c9" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t initialize the search path for function files to include default locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054031c1fd1c3500955caf3cbdbe4063946cd6d3" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t mix together changes made for different reasons. Send them &lt;em&gt;individually&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1166b3409810691c86fc768fd8fe68167a293433" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t number the displayed lines of history. This is useful for cutting and pasting commands using the X Window System.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b834c08c9d419c7d2d94c0e4617d4a8a967319" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t print the usual greeting and version message at startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2890058dc4284362b8de7dba9d4af0126eb152ce" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t print uicontrol objects such as pushbuttons which may overlay the plot. This is the default behavior and it is not possible to include uicontrol objects in the output without using an external screen capture tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d531d55bc024ee6458f3e6e25687e2345aec5b" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t read any of the system or user initialization files at startup. This is equivalent to using both of the options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8e75860ac899658947e734fc18e67c37f444cfd" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t read the initialization files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9131d12b4f10ce0c3e4922c17c9c9909faae4626" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t read the site-wide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89a3490af16314b758a195d8ff305841fec36e6" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;small&gt;AMD&lt;/small&gt;, disable some sparse matrix functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ad486161e52684a791b817aaa94f10fd002f27" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;small&gt;CAMD&lt;/small&gt;, disable some sparse matrix functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f237b629632b38a339b7e1aba3dc6d1e35ed06" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;small&gt;CCOLAMD&lt;/small&gt;, disable some sparse matrix functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cc3ad9f5c6a06f8af94afc61b7386dfffb67c7" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;small&gt;CHOLMOD&lt;/small&gt;, disable some sparse matrix functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc06ad253b2b11fbaecdb64750cc47e898d545c" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;small&gt;COLAMD&lt;/small&gt;, disable some sparse matrix functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd3c9d8d076cbb5d4d441084dd1a8b791e1a01c" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;small&gt;CXSPARSE&lt;/small&gt;, disable some sparse matrix functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c0f373a0b1c0276fff6525e7b02f5daeb39e11" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;small&gt;QRUPDATE&lt;/small&gt;, disable QR and Cholesky update functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b037406b3cf327ac7855cb500a4e6a15b058757c" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use &lt;small&gt;UMFPACK&lt;/small&gt;, disable some sparse matrix functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f47d1f0ed8c910976dffa2b847dc37afea551e8" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use OpenGL, disable native graphics toolkit for plotting. You will need &lt;code&gt;gnuplot&lt;/code&gt; installed in order to make plots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ce37327695060f77bd049f30863966db606d88" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use Qhull, disable &lt;code&gt;delaunay&lt;/code&gt;, &lt;code&gt;convhull&lt;/code&gt;, and related functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a6edeb36fde1ba0467b0ece4029b6bce71157e" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use framework Carbon headers, libraries, or specific source code even if the configure test succeeds (the default is to use Carbon framework if available). This is a platform specific configure option for Mac systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee2b7fab821fff99d88ad5571e787b514b98377" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use framework OpenGL headers, libraries, or specific source code even if the configure test succeeds. If this option is given then OpenGL headers and libraries in standard system locations are tested (the default value is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d16535048527f1d12ce4fbb5578e9ef36e1b6a" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the &lt;small&gt;GLPK&lt;/small&gt; library for linear programming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0556fc7c81f762de0f6efceab3d1f66ffd13c21f" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the &lt;small&gt;HDF5&lt;/small&gt; library, disable reading and writing of &lt;small&gt;HDF5&lt;/small&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9451d6e9e043d9504797fea6a661ddc5109811" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the cURL library, disable the ftp objects, &lt;code&gt;urlread&lt;/code&gt; and &lt;code&gt;urlwrite&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15553250b5f65fac714356cd29fbb1c079254913" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t use the zlib library, disable data file compression and support for recent MAT file formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7466d825d9e9a4d4bcbc00b6abc3d16a021e820b" translate="yes" xml:space="preserve">
          <source>Dotted line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a23a74f759d0ec82dde2f511d25173b41c24c4" translate="yes" xml:space="preserve">
          <source>Download a remote file &lt;var&gt;file&lt;/var&gt; or directory &lt;var&gt;dir&lt;/var&gt; to the local directory on the FTP connection &lt;var&gt;f&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683b9721703888d4955d39c4f2b95e0f4b89f3bf" translate="yes" xml:space="preserve">
          <source>Download a remote file specified by its &lt;var&gt;url&lt;/var&gt; and return its content in string &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec2c551167c3ea4a2de960b619bfaa4b87d1866" translate="yes" xml:space="preserve">
          <source>Download a remote file specified by its &lt;var&gt;url&lt;/var&gt; and save it as &lt;var&gt;localfile&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ee965bc07541328b6595eb1737c2ded29b3cdd" translate="yes" xml:space="preserve">
          <source>Download remote files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf7b3ec40314b80a71c9dc22a3503892cf9caba" translate="yes" xml:space="preserve">
          <source>Drag the character before the cursor forward over the character at the cursor, also moving the cursor forward. If the cursor is at the end of the line, then transpose the two characters before it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7881d08cbb5ad27b31124a608af402153bea2a65" translate="yes" xml:space="preserve">
          <source>Drag the word behind the cursor past the word in front of the cursor moving the cursor over that word as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5e7c5bc4f07cbdccc2e27fd3510ade5c91e636" translate="yes" xml:space="preserve">
          <source>Draw a 2-D scatter plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3dd364aeebfee798f30d38327fa0e7696c7ad1" translate="yes" xml:space="preserve">
          <source>Draw a 3-D scatter plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a749a5e3402a6572db85bb976ae32154dd559f" translate="yes" xml:space="preserve">
          <source>Draw a Pareto chart.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc1611e5798d95b4f91157aa7588f180ccc48c56" translate="yes" xml:space="preserve">
          <source>Draw a rectangular patch defined by &lt;var&gt;pos&lt;/var&gt; and &lt;var&gt;curv&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8465c06fa7e34063ba7f40f7bb1ca09be04eaa4b" translate="yes" xml:space="preserve">
          <source>Draw a ribbon plot for the columns of &lt;var&gt;y&lt;/var&gt; vs. &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb64ba81bf11a1fa203c7dea58faeb8ea04351c" translate="yes" xml:space="preserve">
          <source>Draw annotations to emphasize parts of a figure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4994bb64114e3438e56d6ea47a1416e050c599" translate="yes" xml:space="preserve">
          <source>Draw objects with faceted lighting effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adc4e97a479c064b1e6b84a7b8f66d77448cc09" translate="yes" xml:space="preserve">
          <source>Draw objects with linear interpolation of the lighting effects between the vertices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f37c06141e1eabc3e11ec583b11a03a00b9d0f0" translate="yes" xml:space="preserve">
          <source>Draw objects without light and shadow effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711379a2dc2a772bd31907d6ac4fe2cf6b48af98" translate="yes" xml:space="preserve">
          <source>Draw the colormap across the X-axis so that the actual index colors are visible rather than the individual color components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48eba6f09d81f55732d1d56e614f3c5d7c1279c" translate="yes" xml:space="preserve">
          <source>Dual variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d738904750f0e053ea360c15ba1acc0cf37c73d" translate="yes" xml:space="preserve">
          <source>Duplicate a file descriptor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41bc76e6660bdb6b1c8d35deca822ec4171fe19" translate="yes" xml:space="preserve">
          <source>Duplicate points in &lt;var&gt;x&lt;/var&gt; specify a discontinuous interpolant. There may be at most 2 consecutive points with the same value. If &lt;var&gt;x&lt;/var&gt; is increasing, the default discontinuous interpolant is right-continuous. If &lt;var&gt;x&lt;/var&gt; is decreasing, the default discontinuous interpolant is left-continuous. The continuity condition of the interpolant may be specified by using the options &lt;code&gt;&quot;left&quot;&lt;/code&gt; or &lt;code&gt;&quot;right&quot;&lt;/code&gt; to select a left-continuous or right-continuous interpolant, respectively. Discontinuous interpolation is only allowed for &lt;code&gt;&quot;nearest&quot;&lt;/code&gt; and &lt;code&gt;&quot;linear&quot;&lt;/code&gt; methods; in all other cases, the &lt;var&gt;x&lt;/var&gt;-values must be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="44e0e1d22fd54ebaa5786115164e21722a9c57d3" translate="yes" xml:space="preserve">
          <source>Duration of the audio, in seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436c97e65181ff5a7a76e52cd29a861b652836ae" translate="yes" xml:space="preserve">
          <source>During calculations the data input &lt;var&gt;x&lt;/var&gt; is reshaped into a 2-dimensional &lt;var&gt;wlen&lt;/var&gt;-by-&lt;var&gt;N&lt;/var&gt; matrix and &lt;var&gt;fcn&lt;/var&gt; is called on this new matrix. Therefore, &lt;var&gt;fcn&lt;/var&gt; must accept an array input argument and apply the computation along dimension 1, i.e., down the columns of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7375703ef59055b3f8ceeff351a21df5a7c3b08" translate="yes" xml:space="preserve">
          <source>During the calculation of Fourier transforms further wisdom is generated. The fashion in which this wisdom is generated is also controlled by the &lt;code&gt;fftw&lt;/code&gt; function. There are five different manners in which the wisdom can be treated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ef1ab92a67fc3786fd09d335684fac6cc009b9" translate="yes" xml:space="preserve">
          <source>Dynamic indexing also allows you to use arbitrary strings, not merely valid Octave identifiers (note that this does not work on &lt;small&gt;MATLAB&lt;/small&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="e0d110a8b49f0980c17d7fae775f95d21caf7083" translate="yes" xml:space="preserve">
          <source>E. Cuthill, J. McKee.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64085d996b5a7bf3d8314721ad685fba671813e" translate="yes" xml:space="preserve">
          <source>E. Stadlober, et al., WinRand source code, available via FTP, or H. Zechner,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48aae57466e8c8e7e496e9478fb8f61cad0b22eb" translate="yes" xml:space="preserve">
          <source>E. Stadlober, et al., WinRand source code, available via FTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36b6d58528d62e9652a8ad585bb39360a95e030" translate="yes" xml:space="preserve">
          <source>E.1 Build Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd95e44f4b8c59cd481ff068d06269ad8c9abe72" translate="yes" xml:space="preserve">
          <source>E.1.1 Obtaining the Dependencies Automatically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf18d062adc52288e2be3086e08e0410e49274d2" translate="yes" xml:space="preserve">
          <source>E.1.2 Build Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004adf3d41eec9413857be7ac2fa7cb94ab29127" translate="yes" xml:space="preserve">
          <source>E.1.3 External Packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafd8cfbaccd25ccfed067287d1a55efa4609d5c" translate="yes" xml:space="preserve">
          <source>E.2 Running Configure and Make</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f49e72cdbc49c34d8c5b9e90c711240d2ea78a4" translate="yes" xml:space="preserve">
          <source>E.3 Compiling Octave with 64-bit Indexing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48a74584ba66aef893eecfa3d5db0f402343de88" translate="yes" xml:space="preserve">
          <source>E.4 Installation Problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3743c2ce17d77bd9fd39ee89e1ee91c3908e3f" translate="yes" xml:space="preserve">
          <source>EBuild Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd159ef92bf54ff05b871d6bbe683ba20b51f787" translate="yes" xml:space="preserve">
          <source>EBuild Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5aceea37995485786aeb37f1101ca9f5f91a5b6" translate="yes" xml:space="preserve">
          <source>ECompiling Octave with 64-bit Indexing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4681c1294d3b35b0c439c3d8dbd7c4e9fce46e0d" translate="yes" xml:space="preserve">
          <source>EDITOR</source>
          <target state="translated">EDITOR</target>
        </trans-unit>
        <trans-unit id="f56efe42a6d92c1ce088ba37794d154a7a1a029c" translate="yes" xml:space="preserve">
          <source>EDITOR (new_val, &quot;local&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f013b25e4c2082fc9d2e08d6cbe318c40a5f62" translate="yes" xml:space="preserve">
          <source>EExternal Packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d91b35a62205d97e2b3656b8f11ef553f53f85d" translate="yes" xml:space="preserve">
          <source>EIDORS - Electrical Impedance Tomography and Diffuse optical Tomography Reconstruction Software &lt;a href=&quot;http://eidors3d.sourceforge.net&quot;&gt;http://eidors3d.sourceforge.net&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fc78d4d2fd7deadb63a2bf6e9ac5e0efd19b64" translate="yes" xml:space="preserve">
          <source>EInstallation Problems</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54febf31399865b922c143850536b3c8103720f9" translate="yes" xml:space="preserve">
          <source>ENTER</source>
          <target state="translated">ENTER</target>
        </trans-unit>
        <trans-unit id="55f25f9b43ab05025087e33642d24a7721d32202" translate="yes" xml:space="preserve">
          <source>EOF and Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14753482fb10dc6729e101714958d8f73600477" translate="yes" xml:space="preserve">
          <source>EObtaining the Dependencies Automatically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428136de30bd1c34d7f072c8cab2520c3723d7cc" translate="yes" xml:space="preserve">
          <source>ERunning Configure and Make</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042b890a506cb1f86b057af9f2065c60f0543326" translate="yes" xml:space="preserve">
          <source>ESC</source>
          <target state="translated">ESC</target>
        </trans-unit>
        <trans-unit id="9659699670b30983eb4e3c22454887e3c9c6ce39" translate="yes" xml:space="preserve">
          <source>EXAMPLES</source>
          <target state="translated">EXAMPLES</target>
        </trans-unit>
        <trans-unit id="86b720d5011981037807baf829dd8366dd00abc8" translate="yes" xml:space="preserve">
          <source>EXEC_PATH</source>
          <target state="translated">EXEC_PATH</target>
        </trans-unit>
        <trans-unit id="c234c901eaf9e510edc3a7f93b5ea487050c793b" translate="yes" xml:space="preserve">
          <source>EXEC_PATH (new_val, &quot;local&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f265fd54dd41ba2aca2b4f0dd48dac7fc8f2e2" translate="yes" xml:space="preserve">
          <source>Each block is evaluated in its own function environment, which means that variables defined in one block are not automatically shared with other blocks. If you do want to share variables, then you must declare them as &lt;code&gt;shared&lt;/code&gt; before you use them. For example, the following declares the variable &lt;var&gt;a&lt;/var&gt;, gives it an initial value (default is empty), and then uses it in several subsequent tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cce606e048ec7cecec99ef68ed43bcc6176032" translate="yes" xml:space="preserve">
          <source>Each control statement has a corresponding &lt;em&gt;end&lt;/em&gt; statement that marks the end of the control statement. For example, the keyword &lt;code&gt;endif&lt;/code&gt; marks the end of an &lt;code&gt;if&lt;/code&gt; statement, and &lt;code&gt;endwhile&lt;/code&gt; marks the end of a &lt;code&gt;while&lt;/code&gt; statement. You can use the keyword &lt;code&gt;end&lt;/code&gt; anywhere a more specific end keyword is expected, but using the more specific keywords is preferred because if you use them, Octave is able to provide better diagnostics for mismatched or missing end tokens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37232eac311cfe65f68e75b9c79e2df7923b62f8" translate="yes" xml:space="preserve">
          <source>Each data point has a low-side error and an upper-side error. The errorbars are not symmetric and are drawn from &lt;var&gt;data&lt;/var&gt;(n)-&lt;var&gt;lerr&lt;/var&gt;(n) to &lt;var&gt;data&lt;/var&gt;(n)+&lt;var&gt;uerr&lt;/var&gt;(n).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130e4b9a759e7b3d6745818c3bdf1a99db85bf6e" translate="yes" xml:space="preserve">
          <source>Each data point has a particular error value. The errorbars are symmetric and are drawn from &lt;var&gt;data&lt;/var&gt;(n)-&lt;var&gt;err&lt;/var&gt;(n) to &lt;var&gt;data&lt;/var&gt;(n)+&lt;var&gt;err&lt;/var&gt;(n).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c30f936b939920c0c2c4329177c79478e5c5ad15" translate="yes" xml:space="preserve">
          <source>Each dimension argument (&lt;var&gt;dim1&lt;/var&gt;, &lt;var&gt;dim2&lt;/var&gt;, etc.) is a vector of integers which specifies how to divide that dimension&amp;rsquo;s elements amongst the new elements in the output &lt;var&gt;C&lt;/var&gt;. The number of elements in the &lt;var&gt;i&lt;/var&gt;-th dimension is &lt;code&gt;size (&lt;var&gt;A&lt;/var&gt;, &lt;var&gt;i&lt;/var&gt;)&lt;/code&gt;. Because all elements in &lt;var&gt;A&lt;/var&gt; must be partitioned, there is a requirement that &lt;code&gt;sum (&lt;var&gt;di&lt;/var&gt;) == size
(&lt;var&gt;A&lt;/var&gt;, i)&lt;/code&gt;. The size of the output cell &lt;var&gt;C&lt;/var&gt; is numel (&lt;var&gt;dim1&lt;/var&gt;) x numel (&lt;var&gt;dim2&lt;/var&gt;) x &amp;hellip; x numel (&lt;var&gt;dimn&lt;/var&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e7cd33a3a483bdbb79204a35427492c0d448e4" translate="yes" xml:space="preserve">
          <source>Each element of the 3-dimensional array &lt;var&gt;v&lt;/var&gt; represents a scalar value at a location given by the parameters &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt;. The parameters &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;x&lt;/var&gt;, and &lt;var&gt;z&lt;/var&gt; are either 3-dimensional arrays of the same size as the array &lt;var&gt;v&lt;/var&gt; in the &lt;code&gt;&quot;meshgrid&quot;&lt;/code&gt; format or vectors. The parameters &lt;var&gt;xi&lt;/var&gt;, etc. respect a similar format to &lt;var&gt;x&lt;/var&gt;, etc., and they represent the points at which the array &lt;var&gt;vi&lt;/var&gt; is interpolated using interp3. The vectors &lt;var&gt;sx&lt;/var&gt;, &lt;var&gt;sy&lt;/var&gt;, and &lt;var&gt;sz&lt;/var&gt; contain points of orthogonal slices of the respective axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1ae8b9ea7892a165f816434bd6d8e6a5c44f97" translate="yes" xml:space="preserve">
          <source>Each element of the &lt;var&gt;n&lt;/var&gt;-dimensional array &lt;var&gt;v&lt;/var&gt; represents a value at a location given by the parameters &lt;var&gt;x1&lt;/var&gt;, &lt;var&gt;x2&lt;/var&gt;, &amp;hellip;, &lt;var&gt;xn&lt;/var&gt;. The parameters &lt;var&gt;x1&lt;/var&gt;, &lt;var&gt;x2&lt;/var&gt;, &amp;hellip;, &lt;var&gt;xn&lt;/var&gt; are either &lt;var&gt;n&lt;/var&gt;-dimensional arrays of the same size as the array &lt;var&gt;v&lt;/var&gt; in the &lt;code&gt;&quot;ndgrid&quot;&lt;/code&gt; format or vectors. The parameters &lt;var&gt;y1&lt;/var&gt;, etc. respect a similar format to &lt;var&gt;x1&lt;/var&gt;, etc., and they represent the points at which the array &lt;var&gt;vi&lt;/var&gt; is interpolated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b1b0ac630f39c7bcf4843a57e73bb9a7463d6f" translate="yes" xml:space="preserve">
          <source>Each element of the result is true if the corresponding element of &lt;var&gt;boolean&lt;/var&gt; is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58438fc3db91bf1cd1c6cd1d8df762e147c390f" translate="yes" xml:space="preserve">
          <source>Each function expects a particular number of arguments. For example, the &lt;code&gt;sqrt&lt;/code&gt; function must be called with a single argument, the number to take the square root of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="282e77b1e2ec1768b6f52da3c87a0990fa46b464" translate="yes" xml:space="preserve">
          <source>Each of these objects has a function by the same name, and, each of these functions returns a graphics handle pointing to an object of the corresponding type. In addition there are several functions which operate on properties of the graphics objects and which also return handles: the functions &lt;code&gt;plot&lt;/code&gt; and &lt;code&gt;plot3&lt;/code&gt; return a handle pointing to an object of type line, the function &lt;code&gt;subplot&lt;/code&gt; returns a handle pointing to an object of type axes, the function &lt;code&gt;fill&lt;/code&gt; returns a handle pointing to an object of type patch, the functions &lt;code&gt;area&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;barh&lt;/code&gt;, &lt;code&gt;contour&lt;/code&gt;, &lt;code&gt;contourf&lt;/code&gt;, &lt;code&gt;contour3&lt;/code&gt;, &lt;code&gt;surf&lt;/code&gt;, &lt;code&gt;mesh&lt;/code&gt;, &lt;code&gt;surfc&lt;/code&gt;, &lt;code&gt;meshc&lt;/code&gt;, &lt;code&gt;errorbar&lt;/code&gt;, &lt;code&gt;quiver&lt;/code&gt;, &lt;code&gt;quiver3&lt;/code&gt;, &lt;code&gt;scatter&lt;/code&gt;, &lt;code&gt;scatter3&lt;/code&gt;, &lt;code&gt;stair&lt;/code&gt;, &lt;code&gt;stem&lt;/code&gt;, &lt;code&gt;stem3&lt;/code&gt; each return a handle to a complex data structure as documented in &lt;a href=&quot;data-sources-in-object-groups#XREFdatasources&quot;&gt;Data Sources&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ddfef15658937be0c9ff50015f85b5e2cb1a1f" translate="yes" xml:space="preserve">
          <source>Each row of &lt;var&gt;a&lt;/var&gt; and &lt;var&gt;b&lt;/var&gt; define a rectangle, and if both define multiple rectangles, then the output, &lt;var&gt;area&lt;/var&gt;, is a matrix where the i-th row corresponds to the i-th row of a and the j-th column corresponds to the j-th row of b.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68be58eaff1c635682889d235a5ee42463f91e63" translate="yes" xml:space="preserve">
          <source>Each row of &lt;var&gt;strmat&lt;/var&gt; becomes an element of &lt;var&gt;cstr&lt;/var&gt;. Any trailing spaces in a row are deleted before conversion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bcd0b42641278a53415564620bdcdcb23482e8b" translate="yes" xml:space="preserve">
          <source>Each row of &lt;var&gt;y&lt;/var&gt; is a &lt;em&gt;p&lt;/em&gt;-variate observation in which each column represents a variable. Likewise, the rows of &lt;var&gt;x&lt;/var&gt; represent &lt;em&gt;k&lt;/em&gt;-variate observations or possibly designed values. Furthermore, the collection of observations &lt;var&gt;x&lt;/var&gt; must be of adequate rank, &lt;em&gt;k&lt;/em&gt;, otherwise &lt;var&gt;b&lt;/var&gt; cannot be uniquely estimated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77131a8dc57165b0d240d8a1656653675ed43aa0" translate="yes" xml:space="preserve">
          <source>Earlier versions of Octave provided plotting through the use of gnuplot. This capability is still available. But, a newer plotting capability is provided by access to OpenGL. Which plotting system is used is controlled by the &lt;code&gt;graphics_toolkit&lt;/code&gt; function. See &lt;a href=&quot;graphics-toolkits#Graphics-Toolkits&quot;&gt;Graphics Toolkits&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d761f39c77bac0da4a1dce408664824a17d52e4" translate="yes" xml:space="preserve">
          <source>Echo commands as they are executed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0283b8873b091a5fb24b31b5ff648004450c85" translate="yes" xml:space="preserve">
          <source>Edit the history list using the editor named by the variable &lt;code&gt;EDITOR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69177b8bc844210665c5fb0ecf6fd0d5c5e69f09" translate="yes" xml:space="preserve">
          <source>Edit the named function, or change editor settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63db69211289a032ad90a6be867a05affd7a72d1" translate="yes" xml:space="preserve">
          <source>Efficient and accurate algorithms for the computation and inversion of the incomplete gamma function ratios</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e32468b042419dc94f5d4c22b6a437f4408954b5" translate="yes" xml:space="preserve">
          <source>Efficient sampling from continuous and discrete unimodal distributions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9d6710f63ebc727a47a8b4ef3896dbd6cc2b41" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;&quot;on&quot;&lt;/code&gt; or &lt;code&gt;&quot;off&quot;&lt;/code&gt;. See &lt;code&gt;&quot;-append&quot;&lt;/code&gt; above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e4360bae4f3c6e091f49b1bc985c1d8845d2c61" translate="yes" xml:space="preserve">
          <source>Element-by-element Boolean Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bcf1a89565623473e27ebc1326b1d18c8b589b2" translate="yes" xml:space="preserve">
          <source>Element-by-element addition. This operator is equivalent to &lt;code&gt;+&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f950d5970ae9c86eeac39c8261fa6b727e205a" translate="yes" xml:space="preserve">
          <source>Element-by-element boolean expressions can be used wherever comparison expressions can be used. They can be used in &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; statements. However, a matrix value used as the condition in an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;while&lt;/code&gt; statement is only true if &lt;em&gt;all&lt;/em&gt; of its elements are nonzero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c36279a54e7d31967a7859d823b9055607e92757" translate="yes" xml:space="preserve">
          <source>Element-by-element left division. Each element of &lt;var&gt;y&lt;/var&gt; is divided by each corresponding element of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06feafc41a55e644373ce45ff160e86877f68286" translate="yes" xml:space="preserve">
          <source>Element-by-element multiplication. If both operands are matrices, the number of rows and columns must both agree, or they must be broadcastable to the same shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd062ae598eb4b51f3d4b39da976a4b65eda7681" translate="yes" xml:space="preserve">
          <source>Element-by-element power operator. If both operands are matrices, the number of rows and columns must both agree, or they must be broadcastable to the same shape. If several complex results are possible, the one with smallest non-negative argument (angle) is taken. This rule may return a complex root even when a real root is also possible. Use &lt;code&gt;realpow&lt;/code&gt;, &lt;code&gt;realsqrt&lt;/code&gt;, &lt;code&gt;cbrt&lt;/code&gt;, or &lt;code&gt;nthroot&lt;/code&gt; if a real result is preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee128fb55b76ebe1986260159d5a0ad9eb15bdb7" translate="yes" xml:space="preserve">
          <source>Element-by-element right division.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b277b4f2f670caa9b9c22ffa05a7f49f6a7b5d8" translate="yes" xml:space="preserve">
          <source>Element-by-element subtraction. This operator is equivalent to &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1deb8ac551d9be3c8ad191f6efb71f711973ed87" translate="yes" xml:space="preserve">
          <source>Element-wise left division</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61766f42f326ac2163d5079cb87bec0fe4af0f0" translate="yes" xml:space="preserve">
          <source>Element-wise multiplication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156fe71c2a99d8ac84f9b0f48f609e994052fe6a" translate="yes" xml:space="preserve">
          <source>Element-wise power</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f98c93c1cc78dd3203c527f7a56fa3227f1f262" translate="yes" xml:space="preserve">
          <source>Element-wise right division</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1787b8e115ca163559016675c849506ad18173cc" translate="yes" xml:space="preserve">
          <source>Elementary functions, principally trigonometric.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570c740c723b40c5e86dc96ad714fa5a58344e25" translate="yes" xml:space="preserve">
          <source>Elements can be deleted from a structure array in a similar manner to a numerical array, by assigning the elements to an empty matrix. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0357ca57bb6d68fdbf7de6d980ade89da5ec5d73" translate="yes" xml:space="preserve">
          <source>Elements in &lt;var&gt;C&lt;/var&gt; are passed on to the named function individually. The function &lt;var&gt;name&lt;/var&gt; can be one of the functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83aa0ca9fcac436f0987dafbf7a9353f7e050370" translate="yes" xml:space="preserve">
          <source>Elements of &lt;var&gt;c&lt;/var&gt; must be numeric, logical, or char matrices; or cell arrays; or structs; and &lt;code&gt;cat&lt;/code&gt; must be able to concatenate them together.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12572fe0d53b77a5b1f057329e8447d6ea3d3561" translate="yes" xml:space="preserve">
          <source>Elements of a matrix may be arbitrary expressions, provided that the dimensions all make sense when combining the various pieces. For example, given the above matrix, the expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6258300652179b24ac7e5f0b3a1395541beb7c2" translate="yes" xml:space="preserve">
          <source>Elements of structures can be of any value type. For example, the three expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b96327ccc3c519e5c8f5d418e2850e6f9c1eef3" translate="yes" xml:space="preserve">
          <source>Elements of the result are true if both corresponding elements of &lt;var&gt;boolean1&lt;/var&gt; and &lt;var&gt;boolean2&lt;/var&gt; are true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587ae8e707acfd315831058097587602d75705dc" translate="yes" xml:space="preserve">
          <source>Elements of the result are true if either of the corresponding elements of &lt;var&gt;boolean1&lt;/var&gt; or &lt;var&gt;boolean2&lt;/var&gt; is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb939bee84b9c8bbccbbbeb318c376d979901b6a" translate="yes" xml:space="preserve">
          <source>Elliptic integrals of the first kind are defined as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab701640f244ab5d8dc1305aa7b3e1d328e57384" translate="yes" xml:space="preserve">
          <source>Elliptic integrals of the second kind are defined as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e22b3ae194d6e3d4746abfc262dcaa20cb39c54" translate="yes" xml:space="preserve">
          <source>Empirical Distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f967304b6a08ba6a72ce026f24371e91c786d680" translate="yes" xml:space="preserve">
          <source>Empty Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f127300f87d8d43dc7c9c0d6534a458ac872c1" translate="yes" xml:space="preserve">
          <source>Empty matrices may also be used in assignment statements as a convenient way to delete rows or columns of matrices. See &lt;a href=&quot;assignment-ops#Assignment-Ops&quot;&gt;Assignment Expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3260bcf8776376b3a4c1fa320fea6f4a7620028a" translate="yes" xml:space="preserve">
          <source>Enable JIT compiler debugging and tracing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efdd69fbacb48872db18969aac798686d2f5cb3" translate="yes" xml:space="preserve">
          <source>Enable compiler options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adad7253e99d038cd83598400201b2b717ff377e" translate="yes" xml:space="preserve">
          <source>Enable debugging options for compilers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6245357923b86bdb89ca04ef16fb3061b9ad4f15" translate="yes" xml:space="preserve">
          <source>Enable echoing of commands as they are executed in script files and functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09aacad398038b893f1fce80c06f4a8e725ed230" translate="yes" xml:space="preserve">
          <source>Enable echoing of commands as they are executed in script files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ddb90e91e7afb7a8d7a239d4cc7458ea492771" translate="yes" xml:space="preserve">
          <source>Enable echoing of commands as they are executed in the named function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfac40258a5821b6d3ed7242906824d69951a79d" translate="yes" xml:space="preserve">
          <source>Enable or disable the display of warnings identified by &lt;var&gt;id&lt;/var&gt; and optionally return their previous state &lt;var&gt;stout&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a39ba0bb82bfdc2fbb7af356f72befef4b5eea9" translate="yes" xml:space="preserve">
          <source>Enable or disable vectorized integration. A value of &lt;code&gt;false&lt;/code&gt; forces Octave to use only scalar inputs when calling the integrand, which enables integrands &lt;em&gt;f(x,y)&lt;/em&gt; that have not been vectorized and only accept &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; as scalars to be used. The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5e80db485e599af0c433459972f8314dc72077" translate="yes" xml:space="preserve">
          <source>Enable the JIT compiler used for accelerating loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a01dcf9197537a1dbb6a76b2e10171846f68356" translate="yes" xml:space="preserve">
          <source>Enable/disable transforms to weaken singularities on the edge of the integration domain. The default value is &lt;var&gt;true&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6109c635d0c66895167122fe3bb7ae0d7a7b60" translate="yes" xml:space="preserve">
          <source>Enabling and Disabling Warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b734915f4d6ddd8575e0c21e423382ae10d5f2d" translate="yes" xml:space="preserve">
          <source>Encapsulated PostScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bec2999ad3599506cf7b658e7a529a0e6450964" translate="yes" xml:space="preserve">
          <source>Encapsulated PostScript (level 1 and 2, mono and color). The OpenGL-based toolkits always generate PostScript level 3.0 and have limited support for text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc945534fc7a5e560d48b433407a13f76dd660b" translate="yes" xml:space="preserve">
          <source>Encode a double matrix or array &lt;var&gt;x&lt;/var&gt; into the base64 format string &lt;var&gt;s&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2531a1d80c44db7ce3b80b5b348609f36f3438a" translate="yes" xml:space="preserve">
          <source>End of File and Errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b390ed229d45611922dd0e222b3fee28a1db9" translate="yes" xml:space="preserve">
          <source>Endian option for formats that support it. Value is &lt;code&gt;&quot;little-endian&quot;&lt;/code&gt;, &lt;code&gt;&quot;big-endian&quot;&lt;/code&gt;, or &lt;code&gt;&quot;undefined&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ab9928568406569d7667fa0afe18d2079b5796" translate="yes" xml:space="preserve">
          <source>Enhanced MetaFile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8835a116fc2083307143f92ebf4c99197ddefa08" translate="yes" xml:space="preserve">
          <source>Enter parser debugging mode. Using this option will cause Octave&amp;rsquo;s parser to print a lot of information about the commands it reads, and is probably only useful if you are actually trying to debug the parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4304ff301b8bf3b404122c351540992f4bd2981a" translate="yes" xml:space="preserve">
          <source>Entering Debug Mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa2fdd6e7114b9713b607341dcfed3bc77c5aa1" translate="yes" xml:space="preserve">
          <source>Entire blocks of code can be commented by enclosing the code between matching &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec072bba7befaa68af710fe3549eb0491d7badd1" translate="yes" xml:space="preserve">
          <source>Environment Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b9a04dcb3e0ce7661aca803fc0ceecf849e1d8" translate="yes" xml:space="preserve">
          <source>Equal to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ce1f8e6da1725e2d417af0f9f20d780cfe0867" translate="yes" xml:space="preserve">
          <source>Equilibration scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c1fc7412cfeab1eff882f197714598fd9ee9cb" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;&quot;tight&quot;&lt;/code&gt; and &lt;code&gt;&quot;equal&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a87072d08619ed70d4c1b79498f913ac0a59e57" translate="yes" xml:space="preserve">
          <source>Equivalent to &lt;code&gt;hold on&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ead2a5294dd50b57b00f9d6616e399cd1338a2" translate="yes" xml:space="preserve">
          <source>Error Bar Series</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa647c1ab7e45907989ea68b5acf3879755d28ca" translate="yes" xml:space="preserve">
          <source>Error Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c14f60a0d4344da4c01680143ef5113a2229cf" translate="yes" xml:space="preserve">
          <source>Error and warning blocks are like test blocks, but they only succeed if the code generates an error. You can check the text of the error is correct using an optional regular expression &lt;code&gt;&amp;lt;pattern&amp;gt;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d324bad43d2b08fa320ea1410bef71927bd6213b" translate="yes" xml:space="preserve">
          <source>Error and warning messages only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a933708b66e40c5798233f864e5e6e211660c16" translate="yes" xml:space="preserve">
          <source>Error bar series are created by the &lt;code&gt;errorbar&lt;/code&gt; function. Each &lt;code&gt;hggroup&lt;/code&gt; element contains two line objects representing the data and the errorbars separately. The properties of the error bar series are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d55379fca72e038bbb024d53591b66874da886d" translate="yes" xml:space="preserve">
          <source>Error code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5261ee676051c8a39930597f13a09554d54bb9" translate="yes" xml:space="preserve">
          <source>Error&amp;mdash;no computation, algorithm termination condition not met, return &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805e86a8cbf628e38e4c45612c005a504009e79a" translate="yes" xml:space="preserve">
          <source>Errors</source>
          <target state="translated">Errors</target>
        </trans-unit>
        <trans-unit id="f564d1f5c7659e009b0094aad94e9c92291aa429" translate="yes" xml:space="preserve">
          <source>Errors and Warnings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744fcd521a523dd0a422f4c5239001e0f9f93a8e" translate="yes" xml:space="preserve">
          <source>Escape Sequences in String Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c359380406f5396d968403e574e96640a73c238" translate="yes" xml:space="preserve">
          <source>Escape sequences begin with a leading backslash (&lt;code&gt;'\'&lt;/code&gt;) followed by 1&amp;ndash;3 characters (.e.g., &lt;code&gt;&quot;\n&quot;&lt;/code&gt; =&amp;gt; newline).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5562712d67e0d1ca27064211eba84862c9d37543" translate="yes" xml:space="preserve">
          <source>Escape sequences defined below can also be used inside list operators. For example, a template for a floating point number might be &lt;code&gt;[-+.\d]+&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c87e2f03821224acb52069f21f71bc6f353f5f1" translate="yes" xml:space="preserve">
          <source>Estimate &lt;var&gt;x&lt;/var&gt; under the model &lt;var&gt;b&lt;/var&gt; = &lt;var&gt;A&lt;/var&gt;&lt;var&gt;x&lt;/var&gt; + &lt;var&gt;w&lt;/var&gt;, where the noise &lt;var&gt;w&lt;/var&gt; is assumed to follow a normal distribution with covariance matrix &lt;em&gt;{\sigma^2} V&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a7989e74cef36148d322faf8ef0115a818dcda" translate="yes" xml:space="preserve">
          <source>Estimate the 1-norm condition number of a square matrix &lt;var&gt;A&lt;/var&gt; using &lt;var&gt;t&lt;/var&gt; test vectors and a randomized 1-norm estimator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54c3cbdb5a0814ba53f3e6365a6ba8277254d47" translate="yes" xml:space="preserve">
          <source>Estimate the 1-norm of the matrix &lt;var&gt;A&lt;/var&gt; using a block algorithm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c55a9cf21bbc120574264841c4395bdcb8d92ac" translate="yes" xml:space="preserve">
          <source>Estimate the 2-norm of the matrix &lt;var&gt;A&lt;/var&gt; using a power series analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf90cd529906594a1493659ad0d3fa4322d2561" translate="yes" xml:space="preserve">
          <source>Estimate the Hurst parameter of sample &lt;var&gt;x&lt;/var&gt; via the rescaled range statistic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e6cc1a3632225a008037ed07b5cfb1cde12a3c" translate="yes" xml:space="preserve">
          <source>Evaluate &lt;var&gt;code&lt;/var&gt; and exit when finished unless</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1417bd2f8d34317b87ac445d10617afcc962df8a" translate="yes" xml:space="preserve">
          <source>Evaluate a function with multiple minima, maxima, and zero crossings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7fa4c68bc91390e58b5ed084eae2a19739fbd3" translate="yes" xml:space="preserve">
          <source>Evaluate a polynomial in the matrix sense.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf6615ae1a1e9b8619b8a0ace5a61f87719ceac" translate="yes" xml:space="preserve">
          <source>Evaluate any &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bb19540c0cef7109863ae5ad3db486b8a48c89" translate="yes" xml:space="preserve">
          <source>Evaluate the boundary jumps of a piecewise polynomial.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="200535da4d9b4592fc94435b1f79244c39e75d64" translate="yes" xml:space="preserve">
          <source>Evaluate the datasource properties in the base workspace. (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0047148705b2164b311a250f41f827b663747f8f" translate="yes" xml:space="preserve">
          <source>Evaluate the datasource properties in the workspace of the function that called &lt;code&gt;refreshdata&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66e6c53e1934536d1b28ef346319ac373e262bd2" translate="yes" xml:space="preserve">
          <source>Evaluate the function named &lt;var&gt;name&lt;/var&gt; on the elements of the cell array &lt;var&gt;C&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5562fa824043198a99b57c06337525fa791028be" translate="yes" xml:space="preserve">
          <source>Evaluate the function named &lt;var&gt;name&lt;/var&gt; on the fields of the structure &lt;var&gt;S&lt;/var&gt;. The fields of &lt;var&gt;S&lt;/var&gt; are passed to the function &lt;var&gt;func&lt;/var&gt; individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07ac920285e69a75e6a1d2c8477bac835aa7a8f" translate="yes" xml:space="preserve">
          <source>Evaluate the function named &lt;var&gt;name&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b50d54692910d9783534ce91ab50d92c885ce42" translate="yes" xml:space="preserve">
          <source>Evaluate the piecewise polynomial structure &lt;var&gt;pp&lt;/var&gt; at the points &lt;var&gt;xi&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17be57063f55abaf12888eeb16696ac04cb68b65" translate="yes" xml:space="preserve">
          <source>Evaluate the polynomial &lt;var&gt;p&lt;/var&gt; at the specified values of &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d91d5270a7f03f98363cd6ff639bd433e55d25" translate="yes" xml:space="preserve">
          <source>Evaluate the response at the specific frequencies in the vector &lt;var&gt;w&lt;/var&gt;. The values for &lt;var&gt;w&lt;/var&gt; are measured in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15a82033b847599047ce216ef34df930a711ddb" translate="yes" xml:space="preserve">
          <source>Evaluating Polynomials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7513853508e7c6e3aa07908df2a450a026eb88" translate="yes" xml:space="preserve">
          <source>Evaluation</source>
          <target state="translated">Evaluation</target>
        </trans-unit>
        <trans-unit id="bb51b95ce0002371cb5ea49458cb059c57d93de5" translate="yes" xml:space="preserve">
          <source>Evaluation Notation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4d89ae7ad917af17750e7fd3418e9fe5f3075d" translate="yes" xml:space="preserve">
          <source>Evaluation in a Different Context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a34ec428de04fb4e55f9cbff377e8a40d1664ca" translate="yes" xml:space="preserve">
          <source>Even if paging is turned on, the standard error is not sent to the pager. It is useful for error messages and prompts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f1f2c907335116e4f8343feebbcdb6f4d2135c7" translate="yes" xml:space="preserve">
          <source>Even if the problem you experience is a fatal signal, you should still say so explicitly. Suppose something strange is going on, such as, your copy of the interpreter is out of sync, or you have encountered a bug in the C library on your system. Your copy might crash and the copy here would not. If you said to expect a crash, then when the interpreter here fails to crash, we would know that the bug was not happening. If you don&amp;rsquo;t say to expect a crash, then we would not know whether the bug was happening. We would not be able to draw any conclusion from our observations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2691c7d7e55d6fc49fdb9d5481a3c32e36605e53" translate="yes" xml:space="preserve">
          <source>Even though Octave uses pass-by-value semantics for function arguments, values are not copied unnecessarily. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75efb9fe9141d34015254046725d493a5401e741" translate="yes" xml:space="preserve">
          <source>Even though a script file may not begin with the &lt;code&gt;function&lt;/code&gt; keyword, it is possible to define more than one function in a single script file and load (but not execute) all of them at once. To do this, the first token in the file (ignoring comments and other white space) must be something other than &lt;code&gt;function&lt;/code&gt;. If you have no other statements to evaluate, you can use a statement that has no effect, like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91b77477be35362609180541c877e3b753855b3" translate="yes" xml:space="preserve">
          <source>Even when a function already exists outside the language, it may be better to simply reproduce the behavior in an m-file rather than attempt to interface to the outside code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8653e23932b01395191a0d4f64de3864f8face" translate="yes" xml:space="preserve">
          <source>Event function. An event function must have the form &lt;code&gt;[value, isterminal, direction] = my_events_f (t, y)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f6b31be05c3fc47e6e1d28a83b740481ffe7ca" translate="yes" xml:space="preserve">
          <source>Events which set &lt;code&gt;currentpoint&lt;/code&gt; are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea280372e26f657fb86dafb22e559ee0eb764e0" translate="yes" xml:space="preserve">
          <source>Every command may also have an alignment modifier:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3320aa15defa6c79a9ad9397634a89d0f1631a27" translate="yes" xml:space="preserve">
          <source>Everything else is of the form &lt;code&gt;NameOfOption: ValueOfOption&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="5c43e58153003e7308b01cabca75df2de7e55d98" translate="yes" xml:space="preserve">
          <source>Example 1 (sum at repeated indices):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339a4b6dae8ade47e181e0ae264d6124d1058160" translate="yes" xml:space="preserve">
          <source>Example 1 : benchmarking code with internal timer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c59604b41ffa7039100a4ddca30d28f149137c" translate="yes" xml:space="preserve">
          <source>Example 1 : exclude main diagonal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa880544bca5befd6e0535e76cce00bb9139a98" translate="yes" xml:space="preserve">
          <source>Example 1 : integrate a rectangular region in x-y plane</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f60d2f8a0b7e5171a9f9069278f7d6313c3f2e" translate="yes" xml:space="preserve">
          <source>Example 1 : integrate over a rectangular volume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d02ed346bdea581c2a02e0b9895344d02dc12e4" translate="yes" xml:space="preserve">
          <source>Example 1: 2-argument function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c1a791fea79b9d3716041e2a00aa1c8b4d4a497" translate="yes" xml:space="preserve">
          <source>Example 1: Set multiple bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f128fce1b5ff73afcfef517cc9df239035bd7dbd" translate="yes" xml:space="preserve">
          <source>Example 1: set X/Y limits and force a square aspect ratio</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f49a05f833d9e1950aa95075b02861d10925cec" translate="yes" xml:space="preserve">
          <source>Example 1: single row vector output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8390de20adf6a3686b7f1fc3d43a7cd710714e" translate="yes" xml:space="preserve">
          <source>Example 2 (&quot;unique&quot; option):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ecb250d07619a322dd9f0824f35566664f5b5e" translate="yes" xml:space="preserve">
          <source>Example 2 : include first subdiagonal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f96d09342cbff71baccd39ddfd53a9d819dcc1" translate="yes" xml:space="preserve">
          <source>Example 2 : include first superdiagonal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30560da7085efc4e6e0c3ace94fe5a9c454b09a2" translate="yes" xml:space="preserve">
          <source>Example 2 : integrate a triangular region in x-y plane</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c75ce654c41c8446e4db962dea37520580ee65" translate="yes" xml:space="preserve">
          <source>Example 2 : integrate over a spherical volume</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fc86284c7a489242c6f3f1dad9230aab70c0a8" translate="yes" xml:space="preserve">
          <source>Example 2 : mixed timer id and internal timer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1397b649db168b25fb033b0780e81ca541a8e2ee" translate="yes" xml:space="preserve">
          <source>Example 2: Reset and set bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b40984a8e8333ab546db4b39796f1707b873fa9" translate="yes" xml:space="preserve">
          <source>Example 2: enable tick marks on all axes, enable tick mark labels only on the y-axis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e603bd9e55ccb426b79a46e69d937f786c306405" translate="yes" xml:space="preserve">
          <source>Example 2: number of elements in 2nd dimension (columns)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6b102af484deb0fb0f3b86377ed85617bdf6b5" translate="yes" xml:space="preserve">
          <source>Example 2: parametrically defined function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80768f696786912d56caa0fdce1422c7eeb1570e" translate="yes" xml:space="preserve">
          <source>Example 3: number of output arguments == number of dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68962542ba00283d45b5e83821ef53f5c3aea8e0" translate="yes" xml:space="preserve">
          <source>Example 4: number of output arguments &amp;lt; number of dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b958d2116b28c370c2644492bea7fbbed0432b65" translate="yes" xml:space="preserve">
          <source>Example Code - query an existing variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ca892a5cac68e9c6d7dd3ecf6ce6adfc55c118" translate="yes" xml:space="preserve">
          <source>Example Code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fabb1683d22d0469c9e9cac437dfd3fa193ab75" translate="yes" xml:space="preserve">
          <source>Example code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4047e6ba67ac44f803355fc54ecf222bf3ba113" translate="yes" xml:space="preserve">
          <source>Example usage on a UNIX-like system:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="e4448d7cc4d2406179aa1ed508428c69878eeb21" translate="yes" xml:space="preserve">
          <source>Example: 2-argument function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940e3cad2a1ea7e35a6ad3795ee8da139713d268" translate="yes" xml:space="preserve">
          <source>Example: &lt;code&gt;uigetfile (&quot;*.ext&quot;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10caece264e0ff1c08f039bb8c78573306c41f37" translate="yes" xml:space="preserve">
          <source>Example: Compute initial conditions for Robertson&amp;rsquo;s equations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce46b5fdc33df3d7288b2792d3d591841ee2116e" translate="yes" xml:space="preserve">
          <source>Example: Get the pixels of a figure image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa48b6cee86a435bff5edc30262ffa7c9090fb2" translate="yes" xml:space="preserve">
          <source>Example: Print figure 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2011a485ac9f7d5dd5ce0b91af9f98fcc0fd7fe" translate="yes" xml:space="preserve">
          <source>Example: Print to a file using PDF and JPEG formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b20467187960e856fb9e49117cd906559036b72" translate="yes" xml:space="preserve">
          <source>Example: Print to printer named PS_printer using PostScript format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f200572446c2699d0d0c0afe1a3c4673ef0a78a0" translate="yes" xml:space="preserve">
          <source>Example: Second derivative of 2*x^3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062650a21be692badce18130d30153b8315855ad" translate="yes" xml:space="preserve">
          <source>Example: Solve Robertson&amp;rsquo;s equations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4efae6b8274e3af3ae925d54c5f68d7801282e" translate="yes" xml:space="preserve">
          <source>Example: Solve the Van der Pol equation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6844de0adfbf98380ad6e5724f533a5cd9e421ed" translate="yes" xml:space="preserve">
          <source>Example: Verify identity sin^2 + cos^2 = 1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c61f5ebf581376b6888e57d871726c654bc5cd4" translate="yes" xml:space="preserve">
          <source>Example: a triangulated 3/4 circle and the corresponding shrunken version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="683f6635ad38c53a738e8a732e9189654310eea7" translate="yes" xml:space="preserve">
          <source>Example: high resolution raster output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2129408d559836bed8ee75c6098eb373743c36d1" translate="yes" xml:space="preserve">
          <source>Example: red square</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="443cea00c09d4f87b7c13db896aad06de04a2df4" translate="yes" xml:space="preserve">
          <source>Example: solve an anonymous implementation of the &lt;code&gt;&quot;Van der Pol&quot;&lt;/code&gt; equation and display the results while solving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47579f6f3a6ac7bac266735a9516dfbeabc4348" translate="yes" xml:space="preserve">
          <source>Example: sort by column 2 in descending order, then 3 in ascending order</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="50a0fb6a29f6290ecc31519053cc680c3408d02f" translate="yes" xml:space="preserve">
          <source>Examples of Octave code appear in this font or form: &lt;code&gt;svd&amp;nbsp;(a)&lt;/code&gt;. Names that represent variables or function arguments appear in this font or form: &lt;var&gt;first-number&lt;/var&gt;. Commands that you type at the shell prompt appear in this font or form: &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd76aa805bf1a377b42598bd31e085f179625e6" translate="yes" xml:space="preserve">
          <source>Examples of Usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f4f7a0a407a08f04f81d8c573fb64cb16f6dc8" translate="yes" xml:space="preserve">
          <source>Examples of effects of assumed zeros vs. numerical zeros:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608f214cb395ee5086f51ca615ebe96866d45c03" translate="yes" xml:space="preserve">
          <source>Examples with regularexpression delimiters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963b14dcd30053ac79481874bc9cf035b76e3c02" translate="yes" xml:space="preserve">
          <source>Examples with simple delimiters:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="7301317163fc748a88b5185ecfe022a0dc2ed646" translate="yes" xml:space="preserve">
          <source>Except for &lt;small&gt;GLPK&lt;/small&gt; and Qhull, these libraries may also be configured to use 64-bit integers, but most systems do not provide packages built this way. If you wish to experiment with large arrays, the following information may be helpful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8f3778e85bb94b8cee8a0c7aac4a6cf1382694" translate="yes" xml:space="preserve">
          <source>Except for simple one-shot programs, it is not practical to have to define all the functions you need each time you need them. Instead, you will normally want to save them in a file so that you can easily edit them, and save them for use at a later time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21a4243442804de1fdd60bab1b916a644dcf117" translate="yes" xml:space="preserve">
          <source>Except when using the &lt;small&gt;MATLAB&lt;/small&gt; binary data file format or the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf6ccd3b7258a524b3b43cbfb60eb4b47e2775d" translate="yes" xml:space="preserve">
          <source>Except where noted, substituted fields have a fixed size; numeric fields are padded if necessary. Padding is with zeros by default; for fields that display a single number, padding can be changed or inhibited by following the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b71d1ff671a46d8d2183be6e155f27287d7d18" translate="yes" xml:space="preserve">
          <source>Exception and Error Handling in Oct-Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ce42c43f361b5d78ba32ed63e5be632dc4d7ea" translate="yes" xml:space="preserve">
          <source>Executable Octave Programs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fad32a1c0bc0a3306c627c8e523b6211bacff95" translate="yes" xml:space="preserve">
          <source>Executables to be run by Octave rather than the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e49e3828e79fcc0785e0de28deb2a8606e2168" translate="yes" xml:space="preserve">
          <source>Execute a function on each element of an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba32db4a1110a6d904f473f2182b864ebcfe804" translate="yes" xml:space="preserve">
          <source>Execute a shell command specified by &lt;var&gt;string&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e479ac2204518b6cc594b41c43c997da0252ab06" translate="yes" xml:space="preserve">
          <source>Execute a system command if running under a Unix-like operating system, otherwise do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14d72f7e537345e35e65384bf5a3d46f6593bd6" translate="yes" xml:space="preserve">
          <source>Execute a system command if running under a Windows-like operating system, otherwise do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8985e38a044b6d59b420b070747d05391c6dd83" translate="yes" xml:space="preserve">
          <source>Execute built-in demos for all m-files in the specified &lt;var&gt;directory&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8df283ee730ca46736fc25de008275772c16df9" translate="yes" xml:space="preserve">
          <source>Execute built-in tests for all m-files in the specified &lt;var&gt;directory&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6224939718b7022b2becfb70fcfdc56b3c06642" translate="yes" xml:space="preserve">
          <source>Execute commands from &lt;var&gt;file&lt;/var&gt;. Exit when done unless</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1ce5476ba86d687e43e1a3efe5d63d420cea19" translate="yes" xml:space="preserve">
          <source>Execute the program (on Windows systems only). No &lt;var&gt;output&lt;/var&gt; value is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ec4aaa299d90fe0a8a64f1362c48d2f4c8bdfe" translate="yes" xml:space="preserve">
          <source>Exit the current Octave session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba2a2e4b6399794ea3db23fffd4992fe6e593ae" translate="yes" xml:space="preserve">
          <source>Explicit and Implicit Conversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487766b5a03c09b141bc7d83f8750696f0986bca" translate="yes" xml:space="preserve">
          <source>Exploratory Data Analysis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2167dafc6bda2afb47ea9e9f57d9f485258ed5" translate="yes" xml:space="preserve">
          <source>Exponent for the specular reflex. The lower the value, the more the reflex is spread out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bd521e582d8a98e0e0586f8bb7dfadbd7e6807" translate="yes" xml:space="preserve">
          <source>Exponential Distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54d5695aa4addc15d165c8fbeac6ec32e14fa5a9" translate="yes" xml:space="preserve">
          <source>Exponential format. The number to be represented is split between a mantissa and an exponent (power of 10). The mantissa has 5 significant digits in the short format. In the long format, double values are displayed with 16 significant digits and single values are displayed with 8. For example, with the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c1b4ec7a3c99ff3f286d71905c514eade534c42" translate="yes" xml:space="preserve">
          <source>Exponents and Logarithms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057946f4b8aaa91c79e981881ebdd1b3c5f1a5bb" translate="yes" xml:space="preserve">
          <source>Export profiler data as HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e607888a53c6b91bd5a7e9627370dec79261d6" translate="yes" xml:space="preserve">
          <source>Export the profiling data in &lt;var&gt;data&lt;/var&gt; into a series of HTML files in the folder &lt;var&gt;dir&lt;/var&gt;. The initial file will be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5fccd8dcd8fc317f8edfc8259af86cd2967a29" translate="yes" xml:space="preserve">
          <source>Expressions</source>
          <target state="translated">Expressions</target>
        </trans-unit>
        <trans-unit id="db05f073d348f9438dc7db07a0de14ab39b57871" translate="yes" xml:space="preserve">
          <source>Expressions Involving Diagonal Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c355c9452ca56a8b72bc651e059cb746fa2fdcd" translate="yes" xml:space="preserve">
          <source>Expressions Involving Permutation Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ee8032ad6eacf46fdc4715e92e245acaecb599" translate="yes" xml:space="preserve">
          <source>Expressions are the basic building block of statements in Octave. An expression evaluates to a value, which you can print, test, store in a variable, pass to a function, or assign a new value to a variable with an assignment operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ca88660c866aba2baf4239855bf53897bf59fb2" translate="yes" xml:space="preserve">
          <source>Extended information about each variable is summarized in a table with the following default entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48416dfc328d22fdf07f8470385f5fbd5b243a1" translate="yes" xml:space="preserve">
          <source>External Code Interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b56a3125553bd20d2cfd409975909f1433636f3" translate="yes" xml:space="preserve">
          <source>Extract the components of a piecewise polynomial structure &lt;var&gt;pp&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9292530ad0e52b3fd0f3af23fd829d855737ad60" translate="yes" xml:space="preserve">
          <source>Extreme care is also required when using the &lt;code&gt;elem&lt;/code&gt; method or the &lt;code&gt;()&lt;/code&gt; operator which perform essentially the same function. The reason is that if a sparse object is non-const, then Octave will assume that a request for a zero element in a sparse matrix is in fact a request to create this element so it can be filled. Therefore, a piece of code like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69f20e9f683920d3fb4329abd951e878b1f9372" translate="yes" xml:space="preserve">
          <source>F</source>
          <target state="translated">F</target>
        </trans-unit>
        <trans-unit id="42b038425b651975c9458819ab08dc6538e0f097" translate="yes" xml:space="preserve">
          <source>F.1 Keywords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aec3f8b90353c9c9a578d10983cdb26ad8da5ac" translate="yes" xml:space="preserve">
          <source>F.2 Parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47bd8b217b998ea7d04ff07ff0c619c87b7836d" translate="yes" xml:space="preserve">
          <source>FFF</source>
          <target state="translated">FFF</target>
        </trans-unit>
        <trans-unit id="506dce8674ff147dc9be867c9de3a730800238d1" translate="yes" xml:space="preserve">
          <source>FFTW3</source>
          <target state="translated">FFTW3</target>
        </trans-unit>
        <trans-unit id="6d2a6e1db5172a4819ba05ee5091a217e77284f8" translate="yes" xml:space="preserve">
          <source>FIRfilter.m</source>
          <target state="translated">FIRfilter.m</target>
        </trans-unit>
        <trans-unit id="2292c62281631c51cf7faa99ea1d6ec247d9ee52" translate="yes" xml:space="preserve">
          <source>FIXME: Document inputs N, wlen</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa0346038c39ac1dead136dae09198ddf020cd9" translate="yes" xml:space="preserve">
          <source>FIXME: Document outputs slcidx, C, Cpre, Cpost, win.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbbf04fe83047ba4a5bd19c6a6286d07b818a8e9" translate="yes" xml:space="preserve">
          <source>FIXME: Need to write documentation. FIXME: Add &amp;rsquo;makehgtform&amp;rsquo; to seealso list when it is implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4b0bf78644ab9c68b7d9a3f97f558c2d02bc60" translate="yes" xml:space="preserve">
          <source>FKeywords</source>
          <target state="translated">FKeywords</target>
        </trans-unit>
        <trans-unit id="21d6915b08188e8f6f74b3b9675893dda38ad751" translate="yes" xml:space="preserve">
          <source>FLTK</source>
          <target state="translated">FLTK</target>
        </trans-unit>
        <trans-unit id="c91e4bd49b62ffe6ec21feae045f84951f3099b5" translate="yes" xml:space="preserve">
          <source>FM = full (SM)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e46bbcbf77168815778f1e151d4aec8829bb26" translate="yes" xml:space="preserve">
          <source>FParser</source>
          <target state="translated">FParser</target>
        </trans-unit>
        <trans-unit id="fff53c283733fcf57487666af2c11072c9f49c9f" translate="yes" xml:space="preserve">
          <source>FTP Objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a7556c426797bf3dbeba966dc5b6ed181d9305" translate="yes" xml:space="preserve">
          <source>F_DUPFD</source>
          <target state="translated">F_DUPFD</target>
        </trans-unit>
        <trans-unit id="6fe2cf15cd212b13bd9e4005c7a31582862562a1" translate="yes" xml:space="preserve">
          <source>F_GETFD</source>
          <target state="translated">F_GETFD</target>
        </trans-unit>
        <trans-unit id="9287be070ba3e628964a475a04f2765467510503" translate="yes" xml:space="preserve">
          <source>F_GETFL</source>
          <target state="translated">F_GETFL</target>
        </trans-unit>
        <trans-unit id="9f55ff58b61ea326c09800fcc224ef0d95405a9e" translate="yes" xml:space="preserve">
          <source>F_SETFD</source>
          <target state="translated">F_SETFD</target>
        </trans-unit>
        <trans-unit id="eaf5d77fbbf80b9a7cd83daf26d724b1613a94f3" translate="yes" xml:space="preserve">
          <source>F_SETFL</source>
          <target state="translated">F_SETFL</target>
        </trans-unit>
        <trans-unit id="69643f232ee8d65ce0de1a87c696070d48257bfe" translate="yes" xml:space="preserve">
          <source>Face normals are used for lighting the edges or faces if the &lt;code&gt;edgelighting&lt;/code&gt; or &lt;code&gt;facelighting&lt;/code&gt; properties are set to &lt;code&gt;&quot;flat&quot;&lt;/code&gt;. Setting &lt;code&gt;facenormals&lt;/code&gt; also forces the &lt;code&gt;facenormalsmode&lt;/code&gt; property to be set to &lt;code&gt;&quot;manual&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5deb4df31d24071e2b8fead275f4025e799c988f" translate="yes" xml:space="preserve">
          <source>Facets of the Voronoi diagram with a vertex at infinity have infinity area. A simplified version of &lt;code&gt;polyarea&lt;/code&gt; for rectangles is available with &lt;code&gt;rectint&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03483c629e89fb05cf1a423ebe6cf9d8a9beb216" translate="yes" xml:space="preserve">
          <source>Factorize &lt;code&gt;&lt;var&gt;S&lt;/var&gt; * &lt;var&gt;S&lt;/var&gt;'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43827029cfd878776cd1922a47c8cd8e7beacd9" translate="yes" xml:space="preserve">
          <source>Factorize &lt;code&gt;&lt;var&gt;S&lt;/var&gt;' * &lt;var&gt;S&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafd36bde859aedb0faf8d9a011051f543ea89e1" translate="yes" xml:space="preserve">
          <source>Factorize &lt;code&gt;&lt;var&gt;S&lt;/var&gt;'&lt;/code&gt;. Assumes &lt;var&gt;S&lt;/var&gt; is symmetric and uses the lower triangular portion of the matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4fe3821367629fb9a444f27cde791d8a1a4f9d" translate="yes" xml:space="preserve">
          <source>Factorize &lt;var&gt;S&lt;/var&gt;. Assumes &lt;var&gt;S&lt;/var&gt; is symmetric and uses the upper triangular portion of the matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3262da32a06a7b67046b770569d9824971e7c6" translate="yes" xml:space="preserve">
          <source>Factory default values are stored in the root figure object. The command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877e85d41fd14cec0fa154640e8a6bb1f472b949" translate="yes" xml:space="preserve">
          <source>Famous Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e545404ef8d57f5977451acc5e1bf1623165ed0" translate="yes" xml:space="preserve">
          <source>Field names that are not in the above list are also accepted and added to the result structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5def3f5f01aef0c5a3530f259e267a03794105" translate="yes" xml:space="preserve">
          <source>Figure NextPlot</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bffa63d487886863cd035b306e0fc9bd9d488430" translate="yes" xml:space="preserve">
          <source>Figure Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78981648b733ae12a1b1e93b9b0e07dc2556cb95" translate="yes" xml:space="preserve">
          <source>Figures can be printed or saved in many graphics formats with &lt;code&gt;print&lt;/code&gt; and &lt;code&gt;saveas&lt;/code&gt;. Occasionally, however, it may be useful to save the original Octave handle graphic directly so that further modifications can be made such as modifying a title or legend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5f9c4f29b46c5fb57d7fbfbdbac65f47e94139" translate="yes" xml:space="preserve">
          <source>File Archiving Utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4d62f2c22e44d7f4ed81d343bbd5948187b552" translate="yes" xml:space="preserve">
          <source>File Positioning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85f3ef6f85d6dffce96d0f7882e64ce6a2a89b74" translate="yes" xml:space="preserve">
          <source>File mode, as a string of ten letters or dashes as would be returned by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e00f26d506caf8fd936b07eb1c087eb6e4ff833" translate="yes" xml:space="preserve">
          <source>File mode, as an integer. Use the functions &lt;code&gt;S_ISREG&lt;/code&gt;, &lt;code&gt;S_ISDIR&lt;/code&gt;, &lt;code&gt;S_ISCHR&lt;/code&gt;, &lt;code&gt;S_ISBLK&lt;/code&gt;, &lt;code&gt;S_ISFIFO&lt;/code&gt;, &lt;code&gt;S_ISLNK&lt;/code&gt;, or &lt;code&gt;S_ISSOCK&lt;/code&gt; to extract information from this value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6633cd9b35dae466a05e49f8d0f643c80a1e619a" translate="yes" xml:space="preserve">
          <source>File number of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be802fb33054d6a14c9753d529ee4d417d1620c" translate="yes" xml:space="preserve">
          <source>File or directory name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8726bc11fa5408bc1606c7df296dcce6c8fe683" translate="yes" xml:space="preserve">
          <source>File size in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="988c307c38666ee9941832680876ddde5efa87ea" translate="yes" xml:space="preserve">
          <source>FileModDate</source>
          <target state="translated">FileModDate</target>
        </trans-unit>
        <trans-unit id="181a77589df3c3d80903d9ef5d81e2d8a57af049" translate="yes" xml:space="preserve">
          <source>FileSize</source>
          <target state="translated">FileSize</target>
        </trans-unit>
        <trans-unit id="a3cbb98ddf5ee976bc1c3be5221d66ce3ca2e867" translate="yes" xml:space="preserve">
          <source>Filename</source>
          <target state="translated">Filename</target>
        </trans-unit>
        <trans-unit id="a83037735ae22fb6fffc584c9272e0864e753f0f" translate="yes" xml:space="preserve">
          <source>Filenames are subject to shell expansion if they contain any wildcard characters &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636a6b9655038fb43842f0be627a5d0039f36bf6" translate="yes" xml:space="preserve">
          <source>Filesystem Utilities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc93840029831fcc160ba1ebd52599634c4d0a9" translate="yes" xml:space="preserve">
          <source>Filter &lt;var&gt;x&lt;/var&gt; with the FIR filter &lt;var&gt;b&lt;/var&gt; using the FFT.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8773fc92f2ebac5faec564c60233a31770aff12" translate="yes" xml:space="preserve">
          <source>FinDiffType</source>
          <target state="translated">FinDiffType</target>
        </trans-unit>
        <trans-unit id="c89aad86748f47b6265cde4aabc164e76b7b978d" translate="yes" xml:space="preserve">
          <source>Finally, &lt;var&gt;p&lt;/var&gt; returns the graphics objects associated with the histogram and &lt;var&gt;pax&lt;/var&gt; the corresponding axes objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b22cb671c1bcc1d7655499a69e2345281703e01" translate="yes" xml:space="preserve">
          <source>Finally, Octave implicitly reorders the matrix when using the div (/) and ldiv (\) operators, and so no the user does not need to explicitly reorder the matrix to maximize performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e98363b53e89b9888bbf82e16551c851542c76" translate="yes" xml:space="preserve">
          <source>Finally, Octave looks for a</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45105f42824f5c46d1baea123ad9aad07398e7bb" translate="yes" xml:space="preserve">
          <source>Finally, a program written in Octave might want to have long term storage of preferences or state variables. This can be done with user-defined preferences.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee49e83d4096f5ece6d18282945382755de7f3c" translate="yes" xml:space="preserve">
          <source>Finally, an example with nested structure arrays:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf031f73cad406757409306a71e3766bc648f8e" translate="yes" xml:space="preserve">
          <source>Finally, an examples is shown how to access the stack trace from within Octave, where the function &lt;a href=&quot;java-interface-functions#XREFdebug_005fjava&quot;&gt;debug_java&lt;/a&gt; is used to set and to get the current debug state. In debug mode, the Java error and the stack trace are displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839350ac3394349888d6adf62a8a0004900a459a" translate="yes" xml:space="preserve">
          <source>Finally, arrows, text and rectangular or elliptic boxes can be added to highlight parts of a plot using the &lt;code&gt;annotation&lt;/code&gt; function. Those objects are drawn in an invisible axes, on top of every other axes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da27232100dcb7119bcb1d6deae9644f14a97f30" translate="yes" xml:space="preserve">
          <source>Finally, because &lt;code&gt;demo&lt;/code&gt; evaluates within a function context it is not possible to define new functions within the code. Anonymous functions make a good substitute in most instances. If function blocks &lt;strong&gt;must&lt;/strong&gt; be used then the code &lt;code&gt;eval (example (&quot;function&quot;, n))&lt;/code&gt; will allow Octave to see them. This has its own problems, however, as &lt;code&gt;eval&lt;/code&gt; only evaluates one line or statement at a time. In this case the function declaration must be wrapped with &lt;code&gt;&quot;if 1 &amp;lt;demo stuff&amp;gt; endif&quot;&lt;/code&gt; where &lt;code&gt;&quot;if&quot;&lt;/code&gt; is on the same line as &lt;code&gt;&quot;demo&quot;&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9abd217efe00a2468fab5ff3c8a4f0b2456d88" translate="yes" xml:space="preserve">
          <source>Finally, because the sparse types aren&amp;rsquo;t represented by a contiguous block of memory, the &lt;code&gt;fortran_vec&lt;/code&gt; method of &lt;code&gt;Array&amp;lt;T&amp;gt;&lt;/code&gt; is not available. It is, however, replaced by three separate methods &lt;code&gt;ridx&lt;/code&gt;, &lt;code&gt;cidx&lt;/code&gt;, and &lt;code&gt;data&lt;/code&gt;, that access the raw compressed column format that Octave sparse matrices are stored in. These methods can be used in a manner similar to &lt;code&gt;elem&lt;/code&gt; to allow the matrix to be accessed or filled. However, it is up to the user to respect the sparse matrix compressed column format or the matrix will become corrupted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099b944c4a8cdfd6e9d4803ae18b5aaab8aa6778" translate="yes" xml:space="preserve">
          <source>Finally, determining whether elements belong to a set can be done with the &lt;code&gt;ismember&lt;/code&gt; function. Because sets are ordered this operation is very efficient and is of order O(log2(n)) which is preferable to the &lt;code&gt;find&lt;/code&gt; function which is of order O(n).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f30ea0d2f27d62158f0fbaa24458efa7435d479" translate="yes" xml:space="preserve">
          <source>Finally, here&amp;rsquo;s how to solve a linear system &lt;code&gt;A*x = b&lt;/code&gt; with Tikhonov regularization (ridge regression) using SVD (a skeleton only):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="121101dd8465862b959841f3d960b6851ec42939" translate="yes" xml:space="preserve">
          <source>Finally, if a second argument &lt;var&gt;rect&lt;/var&gt; is provided it must be a four-element vector ([left bottom width height]) defining the region inside the figure to be captured. Regardless of the figure &lt;code&gt;&quot;units&quot;&lt;/code&gt; property, &lt;var&gt;rect&lt;/var&gt; must be defined in &lt;strong&gt;pixels&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43e10b2f2515a40e03506de5138a3ad57f39888" translate="yes" xml:space="preserve">
          <source>Finally, if the value is a non-scalar cell array, then &lt;code&gt;struct&lt;/code&gt; produces a struct &lt;strong&gt;array&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae965048e77f616747bf6b6cd809a187bbeb882" translate="yes" xml:space="preserve">
          <source>Finally, in order to display the solution, we show each solved voltage value in the z-axis for each simplex vertex. See &lt;a href=&quot;#fig_003afemmodel&quot;&gt;Figure 22.6&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6fc4064ce1e9a7da5c99054ebcd16b486500f8" translate="yes" xml:space="preserve">
          <source>Finally, it may sometimes arise that the amount of storage initially created is insufficient to completely store the sparse matrix. Therefore, the method &lt;code&gt;change_capacity&lt;/code&gt; exists to reallocate the sparse memory. The above example would then be modified as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c78431697870ab670a8178d20a54d383c246f80" translate="yes" xml:space="preserve">
          <source>Finally, let&amp;rsquo;s say we want to profile the execution of both &lt;code&gt;foo&lt;/code&gt; and &lt;code&gt;bar&lt;/code&gt; together. Since we already have the run-time data collected for &lt;code&gt;bar&lt;/code&gt;, we can restart the profiler without clearing the existing data and collect the missing statistics about &lt;code&gt;foo&lt;/code&gt;. This is done by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="350394ebf1fd4f2778484f0c387ef567fdb1efa0" translate="yes" xml:space="preserve">
          <source>Finally, objects can be used like ranges by providing a &lt;code&gt;colon&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf3562f848bb5bb9f0290197e66dabdd5ce2111" translate="yes" xml:space="preserve">
          <source>Finally, objects which have a property name can be found with the &lt;code&gt;&quot;-property&quot;&lt;/code&gt; option. For example, code to locate objects with a &lt;code&gt;&quot;meshstyle&quot;&lt;/code&gt; property is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce84c8440d4abe45c57f4e7f422d8f45ee4e7b7" translate="yes" xml:space="preserve">
          <source>Finally, superscripting and subscripting can be controlled with the &lt;code&gt;'^'&lt;/code&gt; and &lt;code&gt;'_'&lt;/code&gt; characters. If the &lt;code&gt;'^'&lt;/code&gt; or &lt;code&gt;'_'&lt;/code&gt; is followed by a { character, then all of the block surrounded by the { } pair is superscripted or subscripted. Without the { } pair, only the character immediately following the &lt;code&gt;'^'&lt;/code&gt; or &lt;code&gt;'_'&lt;/code&gt; is changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f600f7b00842a3f9cf9887233c1a7a3628fb200" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;&quot;fitboxtotext&quot;&lt;/code&gt; property controls the actual extent of the box. If &lt;code&gt;&quot;on&quot;&lt;/code&gt; (the default) the box limits are fitted to the text extent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ce888722446acc804725a333cfe168dcecceb0" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;polar&lt;/code&gt; function allows you to easily plot data in polar coordinates. However, the display coordinates remain rectangular and linear. For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40da21f9760cceec5bfd3cb87cfaf776da71c6f7" translate="yes" xml:space="preserve">
          <source>Finally, the &lt;code&gt;view&lt;/code&gt; function changes the viewpoint for three-dimensional plots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a90837e7d93bba2f39b48a37d09b103d6fa1e217" translate="yes" xml:space="preserve">
          <source>Finally, the function &lt;code&gt;eigs&lt;/code&gt; can be used to calculate a limited number of eigenvalues and eigenvectors based on a selection criteria and likewise for &lt;code&gt;svds&lt;/code&gt; which calculates a limited number of singular values and vectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6125f02777172bbc693a702bd15ee62cddb62a1" translate="yes" xml:space="preserve">
          <source>Finally, the functions &lt;code&gt;integral2&lt;/code&gt; and &lt;code&gt;integral3&lt;/code&gt; are provided as general 2-D and 3-D integration functions. They will auto-select between iterated and tiled integration methods and, unlike &lt;code&gt;dblquad&lt;/code&gt; and &lt;code&gt;triplequad&lt;/code&gt;, will work with non-rectangular integration domains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40de8b8014f069e3495994a98ec4c9f810353b19" translate="yes" xml:space="preserve">
          <source>Finally, the method &lt;code&gt;circumference&lt;/code&gt; is defined in a static &lt;code&gt;methods&lt;/code&gt; block and can be used without creating an object of &lt;code&gt;some_class&lt;/code&gt;. This is useful for methods, that do not depend on any class properties. The class name and the name of the static method, separated by a dot (&quot;&lt;code&gt;.&lt;/code&gt;&quot;), call this static method. In contrast to non-static methods, the object is not passed as first argument even if called using an object of &lt;code&gt;some_class&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c08af52035b1f679b4c05f221ab20bc5d89389" translate="yes" xml:space="preserve">
          <source>Finally, the ternary operator (?:) is not supported in Octave. If short-circuiting is not important, it can be replaced by the &lt;code&gt;ifelse&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db5a8931c0df63104a3e5f01ba1b522a9dd82c0" translate="yes" xml:space="preserve">
          <source>Finally, to create a cell array or matrix, the appropriate functions are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9be6322111c59be8f643dc352e3ce4823f6330" translate="yes" xml:space="preserve">
          <source>Finally, typing &lt;code&gt;exit&lt;/code&gt; or &lt;code&gt;quit&lt;/code&gt; at the debug prompt will result in Octave terminating normally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37ce19c46bcd4cd176900eaab7ba988f085972c" translate="yes" xml:space="preserve">
          <source>Finally, user classes can be considered to be a special type of a structure, and they can be saved to a file in the same manner as a structure. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c86992c49f648605f76107bfb4b5ccfde13d0d8" translate="yes" xml:space="preserve">
          <source>Finally, we can reset the up vector to automatic mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22059bc65b54fc7ffc371c98ec229a48110e57ce" translate="yes" xml:space="preserve">
          <source>Finally, when the parser cannot identify an input token it calls a particular function to handle this. By default, this is the internal function &lt;code&gt;&quot;__unimplemented__&quot;&lt;/code&gt; which makes suggestions about possible Octave substitutes for &lt;small&gt;MATLAB&lt;/small&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae72efc189eeb17c544929c89cdfbb06e20908f4" translate="yes" xml:space="preserve">
          <source>Find a few singular values of the matrix &lt;var&gt;A&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5f996c8b95feb87127689cd70332cd5f27dfb2" translate="yes" xml:space="preserve">
          <source>Find a minimum point of a univariate function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="541e9bfcd0340c8973c14b662825b735f9a58487" translate="yes" xml:space="preserve">
          <source>Find a rational approximation of &lt;var&gt;x&lt;/var&gt; to within the tolerance defined by &lt;var&gt;tol&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5ed2f0735f73b03f253a427399ed9ad6c1d151" translate="yes" xml:space="preserve">
          <source>Find a value of &lt;var&gt;x&lt;/var&gt; which minimizes the multi-variable function &lt;var&gt;fun&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22c96403de3c1ed28396b1329dc395058301d4b" translate="yes" xml:space="preserve">
          <source>Find a zero of a univariate function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd190f46b57a10cfd09dc1ec981ff6760f44edc" translate="yes" xml:space="preserve">
          <source>Find all characters in the string &lt;var&gt;str&lt;/var&gt; up to, but not including, the first character which is in the string &lt;var&gt;delim&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb5103bb92c1fdcc42ea2e581fcd1a9756a0daa7" translate="yes" xml:space="preserve">
          <source>Find all children, including hidden children, of a graphics object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66beafc3d18da86a65c2193f35e11992773e59c2" translate="yes" xml:space="preserve">
          <source>Find all visible figures that are currently off the screen and move them onto the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0385a624e3550df73faa6c0a83c6c7e67a668f9f" translate="yes" xml:space="preserve">
          <source>Find graphics object, including hidden ones, with specified properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55e08dd65e6e36c46f21c3eb5d3e23277bd3886f" translate="yes" xml:space="preserve">
          <source>Find graphics objects with specified properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68346066af5304f7e616564999eb47648789bd6" translate="yes" xml:space="preserve">
          <source>Find maximum values in the array &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa115ae502d030fdacbd1c4f50717f982e0d6f6" translate="yes" xml:space="preserve">
          <source>Find minimum values in the array &lt;var&gt;x&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6425c66aec6fc7729c783d8705a93daf0a0c3a5" translate="yes" xml:space="preserve">
          <source>Find the greatest common divisor of two polynomials.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7c245208b7aa4ff2818428a0a73c98e46cf7ff" translate="yes" xml:space="preserve">
          <source>Find the lengths of all sequences of common values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b7906aa04ff3595fbfcccc90e92b215d0011889" translate="yes" xml:space="preserve">
          <source>Find the vectors normal to a meshgridded surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d923a73b358b240fb41feefb15c0c007c611490" translate="yes" xml:space="preserve">
          <source>Finding Elements and Checking Conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd1eff3ef7c1cc46c8d9872d965c21ad570656f" translate="yes" xml:space="preserve">
          <source>Finding Information about Sparse Matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13ac0d57d264a0d33d4be7e9ebcc62d8fe96463" translate="yes" xml:space="preserve">
          <source>Finding Roots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe69d3150356d7b2d8a88d272465962267c3ec49" translate="yes" xml:space="preserve">
          <source>Finding a C++ compiler, using the correct switches, adding the right include paths for header files, etc. is a difficult task. Octave automates this by providing the &lt;code&gt;mkoctfile&lt;/code&gt; command with which to build oct-files. The command is available from within Octave or at the shell command line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ececa1f5a2d42ddb9f77ae87f589797c65f18f1" translate="yes" xml:space="preserve">
          <source>First element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672efbc3b64f78b0df69831e5c1a9683651afa61" translate="yes" xml:space="preserve">
          <source>First fractional variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7637c6bde8f9d03437588a21199e432373a5ba63" translate="yes" xml:space="preserve">
          <source>First letter of month name (capitalized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1281b03e8ba3dd29c4ca67fc9ce739a4e7f9a44" translate="yes" xml:space="preserve">
          <source>First letter of weekday name (capitalized)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8b5215e32ba21ec0137cc19991eeca4535cadd" translate="yes" xml:space="preserve">
          <source>First, Octave tries to locate it in the current directory (where Octave was started from). If such a file is found, it is read and defines the initial &lt;var&gt;static classpath&lt;/var&gt;. Thus, it is possible to define a static classpath on a &amp;rsquo;per Octave invocation&amp;rsquo; basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8bf9b7926ad331f02e100d873880e63d6e540a" translate="yes" xml:space="preserve">
          <source>First, the &lt;code&gt;&quot;./&quot;&lt;/code&gt; and &lt;code&gt;&quot;.^&quot;&lt;/code&gt; operators must be used with care. Consider what the examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79148b810e982aab73fae2a0ab338caf5e0f4a9" translate="yes" xml:space="preserve">
          <source>First, we can generate the weight matrices for &lt;var&gt;n&lt;/var&gt; points (including the endpoints of the interval), and incorporate the boundary conditions in the right hand side (for a specific value of &lt;var&gt;alpha&lt;/var&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="477b5025dd88c6d61123844e69c04732868b8201" translate="yes" xml:space="preserve">
          <source>Fit a piecewise cubic spline with breaks (knots) &lt;var&gt;breaks&lt;/var&gt; to the noisy data, &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704e14f979ab242432ca2bf19cbce1f270073902" translate="yes" xml:space="preserve">
          <source>Fit an AR (p)-model with Yule-Walker estimates given a vector &lt;var&gt;c&lt;/var&gt; of autocovariances &lt;code&gt;[gamma_0, &amp;hellip;, gamma_p]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391212eb47f2dbcf13fb8a36579d318130f91b98" translate="yes" xml:space="preserve">
          <source>Fit an ARCH regression model to the time series &lt;var&gt;y&lt;/var&gt; using the scoring algorithm in Engle&amp;rsquo;s original ARCH paper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b00262ca98dc1176f39175a0294327ea85997e1" translate="yes" xml:space="preserve">
          <source>Five different algorithms are used depending on the range of &lt;var&gt;l&lt;/var&gt; and whether or not &lt;var&gt;l&lt;/var&gt; is a scalar or a matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5485414ec1f9109307c6d5c5810fd8919dc65014" translate="yes" xml:space="preserve">
          <source>Fix axes to the limits of the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3947e15297cfd31369789a980f2201da7d6b5d9" translate="yes" xml:space="preserve">
          <source>Fix the current axes limits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad54277aa9e66d6c7440e0d790a6a642e68639d" translate="yes" xml:space="preserve">
          <source>Fixed point format with 16 significant figures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923d8677d137d5348e10d62ec628007103aa3088" translate="yes" xml:space="preserve">
          <source>Fixed point format with 5 significant figures (default).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bcf7a8a904b52fb9a95dbc912154aa6197c816" translate="yes" xml:space="preserve">
          <source>Flag if &lt;code&gt;chol (&lt;var&gt;B&lt;/var&gt;)&lt;/code&gt; is passed rather than &lt;var&gt;B&lt;/var&gt;. The default is false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef457db3e2aefb147cc504a2c95ef66d774c17f" translate="yes" xml:space="preserve">
          <source>Flag whether the &lt;small&gt;UMFPACK&lt;/small&gt; or mmd solvers are used for the LU, &amp;rsquo;\&amp;rsquo; and &amp;rsquo;/&amp;rsquo; operations (default 1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ac6d3ce378fe1314e23f09375163a87cdd0755" translate="yes" xml:space="preserve">
          <source>Flag whether the LU and the &amp;rsquo;\&amp;rsquo; and &amp;rsquo;/&amp;rsquo; operators will automatically use the sparsity preserving amd functions (default 1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8de8226ed5dc36499c3b06c45b8f8f10beb332" translate="yes" xml:space="preserve">
          <source>Flag whether the LU/QR and the &amp;rsquo;\&amp;rsquo; and &amp;rsquo;/&amp;rsquo; operators will automatically use the sparsity preserving mmd functions (default 1)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e73874fe220e3273b82912cea07f9521e509b4" translate="yes" xml:space="preserve">
          <source>Flag whether the arrow heads are displayed in the quiver plot.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9484103da14583d2d2f70567f2d3b04f7f2d73e7" translate="yes" xml:space="preserve">
          <source>Flag whether the contour labels are shown or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98e9277cab171fd9b8bcc5cc15ca68184e098e9" translate="yes" xml:space="preserve">
          <source>Flag whether the length of the arrows is scaled or defined directly from the &lt;var&gt;u&lt;/var&gt;, &lt;var&gt;v&lt;/var&gt; and &lt;var&gt;w&lt;/var&gt; data. If the arrow length is flagged as being scaled by the &lt;code&gt;autoscale&lt;/code&gt; property, then the length of the autoscaled arrow is controlled by the &lt;code&gt;autoscalefactor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1f893805e29582969095a741d60a5f43734af8" translate="yes" xml:space="preserve">
          <source>Flex</source>
          <target state="translated">Flex</target>
        </trans-unit>
        <trans-unit id="1655184ae34aeedf1a0a23eff36171a6872d4a10" translate="yes" xml:space="preserve">
          <source>Flip array left to right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2734b6a7f5a2f258f4f308279767cf36bdade613" translate="yes" xml:space="preserve">
          <source>Flip array upside down.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e88a422285c863d268e0f380262834a22896a5" translate="yes" xml:space="preserve">
          <source>Floating point value comprising classes &lt;code&gt;&quot;double&quot;&lt;/code&gt; and &lt;code&gt;&quot;single&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a2085382f32870955741e4c7120ae92e9debf7f" translate="yes" xml:space="preserve">
          <source>Floating-Point Conversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65904c3a5795c28a1548d963463c973a53a767c8" translate="yes" xml:space="preserve">
          <source>Floating-point numbers can be printed in normal, fixed-point notation using the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebe9e303d1c5cd4630472bb2783728eb1f2903f" translate="yes" xml:space="preserve">
          <source>Flush output to file descriptor &lt;var&gt;fid&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe688a5014306635cd935f7169187b7db387cd5" translate="yes" xml:space="preserve">
          <source>Fonts</source>
          <target state="translated">Fonts</target>
        </trans-unit>
        <trans-unit id="ec0c3b76630fd745381cc215a284820af75a683a" translate="yes" xml:space="preserve">
          <source>Footnotes</source>
          <target state="translated">Footnotes</target>
        </trans-unit>
        <trans-unit id="ef1d30d693148893306d9b4a127d3abd9db5794b" translate="yes" xml:space="preserve">
          <source>For %s and %d, %f, %n, %u and the associated %*s &amp;hellip; specifiers an optional width can be specified as %Ns, etc. where N is an integer &amp;gt; 1. For %f, format specifiers like %N.Mf are allowed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="674488d625c3ec6143fcee7a6d9236ed508c19e1" translate="yes" xml:space="preserve">
          <source>For %s, %c %d, %f, %n, %u, an optional width can be specified as %Ns, etc. where N is an integer &amp;gt; 1. For %c, this causes exactly N characters to be read instead of a single character. For the other specifiers, it is an upper bound on the number of characters read; normal delimiters can cause fewer characters to be read. For complex numbers, this limit applies to the real and imaginary components individually. For %f and %n, format specifiers like %N.Mf are allowed, where M is an upper bound on number of characters after the decimal point to be considered; subsequent digits are skipped. For example, the specifier %8.2f would read 12.345e6 as 1.234e7.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69f499d5b32f293bbab3693275f727015287e7cf" translate="yes" xml:space="preserve">
          <source>For 2-D sets, the return value &lt;var&gt;tri&lt;/var&gt; is a set of triangles which satisfies the Delaunay circum-circle criterion, i.e., no data point from [&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;] is within the circum-circle of the defining triangle. The set of triangles &lt;var&gt;tri&lt;/var&gt; is a matrix of size [n, 3]. Each row defines a triangle and the three columns are the three vertices of the triangle. The value of &lt;code&gt;&lt;var&gt;tri&lt;/var&gt;(i,j)&lt;/code&gt; is an index into &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; for the location of the j-th vertex of the i-th triangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39bc36e26ddf0f371b21694151a652449e375aea" translate="yes" xml:space="preserve">
          <source>For 3-D axes, control whether the &lt;code&gt;&quot;full&quot;&lt;/code&gt; box is drawn or only the 3 &lt;code&gt;&quot;back&quot;&lt;/code&gt; axes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85dfcc8ce286daaf4e9830f19433cde5b980ea30" translate="yes" xml:space="preserve">
          <source>For 3-D inputs &lt;code&gt;delaunay&lt;/code&gt; returns a set of tetrahedra that satisfy the Delaunay circum-circle criteria. Similarly, &lt;code&gt;delaunayn&lt;/code&gt; returns the N-dimensional simplex satisfying the Delaunay circum-circle criteria. The N-dimensional extension of a triangulation is called a tessellation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11a9005189ff83e43878fe9db769fc29bc184a2" translate="yes" xml:space="preserve">
          <source>For 3-D sets, the return value &lt;var&gt;tetr&lt;/var&gt; is a set of tetrahedrons which satisfies the Delaunay circum-circle criterion, i.e., no data point from [&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt;] is within the circum-circle of the defining tetrahedron. The set of tetrahedrons is a matrix of size [n, 4]. Each row defines a tetrahedron and the four columns are the four vertices of the tetrahedron. The value of &lt;code&gt;&lt;var&gt;tetr&lt;/var&gt;(i,j)&lt;/code&gt; is an index into &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;, &lt;var&gt;z&lt;/var&gt; for the location of the j-th vertex of the i-th tetrahedron.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb221fe5381bbbcc5236ea75a2e6d56d92c2fca8" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;var&gt;t&lt;/var&gt; = delaunay (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt;, finds the index in &lt;var&gt;t&lt;/var&gt; containing the points &lt;code&gt;(&lt;var&gt;xi&lt;/var&gt;, &lt;var&gt;yi&lt;/var&gt;)&lt;/code&gt;. For points outside the convex hull, &lt;var&gt;idx&lt;/var&gt; is NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80f55a9ed05768714cbc2e4e6244a6105960461" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;&lt;var&gt;t&lt;/var&gt; = delaunayn (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;, finds the index in &lt;var&gt;t&lt;/var&gt; containing the points &lt;var&gt;xi&lt;/var&gt;. For points outside the convex hull, &lt;var&gt;idx&lt;/var&gt; is NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b43c727a0c03d0b8251ca8be2a57bc8e79d195" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;input&lt;/code&gt;, the normal command line history and editing functions are available at the prompt.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df829859ac13331020c67a8cf0808b6bbf8e1eb" translate="yes" xml:space="preserve">
          <source>For &lt;small&gt;MATLAB&lt;/small&gt; compatibility, leading spaces are stripped before returning the string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d1fe4dd4d12e694e87fd8bd4023032f0e401a0" translate="yes" xml:space="preserve">
          <source>For &lt;var&gt;l&lt;/var&gt; &amp;gt; 1e8, use normal approximation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c64114b4d5b8481451cb4338dc13ee0f87465f7" translate="yes" xml:space="preserve">
          <source>For Legendre functions of degree &lt;var&gt;n&lt;/var&gt; and order 0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="963870ed55d382e9f9b696c6f464fcc8c84eefa9" translate="yes" xml:space="preserve">
          <source>For Legendre functions of degree &lt;var&gt;n&lt;/var&gt; and order &lt;var&gt;m&lt;/var&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c1a5be3b7778dce5c4c12ce2834399a5d7ac9d" translate="yes" xml:space="preserve">
          <source>For Legendre functions of degree n and order m:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b75f3121219648141ea1321cda31eb84e52bca5" translate="yes" xml:space="preserve">
          <source>For N-dimensional arrays the sum in parentheses is expanded to include second derivatives over the additional higher dimensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42db436259e780e487ffb333cf7b30085fed6476" translate="yes" xml:space="preserve">
          <source>For Octave to integrate equations of this form, you must first provide a definition of the function &lt;code&gt;f(x,t)&lt;/code&gt;. This is straightforward, and may be accomplished by entering the function body directly on the command line. For example, the following commands define the right-hand side function for an interesting pair of nonlinear differential equations. Note that while you are entering a function, Octave responds with a different prompt, to indicate that it is waiting for you to complete your input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0820c88b7a16dc763a353bd8d3aeac19ba505d76" translate="yes" xml:space="preserve">
          <source>For OpenGL-based graphic toolkits, this enables a different backend toolchain with enhanced characteristics. The toolchain adds support for printing arbitrary characters and fonts in PDF outputs; it avoids some anti-aliasing artifacts in the rendering of patch and surface objects (particularly for 2-D scenes); and it supports transparency of line, patch, and surface objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812a818e7c0b9c4797a86ad91210fd2af0eb0ea0" translate="yes" xml:space="preserve">
          <source>For a 2-dimensional matrix &lt;var&gt;M&lt;/var&gt; this is defined as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2695cbb58ce2b542868161cb246a6853299eba19" translate="yes" xml:space="preserve">
          <source>For a complete list of available formats and devices type &lt;code&gt;system (&quot;gs -h&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bfe8f55f0383260b65a32444d400a5d68c5f41" translate="yes" xml:space="preserve">
          <source>For a definition of the Bartlett window see, e.g., A.V. Oppenheim &amp;amp; R. W. Schafer,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbba6b2d030aab154c2118f0b923ce51b37be50" translate="yes" xml:space="preserve">
          <source>For a definition of the Blackman window, see, e.g., A.V. Oppenheim &amp;amp; R. W. Schafer,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f069a2ffbc6e69f1e157e986956265ef7f00d6" translate="yes" xml:space="preserve">
          <source>For a definition of the Hamming window see, e.g., A.V. Oppenheim &amp;amp; R. W. Schafer,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb143e49e320728a0de4387f0e3a10c1ff369b8e" translate="yes" xml:space="preserve">
          <source>For a definition of the Hanning window see, e.g., A.V. Oppenheim &amp;amp; R. W. Schafer,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116604ba1f6867f4456da5a6188db228c070f323" translate="yes" xml:space="preserve">
          <source>For a description of the other options, see &lt;a href=&quot;linear-least-squares#XREFoptimset&quot;&gt;optimset&lt;/a&gt;. To initialize an options structure with default values for &lt;code&gt;fminbnd&lt;/code&gt; use &lt;code&gt;options = optimset (&quot;fminbnd&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705d3adaba90facf23bda5c244aa4d02f5eb1406" translate="yes" xml:space="preserve">
          <source>For a description of the other options, see &lt;a href=&quot;linear-least-squares#XREFoptimset&quot;&gt;optimset&lt;/a&gt;. To initialize an options structure with default values for &lt;code&gt;fzero&lt;/code&gt; use &lt;code&gt;options = optimset (&quot;fzero&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06da3556141fc3f81fc54e75e088efdc75cfe9f7" translate="yes" xml:space="preserve">
          <source>For a description of the other options, see &lt;code&gt;optimset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fb6cd8758fe5c82aa53b8be9916cfde9e383dda" translate="yes" xml:space="preserve">
          <source>For a description of the other options, see &lt;code&gt;optimset&lt;/code&gt;. To initialize an options structure with default values for &lt;code&gt;fminsearch&lt;/code&gt; use &lt;code&gt;options = optimset (&quot;fminsearch&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4fbaf1e61fff5e2fb085bdaf7a8031054336d2" translate="yes" xml:space="preserve">
          <source>For a description of the other options, see &lt;code&gt;optimset&lt;/code&gt;. To initialize an options structure with default values for &lt;code&gt;fsolve&lt;/code&gt; use &lt;code&gt;options = optimset (&quot;fsolve&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9c91d5595af06e3e29d2c5f777ca5f31e4bc3c6" translate="yes" xml:space="preserve">
          <source>For a higher-dimensional example, suppose &lt;code&gt;img&lt;/code&gt; is an RGB image of size &lt;code&gt;[m n 3]&lt;/code&gt; and we wish to multiply each color by a different scalar. The following code accomplishes this with broadcasting,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5106f95fccfe4852a0a861489ee24a6b8b88c2af" translate="yes" xml:space="preserve">
          <source>For a linear regression model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369a31de289e1bb942333297ccef8d1d21cf2e41" translate="yes" xml:space="preserve">
          <source>For a matrix argument, return a row vector of logical ones and zeros with each element indicating whether all of the elements of the corresponding column of the matrix are nonzero. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08924f65608e4fec4b32cb115c721255267fafbb" translate="yes" xml:space="preserve">
          <source>For a matrix argument, return a row vector of logical ones and zeros with each element indicating whether any of the elements of the corresponding column of the matrix are nonzero. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bd8ac0ed0864bae0c00b1a14027af2b1e3908b" translate="yes" xml:space="preserve">
          <source>For a polygon defined by vertex points &lt;code&gt;(&lt;var&gt;xv&lt;/var&gt;, &lt;var&gt;yv&lt;/var&gt;)&lt;/code&gt;, return true if the points &lt;code&gt;(&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; are inside (or on the boundary) of the polygon; Otherwise, return false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1aa587ae934d9735987d0f67f9b81fc9e3ccc7" translate="yes" xml:space="preserve">
          <source>For a polynomial class it makes sense to have a method to compute its roots.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b195496dbdc67a69a3a2f86a2647968e87725b62" translate="yes" xml:space="preserve">
          <source>For a sample &lt;var&gt;x&lt;/var&gt;, compute the quantiles, &lt;var&gt;q&lt;/var&gt;, corresponding to the cumulative probability values, &lt;var&gt;p&lt;/var&gt;, in percent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958685defc304f4a0eb024cb8fddd56aa2f080d7" translate="yes" xml:space="preserve">
          <source>For a sample, &lt;var&gt;x&lt;/var&gt;, calculate the quantiles, &lt;var&gt;q&lt;/var&gt;, corresponding to the cumulative probability values in &lt;var&gt;p&lt;/var&gt;. All non-numeric values (NaNs) of &lt;var&gt;x&lt;/var&gt; are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc836d0529e78a72e6040d06f0dfb9555a66dac" translate="yes" xml:space="preserve">
          <source>For a symmetric positive definite matrix &lt;var&gt;S&lt;/var&gt;, return the permutation vector &lt;var&gt;p&lt;/var&gt; such that &lt;code&gt;&lt;var&gt;S&lt;/var&gt;(&lt;var&gt;p&lt;/var&gt;,&lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; tends to have a sparser Cholesky factor than &lt;var&gt;S&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a370d622b7a12e72bcbc5c9c88cbfb24f0841fa7" translate="yes" xml:space="preserve">
          <source>For a symmetric positive definite matrix &lt;var&gt;S&lt;/var&gt;, returns the permutation vector p such that &lt;code&gt;&lt;var&gt;S&lt;/var&gt;(&lt;var&gt;p&lt;/var&gt;, &lt;var&gt;p&lt;/var&gt;)&lt;/code&gt; tends to have a sparser Cholesky factor than &lt;var&gt;S&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94889d9f526783679c7a3c13be3ea6da14d10ddb" translate="yes" xml:space="preserve">
          <source>For a vector &lt;code&gt;A&lt;/code&gt;, the following loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfaa04485e93e366d15cb2e35d35540715b6925" translate="yes" xml:space="preserve">
          <source>For a vector &lt;var&gt;c&lt;/var&gt; with &lt;em&gt;N&lt;/em&gt; components, return the roots of the polynomial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81815a876597cf204e411c78d8735a5042b30e60" translate="yes" xml:space="preserve">
          <source>For a vector argument, return the maximum value. For a matrix argument, return a row vector with the maximum value of each column. For a multi-dimensional array, &lt;code&gt;max&lt;/code&gt; operates along the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43e6a829c48a6b504f44a72601b44bb3ed8108d" translate="yes" xml:space="preserve">
          <source>For a vector argument, return the minimum value. For a matrix argument, return a row vector with the minimum value of each column. For a multi-dimensional array, &lt;code&gt;min&lt;/code&gt; operates along the first non-singleton dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0384894031776f530c314f95e72b06c29eb50d" translate="yes" xml:space="preserve">
          <source>For a vector argument, return true (logical 1) if all elements of the vector are nonzero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec7adea3c39bb9a5fabec245745f9a19a2e7e44" translate="yes" xml:space="preserve">
          <source>For a vector argument, return true (logical 1) if any element of the vector is nonzero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9235bf2d668557bcc0cd73821d5ae478d2dab81c" translate="yes" xml:space="preserve">
          <source>For an enhanced output with complete text support and basic transparency, use the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf3231ba46e45253a2dd13cd95cf160c84e5d15" translate="yes" xml:space="preserve">
          <source>For any array, the result will always be greater than or equal to 2. Trailing singleton dimensions are not counted, i.e., tailing dimensions &lt;var&gt;d&lt;/var&gt; greater than 2, for which &lt;code&gt;size (&lt;var&gt;a&lt;/var&gt;, &lt;var&gt;d&lt;/var&gt;) = 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c1ddd7dc784324a7b4fa4307f990e634277911e" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the other forms return an appropriate error message string (or structure) if the number of outputs requested is invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb658ca543fe60a87c68a230bcad61e54ca9d3d2" translate="yes" xml:space="preserve">
          <source>For better readability, digits may be partitioned by the underscore separator &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aae3a92bf24a37a8e4b0a0e5b5930d73ecd1005" translate="yes" xml:space="preserve">
          <source>For boolean expressions &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;, &lt;code&gt;xor (&lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt;)&lt;/code&gt; is true if and only if one of &lt;var&gt;x&lt;/var&gt; or &lt;var&gt;y&lt;/var&gt; is true. Otherwise, if &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; are both true or both false, &lt;code&gt;xor&lt;/code&gt; returns false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08716c934fee162ad7954d78673b501a68652a9" translate="yes" xml:space="preserve">
          <source>For cell array of strings use &lt;code&gt;str2double&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9551eefa4ef09465632451a3252e20794da598" translate="yes" xml:space="preserve">
          <source>For cell arrays, each element is concatenated separately. Cell arrays converted through &lt;code&gt;char&lt;/code&gt; can mostly be converted back with &lt;code&gt;cellstr&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf3779215195e6ee6bb3d08aa0b19c0c1ee432b" translate="yes" xml:space="preserve">
          <source>For cell arrays, each element is concatenated separately. Cell arrays converted through &lt;code&gt;strvcat&lt;/code&gt; can mostly be converted back with &lt;code&gt;cellstr&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c782908117ea43a4f3aa23c861978deaf0a030f2" translate="yes" xml:space="preserve">
          <source>For clarity, it is probably best to always use commas and semicolons to separate matrix elements and rows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1420ae9200eddb5c31dcd91b06df22faff56bb8" translate="yes" xml:space="preserve">
          <source>For commands run asynchronously, &lt;var&gt;status&lt;/var&gt; is the process id of the command shell that is started to run the command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1a9991c7fdd2cd36f7c44138a72f2ef12ad453" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, &lt;code&gt;narginchk&lt;/code&gt; and &lt;code&gt;nargoutchk&lt;/code&gt; are available which provide similar error checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba9bdbcbc2018f8e83243c47594db8829728a176" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, return the second argument (&lt;var&gt;end&lt;/var&gt;) when only a single value (&lt;var&gt;n&lt;/var&gt; = 1) is requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb5e90fc28a91f8cc60cb32a652b591c078b967c" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, set initial values for user preferences to the following values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="577309877064d296cebb33b2624cbf6724957722" translate="yes" xml:space="preserve">
          <source>For compatibility with &lt;small&gt;MATLAB&lt;/small&gt;, this includes logical and character matrices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc039513e50b4f035dd383d564d6d26f46b4694" translate="yes" xml:space="preserve">
          <source>For complex &lt;var&gt;x&lt;/var&gt;, the format string may only contain one output conversion specification and nothing else. Otherwise, results will be unpredictable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20619ffa46086dbd38a0c2a98e84804129238399" translate="yes" xml:space="preserve">
          <source>For complex arguments, &lt;code&gt;sign&lt;/code&gt; returns &lt;code&gt;x ./ abs (&lt;var&gt;x&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f98a453a9d09ba0d6085c98084b139709be9c393" translate="yes" xml:space="preserve">
          <source>For complex arguments, the magnitude of the elements are used for comparison. If the magnitudes are identical, then the results are ordered by phase angle in the range (-pi, pi]. Hence,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9dd9e55c228f88fb5c753ef321724b48813be48" translate="yes" xml:space="preserve">
          <source>For complex numbers, the following ordering is defined: &lt;var&gt;z1&lt;/var&gt; &amp;lt; &lt;var&gt;z2&lt;/var&gt; if and only if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1605830a23778bf50bce216bcf9e34b73e0c471" translate="yes" xml:space="preserve">
          <source>For convenience, it is also possible to use this function with the command form, &lt;code&gt;colormap &lt;var&gt;map_name&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1917fd8498c55cc0a066137109f5fd8148dd36d6" translate="yes" xml:space="preserve">
          <source>For conversion between locale encodings and UTF-8, see &lt;a href=&quot;string-conversions#XREFunicode2native&quot;&gt;unicode2native&lt;/a&gt; and &lt;a href=&quot;string-conversions#XREFnative2unicode&quot;&gt;native2unicode&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2d9e67794847927cefaca2e52979d42284d395" translate="yes" xml:space="preserve">
          <source>For creating new dialog types, there is a dialog function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a6051eb0193bc3c8578f6e6102ffecdd1b047d" translate="yes" xml:space="preserve">
          <source>For creating permutation matrices, Octave does not introduce a new function, but rather overrides an existing syntax: permutation matrices can be conveniently created by indexing an identity matrix by permutation vectors. That is, if &lt;var&gt;q&lt;/var&gt; is a permutation vector of length &lt;var&gt;n&lt;/var&gt;, the expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd1d245b915705e4ccb4755f0a9d866ff9c4827" translate="yes" xml:space="preserve">
          <source>For double precision inputs, the &lt;code&gt;&quot;extra&quot;&lt;/code&gt; option will use a more accurate algorithm than straightforward summation. For single precision inputs, &lt;code&gt;&quot;extra&quot;&lt;/code&gt; is the same as &lt;code&gt;&quot;double&quot;&lt;/code&gt;. For all other data type &lt;code&gt;&quot;extra&quot;&lt;/code&gt; has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="468b7b0de7f90eec8f420972c4800ae2978af7dd" translate="yes" xml:space="preserve">
          <source>For each &lt;var&gt;valuenames&lt;/var&gt;, display the value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54db95a084dc6bbc8d3dbd656543cf550153bb4" translate="yes" xml:space="preserve">
          <source>For each directory that is added, and that was not already in the path, &lt;code&gt;addpath&lt;/code&gt; checks for the existence of a file named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00ea0f24dc2e3d4fff72560c9d1a56bbe80fa76" translate="yes" xml:space="preserve">
          <source>For each directory that is removed, &lt;code&gt;rmpath&lt;/code&gt; checks for the existence of a file named</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30abfe45f7dee86b3cd56f09be7d9a9d1aa8e8b" translate="yes" xml:space="preserve">
          <source>For each element in the input array &lt;var&gt;x&lt;/var&gt;, return the first integer &lt;var&gt;n&lt;/var&gt; such that 2^n &amp;ge; abs (x).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92b91fb4c309e8beeb923e93665f5a86bfcfc2d" translate="yes" xml:space="preserve">
          <source>For each element of &lt;var&gt;x&lt;/var&gt;, compute the cumulative distribution function (CDF) at &lt;var&gt;x&lt;/var&gt; of a univariate discrete distribution which assumes the values in &lt;var&gt;v&lt;/var&gt; with probabilities &lt;var&gt;p&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d055dc95be520d8b4d759fc74b9c46e3eac50f7" translate="yes" xml:space="preserve">
          <source>For each element of &lt;var&gt;x&lt;/var&gt;, compute the cumulative distribution function (CDF) at &lt;var&gt;x&lt;/var&gt; of the empirical distribution obtained from the univariate sample &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e3be4fb32e6cb03ab26fa049c405c62bdca37f" translate="yes" xml:space="preserve">
          <source>For each element of &lt;var&gt;x&lt;/var&gt;, compute the probability density function (PDF) at &lt;var&gt;x&lt;/var&gt; of a univariate discrete distribution which assumes the values in &lt;var&gt;v&lt;/var&gt; with probabilities &lt;var&gt;p&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11dc2465e281b00cba0b16f81f5f5070d02f8edc" translate="yes" xml:space="preserve">
          <source>For each element of &lt;var&gt;x&lt;/var&gt;, compute the probability density function (PDF) at &lt;var&gt;x&lt;/var&gt; of the empirical distribution obtained from the univariate sample &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c539b8f93055cbf3b6ce03c076e6d84981dc13b" translate="yes" xml:space="preserve">
          <source>For each element of &lt;var&gt;x&lt;/var&gt;, compute the quantile (the inverse of the CDF) at &lt;var&gt;x&lt;/var&gt; of the empirical distribution obtained from the univariate sample &lt;var&gt;data&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff85cca824c2c40a054f285e0dd5f397229f24c" translate="yes" xml:space="preserve">
          <source>For each element of &lt;var&gt;x&lt;/var&gt;, compute the quantile (the inverse of the CDF) at &lt;var&gt;x&lt;/var&gt; of the univariate distribution which assumes the values in &lt;var&gt;v&lt;/var&gt; with probabilities &lt;var&gt;p&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e74ee60fdfaa9e3bc1adb4a6e52aabebabc6b49" translate="yes" xml:space="preserve">
          <source>For either type of system, the package name may include a version number. The set of required tools and external dependencies does not change frequently, so it is not important that the version exactly match the version you are installing, but you should use the most recent one available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0566df548332f5ef4e913c926fb6024e3ab2ca3b" translate="yes" xml:space="preserve">
          <source>For equal elements, the indices are such that equal elements are listed in the order in which they appeared in the original list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d296acc1e3c24956b95511f658f82667f4c1a22a" translate="yes" xml:space="preserve">
          <source>For even length &lt;var&gt;x&lt;/var&gt;, &lt;code&gt;fftshift&lt;/code&gt; is its own inverse, but odd lengths differ slightly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aed24930fc72cc8b9b237bcfe5762fd3b528ee3" translate="yes" xml:space="preserve">
          <source>For example a simple use of a &lt;code&gt;hggroup&lt;/code&gt; might be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d999f958ac0c206fd2f899ca652a45b00ca211" translate="yes" xml:space="preserve">
          <source>For example the &lt;code&gt;stem&lt;/code&gt; function creates a stem series where each &lt;code&gt;hggroup&lt;/code&gt; of the stem series contains two line objects representing the body and head of the stem. The &lt;code&gt;ydata&lt;/code&gt; property of the &lt;code&gt;hggroup&lt;/code&gt; of the stem series represents the head of the stem, whereas the body of the stem is between the baseline and this value. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c8c49797bb7d335296376b05089da651a20042" translate="yes" xml:space="preserve">
          <source>For example, a plot with 2x3 grid will have plot indices running as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6953c4524fdbe7f11f2281f40967a8f6352026" translate="yes" xml:space="preserve">
          <source>For example, after the expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36ae7dce9d1fd3d34065cd5eb3f99b85defece3" translate="yes" xml:space="preserve">
          <source>For example, any of the strings &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cc1a2eff176c07b0335eb3145548c5095d5c67" translate="yes" xml:space="preserve">
          <source>For example, given the matrix &lt;code&gt;&lt;var&gt;A&lt;/var&gt; = [1, 2; 3, 4]&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81154e8cf04077bf065e030e6df9a9f32770e0d0" translate="yes" xml:space="preserve">
          <source>For example, given the matrix &lt;code&gt;&lt;var&gt;A&lt;/var&gt; = [1, 2; 3, 4]&lt;/code&gt;, and its Schur decomposition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68b97597073f906901dac7c8f0f72aa48dabb3f" translate="yes" xml:space="preserve">
          <source>For example, here is a function that computes the average of the elements of a vector:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1b4b24e41601377d3578473c0e2b2fdffcf4e9" translate="yes" xml:space="preserve">
          <source>For example, here is a function that, when executed, will ring the bell on your terminal (assuming that it is possible to do so):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a759e5f9c6c2cb5bc970eca40ebdcc05423255a0" translate="yes" xml:space="preserve">
          <source>For example, if you invoked Octave using the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59220fafc78b15445e8586e842b6c0a0edd499ae" translate="yes" xml:space="preserve">
          <source>For example, in the conversion specifier &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251d91c23610ea58a15d2a5c4bb1d702554acb22" translate="yes" xml:space="preserve">
          <source>For example, reading the input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f57b34ddf92f93995e71c193b6f010124d0ee0" translate="yes" xml:space="preserve">
          <source>For example, the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ba322fa88d7d51ccdaa1762210033ec635b834" translate="yes" xml:space="preserve">
          <source>For example, the date 730736.65149 (2000-09-07 15:38:09.0934) would be formatted as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0969e259d46f431c33991da7537e693e618f1c" translate="yes" xml:space="preserve">
          <source>For example, the expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5ba9cc78c3228cb377454e793fb2b6b6c8761e" translate="yes" xml:space="preserve">
          <source>For example, the following code finds the eigenvalues of &lt;var&gt;A&lt;/var&gt; which are the roots of &lt;code&gt;poly (&lt;var&gt;A&lt;/var&gt;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0aa02d10297a9191fbd584f45bf3c298f88c1f" translate="yes" xml:space="preserve">
          <source>For example, the property &lt;code&gt;&quot;type&quot;&lt;/code&gt; of the graphics object pointed to by the graphics handle h may be displayed by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6474a004d3edb84a86704e011d0022ccabf6845f" translate="yes" xml:space="preserve">
          <source>For example, the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcdf2f7a7e32995c36873fa1413ebbeda7ef28f2" translate="yes" xml:space="preserve">
          <source>For example, this class uses the convention that indexing with &lt;code&gt;&quot;()&quot;&lt;/code&gt; evaluates the polynomial and indexing with &lt;code&gt;&quot;{}&quot;&lt;/code&gt; returns the &lt;var&gt;n&lt;/var&gt;-th coefficient (of the &lt;var&gt;n&lt;/var&gt;-th power). The code for the &lt;code&gt;subsref&lt;/code&gt; method looks like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd1188224f336b1cc178963d67786d38e68a2c71" translate="yes" xml:space="preserve">
          <source>For example, to display the five most recent commands that you have typed without displaying line numbers, use the command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38585866de7db080512531b499fc7e593c0ae35" translate="yes" xml:space="preserve">
          <source>For example, to pre-increment the variable &lt;var&gt;x&lt;/var&gt;, you would write &lt;code&gt;++&lt;var&gt;x&lt;/var&gt;&lt;/code&gt;. This would add one to &lt;var&gt;x&lt;/var&gt; and then return the new value of &lt;var&gt;x&lt;/var&gt; as the result of the expression. It is exactly the same as the expression &lt;code&gt;&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;x&lt;/var&gt; + 1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f6a3173f4ab3a7193e4ea9680512f9210eef60" translate="yes" xml:space="preserve">
          <source>For example, to verify Euler&amp;rsquo;s Identity,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6a4aed38f4fb1f03101303fccf7113e7645812" translate="yes" xml:space="preserve">
          <source>For figures, the properties &lt;code&gt;&quot;position&quot;&lt;/code&gt;, &lt;code&gt;&quot;units&quot;&lt;/code&gt;, &lt;code&gt;&quot;windowstyle&quot;&lt;/code&gt;, and &lt;code&gt;&quot;paperunits&quot;&lt;/code&gt; are not affected. For axes, the properties &lt;code&gt;&quot;position&quot;&lt;/code&gt; and &lt;code&gt;&quot;units&quot;&lt;/code&gt; are not affected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecff9ac7705da7cc4356a3d69557b3d4e4203a8" translate="yes" xml:space="preserve">
          <source>For formats that accept animations (such as GIF), controls for how long a frame is displayed until it moves to the next one. The value must be scalar (which will applied to all frames in &lt;var&gt;img&lt;/var&gt;), or a vector of length equal to the number of frames in &lt;var&gt;im&lt;/var&gt;. The value is in seconds, must be between 0 and 655.35, and defaults to 0.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd007a4dd643b63cd45510c0da08a51f667b777c" translate="yes" xml:space="preserve">
          <source>For formats that accept animations (such as GIF), controls how many times the sequence is repeated. A value of Inf means an infinite loop (default), a value of 0 or 1 that the sequence is played only once (loops zero times), while a value of 2 or above loops that number of times (looping twice means it plays the complete sequence 3 times). This option is ignored when there is only a single image at the end of writing the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce05c4538938bada2e9f82a617e0a3d8487a4bc" translate="yes" xml:space="preserve">
          <source>For formats that accept animations (such as GIF), controls what happens to a frame before drawing the next one. Its value can be one of the following strings: &quot;doNotSpecify&quot; (default); &quot;leaveInPlace&quot;; &quot;restoreBG&quot;; and &quot;restorePrevious&quot;, or a cell array of those string with length equal to the number of frames in &lt;var&gt;img&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f729763c7a86da0965b0fd4419d4a99527444338" translate="yes" xml:space="preserve">
          <source>For functions that are not written with broadcasting semantics, &lt;code&gt;bsxfun&lt;/code&gt; can be useful for coercing them to broadcast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac068f539b53079e773c738b1ee6a8ab602567ab" translate="yes" xml:space="preserve">
          <source>For information on how to write graphics listener functions see &lt;a href=&quot;callbacks#Callbacks&quot;&gt;Callbacks section&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd302837d948c5046c6a2e2fdfe3e3ca5785717" translate="yes" xml:space="preserve">
          <source>For instance, even better than</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5416a0a5732c74e4c783fc2137c378be470bbefc" translate="yes" xml:space="preserve">
          <source>For matrices, &lt;code&gt;sort&lt;/code&gt; orders the elements within columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d067d3e8c99c04913857a5a6a671793c6101b1" translate="yes" xml:space="preserve">
          <source>For matrix &lt;var&gt;l&lt;/var&gt; &amp;gt; 10, use patchwork rejection method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490a932d65ad90c06d012fee6208dfd5ec9ffab3" translate="yes" xml:space="preserve">
          <source>For matrix &lt;var&gt;l&lt;/var&gt; &amp;le; 10, use inversion method.[2]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2baad34579b0d53863e783f1929c3dad334aaa2d" translate="yes" xml:space="preserve">
          <source>For matrix and vector arguments, the increment and decrement operators work on each element of the operand.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd8b066aa9d237c2adbcd92fb8ede7d2575b2ec" translate="yes" xml:space="preserve">
          <source>For more complex manipulations, such as searching, replacing, and general regular expressions, the following functions come with Octave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d976b9466e5dc4b6b62830efdd34f3b63f9d5cef" translate="yes" xml:space="preserve">
          <source>For more control over audio playback, use the &lt;code&gt;audioplayer&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1031f81f0488f78ce519ee8ad1c16fa310f294f" translate="yes" xml:space="preserve">
          <source>For more control over audio recording, use the &lt;code&gt;audiorecorder&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab5bd936db0c8d6457a56f617019526962d37dd" translate="yes" xml:space="preserve">
          <source>For more control, the light position can be specified by an azimuthal rotation &lt;var&gt;az&lt;/var&gt; and an elevation angle &lt;var&gt;el&lt;/var&gt;, both in degrees, relative to the current properties of the camera.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e523431d3601da779093d84b4c80b873da85a36c" translate="yes" xml:space="preserve">
          <source>For more details on the available</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11bef64669005475223776ef881a55b3210f802c" translate="yes" xml:space="preserve">
          <source>For most parse errors, Octave uses a caret (&amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdb7117e2214c0e4a98021f01f4a08d2b33c3b0" translate="yes" xml:space="preserve">
          <source>For non square matrices, the user can also utilize the &lt;code&gt;spaugment&lt;/code&gt; function to find a least squares solution to a linear equation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6858f57a74fb65b137ca13f17a7454f0f5f5fd" translate="yes" xml:space="preserve">
          <source>For non-integers see the generalized factorial function &lt;code&gt;gamma&lt;/code&gt;. Note that the factorial function grows large quite quickly, and even with double precision values overflow will occur if &lt;var&gt;n&lt;/var&gt; &amp;gt; 171. For such cases consider &lt;code&gt;gammaln&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1058f773b2c1beed529866d88d19400f9d9e020" translate="yes" xml:space="preserve">
          <source>For non-page formats&amp;mdash;for example, image formats like JPEG&amp;mdash;the width and height of the output are specified by the figure&amp;rsquo;s &lt;code&gt;paperposition(3:4)&lt;/code&gt; property values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a0cf6f81a43cb744987a4088dea4c89ce4030d2" translate="yes" xml:space="preserve">
          <source>For numerical input, each element is converted to the corresponding ASCII character. A range error results if an input is outside the ASCII range (0-255).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ace9ed0f7d2283712f19dc2923708e30640f1ae" translate="yes" xml:space="preserve">
          <source>For outputs to paged formats, for example, PostScript and PDF, the page size is specified by the figure&amp;rsquo;s &lt;code&gt;papersize&lt;/code&gt; property together with the &lt;code&gt;paperunits&lt;/code&gt; property. The location and size of the plot on the page are specified by the figure&amp;rsquo;s &lt;code&gt;paperposition&lt;/code&gt; property. The orientation of the page is specified by the figure&amp;rsquo;s &lt;code&gt;paperorientation&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5d3c2990e883ed3207f9082c0cfa78583d9dcd" translate="yes" xml:space="preserve">
          <source>For plotting, &lt;var&gt;obj&lt;/var&gt; is a handle to a graphics object. Otherwise, &lt;var&gt;obj&lt;/var&gt; should be an instance of a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585a037c7023a60077a3d3fe42fd1b3e788fadb8" translate="yes" xml:space="preserve">
          <source>For repeated indices, &lt;code&gt;sparse&lt;/code&gt; adds the corresponding value. To take the minimum instead, use &lt;code&gt;min&lt;/code&gt; as an accumulator function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009cdf58003fec88af768ecf2effe962a6b74883" translate="yes" xml:space="preserve">
          <source>For scalar &lt;var&gt;l&lt;/var&gt; &amp;gt; 12, use rejection method.[1]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0125ba6894981842df94f085c9f41310b238d85" translate="yes" xml:space="preserve">
          <source>For scalar &lt;var&gt;l&lt;/var&gt; &amp;le; 12, use direct method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f631d870273d91a07af0f1741e70c2642ea9ab1e" translate="yes" xml:space="preserve">
          <source>For simplicity, a more advanced implementation of a &lt;code&gt;classdef&lt;/code&gt; class is shown using the &lt;code&gt;polynomial&lt;/code&gt; example again (see &lt;a href=&quot;creating-a-class#Creating-a-Class&quot;&gt;Creating a Class&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6244d882833618558b283e35393982de3bad429" translate="yes" xml:space="preserve">
          <source>For static fields, &lt;var&gt;obj&lt;/var&gt; can be a string representing the fully qualified name of the corresponding class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957d5f28bb1ad06f71d6840b51d2d16dd0e17cdd" translate="yes" xml:space="preserve">
          <source>For static fields, &lt;var&gt;obj&lt;/var&gt; can be a string representing the fully qualified named of the corresponding Java class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c3eda444f741fc189b06093765a75d97b31212" translate="yes" xml:space="preserve">
          <source>For static methods, &lt;var&gt;obj&lt;/var&gt; can be a string representing the fully qualified name of the corresponding class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d318c3463a1bd85f56dbdd615dbb24767bebff2" translate="yes" xml:space="preserve">
          <source>For surface objects, the &lt;code&gt;&quot;VertexNormals&quot;&lt;/code&gt; property contains equivalent information, except possibly near the boundary of the surface where different interpolation schemes may yield slightly different values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c08ec04bbaeca22e6d34ca05d85f5d89a37f3d" translate="yes" xml:space="preserve">
          <source>For system-wide installations this can be changed in the same way using the &lt;code&gt;pkg global_list&lt;/code&gt; command. If these commands are called without a new path, the current path will be returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73cda6149f3eb4f23f7d94bd9d9d624b41b57d3" translate="yes" xml:space="preserve">
          <source>For testing if a system &lt;code&gt;&lt;var&gt;A&lt;/var&gt;*&lt;var&gt;x&lt;/var&gt; = &lt;var&gt;b&lt;/var&gt;&lt;/code&gt; of linear equations is solvable, one can use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabc252d1e3c47a35d54d9dee2f9ab3978e46196" translate="yes" xml:space="preserve">
          <source>For the &quot;./&quot; operator &lt;code&gt;&lt;var&gt;s&lt;/var&gt; ./ 2&lt;/code&gt; has no problems, but &lt;code&gt;2 ./ &lt;var&gt;s&lt;/var&gt;&lt;/code&gt; involves a large number of infinity terms as well and is equally a full matrix. The case of &lt;code&gt;&lt;var&gt;s&lt;/var&gt; ./ &lt;var&gt;s&lt;/var&gt;&lt;/code&gt; involves terms like &lt;code&gt;0 ./ 0&lt;/code&gt; which is a &lt;code&gt;NaN&lt;/code&gt; and so this is equally a full matrix with the zero elements of &lt;var&gt;s&lt;/var&gt; filled with &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c09d890823b9f5580c9aa62396c3d192bff899" translate="yes" xml:space="preserve">
          <source>For the &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3dd32f03d83cae0a1a803ff1cf7b80882b30751" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;FIRfilter&lt;/code&gt; class, more control about the object display is desired. Therefore, the &lt;code&gt;display&lt;/code&gt; method rather than the &lt;code&gt;disp&lt;/code&gt; method is overloaded (see &lt;a href=&quot;class-methods#Class-Methods&quot;&gt;Class Methods&lt;/a&gt;). A simple example might be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6a680ce509dc6a273306b385a05e5cd6db3768" translate="yes" xml:space="preserve">
          <source>For the binary element-by-element boolean operators, both subexpressions &lt;var&gt;boolean1&lt;/var&gt; and &lt;var&gt;boolean2&lt;/var&gt; are evaluated before computing the result. This can make a difference when the expressions have side effects. For example, in the expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d38652bfe8a08c305066b035d2a3a99232283306" translate="yes" xml:space="preserve">
          <source>For the binary operators, broadcasting rules apply. See &lt;a href=&quot;broadcasting#Broadcasting&quot;&gt;Broadcasting&lt;/a&gt;. In particular, if one of the operands is a scalar and the other a matrix, the operator is applied to the scalar and each element of the matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9cf14a2c9d893854542fb03d487c11ceaadfb9e" translate="yes" xml:space="preserve">
          <source>For the opposite conventions see the &lt;code&gt;mod&lt;/code&gt; function. In general, &lt;code&gt;rem&lt;/code&gt; is best when computing the remainder after division of two &lt;em&gt;positive&lt;/em&gt; numbers. For negative numbers, or when the values are periodic, &lt;code&gt;mod&lt;/code&gt; is a better choice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c649d944ffcac1a9b033ee39dc8f1687a0a37f13" translate="yes" xml:space="preserve">
          <source>For the opposite conventions see the &lt;code&gt;rem&lt;/code&gt; function. In general, &lt;code&gt;mod&lt;/code&gt; is a better choice than &lt;code&gt;rem&lt;/code&gt; when any of the inputs are negative numbers or when the values are periodic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d372f83eb0fc7965497286241c0c62bafb1850" translate="yes" xml:space="preserve">
          <source>For the reduction, it is necessary that vertices of touching faces are shared. Shared vertices are detected automatically. This detection can be skipped by passing the optional string argument &lt;code&gt;&quot;fast&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8595993432517d97ed86e0bb3e0b18c63fa12bc9" translate="yes" xml:space="preserve">
          <source>For the same string, the SHA-1 hash value is calculated with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40c6708c55cc3d9b279019d9dd8444539c54136" translate="yes" xml:space="preserve">
          <source>For the signed &amp;lsquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92f33327ccc0cf5e3ddcc058c1df76d8e82c7cd" translate="yes" xml:space="preserve">
          <source>For this constant-value integrand, the result is a volume which is 1/8th of a unit sphere or &lt;code&gt;1/8 * 4/3 * pi&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4396c07e424e3c12245ee88778c91239970b5002" translate="yes" xml:space="preserve">
          <source>For this constant-value integrand, the result is a volume which is just &lt;code&gt;&lt;var&gt;Length&lt;/var&gt; * &lt;var&gt;Width&lt;/var&gt; * &lt;var&gt;Height&lt;/var&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f81714ff3f1f6389069ec6b5f2f76da562f4d2" translate="yes" xml:space="preserve">
          <source>For this example only the constructor needs changing, and all other class methods stay the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684b79b61f55b4ccdf4491d7466ea08009e2aa72" translate="yes" xml:space="preserve">
          <source>For three-dimensional plots the aspect ratio can be set for data with &lt;code&gt;daspect&lt;/code&gt; and for the plot box with &lt;code&gt;pbaspect&lt;/code&gt;. See &lt;a href=&quot;axis-configuration#Axis-Configuration&quot;&gt;Axis Configuration&lt;/a&gt;, for controlling the x-, y-, and z-limits for plotting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1788efdd8933928bfebe8e67a1dde51fec191d" translate="yes" xml:space="preserve">
          <source>For two data vectors &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;, Spearman&amp;rsquo;s &lt;var&gt;rho&lt;/var&gt; is the correlation coefficient of the ranks of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9bcc56cb47ca95af5d6ec1fb50056f154d1fe53" translate="yes" xml:space="preserve">
          <source>For two data vectors &lt;var&gt;x&lt;/var&gt;, &lt;var&gt;y&lt;/var&gt; of common length &lt;em&gt;N&lt;/em&gt;, Kendall&amp;rsquo;s &lt;var&gt;tau&lt;/var&gt; is the correlation of the signs of all rank differences of &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt;; i.e., if both &lt;var&gt;x&lt;/var&gt; and &lt;var&gt;y&lt;/var&gt; have distinct entries, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67ec17e6451a7a816cd3fbcc22837ff07e78af5" translate="yes" xml:space="preserve">
          <source>For two matrices (or a matrix and a scalar), return the pairwise maximum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad2ef216be23184dfb07237d0be6363db9a7d041" translate="yes" xml:space="preserve">
          <source>For two matrices (or a matrix and a scalar), return the pairwise minimum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166aa6c0ae7bd2e3053d03379c43dd3044307671" translate="yes" xml:space="preserve">
          <source>For unconvertible scalar or character string input &lt;code&gt;str2double&lt;/code&gt; returns a NaN. Similarly, for character array input &lt;code&gt;str2double&lt;/code&gt; returns a NaN for any row of &lt;var&gt;s&lt;/var&gt; that could not be converted. For a cell array, &lt;code&gt;str2double&lt;/code&gt; returns a NaN for any element of &lt;var&gt;s&lt;/var&gt; for which conversion fails. Note that numeric elements in a mixed string/numeric cell array are not strings and the conversion will fail for these elements and return NaN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ffb9093feb0e6e6e107bd6a4a9f3c6aac13d739" translate="yes" xml:space="preserve">
          <source>Force Octave to assume the file contains columns of numbers in text format without any header or other information. Data in the file will be loaded as a single numeric matrix with the name of the variable derived from the name of the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fbe8358c24c6ecc19409d5c9b6aab389bd6d3c5" translate="yes" xml:space="preserve">
          <source>Force Octave to assume the file is in &lt;small&gt;HDF5&lt;/small&gt; format. (&lt;small&gt;HDF5&lt;/small&gt; is a free, portable binary format developed by the National Center for Supercomputing Applications at the University of Illinois.) Note that Octave can read &lt;small&gt;HDF5&lt;/small&gt; files not created by itself, but may skip some datasets in formats that it cannot support. This format is only available if Octave was built with a link to the &lt;small&gt;HDF5&lt;/small&gt; libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eea60ee3ac43747c09fee1487089168cb69824e" translate="yes" xml:space="preserve">
          <source>Force Octave to assume the file is in &lt;small&gt;MATLAB&lt;/small&gt;&amp;rsquo;s version 6 or 7 binary format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989fad888268196b3a9f9a87866835b36e447c5c" translate="yes" xml:space="preserve">
          <source>Force Octave to assume the file is in Octave&amp;rsquo;s binary format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc56db9d6950dc6e413ab341233de1e4947ab138" translate="yes" xml:space="preserve">
          <source>Force Octave to assume the file is in Octave&amp;rsquo;s text format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9426c373a5adad5c4586809b66486700ec1df2" translate="yes" xml:space="preserve">
          <source>Force Octave to assume the file is in the binary format written by &lt;small&gt;MATLAB&lt;/small&gt; version 4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521ba25e645ee388e314c0920c9b543a45fb5599" translate="yes" xml:space="preserve">
          <source>Force a square axis aspect ratio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b0743460a432d6ea11b1befeebec3b6927fb5e" translate="yes" xml:space="preserve">
          <source>Force a tight or loose bounding box for EPS files. The default is loose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9300b67fb6eba2c09cde85086fb773cf954d3f0" translate="yes" xml:space="preserve">
          <source>Force all lines to be solid or dashed, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4affde92b9bf63e7209822b7ab8d89b05da17d21" translate="yes" xml:space="preserve">
          <source>Force interactive behavior. This can be useful for running Octave via a remote shell command or inside an Emacs shell buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a00fed7f6854214dfa87184ff3c9e0d57ce220" translate="yes" xml:space="preserve">
          <source>Force readline use for command-line editing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab60d34121adcca4ff31447da2010f1ed1d4e3a0" translate="yes" xml:space="preserve">
          <source>Force x-axis unit distance to equal y-axis (and z-axis) unit distance.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
